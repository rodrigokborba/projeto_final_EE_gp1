

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Tue Sep 10 16:38:31 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og9 
     1                           	processor	16F1827
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     6                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,noexec
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    17                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    19                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    20                           	psect	text1,local,class=CODE,merge=1,delta=2
    21                           	psect	text2,local,class=CODE,merge=1,delta=2
    22                           	psect	text3,local,class=CODE,merge=1,delta=2
    23                           	psect	text4,local,class=CODE,merge=1,delta=2
    24                           	psect	text5,local,class=CODE,merge=1,delta=2
    25                           	psect	text6,local,class=CODE,merge=1,delta=2
    26                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text8,local,class=CODE,merge=1,delta=2
    28                           	psect	text9,local,class=CODE,merge=1,delta=2
    29                           	psect	text10,local,class=CODE,merge=1,delta=2
    30                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text13,local,class=CODE,merge=1,delta=2
    33                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text15,local,class=CODE,merge=1,delta=2
    35                           	psect	text16,local,class=CODE,merge=1,delta=2
    36                           	psect	text17,local,class=CODE,merge=1,delta=2
    37                           	psect	text18,local,class=CODE,merge=1,delta=2
    38                           	psect	text19,local,class=CODE,merge=1,delta=2
    39                           	psect	text20,local,class=CODE,merge=1,delta=2
    40                           	psect	text21,local,class=CODE,merge=1,delta=2
    41                           	psect	text22,local,class=CODE,merge=1,delta=2
    42                           	psect	text23,local,class=CODE,merge=1,delta=2
    43                           	psect	text24,local,class=CODE,merge=1,delta=2
    44                           	psect	text25,local,class=CODE,merge=1,delta=2
    45                           	psect	text26,local,class=CODE,merge=1,delta=2
    46                           	psect	text27,local,class=CODE,merge=1,delta=2
    47                           	psect	text28,local,class=CODE,merge=1,delta=2
    48                           	psect	text29,local,class=CODE,merge=1,delta=2
    49                           	psect	text30,local,class=CODE,merge=1,delta=2
    50                           	psect	text31,local,class=CODE,merge=1,delta=2
    51                           	psect	text32,local,class=CODE,merge=1,delta=2
    52                           	psect	text33,local,class=CODE,merge=1,delta=2
    53                           	psect	text34,local,class=CODE,merge=1,delta=2
    54                           	psect	text35,local,class=CODE,merge=1,delta=2
    55                           	psect	text36,local,class=CODE,merge=1,delta=2
    56                           	psect	text37,local,class=CODE,merge=1,delta=2
    57                           	psect	text38,local,class=CODE,merge=1,delta=2
    58                           	psect	text39,local,class=CODE,merge=1,delta=2
    59                           	psect	text40,local,class=CODE,merge=1,delta=2
    60                           	psect	text41,local,class=CODE,merge=1,delta=2
    61                           	psect	text42,local,class=CODE,merge=1,delta=2
    62                           	psect	text43,local,class=CODE,merge=1,delta=2
    63                           	psect	intentry,global,class=CODE,delta=2
    64                           	psect	text45,local,class=CODE,merge=1,delta=2
    65                           	psect	text46,local,class=CODE,merge=1,delta=2
    66                           	psect	text47,local,class=CODE,merge=1,delta=2
    67                           	psect	text48,local,class=CODE,merge=1,delta=2
    68                           	psect	text49,local,class=CODE,merge=1,delta=2
    69                           	psect	text50,local,class=CODE,merge=1,delta=2,group=1
    70                           	psect	text51,local,class=CODE,merge=1,delta=2,group=1
    71                           	psect	text52,local,class=CODE,merge=1,delta=2,group=1
    72                           	psect	text53,local,class=CODE,merge=1,delta=2
    73                           	psect	text54,local,class=CODE,merge=1,delta=2
    74                           	psect	text55,local,class=CODE,merge=1,delta=2
    75                           	psect	text56,local,class=CODE,merge=1,delta=2
    76                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    77                           	dabs	1,0x7E,2
    78     0000                     
    79                           ; Generated 07/09/2023 GMT
    80                           ; 
    81                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    82                           ; All rights reserved.
    83                           ; 
    84                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    85                           ; 
    86                           ; Redistribution and use in source and binary forms, with or without modification, are
    87                           ; permitted provided that the following conditions are met:
    88                           ; 
    89                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    90                           ;        conditions and the following disclaimer.
    91                           ; 
    92                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    93                           ;        of conditions and the following disclaimer in the documentation and/or other
    94                           ;        materials provided with the distribution. Publication is not required when
    95                           ;        this file is used in an embedded application.
    96                           ; 
    97                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    98                           ;        software without specific prior written permission.
    99                           ; 
   100                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   101                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   102                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   103                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   104                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   105                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   106                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   107                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   108                           ; 
   109                           ; 
   110                           ; Code-generator required, PIC16F1827 Definitions
   111                           ; 
   112                           ; SFR Addresses
   113     0000                     	;# 
   114     0001                     	;# 
   115     0002                     	;# 
   116     0003                     	;# 
   117     0004                     	;# 
   118     0005                     	;# 
   119     0006                     	;# 
   120     0007                     	;# 
   121     0008                     	;# 
   122     0009                     	;# 
   123     000A                     	;# 
   124     000B                     	;# 
   125     000C                     	;# 
   126     000D                     	;# 
   127     0011                     	;# 
   128     0012                     	;# 
   129     0013                     	;# 
   130     0014                     	;# 
   131     0015                     	;# 
   132     0016                     	;# 
   133     0016                     	;# 
   134     0017                     	;# 
   135     0018                     	;# 
   136     0019                     	;# 
   137     001A                     	;# 
   138     001B                     	;# 
   139     001C                     	;# 
   140     001E                     	;# 
   141     001F                     	;# 
   142     008C                     	;# 
   143     008D                     	;# 
   144     0091                     	;# 
   145     0092                     	;# 
   146     0093                     	;# 
   147     0094                     	;# 
   148     0095                     	;# 
   149     0096                     	;# 
   150     0097                     	;# 
   151     0098                     	;# 
   152     0099                     	;# 
   153     009A                     	;# 
   154     009B                     	;# 
   155     009B                     	;# 
   156     009C                     	;# 
   157     009D                     	;# 
   158     009E                     	;# 
   159     010C                     	;# 
   160     010D                     	;# 
   161     0111                     	;# 
   162     0112                     	;# 
   163     0113                     	;# 
   164     0114                     	;# 
   165     0115                     	;# 
   166     0116                     	;# 
   167     0117                     	;# 
   168     0118                     	;# 
   169     0119                     	;# 
   170     011A                     	;# 
   171     011B                     	;# 
   172     011D                     	;# 
   173     011E                     	;# 
   174     018C                     	;# 
   175     018D                     	;# 
   176     0191                     	;# 
   177     0191                     	;# 
   178     0192                     	;# 
   179     0193                     	;# 
   180     0193                     	;# 
   181     0193                     	;# 
   182     0194                     	;# 
   183     0195                     	;# 
   184     0196                     	;# 
   185     0199                     	;# 
   186     019A                     	;# 
   187     019B                     	;# 
   188     019B                     	;# 
   189     019B                     	;# 
   190     019B                     	;# 
   191     019C                     	;# 
   192     019C                     	;# 
   193     019D                     	;# 
   194     019E                     	;# 
   195     019F                     	;# 
   196     020C                     	;# 
   197     020D                     	;# 
   198     0211                     	;# 
   199     0211                     	;# 
   200     0212                     	;# 
   201     0212                     	;# 
   202     0213                     	;# 
   203     0213                     	;# 
   204     0214                     	;# 
   205     0214                     	;# 
   206     0215                     	;# 
   207     0215                     	;# 
   208     0215                     	;# 
   209     0216                     	;# 
   210     0216                     	;# 
   211     0217                     	;# 
   212     0217                     	;# 
   213     0219                     	;# 
   214     021A                     	;# 
   215     021B                     	;# 
   216     021C                     	;# 
   217     021D                     	;# 
   218     021E                     	;# 
   219     021F                     	;# 
   220     0291                     	;# 
   221     0291                     	;# 
   222     0292                     	;# 
   223     0293                     	;# 
   224     0294                     	;# 
   225     0295                     	;# 
   226     0295                     	;# 
   227     0296                     	;# 
   228     0298                     	;# 
   229     0298                     	;# 
   230     0299                     	;# 
   231     029A                     	;# 
   232     029B                     	;# 
   233     029C                     	;# 
   234     029C                     	;# 
   235     029D                     	;# 
   236     029E                     	;# 
   237     029E                     	;# 
   238     0311                     	;# 
   239     0311                     	;# 
   240     0312                     	;# 
   241     0313                     	;# 
   242     0318                     	;# 
   243     0318                     	;# 
   244     0319                     	;# 
   245     031A                     	;# 
   246     0394                     	;# 
   247     0395                     	;# 
   248     0396                     	;# 
   249     039A                     	;# 
   250     039C                     	;# 
   251     039D                     	;# 
   252     039E                     	;# 
   253     039F                     	;# 
   254     0415                     	;# 
   255     0416                     	;# 
   256     0417                     	;# 
   257     041C                     	;# 
   258     041D                     	;# 
   259     041E                     	;# 
   260     0FE4                     	;# 
   261     0FE5                     	;# 
   262     0FE6                     	;# 
   263     0FE7                     	;# 
   264     0FE8                     	;# 
   265     0FE9                     	;# 
   266     0FEA                     	;# 
   267     0FEB                     	;# 
   268     0FED                     	;# 
   269     0FEE                     	;# 
   270     0FEF                     	;# 
   271     0000                     	;# 
   272     0001                     	;# 
   273     0002                     	;# 
   274     0003                     	;# 
   275     0004                     	;# 
   276     0005                     	;# 
   277     0006                     	;# 
   278     0007                     	;# 
   279     0008                     	;# 
   280     0009                     	;# 
   281     000A                     	;# 
   282     000B                     	;# 
   283     000C                     	;# 
   284     000D                     	;# 
   285     0011                     	;# 
   286     0012                     	;# 
   287     0013                     	;# 
   288     0014                     	;# 
   289     0015                     	;# 
   290     0016                     	;# 
   291     0016                     	;# 
   292     0017                     	;# 
   293     0018                     	;# 
   294     0019                     	;# 
   295     001A                     	;# 
   296     001B                     	;# 
   297     001C                     	;# 
   298     001E                     	;# 
   299     001F                     	;# 
   300     008C                     	;# 
   301     008D                     	;# 
   302     0091                     	;# 
   303     0092                     	;# 
   304     0093                     	;# 
   305     0094                     	;# 
   306     0095                     	;# 
   307     0096                     	;# 
   308     0097                     	;# 
   309     0098                     	;# 
   310     0099                     	;# 
   311     009A                     	;# 
   312     009B                     	;# 
   313     009B                     	;# 
   314     009C                     	;# 
   315     009D                     	;# 
   316     009E                     	;# 
   317     010C                     	;# 
   318     010D                     	;# 
   319     0111                     	;# 
   320     0112                     	;# 
   321     0113                     	;# 
   322     0114                     	;# 
   323     0115                     	;# 
   324     0116                     	;# 
   325     0117                     	;# 
   326     0118                     	;# 
   327     0119                     	;# 
   328     011A                     	;# 
   329     011B                     	;# 
   330     011D                     	;# 
   331     011E                     	;# 
   332     018C                     	;# 
   333     018D                     	;# 
   334     0191                     	;# 
   335     0191                     	;# 
   336     0192                     	;# 
   337     0193                     	;# 
   338     0193                     	;# 
   339     0193                     	;# 
   340     0194                     	;# 
   341     0195                     	;# 
   342     0196                     	;# 
   343     0199                     	;# 
   344     019A                     	;# 
   345     019B                     	;# 
   346     019B                     	;# 
   347     019B                     	;# 
   348     019B                     	;# 
   349     019C                     	;# 
   350     019C                     	;# 
   351     019D                     	;# 
   352     019E                     	;# 
   353     019F                     	;# 
   354     020C                     	;# 
   355     020D                     	;# 
   356     0211                     	;# 
   357     0211                     	;# 
   358     0212                     	;# 
   359     0212                     	;# 
   360     0213                     	;# 
   361     0213                     	;# 
   362     0214                     	;# 
   363     0214                     	;# 
   364     0215                     	;# 
   365     0215                     	;# 
   366     0215                     	;# 
   367     0216                     	;# 
   368     0216                     	;# 
   369     0217                     	;# 
   370     0217                     	;# 
   371     0219                     	;# 
   372     021A                     	;# 
   373     021B                     	;# 
   374     021C                     	;# 
   375     021D                     	;# 
   376     021E                     	;# 
   377     021F                     	;# 
   378     0291                     	;# 
   379     0291                     	;# 
   380     0292                     	;# 
   381     0293                     	;# 
   382     0294                     	;# 
   383     0295                     	;# 
   384     0295                     	;# 
   385     0296                     	;# 
   386     0298                     	;# 
   387     0298                     	;# 
   388     0299                     	;# 
   389     029A                     	;# 
   390     029B                     	;# 
   391     029C                     	;# 
   392     029C                     	;# 
   393     029D                     	;# 
   394     029E                     	;# 
   395     029E                     	;# 
   396     0311                     	;# 
   397     0311                     	;# 
   398     0312                     	;# 
   399     0313                     	;# 
   400     0318                     	;# 
   401     0318                     	;# 
   402     0319                     	;# 
   403     031A                     	;# 
   404     0394                     	;# 
   405     0395                     	;# 
   406     0396                     	;# 
   407     039A                     	;# 
   408     039C                     	;# 
   409     039D                     	;# 
   410     039E                     	;# 
   411     039F                     	;# 
   412     0415                     	;# 
   413     0416                     	;# 
   414     0417                     	;# 
   415     041C                     	;# 
   416     041D                     	;# 
   417     041E                     	;# 
   418     0FE4                     	;# 
   419     0FE5                     	;# 
   420     0FE6                     	;# 
   421     0FE7                     	;# 
   422     0FE8                     	;# 
   423     0FE9                     	;# 
   424     0FEA                     	;# 
   425     0FEB                     	;# 
   426     0FED                     	;# 
   427     0FEE                     	;# 
   428     0FEF                     	;# 
   429     0000                     	;# 
   430     0001                     	;# 
   431     0002                     	;# 
   432     0003                     	;# 
   433     0004                     	;# 
   434     0005                     	;# 
   435     0006                     	;# 
   436     0007                     	;# 
   437     0008                     	;# 
   438     0009                     	;# 
   439     000A                     	;# 
   440     000B                     	;# 
   441     000C                     	;# 
   442     000D                     	;# 
   443     0011                     	;# 
   444     0012                     	;# 
   445     0013                     	;# 
   446     0014                     	;# 
   447     0015                     	;# 
   448     0016                     	;# 
   449     0016                     	;# 
   450     0017                     	;# 
   451     0018                     	;# 
   452     0019                     	;# 
   453     001A                     	;# 
   454     001B                     	;# 
   455     001C                     	;# 
   456     001E                     	;# 
   457     001F                     	;# 
   458     008C                     	;# 
   459     008D                     	;# 
   460     0091                     	;# 
   461     0092                     	;# 
   462     0093                     	;# 
   463     0094                     	;# 
   464     0095                     	;# 
   465     0096                     	;# 
   466     0097                     	;# 
   467     0098                     	;# 
   468     0099                     	;# 
   469     009A                     	;# 
   470     009B                     	;# 
   471     009B                     	;# 
   472     009C                     	;# 
   473     009D                     	;# 
   474     009E                     	;# 
   475     010C                     	;# 
   476     010D                     	;# 
   477     0111                     	;# 
   478     0112                     	;# 
   479     0113                     	;# 
   480     0114                     	;# 
   481     0115                     	;# 
   482     0116                     	;# 
   483     0117                     	;# 
   484     0118                     	;# 
   485     0119                     	;# 
   486     011A                     	;# 
   487     011B                     	;# 
   488     011D                     	;# 
   489     011E                     	;# 
   490     018C                     	;# 
   491     018D                     	;# 
   492     0191                     	;# 
   493     0191                     	;# 
   494     0192                     	;# 
   495     0193                     	;# 
   496     0193                     	;# 
   497     0193                     	;# 
   498     0194                     	;# 
   499     0195                     	;# 
   500     0196                     	;# 
   501     0199                     	;# 
   502     019A                     	;# 
   503     019B                     	;# 
   504     019B                     	;# 
   505     019B                     	;# 
   506     019B                     	;# 
   507     019C                     	;# 
   508     019C                     	;# 
   509     019D                     	;# 
   510     019E                     	;# 
   511     019F                     	;# 
   512     020C                     	;# 
   513     020D                     	;# 
   514     0211                     	;# 
   515     0211                     	;# 
   516     0212                     	;# 
   517     0212                     	;# 
   518     0213                     	;# 
   519     0213                     	;# 
   520     0214                     	;# 
   521     0214                     	;# 
   522     0215                     	;# 
   523     0215                     	;# 
   524     0215                     	;# 
   525     0216                     	;# 
   526     0216                     	;# 
   527     0217                     	;# 
   528     0217                     	;# 
   529     0219                     	;# 
   530     021A                     	;# 
   531     021B                     	;# 
   532     021C                     	;# 
   533     021D                     	;# 
   534     021E                     	;# 
   535     021F                     	;# 
   536     0291                     	;# 
   537     0291                     	;# 
   538     0292                     	;# 
   539     0293                     	;# 
   540     0294                     	;# 
   541     0295                     	;# 
   542     0295                     	;# 
   543     0296                     	;# 
   544     0298                     	;# 
   545     0298                     	;# 
   546     0299                     	;# 
   547     029A                     	;# 
   548     029B                     	;# 
   549     029C                     	;# 
   550     029C                     	;# 
   551     029D                     	;# 
   552     029E                     	;# 
   553     029E                     	;# 
   554     0311                     	;# 
   555     0311                     	;# 
   556     0312                     	;# 
   557     0313                     	;# 
   558     0318                     	;# 
   559     0318                     	;# 
   560     0319                     	;# 
   561     031A                     	;# 
   562     0394                     	;# 
   563     0395                     	;# 
   564     0396                     	;# 
   565     039A                     	;# 
   566     039C                     	;# 
   567     039D                     	;# 
   568     039E                     	;# 
   569     039F                     	;# 
   570     0415                     	;# 
   571     0416                     	;# 
   572     0417                     	;# 
   573     041C                     	;# 
   574     041D                     	;# 
   575     041E                     	;# 
   576     0FE4                     	;# 
   577     0FE5                     	;# 
   578     0FE6                     	;# 
   579     0FE7                     	;# 
   580     0FE8                     	;# 
   581     0FE9                     	;# 
   582     0FEA                     	;# 
   583     0FEB                     	;# 
   584     0FED                     	;# 
   585     0FEE                     	;# 
   586     0FEF                     	;# 
   587     0000                     	;# 
   588     0001                     	;# 
   589     0002                     	;# 
   590     0003                     	;# 
   591     0004                     	;# 
   592     0005                     	;# 
   593     0006                     	;# 
   594     0007                     	;# 
   595     0008                     	;# 
   596     0009                     	;# 
   597     000A                     	;# 
   598     000B                     	;# 
   599     000C                     	;# 
   600     000D                     	;# 
   601     0011                     	;# 
   602     0012                     	;# 
   603     0013                     	;# 
   604     0014                     	;# 
   605     0015                     	;# 
   606     0016                     	;# 
   607     0016                     	;# 
   608     0017                     	;# 
   609     0018                     	;# 
   610     0019                     	;# 
   611     001A                     	;# 
   612     001B                     	;# 
   613     001C                     	;# 
   614     001E                     	;# 
   615     001F                     	;# 
   616     008C                     	;# 
   617     008D                     	;# 
   618     0091                     	;# 
   619     0092                     	;# 
   620     0093                     	;# 
   621     0094                     	;# 
   622     0095                     	;# 
   623     0096                     	;# 
   624     0097                     	;# 
   625     0098                     	;# 
   626     0099                     	;# 
   627     009A                     	;# 
   628     009B                     	;# 
   629     009B                     	;# 
   630     009C                     	;# 
   631     009D                     	;# 
   632     009E                     	;# 
   633     010C                     	;# 
   634     010D                     	;# 
   635     0111                     	;# 
   636     0112                     	;# 
   637     0113                     	;# 
   638     0114                     	;# 
   639     0115                     	;# 
   640     0116                     	;# 
   641     0117                     	;# 
   642     0118                     	;# 
   643     0119                     	;# 
   644     011A                     	;# 
   645     011B                     	;# 
   646     011D                     	;# 
   647     011E                     	;# 
   648     018C                     	;# 
   649     018D                     	;# 
   650     0191                     	;# 
   651     0191                     	;# 
   652     0192                     	;# 
   653     0193                     	;# 
   654     0193                     	;# 
   655     0193                     	;# 
   656     0194                     	;# 
   657     0195                     	;# 
   658     0196                     	;# 
   659     0199                     	;# 
   660     019A                     	;# 
   661     019B                     	;# 
   662     019B                     	;# 
   663     019B                     	;# 
   664     019B                     	;# 
   665     019C                     	;# 
   666     019C                     	;# 
   667     019D                     	;# 
   668     019E                     	;# 
   669     019F                     	;# 
   670     020C                     	;# 
   671     020D                     	;# 
   672     0211                     	;# 
   673     0211                     	;# 
   674     0212                     	;# 
   675     0212                     	;# 
   676     0213                     	;# 
   677     0213                     	;# 
   678     0214                     	;# 
   679     0214                     	;# 
   680     0215                     	;# 
   681     0215                     	;# 
   682     0215                     	;# 
   683     0216                     	;# 
   684     0216                     	;# 
   685     0217                     	;# 
   686     0217                     	;# 
   687     0219                     	;# 
   688     021A                     	;# 
   689     021B                     	;# 
   690     021C                     	;# 
   691     021D                     	;# 
   692     021E                     	;# 
   693     021F                     	;# 
   694     0291                     	;# 
   695     0291                     	;# 
   696     0292                     	;# 
   697     0293                     	;# 
   698     0294                     	;# 
   699     0295                     	;# 
   700     0295                     	;# 
   701     0296                     	;# 
   702     0298                     	;# 
   703     0298                     	;# 
   704     0299                     	;# 
   705     029A                     	;# 
   706     029B                     	;# 
   707     029C                     	;# 
   708     029C                     	;# 
   709     029D                     	;# 
   710     029E                     	;# 
   711     029E                     	;# 
   712     0311                     	;# 
   713     0311                     	;# 
   714     0312                     	;# 
   715     0313                     	;# 
   716     0318                     	;# 
   717     0318                     	;# 
   718     0319                     	;# 
   719     031A                     	;# 
   720     0394                     	;# 
   721     0395                     	;# 
   722     0396                     	;# 
   723     039A                     	;# 
   724     039C                     	;# 
   725     039D                     	;# 
   726     039E                     	;# 
   727     039F                     	;# 
   728     0415                     	;# 
   729     0416                     	;# 
   730     0417                     	;# 
   731     041C                     	;# 
   732     041D                     	;# 
   733     041E                     	;# 
   734     0FE4                     	;# 
   735     0FE5                     	;# 
   736     0FE6                     	;# 
   737     0FE7                     	;# 
   738     0FE8                     	;# 
   739     0FE9                     	;# 
   740     0FEA                     	;# 
   741     0FEB                     	;# 
   742     0FED                     	;# 
   743     0FEE                     	;# 
   744     0FEF                     	;# 
   745     0000                     	;# 
   746     0001                     	;# 
   747     0002                     	;# 
   748     0003                     	;# 
   749     0004                     	;# 
   750     0005                     	;# 
   751     0006                     	;# 
   752     0007                     	;# 
   753     0008                     	;# 
   754     0009                     	;# 
   755     000A                     	;# 
   756     000B                     	;# 
   757     000C                     	;# 
   758     000D                     	;# 
   759     0011                     	;# 
   760     0012                     	;# 
   761     0013                     	;# 
   762     0014                     	;# 
   763     0015                     	;# 
   764     0016                     	;# 
   765     0016                     	;# 
   766     0017                     	;# 
   767     0018                     	;# 
   768     0019                     	;# 
   769     001A                     	;# 
   770     001B                     	;# 
   771     001C                     	;# 
   772     001E                     	;# 
   773     001F                     	;# 
   774     008C                     	;# 
   775     008D                     	;# 
   776     0091                     	;# 
   777     0092                     	;# 
   778     0093                     	;# 
   779     0094                     	;# 
   780     0095                     	;# 
   781     0096                     	;# 
   782     0097                     	;# 
   783     0098                     	;# 
   784     0099                     	;# 
   785     009A                     	;# 
   786     009B                     	;# 
   787     009B                     	;# 
   788     009C                     	;# 
   789     009D                     	;# 
   790     009E                     	;# 
   791     010C                     	;# 
   792     010D                     	;# 
   793     0111                     	;# 
   794     0112                     	;# 
   795     0113                     	;# 
   796     0114                     	;# 
   797     0115                     	;# 
   798     0116                     	;# 
   799     0117                     	;# 
   800     0118                     	;# 
   801     0119                     	;# 
   802     011A                     	;# 
   803     011B                     	;# 
   804     011D                     	;# 
   805     011E                     	;# 
   806     018C                     	;# 
   807     018D                     	;# 
   808     0191                     	;# 
   809     0191                     	;# 
   810     0192                     	;# 
   811     0193                     	;# 
   812     0193                     	;# 
   813     0193                     	;# 
   814     0194                     	;# 
   815     0195                     	;# 
   816     0196                     	;# 
   817     0199                     	;# 
   818     019A                     	;# 
   819     019B                     	;# 
   820     019B                     	;# 
   821     019B                     	;# 
   822     019B                     	;# 
   823     019C                     	;# 
   824     019C                     	;# 
   825     019D                     	;# 
   826     019E                     	;# 
   827     019F                     	;# 
   828     020C                     	;# 
   829     020D                     	;# 
   830     0211                     	;# 
   831     0211                     	;# 
   832     0212                     	;# 
   833     0212                     	;# 
   834     0213                     	;# 
   835     0213                     	;# 
   836     0214                     	;# 
   837     0214                     	;# 
   838     0215                     	;# 
   839     0215                     	;# 
   840     0215                     	;# 
   841     0216                     	;# 
   842     0216                     	;# 
   843     0217                     	;# 
   844     0217                     	;# 
   845     0219                     	;# 
   846     021A                     	;# 
   847     021B                     	;# 
   848     021C                     	;# 
   849     021D                     	;# 
   850     021E                     	;# 
   851     021F                     	;# 
   852     0291                     	;# 
   853     0291                     	;# 
   854     0292                     	;# 
   855     0293                     	;# 
   856     0294                     	;# 
   857     0295                     	;# 
   858     0295                     	;# 
   859     0296                     	;# 
   860     0298                     	;# 
   861     0298                     	;# 
   862     0299                     	;# 
   863     029A                     	;# 
   864     029B                     	;# 
   865     029C                     	;# 
   866     029C                     	;# 
   867     029D                     	;# 
   868     029E                     	;# 
   869     029E                     	;# 
   870     0311                     	;# 
   871     0311                     	;# 
   872     0312                     	;# 
   873     0313                     	;# 
   874     0318                     	;# 
   875     0318                     	;# 
   876     0319                     	;# 
   877     031A                     	;# 
   878     0394                     	;# 
   879     0395                     	;# 
   880     0396                     	;# 
   881     039A                     	;# 
   882     039C                     	;# 
   883     039D                     	;# 
   884     039E                     	;# 
   885     039F                     	;# 
   886     0415                     	;# 
   887     0416                     	;# 
   888     0417                     	;# 
   889     041C                     	;# 
   890     041D                     	;# 
   891     041E                     	;# 
   892     0FE4                     	;# 
   893     0FE5                     	;# 
   894     0FE6                     	;# 
   895     0FE7                     	;# 
   896     0FE8                     	;# 
   897     0FE9                     	;# 
   898     0FEA                     	;# 
   899     0FEB                     	;# 
   900     0FED                     	;# 
   901     0FEE                     	;# 
   902     0FEF                     	;# 
   903     0000                     	;# 
   904     0001                     	;# 
   905     0002                     	;# 
   906     0003                     	;# 
   907     0004                     	;# 
   908     0005                     	;# 
   909     0006                     	;# 
   910     0007                     	;# 
   911     0008                     	;# 
   912     0009                     	;# 
   913     000A                     	;# 
   914     000B                     	;# 
   915     000C                     	;# 
   916     000D                     	;# 
   917     0011                     	;# 
   918     0012                     	;# 
   919     0013                     	;# 
   920     0014                     	;# 
   921     0015                     	;# 
   922     0016                     	;# 
   923     0016                     	;# 
   924     0017                     	;# 
   925     0018                     	;# 
   926     0019                     	;# 
   927     001A                     	;# 
   928     001B                     	;# 
   929     001C                     	;# 
   930     001E                     	;# 
   931     001F                     	;# 
   932     008C                     	;# 
   933     008D                     	;# 
   934     0091                     	;# 
   935     0092                     	;# 
   936     0093                     	;# 
   937     0094                     	;# 
   938     0095                     	;# 
   939     0096                     	;# 
   940     0097                     	;# 
   941     0098                     	;# 
   942     0099                     	;# 
   943     009A                     	;# 
   944     009B                     	;# 
   945     009B                     	;# 
   946     009C                     	;# 
   947     009D                     	;# 
   948     009E                     	;# 
   949     010C                     	;# 
   950     010D                     	;# 
   951     0111                     	;# 
   952     0112                     	;# 
   953     0113                     	;# 
   954     0114                     	;# 
   955     0115                     	;# 
   956     0116                     	;# 
   957     0117                     	;# 
   958     0118                     	;# 
   959     0119                     	;# 
   960     011A                     	;# 
   961     011B                     	;# 
   962     011D                     	;# 
   963     011E                     	;# 
   964     018C                     	;# 
   965     018D                     	;# 
   966     0191                     	;# 
   967     0191                     	;# 
   968     0192                     	;# 
   969     0193                     	;# 
   970     0193                     	;# 
   971     0193                     	;# 
   972     0194                     	;# 
   973     0195                     	;# 
   974     0196                     	;# 
   975     0199                     	;# 
   976     019A                     	;# 
   977     019B                     	;# 
   978     019B                     	;# 
   979     019B                     	;# 
   980     019B                     	;# 
   981     019C                     	;# 
   982     019C                     	;# 
   983     019D                     	;# 
   984     019E                     	;# 
   985     019F                     	;# 
   986     020C                     	;# 
   987     020D                     	;# 
   988     0211                     	;# 
   989     0211                     	;# 
   990     0212                     	;# 
   991     0212                     	;# 
   992     0213                     	;# 
   993     0213                     	;# 
   994     0214                     	;# 
   995     0214                     	;# 
   996     0215                     	;# 
   997     0215                     	;# 
   998     0215                     	;# 
   999     0216                     	;# 
  1000     0216                     	;# 
  1001     0217                     	;# 
  1002     0217                     	;# 
  1003     0219                     	;# 
  1004     021A                     	;# 
  1005     021B                     	;# 
  1006     021C                     	;# 
  1007     021D                     	;# 
  1008     021E                     	;# 
  1009     021F                     	;# 
  1010     0291                     	;# 
  1011     0291                     	;# 
  1012     0292                     	;# 
  1013     0293                     	;# 
  1014     0294                     	;# 
  1015     0295                     	;# 
  1016     0295                     	;# 
  1017     0296                     	;# 
  1018     0298                     	;# 
  1019     0298                     	;# 
  1020     0299                     	;# 
  1021     029A                     	;# 
  1022     029B                     	;# 
  1023     029C                     	;# 
  1024     029C                     	;# 
  1025     029D                     	;# 
  1026     029E                     	;# 
  1027     029E                     	;# 
  1028     0311                     	;# 
  1029     0311                     	;# 
  1030     0312                     	;# 
  1031     0313                     	;# 
  1032     0318                     	;# 
  1033     0318                     	;# 
  1034     0319                     	;# 
  1035     031A                     	;# 
  1036     0394                     	;# 
  1037     0395                     	;# 
  1038     0396                     	;# 
  1039     039A                     	;# 
  1040     039C                     	;# 
  1041     039D                     	;# 
  1042     039E                     	;# 
  1043     039F                     	;# 
  1044     0415                     	;# 
  1045     0416                     	;# 
  1046     0417                     	;# 
  1047     041C                     	;# 
  1048     041D                     	;# 
  1049     041E                     	;# 
  1050     0FE4                     	;# 
  1051     0FE5                     	;# 
  1052     0FE6                     	;# 
  1053     0FE7                     	;# 
  1054     0FE8                     	;# 
  1055     0FE9                     	;# 
  1056     0FEA                     	;# 
  1057     0FEB                     	;# 
  1058     0FED                     	;# 
  1059     0FEE                     	;# 
  1060     0FEF                     	;# 
  1061     0000                     	;# 
  1062     0001                     	;# 
  1063     0002                     	;# 
  1064     0003                     	;# 
  1065     0004                     	;# 
  1066     0005                     	;# 
  1067     0006                     	;# 
  1068     0007                     	;# 
  1069     0008                     	;# 
  1070     0009                     	;# 
  1071     000A                     	;# 
  1072     000B                     	;# 
  1073     000C                     	;# 
  1074     000D                     	;# 
  1075     0011                     	;# 
  1076     0012                     	;# 
  1077     0013                     	;# 
  1078     0014                     	;# 
  1079     0015                     	;# 
  1080     0016                     	;# 
  1081     0016                     	;# 
  1082     0017                     	;# 
  1083     0018                     	;# 
  1084     0019                     	;# 
  1085     001A                     	;# 
  1086     001B                     	;# 
  1087     001C                     	;# 
  1088     001E                     	;# 
  1089     001F                     	;# 
  1090     008C                     	;# 
  1091     008D                     	;# 
  1092     0091                     	;# 
  1093     0092                     	;# 
  1094     0093                     	;# 
  1095     0094                     	;# 
  1096     0095                     	;# 
  1097     0096                     	;# 
  1098     0097                     	;# 
  1099     0098                     	;# 
  1100     0099                     	;# 
  1101     009A                     	;# 
  1102     009B                     	;# 
  1103     009B                     	;# 
  1104     009C                     	;# 
  1105     009D                     	;# 
  1106     009E                     	;# 
  1107     010C                     	;# 
  1108     010D                     	;# 
  1109     0111                     	;# 
  1110     0112                     	;# 
  1111     0113                     	;# 
  1112     0114                     	;# 
  1113     0115                     	;# 
  1114     0116                     	;# 
  1115     0117                     	;# 
  1116     0118                     	;# 
  1117     0119                     	;# 
  1118     011A                     	;# 
  1119     011B                     	;# 
  1120     011D                     	;# 
  1121     011E                     	;# 
  1122     018C                     	;# 
  1123     018D                     	;# 
  1124     0191                     	;# 
  1125     0191                     	;# 
  1126     0192                     	;# 
  1127     0193                     	;# 
  1128     0193                     	;# 
  1129     0193                     	;# 
  1130     0194                     	;# 
  1131     0195                     	;# 
  1132     0196                     	;# 
  1133     0199                     	;# 
  1134     019A                     	;# 
  1135     019B                     	;# 
  1136     019B                     	;# 
  1137     019B                     	;# 
  1138     019B                     	;# 
  1139     019C                     	;# 
  1140     019C                     	;# 
  1141     019D                     	;# 
  1142     019E                     	;# 
  1143     019F                     	;# 
  1144     020C                     	;# 
  1145     020D                     	;# 
  1146     0211                     	;# 
  1147     0211                     	;# 
  1148     0212                     	;# 
  1149     0212                     	;# 
  1150     0213                     	;# 
  1151     0213                     	;# 
  1152     0214                     	;# 
  1153     0214                     	;# 
  1154     0215                     	;# 
  1155     0215                     	;# 
  1156     0215                     	;# 
  1157     0216                     	;# 
  1158     0216                     	;# 
  1159     0217                     	;# 
  1160     0217                     	;# 
  1161     0219                     	;# 
  1162     021A                     	;# 
  1163     021B                     	;# 
  1164     021C                     	;# 
  1165     021D                     	;# 
  1166     021E                     	;# 
  1167     021F                     	;# 
  1168     0291                     	;# 
  1169     0291                     	;# 
  1170     0292                     	;# 
  1171     0293                     	;# 
  1172     0294                     	;# 
  1173     0295                     	;# 
  1174     0295                     	;# 
  1175     0296                     	;# 
  1176     0298                     	;# 
  1177     0298                     	;# 
  1178     0299                     	;# 
  1179     029A                     	;# 
  1180     029B                     	;# 
  1181     029C                     	;# 
  1182     029C                     	;# 
  1183     029D                     	;# 
  1184     029E                     	;# 
  1185     029E                     	;# 
  1186     0311                     	;# 
  1187     0311                     	;# 
  1188     0312                     	;# 
  1189     0313                     	;# 
  1190     0318                     	;# 
  1191     0318                     	;# 
  1192     0319                     	;# 
  1193     031A                     	;# 
  1194     0394                     	;# 
  1195     0395                     	;# 
  1196     0396                     	;# 
  1197     039A                     	;# 
  1198     039C                     	;# 
  1199     039D                     	;# 
  1200     039E                     	;# 
  1201     039F                     	;# 
  1202     0415                     	;# 
  1203     0416                     	;# 
  1204     0417                     	;# 
  1205     041C                     	;# 
  1206     041D                     	;# 
  1207     041E                     	;# 
  1208     0FE4                     	;# 
  1209     0FE5                     	;# 
  1210     0FE6                     	;# 
  1211     0FE7                     	;# 
  1212     0FE8                     	;# 
  1213     0FE9                     	;# 
  1214     0FEA                     	;# 
  1215     0FEB                     	;# 
  1216     0FED                     	;# 
  1217     0FEE                     	;# 
  1218     0FEF                     	;# 
  1219     0000                     	;# 
  1220     0001                     	;# 
  1221     0002                     	;# 
  1222     0003                     	;# 
  1223     0004                     	;# 
  1224     0005                     	;# 
  1225     0006                     	;# 
  1226     0007                     	;# 
  1227     0008                     	;# 
  1228     0009                     	;# 
  1229     000A                     	;# 
  1230     000B                     	;# 
  1231     000C                     	;# 
  1232     000D                     	;# 
  1233     0011                     	;# 
  1234     0012                     	;# 
  1235     0013                     	;# 
  1236     0014                     	;# 
  1237     0015                     	;# 
  1238     0016                     	;# 
  1239     0016                     	;# 
  1240     0017                     	;# 
  1241     0018                     	;# 
  1242     0019                     	;# 
  1243     001A                     	;# 
  1244     001B                     	;# 
  1245     001C                     	;# 
  1246     001E                     	;# 
  1247     001F                     	;# 
  1248     008C                     	;# 
  1249     008D                     	;# 
  1250     0091                     	;# 
  1251     0092                     	;# 
  1252     0093                     	;# 
  1253     0094                     	;# 
  1254     0095                     	;# 
  1255     0096                     	;# 
  1256     0097                     	;# 
  1257     0098                     	;# 
  1258     0099                     	;# 
  1259     009A                     	;# 
  1260     009B                     	;# 
  1261     009B                     	;# 
  1262     009C                     	;# 
  1263     009D                     	;# 
  1264     009E                     	;# 
  1265     010C                     	;# 
  1266     010D                     	;# 
  1267     0111                     	;# 
  1268     0112                     	;# 
  1269     0113                     	;# 
  1270     0114                     	;# 
  1271     0115                     	;# 
  1272     0116                     	;# 
  1273     0117                     	;# 
  1274     0118                     	;# 
  1275     0119                     	;# 
  1276     011A                     	;# 
  1277     011B                     	;# 
  1278     011D                     	;# 
  1279     011E                     	;# 
  1280     018C                     	;# 
  1281     018D                     	;# 
  1282     0191                     	;# 
  1283     0191                     	;# 
  1284     0192                     	;# 
  1285     0193                     	;# 
  1286     0193                     	;# 
  1287     0193                     	;# 
  1288     0194                     	;# 
  1289     0195                     	;# 
  1290     0196                     	;# 
  1291     0199                     	;# 
  1292     019A                     	;# 
  1293     019B                     	;# 
  1294     019B                     	;# 
  1295     019B                     	;# 
  1296     019B                     	;# 
  1297     019C                     	;# 
  1298     019C                     	;# 
  1299     019D                     	;# 
  1300     019E                     	;# 
  1301     019F                     	;# 
  1302     020C                     	;# 
  1303     020D                     	;# 
  1304     0211                     	;# 
  1305     0211                     	;# 
  1306     0212                     	;# 
  1307     0212                     	;# 
  1308     0213                     	;# 
  1309     0213                     	;# 
  1310     0214                     	;# 
  1311     0214                     	;# 
  1312     0215                     	;# 
  1313     0215                     	;# 
  1314     0215                     	;# 
  1315     0216                     	;# 
  1316     0216                     	;# 
  1317     0217                     	;# 
  1318     0217                     	;# 
  1319     0219                     	;# 
  1320     021A                     	;# 
  1321     021B                     	;# 
  1322     021C                     	;# 
  1323     021D                     	;# 
  1324     021E                     	;# 
  1325     021F                     	;# 
  1326     0291                     	;# 
  1327     0291                     	;# 
  1328     0292                     	;# 
  1329     0293                     	;# 
  1330     0294                     	;# 
  1331     0295                     	;# 
  1332     0295                     	;# 
  1333     0296                     	;# 
  1334     0298                     	;# 
  1335     0298                     	;# 
  1336     0299                     	;# 
  1337     029A                     	;# 
  1338     029B                     	;# 
  1339     029C                     	;# 
  1340     029C                     	;# 
  1341     029D                     	;# 
  1342     029E                     	;# 
  1343     029E                     	;# 
  1344     0311                     	;# 
  1345     0311                     	;# 
  1346     0312                     	;# 
  1347     0313                     	;# 
  1348     0318                     	;# 
  1349     0318                     	;# 
  1350     0319                     	;# 
  1351     031A                     	;# 
  1352     0394                     	;# 
  1353     0395                     	;# 
  1354     0396                     	;# 
  1355     039A                     	;# 
  1356     039C                     	;# 
  1357     039D                     	;# 
  1358     039E                     	;# 
  1359     039F                     	;# 
  1360     0415                     	;# 
  1361     0416                     	;# 
  1362     0417                     	;# 
  1363     041C                     	;# 
  1364     041D                     	;# 
  1365     041E                     	;# 
  1366     0FE4                     	;# 
  1367     0FE5                     	;# 
  1368     0FE6                     	;# 
  1369     0FE7                     	;# 
  1370     0FE8                     	;# 
  1371     0FE9                     	;# 
  1372     0FEA                     	;# 
  1373     0FEB                     	;# 
  1374     0FED                     	;# 
  1375     0FEE                     	;# 
  1376     0FEF                     	;# 
  1377     0000                     	;# 
  1378     0001                     	;# 
  1379     0002                     	;# 
  1380     0003                     	;# 
  1381     0004                     	;# 
  1382     0005                     	;# 
  1383     0006                     	;# 
  1384     0007                     	;# 
  1385     0008                     	;# 
  1386     0009                     	;# 
  1387     000A                     	;# 
  1388     000B                     	;# 
  1389     000C                     	;# 
  1390     000D                     	;# 
  1391     0011                     	;# 
  1392     0012                     	;# 
  1393     0013                     	;# 
  1394     0014                     	;# 
  1395     0015                     	;# 
  1396     0016                     	;# 
  1397     0016                     	;# 
  1398     0017                     	;# 
  1399     0018                     	;# 
  1400     0019                     	;# 
  1401     001A                     	;# 
  1402     001B                     	;# 
  1403     001C                     	;# 
  1404     001E                     	;# 
  1405     001F                     	;# 
  1406     008C                     	;# 
  1407     008D                     	;# 
  1408     0091                     	;# 
  1409     0092                     	;# 
  1410     0093                     	;# 
  1411     0094                     	;# 
  1412     0095                     	;# 
  1413     0096                     	;# 
  1414     0097                     	;# 
  1415     0098                     	;# 
  1416     0099                     	;# 
  1417     009A                     	;# 
  1418     009B                     	;# 
  1419     009B                     	;# 
  1420     009C                     	;# 
  1421     009D                     	;# 
  1422     009E                     	;# 
  1423     010C                     	;# 
  1424     010D                     	;# 
  1425     0111                     	;# 
  1426     0112                     	;# 
  1427     0113                     	;# 
  1428     0114                     	;# 
  1429     0115                     	;# 
  1430     0116                     	;# 
  1431     0117                     	;# 
  1432     0118                     	;# 
  1433     0119                     	;# 
  1434     011A                     	;# 
  1435     011B                     	;# 
  1436     011D                     	;# 
  1437     011E                     	;# 
  1438     018C                     	;# 
  1439     018D                     	;# 
  1440     0191                     	;# 
  1441     0191                     	;# 
  1442     0192                     	;# 
  1443     0193                     	;# 
  1444     0193                     	;# 
  1445     0193                     	;# 
  1446     0194                     	;# 
  1447     0195                     	;# 
  1448     0196                     	;# 
  1449     0199                     	;# 
  1450     019A                     	;# 
  1451     019B                     	;# 
  1452     019B                     	;# 
  1453     019B                     	;# 
  1454     019B                     	;# 
  1455     019C                     	;# 
  1456     019C                     	;# 
  1457     019D                     	;# 
  1458     019E                     	;# 
  1459     019F                     	;# 
  1460     020C                     	;# 
  1461     020D                     	;# 
  1462     0211                     	;# 
  1463     0211                     	;# 
  1464     0212                     	;# 
  1465     0212                     	;# 
  1466     0213                     	;# 
  1467     0213                     	;# 
  1468     0214                     	;# 
  1469     0214                     	;# 
  1470     0215                     	;# 
  1471     0215                     	;# 
  1472     0215                     	;# 
  1473     0216                     	;# 
  1474     0216                     	;# 
  1475     0217                     	;# 
  1476     0217                     	;# 
  1477     0219                     	;# 
  1478     021A                     	;# 
  1479     021B                     	;# 
  1480     021C                     	;# 
  1481     021D                     	;# 
  1482     021E                     	;# 
  1483     021F                     	;# 
  1484     0291                     	;# 
  1485     0291                     	;# 
  1486     0292                     	;# 
  1487     0293                     	;# 
  1488     0294                     	;# 
  1489     0295                     	;# 
  1490     0295                     	;# 
  1491     0296                     	;# 
  1492     0298                     	;# 
  1493     0298                     	;# 
  1494     0299                     	;# 
  1495     029A                     	;# 
  1496     029B                     	;# 
  1497     029C                     	;# 
  1498     029C                     	;# 
  1499     029D                     	;# 
  1500     029E                     	;# 
  1501     029E                     	;# 
  1502     0311                     	;# 
  1503     0311                     	;# 
  1504     0312                     	;# 
  1505     0313                     	;# 
  1506     0318                     	;# 
  1507     0318                     	;# 
  1508     0319                     	;# 
  1509     031A                     	;# 
  1510     0394                     	;# 
  1511     0395                     	;# 
  1512     0396                     	;# 
  1513     039A                     	;# 
  1514     039C                     	;# 
  1515     039D                     	;# 
  1516     039E                     	;# 
  1517     039F                     	;# 
  1518     0415                     	;# 
  1519     0416                     	;# 
  1520     0417                     	;# 
  1521     041C                     	;# 
  1522     041D                     	;# 
  1523     041E                     	;# 
  1524     0FE4                     	;# 
  1525     0FE5                     	;# 
  1526     0FE6                     	;# 
  1527     0FE7                     	;# 
  1528     0FE8                     	;# 
  1529     0FE9                     	;# 
  1530     0FEA                     	;# 
  1531     0FEB                     	;# 
  1532     0FED                     	;# 
  1533     0FEE                     	;# 
  1534     0FEF                     	;# 
  1535     0000                     	;# 
  1536     0001                     	;# 
  1537     0002                     	;# 
  1538     0003                     	;# 
  1539     0004                     	;# 
  1540     0005                     	;# 
  1541     0006                     	;# 
  1542     0007                     	;# 
  1543     0008                     	;# 
  1544     0009                     	;# 
  1545     000A                     	;# 
  1546     000B                     	;# 
  1547     000C                     	;# 
  1548     000D                     	;# 
  1549     0011                     	;# 
  1550     0012                     	;# 
  1551     0013                     	;# 
  1552     0014                     	;# 
  1553     0015                     	;# 
  1554     0016                     	;# 
  1555     0016                     	;# 
  1556     0017                     	;# 
  1557     0018                     	;# 
  1558     0019                     	;# 
  1559     001A                     	;# 
  1560     001B                     	;# 
  1561     001C                     	;# 
  1562     001E                     	;# 
  1563     001F                     	;# 
  1564     008C                     	;# 
  1565     008D                     	;# 
  1566     0091                     	;# 
  1567     0092                     	;# 
  1568     0093                     	;# 
  1569     0094                     	;# 
  1570     0095                     	;# 
  1571     0096                     	;# 
  1572     0097                     	;# 
  1573     0098                     	;# 
  1574     0099                     	;# 
  1575     009A                     	;# 
  1576     009B                     	;# 
  1577     009B                     	;# 
  1578     009C                     	;# 
  1579     009D                     	;# 
  1580     009E                     	;# 
  1581     010C                     	;# 
  1582     010D                     	;# 
  1583     0111                     	;# 
  1584     0112                     	;# 
  1585     0113                     	;# 
  1586     0114                     	;# 
  1587     0115                     	;# 
  1588     0116                     	;# 
  1589     0117                     	;# 
  1590     0118                     	;# 
  1591     0119                     	;# 
  1592     011A                     	;# 
  1593     011B                     	;# 
  1594     011D                     	;# 
  1595     011E                     	;# 
  1596     018C                     	;# 
  1597     018D                     	;# 
  1598     0191                     	;# 
  1599     0191                     	;# 
  1600     0192                     	;# 
  1601     0193                     	;# 
  1602     0193                     	;# 
  1603     0193                     	;# 
  1604     0194                     	;# 
  1605     0195                     	;# 
  1606     0196                     	;# 
  1607     0199                     	;# 
  1608     019A                     	;# 
  1609     019B                     	;# 
  1610     019B                     	;# 
  1611     019B                     	;# 
  1612     019B                     	;# 
  1613     019C                     	;# 
  1614     019C                     	;# 
  1615     019D                     	;# 
  1616     019E                     	;# 
  1617     019F                     	;# 
  1618     020C                     	;# 
  1619     020D                     	;# 
  1620     0211                     	;# 
  1621     0211                     	;# 
  1622     0212                     	;# 
  1623     0212                     	;# 
  1624     0213                     	;# 
  1625     0213                     	;# 
  1626     0214                     	;# 
  1627     0214                     	;# 
  1628     0215                     	;# 
  1629     0215                     	;# 
  1630     0215                     	;# 
  1631     0216                     	;# 
  1632     0216                     	;# 
  1633     0217                     	;# 
  1634     0217                     	;# 
  1635     0219                     	;# 
  1636     021A                     	;# 
  1637     021B                     	;# 
  1638     021C                     	;# 
  1639     021D                     	;# 
  1640     021E                     	;# 
  1641     021F                     	;# 
  1642     0291                     	;# 
  1643     0291                     	;# 
  1644     0292                     	;# 
  1645     0293                     	;# 
  1646     0294                     	;# 
  1647     0295                     	;# 
  1648     0295                     	;# 
  1649     0296                     	;# 
  1650     0298                     	;# 
  1651     0298                     	;# 
  1652     0299                     	;# 
  1653     029A                     	;# 
  1654     029B                     	;# 
  1655     029C                     	;# 
  1656     029C                     	;# 
  1657     029D                     	;# 
  1658     029E                     	;# 
  1659     029E                     	;# 
  1660     0311                     	;# 
  1661     0311                     	;# 
  1662     0312                     	;# 
  1663     0313                     	;# 
  1664     0318                     	;# 
  1665     0318                     	;# 
  1666     0319                     	;# 
  1667     031A                     	;# 
  1668     0394                     	;# 
  1669     0395                     	;# 
  1670     0396                     	;# 
  1671     039A                     	;# 
  1672     039C                     	;# 
  1673     039D                     	;# 
  1674     039E                     	;# 
  1675     039F                     	;# 
  1676     0415                     	;# 
  1677     0416                     	;# 
  1678     0417                     	;# 
  1679     041C                     	;# 
  1680     041D                     	;# 
  1681     041E                     	;# 
  1682     0FE4                     	;# 
  1683     0FE5                     	;# 
  1684     0FE6                     	;# 
  1685     0FE7                     	;# 
  1686     0FE8                     	;# 
  1687     0FE9                     	;# 
  1688     0FEA                     	;# 
  1689     0FEB                     	;# 
  1690     0FED                     	;# 
  1691     0FEE                     	;# 
  1692     0FEF                     	;# 
  1693     0000                     	;# 
  1694     0001                     	;# 
  1695     0002                     	;# 
  1696     0003                     	;# 
  1697     0004                     	;# 
  1698     0005                     	;# 
  1699     0006                     	;# 
  1700     0007                     	;# 
  1701     0008                     	;# 
  1702     0009                     	;# 
  1703     000A                     	;# 
  1704     000B                     	;# 
  1705     000C                     	;# 
  1706     000D                     	;# 
  1707     0011                     	;# 
  1708     0012                     	;# 
  1709     0013                     	;# 
  1710     0014                     	;# 
  1711     0015                     	;# 
  1712     0016                     	;# 
  1713     0016                     	;# 
  1714     0017                     	;# 
  1715     0018                     	;# 
  1716     0019                     	;# 
  1717     001A                     	;# 
  1718     001B                     	;# 
  1719     001C                     	;# 
  1720     001E                     	;# 
  1721     001F                     	;# 
  1722     008C                     	;# 
  1723     008D                     	;# 
  1724     0091                     	;# 
  1725     0092                     	;# 
  1726     0093                     	;# 
  1727     0094                     	;# 
  1728     0095                     	;# 
  1729     0096                     	;# 
  1730     0097                     	;# 
  1731     0098                     	;# 
  1732     0099                     	;# 
  1733     009A                     	;# 
  1734     009B                     	;# 
  1735     009B                     	;# 
  1736     009C                     	;# 
  1737     009D                     	;# 
  1738     009E                     	;# 
  1739     010C                     	;# 
  1740     010D                     	;# 
  1741     0111                     	;# 
  1742     0112                     	;# 
  1743     0113                     	;# 
  1744     0114                     	;# 
  1745     0115                     	;# 
  1746     0116                     	;# 
  1747     0117                     	;# 
  1748     0118                     	;# 
  1749     0119                     	;# 
  1750     011A                     	;# 
  1751     011B                     	;# 
  1752     011D                     	;# 
  1753     011E                     	;# 
  1754     018C                     	;# 
  1755     018D                     	;# 
  1756     0191                     	;# 
  1757     0191                     	;# 
  1758     0192                     	;# 
  1759     0193                     	;# 
  1760     0193                     	;# 
  1761     0193                     	;# 
  1762     0194                     	;# 
  1763     0195                     	;# 
  1764     0196                     	;# 
  1765     0199                     	;# 
  1766     019A                     	;# 
  1767     019B                     	;# 
  1768     019B                     	;# 
  1769     019B                     	;# 
  1770     019B                     	;# 
  1771     019C                     	;# 
  1772     019C                     	;# 
  1773     019D                     	;# 
  1774     019E                     	;# 
  1775     019F                     	;# 
  1776     020C                     	;# 
  1777     020D                     	;# 
  1778     0211                     	;# 
  1779     0211                     	;# 
  1780     0212                     	;# 
  1781     0212                     	;# 
  1782     0213                     	;# 
  1783     0213                     	;# 
  1784     0214                     	;# 
  1785     0214                     	;# 
  1786     0215                     	;# 
  1787     0215                     	;# 
  1788     0215                     	;# 
  1789     0216                     	;# 
  1790     0216                     	;# 
  1791     0217                     	;# 
  1792     0217                     	;# 
  1793     0219                     	;# 
  1794     021A                     	;# 
  1795     021B                     	;# 
  1796     021C                     	;# 
  1797     021D                     	;# 
  1798     021E                     	;# 
  1799     021F                     	;# 
  1800     0291                     	;# 
  1801     0291                     	;# 
  1802     0292                     	;# 
  1803     0293                     	;# 
  1804     0294                     	;# 
  1805     0295                     	;# 
  1806     0295                     	;# 
  1807     0296                     	;# 
  1808     0298                     	;# 
  1809     0298                     	;# 
  1810     0299                     	;# 
  1811     029A                     	;# 
  1812     029B                     	;# 
  1813     029C                     	;# 
  1814     029C                     	;# 
  1815     029D                     	;# 
  1816     029E                     	;# 
  1817     029E                     	;# 
  1818     0311                     	;# 
  1819     0311                     	;# 
  1820     0312                     	;# 
  1821     0313                     	;# 
  1822     0318                     	;# 
  1823     0318                     	;# 
  1824     0319                     	;# 
  1825     031A                     	;# 
  1826     0394                     	;# 
  1827     0395                     	;# 
  1828     0396                     	;# 
  1829     039A                     	;# 
  1830     039C                     	;# 
  1831     039D                     	;# 
  1832     039E                     	;# 
  1833     039F                     	;# 
  1834     0415                     	;# 
  1835     0416                     	;# 
  1836     0417                     	;# 
  1837     041C                     	;# 
  1838     041D                     	;# 
  1839     041E                     	;# 
  1840     0FE4                     	;# 
  1841     0FE5                     	;# 
  1842     0FE6                     	;# 
  1843     0FE7                     	;# 
  1844     0FE8                     	;# 
  1845     0FE9                     	;# 
  1846     0FEA                     	;# 
  1847     0FEB                     	;# 
  1848     0FED                     	;# 
  1849     0FEE                     	;# 
  1850     0FEF                     	;# 
  1851     0000                     	;# 
  1852     0001                     	;# 
  1853     0002                     	;# 
  1854     0003                     	;# 
  1855     0004                     	;# 
  1856     0005                     	;# 
  1857     0006                     	;# 
  1858     0007                     	;# 
  1859     0008                     	;# 
  1860     0009                     	;# 
  1861     000A                     	;# 
  1862     000B                     	;# 
  1863     000C                     	;# 
  1864     000D                     	;# 
  1865     0011                     	;# 
  1866     0012                     	;# 
  1867     0013                     	;# 
  1868     0014                     	;# 
  1869     0015                     	;# 
  1870     0016                     	;# 
  1871     0016                     	;# 
  1872     0017                     	;# 
  1873     0018                     	;# 
  1874     0019                     	;# 
  1875     001A                     	;# 
  1876     001B                     	;# 
  1877     001C                     	;# 
  1878     001E                     	;# 
  1879     001F                     	;# 
  1880     008C                     	;# 
  1881     008D                     	;# 
  1882     0091                     	;# 
  1883     0092                     	;# 
  1884     0093                     	;# 
  1885     0094                     	;# 
  1886     0095                     	;# 
  1887     0096                     	;# 
  1888     0097                     	;# 
  1889     0098                     	;# 
  1890     0099                     	;# 
  1891     009A                     	;# 
  1892     009B                     	;# 
  1893     009B                     	;# 
  1894     009C                     	;# 
  1895     009D                     	;# 
  1896     009E                     	;# 
  1897     010C                     	;# 
  1898     010D                     	;# 
  1899     0111                     	;# 
  1900     0112                     	;# 
  1901     0113                     	;# 
  1902     0114                     	;# 
  1903     0115                     	;# 
  1904     0116                     	;# 
  1905     0117                     	;# 
  1906     0118                     	;# 
  1907     0119                     	;# 
  1908     011A                     	;# 
  1909     011B                     	;# 
  1910     011D                     	;# 
  1911     011E                     	;# 
  1912     018C                     	;# 
  1913     018D                     	;# 
  1914     0191                     	;# 
  1915     0191                     	;# 
  1916     0192                     	;# 
  1917     0193                     	;# 
  1918     0193                     	;# 
  1919     0193                     	;# 
  1920     0194                     	;# 
  1921     0195                     	;# 
  1922     0196                     	;# 
  1923     0199                     	;# 
  1924     019A                     	;# 
  1925     019B                     	;# 
  1926     019B                     	;# 
  1927     019B                     	;# 
  1928     019B                     	;# 
  1929     019C                     	;# 
  1930     019C                     	;# 
  1931     019D                     	;# 
  1932     019E                     	;# 
  1933     019F                     	;# 
  1934     020C                     	;# 
  1935     020D                     	;# 
  1936     0211                     	;# 
  1937     0211                     	;# 
  1938     0212                     	;# 
  1939     0212                     	;# 
  1940     0213                     	;# 
  1941     0213                     	;# 
  1942     0214                     	;# 
  1943     0214                     	;# 
  1944     0215                     	;# 
  1945     0215                     	;# 
  1946     0215                     	;# 
  1947     0216                     	;# 
  1948     0216                     	;# 
  1949     0217                     	;# 
  1950     0217                     	;# 
  1951     0219                     	;# 
  1952     021A                     	;# 
  1953     021B                     	;# 
  1954     021C                     	;# 
  1955     021D                     	;# 
  1956     021E                     	;# 
  1957     021F                     	;# 
  1958     0291                     	;# 
  1959     0291                     	;# 
  1960     0292                     	;# 
  1961     0293                     	;# 
  1962     0294                     	;# 
  1963     0295                     	;# 
  1964     0295                     	;# 
  1965     0296                     	;# 
  1966     0298                     	;# 
  1967     0298                     	;# 
  1968     0299                     	;# 
  1969     029A                     	;# 
  1970     029B                     	;# 
  1971     029C                     	;# 
  1972     029C                     	;# 
  1973     029D                     	;# 
  1974     029E                     	;# 
  1975     029E                     	;# 
  1976     0311                     	;# 
  1977     0311                     	;# 
  1978     0312                     	;# 
  1979     0313                     	;# 
  1980     0318                     	;# 
  1981     0318                     	;# 
  1982     0319                     	;# 
  1983     031A                     	;# 
  1984     0394                     	;# 
  1985     0395                     	;# 
  1986     0396                     	;# 
  1987     039A                     	;# 
  1988     039C                     	;# 
  1989     039D                     	;# 
  1990     039E                     	;# 
  1991     039F                     	;# 
  1992     0415                     	;# 
  1993     0416                     	;# 
  1994     0417                     	;# 
  1995     041C                     	;# 
  1996     041D                     	;# 
  1997     041E                     	;# 
  1998     0FE4                     	;# 
  1999     0FE5                     	;# 
  2000     0FE6                     	;# 
  2001     0FE7                     	;# 
  2002     0FE8                     	;# 
  2003     0FE9                     	;# 
  2004     0FEA                     	;# 
  2005     0FEB                     	;# 
  2006     0FED                     	;# 
  2007     0FEE                     	;# 
  2008     0FEF                     	;# 
  2009     0000                     	;# 
  2010     0001                     	;# 
  2011     0002                     	;# 
  2012     0003                     	;# 
  2013     0004                     	;# 
  2014     0005                     	;# 
  2015     0006                     	;# 
  2016     0007                     	;# 
  2017     0008                     	;# 
  2018     0009                     	;# 
  2019     000A                     	;# 
  2020     000B                     	;# 
  2021     000C                     	;# 
  2022     000D                     	;# 
  2023     0011                     	;# 
  2024     0012                     	;# 
  2025     0013                     	;# 
  2026     0014                     	;# 
  2027     0015                     	;# 
  2028     0016                     	;# 
  2029     0016                     	;# 
  2030     0017                     	;# 
  2031     0018                     	;# 
  2032     0019                     	;# 
  2033     001A                     	;# 
  2034     001B                     	;# 
  2035     001C                     	;# 
  2036     001E                     	;# 
  2037     001F                     	;# 
  2038     008C                     	;# 
  2039     008D                     	;# 
  2040     0091                     	;# 
  2041     0092                     	;# 
  2042     0093                     	;# 
  2043     0094                     	;# 
  2044     0095                     	;# 
  2045     0096                     	;# 
  2046     0097                     	;# 
  2047     0098                     	;# 
  2048     0099                     	;# 
  2049     009A                     	;# 
  2050     009B                     	;# 
  2051     009B                     	;# 
  2052     009C                     	;# 
  2053     009D                     	;# 
  2054     009E                     	;# 
  2055     010C                     	;# 
  2056     010D                     	;# 
  2057     0111                     	;# 
  2058     0112                     	;# 
  2059     0113                     	;# 
  2060     0114                     	;# 
  2061     0115                     	;# 
  2062     0116                     	;# 
  2063     0117                     	;# 
  2064     0118                     	;# 
  2065     0119                     	;# 
  2066     011A                     	;# 
  2067     011B                     	;# 
  2068     011D                     	;# 
  2069     011E                     	;# 
  2070     018C                     	;# 
  2071     018D                     	;# 
  2072     0191                     	;# 
  2073     0191                     	;# 
  2074     0192                     	;# 
  2075     0193                     	;# 
  2076     0193                     	;# 
  2077     0193                     	;# 
  2078     0194                     	;# 
  2079     0195                     	;# 
  2080     0196                     	;# 
  2081     0199                     	;# 
  2082     019A                     	;# 
  2083     019B                     	;# 
  2084     019B                     	;# 
  2085     019B                     	;# 
  2086     019B                     	;# 
  2087     019C                     	;# 
  2088     019C                     	;# 
  2089     019D                     	;# 
  2090     019E                     	;# 
  2091     019F                     	;# 
  2092     020C                     	;# 
  2093     020D                     	;# 
  2094     0211                     	;# 
  2095     0211                     	;# 
  2096     0212                     	;# 
  2097     0212                     	;# 
  2098     0213                     	;# 
  2099     0213                     	;# 
  2100     0214                     	;# 
  2101     0214                     	;# 
  2102     0215                     	;# 
  2103     0215                     	;# 
  2104     0215                     	;# 
  2105     0216                     	;# 
  2106     0216                     	;# 
  2107     0217                     	;# 
  2108     0217                     	;# 
  2109     0219                     	;# 
  2110     021A                     	;# 
  2111     021B                     	;# 
  2112     021C                     	;# 
  2113     021D                     	;# 
  2114     021E                     	;# 
  2115     021F                     	;# 
  2116     0291                     	;# 
  2117     0291                     	;# 
  2118     0292                     	;# 
  2119     0293                     	;# 
  2120     0294                     	;# 
  2121     0295                     	;# 
  2122     0295                     	;# 
  2123     0296                     	;# 
  2124     0298                     	;# 
  2125     0298                     	;# 
  2126     0299                     	;# 
  2127     029A                     	;# 
  2128     029B                     	;# 
  2129     029C                     	;# 
  2130     029C                     	;# 
  2131     029D                     	;# 
  2132     029E                     	;# 
  2133     029E                     	;# 
  2134     0311                     	;# 
  2135     0311                     	;# 
  2136     0312                     	;# 
  2137     0313                     	;# 
  2138     0318                     	;# 
  2139     0318                     	;# 
  2140     0319                     	;# 
  2141     031A                     	;# 
  2142     0394                     	;# 
  2143     0395                     	;# 
  2144     0396                     	;# 
  2145     039A                     	;# 
  2146     039C                     	;# 
  2147     039D                     	;# 
  2148     039E                     	;# 
  2149     039F                     	;# 
  2150     0415                     	;# 
  2151     0416                     	;# 
  2152     0417                     	;# 
  2153     041C                     	;# 
  2154     041D                     	;# 
  2155     041E                     	;# 
  2156     0FE4                     	;# 
  2157     0FE5                     	;# 
  2158     0FE6                     	;# 
  2159     0FE7                     	;# 
  2160     0FE8                     	;# 
  2161     0FE9                     	;# 
  2162     0FEA                     	;# 
  2163     0FEB                     	;# 
  2164     0FED                     	;# 
  2165     0FEE                     	;# 
  2166     0FEF                     	;# 
  2167     0000                     	;# 
  2168     0001                     	;# 
  2169     0002                     	;# 
  2170     0003                     	;# 
  2171     0004                     	;# 
  2172     0005                     	;# 
  2173     0006                     	;# 
  2174     0007                     	;# 
  2175     0008                     	;# 
  2176     0009                     	;# 
  2177     000A                     	;# 
  2178     000B                     	;# 
  2179     000C                     	;# 
  2180     000D                     	;# 
  2181     0011                     	;# 
  2182     0012                     	;# 
  2183     0013                     	;# 
  2184     0014                     	;# 
  2185     0015                     	;# 
  2186     0016                     	;# 
  2187     0016                     	;# 
  2188     0017                     	;# 
  2189     0018                     	;# 
  2190     0019                     	;# 
  2191     001A                     	;# 
  2192     001B                     	;# 
  2193     001C                     	;# 
  2194     001E                     	;# 
  2195     001F                     	;# 
  2196     008C                     	;# 
  2197     008D                     	;# 
  2198     0091                     	;# 
  2199     0092                     	;# 
  2200     0093                     	;# 
  2201     0094                     	;# 
  2202     0095                     	;# 
  2203     0096                     	;# 
  2204     0097                     	;# 
  2205     0098                     	;# 
  2206     0099                     	;# 
  2207     009A                     	;# 
  2208     009B                     	;# 
  2209     009B                     	;# 
  2210     009C                     	;# 
  2211     009D                     	;# 
  2212     009E                     	;# 
  2213     010C                     	;# 
  2214     010D                     	;# 
  2215     0111                     	;# 
  2216     0112                     	;# 
  2217     0113                     	;# 
  2218     0114                     	;# 
  2219     0115                     	;# 
  2220     0116                     	;# 
  2221     0117                     	;# 
  2222     0118                     	;# 
  2223     0119                     	;# 
  2224     011A                     	;# 
  2225     011B                     	;# 
  2226     011D                     	;# 
  2227     011E                     	;# 
  2228     018C                     	;# 
  2229     018D                     	;# 
  2230     0191                     	;# 
  2231     0191                     	;# 
  2232     0192                     	;# 
  2233     0193                     	;# 
  2234     0193                     	;# 
  2235     0193                     	;# 
  2236     0194                     	;# 
  2237     0195                     	;# 
  2238     0196                     	;# 
  2239     0199                     	;# 
  2240     019A                     	;# 
  2241     019B                     	;# 
  2242     019B                     	;# 
  2243     019B                     	;# 
  2244     019B                     	;# 
  2245     019C                     	;# 
  2246     019C                     	;# 
  2247     019D                     	;# 
  2248     019E                     	;# 
  2249     019F                     	;# 
  2250     020C                     	;# 
  2251     020D                     	;# 
  2252     0211                     	;# 
  2253     0211                     	;# 
  2254     0212                     	;# 
  2255     0212                     	;# 
  2256     0213                     	;# 
  2257     0213                     	;# 
  2258     0214                     	;# 
  2259     0214                     	;# 
  2260     0215                     	;# 
  2261     0215                     	;# 
  2262     0215                     	;# 
  2263     0216                     	;# 
  2264     0216                     	;# 
  2265     0217                     	;# 
  2266     0217                     	;# 
  2267     0219                     	;# 
  2268     021A                     	;# 
  2269     021B                     	;# 
  2270     021C                     	;# 
  2271     021D                     	;# 
  2272     021E                     	;# 
  2273     021F                     	;# 
  2274     0291                     	;# 
  2275     0291                     	;# 
  2276     0292                     	;# 
  2277     0293                     	;# 
  2278     0294                     	;# 
  2279     0295                     	;# 
  2280     0295                     	;# 
  2281     0296                     	;# 
  2282     0298                     	;# 
  2283     0298                     	;# 
  2284     0299                     	;# 
  2285     029A                     	;# 
  2286     029B                     	;# 
  2287     029C                     	;# 
  2288     029C                     	;# 
  2289     029D                     	;# 
  2290     029E                     	;# 
  2291     029E                     	;# 
  2292     0311                     	;# 
  2293     0311                     	;# 
  2294     0312                     	;# 
  2295     0313                     	;# 
  2296     0318                     	;# 
  2297     0318                     	;# 
  2298     0319                     	;# 
  2299     031A                     	;# 
  2300     0394                     	;# 
  2301     0395                     	;# 
  2302     0396                     	;# 
  2303     039A                     	;# 
  2304     039C                     	;# 
  2305     039D                     	;# 
  2306     039E                     	;# 
  2307     039F                     	;# 
  2308     0415                     	;# 
  2309     0416                     	;# 
  2310     0417                     	;# 
  2311     041C                     	;# 
  2312     041D                     	;# 
  2313     041E                     	;# 
  2314     0FE4                     	;# 
  2315     0FE5                     	;# 
  2316     0FE6                     	;# 
  2317     0FE7                     	;# 
  2318     0FE8                     	;# 
  2319     0FE9                     	;# 
  2320     0FEA                     	;# 
  2321     0FEB                     	;# 
  2322     0FED                     	;# 
  2323     0FEE                     	;# 
  2324     0FEF                     	;# 
  2325     0000                     	;# 
  2326     0001                     	;# 
  2327     0002                     	;# 
  2328     0003                     	;# 
  2329     0004                     	;# 
  2330     0005                     	;# 
  2331     0006                     	;# 
  2332     0007                     	;# 
  2333     0008                     	;# 
  2334     0009                     	;# 
  2335     000A                     	;# 
  2336     000B                     	;# 
  2337     000C                     	;# 
  2338     000D                     	;# 
  2339     0011                     	;# 
  2340     0012                     	;# 
  2341     0013                     	;# 
  2342     0014                     	;# 
  2343     0015                     	;# 
  2344     0016                     	;# 
  2345     0016                     	;# 
  2346     0017                     	;# 
  2347     0018                     	;# 
  2348     0019                     	;# 
  2349     001A                     	;# 
  2350     001B                     	;# 
  2351     001C                     	;# 
  2352     001E                     	;# 
  2353     001F                     	;# 
  2354     008C                     	;# 
  2355     008D                     	;# 
  2356     0091                     	;# 
  2357     0092                     	;# 
  2358     0093                     	;# 
  2359     0094                     	;# 
  2360     0095                     	;# 
  2361     0096                     	;# 
  2362     0097                     	;# 
  2363     0098                     	;# 
  2364     0099                     	;# 
  2365     009A                     	;# 
  2366     009B                     	;# 
  2367     009B                     	;# 
  2368     009C                     	;# 
  2369     009D                     	;# 
  2370     009E                     	;# 
  2371     010C                     	;# 
  2372     010D                     	;# 
  2373     0111                     	;# 
  2374     0112                     	;# 
  2375     0113                     	;# 
  2376     0114                     	;# 
  2377     0115                     	;# 
  2378     0116                     	;# 
  2379     0117                     	;# 
  2380     0118                     	;# 
  2381     0119                     	;# 
  2382     011A                     	;# 
  2383     011B                     	;# 
  2384     011D                     	;# 
  2385     011E                     	;# 
  2386     018C                     	;# 
  2387     018D                     	;# 
  2388     0191                     	;# 
  2389     0191                     	;# 
  2390     0192                     	;# 
  2391     0193                     	;# 
  2392     0193                     	;# 
  2393     0193                     	;# 
  2394     0194                     	;# 
  2395     0195                     	;# 
  2396     0196                     	;# 
  2397     0199                     	;# 
  2398     019A                     	;# 
  2399     019B                     	;# 
  2400     019B                     	;# 
  2401     019B                     	;# 
  2402     019B                     	;# 
  2403     019C                     	;# 
  2404     019C                     	;# 
  2405     019D                     	;# 
  2406     019E                     	;# 
  2407     019F                     	;# 
  2408     020C                     	;# 
  2409     020D                     	;# 
  2410     0211                     	;# 
  2411     0211                     	;# 
  2412     0212                     	;# 
  2413     0212                     	;# 
  2414     0213                     	;# 
  2415     0213                     	;# 
  2416     0214                     	;# 
  2417     0214                     	;# 
  2418     0215                     	;# 
  2419     0215                     	;# 
  2420     0215                     	;# 
  2421     0216                     	;# 
  2422     0216                     	;# 
  2423     0217                     	;# 
  2424     0217                     	;# 
  2425     0219                     	;# 
  2426     021A                     	;# 
  2427     021B                     	;# 
  2428     021C                     	;# 
  2429     021D                     	;# 
  2430     021E                     	;# 
  2431     021F                     	;# 
  2432     0291                     	;# 
  2433     0291                     	;# 
  2434     0292                     	;# 
  2435     0293                     	;# 
  2436     0294                     	;# 
  2437     0295                     	;# 
  2438     0295                     	;# 
  2439     0296                     	;# 
  2440     0298                     	;# 
  2441     0298                     	;# 
  2442     0299                     	;# 
  2443     029A                     	;# 
  2444     029B                     	;# 
  2445     029C                     	;# 
  2446     029C                     	;# 
  2447     029D                     	;# 
  2448     029E                     	;# 
  2449     029E                     	;# 
  2450     0311                     	;# 
  2451     0311                     	;# 
  2452     0312                     	;# 
  2453     0313                     	;# 
  2454     0318                     	;# 
  2455     0318                     	;# 
  2456     0319                     	;# 
  2457     031A                     	;# 
  2458     0394                     	;# 
  2459     0395                     	;# 
  2460     0396                     	;# 
  2461     039A                     	;# 
  2462     039C                     	;# 
  2463     039D                     	;# 
  2464     039E                     	;# 
  2465     039F                     	;# 
  2466     0415                     	;# 
  2467     0416                     	;# 
  2468     0417                     	;# 
  2469     041C                     	;# 
  2470     041D                     	;# 
  2471     041E                     	;# 
  2472     0FE4                     	;# 
  2473     0FE5                     	;# 
  2474     0FE6                     	;# 
  2475     0FE7                     	;# 
  2476     0FE8                     	;# 
  2477     0FE9                     	;# 
  2478     0FEA                     	;# 
  2479     0FEB                     	;# 
  2480     0FED                     	;# 
  2481     0FEE                     	;# 
  2482     0FEF                     	;# 
  2483     0000                     	;# 
  2484     0001                     	;# 
  2485     0002                     	;# 
  2486     0003                     	;# 
  2487     0004                     	;# 
  2488     0005                     	;# 
  2489     0006                     	;# 
  2490     0007                     	;# 
  2491     0008                     	;# 
  2492     0009                     	;# 
  2493     000A                     	;# 
  2494     000B                     	;# 
  2495     000C                     	;# 
  2496     000D                     	;# 
  2497     0011                     	;# 
  2498     0012                     	;# 
  2499     0013                     	;# 
  2500     0014                     	;# 
  2501     0015                     	;# 
  2502     0016                     	;# 
  2503     0016                     	;# 
  2504     0017                     	;# 
  2505     0018                     	;# 
  2506     0019                     	;# 
  2507     001A                     	;# 
  2508     001B                     	;# 
  2509     001C                     	;# 
  2510     001E                     	;# 
  2511     001F                     	;# 
  2512     008C                     	;# 
  2513     008D                     	;# 
  2514     0091                     	;# 
  2515     0092                     	;# 
  2516     0093                     	;# 
  2517     0094                     	;# 
  2518     0095                     	;# 
  2519     0096                     	;# 
  2520     0097                     	;# 
  2521     0098                     	;# 
  2522     0099                     	;# 
  2523     009A                     	;# 
  2524     009B                     	;# 
  2525     009B                     	;# 
  2526     009C                     	;# 
  2527     009D                     	;# 
  2528     009E                     	;# 
  2529     010C                     	;# 
  2530     010D                     	;# 
  2531     0111                     	;# 
  2532     0112                     	;# 
  2533     0113                     	;# 
  2534     0114                     	;# 
  2535     0115                     	;# 
  2536     0116                     	;# 
  2537     0117                     	;# 
  2538     0118                     	;# 
  2539     0119                     	;# 
  2540     011A                     	;# 
  2541     011B                     	;# 
  2542     011D                     	;# 
  2543     011E                     	;# 
  2544     018C                     	;# 
  2545     018D                     	;# 
  2546     0191                     	;# 
  2547     0191                     	;# 
  2548     0192                     	;# 
  2549     0193                     	;# 
  2550     0193                     	;# 
  2551     0193                     	;# 
  2552     0194                     	;# 
  2553     0195                     	;# 
  2554     0196                     	;# 
  2555     0199                     	;# 
  2556     019A                     	;# 
  2557     019B                     	;# 
  2558     019B                     	;# 
  2559     019B                     	;# 
  2560     019B                     	;# 
  2561     019C                     	;# 
  2562     019C                     	;# 
  2563     019D                     	;# 
  2564     019E                     	;# 
  2565     019F                     	;# 
  2566     020C                     	;# 
  2567     020D                     	;# 
  2568     0211                     	;# 
  2569     0211                     	;# 
  2570     0212                     	;# 
  2571     0212                     	;# 
  2572     0213                     	;# 
  2573     0213                     	;# 
  2574     0214                     	;# 
  2575     0214                     	;# 
  2576     0215                     	;# 
  2577     0215                     	;# 
  2578     0215                     	;# 
  2579     0216                     	;# 
  2580     0216                     	;# 
  2581     0217                     	;# 
  2582     0217                     	;# 
  2583     0219                     	;# 
  2584     021A                     	;# 
  2585     021B                     	;# 
  2586     021C                     	;# 
  2587     021D                     	;# 
  2588     021E                     	;# 
  2589     021F                     	;# 
  2590     0291                     	;# 
  2591     0291                     	;# 
  2592     0292                     	;# 
  2593     0293                     	;# 
  2594     0294                     	;# 
  2595     0295                     	;# 
  2596     0295                     	;# 
  2597     0296                     	;# 
  2598     0298                     	;# 
  2599     0298                     	;# 
  2600     0299                     	;# 
  2601     029A                     	;# 
  2602     029B                     	;# 
  2603     029C                     	;# 
  2604     029C                     	;# 
  2605     029D                     	;# 
  2606     029E                     	;# 
  2607     029E                     	;# 
  2608     0311                     	;# 
  2609     0311                     	;# 
  2610     0312                     	;# 
  2611     0313                     	;# 
  2612     0318                     	;# 
  2613     0318                     	;# 
  2614     0319                     	;# 
  2615     031A                     	;# 
  2616     0394                     	;# 
  2617     0395                     	;# 
  2618     0396                     	;# 
  2619     039A                     	;# 
  2620     039C                     	;# 
  2621     039D                     	;# 
  2622     039E                     	;# 
  2623     039F                     	;# 
  2624     0415                     	;# 
  2625     0416                     	;# 
  2626     0417                     	;# 
  2627     041C                     	;# 
  2628     041D                     	;# 
  2629     041E                     	;# 
  2630     0FE4                     	;# 
  2631     0FE5                     	;# 
  2632     0FE6                     	;# 
  2633     0FE7                     	;# 
  2634     0FE8                     	;# 
  2635     0FE9                     	;# 
  2636     0FEA                     	;# 
  2637     0FEB                     	;# 
  2638     0FED                     	;# 
  2639     0FEE                     	;# 
  2640     0FEF                     	;# 
  2641                           
  2642 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  2643     0000                     
  2644 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  2645     0000                     
  2646 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  2647     0000                     
  2648                           	psect	idataBANK0
  2649     0B5F                     __pidataBANK0:
  2650                           
  2651                           ;initializer for _kpf
  2652     0B5F  3415               	retlw	21
  2653     0B60  3400               	retlw	0
  2654     0B61  3400               	retlw	0
  2655                           
  2656                           ;initializer for _first_read
  2657     0B62  3401               	retlw	1
  2658                           
  2659                           	psect	idataBANK2
  2660     0C2C                     __pidataBANK2:
  2661                           
  2662                           ;initializer for _timecontrol
  2663     0C2C  3404               	retlw	4
  2664     0C2D  3400               	retlw	0
  2665     0C2E  3400               	retlw	0
  2666                           
  2667                           ;initializer for _kdp
  2668     0C2F  340F               	retlw	15
  2669     0C30  3400               	retlw	0
  2670     0C31  3400               	retlw	0
  2671                           
  2672                           ;initializer for _kip
  2673     0C32  3411               	retlw	17
  2674     0C33  3400               	retlw	0
  2675     0C34  3400               	retlw	0
  2676                           
  2677                           ;initializer for _kpp
  2678     0C35  3420               	retlw	32
  2679     0C36  3400               	retlw	0
  2680     0C37  3400               	retlw	0
  2681                           
  2682                           ;initializer for _kdf
  2683     0C38  346D               	retlw	109
  2684     0C39  3400               	retlw	0
  2685     0C3A  3400               	retlw	0
  2686                           
  2687                           	psect	stringtext1
  2688     0445                     __pstringtext1:
  2689     0445                     _lookupTable:
  2690     0445  348D               	retlw	141
  2691     0446  34B3               	retlw	179
  2692     0447  3429               	retlw	41
  2693     0448  343D               	retlw	61
  2694     0449  343E               	retlw	62
  2695     044A  3403               	retlw	3
  2696     044B  342A               	retlw	42
  2697     044C  343D               	retlw	61
  2698     044D  34F0               	retlw	240
  2699     044E  3452               	retlw	82
  2700     044F  342A               	retlw	42
  2701     0450  343D               	retlw	61
  2702     0451  3494               	retlw	148
  2703     0452  34A1               	retlw	161
  2704     0453  342A               	retlw	42
  2705     0454  343D               	retlw	61
  2706     0455  3445               	retlw	69
  2707     0456  34F1               	retlw	241
  2708     0457  342A               	retlw	42
  2709     0458  343D               	retlw	61
  2710     0459  34EA               	retlw	234
  2711     045A  343F               	retlw	63
  2712     045B  342B               	retlw	43
  2713     045C  343D               	retlw	61
  2714     045D  348F               	retlw	143
  2715     045E  348E               	retlw	142
  2716     045F  342B               	retlw	43
  2717     0460  343D               	retlw	61
  2718     0461  3433               	retlw	51
  2719     0462  34DD               	retlw	221
  2720     0463  342B               	retlw	43
  2721     0464  343D               	retlw	61
  2722     0465  34D8               	retlw	216
  2723     0466  342B               	retlw	43
  2724     0467  342C               	retlw	44
  2725     0468  343D               	retlw	61
  2726     0469  3470               	retlw	112
  2727     046A  3479               	retlw	121
  2728     046B  342C               	retlw	44
  2729     046C  343D               	retlw	61
  2730     046D  3415               	retlw	21
  2731     046E  34C8               	retlw	200
  2732     046F  342C               	retlw	44
  2733     0470  343D               	retlw	61
  2734     0471  34AD               	retlw	173
  2735     0472  3415               	retlw	21
  2736     0473  342D               	retlw	45
  2737     0474  343D               	retlw	61
  2738     0475  3452               	retlw	82
  2739     0476  3464               	retlw	100
  2740     0477  342D               	retlw	45
  2741     0478  343D               	retlw	61
  2742     0479  34EA               	retlw	234
  2743     047A  34B1               	retlw	177
  2744     047B  342D               	retlw	45
  2745     047C  343D               	retlw	61
  2746     047D  3482               	retlw	130
  2747     047E  34FF               	retlw	255
  2748     047F  342D               	retlw	45
  2749     0480  343D               	retlw	61
  2750     0481  341A               	retlw	26
  2751     0482  344D               	retlw	77
  2752     0483  342E               	retlw	46
  2753     0484  343D               	retlw	61
  2754     0485  34A6               	retlw	166
  2755     0486  3499               	retlw	153
  2756     0487  342E               	retlw	46
  2757     0488  343D               	retlw	61
  2758     0489  343E               	retlw	62
  2759     048A  34E7               	retlw	231
  2760     048B  342E               	retlw	46
  2761     048C  343D               	retlw	61
  2762     048D  34D7               	retlw	215
  2763     048E  3434               	retlw	52
  2764     048F  342F               	retlw	47
  2765     0490  343D               	retlw	61
  2766     0491  3462               	retlw	98
  2767     0492  3481               	retlw	129
  2768     0493  342F               	retlw	47
  2769     0494  343D               	retlw	61
  2770     0495  34EE               	retlw	238
  2771     0496  34CD               	retlw	205
  2772     0497  342F               	retlw	47
  2773     0498  343D               	retlw	61
  2774     0499  347A               	retlw	122
  2775     049A  341A               	retlw	26
  2776     049B  3430               	retlw	48
  2777     049C  343D               	retlw	61
  2778     049D  3406               	retlw	6
  2779     049E  3467               	retlw	103
  2780     049F  3430               	retlw	48
  2781     04A0  343D               	retlw	61
  2782     04A1  3492               	retlw	146
  2783     04A2  34B3               	retlw	179
  2784     04A3  3430               	retlw	48
  2785     04A4  343D               	retlw	61
  2786     04A5  341D               	retlw	29
  2787     04A6  3400               	retlw	0
  2788     04A7  3431               	retlw	49
  2789     04A8  343D               	retlw	61
  2790     04A9  34A9               	retlw	169
  2791     04AA  344C               	retlw	76
  2792     04AB  3431               	retlw	49
  2793     04AC  343D               	retlw	61
  2794     04AD  3429               	retlw	41
  2795     04AE  3498               	retlw	152
  2796     04AF  3431               	retlw	49
  2797     04B0  343D               	retlw	61
  2798     04B1  34B4               	retlw	180
  2799     04B2  34E4               	retlw	228
  2800     04B3  3431               	retlw	49
  2801     04B4  343D               	retlw	61
  2802     04B5  3434               	retlw	52
  2803     04B6  3430               	retlw	48
  2804     04B7  3432               	retlw	50
  2805     04B8  343D               	retlw	61
  2806     04B9  34B3               	retlw	179
  2807     04BA  347B               	retlw	123
  2808     04BB  3432               	retlw	50
  2809     04BC  343D               	retlw	61
  2810     04BD  3432               	retlw	50
  2811     04BE  34C7               	retlw	199
  2812     04BF  3432               	retlw	50
  2813     04C0  343D               	retlw	61
  2814     04C1  34B2               	retlw	178
  2815     04C2  3412               	retlw	18
  2816     04C3  3433               	retlw	51
  2817     04C4  343D               	retlw	61
  2818     04C5  3431               	retlw	49
  2819     04C6  345E               	retlw	94
  2820     04C7  3433               	retlw	51
  2821     04C8  343D               	retlw	61
  2822     04C9  34B0               	retlw	176
  2823     04CA  34A9               	retlw	169
  2824     04CB  3433               	retlw	51
  2825     04CC  343D               	retlw	61
  2826     04CD  3423               	retlw	35
  2827     04CE  34F4               	retlw	244
  2828     04CF  3433               	retlw	51
  2829     04D0  343D               	retlw	61
  2830     04D1  34A3               	retlw	163
  2831     04D2  343F               	retlw	63
  2832     04D3  3434               	retlw	52
  2833     04D4  343D               	retlw	61
  2834     04D5  3416               	retlw	22
  2835     04D6  348A               	retlw	138
  2836     04D7  3434               	retlw	52
  2837     04D8  343D               	retlw	61
  2838     04D9  3489               	retlw	137
  2839     04DA  34D4               	retlw	212
  2840     04DB  3434               	retlw	52
  2841     04DC  343D               	retlw	61
  2842     04DD  34FB               	retlw	251
  2843     04DE  341E               	retlw	30
  2844     04DF  3435               	retlw	53
  2845     04E0  343D               	retlw	61
  2846     04E1  346E               	retlw	110
  2847     04E2  3469               	retlw	105
  2848     04E3  3435               	retlw	53
  2849     04E4  343D               	retlw	61
  2850     04E5  34E1               	retlw	225
  2851     04E6  34B3               	retlw	179
  2852     04E7  3435               	retlw	53
  2853     04E8  343D               	retlw	61
  2854     04E9  3454               	retlw	84
  2855     04EA  34FE               	retlw	254
  2856     04EB  3435               	retlw	53
  2857     04EC  343D               	retlw	61
  2858     04ED  34C7               	retlw	199
  2859     04EE  3448               	retlw	72
  2860     04EF  3436               	retlw	54
  2861     04F0  343D               	retlw	61
  2862     04F1  342E               	retlw	46
  2863     04F2  3492               	retlw	146
  2864     04F3  3436               	retlw	54
  2865     04F4  343D               	retlw	61
  2866     04F5  34A0               	retlw	160
  2867     04F6  34DC               	retlw	220
  2868     04F7  3436               	retlw	54
  2869     04F8  343D               	retlw	61
  2870     04F9  3407               	retlw	7
  2871     04FA  3426               	retlw	38
  2872     04FB  3437               	retlw	55
  2873     04FC  343D               	retlw	61
  2874     04FD  346D               	retlw	109
  2875     04FE  346F               	retlw	111
  2876     04FF  3437               	retlw	55
  2877     0500  343D               	retlw	61
  2878     0501  34D4               	retlw	212
  2879     0502  34B8               	retlw	184
  2880     0503  3437               	retlw	55
  2881     0504  343D               	retlw	61
  2882     0505  343A               	retlw	58
  2883     0506  3402               	retlw	2
  2884     0507  3438               	retlw	56
  2885     0508  343D               	retlw	61
  2886     0509  34A1               	retlw	161
  2887     050A  344B               	retlw	75
  2888     050B  3438               	retlw	56
  2889     050C  343D               	retlw	61
  2890     050D  3407               	retlw	7
  2891     050E  3495               	retlw	149
  2892     050F  3438               	retlw	56
  2893     0510  343D               	retlw	61
  2894     0511                     __end_of_lookupTable:
  2895                           
  2896                           	psect	nvBANK0
  2897     006E                     __pnvBANK0:
  2898     006E                     _TMR1_GateInterruptHandler:
  2899     006E                     	ds	2
  2900                           
  2901                           	psect	nvBANK2
  2902     012F                     __pnvBANK2:
  2903     012F                     _EUSART_ErrorHandler:
  2904     012F                     	ds	2
  2905     0131                     _EUSART_OverrunErrorHandler:
  2906     0131                     	ds	2
  2907     0133                     _EUSART_FramingErrorHandler:
  2908     0133                     	ds	2
  2909     0018                     _T1CONbits	set	24
  2910     0018                     _T1CON	set	24
  2911     0016                     _TMR1L	set	22
  2912     0017                     _TMR1H	set	23
  2913     0019                     _T1GCON	set	25
  2914     0015                     _TMR0	set	21
  2915     0013                     _PIR3bits	set	19
  2916     001C                     _T2CON	set	28
  2917     0011                     _PIR1bits	set	17
  2918     001A                     _TMR2	set	26
  2919     001B                     _PR2	set	27
  2920     000B                     _INTCONbits	set	11
  2921     009D                     _ADCON0bits	set	157
  2922     009D                     _ADCON0	set	157
  2923     009C                     _ADRESH	set	156
  2924     009B                     _ADRESL	set	155
  2925     009E                     _ADCON1	set	158
  2926     0095                     _OPTION_REG	set	149
  2927     0091                     _PIE1bits	set	145
  2928     0095                     _OPTION_REGbits	set	149
  2929     008D                     _TRISB	set	141
  2930     008C                     _TRISA	set	140
  2931     0097                     _WDTCON	set	151
  2932     0098                     _OSCTUNE	set	152
  2933     0099                     _OSCCON	set	153
  2934     010C                     _LATAbits	set	268
  2935     0115                     _CMOUTbits	set	277
  2936     0112                     _CM1CON1	set	274
  2937     0111                     _CM1CON0	set	273
  2938     0119                     _DACCON1	set	281
  2939     0118                     _DACCON0	set	280
  2940     0117                     _FVRCON	set	279
  2941     011E                     _APFCON1	set	286
  2942     011D                     _APFCON0	set	285
  2943     010D                     _LATB	set	269
  2944     010C                     _LATA	set	268
  2945     0116                     _BORCON	set	278
  2946     019A                     _TXREG	set	410
  2947     0199                     _RCREG	set	409
  2948     019D                     _RCSTAbits	set	413
  2949     019C                     _SPBRGH	set	412
  2950     019B                     _SPBRGL	set	411
  2951     019E                     _TXSTA	set	414
  2952     019D                     _RCSTA	set	413
  2953     019F                     _BAUDCON	set	415
  2954     018C                     _ANSELA	set	396
  2955     018D                     _ANSELB	set	397
  2956     020C                     _WPUA	set	524
  2957     020D                     _WPUB	set	525
  2958     029E                     _CCPTMRS0bits	set	670
  2959     0291                     _CCPR1L	set	657
  2960     0292                     _CCPR1H	set	658
  2961     0296                     _PSTR1CON	set	662
  2962     0294                     _PWM1CON	set	660
  2963     0295                     _ECCP1AS	set	661
  2964     0293                     _CCP1CON	set	659
  2965     041E                     _T6CON	set	1054
  2966     041C                     _TMR6	set	1052
  2967     041D                     _PR6	set	1053
  2968     0417                     _T4CONbits	set	1047
  2969     0417                     _T4CON	set	1047
  2970     0415                     _TMR4	set	1045
  2971     0416                     _PR4	set	1046
  2972                           
  2973                           	psect	cinit
  2974     001B                     start_initialization:	
  2975                           ; #config settings
  2976                           
  2977     001B                     __initialization:
  2978                           
  2979                           ; Initialize objects allocated to BANK0
  2980     001B  305F               	movlw	low __pidataBANK0
  2981     001C  0084               	movwf	4
  2982     001D  308B               	movlw	(high __pidataBANK0)| (0+128)
  2983     001E  0085               	movwf	5
  2984     001F  306A               	movlw	low __pdataBANK0
  2985     0020  0086               	movwf	6
  2986     0021  3000               	movlw	high __pdataBANK0
  2987     0022  0087               	movwf	7
  2988     0023  3004               	movlw	4
  2989     0024  318B  238C  3180   	fcall	init_ram
  2990                           
  2991                           ; Initialize objects allocated to BANK2
  2992     0027  302C               	movlw	low __pidataBANK2
  2993     0028  0084               	movwf	4
  2994     0029  308C               	movlw	(high __pidataBANK2)| (0+128)
  2995     002A  0085               	movwf	5
  2996     002B  3020               	movlw	low __pdataBANK2
  2997     002C  0086               	movwf	6
  2998     002D  3001               	movlw	high __pdataBANK2
  2999     002E  0087               	movwf	7
  3000     002F  300F               	movlw	15
  3001     0030  318B  238C  3180   	fcall	init_ram
  3002                           
  3003                           ; Clear objects allocated to BANK0
  3004     0033  3053               	movlw	low __pbssBANK0
  3005     0034  0084               	movwf	4
  3006     0035  3000               	movlw	high __pbssBANK0
  3007     0036  0085               	movwf	5
  3008     0037  3017               	movlw	23
  3009     0038  318B  2386  3180   	fcall	clear_ram0
  3010                           
  3011                           ; Clear objects allocated to BANK1
  3012     003B  30A0               	movlw	low __pbssBANK1
  3013     003C  0084               	movwf	4
  3014     003D  3000               	movlw	high __pbssBANK1
  3015     003E  0085               	movwf	5
  3016     003F  302D               	movlw	45
  3017     0040  318B  2386         	fcall	clear_ram0
  3018     0042                     end_of_initialization:	
  3019                           ;End of C runtime variable initialization code
  3020                           
  3021     0042                     __end_of__initialization:
  3022     0042  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3023     0043  0020               	movlb	0
  3024     0044  3186  2E97         	ljmp	_main	;jump to C main() function
  3025                           
  3026                           	psect	bssBANK0
  3027     0053                     __pbssBANK0:
  3028     0053                     _bufferRx:
  3029     0053                     	ds	8
  3030     005B                     _flux:
  3031     005B                     	ds	3
  3032     005E                     _ballset:
  3033     005E                     	ds	3
  3034     0061                     _tempo_voo:
  3035     0061                     	ds	2
  3036     0063                     _sp_height:
  3037     0063                     	ds	2
  3038     0065                     _ADC_InterruptHandler:
  3039     0065                     	ds	2
  3040     0067                     _func_mode:
  3041     0067                     	ds	1
  3042     0068                     _sentido:
  3043     0068                     	ds	1
  3044     0069                     _timer0ReloadVal:
  3045     0069                     	ds	1
  3046                           
  3047                           	psect	dataBANK0
  3048     006A                     __pdataBANK0:
  3049     006A                     _kpf:
  3050     006A                     	ds	3
  3051     006D                     _first_read:
  3052     006D                     	ds	1
  3053                           
  3054                           	psect	bssBANK1
  3055     00A0                     __pbssBANK1:
  3056     00A0                     _avg_tempo_voo:
  3057     00A0                     	ds	4
  3058     00A4                     _outpre:
  3059     00A4                     	ds	3
  3060     00A7                     _outputsum:
  3061     00A7                     	ds	3
  3062     00AA                     _balldist:
  3063     00AA                     	ds	3
  3064     00AD                     _errorp:
  3065     00AD                     	ds	3
  3066     00B0                     _error:
  3067     00B0                     	ds	3
  3068     00B3                     _height:
  3069     00B3                     	ds	2
  3070     00B5                     _adc_temp:
  3071     00B5                     	ds	2
  3072     00B7                     _sp_position:
  3073     00B7                     	ds	2
  3074     00B9                     _position:
  3075     00B9                     	ds	2
  3076     00BB                     _dc:
  3077     00BB                     	ds	2
  3078     00BD                     _vRx:
  3079     00BD                     	ds	2
  3080     00BF                     _vTx:
  3081     00BF                     	ds	2
  3082     00C1                     _output:
  3083     00C1                     	ds	2
  3084     00C3                     _timer1ReloadVal:
  3085     00C3                     	ds	2
  3086     00C5                     _passo_ctrl:
  3087     00C5                     	ds	1
  3088     00C6                     _fim_curso:
  3089     00C6                     	ds	1
  3090     00C7                     _passo:
  3091     00C7                     	ds	1
  3092     00C8                     _nao_salva:
  3093     00C8                     	ds	1
  3094     00C9                     _count_Tx:
  3095     00C9                     	ds	1
  3096     00CA                     _countRx:
  3097     00CA                     	ds	1
  3098     00CB                     _controlchoice:
  3099     00CB                     	ds	1
  3100     00CC                     _eusartRxLastError:
  3101     00CC                     	ds	1
  3102                           
  3103                           	psect	dataBANK2
  3104     0120                     __pdataBANK2:
  3105     0120                     _timecontrol:
  3106     0120                     	ds	3
  3107     0123                     _kdp:
  3108     0123                     	ds	3
  3109     0126                     _kip:
  3110     0126                     	ds	3
  3111     0129                     _kpp:
  3112     0129                     	ds	3
  3113     012C                     _kdf:
  3114     012C                     	ds	3
  3115                           
  3116                           	psect	inittext
  3117     0B8C                     init_ram:
  3118     0B8C  00FE               	movwf	126
  3119     0B8D                     initloop:
  3120     0B8D  0012               	moviw fsr0++
  3121     0B8E  001E               	movwi fsr1++
  3122     0B8F  0BFE               	decfsz	126,f
  3123     0B90  2B8D               	goto	initloop
  3124     0B91  3400               	retlw	0
  3125                           
  3126                           	psect	clrtext
  3127     0B86                     clear_ram0:	
  3128                           ;	Called with FSR0 containing the base address, and
  3129                           ;	WREG with the size to clear
  3130                           
  3131     0B86  0064               	clrwdt	;clear the watchdog before getting into this loop
  3132     0B87                     clrloop0:
  3133     0B87  0180               	clrf	0	;clear RAM location pointed to by FSR
  3134     0B88  3101               	addfsr 0,1
  3135     0B89  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3136     0B8A  2B87               	goto	clrloop0	;have we reached the end yet?
  3137     0B8B  3400               	retlw	0	;all done for this memory range, return
  3138                           
  3139                           	psect	cstackBANK1
  3140     00CD                     __pcstackBANK1:
  3141     00CD                     ??_PIN_MANAGER_Initialize:
  3142     00CD                     ??_OSCILLATOR_Initialize:	
  3143                           ; 1 bytes @ 0x0
  3144                           
  3145     00CD                     ??_WDT_Initialize:	
  3146                           ; 1 bytes @ 0x0
  3147                           
  3148     00CD                     ??_DAC_Initialize:	
  3149                           ; 1 bytes @ 0x0
  3150                           
  3151     00CD                     ??_FVR_Initialize:	
  3152                           ; 1 bytes @ 0x0
  3153                           
  3154     00CD                     ??_TMR4_Initialize:	
  3155                           ; 1 bytes @ 0x0
  3156                           
  3157     00CD                     ??_TMR2_Initialize:	
  3158                           ; 1 bytes @ 0x0
  3159                           
  3160     00CD                     ??_TMR0_Initialize:	
  3161                           ; 1 bytes @ 0x0
  3162                           
  3163     00CD                     ??_TMR6_Initialize:	
  3164                           ; 1 bytes @ 0x0
  3165                           
  3166     00CD                     ??_CMP1_Initialize:	
  3167                           ; 1 bytes @ 0x0
  3168                           
  3169     00CD                     ??_ADC_Initialize:	
  3170                           ; 1 bytes @ 0x0
  3171                           
  3172     00CD                     ??_EPWM1_Initialize:	
  3173                           ; 1 bytes @ 0x0
  3174                           
  3175     00CD                     ?_EUSART_SetFramingErrorHandler:	
  3176                           ; 1 bytes @ 0x0
  3177                           
  3178     00CD                     ?_EUSART_SetOverrunErrorHandler:	
  3179                           ; 1 bytes @ 0x0
  3180                           
  3181     00CD                     ?_EUSART_SetErrorHandler:	
  3182                           ; 1 bytes @ 0x0
  3183                           
  3184     00CD                     ?_TMR1_SetGateInterruptHandler:	
  3185                           ; 1 bytes @ 0x0
  3186                           
  3187     00CD                     ?_definePassoMotor:	
  3188                           ; 1 bytes @ 0x0
  3189                           
  3190     00CD                     ??_TMR4_StartTimer:	
  3191                           ; 1 bytes @ 0x0
  3192                           
  3193     00CD                     ??_TMR4_StopTimer:	
  3194                           ; 1 bytes @ 0x0
  3195                           
  3196     00CD                     ?_EPWM1_LoadDutyValue:	
  3197                           ; 1 bytes @ 0x0
  3198                           
  3199     00CD                     ??_EUSART_is_rx_ready:	
  3200                           ; 1 bytes @ 0x0
  3201                           
  3202     00CD                     ??_EUSART_Read:	
  3203                           ; 1 bytes @ 0x0
  3204                           
  3205     00CD                     ??_EUSART_Write:	
  3206                           ; 1 bytes @ 0x0
  3207                           
  3208     00CD                     ??_TMR0_ReadTimer:	
  3209                           ; 1 bytes @ 0x0
  3210                           
  3211     00CD                     ??_CMP1_GetOutputStatus:	
  3212                           ; 1 bytes @ 0x0
  3213                           
  3214     00CD                     ??_TMR6_WriteTimer:	
  3215                           ; 1 bytes @ 0x0
  3216                           
  3217     00CD                     ??_TMR6_LoadPeriodRegister:	
  3218                           ; 1 bytes @ 0x0
  3219                           
  3220     00CD                     ?_ADC_GetConversion:	
  3221                           ; 1 bytes @ 0x0
  3222                           
  3223     00CD                     ?___lwdiv:	
  3224                           ; 2 bytes @ 0x0
  3225                           
  3226     00CD                     ?___tmul:	
  3227                           ; 2 bytes @ 0x0
  3228                           
  3229     00CD                     ?___fltol:	
  3230                           ; 3 bytes @ 0x0
  3231                           
  3232     00CD                     EUSART_Write@txData:	
  3233                           ; 4 bytes @ 0x0
  3234                           
  3235     00CD                     TMR0_ReadTimer@readVal:	
  3236                           ; 1 bytes @ 0x0
  3237                           
  3238     00CD                     TMR6_WriteTimer@timerVal:	
  3239                           ; 1 bytes @ 0x0
  3240                           
  3241     00CD                     TMR6_LoadPeriodRegister@periodVal:	
  3242                           ; 1 bytes @ 0x0
  3243                           
  3244     00CD                     definePassoMotor@sentido:	
  3245                           ; 1 bytes @ 0x0
  3246                           
  3247     00CD                     EPWM1_LoadDutyValue@dutyValue:	
  3248                           ; 1 bytes @ 0x0
  3249                           
  3250     00CD                     EUSART_SetFramingErrorHandler@interruptHandler:	
  3251                           ; 2 bytes @ 0x0
  3252                           
  3253     00CD                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  3254                           ; 2 bytes @ 0x0
  3255                           
  3256     00CD                     EUSART_SetErrorHandler@interruptHandler:	
  3257                           ; 2 bytes @ 0x0
  3258                           
  3259     00CD                     TMR1_SetGateInterruptHandler@InterruptHandler:	
  3260                           ; 2 bytes @ 0x0
  3261                           
  3262     00CD                     ___lwdiv@divisor:	
  3263                           ; 2 bytes @ 0x0
  3264                           
  3265     00CD                     ___tmul@multiplier:	
  3266                           ; 2 bytes @ 0x0
  3267                           
  3268     00CD                     ___fltol@f1:	
  3269                           ; 3 bytes @ 0x0
  3270                           
  3271                           
  3272                           ; 4 bytes @ 0x0
  3273     00CD                     	ds	1
  3274     00CE                     ??_definePassoMotor:
  3275                           
  3276                           ; 1 bytes @ 0x1
  3277     00CE                     	ds	1
  3278     00CF                     ??_TMR1_Initialize:
  3279     00CF                     ??_EUSART_Initialize:	
  3280                           ; 1 bytes @ 0x2
  3281                           
  3282     00CF                     ??_EUSART_SetFramingErrorHandler:	
  3283                           ; 1 bytes @ 0x2
  3284                           
  3285     00CF                     ??_EUSART_SetOverrunErrorHandler:	
  3286                           ; 1 bytes @ 0x2
  3287                           
  3288     00CF                     ??_EUSART_SetErrorHandler:	
  3289                           ; 1 bytes @ 0x2
  3290                           
  3291     00CF                     ??_TMR1_SetGateInterruptHandler:	
  3292                           ; 1 bytes @ 0x2
  3293                           
  3294     00CF                     ??_SYSTEM_Initialize:	
  3295                           ; 1 bytes @ 0x2
  3296                           
  3297     00CF                     ??_EPWM1_LoadDutyValue:	
  3298                           ; 1 bytes @ 0x2
  3299                           
  3300     00CF                     ??_ADC_GetConversion:	
  3301                           ; 1 bytes @ 0x2
  3302                           
  3303     00CF                     definePassoMotor@passom:	
  3304                           ; 1 bytes @ 0x2
  3305                           
  3306     00CF                     ___lwdiv@dividend:	
  3307                           ; 1 bytes @ 0x2
  3308                           
  3309                           
  3310                           ; 2 bytes @ 0x2
  3311     00CF                     	ds	1
  3312     00D0                     ??_daUmPasso:
  3313     00D0                     ADC_GetConversion@channel:	
  3314                           ; 1 bytes @ 0x3
  3315                           
  3316     00D0                     daUmPasso@sentido:	
  3317                           ; 1 bytes @ 0x3
  3318                           
  3319     00D0                     ___tmul@multiplicand:	
  3320                           ; 1 bytes @ 0x3
  3321                           
  3322                           
  3323                           ; 3 bytes @ 0x3
  3324     00D0                     	ds	1
  3325     00D1                     ??_setaPorta:
  3326     00D1                     ??_fluxpos:	
  3327                           ; 1 bytes @ 0x4
  3328                           
  3329     00D1                     ??_analisa_Rx:	
  3330                           ; 1 bytes @ 0x4
  3331                           
  3332     00D1                     ??___fltol:	
  3333                           ; 1 bytes @ 0x4
  3334                           
  3335     00D1                     ??___lwdiv:	
  3336                           ; 1 bytes @ 0x4
  3337                           
  3338                           
  3339                           ; 1 bytes @ 0x4
  3340     00D1                     	ds	1
  3341     00D2                     ___lwdiv@quotient:
  3342                           
  3343                           ; 2 bytes @ 0x5
  3344     00D2                     	ds	1
  3345     00D3                     ??___tmul:
  3346     00D3                     ___tmul@product:	
  3347                           ; 1 bytes @ 0x6
  3348                           
  3349                           
  3350                           ; 3 bytes @ 0x6
  3351     00D3                     	ds	1
  3352     00D4                     ___lwdiv@counter:
  3353                           
  3354                           ; 1 bytes @ 0x7
  3355     00D4                     	ds	1
  3356     00D5                     ___fltol@sign1:
  3357                           
  3358                           ; 1 bytes @ 0x8
  3359     00D5                     	ds	1
  3360     00D6                     ??_fluxcontrol:
  3361     00D6                     ?___atdiv:	
  3362                           ; 1 bytes @ 0x9
  3363                           
  3364     00D6                     ___fltol@exp1:	
  3365                           ; 3 bytes @ 0x9
  3366                           
  3367     00D6                     ___atdiv@divisor:	
  3368                           ; 1 bytes @ 0x9
  3369                           
  3370                           
  3371                           ; 3 bytes @ 0x9
  3372     00D6                     	ds	1
  3373     00D7                     ??_envia_Tx:
  3374                           
  3375                           ; 1 bytes @ 0xA
  3376     00D7                     	ds	2
  3377     00D9                     ___atdiv@dividend:
  3378                           
  3379                           ; 3 bytes @ 0xC
  3380     00D9                     	ds	3
  3381     00DC                     ??___atdiv:
  3382                           
  3383                           ; 1 bytes @ 0xF
  3384     00DC                     	ds	1
  3385     00DD                     ___atdiv@counter:
  3386                           
  3387                           ; 1 bytes @ 0x10
  3388     00DD                     	ds	1
  3389     00DE                     ___atdiv@sign:
  3390                           
  3391                           ; 1 bytes @ 0x11
  3392     00DE                     	ds	1
  3393     00DF                     ___atdiv@quotient:
  3394                           
  3395                           ; 3 bytes @ 0x12
  3396     00DF                     	ds	3
  3397     00E2                     ??_pwmcontrol:
  3398                           
  3399                           ; 1 bytes @ 0x15
  3400     00E2                     	ds	12
  3401     00EE                     ??_controlchoose:
  3402     00EE                     ??_main:	
  3403                           ; 1 bytes @ 0x21
  3404                           
  3405                           
  3406                           ; 1 bytes @ 0x21
  3407     00EE                     	ds	1
  3408                           
  3409                           	psect	cstackCOMMON
  3410     0070                     __pcstackCOMMON:
  3411     0070                     ?_PIN_MANAGER_Initialize:
  3412     0070                     ?_OSCILLATOR_Initialize:	
  3413                           ; 1 bytes @ 0x0
  3414                           
  3415     0070                     ?_WDT_Initialize:	
  3416                           ; 1 bytes @ 0x0
  3417                           
  3418     0070                     ?_DAC_Initialize:	
  3419                           ; 1 bytes @ 0x0
  3420                           
  3421     0070                     ?_FVR_Initialize:	
  3422                           ; 1 bytes @ 0x0
  3423                           
  3424     0070                     ?_TMR4_Initialize:	
  3425                           ; 1 bytes @ 0x0
  3426                           
  3427     0070                     ?_TMR2_Initialize:	
  3428                           ; 1 bytes @ 0x0
  3429                           
  3430     0070                     ?_TMR0_Initialize:	
  3431                           ; 1 bytes @ 0x0
  3432                           
  3433     0070                     ?_TMR6_Initialize:	
  3434                           ; 1 bytes @ 0x0
  3435                           
  3436     0070                     ?_CMP1_Initialize:	
  3437                           ; 1 bytes @ 0x0
  3438                           
  3439     0070                     ?_ADC_Initialize:	
  3440                           ; 1 bytes @ 0x0
  3441                           
  3442     0070                     ?_EPWM1_Initialize:	
  3443                           ; 1 bytes @ 0x0
  3444                           
  3445     0070                     ?_TMR1_Initialize:	
  3446                           ; 1 bytes @ 0x0
  3447                           
  3448     0070                     ?_EUSART_Initialize:	
  3449                           ; 1 bytes @ 0x0
  3450                           
  3451     0070                     ?_TMR1_GATE_ISR:	
  3452                           ; 1 bytes @ 0x0
  3453                           
  3454     0070                     ?_TMR1_DefaultGateInterruptHandler:	
  3455                           ; 1 bytes @ 0x0
  3456                           
  3457     0070                     ??_TMR1_DefaultGateInterruptHandler:	
  3458                           ; 1 bytes @ 0x0
  3459                           
  3460     0070                     ?_daUmPasso:	
  3461                           ; 1 bytes @ 0x0
  3462                           
  3463     0070                     ?_pwmcontrol:	
  3464                           ; 1 bytes @ 0x0
  3465                           
  3466     0070                     ?_fluxcontrol:	
  3467                           ; 1 bytes @ 0x0
  3468                           
  3469     0070                     ?_SYSTEM_Initialize:	
  3470                           ; 1 bytes @ 0x0
  3471                           
  3472     0070                     ?_PIN_MANAGER_IOC:	
  3473                           ; 1 bytes @ 0x0
  3474                           
  3475     0070                     ??_PIN_MANAGER_IOC:	
  3476                           ; 1 bytes @ 0x0
  3477                           
  3478     0070                     ?_TMR4_StartTimer:	
  3479                           ; 1 bytes @ 0x0
  3480                           
  3481     0070                     ?_TMR4_StopTimer:	
  3482                           ; 1 bytes @ 0x0
  3483                           
  3484     0070                     ?_INTERRUPT_InterruptManager:	
  3485                           ; 1 bytes @ 0x0
  3486                           
  3487     0070                     ?_EUSART_is_rx_ready:	
  3488                           ; 1 bytes @ 0x0
  3489                           
  3490     0070                     ?_EUSART_Read:	
  3491                           ; 1 bytes @ 0x0
  3492                           
  3493     0070                     ?_EUSART_Write:	
  3494                           ; 1 bytes @ 0x0
  3495                           
  3496     0070                     ?_TMR0_ReadTimer:	
  3497                           ; 1 bytes @ 0x0
  3498                           
  3499     0070                     ?_CMP1_GetOutputStatus:	
  3500                           ; 1 bytes @ 0x0
  3501                           
  3502     0070                     ?_TMR6_WriteTimer:	
  3503                           ; 1 bytes @ 0x0
  3504                           
  3505     0070                     ?_TMR6_LoadPeriodRegister:	
  3506                           ; 1 bytes @ 0x0
  3507                           
  3508     0070                     ?_TMR1_WriteTimer:	
  3509                           ; 1 bytes @ 0x0
  3510                           
  3511     0070                     ?_TMR1_Reload:	
  3512                           ; 1 bytes @ 0x0
  3513                           
  3514     0070                     ?_setaPorta:	
  3515                           ; 1 bytes @ 0x0
  3516                           
  3517     0070                     ?_fluxpos:	
  3518                           ; 1 bytes @ 0x0
  3519                           
  3520     0070                     ?_controlchoose:	
  3521                           ; 1 bytes @ 0x0
  3522                           
  3523     0070                     ?_analisa_Rx:	
  3524                           ; 1 bytes @ 0x0
  3525                           
  3526     0070                     ?_envia_Tx:	
  3527                           ; 1 bytes @ 0x0
  3528                           
  3529     0070                     ?_mede_height:	
  3530                           ; 1 bytes @ 0x0
  3531                           
  3532     0070                     ?_main:	
  3533                           ; 1 bytes @ 0x0
  3534                           
  3535     0070                     ?__Umul8_16:	
  3536                           ; 1 bytes @ 0x0
  3537                           
  3538     0070                     ?_TMR1_ReadTimer:	
  3539                           ; 2 bytes @ 0x0
  3540                           
  3541     0070                     ?i1___lwdiv:	
  3542                           ; 2 bytes @ 0x0
  3543                           
  3544     0070                     __Umul8_16@multiplicand:	
  3545                           ; 2 bytes @ 0x0
  3546                           
  3547     0070                     TMR1_WriteTimer@timerVal:	
  3548                           ; 1 bytes @ 0x0
  3549                           
  3550     0070                     i1___lwdiv@divisor:	
  3551                           ; 2 bytes @ 0x0
  3552                           
  3553                           
  3554                           ; 2 bytes @ 0x0
  3555     0070                     	ds	2
  3556     0072                     ??__Umul8_16:
  3557     0072                     ??_TMR1_ReadTimer:	
  3558                           ; 1 bytes @ 0x2
  3559                           
  3560     0072                     ??_TMR1_WriteTimer:	
  3561                           ; 1 bytes @ 0x2
  3562                           
  3563     0072                     ??_TMR1_Reload:	
  3564                           ; 1 bytes @ 0x2
  3565                           
  3566     0072                     i1___lwdiv@dividend:	
  3567                           ; 1 bytes @ 0x2
  3568                           
  3569                           
  3570                           ; 2 bytes @ 0x2
  3571     0072                     	ds	2
  3572     0074                     ??i1___lwdiv:
  3573     0074                     __Umul8_16@product:	
  3574                           ; 1 bytes @ 0x4
  3575                           
  3576                           
  3577                           ; 2 bytes @ 0x4
  3578     0074                     	ds	1
  3579     0075                     i1___lwdiv@quotient:
  3580                           
  3581                           ; 2 bytes @ 0x5
  3582     0075                     	ds	1
  3583     0076                     __Umul8_16@word_mpld:
  3584                           
  3585                           ; 2 bytes @ 0x6
  3586     0076                     	ds	1
  3587     0077                     i1___lwdiv@counter:
  3588     0077                     TMR1_ReadTimer@readVal:	
  3589                           ; 1 bytes @ 0x7
  3590                           
  3591                           
  3592                           ; 2 bytes @ 0x7
  3593     0077                     	ds	1
  3594     0078                     __Umul8_16@multiplier:
  3595                           
  3596                           ; 1 bytes @ 0x8
  3597     0078                     	ds	1
  3598     0079                     ??___flmul:
  3599     0079                     TMR1_ReadTimer@readValHigh:	
  3600                           ; 1 bytes @ 0x9
  3601                           
  3602                           
  3603                           ; 1 bytes @ 0x9
  3604     0079                     	ds	1
  3605     007A                     TMR1_ReadTimer@readValLow:
  3606                           
  3607                           ; 1 bytes @ 0xA
  3608     007A                     	ds	4
  3609     007E                     ??_TMR1_GATE_ISR:
  3610     007E                     ??_INTERRUPT_InterruptManager:	
  3611                           ; 1 bytes @ 0xE
  3612                           
  3613                           
  3614                           	psect	cstackBANK0
  3615     0020                     __pcstackBANK0:	
  3616                           ; 1 bytes @ 0xE
  3617                           
  3618     0020                     ?___flmul:
  3619     0020                     ___flmul@b:	
  3620                           ; 4 bytes @ 0x0
  3621                           
  3622                           
  3623                           ; 4 bytes @ 0x0
  3624     0020                     	ds	4
  3625     0024                     ___flmul@a:
  3626                           
  3627                           ; 4 bytes @ 0x4
  3628     0024                     	ds	4
  3629     0028                     ___flmul@sign:
  3630                           
  3631                           ; 1 bytes @ 0x8
  3632     0028                     	ds	1
  3633     0029                     ___flmul@aexp:
  3634                           
  3635                           ; 1 bytes @ 0x9
  3636     0029                     	ds	1
  3637     002A                     ___flmul@grs:
  3638                           
  3639                           ; 4 bytes @ 0xA
  3640     002A                     	ds	4
  3641     002E                     ___flmul@bexp:
  3642                           
  3643                           ; 1 bytes @ 0xE
  3644     002E                     	ds	1
  3645     002F                     ___flmul@prod:
  3646                           
  3647                           ; 4 bytes @ 0xF
  3648     002F                     	ds	4
  3649     0033                     ___flmul@temp:
  3650                           
  3651                           ; 2 bytes @ 0x13
  3652     0033                     	ds	2
  3653     0035                     ?i1___fltol:
  3654     0035                     i1___fltol@f1:	
  3655                           ; 4 bytes @ 0x15
  3656                           
  3657                           
  3658                           ; 4 bytes @ 0x15
  3659     0035                     	ds	4
  3660     0039                     ??i1___fltol:
  3661                           
  3662                           ; 1 bytes @ 0x19
  3663     0039                     	ds	4
  3664     003D                     i1___fltol@sign1:
  3665                           
  3666                           ; 1 bytes @ 0x1D
  3667     003D                     	ds	1
  3668     003E                     i1___fltol@exp1:
  3669                           
  3670                           ; 1 bytes @ 0x1E
  3671     003E                     	ds	1
  3672     003F                     ?___xxtofl:
  3673     003F                     ___xxtofl@val:	
  3674                           ; 4 bytes @ 0x1F
  3675                           
  3676                           
  3677                           ; 4 bytes @ 0x1F
  3678     003F                     	ds	4
  3679     0043                     ??___xxtofl:
  3680                           
  3681                           ; 1 bytes @ 0x23
  3682     0043                     	ds	4
  3683     0047                     ___xxtofl@sign:
  3684                           
  3685                           ; 1 bytes @ 0x27
  3686     0047                     	ds	1
  3687     0048                     ___xxtofl@exp:
  3688                           
  3689                           ; 1 bytes @ 0x28
  3690     0048                     	ds	1
  3691     0049                     ___xxtofl@arg:
  3692                           
  3693                           ; 4 bytes @ 0x29
  3694     0049                     	ds	4
  3695     004D                     ??_mede_height:
  3696                           
  3697                           ; 1 bytes @ 0x2D
  3698     004D                     	ds	6
  3699                           
  3700                           	psect	maintext
  3701     0697                     __pmaintext:	
  3702 ;;
  3703 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  3704 ;;
  3705 ;; *************** function _main *****************
  3706 ;; Defined at:
  3707 ;;		line 315 in file "main.c"
  3708 ;; Parameters:    Size  Location     Type
  3709 ;;		None
  3710 ;; Auto vars:     Size  Location     Type
  3711 ;;		None
  3712 ;; Return value:  Size  Location     Type
  3713 ;;                  1    wreg      void 
  3714 ;; Registers used:
  3715 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3716 ;; Tracked objects:
  3717 ;;		On entry : B1F/0
  3718 ;;		On exit  : 1F/2
  3719 ;;		Unchanged: 0/0
  3720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3721 ;;      Params:         0       0       0       0       0       0
  3722 ;;      Locals:         0       0       0       0       0       0
  3723 ;;      Temps:          0       0       1       0       0       0
  3724 ;;      Totals:         0       0       1       0       0       0
  3725 ;;Total ram usage:        1 bytes
  3726 ;; Hardware stack levels required when called: 8
  3727 ;; This function calls:
  3728 ;;		_ADC_GetConversion
  3729 ;;		_EUSART_Read
  3730 ;;		_EUSART_is_rx_ready
  3731 ;;		_SYSTEM_Initialize
  3732 ;;		_TMR0_ReadTimer
  3733 ;;		_TMR1_SetGateInterruptHandler
  3734 ;;		_TMR4_StopTimer
  3735 ;;		_TMR6_LoadPeriodRegister
  3736 ;;		_TMR6_WriteTimer
  3737 ;;		_analisa_Rx
  3738 ;;		_controlchoose
  3739 ;;		_envia_Tx
  3740 ;;		_fluxpos
  3741 ;;		_setaPorta
  3742 ;; This function is called by:
  3743 ;;		Startup code after reset
  3744 ;; This function uses a non-reentrant model
  3745 ;;
  3746                           
  3747     0697                     _main:	
  3748                           ;psect for function _main
  3749                           
  3750                           
  3751                           ;main.c: 318:     SYSTEM_Initialize();
  3752                           
  3753                           ;incstack = 0
  3754                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3755     0697  318D  256D  3186   	fcall	_SYSTEM_Initialize
  3756                           
  3757                           ;main.c: 319:     TMR1_SetGateInterruptHandler(mede_height);
  3758     069A  30DD               	movlw	low _mede_height
  3759     069B  00CD               	movwf	TMR1_SetGateInterruptHandler@InterruptHandler^(0+128)
  3760     069C  3005               	movlw	high _mede_height
  3761     069D  00CE               	movwf	(TMR1_SetGateInterruptHandler@InterruptHandler^(0+128)+1)
  3762     069E  318B  23C1  3186   	fcall	_TMR1_SetGateInterruptHandler
  3763                           
  3764                           ;main.c: 323:     (INTCONbits.GIE = 1);
  3765     06A1  178B               	bsf	11,7	;volatile
  3766                           
  3767                           ;main.c: 326:     (INTCONbits.PEIE = 1);
  3768     06A2  170B               	bsf	11,6	;volatile
  3769                           
  3770                           ;main.c: 328:     setaPorta();
  3771     06A3  318C  24AF  3186   	fcall	_setaPorta
  3772                           
  3773                           ;main.c: 329:     LATAbits.LATA7=CMOUTbits.MC1OUT;
  3774     06A6  0022               	movlb	2	; select bank2
  3775     06A7  1815               	btfsc	21,0	;volatile
  3776     06A8  2F34               	goto	L1
  3777     06A9                     u2940:
  3778     06A9  0022               	movlb	2	; select bank2
  3779     06AA  138C               	bcf	12,7	;volatile
  3780     06AB                     l3116:
  3781                           
  3782                           ;main.c: 332:     {;main.c: 333:         if(PIR3bits.TMR4IF==1){
  3783     06AB  0020               	movlb	0	; select bank0
  3784     06AC  1C93               	btfss	19,1	;volatile
  3785     06AD  2EB5               	goto	l3124
  3786                           
  3787                           ;main.c: 334:             PIR3bits.TMR4IF=0;
  3788     06AE  1093               	bcf	19,1	;volatile
  3789                           
  3790                           ;main.c: 335:             TMR4_StopTimer();
  3791     06AF  318B  2351  3186   	fcall	_TMR4_StopTimer
  3792                           
  3793                           ;main.c: 336:             controlchoose();
  3794     06B2  318C  243B  3186   	fcall	_controlchoose
  3795     06B5                     l3124:
  3796                           
  3797                           ;main.c: 338:         if (EUSART_is_rx_ready()){
  3798     06B5  318B  2363  3186   	fcall	_EUSART_is_rx_ready
  3799     06B8  3A00               	xorlw	0
  3800     06B9  1903               	skipnz
  3801     06BA  2EF5               	goto	l3156
  3802                           
  3803                           ;main.c: 339:             TMR6_LoadPeriodRegister(0xF9);
  3804     06BB  30F9               	movlw	249
  3805     06BC  318B  237A  3186   	fcall	_TMR6_LoadPeriodRegister
  3806                           
  3807                           ;main.c: 340:             nao_salva = 0;
  3808     06BF  0021               	movlb	1	; select bank1
  3809     06C0  01C8               	clrf	_nao_salva^(0+128)
  3810     06C1                     l3146:	
  3811                           ;main.c: 341:             while(countRx<8 -1){
  3812                           
  3813                           
  3814                           ;main.c: 341:             while(countRx<8 -1){
  3815     06C1  3007               	movlw	7
  3816     06C2  024A               	subwf	_countRx^(0+128),w
  3817     06C3  1803               	btfsc	3,0
  3818     06C4  2EE8               	goto	l3148
  3819                           
  3820                           ;main.c: 342:                 TMR6_WriteTimer(0);
  3821     06C5  3000               	movlw	0
  3822     06C6  318B  2380  3186   	fcall	_TMR6_WriteTimer
  3823                           
  3824                           ;main.c: 343:                 PIR3bits.TMR6IF = 0;
  3825     06C9  0020               	movlb	0	; select bank0
  3826     06CA  1193               	bcf	19,3	;volatile
  3827     06CB                     l3136:	
  3828                           ;main.c: 344:                 while(!EUSART_is_rx_ready()){
  3829                           
  3830                           
  3831                           ;main.c: 344:                 while(!EUSART_is_rx_ready()){
  3832     06CB  318B  2363  3186   	fcall	_EUSART_is_rx_ready
  3833     06CE  3A00               	xorlw	0
  3834     06CF  1D03               	btfss	3,2
  3835     06D0  2ED6               	goto	l3138
  3836                           
  3837                           ;main.c: 345:                     if(PIR3bits.TMR6IF){
  3838     06D1  1D93               	btfss	19,3	;volatile
  3839     06D2  2ECB               	goto	l3136
  3840                           
  3841                           ;main.c: 346:                         nao_salva = 1;
  3842     06D3  0021               	movlb	1	; select bank1
  3843     06D4  01C8               	clrf	_nao_salva^(0+128)
  3844     06D5  0AC8               	incf	_nao_salva^(0+128),f
  3845     06D6                     l3138:	
  3846                           ;main.c: 347:                         break;
  3847                           
  3848                           
  3849                           ;main.c: 350:                 if(nao_salva == 1){
  3850     06D6  0021               	movlb	1	; select bank1
  3851     06D7  0348               	decf	_nao_salva^(0+128),w
  3852     06D8  1903               	btfsc	3,2
  3853     06D9  2EE8               	goto	l3148
  3854                           
  3855                           ;main.c: 353:                 bufferRx[countRx] = EUSART_Read();
  3856     06DA  084A               	movf	_countRx^(0+128),w
  3857     06DB  3E53               	addlw	(low (_bufferRx| 0))& (0+255)
  3858     06DC  0086               	movwf	6
  3859     06DD  0187               	clrf	7
  3860     06DE  318C  2403  3186   	fcall	_EUSART_Read
  3861     06E1  0081               	movwf	1
  3862                           
  3863                           ;main.c: 354:                 countRx++;
  3864     06E2  3001               	movlw	1
  3865     06E3  0021               	movlb	1	; select bank1
  3866     06E4  00EE               	movwf	??_main^(0+128)
  3867     06E5  086E               	movf	??_main^(0+128),w
  3868     06E6  07CA               	addwf	_countRx^(0+128),f
  3869     06E7  2EC1               	goto	l3146
  3870     06E8                     l3148:
  3871                           
  3872                           ;main.c: 356:             analisa_Rx();
  3873     06E8  3185  2511  3186   	fcall	_analisa_Rx
  3874                           
  3875                           ;main.c: 357:             TMR6_LoadPeriodRegister(0x4A);
  3876     06EB  304A               	movlw	74
  3877     06EC  318B  237A  3186   	fcall	_TMR6_LoadPeriodRegister
  3878                           
  3879                           ;main.c: 358:             TMR6_WriteTimer(0);
  3880     06EF  3000               	movlw	0
  3881     06F0  318B  2380  3186   	fcall	_TMR6_WriteTimer
  3882                           
  3883                           ;main.c: 359:             PIR3bits.TMR6IF = 0;
  3884     06F3  0020               	movlb	0	; select bank0
  3885     06F4  1193               	bcf	19,3	;volatile
  3886     06F5                     l3156:
  3887                           
  3888                           ;main.c: 361:         if(INTCONbits.TMR0IF == 1){
  3889     06F5  1D0B               	btfss	11,2	;volatile
  3890     06F6  2F0A               	goto	l3172
  3891                           
  3892                           ;main.c: 362:             INTCONbits.TMR0IF = 0;
  3893     06F7  110B               	bcf	11,2	;volatile
  3894                           
  3895                           ;main.c: 363:             fluxpos();
  3896     06F8  318D  25CB  3186   	fcall	_fluxpos
  3897                           
  3898                           ;main.c: 364:             passo_ctrl = 0;
  3899     06FB  0021               	movlb	1	; select bank1
  3900     06FC  01C5               	clrf	_passo_ctrl^(0+128)
  3901                           
  3902                           ;main.c: 365:             count_Tx ++;
  3903     06FD  3001               	movlw	1
  3904     06FE  00EE               	movwf	??_main^(0+128)
  3905     06FF  086E               	movf	??_main^(0+128),w
  3906     0700  07C9               	addwf	_count_Tx^(0+128),f
  3907                           
  3908                           ;main.c: 366:             if (count_Tx == 6){
  3909     0701  3006               	movlw	6
  3910     0702  0649               	xorwf	_count_Tx^(0+128),w
  3911     0703  1D03               	btfss	3,2
  3912     0704  2F0A               	goto	l3172
  3913                           
  3914                           ;main.c: 367:                 envia_Tx ();
  3915     0705  318F  278C  3186   	fcall	_envia_Tx
  3916                           
  3917                           ;main.c: 368:                 count_Tx = 0;
  3918     0708  0021               	movlb	1	; select bank1
  3919     0709  01C9               	clrf	_count_Tx^(0+128)
  3920     070A                     l3172:
  3921                           
  3922                           ;main.c: 371:         if(PIR3bits.TMR6IF == 1){
  3923     070A  0020               	movlb	0	; select bank0
  3924     070B  1D93               	btfss	19,3	;volatile
  3925     070C  2F21               	goto	l3184
  3926                           
  3927                           ;main.c: 372:             PIR3bits.TMR6IF = 0;
  3928     070D  1193               	bcf	19,3	;volatile
  3929                           
  3930                           ;main.c: 373:             TMR6_WriteTimer(0);
  3931     070E  3000               	movlw	0
  3932     070F  318B  2380  3186   	fcall	_TMR6_WriteTimer
  3933                           
  3934                           ;main.c: 374:             adc_temp = ADC_GetConversion(channel_AN8);
  3935     0712  3008               	movlw	8
  3936     0713  318C  247C  3186   	fcall	_ADC_GetConversion
  3937     0716  084E               	movf	(?_ADC_GetConversion+1)^(0+128),w
  3938     0717  00B6               	movwf	(_adc_temp+1)^(0+128)
  3939     0718  084D               	movf	?_ADC_GetConversion^(0+128),w
  3940     0719  00B5               	movwf	_adc_temp^(0+128)
  3941     071A  0022               	movlb	2	; select bank2
  3942     071B  170C               	bsf	12,6	;volatile
  3943                           
  3944                           ;main.c: 376:             _delay((unsigned long)((15)*(16000000/4000000.0)));
  3945     071C  3014               	movlw	20
  3946     071D                     u3097:
  3947     071D  0B89               	decfsz	9,f
  3948     071E  2F1D               	goto	u3097
  3949     071F  0022               	movlb	2	; select bank2
  3950     0720  130C               	bcf	12,6	;volatile
  3951     0721                     l3184:
  3952                           
  3953                           ;main.c: 379:         if(TMR0_ReadTimer() >= 0x7F && passo_ctrl == 0){
  3954     0721  318B  2374  3186   	fcall	_TMR0_ReadTimer
  3955     0724  00EE               	movwf	??_main^(0+128)
  3956     0725  307F               	movlw	127
  3957     0726  026E               	subwf	??_main^(0+128),w
  3958     0727  1C03               	skipc
  3959     0728  2F31               	goto	l3192
  3960     0729  0845               	movf	_passo_ctrl^(0+128),w
  3961     072A  1D03               	btfss	3,2
  3962     072B  2F31               	goto	l3192
  3963                           
  3964                           ;main.c: 380:             passo_ctrl = 1;
  3965     072C  01C5               	clrf	_passo_ctrl^(0+128)
  3966     072D  0AC5               	incf	_passo_ctrl^(0+128),f
  3967                           
  3968                           ;main.c: 381:             fluxpos();
  3969     072E  318D  25CB  3186   	fcall	_fluxpos
  3970     0731                     l3192:
  3971                           
  3972                           ;main.c: 383:         LATAbits.LATA7=CMOUTbits.MC1OUT;
  3973     0731  0022               	movlb	2	; select bank2
  3974     0732  1C15               	btfss	21,0	;volatile
  3975     0733  2EA9               	goto	u2940
  3976     0734                     L1:
  3977     0734  0022               	movlb	2	; select bank2
  3978     0735  178C               	bsf	12,7	;volatile
  3979     0736  2EAB               	goto	l3116
  3980     0737                     __end_of_main:
  3981                           
  3982                           	psect	text1
  3983     0CAF                     __ptext1:	
  3984 ;; *************** function _setaPorta *****************
  3985 ;; Defined at:
  3986 ;;		line 53 in file "main.c"
  3987 ;; Parameters:    Size  Location     Type
  3988 ;;		None
  3989 ;; Auto vars:     Size  Location     Type
  3990 ;;		None
  3991 ;; Return value:  Size  Location     Type
  3992 ;;                  1    wreg      void 
  3993 ;; Registers used:
  3994 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3995 ;; Tracked objects:
  3996 ;;		On entry : 1F/0
  3997 ;;		On exit  : 1F/1
  3998 ;;		Unchanged: 0/0
  3999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4000 ;;      Params:         0       0       0       0       0       0
  4001 ;;      Locals:         0       0       0       0       0       0
  4002 ;;      Temps:          0       0       1       0       0       0
  4003 ;;      Totals:         0       0       1       0       0       0
  4004 ;;Total ram usage:        1 bytes
  4005 ;; Hardware stack levels used: 1
  4006 ;; Hardware stack levels required when called: 7
  4007 ;; This function calls:
  4008 ;;		_CMP1_GetOutputStatus
  4009 ;;		_daUmPasso
  4010 ;; This function is called by:
  4011 ;;		_main
  4012 ;; This function uses a non-reentrant model
  4013 ;;
  4014                           
  4015     0CAF                     _setaPorta:	
  4016                           ;psect for function _setaPorta
  4017                           
  4018     0CAF                     l2976:	
  4019                           ;main.c: 54:     while(!CMP1_GetOutputStatus()){
  4020                           
  4021                           ;incstack = 0
  4022                           ; Regs used in _setaPorta: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4023                           
  4024                           
  4025                           ;main.c: 54:     while(!CMP1_GetOutputStatus()){
  4026     0CAF  318B  235B  318C   	fcall	_CMP1_GetOutputStatus
  4027     0CB2  3A00               	xorlw	0
  4028     0CB3  1D03               	btfss	3,2
  4029     0CB4  2CC3               	goto	l584
  4030                           
  4031                           ;main.c: 55:         daUmPasso(1);
  4032     0CB5  3001               	movlw	1
  4033     0CB6  318D  2503  318C   	fcall	_daUmPasso
  4034                           
  4035                           ;main.c: 56:         _delay((unsigned long)((6)*(16000000/4000.0)));
  4036     0CB9  3020               	movlw	32
  4037     0CBA  0021               	movlb	1	; select bank1
  4038     0CBB  00D1               	movwf	??_setaPorta^(0+128)
  4039     0CBC  3029               	movlw	41
  4040     0CBD                     u3107:
  4041     0CBD  0B89               	decfsz	9,f
  4042     0CBE  2CBD               	goto	u3107
  4043     0CBF  0BD1               	decfsz	??_setaPorta^(0+128),f
  4044     0CC0  2CBD               	goto	u3107
  4045     0CC1  3200               	nop2
  4046     0CC2  2CAF               	goto	l2976
  4047     0CC3                     l584:
  4048                           
  4049                           ;main.c: 59:     fim_curso = 1;
  4050     0CC3  0021               	movlb	1	; select bank1
  4051     0CC4  01C6               	clrf	_fim_curso^(0+128)
  4052     0CC5  0AC6               	incf	_fim_curso^(0+128),f
  4053                           
  4054                           ;main.c: 60:     position = 0;
  4055     0CC6  01B9               	clrf	_position^(0+128)
  4056     0CC7  01BA               	clrf	(_position+1)^(0+128)
  4057     0CC8  0008               	return
  4058     0CC9                     __end_of_setaPorta:
  4059                           
  4060                           	psect	text2
  4061     0B5B                     __ptext2:	
  4062 ;; *************** function _CMP1_GetOutputStatus *****************
  4063 ;; Defined at:
  4064 ;;		line 69 in file "mcc_generated_files/cmp1.c"
  4065 ;; Parameters:    Size  Location     Type
  4066 ;;		None
  4067 ;; Auto vars:     Size  Location     Type
  4068 ;;		None
  4069 ;; Return value:  Size  Location     Type
  4070 ;;                  1    wreg      _Bool 
  4071 ;; Registers used:
  4072 ;;		wreg, status,2, status,0
  4073 ;; Tracked objects:
  4074 ;;		On entry : 0/0
  4075 ;;		On exit  : 1F/2
  4076 ;;		Unchanged: 0/0
  4077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4078 ;;      Params:         0       0       0       0       0       0
  4079 ;;      Locals:         0       0       0       0       0       0
  4080 ;;      Temps:          0       0       0       0       0       0
  4081 ;;      Totals:         0       0       0       0       0       0
  4082 ;;Total ram usage:        0 bytes
  4083 ;; Hardware stack levels used: 1
  4084 ;; Hardware stack levels required when called: 5
  4085 ;; This function calls:
  4086 ;;		Nothing
  4087 ;; This function is called by:
  4088 ;;		_setaPorta
  4089 ;; This function uses a non-reentrant model
  4090 ;;
  4091                           
  4092     0B5B                     _CMP1_GetOutputStatus:	
  4093                           ;psect for function _CMP1_GetOutputStatus
  4094                           
  4095                           
  4096                           ;mcc_generated_files/cmp1.c: 71:  return (CMOUTbits.MC1OUT);
  4097                           
  4098                           ;incstack = 0
  4099                           ; Regs used in _CMP1_GetOutputStatus: [wreg+status,2+status,0]
  4100     0B5B  0022               	movlb	2	; select bank2
  4101     0B5C  0815               	movf	21,w	;volatile
  4102     0B5D  3901               	andlw	1
  4103     0B5E  0008               	return
  4104     0B5F                     __end_of_CMP1_GetOutputStatus:
  4105                           
  4106                           	psect	text3
  4107     0DCB                     __ptext3:	
  4108 ;; *************** function _fluxpos *****************
  4109 ;; Defined at:
  4110 ;;		line 141 in file "main.c"
  4111 ;; Parameters:    Size  Location     Type
  4112 ;;		None
  4113 ;; Auto vars:     Size  Location     Type
  4114 ;;		None
  4115 ;; Return value:  Size  Location     Type
  4116 ;;                  1    wreg      void 
  4117 ;; Registers used:
  4118 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4119 ;; Tracked objects:
  4120 ;;		On entry : 1E/0
  4121 ;;		On exit  : 1C/0
  4122 ;;		Unchanged: 0/0
  4123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4124 ;;      Params:         0       0       0       0       0       0
  4125 ;;      Locals:         0       0       0       0       0       0
  4126 ;;      Temps:          0       0       0       0       0       0
  4127 ;;      Totals:         0       0       0       0       0       0
  4128 ;;Total ram usage:        0 bytes
  4129 ;; Hardware stack levels used: 1
  4130 ;; Hardware stack levels required when called: 7
  4131 ;; This function calls:
  4132 ;;		_daUmPasso
  4133 ;; This function is called by:
  4134 ;;		_main
  4135 ;; This function uses a non-reentrant model
  4136 ;;
  4137                           
  4138     0DCB                     _fluxpos:	
  4139                           ;psect for function _fluxpos
  4140                           
  4141                           
  4142                           ;main.c: 142:     if(controlchoice==2){
  4143                           
  4144                           ;incstack = 0
  4145                           ; Regs used in _fluxpos: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4146     0DCB  3002               	movlw	2
  4147     0DCC  0021               	movlb	1	; select bank1
  4148     0DCD  064B               	xorwf	_controlchoice^(0+128),w
  4149     0DCE  1D03               	btfss	3,2
  4150     0DCF  2DE8               	goto	l2990
  4151                           
  4152                           ;main.c: 143:         if(output>position) daUmPasso(0);
  4153     0DD0  0842               	movf	(_output+1)^(0+128),w
  4154     0DD1  023A               	subwf	(_position+1)^(0+128),w
  4155     0DD2  1D03               	skipz
  4156     0DD3  2DD6               	goto	u2775
  4157     0DD4  0841               	movf	_output^(0+128),w
  4158     0DD5  0239               	subwf	_position^(0+128),w
  4159     0DD6                     u2775:
  4160     0DD6  1803               	skipnc
  4161     0DD7  2DDC               	goto	l2986
  4162     0DD8  3000               	movlw	0
  4163     0DD9  318D  2503         	fcall	_daUmPasso
  4164     0DDB  0008               	return
  4165     0DDC                     l2986:
  4166     0DDC  083A               	movf	(_position+1)^(0+128),w
  4167     0DDD  0242               	subwf	(_output+1)^(0+128),w
  4168     0DDE  1D03               	skipz
  4169     0DDF  2DE2               	goto	u2785
  4170     0DE0  0839               	movf	_position^(0+128),w
  4171     0DE1  0241               	subwf	_output^(0+128),w
  4172     0DE2                     u2785:
  4173     0DE2  1803               	skipnc
  4174     0DE3  0008               	return
  4175     0DE4  3001               	movlw	1
  4176     0DE5  318D  2503         	fcall	_daUmPasso
  4177     0DE7  0008               	return
  4178     0DE8                     l2990:
  4179                           
  4180                           ;main.c: 147:         if(sp_position>position) daUmPasso(0);
  4181     0DE8  0838               	movf	(_sp_position+1)^(0+128),w
  4182     0DE9  023A               	subwf	(_position+1)^(0+128),w
  4183     0DEA  1D03               	skipz
  4184     0DEB  2DEE               	goto	u2795
  4185     0DEC  0837               	movf	_sp_position^(0+128),w
  4186     0DED  0239               	subwf	_position^(0+128),w
  4187     0DEE                     u2795:
  4188     0DEE  1803               	skipnc
  4189     0DEF  2DF4               	goto	l2994
  4190     0DF0  3000               	movlw	0
  4191     0DF1  318D  2503         	fcall	_daUmPasso
  4192     0DF3  0008               	return
  4193     0DF4                     l2994:
  4194     0DF4  083A               	movf	(_position+1)^(0+128),w
  4195     0DF5  0238               	subwf	(_sp_position+1)^(0+128),w
  4196     0DF6  1D03               	skipz
  4197     0DF7  2DFA               	goto	u2805
  4198     0DF8  0839               	movf	_position^(0+128),w
  4199     0DF9  0237               	subwf	_sp_position^(0+128),w
  4200     0DFA                     u2805:
  4201     0DFA  1803               	skipnc
  4202     0DFB  2E00               	goto	l687
  4203     0DFC  3001               	movlw	1
  4204     0DFD  318D  2503         	fcall	_daUmPasso
  4205     0DFF  0008               	return
  4206     0E00                     l687:	
  4207                           ;main.c: 150:             do { LATAbits.LATA4 = 0; } while(0);
  4208                           
  4209     0E00  0022               	movlb	2	; select bank2
  4210     0E01  120C               	bcf	12,4	;volatile
  4211                           
  4212                           ;main.c: 151:             do { LATAbits.LATA3 = 0; } while(0);
  4213     0E02  118C               	bcf	12,3	;volatile
  4214                           
  4215                           ;main.c: 152:             do { LATAbits.LATA2 = 0; } while(0);
  4216     0E03  110C               	bcf	12,2	;volatile
  4217                           
  4218                           ;main.c: 153:             do { LATAbits.LATA1 = 0; } while(0);
  4219     0E04  108C               	bcf	12,1	;volatile
  4220     0E05  0008               	return
  4221     0E06                     __end_of_fluxpos:
  4222                           
  4223                           	psect	text4
  4224     0D03                     __ptext4:	
  4225 ;; *************** function _daUmPasso *****************
  4226 ;; Defined at:
  4227 ;;		line 63 in file "main.c"
  4228 ;; Parameters:    Size  Location     Type
  4229 ;;  sentido         1    wreg     unsigned char 
  4230 ;; Auto vars:     Size  Location     Type
  4231 ;;  sentido         1    3[BANK1 ] unsigned char 
  4232 ;; Return value:  Size  Location     Type
  4233 ;;                  1    wreg      void 
  4234 ;; Registers used:
  4235 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4236 ;; Tracked objects:
  4237 ;;		On entry : 1C/2
  4238 ;;		On exit  : 1F/1
  4239 ;;		Unchanged: 0/0
  4240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4241 ;;      Params:         0       0       0       0       0       0
  4242 ;;      Locals:         0       0       1       0       0       0
  4243 ;;      Temps:          0       0       0       0       0       0
  4244 ;;      Totals:         0       0       1       0       0       0
  4245 ;;Total ram usage:        1 bytes
  4246 ;; Hardware stack levels used: 1
  4247 ;; Hardware stack levels required when called: 6
  4248 ;; This function calls:
  4249 ;;		_definePassoMotor
  4250 ;; This function is called by:
  4251 ;;		_setaPorta
  4252 ;;		_fluxpos
  4253 ;; This function uses a non-reentrant model
  4254 ;;
  4255                           
  4256     0D03                     _daUmPasso:	
  4257                           ;psect for function _daUmPasso
  4258                           
  4259                           
  4260                           ;incstack = 0
  4261                           ; Regs used in _daUmPasso: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4262                           ;daUmPasso@sentido stored from wreg
  4263     0D03  0021               	movlb	1	; select bank1
  4264     0D04  00D0               	movwf	daUmPasso@sentido^(0+128)
  4265                           
  4266                           ;main.c: 64:     if (fim_curso) {
  4267     0D05  0846               	movf	_fim_curso^(0+128),w
  4268     0D06  1903               	btfsc	3,2
  4269     0D07  2D1D               	goto	l2806
  4270                           
  4271                           ;main.c: 65:         if(sentido == 1){
  4272     0D08  0350               	decf	daUmPasso@sentido^(0+128),w
  4273     0D09  1D03               	btfss	3,2
  4274     0D0A  2D10               	goto	l2800
  4275                           
  4276                           ;main.c: 66:             position--;
  4277     0D0B  3001               	movlw	1
  4278     0D0C  02B9               	subwf	_position^(0+128),f
  4279     0D0D  3000               	movlw	0
  4280     0D0E  3BBA               	subwfb	(_position+1)^(0+128),f
  4281                           
  4282                           ;main.c: 67:         }
  4283     0D0F  2D17               	goto	l2804
  4284     0D10                     l2800:
  4285     0D10  0850               	movf	daUmPasso@sentido^(0+128),w
  4286     0D11  1D03               	btfss	3,2
  4287     0D12  2D17               	goto	l2804
  4288                           
  4289                           ;main.c: 69:             position++;
  4290     0D13  3001               	movlw	1
  4291     0D14  07B9               	addwf	_position^(0+128),f
  4292     0D15  3000               	movlw	0
  4293     0D16  3DBA               	addwfc	(_position+1)^(0+128),f
  4294     0D17                     l2804:
  4295                           
  4296                           ;main.c: 71:         definePassoMotor(passo, sentido);
  4297     0D17  0850               	movf	daUmPasso@sentido^(0+128),w
  4298     0D18  00CD               	movwf	definePassoMotor@sentido^(0+128)
  4299     0D19  0847               	movf	_passo^(0+128),w
  4300     0D1A  318E  2606         	fcall	_definePassoMotor
  4301                           
  4302                           ;main.c: 72:     } else {
  4303     0D1C  0008               	return
  4304     0D1D                     l2806:
  4305                           
  4306                           ;main.c: 73:         definePassoMotor(passo, 1);
  4307     0D1D  01CD               	clrf	definePassoMotor@sentido^(0+128)
  4308     0D1E  0ACD               	incf	definePassoMotor@sentido^(0+128),f
  4309     0D1F  0847               	movf	_passo^(0+128),w
  4310     0D20  318E  2606         	fcall	_definePassoMotor
  4311     0D22  0008               	return
  4312     0D23                     __end_of_daUmPasso:
  4313                           
  4314                           	psect	text5
  4315     0E06                     __ptext5:	
  4316 ;; *************** function _definePassoMotor *****************
  4317 ;; Defined at:
  4318 ;;		line 77 in file "main.c"
  4319 ;; Parameters:    Size  Location     Type
  4320 ;;  passom          1    wreg     unsigned char 
  4321 ;;  sentido         1    0[BANK1 ] unsigned char 
  4322 ;; Auto vars:     Size  Location     Type
  4323 ;;  passom          1    2[BANK1 ] unsigned char 
  4324 ;; Return value:  Size  Location     Type
  4325 ;;                  1    wreg      void 
  4326 ;; Registers used:
  4327 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4328 ;; Tracked objects:
  4329 ;;		On entry : 1F/1
  4330 ;;		On exit  : 1F/1
  4331 ;;		Unchanged: 0/0
  4332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4333 ;;      Params:         0       0       1       0       0       0
  4334 ;;      Locals:         0       0       1       0       0       0
  4335 ;;      Temps:          0       0       1       0       0       0
  4336 ;;      Totals:         0       0       3       0       0       0
  4337 ;;Total ram usage:        3 bytes
  4338 ;; Hardware stack levels used: 1
  4339 ;; Hardware stack levels required when called: 5
  4340 ;; This function calls:
  4341 ;;		Nothing
  4342 ;; This function is called by:
  4343 ;;		_daUmPasso
  4344 ;; This function uses a non-reentrant model
  4345 ;;
  4346                           
  4347     0E06                     _definePassoMotor:	
  4348                           ;psect for function _definePassoMotor
  4349                           
  4350                           
  4351                           ;incstack = 0
  4352                           ; Regs used in _definePassoMotor: [wreg-fsr0h+status,2+status,0]
  4353                           ;definePassoMotor@passom stored from wreg
  4354     0E06  00CF               	movwf	definePassoMotor@passom^(0+128)
  4355                           
  4356                           ;main.c: 78:     if (sentido == 1) {
  4357     0E07  034D               	decf	definePassoMotor@sentido^(0+128),w
  4358     0E08  1903               	btfsc	3,2
  4359     0E09  2E21               	goto	l2338
  4360     0E0A  2E2F               	goto	l2340
  4361     0E0B                     l599:	
  4362                           ;main.c: 81:                 do { LATAbits.LATA1 = 1; } while(0);
  4363                           
  4364     0E0B  0022               	movlb	2	; select bank2
  4365     0E0C  148C               	bsf	12,1	;volatile
  4366                           
  4367                           ;main.c: 82:                 do { LATAbits.LATA2 = 1; } while(0);
  4368     0E0D  150C               	bsf	12,2	;volatile
  4369                           
  4370                           ;main.c: 83:                 do { LATAbits.LATA3 = 0; } while(0);
  4371     0E0E  118C               	bcf	12,3	;volatile
  4372     0E0F  2E14               	goto	l615
  4373     0E10                     l609:	
  4374                           ;main.c: 87:                 do { LATAbits.LATA1 = 0; } while(0);
  4375                           
  4376                           ;main.c: 84:                 do { LATAbits.LATA4 = 0; } while(0);
  4377                           
  4378     0E10  0022               	movlb	2	; select bank2
  4379     0E11  108C               	bcf	12,1	;volatile
  4380                           
  4381                           ;main.c: 88:                 do { LATAbits.LATA2 = 1; } while(0);
  4382     0E12  150C               	bsf	12,2	;volatile
  4383                           
  4384                           ;main.c: 89:                 do { LATAbits.LATA3 = 1; } while(0);
  4385     0E13  158C               	bsf	12,3	;volatile
  4386     0E14                     l615:	
  4387                           ;main.c: 90:                 do { LATAbits.LATA4 = 0; } while(0);
  4388                           
  4389     0E14  120C               	bcf	12,4	;volatile
  4390     0E15  2E57               	goto	l2348
  4391     0E16                     l618:	
  4392                           ;main.c: 93:                 do { LATAbits.LATA1 = 0; } while(0);
  4393                           
  4394     0E16  0022               	movlb	2	; select bank2
  4395     0E17  108C               	bcf	12,1	;volatile
  4396                           
  4397                           ;main.c: 94:                 do { LATAbits.LATA2 = 0; } while(0);
  4398     0E18  110C               	bcf	12,2	;volatile
  4399                           
  4400                           ;main.c: 95:                 do { LATAbits.LATA3 = 1; } while(0);
  4401     0E19  158C               	bsf	12,3	;volatile
  4402     0E1A  2E1F               	goto	l633
  4403     0E1B                     l627:	
  4404                           ;main.c: 99:                 do { LATAbits.LATA1 = 1; } while(0);
  4405                           
  4406                           ;main.c: 96:                 do { LATAbits.LATA4 = 1; } while(0);
  4407                           
  4408     0E1B  0022               	movlb	2	; select bank2
  4409     0E1C  148C               	bsf	12,1	;volatile
  4410                           
  4411                           ;main.c: 100:                 do { LATAbits.LATA2 = 0; } while(0);
  4412     0E1D  110C               	bcf	12,2	;volatile
  4413                           
  4414                           ;main.c: 101:                 do { LATAbits.LATA3 = 0; } while(0);
  4415     0E1E  118C               	bcf	12,3	;volatile
  4416     0E1F                     l633:	
  4417                           ;main.c: 102:                 do { LATAbits.LATA4 = 1; } while(0);
  4418                           
  4419     0E1F  160C               	bsf	12,4	;volatile
  4420     0E20  2E57               	goto	l2348
  4421     0E21                     l2338:
  4422     0E21  084F               	movf	definePassoMotor@passom^(0+128),w
  4423                           
  4424                           ; Switch size 1, requested type "simple"
  4425                           ; Number of cases is 4, Range of values is 0 to 3
  4426                           ; switch strategies available:
  4427                           ; Name         Instructions Cycles
  4428                           ; simple_byte           13     7 (average)
  4429                           ; direct_byte           14     6 (fixed)
  4430                           ; jumptable            260     6 (fixed)
  4431                           ;	Chosen strategy is simple_byte
  4432     0E22  3A00               	xorlw	0	; case 0
  4433     0E23  1903               	skipnz
  4434     0E24  2E0B               	goto	l599
  4435     0E25  3A01               	xorlw	1	; case 1
  4436     0E26  1903               	skipnz
  4437     0E27  2E10               	goto	l609
  4438     0E28  3A03               	xorlw	3	; case 2
  4439     0E29  1903               	skipnz
  4440     0E2A  2E16               	goto	l618
  4441     0E2B  3A01               	xorlw	1	; case 3
  4442     0E2C  1903               	skipnz
  4443     0E2D  2E1B               	goto	l627
  4444     0E2E  2E57               	goto	l2348
  4445     0E2F                     l2340:
  4446     0E2F  084D               	movf	definePassoMotor@sentido^(0+128),w
  4447     0E30  1903               	btfsc	3,2
  4448     0E31  2E49               	goto	l2346
  4449     0E32  2E57               	goto	l2348
  4450     0E33                     l639:	
  4451                           ;main.c: 109:                 do { LATAbits.LATA4 = 1; } while(0);
  4452                           
  4453     0E33  0022               	movlb	2	; select bank2
  4454     0E34  160C               	bsf	12,4	;volatile
  4455                           
  4456                           ;main.c: 110:                 do { LATAbits.LATA3 = 1; } while(0);
  4457     0E35  158C               	bsf	12,3	;volatile
  4458                           
  4459                           ;main.c: 111:                 do { LATAbits.LATA2 = 0; } while(0);
  4460     0E36  110C               	bcf	12,2	;volatile
  4461     0E37  2E3C               	goto	l655
  4462     0E38                     l649:	
  4463                           ;main.c: 115:                 do { LATAbits.LATA4 = 0; } while(0);
  4464                           
  4465                           ;main.c: 112:                 do { LATAbits.LATA1 = 0; } while(0);
  4466                           
  4467     0E38  0022               	movlb	2	; select bank2
  4468     0E39  120C               	bcf	12,4	;volatile
  4469                           
  4470                           ;main.c: 116:                 do { LATAbits.LATA3 = 1; } while(0);
  4471     0E3A  158C               	bsf	12,3	;volatile
  4472                           
  4473                           ;main.c: 117:                 do { LATAbits.LATA2 = 1; } while(0);
  4474     0E3B  150C               	bsf	12,2	;volatile
  4475     0E3C                     l655:	
  4476                           ;main.c: 118:                 do { LATAbits.LATA1 = 0; } while(0);
  4477                           
  4478     0E3C  108C               	bcf	12,1	;volatile
  4479     0E3D  2E57               	goto	l2348
  4480     0E3E                     l658:	
  4481                           ;main.c: 121:                 do { LATAbits.LATA4 = 0; } while(0);
  4482                           
  4483     0E3E  0022               	movlb	2	; select bank2
  4484     0E3F  120C               	bcf	12,4	;volatile
  4485                           
  4486                           ;main.c: 122:                 do { LATAbits.LATA3 = 0; } while(0);
  4487     0E40  118C               	bcf	12,3	;volatile
  4488                           
  4489                           ;main.c: 123:                 do { LATAbits.LATA2 = 1; } while(0);
  4490     0E41  150C               	bsf	12,2	;volatile
  4491     0E42  2E47               	goto	L3
  4492     0E43                     l667:	
  4493                           ;main.c: 127:                 do { LATAbits.LATA4 = 1; } while(0);
  4494                           
  4495                           ;main.c: 124:                 do { LATAbits.LATA1 = 1; } while(0);
  4496                           
  4497     0E43  0022               	movlb	2	; select bank2
  4498     0E44  160C               	bsf	12,4	;volatile
  4499                           
  4500                           ;main.c: 128:                 do { LATAbits.LATA3 = 0; } while(0);
  4501     0E45  118C               	bcf	12,3	;volatile
  4502                           
  4503                           ;main.c: 129:                 do { LATAbits.LATA2 = 0; } while(0);
  4504     0E46  110C               	bcf	12,2	;volatile
  4505     0E47                     L3:
  4506                           
  4507                           ;main.c: 130:                 do { LATAbits.LATA1 = 1; } while(0);
  4508     0E47  148C               	bsf	12,1	;volatile
  4509     0E48  2E57               	goto	l2348
  4510     0E49                     l2346:
  4511     0E49  084F               	movf	definePassoMotor@passom^(0+128),w
  4512                           
  4513                           ; Switch size 1, requested type "simple"
  4514                           ; Number of cases is 4, Range of values is 0 to 3
  4515                           ; switch strategies available:
  4516                           ; Name         Instructions Cycles
  4517                           ; simple_byte           13     7 (average)
  4518                           ; direct_byte           14     6 (fixed)
  4519                           ; jumptable            260     6 (fixed)
  4520                           ;	Chosen strategy is simple_byte
  4521     0E4A  3A00               	xorlw	0	; case 0
  4522     0E4B  1903               	skipnz
  4523     0E4C  2E33               	goto	l639
  4524     0E4D  3A01               	xorlw	1	; case 1
  4525     0E4E  1903               	skipnz
  4526     0E4F  2E38               	goto	l649
  4527     0E50  3A03               	xorlw	3	; case 2
  4528     0E51  1903               	skipnz
  4529     0E52  2E3E               	goto	l658
  4530     0E53  3A01               	xorlw	1	; case 3
  4531     0E54  1903               	skipnz
  4532     0E55  2E43               	goto	l667
  4533     0E56  2E57               	goto	l2348
  4534     0E57                     l2348:
  4535                           
  4536                           ;main.c: 135:     passo++;
  4537     0E57  3001               	movlw	1
  4538     0E58  0021               	movlb	1	; select bank1
  4539     0E59  00CE               	movwf	??_definePassoMotor^(0+128)
  4540     0E5A  084E               	movf	??_definePassoMotor^(0+128),w
  4541     0E5B  07C7               	addwf	_passo^(0+128),f
  4542                           
  4543                           ;main.c: 136:     passo = passo & 0x03;
  4544     0E5C  0847               	movf	_passo^(0+128),w
  4545     0E5D  3903               	andlw	3
  4546     0E5E  00C7               	movwf	_passo^(0+128)
  4547     0E5F  0008               	return
  4548     0E60                     __end_of_definePassoMotor:
  4549                           
  4550                           	psect	text6
  4551     0F8C                     __ptext6:	
  4552 ;; *************** function _envia_Tx *****************
  4553 ;; Defined at:
  4554 ;;		line 276 in file "main.c"
  4555 ;; Parameters:    Size  Location     Type
  4556 ;;		None
  4557 ;; Auto vars:     Size  Location     Type
  4558 ;;		None
  4559 ;; Return value:  Size  Location     Type
  4560 ;;                  1    wreg      void 
  4561 ;; Registers used:
  4562 ;;		wreg, status,2, status,0, pclath, cstack
  4563 ;; Tracked objects:
  4564 ;;		On entry : 1F/1
  4565 ;;		On exit  : 1F/3
  4566 ;;		Unchanged: 0/0
  4567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4568 ;;      Params:         0       0       0       0       0       0
  4569 ;;      Locals:         0       0       0       0       0       0
  4570 ;;      Temps:          0       0       0       0       0       0
  4571 ;;      Totals:         0       0       0       0       0       0
  4572 ;;Total ram usage:        0 bytes
  4573 ;; Hardware stack levels used: 1
  4574 ;; Hardware stack levels required when called: 6
  4575 ;; This function calls:
  4576 ;;		_EUSART_Write
  4577 ;;		___fltol
  4578 ;; This function is called by:
  4579 ;;		_main
  4580 ;; This function uses a non-reentrant model
  4581 ;;
  4582                           
  4583     0F8C                     _envia_Tx:	
  4584                           ;psect for function _envia_Tx
  4585                           
  4586                           
  4587                           ;main.c: 277:     EUSART_Write(controlchoice);
  4588                           
  4589                           ;incstack = 0
  4590                           ; Regs used in _envia_Tx: [wreg+status,2+status,0+pclath+cstack]
  4591     0F8C  084B               	movf	_controlchoice^(0+128),w
  4592     0F8D  318B  23D1  318F   	fcall	_EUSART_Write
  4593                           
  4594                           ;main.c: 278:     vTx.v = sp_height;
  4595     0F90  0020               	movlb	0	; select bank0
  4596     0F91  0864               	movf	_sp_height+1,w
  4597     0F92  0021               	movlb	1	; select bank1
  4598     0F93  00C0               	movwf	(_vTx+1)^(0+128)
  4599     0F94  0020               	movlb	0	; select bank0
  4600     0F95  0863               	movf	_sp_height,w
  4601     0F96  0021               	movlb	1	; select bank1
  4602     0F97  00BF               	movwf	_vTx^(0+128)
  4603                           
  4604                           ;main.c: 279:     EUSART_Write(vTx.vH);
  4605     0F98  0840               	movf	(_vTx^(0+128)+1),w
  4606     0F99  318B  23D1  318F   	fcall	_EUSART_Write
  4607                           
  4608                           ;main.c: 280:     EUSART_Write(vTx.vL);
  4609     0F9C  0021               	movlb	1	; select bank1
  4610     0F9D  083F               	movf	_vTx^(0+128),w
  4611     0F9E  318B  23D1  318F   	fcall	_EUSART_Write
  4612                           
  4613                           ;main.c: 281:     vTx.v = height;
  4614     0FA1  0021               	movlb	1	; select bank1
  4615     0FA2  0834               	movf	(_height+1)^(0+128),w
  4616     0FA3  00C0               	movwf	(_vTx+1)^(0+128)
  4617     0FA4  0833               	movf	_height^(0+128),w
  4618     0FA5  00BF               	movwf	_vTx^(0+128)
  4619                           
  4620                           ;main.c: 282:     EUSART_Write(vTx.vH);
  4621     0FA6  0840               	movf	(_vTx^(0+128)+1),w
  4622     0FA7  318B  23D1  318F   	fcall	_EUSART_Write
  4623                           
  4624                           ;main.c: 283:     EUSART_Write(vTx.vL);
  4625     0FAA  0021               	movlb	1	; select bank1
  4626     0FAB  083F               	movf	_vTx^(0+128),w
  4627     0FAC  318B  23D1  318F   	fcall	_EUSART_Write
  4628                           
  4629                           ;main.c: 284:     vTx.v = avg_tempo_voo;
  4630     0FAF  0021               	movlb	1	; select bank1
  4631     0FB0  0823               	movf	(_avg_tempo_voo+3)^(0+128),w
  4632     0FB1  00D0               	movwf	(___fltol@f1+3)^(0+128)
  4633     0FB2  0822               	movf	(_avg_tempo_voo+2)^(0+128),w
  4634     0FB3  00CF               	movwf	(___fltol@f1+2)^(0+128)
  4635     0FB4  0821               	movf	(_avg_tempo_voo+1)^(0+128),w
  4636     0FB5  00CE               	movwf	(___fltol@f1+1)^(0+128)
  4637     0FB6  0820               	movf	_avg_tempo_voo^(0+128),w
  4638     0FB7  00CD               	movwf	___fltol@f1^(0+128)
  4639     0FB8  318E  26C1  318F   	fcall	___fltol
  4640     0FBB  084E               	movf	(?___fltol+1)^(0+128),w
  4641     0FBC  00C0               	movwf	(_vTx+1)^(0+128)
  4642     0FBD  084D               	movf	?___fltol^(0+128),w
  4643     0FBE  00BF               	movwf	_vTx^(0+128)
  4644                           
  4645                           ;main.c: 285:     EUSART_Write(vTx.vH);
  4646     0FBF  0840               	movf	(_vTx^(0+128)+1),w
  4647     0FC0  318B  23D1  318F   	fcall	_EUSART_Write
  4648                           
  4649                           ;main.c: 286:     EUSART_Write(vTx.vL);
  4650     0FC3  0021               	movlb	1	; select bank1
  4651     0FC4  083F               	movf	_vTx^(0+128),w
  4652     0FC5  318B  23D1  318F   	fcall	_EUSART_Write
  4653                           
  4654                           ;main.c: 287:     vTx.v = adc_temp;
  4655     0FC8  0021               	movlb	1	; select bank1
  4656     0FC9  0836               	movf	(_adc_temp+1)^(0+128),w
  4657     0FCA  00C0               	movwf	(_vTx+1)^(0+128)
  4658     0FCB  0835               	movf	_adc_temp^(0+128),w
  4659     0FCC  00BF               	movwf	_vTx^(0+128)
  4660                           
  4661                           ;main.c: 288:     EUSART_Write(vTx.vH);
  4662     0FCD  0840               	movf	(_vTx^(0+128)+1),w
  4663     0FCE  318B  23D1  318F   	fcall	_EUSART_Write
  4664                           
  4665                           ;main.c: 289:     EUSART_Write(vTx.vL);
  4666     0FD1  0021               	movlb	1	; select bank1
  4667     0FD2  083F               	movf	_vTx^(0+128),w
  4668     0FD3  318B  23D1  318F   	fcall	_EUSART_Write
  4669                           
  4670                           ;main.c: 290:     vTx.v = sp_position;
  4671     0FD6  0021               	movlb	1	; select bank1
  4672     0FD7  0838               	movf	(_sp_position+1)^(0+128),w
  4673     0FD8  00C0               	movwf	(_vTx+1)^(0+128)
  4674     0FD9  0837               	movf	_sp_position^(0+128),w
  4675     0FDA  00BF               	movwf	_vTx^(0+128)
  4676                           
  4677                           ;main.c: 291:     EUSART_Write(vTx.vH);
  4678     0FDB  0840               	movf	(_vTx^(0+128)+1),w
  4679     0FDC  318B  23D1  318F   	fcall	_EUSART_Write
  4680                           
  4681                           ;main.c: 292:     EUSART_Write(vTx.vL);
  4682     0FDF  0021               	movlb	1	; select bank1
  4683     0FE0  083F               	movf	_vTx^(0+128),w
  4684     0FE1  318B  23D1  318F   	fcall	_EUSART_Write
  4685                           
  4686                           ;main.c: 293:     vTx.v = position;
  4687     0FE4  0021               	movlb	1	; select bank1
  4688     0FE5  083A               	movf	(_position+1)^(0+128),w
  4689     0FE6  00C0               	movwf	(_vTx+1)^(0+128)
  4690     0FE7  0839               	movf	_position^(0+128),w
  4691     0FE8  00BF               	movwf	_vTx^(0+128)
  4692                           
  4693                           ;main.c: 294:     EUSART_Write(vTx.vH);
  4694     0FE9  0840               	movf	(_vTx^(0+128)+1),w
  4695     0FEA  318B  23D1  318F   	fcall	_EUSART_Write
  4696                           
  4697                           ;main.c: 295:     EUSART_Write(vTx.vL);
  4698     0FED  0021               	movlb	1	; select bank1
  4699     0FEE  083F               	movf	_vTx^(0+128),w
  4700     0FEF  318B  23D1  318F   	fcall	_EUSART_Write
  4701                           
  4702                           ;main.c: 296:     vTx.v = dc;
  4703     0FF2  0021               	movlb	1	; select bank1
  4704     0FF3  083C               	movf	(_dc+1)^(0+128),w
  4705     0FF4  00C0               	movwf	(_vTx+1)^(0+128)
  4706     0FF5  083B               	movf	_dc^(0+128),w
  4707     0FF6  00BF               	movwf	_vTx^(0+128)
  4708                           
  4709                           ;main.c: 297:     EUSART_Write(vTx.vH);
  4710     0FF7  0840               	movf	(_vTx^(0+128)+1),w
  4711     0FF8  318B  23D1  318F   	fcall	_EUSART_Write
  4712                           
  4713                           ;main.c: 298:     EUSART_Write(vTx.vL);
  4714     0FFB  0021               	movlb	1	; select bank1
  4715     0FFC  083F               	movf	_vTx^(0+128),w
  4716     0FFD  318B  23D1         	fcall	_EUSART_Write
  4717     0FFF  0008               	return
  4718     1000                     __end_of_envia_Tx:
  4719                           
  4720                           	psect	text7
  4721     0EC1                     __ptext7:	
  4722 ;; *************** function ___fltol *****************
  4723 ;; Defined at:
  4724 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\fltol.c"
  4725 ;; Parameters:    Size  Location     Type
  4726 ;;  f1              4    0[BANK1 ] void 
  4727 ;; Auto vars:     Size  Location     Type
  4728 ;;  exp1            1    9[BANK1 ] unsigned char 
  4729 ;;  sign1           1    8[BANK1 ] unsigned char 
  4730 ;; Return value:  Size  Location     Type
  4731 ;;                  4    0[BANK1 ] long 
  4732 ;; Registers used:
  4733 ;;		wreg, status,2, status,0
  4734 ;; Tracked objects:
  4735 ;;		On entry : 1F/1
  4736 ;;		On exit  : 1F/1
  4737 ;;		Unchanged: 0/0
  4738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4739 ;;      Params:         0       0       4       0       0       0
  4740 ;;      Locals:         0       0       2       0       0       0
  4741 ;;      Temps:          0       0       4       0       0       0
  4742 ;;      Totals:         0       0      10       0       0       0
  4743 ;;Total ram usage:       10 bytes
  4744 ;; Hardware stack levels used: 1
  4745 ;; Hardware stack levels required when called: 5
  4746 ;; This function calls:
  4747 ;;		Nothing
  4748 ;; This function is called by:
  4749 ;;		_envia_Tx
  4750 ;; This function uses a non-reentrant model
  4751 ;;
  4752                           
  4753     0EC1                     ___fltol:	
  4754                           ;psect for function ___fltol
  4755                           
  4756                           
  4757                           ;incstack = 0
  4758                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  4759     0EC1  1003               	clrc
  4760     0EC2  0D4F               	rlf	(___fltol@f1+2)^(0+128),w
  4761     0EC3  0D50               	rlf	(___fltol@f1+3)^(0+128),w
  4762     0EC4  00D6               	movwf	___fltol@exp1^(0+128)
  4763     0EC5  0856               	movf	___fltol@exp1^(0+128),w
  4764     0EC6  1D03               	btfss	3,2
  4765     0EC7  2ED1               	goto	l2894
  4766     0EC8                     l2890:
  4767     0EC8  3000               	movlw	0
  4768     0EC9  00D0               	movwf	(?___fltol+3)^(0+128)
  4769     0ECA  3000               	movlw	0
  4770     0ECB  00CF               	movwf	(?___fltol+2)^(0+128)
  4771     0ECC  3000               	movlw	0
  4772     0ECD  00CE               	movwf	(?___fltol+1)^(0+128)
  4773     0ECE  3000               	movlw	0
  4774     0ECF  00CD               	movwf	?___fltol^(0+128)
  4775     0ED0  0008               	return
  4776     0ED1                     l2894:
  4777     0ED1  084D               	movf	___fltol@f1^(0+128),w
  4778     0ED2  00D1               	movwf	??___fltol^(0+128)
  4779     0ED3  084E               	movf	(___fltol@f1+1)^(0+128),w
  4780     0ED4  00D2               	movwf	(??___fltol^(0+128)+1)
  4781     0ED5  084F               	movf	(___fltol@f1+2)^(0+128),w
  4782     0ED6  00D3               	movwf	(??___fltol^(0+128)+2)
  4783     0ED7  0850               	movf	(___fltol@f1+3)^(0+128),w
  4784     0ED8  00D4               	movwf	(??___fltol^(0+128)+3)
  4785     0ED9  301F               	movlw	31
  4786     0EDA                     u2625:
  4787     0EDA  36D4               	lsrf	(??___fltol^(0+128)+3),f
  4788     0EDB  0CD3               	rrf	(??___fltol^(0+128)+2),f
  4789     0EDC  0CD2               	rrf	(??___fltol^(0+128)+1),f
  4790     0EDD  0CD1               	rrf	??___fltol^(0+128),f
  4791     0EDE  0B89               	decfsz	9,f
  4792     0EDF  2EDA               	goto	u2625
  4793     0EE0  0851               	movf	??___fltol^(0+128),w
  4794     0EE1  00D5               	movwf	___fltol@sign1^(0+128)
  4795     0EE2  17CF               	bsf	(___fltol@f1^(0+128)+2),7
  4796     0EE3  30FF               	movlw	255
  4797     0EE4  05CD               	andwf	___fltol@f1^(0+128),f
  4798     0EE5  30FF               	movlw	255
  4799     0EE6  05CE               	andwf	(___fltol@f1+1)^(0+128),f
  4800     0EE7  30FF               	movlw	255
  4801     0EE8  05CF               	andwf	(___fltol@f1+2)^(0+128),f
  4802     0EE9  3000               	movlw	0
  4803     0EEA  05D0               	andwf	(___fltol@f1+3)^(0+128),f
  4804     0EEB  3096               	movlw	150
  4805     0EEC  02D6               	subwf	___fltol@exp1^(0+128),f
  4806     0EED  1FD6               	btfss	___fltol@exp1^(0+128),7
  4807     0EEE  2F02               	goto	l2912
  4808     0EEF  0856               	movf	___fltol@exp1^(0+128),w
  4809     0EF0  3A80               	xorlw	128
  4810     0EF1  3E97               	addlw	151
  4811     0EF2  1C03               	btfss	3,0
  4812     0EF3  2EC8               	goto	l2890
  4813     0EF4                     l2910:
  4814     0EF4  3001               	movlw	1
  4815     0EF5                     u2655:
  4816     0EF5  36D0               	lsrf	(___fltol@f1+3)^(0+128),f
  4817     0EF6  0CCF               	rrf	(___fltol@f1+2)^(0+128),f
  4818     0EF7  0CCE               	rrf	(___fltol@f1+1)^(0+128),f
  4819     0EF8  0CCD               	rrf	___fltol@f1^(0+128),f
  4820     0EF9  0B89               	decfsz	9,f
  4821     0EFA  2EF5               	goto	u2655
  4822     0EFB  3001               	movlw	1
  4823     0EFC  00D1               	movwf	??___fltol^(0+128)
  4824     0EFD  0851               	movf	??___fltol^(0+128),w
  4825     0EFE  07D6               	addwf	___fltol@exp1^(0+128),f
  4826     0EFF  1903               	btfsc	3,2
  4827     0F00  2F13               	goto	l2920
  4828     0F01  2EF4               	goto	l2910
  4829     0F02                     l2912:
  4830     0F02  3020               	movlw	32
  4831     0F03  0256               	subwf	___fltol@exp1^(0+128),w
  4832     0F04  1803               	btfsc	3,0
  4833     0F05  2EC8               	goto	l2890
  4834     0F06                     l1133:
  4835     0F06  0856               	movf	___fltol@exp1^(0+128),w
  4836     0F07  1903               	btfsc	3,2
  4837     0F08  2F13               	goto	l2920
  4838     0F09  3001               	movlw	1
  4839     0F0A                     u2685:
  4840     0F0A  35CD               	lslf	___fltol@f1^(0+128),f
  4841     0F0B  0DCE               	rlf	(___fltol@f1+1)^(0+128),f
  4842     0F0C  0DCF               	rlf	(___fltol@f1+2)^(0+128),f
  4843     0F0D  0DD0               	rlf	(___fltol@f1+3)^(0+128),f
  4844     0F0E  0B89               	decfsz	9,f
  4845     0F0F  2F0A               	goto	u2685
  4846     0F10  3001               	movlw	1
  4847     0F11  02D6               	subwf	___fltol@exp1^(0+128),f
  4848     0F12  2F06               	goto	l1133
  4849     0F13                     l2920:
  4850     0F13  0855               	movf	___fltol@sign1^(0+128),w
  4851     0F14  1903               	btfsc	3,2
  4852     0F15  0008               	return
  4853     0F16  09CD               	comf	___fltol@f1^(0+128),f
  4854     0F17  09CE               	comf	(___fltol@f1+1)^(0+128),f
  4855     0F18  09CF               	comf	(___fltol@f1+2)^(0+128),f
  4856     0F19  09D0               	comf	(___fltol@f1+3)^(0+128),f
  4857     0F1A  0ACD               	incf	___fltol@f1^(0+128),f
  4858     0F1B  1903               	skipnz
  4859     0F1C  0ACE               	incf	(___fltol@f1+1)^(0+128),f
  4860     0F1D  1903               	skipnz
  4861     0F1E  0ACF               	incf	(___fltol@f1+2)^(0+128),f
  4862     0F1F  1903               	skipnz
  4863     0F20  0AD0               	incf	(___fltol@f1+3)^(0+128),f
  4864     0F21  0008               	return
  4865     0F22                     __end_of___fltol:
  4866                           
  4867                           	psect	text8
  4868     0BD1                     __ptext8:	
  4869 ;; *************** function _EUSART_Write *****************
  4870 ;; Defined at:
  4871 ;;		line 132 in file "mcc_generated_files/eusart.c"
  4872 ;; Parameters:    Size  Location     Type
  4873 ;;  txData          1    wreg     unsigned char 
  4874 ;; Auto vars:     Size  Location     Type
  4875 ;;  txData          1    0[BANK1 ] unsigned char 
  4876 ;; Return value:  Size  Location     Type
  4877 ;;                  1    wreg      void 
  4878 ;; Registers used:
  4879 ;;		wreg
  4880 ;; Tracked objects:
  4881 ;;		On entry : 1F/1
  4882 ;;		On exit  : 1F/3
  4883 ;;		Unchanged: 0/0
  4884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4885 ;;      Params:         0       0       0       0       0       0
  4886 ;;      Locals:         0       0       1       0       0       0
  4887 ;;      Temps:          0       0       0       0       0       0
  4888 ;;      Totals:         0       0       1       0       0       0
  4889 ;;Total ram usage:        1 bytes
  4890 ;; Hardware stack levels used: 1
  4891 ;; Hardware stack levels required when called: 5
  4892 ;; This function calls:
  4893 ;;		Nothing
  4894 ;; This function is called by:
  4895 ;;		_envia_Tx
  4896 ;; This function uses a non-reentrant model
  4897 ;;
  4898                           
  4899     0BD1                     _EUSART_Write:	
  4900                           ;psect for function _EUSART_Write
  4901                           
  4902                           
  4903                           ;incstack = 0
  4904                           ; Regs used in _EUSART_Write: [wreg]
  4905                           ;EUSART_Write@txData stored from wreg
  4906     0BD1  00CD               	movwf	EUSART_Write@txData^(0+128)
  4907     0BD2                     l247:	
  4908                           ;mcc_generated_files/eusart.c: 135:     {;mcc_generated_files/eusart.c: 136:     }
  4909                           
  4910                           
  4911                           ;mcc_generated_files/eusart.c: 134:     while(0 == PIR1bits.TXIF)
  4912     0BD2  0020               	movlb	0	; select bank0
  4913     0BD3  1E11               	btfss	17,4	;volatile
  4914     0BD4  2BD2               	goto	l247
  4915                           
  4916                           ;mcc_generated_files/eusart.c: 138:     TXREG = txData;
  4917     0BD5  0021               	movlb	1	; select bank1
  4918     0BD6  084D               	movf	EUSART_Write@txData^(0+128),w
  4919     0BD7  0023               	movlb	3	; select bank3
  4920     0BD8  009A               	movwf	26	;volatile
  4921     0BD9  0008               	return
  4922     0BDA                     __end_of_EUSART_Write:
  4923                           
  4924                           	psect	text9
  4925     0C3B                     __ptext9:	
  4926 ;; *************** function _controlchoose *****************
  4927 ;; Defined at:
  4928 ;;		line 158 in file "main.c"
  4929 ;; Parameters:    Size  Location     Type
  4930 ;;		None
  4931 ;; Auto vars:     Size  Location     Type
  4932 ;;		None
  4933 ;; Return value:  Size  Location     Type
  4934 ;;                  1    wreg      void 
  4935 ;; Registers used:
  4936 ;;		wreg, status,2, status,0, pclath, cstack
  4937 ;; Tracked objects:
  4938 ;;		On entry : 1F/8
  4939 ;;		On exit  : 1F/8
  4940 ;;		Unchanged: 0/0
  4941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4942 ;;      Params:         0       0       0       0       0       0
  4943 ;;      Locals:         0       0       0       0       0       0
  4944 ;;      Temps:          0       0       0       0       0       0
  4945 ;;      Totals:         0       0       0       0       0       0
  4946 ;;Total ram usage:        0 bytes
  4947 ;; Hardware stack levels used: 1
  4948 ;; Hardware stack levels required when called: 7
  4949 ;; This function calls:
  4950 ;;		_TMR4_StartTimer
  4951 ;;		_fluxcontrol
  4952 ;;		_pwmcontrol
  4953 ;; This function is called by:
  4954 ;;		_main
  4955 ;; This function uses a non-reentrant model
  4956 ;;
  4957                           
  4958     0C3B                     _controlchoose:	
  4959                           ;psect for function _controlchoose
  4960                           
  4961                           
  4962                           ;main.c: 159:     if (controlchoice == 1){
  4963                           
  4964                           ;incstack = 0
  4965                           ; Regs used in _controlchoose: [wreg+status,2+status,0+pclath+cstack]
  4966     0C3B  0021               	movlb	1	; select bank1
  4967     0C3C  034B               	decf	_controlchoice^(0+128),w
  4968     0C3D  1D03               	btfss	3,2
  4969     0C3E  2C43               	goto	l3002
  4970                           
  4971                           ;main.c: 160:         pwmcontrol ();
  4972     0C3F  3182  2242  318C   	fcall	_pwmcontrol
  4973                           
  4974                           ;main.c: 161:     } else if(controlchoice == 2){
  4975     0C42  2C4A               	goto	l3006
  4976     0C43                     l3002:
  4977     0C43  3002               	movlw	2
  4978     0C44  064B               	xorwf	_controlchoice^(0+128),w
  4979     0C45  1D03               	btfss	3,2
  4980     0C46  2C4A               	goto	l3006
  4981                           
  4982                           ;main.c: 162:         fluxcontrol ();
  4983     0C47  3183  2377  318C   	fcall	_fluxcontrol
  4984     0C4A                     l3006:
  4985                           
  4986                           ;main.c: 164:     TMR4_StartTimer();
  4987     0C4A  318B  2354         	fcall	_TMR4_StartTimer
  4988     0C4C  0008               	return
  4989     0C4D                     __end_of_controlchoose:
  4990                           
  4991                           	psect	text10
  4992     0242                     __ptext10:	
  4993 ;; *************** function _pwmcontrol *****************
  4994 ;; Defined at:
  4995 ;;		line 184 in file "main.c"
  4996 ;; Parameters:    Size  Location     Type
  4997 ;;		None
  4998 ;; Auto vars:     Size  Location     Type
  4999 ;;		None
  5000 ;; Return value:  Size  Location     Type
  5001 ;;                  1    wreg      void 
  5002 ;; Registers used:
  5003 ;;		wreg, status,2, status,0, pclath, cstack
  5004 ;; Tracked objects:
  5005 ;;		On entry : 1F/1
  5006 ;;		On exit  : 0/0
  5007 ;;		Unchanged: 0/0
  5008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5009 ;;      Params:         0       0       0       0       0       0
  5010 ;;      Locals:         0       0       0       0       0       0
  5011 ;;      Temps:          0       0      12       0       0       0
  5012 ;;      Totals:         0       0      12       0       0       0
  5013 ;;Total ram usage:       12 bytes
  5014 ;; Hardware stack levels used: 1
  5015 ;; Hardware stack levels required when called: 6
  5016 ;; This function calls:
  5017 ;;		_EPWM1_LoadDutyValue
  5018 ;;		___atdiv
  5019 ;;		___lwdiv
  5020 ;;		___tmul
  5021 ;; This function is called by:
  5022 ;;		_controlchoose
  5023 ;; This function uses a non-reentrant model
  5024 ;;
  5025                           
  5026     0242                     _pwmcontrol:	
  5027                           ;psect for function _pwmcontrol
  5028                           
  5029                           
  5030                           ;main.c: 185:     error = (ballset-balldist);
  5031                           
  5032                           ;incstack = 0
  5033                           ; Regs used in _pwmcontrol: [wreg+status,2+status,0+pclath+cstack]
  5034     0242  082A               	movf	_balldist^(0+128),w
  5035     0243  0020               	movlb	0	; select bank0
  5036     0244  025E               	subwf	_ballset,w
  5037     0245  0021               	movlb	1	; select bank1
  5038     0246  00E2               	movwf	??_pwmcontrol^(0+128)
  5039     0247  0020               	movlb	0	; select bank0
  5040     0248  085F               	movf	_ballset+1,w
  5041     0249  0021               	movlb	1	; select bank1
  5042     024A  00E3               	movwf	(??_pwmcontrol^(0+128)+1)
  5043     024B  082B               	movf	(_balldist+1)^(0+128),w
  5044     024C  1C03               	skipc
  5045     024D  0F2B               	incfsz	(_balldist+1)^(0+128),w
  5046     024E  2A50               	goto	u2431
  5047     024F  2A51               	goto	u2432
  5048     0250                     u2431:
  5049     0250  02E3               	subwf	(??_pwmcontrol^(0+128)+1),f
  5050     0251                     u2432:
  5051     0251  0020               	movlb	0	; select bank0
  5052     0252  0860               	movf	_ballset+2,w
  5053     0253  0021               	movlb	1	; select bank1
  5054     0254  00E4               	movwf	(??_pwmcontrol^(0+128)+2)
  5055     0255  082C               	movf	(_balldist+2)^(0+128),w
  5056     0256  1C03               	skipc
  5057     0257  0F2C               	incfsz	(_balldist+2)^(0+128),w
  5058     0258  2A5A               	goto	u2433
  5059     0259  2A5B               	goto	u2434
  5060     025A                     u2433:
  5061     025A  02E4               	subwf	(??_pwmcontrol^(0+128)+2),f
  5062     025B                     u2434:
  5063     025B  0862               	movf	??_pwmcontrol^(0+128),w
  5064     025C  00B0               	movwf	_error^(0+128)
  5065     025D  0863               	movf	(??_pwmcontrol+1)^(0+128),w
  5066     025E  00B1               	movwf	(_error+1)^(0+128)
  5067     025F  0864               	movf	(??_pwmcontrol+2)^(0+128),w
  5068     0260  00B2               	movwf	(_error+2)^(0+128)
  5069                           
  5070                           ;main.c: 186:     if(error > 15 || error < -15){
  5071     0261  1BB2               	btfsc	(_error+2)^(0+128),7
  5072     0262  2A6D               	goto	l2812
  5073     0263  0832               	movf	(_error+2)^(0+128),w
  5074     0264  1D03               	btfss	3,2
  5075     0265  2A78               	goto	l2814
  5076     0266  0831               	movf	(_error+1)^(0+128),w
  5077     0267  1D03               	btfss	3,2
  5078     0268  2A78               	goto	l2814
  5079     0269  3010               	movlw	16
  5080     026A  0230               	subwf	_error^(0+128),w
  5081     026B  1803               	btfsc	3,0
  5082     026C  2A78               	goto	l2814
  5083     026D                     l2812:
  5084     026D  0021               	movlb	1	; select bank1
  5085     026E  1FB2               	btfss	(_error+2)^(0+128),7
  5086     026F  0008               	return
  5087     0270  30F1               	movlw	241
  5088     0271  0230               	subwf	_error^(0+128),w
  5089     0272  30FF               	movlw	255
  5090     0273  3B31               	subwfb	(_error+1)^(0+128),w
  5091     0274  30FF               	movlw	255
  5092     0275  3B32               	subwfb	(_error+2)^(0+128),w
  5093     0276  1803               	btfsc	3,0
  5094     0277  0008               	return
  5095     0278                     l2814:
  5096     0278  300A               	movlw	10
  5097     0279  0021               	movlb	1	; select bank1
  5098     027A  00D6               	movwf	___atdiv@divisor^(0+128)
  5099     027B  3000               	movlw	0
  5100     027C  00D7               	movwf	(___atdiv@divisor+1)^(0+128)
  5101     027D  3000               	movlw	0
  5102     027E  00D8               	movwf	(___atdiv@divisor+2)^(0+128)
  5103     027F  0830               	movf	_error^(0+128),w
  5104     0280  00CD               	movwf	___tmul@multiplier^(0+128)
  5105     0281  0831               	movf	(_error+1)^(0+128),w
  5106     0282  00CE               	movwf	(___tmul@multiplier+1)^(0+128)
  5107     0283  0832               	movf	(_error+2)^(0+128),w
  5108     0284  00CF               	movwf	(___tmul@multiplier+2)^(0+128)
  5109     0285  3044               	movlw	68
  5110     0286  00D0               	movwf	___tmul@multiplicand^(0+128)
  5111     0287  3000               	movlw	0
  5112     0288  00D1               	movwf	(___tmul@multiplicand+1)^(0+128)
  5113     0289  3000               	movlw	0
  5114     028A  00D2               	movwf	(___tmul@multiplicand+2)^(0+128)
  5115     028B  318D  2547  3182   	fcall	___tmul
  5116     028E  084D               	movf	?___tmul^(0+128),w
  5117     028F  00D9               	movwf	___atdiv@dividend^(0+128)
  5118     0290  084E               	movf	(?___tmul+1)^(0+128),w
  5119     0291  00DA               	movwf	(___atdiv@dividend+1)^(0+128)
  5120     0292  084F               	movf	(?___tmul+2)^(0+128),w
  5121     0293  00DB               	movwf	(___atdiv@dividend+2)^(0+128)
  5122     0294  318F  2722  3182   	fcall	___atdiv
  5123     0297  0856               	movf	?___atdiv^(0+128),w
  5124     0298  07A7               	addwf	_outputsum^(0+128),f
  5125     0299  0857               	movf	(?___atdiv+1)^(0+128),w
  5126     029A  3DA8               	addwfc	(_outputsum+1)^(0+128),f
  5127     029B  0858               	movf	(?___atdiv+2)^(0+128),w
  5128     029C  3DA9               	addwfc	(_outputsum+2)^(0+128),f
  5129                           
  5130                           ;main.c: 188:         if (outputsum > 100) outputsum = 100;
  5131     029D  1BA9               	btfsc	(_outputsum+2)^(0+128),7
  5132     029E  2AB0               	goto	l2820
  5133     029F  0829               	movf	(_outputsum+2)^(0+128),w
  5134     02A0  1D03               	btfss	3,2
  5135     02A1  2AA9               	goto	l2818
  5136     02A2  0828               	movf	(_outputsum+1)^(0+128),w
  5137     02A3  1D03               	btfss	3,2
  5138     02A4  2AA9               	goto	l2818
  5139     02A5  3065               	movlw	101
  5140     02A6  0227               	subwf	_outputsum^(0+128),w
  5141     02A7  1C03               	btfss	3,0
  5142     02A8  2AB0               	goto	l2820
  5143     02A9                     l2818:
  5144     02A9  3064               	movlw	100
  5145     02AA  0021               	movlb	1	; select bank1
  5146     02AB  00A7               	movwf	_outputsum^(0+128)
  5147     02AC  3000               	movlw	0
  5148     02AD  00A8               	movwf	(_outputsum+1)^(0+128)
  5149     02AE  3000               	movlw	0
  5150     02AF  2AC1               	goto	L4
  5151     02B0                     l2820:
  5152     02B0  0021               	movlb	1	; select bank1
  5153     02B1  1FA9               	btfss	(_outputsum+2)^(0+128),7
  5154     02B2  2AC2               	goto	l2824
  5155     02B3  30F6               	movlw	246
  5156     02B4  0227               	subwf	_outputsum^(0+128),w
  5157     02B5  30FF               	movlw	255
  5158     02B6  3B28               	subwfb	(_outputsum+1)^(0+128),w
  5159     02B7  30FF               	movlw	255
  5160     02B8  3B29               	subwfb	(_outputsum+2)^(0+128),w
  5161     02B9  1803               	btfsc	3,0
  5162     02BA  2AC2               	goto	l2824
  5163     02BB  30F6               	movlw	246
  5164     02BC  0021               	movlb	1	; select bank1
  5165     02BD  00A7               	movwf	_outputsum^(0+128)
  5166     02BE  30FF               	movlw	255
  5167     02BF  00A8               	movwf	(_outputsum+1)^(0+128)
  5168     02C0  30FF               	movlw	255
  5169     02C1                     L4:
  5170     02C1  00A9               	movwf	(_outputsum+2)^(0+128)
  5171     02C2                     l2824:
  5172     02C2  0021               	movlb	1	; select bank1
  5173     02C3  0824               	movf	_outpre^(0+128),w
  5174     02C4  00E2               	movwf	??_pwmcontrol^(0+128)
  5175     02C5  0825               	movf	(_outpre+1)^(0+128),w
  5176     02C6  00E3               	movwf	(??_pwmcontrol^(0+128)+1)
  5177     02C7  0826               	movf	(_outpre+2)^(0+128),w
  5178     02C8  00E4               	movwf	(??_pwmcontrol^(0+128)+2)
  5179     02C9  0827               	movf	_outputsum^(0+128),w
  5180     02CA  00E5               	movwf	(??_pwmcontrol+3)^(0+128)
  5181     02CB  0828               	movf	(_outputsum+1)^(0+128),w
  5182     02CC  00E6               	movwf	((??_pwmcontrol+3)^(0+128)+1)
  5183     02CD  0829               	movf	(_outputsum+2)^(0+128),w
  5184     02CE  00E7               	movwf	((??_pwmcontrol+3)^(0+128)+2)
  5185     02CF  082D               	movf	_errorp^(0+128),w
  5186     02D0  00CD               	movwf	___tmul@multiplier^(0+128)
  5187     02D1  082E               	movf	(_errorp+1)^(0+128),w
  5188     02D2  00CE               	movwf	(___tmul@multiplier+1)^(0+128)
  5189     02D3  082F               	movf	(_errorp+2)^(0+128),w
  5190     02D4  00CF               	movwf	(___tmul@multiplier+2)^(0+128)
  5191     02D5  30F1               	movlw	241
  5192     02D6  00D0               	movwf	___tmul@multiplicand^(0+128)
  5193     02D7  30FF               	movlw	255
  5194     02D8  00D1               	movwf	(___tmul@multiplicand+1)^(0+128)
  5195     02D9  30FF               	movlw	255
  5196     02DA  00D2               	movwf	(___tmul@multiplicand+2)^(0+128)
  5197     02DB  318D  2547  3182   	fcall	___tmul
  5198     02DE  084D               	movf	?___tmul^(0+128),w
  5199     02DF  00E8               	movwf	(??_pwmcontrol+6)^(0+128)
  5200     02E0  084E               	movf	(?___tmul+1)^(0+128),w
  5201     02E1  00E9               	movwf	((??_pwmcontrol+6)^(0+128)+1)
  5202     02E2  084F               	movf	(?___tmul+2)^(0+128),w
  5203     02E3  00EA               	movwf	((??_pwmcontrol+6)^(0+128)+2)
  5204     02E4  0830               	movf	_error^(0+128),w
  5205     02E5  00EB               	movwf	(??_pwmcontrol+9)^(0+128)
  5206     02E6  0831               	movf	(_error+1)^(0+128),w
  5207     02E7  00EC               	movwf	((??_pwmcontrol+9)^(0+128)+1)
  5208     02E8  0832               	movf	(_error+2)^(0+128),w
  5209     02E9  00ED               	movwf	((??_pwmcontrol+9)^(0+128)+2)
  5210     02EA  3005               	movlw	5
  5211     02EB                     u2485:
  5212     02EB  35EB               	lslf	(??_pwmcontrol+9)^(0+128),f
  5213     02EC  0DEC               	rlf	((??_pwmcontrol+9)^(0+128)+1),f
  5214     02ED  0DED               	rlf	((??_pwmcontrol+9)^(0+128)+2),f
  5215     02EE  0B89               	decfsz	9,f
  5216     02EF  2AEB               	goto	u2485
  5217     02F0  0830               	movf	_error^(0+128),w
  5218     02F1  00CD               	movwf	___tmul@multiplier^(0+128)
  5219     02F2  0831               	movf	(_error+1)^(0+128),w
  5220     02F3  00CE               	movwf	(___tmul@multiplier+1)^(0+128)
  5221     02F4  0832               	movf	(_error+2)^(0+128),w
  5222     02F5  00CF               	movwf	(___tmul@multiplier+2)^(0+128)
  5223     02F6  300F               	movlw	15
  5224     02F7  00D0               	movwf	___tmul@multiplicand^(0+128)
  5225     02F8  3000               	movlw	0
  5226     02F9  00D1               	movwf	(___tmul@multiplicand+1)^(0+128)
  5227     02FA  3000               	movlw	0
  5228     02FB  00D2               	movwf	(___tmul@multiplicand+2)^(0+128)
  5229     02FC  318D  2547  3182   	fcall	___tmul
  5230     02FF  084D               	movf	?___tmul^(0+128),w
  5231     0300  07EB               	addwf	(??_pwmcontrol+9)^(0+128),f
  5232     0301  084E               	movf	(?___tmul+1)^(0+128),w
  5233     0302  3DEC               	addwfc	((??_pwmcontrol+9)^(0+128)+1),f
  5234     0303  084F               	movf	(?___tmul+2)^(0+128),w
  5235     0304  3DED               	addwfc	((??_pwmcontrol+9)^(0+128)+2),f
  5236     0305  086B               	movf	(??_pwmcontrol+9)^(0+128),w
  5237     0306  07E8               	addwf	(??_pwmcontrol+6)^(0+128),f
  5238     0307  086C               	movf	(??_pwmcontrol+10)^(0+128),w
  5239     0308  3DE9               	addwfc	((??_pwmcontrol+6)^(0+128)+1),f
  5240     0309  086D               	movf	(??_pwmcontrol+11)^(0+128),w
  5241     030A  3DEA               	addwfc	((??_pwmcontrol+6)^(0+128)+2),f
  5242     030B  0868               	movf	(??_pwmcontrol+6)^(0+128),w
  5243     030C  07E5               	addwf	(??_pwmcontrol+3)^(0+128),f
  5244     030D  0869               	movf	(??_pwmcontrol+7)^(0+128),w
  5245     030E  3DE6               	addwfc	((??_pwmcontrol+3)^(0+128)+1),f
  5246     030F  086A               	movf	(??_pwmcontrol+8)^(0+128),w
  5247     0310  3DE7               	addwfc	((??_pwmcontrol+3)^(0+128)+2),f
  5248     0311  0865               	movf	(??_pwmcontrol+3)^(0+128),w
  5249     0312  07E2               	addwf	??_pwmcontrol^(0+128),f
  5250     0313  0866               	movf	(??_pwmcontrol+4)^(0+128),w
  5251     0314  3DE3               	addwfc	(??_pwmcontrol^(0+128)+1),f
  5252     0315  0867               	movf	(??_pwmcontrol+5)^(0+128),w
  5253     0316  3DE4               	addwfc	(??_pwmcontrol^(0+128)+2),f
  5254     0317  0862               	movf	??_pwmcontrol^(0+128),w
  5255     0318  00A4               	movwf	_outpre^(0+128)
  5256     0319  0863               	movf	(??_pwmcontrol+1)^(0+128),w
  5257     031A  00A5               	movwf	(_outpre+1)^(0+128)
  5258     031B  0864               	movf	(??_pwmcontrol+2)^(0+128),w
  5259     031C  00A6               	movwf	(_outpre+2)^(0+128)
  5260                           
  5261                           ;main.c: 191:         if(outpre > 2230){
  5262     031D  1BA6               	btfsc	(_outpre+2)^(0+128),7
  5263     031E  2B2B               	goto	l723
  5264     031F  0826               	movf	(_outpre+2)^(0+128),w
  5265     0320  1D03               	btfss	3,2
  5266     0321  2B28               	goto	l2828
  5267     0322  30B7               	movlw	183
  5268     0323  0224               	subwf	_outpre^(0+128),w
  5269     0324  3008               	movlw	8
  5270     0325  3B25               	subwfb	(_outpre+1)^(0+128),w
  5271     0326  1C03               	btfss	3,0
  5272     0327  2B2B               	goto	l723
  5273     0328                     l2828:
  5274                           
  5275                           ;main.c: 192:             output = 1023;
  5276     0328  30FF               	movlw	255
  5277     0329  0021               	movlb	1	; select bank1
  5278     032A  2B2F               	goto	L5
  5279     032B                     l723:	
  5280                           ;main.c: 194:         else if(outpre <0) {
  5281                           
  5282                           ;main.c: 193:         }
  5283                           
  5284     032B  0021               	movlb	1	; select bank1
  5285     032C  1FA6               	btfss	(_outpre+2)^(0+128),7
  5286     032D  2B33               	goto	l2832
  5287                           
  5288                           ;main.c: 195:             output= 0+800;
  5289     032E  3020               	movlw	32
  5290     032F                     L5:
  5291     032F  00C1               	movwf	_output^(0+128)
  5292     0330  3003               	movlw	3
  5293     0331  00C2               	movwf	(_output^(0+128)+1)
  5294                           
  5295                           ;main.c: 196:         } else {
  5296     0332  2B44               	goto	l2834
  5297     0333                     l2832:
  5298                           
  5299                           ;main.c: 197:             output = ((uint16_t)outpre/10) + 800;
  5300     0333  300A               	movlw	10
  5301     0334  00CD               	movwf	___lwdiv@divisor^(0+128)
  5302     0335  3000               	movlw	0
  5303     0336  00CE               	movwf	(___lwdiv@divisor^(0+128)+1)
  5304     0337  0825               	movf	(_outpre+1)^(0+128),w
  5305     0338  00D0               	movwf	(___lwdiv@dividend+1)^(0+128)
  5306     0339  0824               	movf	_outpre^(0+128),w
  5307     033A  00CF               	movwf	___lwdiv@dividend^(0+128)
  5308     033B  3187  27CA  3182   	fcall	___lwdiv
  5309     033E  084D               	movf	?___lwdiv^(0+128),w
  5310     033F  3E20               	addlw	32
  5311     0340  00C1               	movwf	_output^(0+128)
  5312     0341  3003               	movlw	3
  5313     0342  3D4E               	addwfc	(?___lwdiv+1)^(0+128),w
  5314     0343  00C2               	movwf	(_output+1)^(0+128)
  5315     0344                     l2834:
  5316                           
  5317                           ;main.c: 199:         if (outpre>2230){
  5318     0344  1BA6               	btfsc	(_outpre+2)^(0+128),7
  5319     0345  2B56               	goto	l2838
  5320     0346  0826               	movf	(_outpre+2)^(0+128),w
  5321     0347  1D03               	btfss	3,2
  5322     0348  2B4F               	goto	l2836
  5323     0349  30B7               	movlw	183
  5324     034A  0224               	subwf	_outpre^(0+128),w
  5325     034B  3008               	movlw	8
  5326     034C  3B25               	subwfb	(_outpre+1)^(0+128),w
  5327     034D  1C03               	btfss	3,0
  5328     034E  2B56               	goto	l2838
  5329     034F                     l2836:
  5330                           
  5331                           ;main.c: 200:             outpre = 2230;
  5332     034F  30B6               	movlw	182
  5333     0350  0021               	movlb	1	; select bank1
  5334     0351  00A4               	movwf	_outpre^(0+128)
  5335     0352  3008               	movlw	8
  5336     0353  00A5               	movwf	(_outpre+1)^(0+128)
  5337     0354  3000               	movlw	0
  5338     0355  2B67               	goto	L6
  5339     0356                     l2838:	
  5340                           ;main.c: 201:         } else if (outpre < -800){
  5341                           
  5342     0356  0021               	movlb	1	; select bank1
  5343     0357  1FA6               	btfss	(_outpre+2)^(0+128),7
  5344     0358  2B68               	goto	l2842
  5345     0359  30E0               	movlw	224
  5346     035A  0224               	subwf	_outpre^(0+128),w
  5347     035B  30FC               	movlw	252
  5348     035C  3B25               	subwfb	(_outpre+1)^(0+128),w
  5349     035D  30FF               	movlw	255
  5350     035E  3B26               	subwfb	(_outpre+2)^(0+128),w
  5351     035F  1803               	btfsc	3,0
  5352     0360  2B68               	goto	l2842
  5353                           
  5354                           ;main.c: 202:             outpre = -800;
  5355     0361  30E0               	movlw	224
  5356     0362  0021               	movlb	1	; select bank1
  5357     0363  00A4               	movwf	_outpre^(0+128)
  5358     0364  30FC               	movlw	252
  5359     0365  00A5               	movwf	(_outpre+1)^(0+128)
  5360     0366  30FF               	movlw	255
  5361     0367                     L6:
  5362     0367  00A6               	movwf	(_outpre+2)^(0+128)
  5363     0368                     l2842:
  5364                           
  5365                           ;main.c: 205:         EPWM1_LoadDutyValue(output);
  5366     0368  0021               	movlb	1	; select bank1
  5367     0369  0842               	movf	(_output+1)^(0+128),w
  5368     036A  00CE               	movwf	(EPWM1_LoadDutyValue@dutyValue+1)^(0+128)
  5369     036B  0841               	movf	_output^(0+128),w
  5370     036C  00CD               	movwf	EPWM1_LoadDutyValue@dutyValue^(0+128)
  5371     036D  318C  24C9         	fcall	_EPWM1_LoadDutyValue
  5372                           
  5373                           ;main.c: 206:         errorp = error;
  5374     036F  0021               	movlb	1	; select bank1
  5375     0370  0830               	movf	_error^(0+128),w
  5376     0371  00AD               	movwf	_errorp^(0+128)
  5377     0372  0831               	movf	(_error+1)^(0+128),w
  5378     0373  00AE               	movwf	(_errorp+1)^(0+128)
  5379     0374  0832               	movf	(_error+2)^(0+128),w
  5380     0375  00AF               	movwf	(_errorp+2)^(0+128)
  5381     0376  0008               	return
  5382     0377                     __end_of_pwmcontrol:
  5383                           
  5384                           	psect	text11
  5385     07CA                     __ptext11:	
  5386 ;; *************** function ___lwdiv *****************
  5387 ;; Defined at:
  5388 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lwdiv.c"
  5389 ;; Parameters:    Size  Location     Type
  5390 ;;  divisor         2    0[BANK1 ] unsigned int 
  5391 ;;  dividend        2    2[BANK1 ] unsigned int 
  5392 ;; Auto vars:     Size  Location     Type
  5393 ;;  quotient        2    5[BANK1 ] unsigned int 
  5394 ;;  counter         1    7[BANK1 ] unsigned char 
  5395 ;; Return value:  Size  Location     Type
  5396 ;;                  2    0[BANK1 ] unsigned int 
  5397 ;; Registers used:
  5398 ;;		wreg, status,2, status,0
  5399 ;; Tracked objects:
  5400 ;;		On entry : 1F/1
  5401 ;;		On exit  : 1F/1
  5402 ;;		Unchanged: 0/0
  5403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5404 ;;      Params:         0       0       4       0       0       0
  5405 ;;      Locals:         0       0       3       0       0       0
  5406 ;;      Temps:          0       0       1       0       0       0
  5407 ;;      Totals:         0       0       8       0       0       0
  5408 ;;Total ram usage:        8 bytes
  5409 ;; Hardware stack levels used: 1
  5410 ;; Hardware stack levels required when called: 5
  5411 ;; This function calls:
  5412 ;;		Nothing
  5413 ;; This function is called by:
  5414 ;;		_pwmcontrol
  5415 ;; This function uses a non-reentrant model
  5416 ;;
  5417                           
  5418     07CA                     ___lwdiv:	
  5419                           ;psect for function ___lwdiv
  5420                           
  5421                           
  5422                           ;incstack = 0
  5423                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5424     07CA  01D2               	clrf	___lwdiv@quotient^(0+128)
  5425     07CB  01D3               	clrf	(___lwdiv@quotient+1)^(0+128)
  5426     07CC  084D               	movf	___lwdiv@divisor^(0+128),w
  5427     07CD  044E               	iorwf	(___lwdiv@divisor+1)^(0+128),w
  5428     07CE  1903               	btfsc	3,2
  5429     07CF  2FF9               	goto	l2428
  5430     07D0  01D4               	clrf	___lwdiv@counter^(0+128)
  5431     07D1  0AD4               	incf	___lwdiv@counter^(0+128),f
  5432     07D2                     l2416:
  5433     07D2  1BCE               	btfsc	(___lwdiv@divisor+1)^(0+128),7
  5434     07D3  2FDE               	goto	l2418
  5435     07D4  3001               	movlw	1
  5436     07D5                     u1775:
  5437     07D5  35CD               	lslf	___lwdiv@divisor^(0+128),f
  5438     07D6  0DCE               	rlf	(___lwdiv@divisor+1)^(0+128),f
  5439     07D7  0B89               	decfsz	9,f
  5440     07D8  2FD5               	goto	u1775
  5441     07D9  3001               	movlw	1
  5442     07DA  00D1               	movwf	??___lwdiv^(0+128)
  5443     07DB  0851               	movf	??___lwdiv^(0+128),w
  5444     07DC  07D4               	addwf	___lwdiv@counter^(0+128),f
  5445     07DD  2FD2               	goto	l2416
  5446     07DE                     l2418:
  5447     07DE  3001               	movlw	1
  5448     07DF                     u1795:
  5449     07DF  35D2               	lslf	___lwdiv@quotient^(0+128),f
  5450     07E0  0DD3               	rlf	(___lwdiv@quotient+1)^(0+128),f
  5451     07E1  0B89               	decfsz	9,f
  5452     07E2  2FDF               	goto	u1795
  5453     07E3  084E               	movf	(___lwdiv@divisor+1)^(0+128),w
  5454     07E4  0250               	subwf	(___lwdiv@dividend+1)^(0+128),w
  5455     07E5  1D03               	skipz
  5456     07E6  2FE9               	goto	u1805
  5457     07E7  084D               	movf	___lwdiv@divisor^(0+128),w
  5458     07E8  024F               	subwf	___lwdiv@dividend^(0+128),w
  5459     07E9                     u1805:
  5460     07E9  1C03               	skipc
  5461     07EA  2FF0               	goto	l2424
  5462     07EB  084D               	movf	___lwdiv@divisor^(0+128),w
  5463     07EC  02CF               	subwf	___lwdiv@dividend^(0+128),f
  5464     07ED  084E               	movf	(___lwdiv@divisor+1)^(0+128),w
  5465     07EE  3BD0               	subwfb	(___lwdiv@dividend+1)^(0+128),f
  5466     07EF  1452               	bsf	___lwdiv@quotient^(0+128),0
  5467     07F0                     l2424:
  5468     07F0  3001               	movlw	1
  5469     07F1                     u1815:
  5470     07F1  36CE               	lsrf	(___lwdiv@divisor+1)^(0+128),f
  5471     07F2  0CCD               	rrf	___lwdiv@divisor^(0+128),f
  5472     07F3  0B89               	decfsz	9,f
  5473     07F4  2FF1               	goto	u1815
  5474     07F5  3001               	movlw	1
  5475     07F6  02D4               	subwf	___lwdiv@counter^(0+128),f
  5476     07F7  1D03               	btfss	3,2
  5477     07F8  2FDE               	goto	l2418
  5478     07F9                     l2428:
  5479     07F9  0853               	movf	(___lwdiv@quotient+1)^(0+128),w
  5480     07FA  00CE               	movwf	(?___lwdiv+1)^(0+128)
  5481     07FB  0852               	movf	___lwdiv@quotient^(0+128),w
  5482     07FC  00CD               	movwf	?___lwdiv^(0+128)
  5483     07FD  0008               	return
  5484     07FE                     __end_of___lwdiv:
  5485                           
  5486                           	psect	text12
  5487     0F22                     __ptext12:	
  5488 ;; *************** function ___atdiv *****************
  5489 ;; Defined at:
  5490 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\atdiv.c"
  5491 ;; Parameters:    Size  Location     Type
  5492 ;;  divisor         3    9[BANK1 ] m
  5493 ;;  dividend        3   12[BANK1 ] m
  5494 ;; Auto vars:     Size  Location     Type
  5495 ;;  quotient        3   18[BANK1 ] m
  5496 ;;  sign            1   17[BANK1 ] unsigned char 
  5497 ;;  counter         1   16[BANK1 ] unsigned char 
  5498 ;; Return value:  Size  Location     Type
  5499 ;;                  3    9[BANK1 ] m
  5500 ;; Registers used:
  5501 ;;		wreg, status,2, status,0
  5502 ;; Tracked objects:
  5503 ;;		On entry : 1F/1
  5504 ;;		On exit  : 1F/1
  5505 ;;		Unchanged: 0/0
  5506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5507 ;;      Params:         0       0       6       0       0       0
  5508 ;;      Locals:         0       0       5       0       0       0
  5509 ;;      Temps:          0       0       1       0       0       0
  5510 ;;      Totals:         0       0      12       0       0       0
  5511 ;;Total ram usage:       12 bytes
  5512 ;; Hardware stack levels used: 1
  5513 ;; Hardware stack levels required when called: 5
  5514 ;; This function calls:
  5515 ;;		Nothing
  5516 ;; This function is called by:
  5517 ;;		_pwmcontrol
  5518 ;; This function uses a non-reentrant model
  5519 ;;
  5520                           
  5521     0F22                     ___atdiv:	
  5522                           ;psect for function ___atdiv
  5523                           
  5524                           
  5525                           ;incstack = 0
  5526                           ; Regs used in ___atdiv: [wreg+status,2+status,0]
  5527     0F22  01DE               	clrf	___atdiv@sign^(0+128)
  5528     0F23  1FD8               	btfss	(___atdiv@divisor+2)^(0+128),7
  5529     0F24  2F2F               	goto	l1049
  5530     0F25  09D6               	comf	___atdiv@divisor^(0+128),f
  5531     0F26  09D7               	comf	(___atdiv@divisor+1)^(0+128),f
  5532     0F27  09D8               	comf	(___atdiv@divisor+2)^(0+128),f
  5533     0F28  0AD6               	incf	___atdiv@divisor^(0+128),f
  5534     0F29  1903               	skipnz
  5535     0F2A  0AD7               	incf	(___atdiv@divisor+1)^(0+128),f
  5536     0F2B  1903               	skipnz
  5537     0F2C  0AD8               	incf	(___atdiv@divisor+2)^(0+128),f
  5538     0F2D  01DE               	clrf	___atdiv@sign^(0+128)
  5539     0F2E  0ADE               	incf	___atdiv@sign^(0+128),f
  5540     0F2F                     l1049:
  5541     0F2F  1FDB               	btfss	(___atdiv@dividend+2)^(0+128),7
  5542     0F30  2F3D               	goto	l2376
  5543     0F31  09D9               	comf	___atdiv@dividend^(0+128),f
  5544     0F32  09DA               	comf	(___atdiv@dividend+1)^(0+128),f
  5545     0F33  09DB               	comf	(___atdiv@dividend+2)^(0+128),f
  5546     0F34  0AD9               	incf	___atdiv@dividend^(0+128),f
  5547     0F35  1903               	skipnz
  5548     0F36  0ADA               	incf	(___atdiv@dividend+1)^(0+128),f
  5549     0F37  1903               	skipnz
  5550     0F38  0ADB               	incf	(___atdiv@dividend+2)^(0+128),f
  5551     0F39  3001               	movlw	1
  5552     0F3A  00DC               	movwf	??___atdiv^(0+128)
  5553     0F3B  085C               	movf	??___atdiv^(0+128),w
  5554     0F3C  06DE               	xorwf	___atdiv@sign^(0+128),f
  5555     0F3D                     l2376:
  5556     0F3D  3000               	movlw	0
  5557     0F3E  00DF               	movwf	___atdiv@quotient^(0+128)
  5558     0F3F  3000               	movlw	0
  5559     0F40  00E0               	movwf	(___atdiv@quotient+1)^(0+128)
  5560     0F41  3000               	movlw	0
  5561     0F42  00E1               	movwf	(___atdiv@quotient+2)^(0+128)
  5562     0F43  0858               	movf	(___atdiv@divisor+2)^(0+128),w
  5563     0F44  0457               	iorwf	(___atdiv@divisor+1)^(0+128),w
  5564     0F45  0456               	iorwf	___atdiv@divisor^(0+128),w
  5565     0F46  1903               	skipnz
  5566     0F47  2F7A               	goto	l2398
  5567     0F48  01DD               	clrf	___atdiv@counter^(0+128)
  5568     0F49  0ADD               	incf	___atdiv@counter^(0+128),f
  5569     0F4A                     l2384:
  5570     0F4A  1BD8               	btfsc	(___atdiv@divisor+2)^(0+128),7
  5571     0F4B  2F57               	goto	l2386
  5572     0F4C  3001               	movlw	1
  5573     0F4D                     u1695:
  5574     0F4D  35D6               	lslf	___atdiv@divisor^(0+128),f
  5575     0F4E  0DD7               	rlf	(___atdiv@divisor+1)^(0+128),f
  5576     0F4F  0DD8               	rlf	(___atdiv@divisor+2)^(0+128),f
  5577     0F50  0B89               	decfsz	9,f
  5578     0F51  2F4D               	goto	u1695
  5579     0F52  3001               	movlw	1
  5580     0F53  00DC               	movwf	??___atdiv^(0+128)
  5581     0F54  085C               	movf	??___atdiv^(0+128),w
  5582     0F55  07DD               	addwf	___atdiv@counter^(0+128),f
  5583     0F56  2F4A               	goto	l2384
  5584     0F57                     l2386:
  5585     0F57  3001               	movlw	1
  5586     0F58                     u1715:
  5587     0F58  35DF               	lslf	___atdiv@quotient^(0+128),f
  5588     0F59  0DE0               	rlf	(___atdiv@quotient+1)^(0+128),f
  5589     0F5A  0DE1               	rlf	(___atdiv@quotient+2)^(0+128),f
  5590     0F5B  0B89               	decfsz	9,f
  5591     0F5C  2F58               	goto	u1715
  5592     0F5D  0858               	movf	(___atdiv@divisor+2)^(0+128),w
  5593     0F5E  025B               	subwf	(___atdiv@dividend+2)^(0+128),w
  5594     0F5F  1D03               	skipz
  5595     0F60  2F67               	goto	u1725
  5596     0F61  0857               	movf	(___atdiv@divisor+1)^(0+128),w
  5597     0F62  025A               	subwf	(___atdiv@dividend+1)^(0+128),w
  5598     0F63  1D03               	skipz
  5599     0F64  2F67               	goto	u1725
  5600     0F65  0856               	movf	___atdiv@divisor^(0+128),w
  5601     0F66  0259               	subwf	___atdiv@dividend^(0+128),w
  5602     0F67                     u1725:
  5603     0F67  1C03               	skipc
  5604     0F68  2F70               	goto	l2394
  5605     0F69  0856               	movf	___atdiv@divisor^(0+128),w
  5606     0F6A  02D9               	subwf	___atdiv@dividend^(0+128),f
  5607     0F6B  0857               	movf	(___atdiv@divisor+1)^(0+128),w
  5608     0F6C  3BDA               	subwfb	(___atdiv@dividend+1)^(0+128),f
  5609     0F6D  0858               	movf	(___atdiv@divisor+2)^(0+128),w
  5610     0F6E  3BDB               	subwfb	(___atdiv@dividend+2)^(0+128),f
  5611     0F6F  145F               	bsf	___atdiv@quotient^(0+128),0
  5612     0F70                     l2394:
  5613     0F70  3001               	movlw	1
  5614     0F71                     u1735:
  5615     0F71  36D8               	lsrf	(___atdiv@divisor+2)^(0+128),f
  5616     0F72  0CD7               	rrf	(___atdiv@divisor+1)^(0+128),f
  5617     0F73  0CD6               	rrf	___atdiv@divisor^(0+128),f
  5618     0F74  0B89               	decfsz	9,f
  5619     0F75  2F71               	goto	u1735
  5620     0F76  3001               	movlw	1
  5621     0F77  02DD               	subwf	___atdiv@counter^(0+128),f
  5622     0F78  1D03               	btfss	3,2
  5623     0F79  2F57               	goto	l2386
  5624     0F7A                     l2398:
  5625     0F7A  085E               	movf	___atdiv@sign^(0+128),w
  5626     0F7B  1903               	btfsc	3,2
  5627     0F7C  2F85               	goto	l2402
  5628     0F7D  09DF               	comf	___atdiv@quotient^(0+128),f
  5629     0F7E  09E0               	comf	(___atdiv@quotient+1)^(0+128),f
  5630     0F7F  09E1               	comf	(___atdiv@quotient+2)^(0+128),f
  5631     0F80  0ADF               	incf	___atdiv@quotient^(0+128),f
  5632     0F81  1903               	skipnz
  5633     0F82  0AE0               	incf	(___atdiv@quotient+1)^(0+128),f
  5634     0F83  1903               	skipnz
  5635     0F84  0AE1               	incf	(___atdiv@quotient+2)^(0+128),f
  5636     0F85                     l2402:
  5637     0F85  085F               	movf	___atdiv@quotient^(0+128),w
  5638     0F86  00D6               	movwf	?___atdiv^(0+128)
  5639     0F87  0860               	movf	(___atdiv@quotient+1)^(0+128),w
  5640     0F88  00D7               	movwf	(?___atdiv+1)^(0+128)
  5641     0F89  0861               	movf	(___atdiv@quotient+2)^(0+128),w
  5642     0F8A  00D8               	movwf	(?___atdiv+2)^(0+128)
  5643     0F8B  0008               	return
  5644     0F8C                     __end_of___atdiv:
  5645                           
  5646                           	psect	text13
  5647     0377                     __ptext13:	
  5648 ;; *************** function _fluxcontrol *****************
  5649 ;; Defined at:
  5650 ;;		line 167 in file "main.c"
  5651 ;; Parameters:    Size  Location     Type
  5652 ;;		None
  5653 ;; Auto vars:     Size  Location     Type
  5654 ;;		None
  5655 ;; Return value:  Size  Location     Type
  5656 ;;                  1    wreg      void 
  5657 ;; Registers used:
  5658 ;;		wreg, status,2, status,0, pclath, cstack
  5659 ;; Tracked objects:
  5660 ;;		On entry : 1F/1
  5661 ;;		On exit  : 0/0
  5662 ;;		Unchanged: 0/0
  5663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5664 ;;      Params:         0       0       0       0       0       0
  5665 ;;      Locals:         0       0       0       0       0       0
  5666 ;;      Temps:          0       0       6       0       0       0
  5667 ;;      Totals:         0       0       6       0       0       0
  5668 ;;Total ram usage:        6 bytes
  5669 ;; Hardware stack levels used: 1
  5670 ;; Hardware stack levels required when called: 6
  5671 ;; This function calls:
  5672 ;;		___tmul
  5673 ;; This function is called by:
  5674 ;;		_controlchoose
  5675 ;; This function uses a non-reentrant model
  5676 ;;
  5677                           
  5678     0377                     _fluxcontrol:	
  5679                           ;psect for function _fluxcontrol
  5680                           
  5681                           
  5682                           ;main.c: 168:     error = (ballset-balldist)*100;
  5683                           
  5684                           ;incstack = 0
  5685                           ; Regs used in _fluxcontrol: [wreg+status,2+status,0+pclath+cstack]
  5686     0377  082A               	movf	_balldist^(0+128),w
  5687     0378  0020               	movlb	0	; select bank0
  5688     0379  025E               	subwf	_ballset,w
  5689     037A  0021               	movlb	1	; select bank1
  5690     037B  00D6               	movwf	??_fluxcontrol^(0+128)
  5691     037C  0020               	movlb	0	; select bank0
  5692     037D  085F               	movf	_ballset+1,w
  5693     037E  0021               	movlb	1	; select bank1
  5694     037F  00D7               	movwf	(??_fluxcontrol^(0+128)+1)
  5695     0380  082B               	movf	(_balldist+1)^(0+128),w
  5696     0381  1C03               	skipc
  5697     0382  0F2B               	incfsz	(_balldist+1)^(0+128),w
  5698     0383  2B85               	goto	u2531
  5699     0384  2B86               	goto	u2532
  5700     0385                     u2531:
  5701     0385  02D7               	subwf	(??_fluxcontrol^(0+128)+1),f
  5702     0386                     u2532:
  5703     0386  0020               	movlb	0	; select bank0
  5704     0387  0860               	movf	_ballset+2,w
  5705     0388  0021               	movlb	1	; select bank1
  5706     0389  00D8               	movwf	(??_fluxcontrol^(0+128)+2)
  5707     038A  082C               	movf	(_balldist+2)^(0+128),w
  5708     038B  1C03               	skipc
  5709     038C  0F2C               	incfsz	(_balldist+2)^(0+128),w
  5710     038D  2B8F               	goto	u2533
  5711     038E  2B90               	goto	u2534
  5712     038F                     u2533:
  5713     038F  02D8               	subwf	(??_fluxcontrol^(0+128)+2),f
  5714     0390                     u2534:
  5715     0390  0856               	movf	??_fluxcontrol^(0+128),w
  5716     0391  00CD               	movwf	___tmul@multiplier^(0+128)
  5717     0392  0857               	movf	(??_fluxcontrol+1)^(0+128),w
  5718     0393  00CE               	movwf	(___tmul@multiplier+1)^(0+128)
  5719     0394  0858               	movf	(??_fluxcontrol+2)^(0+128),w
  5720     0395  00CF               	movwf	(___tmul@multiplier+2)^(0+128)
  5721     0396  3064               	movlw	100
  5722     0397  00D0               	movwf	___tmul@multiplicand^(0+128)
  5723     0398  3000               	movlw	0
  5724     0399  00D1               	movwf	(___tmul@multiplicand+1)^(0+128)
  5725     039A  3000               	movlw	0
  5726     039B  00D2               	movwf	(___tmul@multiplicand+2)^(0+128)
  5727     039C  318D  2547  3183   	fcall	___tmul
  5728     039F  084D               	movf	?___tmul^(0+128),w
  5729     03A0  00B0               	movwf	_error^(0+128)
  5730     03A1  084E               	movf	(?___tmul+1)^(0+128),w
  5731     03A2  00B1               	movwf	(_error+1)^(0+128)
  5732     03A3  084F               	movf	(?___tmul+2)^(0+128),w
  5733     03A4  00B2               	movwf	(_error+2)^(0+128)
  5734                           
  5735                           ;main.c: 169:     if(error > 150 || error < -150){
  5736     03A5  1BB2               	btfsc	(_error+2)^(0+128),7
  5737     03A6  2BB1               	goto	l2850
  5738     03A7  0832               	movf	(_error+2)^(0+128),w
  5739     03A8  1D03               	btfss	3,2
  5740     03A9  2BBC               	goto	l2852
  5741     03AA  0831               	movf	(_error+1)^(0+128),w
  5742     03AB  1D03               	btfss	3,2
  5743     03AC  2BBC               	goto	l2852
  5744     03AD  3097               	movlw	151
  5745     03AE  0230               	subwf	_error^(0+128),w
  5746     03AF  1803               	btfsc	3,0
  5747     03B0  2BBC               	goto	l2852
  5748     03B1                     l2850:
  5749     03B1  0021               	movlb	1	; select bank1
  5750     03B2  1FB2               	btfss	(_error+2)^(0+128),7
  5751     03B3  0008               	return
  5752     03B4  306A               	movlw	106
  5753     03B5  0230               	subwf	_error^(0+128),w
  5754     03B6  30FF               	movlw	255
  5755     03B7  3B31               	subwfb	(_error+1)^(0+128),w
  5756     03B8  30FF               	movlw	255
  5757     03B9  3B32               	subwfb	(_error+2)^(0+128),w
  5758     03BA  1803               	btfsc	3,0
  5759     03BB  0008               	return
  5760     03BC                     l2852:
  5761                           
  5762                           ;main.c: 170:         outpre = (((kpf*error +kdf*(error-errorp)))+outpre);
  5763     03BC  0021               	movlb	1	; select bank1
  5764     03BD  0824               	movf	_outpre^(0+128),w
  5765     03BE  00D6               	movwf	??_fluxcontrol^(0+128)
  5766     03BF  0825               	movf	(_outpre+1)^(0+128),w
  5767     03C0  00D7               	movwf	(??_fluxcontrol^(0+128)+1)
  5768     03C1  0826               	movf	(_outpre+2)^(0+128),w
  5769     03C2  00D8               	movwf	(??_fluxcontrol^(0+128)+2)
  5770     03C3  082D               	movf	_errorp^(0+128),w
  5771     03C4  00CD               	movwf	___tmul@multiplier^(0+128)
  5772     03C5  082E               	movf	(_errorp+1)^(0+128),w
  5773     03C6  00CE               	movwf	(___tmul@multiplier+1)^(0+128)
  5774     03C7  082F               	movf	(_errorp+2)^(0+128),w
  5775     03C8  00CF               	movwf	(___tmul@multiplier+2)^(0+128)
  5776     03C9  3093               	movlw	147
  5777     03CA  00D0               	movwf	___tmul@multiplicand^(0+128)
  5778     03CB  30FF               	movlw	255
  5779     03CC  00D1               	movwf	(___tmul@multiplicand+1)^(0+128)
  5780     03CD  30FF               	movlw	255
  5781     03CE  00D2               	movwf	(___tmul@multiplicand+2)^(0+128)
  5782     03CF  318D  2547  3183   	fcall	___tmul
  5783     03D2  084D               	movf	?___tmul^(0+128),w
  5784     03D3  00D9               	movwf	(??_fluxcontrol+3)^(0+128)
  5785     03D4  084E               	movf	(?___tmul+1)^(0+128),w
  5786     03D5  00DA               	movwf	((??_fluxcontrol+3)^(0+128)+1)
  5787     03D6  084F               	movf	(?___tmul+2)^(0+128),w
  5788     03D7  00DB               	movwf	((??_fluxcontrol+3)^(0+128)+2)
  5789     03D8  0830               	movf	_error^(0+128),w
  5790     03D9  00CD               	movwf	___tmul@multiplier^(0+128)
  5791     03DA  0831               	movf	(_error+1)^(0+128),w
  5792     03DB  00CE               	movwf	(___tmul@multiplier+1)^(0+128)
  5793     03DC  0832               	movf	(_error+2)^(0+128),w
  5794     03DD  00CF               	movwf	(___tmul@multiplier+2)^(0+128)
  5795     03DE  3082               	movlw	130
  5796     03DF  00D0               	movwf	___tmul@multiplicand^(0+128)
  5797     03E0  3000               	movlw	0
  5798     03E1  00D1               	movwf	(___tmul@multiplicand+1)^(0+128)
  5799     03E2  3000               	movlw	0
  5800     03E3  00D2               	movwf	(___tmul@multiplicand+2)^(0+128)
  5801     03E4  318D  2547  3183   	fcall	___tmul
  5802     03E7  084D               	movf	?___tmul^(0+128),w
  5803     03E8  07D9               	addwf	(??_fluxcontrol+3)^(0+128),f
  5804     03E9  084E               	movf	(?___tmul+1)^(0+128),w
  5805     03EA  3DDA               	addwfc	((??_fluxcontrol+3)^(0+128)+1),f
  5806     03EB  084F               	movf	(?___tmul+2)^(0+128),w
  5807     03EC  3DDB               	addwfc	((??_fluxcontrol+3)^(0+128)+2),f
  5808     03ED  0859               	movf	(??_fluxcontrol+3)^(0+128),w
  5809     03EE  07D6               	addwf	??_fluxcontrol^(0+128),f
  5810     03EF  085A               	movf	(??_fluxcontrol+4)^(0+128),w
  5811     03F0  3DD7               	addwfc	(??_fluxcontrol^(0+128)+1),f
  5812     03F1  085B               	movf	(??_fluxcontrol+5)^(0+128),w
  5813     03F2  3DD8               	addwfc	(??_fluxcontrol^(0+128)+2),f
  5814     03F3  0856               	movf	??_fluxcontrol^(0+128),w
  5815     03F4  00A4               	movwf	_outpre^(0+128)
  5816     03F5  0857               	movf	(??_fluxcontrol+1)^(0+128),w
  5817     03F6  00A5               	movwf	(_outpre+1)^(0+128)
  5818     03F7  0858               	movf	(??_fluxcontrol+2)^(0+128),w
  5819     03F8  00A6               	movwf	(_outpre+2)^(0+128)
  5820                           
  5821                           ;main.c: 171:         if (outpre > 0) output = 0;
  5822     03F9  1BA6               	btfsc	(_outpre+2)^(0+128),7
  5823     03FA  2C09               	goto	l2858
  5824     03FB  0826               	movf	(_outpre+2)^(0+128),w
  5825     03FC  1D03               	btfss	3,2
  5826     03FD  2C05               	goto	l2856
  5827     03FE  0825               	movf	(_outpre+1)^(0+128),w
  5828     03FF  1D03               	btfss	3,2
  5829     0400  2C05               	goto	l2856
  5830     0401  3001               	movlw	1
  5831     0402  0224               	subwf	_outpre^(0+128),w
  5832     0403  1C03               	btfss	3,0
  5833     0404  2C09               	goto	l2858
  5834     0405                     l2856:
  5835     0405  0021               	movlb	1	; select bank1
  5836     0406  01C1               	clrf	_output^(0+128)
  5837     0407  01C2               	clrf	(_output+1)^(0+128)
  5838     0408  2C19               	goto	l2864
  5839     0409                     l2858:
  5840     0409  0021               	movlb	1	; select bank1
  5841     040A  1FA6               	btfss	(_outpre+2)^(0+128),7
  5842     040B  2C05               	goto	l2856
  5843     040C  30C0               	movlw	192
  5844     040D  0224               	subwf	_outpre^(0+128),w
  5845     040E  3063               	movlw	99
  5846     040F  3B25               	subwfb	(_outpre+1)^(0+128),w
  5847     0410  30FF               	movlw	255
  5848     0411  3B26               	subwfb	(_outpre+2)^(0+128),w
  5849     0412  1803               	btfsc	3,0
  5850     0413  2C05               	goto	l2856
  5851     0414  3090               	movlw	144
  5852     0415  0021               	movlb	1	; select bank1
  5853     0416  00C1               	movwf	_output^(0+128)
  5854     0417  3001               	movlw	1
  5855     0418  00C2               	movwf	(_output^(0+128)+1)
  5856     0419                     l2864:
  5857                           
  5858                           ;main.c: 174:         if (outpre>800){
  5859     0419  1BA6               	btfsc	(_outpre+2)^(0+128),7
  5860     041A  2C2B               	goto	l2868
  5861     041B  0826               	movf	(_outpre+2)^(0+128),w
  5862     041C  1D03               	btfss	3,2
  5863     041D  2C24               	goto	l2866
  5864     041E  3021               	movlw	33
  5865     041F  0224               	subwf	_outpre^(0+128),w
  5866     0420  3003               	movlw	3
  5867     0421  3B25               	subwfb	(_outpre+1)^(0+128),w
  5868     0422  1C03               	btfss	3,0
  5869     0423  2C2B               	goto	l2868
  5870     0424                     l2866:
  5871                           
  5872                           ;main.c: 175:             outpre = 800;
  5873     0424  3020               	movlw	32
  5874     0425  0021               	movlb	1	; select bank1
  5875     0426  00A4               	movwf	_outpre^(0+128)
  5876     0427  3003               	movlw	3
  5877     0428  00A5               	movwf	(_outpre+1)^(0+128)
  5878     0429  3000               	movlw	0
  5879     042A  2C3C               	goto	L7
  5880     042B                     l2868:	
  5881                           ;main.c: 176:         } else if (outpre < -45000){
  5882                           
  5883     042B  0021               	movlb	1	; select bank1
  5884     042C  1FA6               	btfss	(_outpre+2)^(0+128),7
  5885     042D  2C3D               	goto	l712
  5886     042E  3038               	movlw	56
  5887     042F  0224               	subwf	_outpre^(0+128),w
  5888     0430  3050               	movlw	80
  5889     0431  3B25               	subwfb	(_outpre+1)^(0+128),w
  5890     0432  30FF               	movlw	255
  5891     0433  3B26               	subwfb	(_outpre+2)^(0+128),w
  5892     0434  1803               	btfsc	3,0
  5893     0435  2C3D               	goto	l712
  5894                           
  5895                           ;main.c: 177:             outpre = -45000;
  5896     0436  3038               	movlw	56
  5897     0437  0021               	movlb	1	; select bank1
  5898     0438  00A4               	movwf	_outpre^(0+128)
  5899     0439  3050               	movlw	80
  5900     043A  00A5               	movwf	(_outpre+1)^(0+128)
  5901     043B  30FF               	movlw	255
  5902     043C                     L7:
  5903     043C  00A6               	movwf	(_outpre+2)^(0+128)
  5904     043D                     l712:
  5905                           
  5906                           ;main.c: 179:         errorp = error;
  5907     043D  0021               	movlb	1	; select bank1
  5908     043E  0830               	movf	_error^(0+128),w
  5909     043F  00AD               	movwf	_errorp^(0+128)
  5910     0440  0831               	movf	(_error+1)^(0+128),w
  5911     0441  00AE               	movwf	(_errorp+1)^(0+128)
  5912     0442  0832               	movf	(_error+2)^(0+128),w
  5913     0443  00AF               	movwf	(_errorp+2)^(0+128)
  5914     0444  0008               	return
  5915     0445                     __end_of_fluxcontrol:
  5916                           
  5917                           	psect	text14
  5918     0D47                     __ptext14:	
  5919 ;; *************** function ___tmul *****************
  5920 ;; Defined at:
  5921 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul24.c"
  5922 ;; Parameters:    Size  Location     Type
  5923 ;;  multiplier      3    0[BANK1 ] unsigned um
  5924 ;;  multiplicand    3    3[BANK1 ] unsigned um
  5925 ;; Auto vars:     Size  Location     Type
  5926 ;;  product         3    6[BANK1 ] unsigned um
  5927 ;; Return value:  Size  Location     Type
  5928 ;;                  3    0[BANK1 ] unsigned um
  5929 ;; Registers used:
  5930 ;;		wreg, status,2, status,0
  5931 ;; Tracked objects:
  5932 ;;		On entry : 1F/1
  5933 ;;		On exit  : 1F/1
  5934 ;;		Unchanged: 0/0
  5935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5936 ;;      Params:         0       0       6       0       0       0
  5937 ;;      Locals:         0       0       3       0       0       0
  5938 ;;      Temps:          0       0       0       0       0       0
  5939 ;;      Totals:         0       0       9       0       0       0
  5940 ;;Total ram usage:        9 bytes
  5941 ;; Hardware stack levels used: 1
  5942 ;; Hardware stack levels required when called: 5
  5943 ;; This function calls:
  5944 ;;		Nothing
  5945 ;; This function is called by:
  5946 ;;		_fluxcontrol
  5947 ;;		_pwmcontrol
  5948 ;; This function uses a non-reentrant model
  5949 ;;
  5950                           
  5951     0D47                     ___tmul:	
  5952                           ;psect for function ___tmul
  5953                           
  5954                           
  5955                           ;incstack = 0
  5956                           ; Regs used in ___tmul: [wreg+status,2+status,0]
  5957     0D47  3000               	movlw	0
  5958     0D48  00D3               	movwf	___tmul@product^(0+128)
  5959     0D49  3000               	movlw	0
  5960     0D4A  00D4               	movwf	(___tmul@product+1)^(0+128)
  5961     0D4B  3000               	movlw	0
  5962     0D4C  00D5               	movwf	(___tmul@product+2)^(0+128)
  5963     0D4D                     l2354:
  5964     0D4D  1C4D               	btfss	___tmul@multiplier^(0+128),0
  5965     0D4E  2D55               	goto	l2358
  5966     0D4F  0850               	movf	___tmul@multiplicand^(0+128),w
  5967     0D50  07D3               	addwf	___tmul@product^(0+128),f
  5968     0D51  0851               	movf	(___tmul@multiplicand+1)^(0+128),w
  5969     0D52  3DD4               	addwfc	(___tmul@product+1)^(0+128),f
  5970     0D53  0852               	movf	(___tmul@multiplicand+2)^(0+128),w
  5971     0D54  3DD5               	addwfc	(___tmul@product+2)^(0+128),f
  5972     0D55                     l2358:
  5973     0D55  3001               	movlw	1
  5974     0D56                     u1635:
  5975     0D56  35D0               	lslf	___tmul@multiplicand^(0+128),f
  5976     0D57  0DD1               	rlf	(___tmul@multiplicand+1)^(0+128),f
  5977     0D58  0DD2               	rlf	(___tmul@multiplicand+2)^(0+128),f
  5978     0D59  0B89               	decfsz	9,f
  5979     0D5A  2D56               	goto	u1635
  5980     0D5B  3001               	movlw	1
  5981     0D5C                     u1645:
  5982     0D5C  36CF               	lsrf	(___tmul@multiplier+2)^(0+128),f
  5983     0D5D  0CCE               	rrf	(___tmul@multiplier+1)^(0+128),f
  5984     0D5E  0CCD               	rrf	___tmul@multiplier^(0+128),f
  5985     0D5F  0B89               	decfsz	9,f
  5986     0D60  2D5C               	goto	u1645
  5987     0D61  084F               	movf	(___tmul@multiplier+2)^(0+128),w
  5988     0D62  044E               	iorwf	(___tmul@multiplier+1)^(0+128),w
  5989     0D63  044D               	iorwf	___tmul@multiplier^(0+128),w
  5990     0D64  1D03               	skipz
  5991     0D65  2D4D               	goto	l2354
  5992     0D66  0853               	movf	___tmul@product^(0+128),w
  5993     0D67  00CD               	movwf	?___tmul^(0+128)
  5994     0D68  0854               	movf	(___tmul@product+1)^(0+128),w
  5995     0D69  00CE               	movwf	(?___tmul+1)^(0+128)
  5996     0D6A  0855               	movf	(___tmul@product+2)^(0+128),w
  5997     0D6B  00CF               	movwf	(?___tmul+2)^(0+128)
  5998     0D6C  0008               	return
  5999     0D6D                     __end_of___tmul:
  6000                           
  6001                           	psect	text15
  6002     0B54                     __ptext15:	
  6003 ;; *************** function _TMR4_StartTimer *****************
  6004 ;; Defined at:
  6005 ;;		line 79 in file "mcc_generated_files/tmr4.c"
  6006 ;; Parameters:    Size  Location     Type
  6007 ;;		None
  6008 ;; Auto vars:     Size  Location     Type
  6009 ;;		None
  6010 ;; Return value:  Size  Location     Type
  6011 ;;                  1    wreg      void 
  6012 ;; Registers used:
  6013 ;;		None
  6014 ;; Tracked objects:
  6015 ;;		On entry : 0/1
  6016 ;;		On exit  : 1F/8
  6017 ;;		Unchanged: 0/0
  6018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6019 ;;      Params:         0       0       0       0       0       0
  6020 ;;      Locals:         0       0       0       0       0       0
  6021 ;;      Temps:          0       0       0       0       0       0
  6022 ;;      Totals:         0       0       0       0       0       0
  6023 ;;Total ram usage:        0 bytes
  6024 ;; Hardware stack levels used: 1
  6025 ;; Hardware stack levels required when called: 5
  6026 ;; This function calls:
  6027 ;;		Nothing
  6028 ;; This function is called by:
  6029 ;;		_controlchoose
  6030 ;; This function uses a non-reentrant model
  6031 ;;
  6032                           
  6033     0B54                     _TMR4_StartTimer:	
  6034                           ;psect for function _TMR4_StartTimer
  6035                           
  6036                           
  6037                           ;mcc_generated_files/tmr4.c: 82:     T4CONbits.TMR4ON = 1;
  6038                           
  6039                           ;incstack = 0
  6040                           ; Regs used in _TMR4_StartTimer: []
  6041     0B54  0028               	movlb	8	; select bank8
  6042     0B55  1517               	bsf	23,2	;volatile
  6043     0B56  0008               	return
  6044     0B57                     __end_of_TMR4_StartTimer:
  6045                           
  6046                           	psect	text16
  6047     0511                     __ptext16:	
  6048 ;; *************** function _analisa_Rx *****************
  6049 ;; Defined at:
  6050 ;;		line 213 in file "main.c"
  6051 ;; Parameters:    Size  Location     Type
  6052 ;;		None
  6053 ;; Auto vars:     Size  Location     Type
  6054 ;;		None
  6055 ;; Return value:  Size  Location     Type
  6056 ;;                  1    wreg      void 
  6057 ;; Registers used:
  6058 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6059 ;; Tracked objects:
  6060 ;;		On entry : 1F/1
  6061 ;;		On exit  : 1F/1
  6062 ;;		Unchanged: 0/0
  6063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6064 ;;      Params:         0       0       0       0       0       0
  6065 ;;      Locals:         0       0       0       0       0       0
  6066 ;;      Temps:          0       0       0       0       0       0
  6067 ;;      Totals:         0       0       0       0       0       0
  6068 ;;Total ram usage:        0 bytes
  6069 ;; Hardware stack levels used: 1
  6070 ;; Hardware stack levels required when called: 6
  6071 ;; This function calls:
  6072 ;;		_EPWM1_LoadDutyValue
  6073 ;; This function is called by:
  6074 ;;		_main
  6075 ;; This function uses a non-reentrant model
  6076 ;;
  6077                           
  6078     0511                     _analisa_Rx:	
  6079                           ;psect for function _analisa_Rx
  6080                           
  6081                           
  6082                           ;main.c: 214:     switch(bufferRx[0]){
  6083                           
  6084                           ;incstack = 0
  6085                           ; Regs used in _analisa_Rx: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6086     0511  2DCD               	goto	l3066
  6087     0512                     l3010:
  6088                           
  6089                           ;main.c: 216:             if(countRx==7){
  6090     0512  3007               	movlw	7
  6091     0513  0021               	movlb	1	; select bank1
  6092     0514  064A               	xorwf	_countRx^(0+128),w
  6093     0515  1D03               	btfss	3,2
  6094     0516  2D44               	goto	l3026
  6095                           
  6096                           ;main.c: 217:                 controlchoice = bufferRx[0];
  6097     0517  0020               	movlb	0	; select bank0
  6098     0518  0853               	movf	_bufferRx,w
  6099     0519  0021               	movlb	1	; select bank1
  6100     051A  00CB               	movwf	_controlchoice^(0+128)
  6101                           
  6102                           ;main.c: 218:                 vRx.vH = bufferRx[3];
  6103     051B  0020               	movlb	0	; select bank0
  6104     051C  0856               	movf	_bufferRx+3,w
  6105     051D  0021               	movlb	1	; select bank1
  6106     051E  00BE               	movwf	(_vRx^(0+128)+1)
  6107                           
  6108                           ;main.c: 219:                 vRx.vL = bufferRx[4];
  6109     051F  0020               	movlb	0	; select bank0
  6110     0520  0857               	movf	_bufferRx+4,w
  6111     0521  0021               	movlb	1	; select bank1
  6112     0522  00BD               	movwf	_vRx^(0+128)
  6113                           
  6114                           ;main.c: 220:                 sp_position = vRx.v;
  6115     0523  083E               	movf	(_vRx+1)^(0+128),w
  6116     0524  00B8               	movwf	(_sp_position+1)^(0+128)
  6117     0525  083D               	movf	_vRx^(0+128),w
  6118     0526  00B7               	movwf	_sp_position^(0+128)
  6119                           
  6120                           ;main.c: 221:                 if(sp_position > 420 ) sp_position = 420;
  6121     0527  3001               	movlw	1
  6122     0528  0238               	subwf	(_sp_position+1)^(0+128),w
  6123     0529  30A5               	movlw	165
  6124     052A  1903               	skipnz
  6125     052B  0237               	subwf	_sp_position^(0+128),w
  6126     052C  1C03               	skipc
  6127     052D  2D32               	goto	l3018
  6128     052E  30A4               	movlw	164
  6129     052F  00B7               	movwf	_sp_position^(0+128)
  6130     0530  3001               	movlw	1
  6131     0531  00B8               	movwf	(_sp_position^(0+128)+1)
  6132     0532                     l3018:
  6133                           
  6134                           ;main.c: 223:                 vRx.vH = bufferRx[5];
  6135     0532  0020               	movlb	0	; select bank0
  6136     0533  0858               	movf	_bufferRx+5,w
  6137     0534  0021               	movlb	1	; select bank1
  6138     0535  00BE               	movwf	(_vRx^(0+128)+1)
  6139                           
  6140                           ;main.c: 224:                 vRx.vL = bufferRx[6];
  6141     0536  0020               	movlb	0	; select bank0
  6142     0537  0859               	movf	_bufferRx+6,w
  6143     0538  0021               	movlb	1	; select bank1
  6144     0539  00BD               	movwf	_vRx^(0+128)
  6145                           
  6146                           ;main.c: 225:                 dc = vRx.v;
  6147     053A  083E               	movf	(_vRx+1)^(0+128),w
  6148     053B  00BC               	movwf	(_dc+1)^(0+128)
  6149     053C  083D               	movf	_vRx^(0+128),w
  6150     053D  00BB               	movwf	_dc^(0+128)
  6151                           
  6152                           ;main.c: 226:                 EPWM1_LoadDutyValue(dc);
  6153     053E  083C               	movf	(_dc+1)^(0+128),w
  6154     053F  00CE               	movwf	(EPWM1_LoadDutyValue@dutyValue+1)^(0+128)
  6155     0540  083B               	movf	_dc^(0+128),w
  6156     0541  00CD               	movwf	EPWM1_LoadDutyValue@dutyValue^(0+128)
  6157     0542  318C  24C9         	fcall	_EPWM1_LoadDutyValue
  6158     0544                     l3026:
  6159                           
  6160                           ;main.c: 228:             countRx = 0;
  6161     0544  0021               	movlb	1	; select bank1
  6162     0545  01CA               	clrf	_countRx^(0+128)
  6163                           
  6164                           ;main.c: 229:             break;
  6165     0546  0008               	return
  6166     0547                     l3028:
  6167                           
  6168                           ;main.c: 231:             if(countRx==7){
  6169     0547  3007               	movlw	7
  6170     0548  0021               	movlb	1	; select bank1
  6171     0549  064A               	xorwf	_countRx^(0+128),w
  6172     054A  1D03               	btfss	3,2
  6173     054B  2D44               	goto	l3026
  6174                           
  6175                           ;main.c: 232:                 controlchoice = bufferRx[0];
  6176     054C  0020               	movlb	0	; select bank0
  6177     054D  0853               	movf	_bufferRx,w
  6178     054E  0021               	movlb	1	; select bank1
  6179     054F  00CB               	movwf	_controlchoice^(0+128)
  6180                           
  6181                           ;main.c: 233:                 vRx.vH = bufferRx[1];
  6182     0550  0020               	movlb	0	; select bank0
  6183     0551  0854               	movf	_bufferRx+1,w
  6184     0552  0021               	movlb	1	; select bank1
  6185     0553  00BE               	movwf	(_vRx^(0+128)+1)
  6186                           
  6187                           ;main.c: 234:                 vRx.vL = bufferRx[2];
  6188     0554  0020               	movlb	0	; select bank0
  6189     0555  0855               	movf	_bufferRx+2,w
  6190     0556  0021               	movlb	1	; select bank1
  6191     0557  00BD               	movwf	_vRx^(0+128)
  6192                           
  6193                           ;main.c: 235:                 sp_height = vRx.v;
  6194     0558  083E               	movf	(_vRx+1)^(0+128),w
  6195     0559  0020               	movlb	0	; select bank0
  6196     055A  00E4               	movwf	_sp_height+1
  6197     055B  0021               	movlb	1	; select bank1
  6198     055C  083D               	movf	_vRx^(0+128),w
  6199     055D  0020               	movlb	0	; select bank0
  6200     055E  00E3               	movwf	_sp_height
  6201                           
  6202                           ;main.c: 236:                 ballset = vRx.v ;
  6203     055F  0021               	movlb	1	; select bank1
  6204     0560  083D               	movf	_vRx^(0+128),w
  6205     0561  0020               	movlb	0	; select bank0
  6206     0562  00DE               	movwf	_ballset
  6207     0563  0021               	movlb	1	; select bank1
  6208     0564  083E               	movf	(_vRx+1)^(0+128),w
  6209     0565  0020               	movlb	0	; select bank0
  6210     0566  00DF               	movwf	_ballset+1
  6211     0567  01E0               	clrf	_ballset+2
  6212                           
  6213                           ;main.c: 237:                 vRx.vH = bufferRx[3];
  6214     0568  0856               	movf	_bufferRx+3,w
  6215     0569  0021               	movlb	1	; select bank1
  6216     056A  00BE               	movwf	(_vRx^(0+128)+1)
  6217                           
  6218                           ;main.c: 238:                 vRx.vL = bufferRx[4];
  6219     056B  0020               	movlb	0	; select bank0
  6220     056C  0857               	movf	_bufferRx+4,w
  6221     056D  0021               	movlb	1	; select bank1
  6222     056E  00BD               	movwf	_vRx^(0+128)
  6223                           
  6224                           ;main.c: 239:                 sp_position = vRx.v;
  6225     056F  083E               	movf	(_vRx+1)^(0+128),w
  6226     0570  00B8               	movwf	(_sp_position+1)^(0+128)
  6227     0571  083D               	movf	_vRx^(0+128),w
  6228     0572  00B7               	movwf	_sp_position^(0+128)
  6229                           
  6230                           ;main.c: 240:                 if(sp_position > 420 ) sp_position = 420;
  6231     0573  3001               	movlw	1
  6232     0574  0238               	subwf	(_sp_position+1)^(0+128),w
  6233     0575  30A5               	movlw	165
  6234     0576  1903               	skipnz
  6235     0577  0237               	subwf	_sp_position^(0+128),w
  6236     0578  1C03               	skipc
  6237     0579  2D7E               	goto	l3036
  6238     057A  30A4               	movlw	164
  6239     057B  00B7               	movwf	_sp_position^(0+128)
  6240     057C  3001               	movlw	1
  6241     057D  00B8               	movwf	(_sp_position^(0+128)+1)
  6242     057E                     l3036:
  6243                           
  6244                           ;main.c: 242:                 outputsum = 0;
  6245     057E  3000               	movlw	0
  6246     057F  0021               	movlb	1	; select bank1
  6247     0580  00A7               	movwf	_outputsum^(0+128)
  6248     0581  3000               	movlw	0
  6249     0582  00A8               	movwf	(_outputsum+1)^(0+128)
  6250     0583  3000               	movlw	0
  6251     0584  00A9               	movwf	(_outputsum+2)^(0+128)
  6252                           
  6253                           ;main.c: 243:                 errorp=0;
  6254     0585  3000               	movlw	0
  6255     0586  00AD               	movwf	_errorp^(0+128)
  6256     0587  3000               	movlw	0
  6257     0588  00AE               	movwf	(_errorp+1)^(0+128)
  6258     0589  3000               	movlw	0
  6259     058A  00AF               	movwf	(_errorp+2)^(0+128)
  6260                           
  6261                           ;main.c: 244:                 error =0;
  6262     058B  3000               	movlw	0
  6263     058C  00B0               	movwf	_error^(0+128)
  6264     058D  3000               	movlw	0
  6265     058E  00B1               	movwf	(_error+1)^(0+128)
  6266     058F  3000               	movlw	0
  6267     0590  00B2               	movwf	(_error+2)^(0+128)
  6268     0591  2D44               	goto	l3026
  6269     0592                     l3044:
  6270                           
  6271                           ;main.c: 249:             if(countRx==7){
  6272     0592  3007               	movlw	7
  6273     0593  0021               	movlb	1	; select bank1
  6274     0594  064A               	xorwf	_countRx^(0+128),w
  6275     0595  1D03               	btfss	3,2
  6276     0596  2D44               	goto	l3026
  6277                           
  6278                           ;main.c: 250:                 controlchoice = bufferRx[0];
  6279     0597  0020               	movlb	0	; select bank0
  6280     0598  0853               	movf	_bufferRx,w
  6281     0599  0021               	movlb	1	; select bank1
  6282     059A  00CB               	movwf	_controlchoice^(0+128)
  6283                           
  6284                           ;main.c: 251:                 vRx.vH = bufferRx[1];
  6285     059B  0020               	movlb	0	; select bank0
  6286     059C  0854               	movf	_bufferRx+1,w
  6287     059D  0021               	movlb	1	; select bank1
  6288     059E  00BE               	movwf	(_vRx^(0+128)+1)
  6289                           
  6290                           ;main.c: 252:                 vRx.vL = bufferRx[2];
  6291     059F  0020               	movlb	0	; select bank0
  6292     05A0  0855               	movf	_bufferRx+2,w
  6293     05A1  0021               	movlb	1	; select bank1
  6294     05A2  00BD               	movwf	_vRx^(0+128)
  6295                           
  6296                           ;main.c: 253:                 sp_height = vRx.v;
  6297     05A3  083E               	movf	(_vRx+1)^(0+128),w
  6298     05A4  0020               	movlb	0	; select bank0
  6299     05A5  00E4               	movwf	_sp_height+1
  6300     05A6  0021               	movlb	1	; select bank1
  6301     05A7  083D               	movf	_vRx^(0+128),w
  6302     05A8  0020               	movlb	0	; select bank0
  6303     05A9  00E3               	movwf	_sp_height
  6304                           
  6305                           ;main.c: 254:                 ballset = vRx.v;
  6306     05AA  0021               	movlb	1	; select bank1
  6307     05AB  083D               	movf	_vRx^(0+128),w
  6308     05AC  0020               	movlb	0	; select bank0
  6309     05AD  00DE               	movwf	_ballset
  6310     05AE  0021               	movlb	1	; select bank1
  6311     05AF  083E               	movf	(_vRx+1)^(0+128),w
  6312     05B0  0020               	movlb	0	; select bank0
  6313     05B1  00DF               	movwf	_ballset+1
  6314     05B2  01E0               	clrf	_ballset+2
  6315                           
  6316                           ;main.c: 255:                 vRx.vH = bufferRx[5];
  6317     05B3  0858               	movf	_bufferRx+5,w
  6318     05B4  0021               	movlb	1	; select bank1
  6319     05B5  00BE               	movwf	(_vRx^(0+128)+1)
  6320                           
  6321                           ;main.c: 256:                 vRx.vL = bufferRx[6];
  6322     05B6  0020               	movlb	0	; select bank0
  6323     05B7  0859               	movf	_bufferRx+6,w
  6324     05B8  0021               	movlb	1	; select bank1
  6325     05B9  00BD               	movwf	_vRx^(0+128)
  6326                           
  6327                           ;main.c: 257:                 dc = vRx.v;
  6328     05BA  083E               	movf	(_vRx+1)^(0+128),w
  6329     05BB  00BC               	movwf	(_dc+1)^(0+128)
  6330     05BC  083D               	movf	_vRx^(0+128),w
  6331     05BD  00BB               	movwf	_dc^(0+128)
  6332                           
  6333                           ;main.c: 258:                 EPWM1_LoadDutyValue(dc);
  6334     05BE  083C               	movf	(_dc+1)^(0+128),w
  6335     05BF  00CE               	movwf	(EPWM1_LoadDutyValue@dutyValue+1)^(0+128)
  6336     05C0  083B               	movf	_dc^(0+128),w
  6337     05C1  00CD               	movwf	EPWM1_LoadDutyValue@dutyValue^(0+128)
  6338     05C2  318C  24C9  3185   	fcall	_EPWM1_LoadDutyValue
  6339     05C5  2D7E               	goto	l3036
  6340     05C6                     l3058:
  6341                           
  6342                           ;main.c: 266:             if(countRx==7){
  6343     05C6  3007               	movlw	7
  6344     05C7  0021               	movlb	1	; select bank1
  6345     05C8  064A               	xorwf	_countRx^(0+128),w
  6346     05C9  1D03               	btfss	3,2
  6347     05CA  2D44               	goto	l3026
  6348     05CB  0001               	reset	;# 
  6349     05CC  2D44               	goto	l3026
  6350     05CD                     l3066:
  6351     05CD  0020               	movlb	0	; select bank0
  6352     05CE  0853               	movf	_bufferRx,w
  6353                           
  6354                           ; Switch size 1, requested type "simple"
  6355                           ; Number of cases is 4, Range of values is 0 to 3
  6356                           ; switch strategies available:
  6357                           ; Name         Instructions Cycles
  6358                           ; simple_byte           13     7 (average)
  6359                           ; direct_byte           14     6 (fixed)
  6360                           ; jumptable            260     6 (fixed)
  6361                           ;	Chosen strategy is simple_byte
  6362     05CF  3A00               	xorlw	0	; case 0
  6363     05D0  1903               	skipnz
  6364     05D1  2D12               	goto	l3010
  6365     05D2  3A01               	xorlw	1	; case 1
  6366     05D3  1903               	skipnz
  6367     05D4  2D47               	goto	l3028
  6368     05D5  3A03               	xorlw	3	; case 2
  6369     05D6  1903               	skipnz
  6370     05D7  2D92               	goto	l3044
  6371     05D8  3A01               	xorlw	1	; case 3
  6372     05D9  1903               	skipnz
  6373     05DA  2DC6               	goto	l3058
  6374     05DB  2D44               	goto	l3026
  6375     05DC  0008               	return
  6376     05DD                     __end_of_analisa_Rx:
  6377                           
  6378                           	psect	text17
  6379     0CC9                     __ptext17:	
  6380 ;; *************** function _EPWM1_LoadDutyValue *****************
  6381 ;; Defined at:
  6382 ;;		line 90 in file "mcc_generated_files/epwm1.c"
  6383 ;; Parameters:    Size  Location     Type
  6384 ;;  dutyValue       2    0[BANK1 ] unsigned short 
  6385 ;; Auto vars:     Size  Location     Type
  6386 ;;		None
  6387 ;; Return value:  Size  Location     Type
  6388 ;;                  1    wreg      void 
  6389 ;; Registers used:
  6390 ;;		wreg, status,2, status,0
  6391 ;; Tracked objects:
  6392 ;;		On entry : 1F/1
  6393 ;;		On exit  : 1F/5
  6394 ;;		Unchanged: 0/0
  6395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6396 ;;      Params:         0       0       2       0       0       0
  6397 ;;      Locals:         0       0       0       0       0       0
  6398 ;;      Temps:          0       0       2       0       0       0
  6399 ;;      Totals:         0       0       4       0       0       0
  6400 ;;Total ram usage:        4 bytes
  6401 ;; Hardware stack levels used: 1
  6402 ;; Hardware stack levels required when called: 5
  6403 ;; This function calls:
  6404 ;;		Nothing
  6405 ;; This function is called by:
  6406 ;;		_pwmcontrol
  6407 ;;		_analisa_Rx
  6408 ;; This function uses a non-reentrant model
  6409 ;;
  6410                           
  6411     0CC9                     _EPWM1_LoadDutyValue:	
  6412                           ;psect for function _EPWM1_LoadDutyValue
  6413                           
  6414                           
  6415                           ;mcc_generated_files/epwm1.c: 90: void EPWM1_LoadDutyValue(uint16_t dutyValue);mcc_gener
      +                          ated_files/epwm1.c: 91: {;mcc_generated_files/epwm1.c: 93:     CCPR1L = ((dutyValue & 0x
      +                          03FC)>>2);
  6416                           
  6417                           ;incstack = 0
  6418                           ; Regs used in _EPWM1_LoadDutyValue: [wreg+status,2+status,0]
  6419     0CC9  084E               	movf	(EPWM1_LoadDutyValue@dutyValue+1)^(0+128),w
  6420     0CCA  00D0               	movwf	(??_EPWM1_LoadDutyValue^(0+128)+1)
  6421     0CCB  084D               	movf	EPWM1_LoadDutyValue@dutyValue^(0+128),w
  6422     0CCC  00CF               	movwf	??_EPWM1_LoadDutyValue^(0+128)
  6423     0CCD  36D0               	lsrf	(??_EPWM1_LoadDutyValue^(0+128)+1),f
  6424     0CCE  0CCF               	rrf	??_EPWM1_LoadDutyValue^(0+128),f
  6425     0CCF  36D0               	lsrf	(??_EPWM1_LoadDutyValue^(0+128)+1),f
  6426     0CD0  0CCF               	rrf	??_EPWM1_LoadDutyValue^(0+128),f
  6427     0CD1  084F               	movf	??_EPWM1_LoadDutyValue^(0+128),w
  6428     0CD2  0025               	movlb	5	; select bank5
  6429     0CD3  0091               	movwf	17	;volatile
  6430                           
  6431                           ;mcc_generated_files/epwm1.c: 96:     CCP1CON = ((uint8_t)(CCP1CON & 0xCF) | ((dutyValue
      +                           & 0x0003)<<4));
  6432     0CD4  0021               	movlb	1	; select bank1
  6433     0CD5  084D               	movf	EPWM1_LoadDutyValue@dutyValue^(0+128),w
  6434     0CD6  3903               	andlw	3
  6435     0CD7  00CF               	movwf	??_EPWM1_LoadDutyValue^(0+128)
  6436     0CD8  3004               	movlw	4
  6437     0CD9                     u1595:
  6438     0CD9  35CF               	lslf	??_EPWM1_LoadDutyValue^(0+128),f
  6439     0CDA  0B89               	decfsz	9,f
  6440     0CDB  2CD9               	goto	u1595
  6441     0CDC  0025               	movlb	5	; select bank5
  6442     0CDD  0813               	movf	19,w	;volatile
  6443     0CDE  39CF               	andlw	207
  6444     0CDF  0021               	movlb	1	; select bank1
  6445     0CE0  044F               	iorwf	??_EPWM1_LoadDutyValue^(0+128),w
  6446     0CE1  0025               	movlb	5	; select bank5
  6447     0CE2  0093               	movwf	19	;volatile
  6448     0CE3  0008               	return
  6449     0CE4                     __end_of_EPWM1_LoadDutyValue:
  6450                           
  6451                           	psect	text18
  6452     0B80                     __ptext18:	
  6453 ;; *************** function _TMR6_WriteTimer *****************
  6454 ;; Defined at:
  6455 ;;		line 100 in file "mcc_generated_files/tmr6.c"
  6456 ;; Parameters:    Size  Location     Type
  6457 ;;  timerVal        1    wreg     unsigned char 
  6458 ;; Auto vars:     Size  Location     Type
  6459 ;;  timerVal        1    0[BANK1 ] unsigned char 
  6460 ;; Return value:  Size  Location     Type
  6461 ;;                  1    wreg      void 
  6462 ;; Registers used:
  6463 ;;		wreg
  6464 ;; Tracked objects:
  6465 ;;		On entry : 16/1
  6466 ;;		On exit  : 1F/8
  6467 ;;		Unchanged: 0/0
  6468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6469 ;;      Params:         0       0       0       0       0       0
  6470 ;;      Locals:         0       0       1       0       0       0
  6471 ;;      Temps:          0       0       0       0       0       0
  6472 ;;      Totals:         0       0       1       0       0       0
  6473 ;;Total ram usage:        1 bytes
  6474 ;; Hardware stack levels used: 1
  6475 ;; Hardware stack levels required when called: 5
  6476 ;; This function calls:
  6477 ;;		Nothing
  6478 ;; This function is called by:
  6479 ;;		_main
  6480 ;; This function uses a non-reentrant model
  6481 ;;
  6482                           
  6483     0B80                     _TMR6_WriteTimer:	
  6484                           ;psect for function _TMR6_WriteTimer
  6485                           
  6486                           
  6487                           ;incstack = 0
  6488                           ; Regs used in _TMR6_WriteTimer: [wreg]
  6489                           ;TMR6_WriteTimer@timerVal stored from wreg
  6490     0B80  0021               	movlb	1	; select bank1
  6491     0B81  00CD               	movwf	TMR6_WriteTimer@timerVal^(0+128)
  6492                           
  6493                           ;mcc_generated_files/tmr6.c: 100: void TMR6_WriteTimer(uint8_t timerVal);mcc_generated_f
      +                          iles/tmr6.c: 101: {;mcc_generated_files/tmr6.c: 103:     TMR6 = timerVal;
  6494     0B82  084D               	movf	TMR6_WriteTimer@timerVal^(0+128),w
  6495     0B83  0028               	movlb	8	; select bank8
  6496     0B84  009C               	movwf	28	;volatile
  6497     0B85  0008               	return
  6498     0B86                     __end_of_TMR6_WriteTimer:
  6499                           
  6500                           	psect	text19
  6501     0B7A                     __ptext19:	
  6502 ;; *************** function _TMR6_LoadPeriodRegister *****************
  6503 ;; Defined at:
  6504 ;;		line 106 in file "mcc_generated_files/tmr6.c"
  6505 ;; Parameters:    Size  Location     Type
  6506 ;;  periodVal       1    wreg     unsigned char 
  6507 ;; Auto vars:     Size  Location     Type
  6508 ;;  periodVal       1    0[BANK1 ] unsigned char 
  6509 ;; Return value:  Size  Location     Type
  6510 ;;                  1    wreg      void 
  6511 ;; Registers used:
  6512 ;;		wreg
  6513 ;; Tracked objects:
  6514 ;;		On entry : 1E/0
  6515 ;;		On exit  : 1F/8
  6516 ;;		Unchanged: 0/0
  6517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6518 ;;      Params:         0       0       0       0       0       0
  6519 ;;      Locals:         0       0       1       0       0       0
  6520 ;;      Temps:          0       0       0       0       0       0
  6521 ;;      Totals:         0       0       1       0       0       0
  6522 ;;Total ram usage:        1 bytes
  6523 ;; Hardware stack levels used: 1
  6524 ;; Hardware stack levels required when called: 5
  6525 ;; This function calls:
  6526 ;;		Nothing
  6527 ;; This function is called by:
  6528 ;;		_main
  6529 ;; This function uses a non-reentrant model
  6530 ;;
  6531                           
  6532     0B7A                     _TMR6_LoadPeriodRegister:	
  6533                           ;psect for function _TMR6_LoadPeriodRegister
  6534                           
  6535                           
  6536                           ;incstack = 0
  6537                           ; Regs used in _TMR6_LoadPeriodRegister: [wreg]
  6538                           ;TMR6_LoadPeriodRegister@periodVal stored from wreg
  6539     0B7A  0021               	movlb	1	; select bank1
  6540     0B7B  00CD               	movwf	TMR6_LoadPeriodRegister@periodVal^(0+128)
  6541                           
  6542                           ;mcc_generated_files/tmr6.c: 106: void TMR6_LoadPeriodRegister(uint8_t periodVal);mcc_ge
      +                          nerated_files/tmr6.c: 107: {;mcc_generated_files/tmr6.c: 108:    PR6 = periodVal;
  6543     0B7C  084D               	movf	TMR6_LoadPeriodRegister@periodVal^(0+128),w
  6544     0B7D  0028               	movlb	8	; select bank8
  6545     0B7E  009D               	movwf	29	;volatile
  6546     0B7F  0008               	return
  6547     0B80                     __end_of_TMR6_LoadPeriodRegister:
  6548                           
  6549                           	psect	text20
  6550     0B51                     __ptext20:	
  6551 ;; *************** function _TMR4_StopTimer *****************
  6552 ;; Defined at:
  6553 ;;		line 85 in file "mcc_generated_files/tmr4.c"
  6554 ;; Parameters:    Size  Location     Type
  6555 ;;		None
  6556 ;; Auto vars:     Size  Location     Type
  6557 ;;		None
  6558 ;; Return value:  Size  Location     Type
  6559 ;;                  1    wreg      void 
  6560 ;; Registers used:
  6561 ;;		None
  6562 ;; Tracked objects:
  6563 ;;		On entry : 1F/0
  6564 ;;		On exit  : 1F/8
  6565 ;;		Unchanged: 0/0
  6566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6567 ;;      Params:         0       0       0       0       0       0
  6568 ;;      Locals:         0       0       0       0       0       0
  6569 ;;      Temps:          0       0       0       0       0       0
  6570 ;;      Totals:         0       0       0       0       0       0
  6571 ;;Total ram usage:        0 bytes
  6572 ;; Hardware stack levels used: 1
  6573 ;; Hardware stack levels required when called: 5
  6574 ;; This function calls:
  6575 ;;		Nothing
  6576 ;; This function is called by:
  6577 ;;		_main
  6578 ;; This function uses a non-reentrant model
  6579 ;;
  6580                           
  6581     0B51                     _TMR4_StopTimer:	
  6582                           ;psect for function _TMR4_StopTimer
  6583                           
  6584                           
  6585                           ;mcc_generated_files/tmr4.c: 88:     T4CONbits.TMR4ON = 0;
  6586                           
  6587                           ;incstack = 0
  6588                           ; Regs used in _TMR4_StopTimer: []
  6589     0B51  0028               	movlb	8	; select bank8
  6590     0B52  1117               	bcf	23,2	;volatile
  6591     0B53  0008               	return
  6592     0B54                     __end_of_TMR4_StopTimer:
  6593                           
  6594                           	psect	text21
  6595     0B74                     __ptext21:	
  6596 ;; *************** function _TMR0_ReadTimer *****************
  6597 ;; Defined at:
  6598 ;;		line 80 in file "mcc_generated_files/tmr0.c"
  6599 ;; Parameters:    Size  Location     Type
  6600 ;;		None
  6601 ;; Auto vars:     Size  Location     Type
  6602 ;;  readVal         1    0[BANK1 ] unsigned char 
  6603 ;; Return value:  Size  Location     Type
  6604 ;;                  1    wreg      unsigned char 
  6605 ;; Registers used:
  6606 ;;		wreg
  6607 ;; Tracked objects:
  6608 ;;		On entry : 1D/0
  6609 ;;		On exit  : 1F/1
  6610 ;;		Unchanged: 0/0
  6611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6612 ;;      Params:         0       0       0       0       0       0
  6613 ;;      Locals:         0       0       1       0       0       0
  6614 ;;      Temps:          0       0       0       0       0       0
  6615 ;;      Totals:         0       0       1       0       0       0
  6616 ;;Total ram usage:        1 bytes
  6617 ;; Hardware stack levels used: 1
  6618 ;; Hardware stack levels required when called: 5
  6619 ;; This function calls:
  6620 ;;		Nothing
  6621 ;; This function is called by:
  6622 ;;		_main
  6623 ;; This function uses a non-reentrant model
  6624 ;;
  6625                           
  6626     0B74                     _TMR0_ReadTimer:	
  6627                           ;psect for function _TMR0_ReadTimer
  6628                           
  6629                           
  6630                           ;mcc_generated_files/tmr0.c: 82:     uint8_t readVal;;mcc_generated_files/tmr0.c: 84:   
      +                            readVal = TMR0;
  6631                           
  6632                           ;incstack = 0
  6633                           ; Regs used in _TMR0_ReadTimer: [wreg]
  6634     0B74  0020               	movlb	0	; select bank0
  6635     0B75  0815               	movf	21,w	;volatile
  6636     0B76  0021               	movlb	1	; select bank1
  6637     0B77  00CD               	movwf	TMR0_ReadTimer@readVal^(0+128)
  6638                           
  6639                           ;mcc_generated_files/tmr0.c: 86:     return readVal;
  6640     0B78  084D               	movf	TMR0_ReadTimer@readVal^(0+128),w
  6641     0B79  0008               	return
  6642     0B7A                     __end_of_TMR0_ReadTimer:
  6643                           
  6644                           	psect	text22
  6645     0D6D                     __ptext22:	
  6646 ;; *************** function _SYSTEM_Initialize *****************
  6647 ;; Defined at:
  6648 ;;		line 50 in file "mcc_generated_files/mcc.c"
  6649 ;; Parameters:    Size  Location     Type
  6650 ;;		None
  6651 ;; Auto vars:     Size  Location     Type
  6652 ;;		None
  6653 ;; Return value:  Size  Location     Type
  6654 ;;                  1    wreg      void 
  6655 ;; Registers used:
  6656 ;;		wreg, status,2, status,0, pclath, cstack
  6657 ;; Tracked objects:
  6658 ;;		On entry : B1F/0
  6659 ;;		On exit  : 1F/1
  6660 ;;		Unchanged: 0/0
  6661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6662 ;;      Params:         0       0       0       0       0       0
  6663 ;;      Locals:         0       0       0       0       0       0
  6664 ;;      Temps:          0       0       0       0       0       0
  6665 ;;      Totals:         0       0       0       0       0       0
  6666 ;;Total ram usage:        0 bytes
  6667 ;; Hardware stack levels used: 1
  6668 ;; Hardware stack levels required when called: 7
  6669 ;; This function calls:
  6670 ;;		_ADC_Initialize
  6671 ;;		_CMP1_Initialize
  6672 ;;		_DAC_Initialize
  6673 ;;		_EPWM1_Initialize
  6674 ;;		_EUSART_Initialize
  6675 ;;		_FVR_Initialize
  6676 ;;		_OSCILLATOR_Initialize
  6677 ;;		_PIN_MANAGER_Initialize
  6678 ;;		_TMR0_Initialize
  6679 ;;		_TMR1_Initialize
  6680 ;;		_TMR2_Initialize
  6681 ;;		_TMR4_Initialize
  6682 ;;		_TMR6_Initialize
  6683 ;;		_WDT_Initialize
  6684 ;; This function is called by:
  6685 ;;		_main
  6686 ;; This function uses a non-reentrant model
  6687 ;;
  6688                           
  6689     0D6D                     _SYSTEM_Initialize:	
  6690                           ;psect for function _SYSTEM_Initialize
  6691                           
  6692                           
  6693                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  6694                           
  6695                           ;incstack = 0
  6696                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6697     0D6D  318C  244D  318D   	fcall	_PIN_MANAGER_Initialize
  6698                           
  6699                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  6700     0D70  318B  2392  318D   	fcall	_OSCILLATOR_Initialize
  6701                           
  6702                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  6703     0D73  318B  2357  318D   	fcall	_WDT_Initialize
  6704                           
  6705                           ;mcc_generated_files/mcc.c: 56:     DAC_Initialize();
  6706     0D76  318B  236E  318D   	fcall	_DAC_Initialize
  6707                           
  6708                           ;mcc_generated_files/mcc.c: 57:     FVR_Initialize();
  6709     0D79  318B  234E  318D   	fcall	_FVR_Initialize
  6710                           
  6711                           ;mcc_generated_files/mcc.c: 58:     TMR4_Initialize();
  6712     0D7C  318B  23E4  318D   	fcall	_TMR4_Initialize
  6713                           
  6714                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
  6715     0D7F  318B  23C9  318D   	fcall	_TMR2_Initialize
  6716                           
  6717                           ;mcc_generated_files/mcc.c: 60:     TMR0_Initialize();
  6718     0D82  318B  23DA  318D   	fcall	_TMR0_Initialize
  6719                           
  6720                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
  6721     0D85  318B  23EE  318D   	fcall	_TMR6_Initialize
  6722                           
  6723                           ;mcc_generated_files/mcc.c: 62:     CMP1_Initialize();
  6724     0D88  318B  2368  318D   	fcall	_CMP1_Initialize
  6725                           
  6726                           ;mcc_generated_files/mcc.c: 63:     ADC_Initialize();
  6727     0D8B  318B  23A1  318D   	fcall	_ADC_Initialize
  6728                           
  6729                           ;mcc_generated_files/mcc.c: 64:     EPWM1_Initialize();
  6730     0D8E  318C  240F  318D   	fcall	_EPWM1_Initialize
  6731                           
  6732                           ;mcc_generated_files/mcc.c: 65:     TMR1_Initialize();
  6733     0D91  318C  2495  318D   	fcall	_TMR1_Initialize
  6734                           
  6735                           ;mcc_generated_files/mcc.c: 66:     EUSART_Initialize();
  6736     0D94  318D  2523         	fcall	_EUSART_Initialize
  6737     0D96  0008               	return
  6738     0D97                     __end_of_SYSTEM_Initialize:
  6739                           
  6740                           	psect	text23
  6741     0B57                     __ptext23:	
  6742 ;; *************** function _WDT_Initialize *****************
  6743 ;; Defined at:
  6744 ;;		line 79 in file "mcc_generated_files/mcc.c"
  6745 ;; Parameters:    Size  Location     Type
  6746 ;;		None
  6747 ;; Auto vars:     Size  Location     Type
  6748 ;;		None
  6749 ;; Return value:  Size  Location     Type
  6750 ;;                  1    wreg      void 
  6751 ;; Registers used:
  6752 ;;		wreg
  6753 ;; Tracked objects:
  6754 ;;		On entry : B1F/2
  6755 ;;		On exit  : B1F/1
  6756 ;;		Unchanged: B00/0
  6757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6758 ;;      Params:         0       0       0       0       0       0
  6759 ;;      Locals:         0       0       0       0       0       0
  6760 ;;      Temps:          0       0       0       0       0       0
  6761 ;;      Totals:         0       0       0       0       0       0
  6762 ;;Total ram usage:        0 bytes
  6763 ;; Hardware stack levels used: 1
  6764 ;; Hardware stack levels required when called: 5
  6765 ;; This function calls:
  6766 ;;		Nothing
  6767 ;; This function is called by:
  6768 ;;		_SYSTEM_Initialize
  6769 ;; This function uses a non-reentrant model
  6770 ;;
  6771                           
  6772     0B57                     _WDT_Initialize:	
  6773                           ;psect for function _WDT_Initialize
  6774                           
  6775                           
  6776                           ;mcc_generated_files/mcc.c: 82:     WDTCON = 0x16;
  6777                           
  6778                           ;incstack = 0
  6779                           ; Regs used in _WDT_Initialize: [wreg]
  6780     0B57  3016               	movlw	22
  6781     0B58  0021               	movlb	1	; select bank1
  6782     0B59  0097               	movwf	23	;volatile
  6783     0B5A  0008               	return
  6784     0B5B                     __end_of_WDT_Initialize:
  6785                           
  6786                           	psect	text24
  6787     0BEE                     __ptext24:	
  6788 ;; *************** function _TMR6_Initialize *****************
  6789 ;; Defined at:
  6790 ;;		line 62 in file "mcc_generated_files/tmr6.c"
  6791 ;; Parameters:    Size  Location     Type
  6792 ;;		None
  6793 ;; Auto vars:     Size  Location     Type
  6794 ;;		None
  6795 ;; Return value:  Size  Location     Type
  6796 ;;                  1    wreg      void 
  6797 ;; Registers used:
  6798 ;;		wreg, status,2
  6799 ;; Tracked objects:
  6800 ;;		On entry : B1F/0
  6801 ;;		On exit  : B1F/8
  6802 ;;		Unchanged: B00/0
  6803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6804 ;;      Params:         0       0       0       0       0       0
  6805 ;;      Locals:         0       0       0       0       0       0
  6806 ;;      Temps:          0       0       0       0       0       0
  6807 ;;      Totals:         0       0       0       0       0       0
  6808 ;;Total ram usage:        0 bytes
  6809 ;; Hardware stack levels used: 1
  6810 ;; Hardware stack levels required when called: 5
  6811 ;; This function calls:
  6812 ;;		Nothing
  6813 ;; This function is called by:
  6814 ;;		_SYSTEM_Initialize
  6815 ;; This function uses a non-reentrant model
  6816 ;;
  6817                           
  6818     0BEE                     _TMR6_Initialize:	
  6819                           ;psect for function _TMR6_Initialize
  6820                           
  6821                           
  6822                           ;mcc_generated_files/tmr6.c: 67:     PR6 = 0x4A;
  6823                           
  6824                           ;incstack = 0
  6825                           ; Regs used in _TMR6_Initialize: [wreg+status,2]
  6826     0BEE  304A               	movlw	74
  6827     0BEF  0028               	movlb	8	; select bank8
  6828     0BF0  009D               	movwf	29	;volatile
  6829                           
  6830                           ;mcc_generated_files/tmr6.c: 70:     TMR6 = 0x00;
  6831     0BF1  019C               	clrf	28	;volatile
  6832                           
  6833                           ;mcc_generated_files/tmr6.c: 73:     PIR3bits.TMR6IF = 0;
  6834     0BF2  0020               	movlb	0	; select bank0
  6835     0BF3  1193               	bcf	19,3	;volatile
  6836                           
  6837                           ;mcc_generated_files/tmr6.c: 76:     T6CON = 0x4F;
  6838     0BF4  304F               	movlw	79
  6839     0BF5  0028               	movlb	8	; select bank8
  6840     0BF6  009E               	movwf	30	;volatile
  6841     0BF7  0008               	return
  6842     0BF8                     __end_of_TMR6_Initialize:
  6843                           
  6844                           	psect	text25
  6845     0BE4                     __ptext25:	
  6846 ;; *************** function _TMR4_Initialize *****************
  6847 ;; Defined at:
  6848 ;;		line 62 in file "mcc_generated_files/tmr4.c"
  6849 ;; Parameters:    Size  Location     Type
  6850 ;;		None
  6851 ;; Auto vars:     Size  Location     Type
  6852 ;;		None
  6853 ;; Return value:  Size  Location     Type
  6854 ;;                  1    wreg      void 
  6855 ;; Registers used:
  6856 ;;		wreg, status,2
  6857 ;; Tracked objects:
  6858 ;;		On entry : B1F/2
  6859 ;;		On exit  : B1F/8
  6860 ;;		Unchanged: B00/0
  6861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6862 ;;      Params:         0       0       0       0       0       0
  6863 ;;      Locals:         0       0       0       0       0       0
  6864 ;;      Temps:          0       0       0       0       0       0
  6865 ;;      Totals:         0       0       0       0       0       0
  6866 ;;Total ram usage:        0 bytes
  6867 ;; Hardware stack levels used: 1
  6868 ;; Hardware stack levels required when called: 5
  6869 ;; This function calls:
  6870 ;;		Nothing
  6871 ;; This function is called by:
  6872 ;;		_SYSTEM_Initialize
  6873 ;; This function uses a non-reentrant model
  6874 ;;
  6875                           
  6876     0BE4                     _TMR4_Initialize:	
  6877                           ;psect for function _TMR4_Initialize
  6878                           
  6879                           
  6880                           ;mcc_generated_files/tmr4.c: 67:     PR4 = 0xF9;
  6881                           
  6882                           ;incstack = 0
  6883                           ; Regs used in _TMR4_Initialize: [wreg+status,2]
  6884     0BE4  30F9               	movlw	249
  6885     0BE5  0028               	movlb	8	; select bank8
  6886     0BE6  0096               	movwf	22	;volatile
  6887                           
  6888                           ;mcc_generated_files/tmr4.c: 70:     TMR4 = 0x00;
  6889     0BE7  0195               	clrf	21	;volatile
  6890                           
  6891                           ;mcc_generated_files/tmr4.c: 73:     PIR3bits.TMR4IF = 0;
  6892     0BE8  0020               	movlb	0	; select bank0
  6893     0BE9  1093               	bcf	19,1	;volatile
  6894                           
  6895                           ;mcc_generated_files/tmr4.c: 76:     T4CON = 0x4F;
  6896     0BEA  304F               	movlw	79
  6897     0BEB  0028               	movlb	8	; select bank8
  6898     0BEC  0097               	movwf	23	;volatile
  6899     0BED  0008               	return
  6900     0BEE                     __end_of_TMR4_Initialize:
  6901                           
  6902                           	psect	text26
  6903     0BC9                     __ptext26:	
  6904 ;; *************** function _TMR2_Initialize *****************
  6905 ;; Defined at:
  6906 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  6907 ;; Parameters:    Size  Location     Type
  6908 ;;		None
  6909 ;; Auto vars:     Size  Location     Type
  6910 ;;		None
  6911 ;; Return value:  Size  Location     Type
  6912 ;;                  1    wreg      void 
  6913 ;; Registers used:
  6914 ;;		wreg, status,2
  6915 ;; Tracked objects:
  6916 ;;		On entry : B1F/8
  6917 ;;		On exit  : B1F/0
  6918 ;;		Unchanged: B00/0
  6919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6920 ;;      Params:         0       0       0       0       0       0
  6921 ;;      Locals:         0       0       0       0       0       0
  6922 ;;      Temps:          0       0       0       0       0       0
  6923 ;;      Totals:         0       0       0       0       0       0
  6924 ;;Total ram usage:        0 bytes
  6925 ;; Hardware stack levels used: 1
  6926 ;; Hardware stack levels required when called: 5
  6927 ;; This function calls:
  6928 ;;		Nothing
  6929 ;; This function is called by:
  6930 ;;		_SYSTEM_Initialize
  6931 ;; This function uses a non-reentrant model
  6932 ;;
  6933                           
  6934     0BC9                     _TMR2_Initialize:	
  6935                           ;psect for function _TMR2_Initialize
  6936                           
  6937                           
  6938                           ;mcc_generated_files/tmr2.c: 67:     PR2 = 0xFF;
  6939                           
  6940                           ;incstack = 0
  6941                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  6942     0BC9  30FF               	movlw	255
  6943     0BCA  0020               	movlb	0	; select bank0
  6944     0BCB  009B               	movwf	27	;volatile
  6945                           
  6946                           ;mcc_generated_files/tmr2.c: 70:     TMR2 = 0x00;
  6947     0BCC  019A               	clrf	26	;volatile
  6948                           
  6949                           ;mcc_generated_files/tmr2.c: 73:     PIR1bits.TMR2IF = 0;
  6950     0BCD  1091               	bcf	17,1	;volatile
  6951                           
  6952                           ;mcc_generated_files/tmr2.c: 76:     T2CON = 0x07;
  6953     0BCE  3007               	movlw	7
  6954     0BCF  009C               	movwf	28	;volatile
  6955     0BD0  0008               	return
  6956     0BD1                     __end_of_TMR2_Initialize:
  6957                           
  6958                           	psect	text27
  6959     0C95                     __ptext27:	
  6960 ;; *************** function _TMR1_Initialize *****************
  6961 ;; Defined at:
  6962 ;;		line 65 in file "mcc_generated_files/tmr1.c"
  6963 ;; Parameters:    Size  Location     Type
  6964 ;;		None
  6965 ;; Auto vars:     Size  Location     Type
  6966 ;;		None
  6967 ;; Return value:  Size  Location     Type
  6968 ;;                  1    wreg      void 
  6969 ;; Registers used:
  6970 ;;		wreg, status,2, status,0, pclath, cstack
  6971 ;; Tracked objects:
  6972 ;;		On entry : 1F/5
  6973 ;;		On exit  : 1F/0
  6974 ;;		Unchanged: 0/0
  6975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6976 ;;      Params:         0       0       0       0       0       0
  6977 ;;      Locals:         0       0       0       0       0       0
  6978 ;;      Temps:          0       0       0       0       0       0
  6979 ;;      Totals:         0       0       0       0       0       0
  6980 ;;Total ram usage:        0 bytes
  6981 ;; Hardware stack levels used: 1
  6982 ;; Hardware stack levels required when called: 6
  6983 ;; This function calls:
  6984 ;;		_TMR1_SetGateInterruptHandler
  6985 ;; This function is called by:
  6986 ;;		_SYSTEM_Initialize
  6987 ;; This function uses a non-reentrant model
  6988 ;;
  6989                           
  6990     0C95                     _TMR1_Initialize:	
  6991                           ;psect for function _TMR1_Initialize
  6992                           
  6993                           
  6994                           ;mcc_generated_files/tmr1.c: 70:     T1GCON = 0xC0;
  6995                           
  6996                           ;incstack = 0
  6997                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6998     0C95  30C0               	movlw	192
  6999     0C96  0020               	movlb	0	; select bank0
  7000     0C97  0099               	movwf	25	;volatile
  7001                           
  7002                           ;mcc_generated_files/tmr1.c: 73:     TMR1H = 0x00;
  7003     0C98  0197               	clrf	23	;volatile
  7004                           
  7005                           ;mcc_generated_files/tmr1.c: 76:     TMR1L = 0x00;
  7006     0C99  0196               	clrf	22	;volatile
  7007                           
  7008                           ;mcc_generated_files/tmr1.c: 79:     PIR1bits.TMR1IF = 0;
  7009     0C9A  1011               	bcf	17,0	;volatile
  7010                           
  7011                           ;mcc_generated_files/tmr1.c: 82:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  7012     0C9B  0817               	movf	23,w	;volatile
  7013     0C9C  0021               	movlb	1	; select bank1
  7014     0C9D  00C4               	movwf	(_timer1ReloadVal+1)^(0+128)	;volatile
  7015     0C9E  0020               	movlb	0	; select bank0
  7016     0C9F  0816               	movf	22,w	;volatile
  7017     0CA0  0021               	movlb	1	; select bank1
  7018     0CA1  00C3               	movwf	_timer1ReloadVal^(0+128)	;volatile
  7019                           
  7020                           ;mcc_generated_files/tmr1.c: 85:     PIR1bits.TMR1GIF = 0;
  7021     0CA2  0020               	movlb	0	; select bank0
  7022     0CA3  1391               	bcf	17,7	;volatile
  7023                           
  7024                           ;mcc_generated_files/tmr1.c: 88:     PIE1bits.TMR1GIE = 1;
  7025     0CA4  0021               	movlb	1	; select bank1
  7026     0CA5  1791               	bsf	17,7	;volatile
  7027                           
  7028                           ;mcc_generated_files/tmr1.c: 91:     TMR1_SetGateInterruptHandler(TMR1_DefaultGateInterr
      +                          uptHandler);
  7029     0CA6  30FE               	movlw	low _TMR1_DefaultGateInterruptHandler
  7030     0CA7  00CD               	movwf	TMR1_SetGateInterruptHandler@InterruptHandler^(0+128)
  7031     0CA8  3007               	movlw	high _TMR1_DefaultGateInterruptHandler
  7032     0CA9  00CE               	movwf	(TMR1_SetGateInterruptHandler@InterruptHandler^(0+128)+1)
  7033     0CAA  318B  23C1         	fcall	_TMR1_SetGateInterruptHandler
  7034                           
  7035                           ;mcc_generated_files/tmr1.c: 94:     T1CON = 0x01;
  7036     0CAC  3001               	movlw	1
  7037     0CAD  0098               	movwf	24	;volatile
  7038     0CAE  0008               	return
  7039     0CAF                     __end_of_TMR1_Initialize:
  7040                           
  7041                           	psect	text28
  7042     0BC1                     __ptext28:	
  7043 ;; *************** function _TMR1_SetGateInterruptHandler *****************
  7044 ;; Defined at:
  7045 ;;		line 177 in file "mcc_generated_files/tmr1.c"
  7046 ;; Parameters:    Size  Location     Type
  7047 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  7048 ;;		 -> mede_height(1), TMR1_DefaultGateInterruptHandler(1), 
  7049 ;; Auto vars:     Size  Location     Type
  7050 ;;		None
  7051 ;; Return value:  Size  Location     Type
  7052 ;;                  1    wreg      void 
  7053 ;; Registers used:
  7054 ;;		wreg
  7055 ;; Tracked objects:
  7056 ;;		On entry : 1F/1
  7057 ;;		On exit  : 1F/0
  7058 ;;		Unchanged: 0/0
  7059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7060 ;;      Params:         0       0       2       0       0       0
  7061 ;;      Locals:         0       0       0       0       0       0
  7062 ;;      Temps:          0       0       0       0       0       0
  7063 ;;      Totals:         0       0       2       0       0       0
  7064 ;;Total ram usage:        2 bytes
  7065 ;; Hardware stack levels used: 1
  7066 ;; Hardware stack levels required when called: 5
  7067 ;; This function calls:
  7068 ;;		Nothing
  7069 ;; This function is called by:
  7070 ;;		_TMR1_Initialize
  7071 ;;		_main
  7072 ;; This function uses a non-reentrant model
  7073 ;;
  7074                           
  7075     0BC1                     _TMR1_SetGateInterruptHandler:	
  7076                           ;psect for function _TMR1_SetGateInterruptHandler
  7077                           
  7078                           
  7079                           ;mcc_generated_files/tmr1.c: 178:     TMR1_GateInterruptHandler = InterruptHandler;
  7080                           
  7081                           ;incstack = 0
  7082                           ; Regs used in _TMR1_SetGateInterruptHandler: [wreg]
  7083     0BC1  084E               	movf	(TMR1_SetGateInterruptHandler@InterruptHandler+1)^(0+128),w
  7084     0BC2  0020               	movlb	0	; select bank0
  7085     0BC3  00EF               	movwf	_TMR1_GateInterruptHandler+1
  7086     0BC4  0021               	movlb	1	; select bank1
  7087     0BC5  084D               	movf	TMR1_SetGateInterruptHandler@InterruptHandler^(0+128),w
  7088     0BC6  0020               	movlb	0	; select bank0
  7089     0BC7  00EE               	movwf	_TMR1_GateInterruptHandler
  7090     0BC8  0008               	return
  7091     0BC9                     __end_of_TMR1_SetGateInterruptHandler:
  7092                           
  7093                           	psect	text29
  7094     0BDA                     __ptext29:	
  7095 ;; *************** function _TMR0_Initialize *****************
  7096 ;; Defined at:
  7097 ;;		line 63 in file "mcc_generated_files/tmr0.c"
  7098 ;; Parameters:    Size  Location     Type
  7099 ;;		None
  7100 ;; Auto vars:     Size  Location     Type
  7101 ;;		None
  7102 ;; Return value:  Size  Location     Type
  7103 ;;                  1    wreg      void 
  7104 ;; Registers used:
  7105 ;;		wreg, status,2
  7106 ;; Tracked objects:
  7107 ;;		On entry : B1F/0
  7108 ;;		On exit  : B1F/0
  7109 ;;		Unchanged: B00/0
  7110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7111 ;;      Params:         0       0       0       0       0       0
  7112 ;;      Locals:         0       0       0       0       0       0
  7113 ;;      Temps:          0       0       0       0       0       0
  7114 ;;      Totals:         0       0       0       0       0       0
  7115 ;;Total ram usage:        0 bytes
  7116 ;; Hardware stack levels used: 1
  7117 ;; Hardware stack levels required when called: 5
  7118 ;; This function calls:
  7119 ;;		Nothing
  7120 ;; This function is called by:
  7121 ;;		_SYSTEM_Initialize
  7122 ;; This function uses a non-reentrant model
  7123 ;;
  7124                           
  7125     0BDA                     _TMR0_Initialize:	
  7126                           ;psect for function _TMR0_Initialize
  7127                           
  7128                           
  7129                           ;mcc_generated_files/tmr0.c: 68:     OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | (0xD7 
      +                          & 0x3F));
  7130                           
  7131                           ;incstack = 0
  7132                           ; Regs used in _TMR0_Initialize: [wreg+status,2]
  7133     0BDA  0021               	movlb	1	; select bank1
  7134     0BDB  0815               	movf	21,w	;volatile
  7135     0BDC  39C0               	andlw	192
  7136     0BDD  3817               	iorlw	23
  7137     0BDE  0095               	movwf	21	;volatile
  7138                           
  7139                           ;mcc_generated_files/tmr0.c: 71:     TMR0 = 0x00;
  7140     0BDF  0020               	movlb	0	; select bank0
  7141     0BE0  0195               	clrf	21	;volatile
  7142                           
  7143                           ;mcc_generated_files/tmr0.c: 74:     timer0ReloadVal= 0;
  7144     0BE1  01E9               	clrf	_timer0ReloadVal	;volatile
  7145                           
  7146                           ;mcc_generated_files/tmr0.c: 77:     INTCONbits.TMR0IF = 0;
  7147     0BE2  110B               	bcf	11,2	;volatile
  7148     0BE3  0008               	return
  7149     0BE4                     __end_of_TMR0_Initialize:
  7150                           
  7151                           	psect	text30
  7152     0C4D                     __ptext30:	
  7153 ;; *************** function _PIN_MANAGER_Initialize *****************
  7154 ;; Defined at:
  7155 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  7156 ;; Parameters:    Size  Location     Type
  7157 ;;		None
  7158 ;; Auto vars:     Size  Location     Type
  7159 ;;		None
  7160 ;; Return value:  Size  Location     Type
  7161 ;;                  1    wreg      void 
  7162 ;; Registers used:
  7163 ;;		wreg, status,2
  7164 ;; Tracked objects:
  7165 ;;		On entry : B1F/0
  7166 ;;		On exit  : B1F/2
  7167 ;;		Unchanged: B00/0
  7168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7169 ;;      Params:         0       0       0       0       0       0
  7170 ;;      Locals:         0       0       0       0       0       0
  7171 ;;      Temps:          0       0       0       0       0       0
  7172 ;;      Totals:         0       0       0       0       0       0
  7173 ;;Total ram usage:        0 bytes
  7174 ;; Hardware stack levels used: 1
  7175 ;; Hardware stack levels required when called: 5
  7176 ;; This function calls:
  7177 ;;		Nothing
  7178 ;; This function is called by:
  7179 ;;		_SYSTEM_Initialize
  7180 ;; This function uses a non-reentrant model
  7181 ;;
  7182                           
  7183     0C4D                     _PIN_MANAGER_Initialize:	
  7184                           ;psect for function _PIN_MANAGER_Initialize
  7185                           
  7186                           
  7187                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  7188                           
  7189                           ;incstack = 0
  7190                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  7191     0C4D  0022               	movlb	2	; select bank2
  7192     0C4E  018C               	clrf	12	;volatile
  7193                           
  7194                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  7195     0C4F  018D               	clrf	13	;volatile
  7196                           
  7197                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0x21;
  7198     0C50  3021               	movlw	33
  7199     0C51  0021               	movlb	1	; select bank1
  7200     0C52  008C               	movwf	12	;volatile
  7201                           
  7202                           ;mcc_generated_files/pin_manager.c: 67:     TRISB = 0xF7;
  7203     0C53  30F7               	movlw	247
  7204     0C54  008D               	movwf	13	;volatile
  7205                           
  7206                           ;mcc_generated_files/pin_manager.c: 72:     ANSELB = 0xF0;
  7207     0C55  30F0               	movlw	240
  7208     0C56  0023               	movlb	3	; select bank3
  7209     0C57  008D               	movwf	13	;volatile
  7210                           
  7211                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x01;
  7212     0C58  3001               	movlw	1
  7213     0C59  008C               	movwf	12	;volatile
  7214                           
  7215                           ;mcc_generated_files/pin_manager.c: 78:     WPUB = 0x00;
  7216     0C5A  0024               	movlb	4	; select bank4
  7217     0C5B  018D               	clrf	13	;volatile
  7218                           
  7219                           ;mcc_generated_files/pin_manager.c: 79:     WPUA = 0x00;
  7220     0C5C  018C               	clrf	12	;volatile
  7221                           
  7222                           ;mcc_generated_files/pin_manager.c: 80:     OPTION_REGbits.nWPUEN = 1;
  7223     0C5D  0021               	movlb	1	; select bank1
  7224     0C5E  1795               	bsf	21,7	;volatile
  7225                           
  7226                           ;mcc_generated_files/pin_manager.c: 86:     APFCON0 = 0x00;
  7227     0C5F  0022               	movlb	2	; select bank2
  7228     0C60  019D               	clrf	29	;volatile
  7229                           
  7230                           ;mcc_generated_files/pin_manager.c: 87:     APFCON1 = 0x00;
  7231     0C61  019E               	clrf	30	;volatile
  7232                           
  7233                           ;mcc_generated_files/pin_manager.c: 94:     INTCONbits.IOCIE = 1;
  7234     0C62  158B               	bsf	11,3	;volatile
  7235     0C63  0008               	return
  7236     0C64                     __end_of_PIN_MANAGER_Initialize:
  7237                           
  7238                           	psect	text31
  7239     0B92                     __ptext31:	
  7240 ;; *************** function _OSCILLATOR_Initialize *****************
  7241 ;; Defined at:
  7242 ;;		line 69 in file "mcc_generated_files/mcc.c"
  7243 ;; Parameters:    Size  Location     Type
  7244 ;;		None
  7245 ;; Auto vars:     Size  Location     Type
  7246 ;;		None
  7247 ;; Return value:  Size  Location     Type
  7248 ;;                  1    wreg      void 
  7249 ;; Registers used:
  7250 ;;		wreg, status,2
  7251 ;; Tracked objects:
  7252 ;;		On entry : B1F/2
  7253 ;;		On exit  : B1F/2
  7254 ;;		Unchanged: B00/0
  7255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7256 ;;      Params:         0       0       0       0       0       0
  7257 ;;      Locals:         0       0       0       0       0       0
  7258 ;;      Temps:          0       0       0       0       0       0
  7259 ;;      Totals:         0       0       0       0       0       0
  7260 ;;Total ram usage:        0 bytes
  7261 ;; Hardware stack levels used: 1
  7262 ;; Hardware stack levels required when called: 5
  7263 ;; This function calls:
  7264 ;;		Nothing
  7265 ;; This function is called by:
  7266 ;;		_SYSTEM_Initialize
  7267 ;; This function uses a non-reentrant model
  7268 ;;
  7269                           
  7270     0B92                     _OSCILLATOR_Initialize:	
  7271                           ;psect for function _OSCILLATOR_Initialize
  7272                           
  7273                           
  7274                           ;mcc_generated_files/mcc.c: 72:     OSCCON = 0x78;
  7275                           
  7276                           ;incstack = 0
  7277                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  7278     0B92  3078               	movlw	120
  7279     0B93  0021               	movlb	1	; select bank1
  7280     0B94  0099               	movwf	25	;volatile
  7281                           
  7282                           ;mcc_generated_files/mcc.c: 74:     OSCTUNE = 0x00;
  7283     0B95  0198               	clrf	24	;volatile
  7284                           
  7285                           ;mcc_generated_files/mcc.c: 76:     BORCON = 0x00;
  7286     0B96  0022               	movlb	2	; select bank2
  7287     0B97  0196               	clrf	22	;volatile
  7288     0B98  0008               	return
  7289     0B99                     __end_of_OSCILLATOR_Initialize:
  7290                           
  7291                           	psect	text32
  7292     0B4E                     __ptext32:	
  7293 ;; *************** function _FVR_Initialize *****************
  7294 ;; Defined at:
  7295 ;;		line 58 in file "mcc_generated_files/fvr.c"
  7296 ;; Parameters:    Size  Location     Type
  7297 ;;		None
  7298 ;; Auto vars:     Size  Location     Type
  7299 ;;		None
  7300 ;; Return value:  Size  Location     Type
  7301 ;;                  1    wreg      void 
  7302 ;; Registers used:
  7303 ;;		wreg
  7304 ;; Tracked objects:
  7305 ;;		On entry : B1F/2
  7306 ;;		On exit  : B1F/2
  7307 ;;		Unchanged: B00/0
  7308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7309 ;;      Params:         0       0       0       0       0       0
  7310 ;;      Locals:         0       0       0       0       0       0
  7311 ;;      Temps:          0       0       0       0       0       0
  7312 ;;      Totals:         0       0       0       0       0       0
  7313 ;;Total ram usage:        0 bytes
  7314 ;; Hardware stack levels used: 1
  7315 ;; Hardware stack levels required when called: 5
  7316 ;; This function calls:
  7317 ;;		Nothing
  7318 ;; This function is called by:
  7319 ;;		_SYSTEM_Initialize
  7320 ;; This function uses a non-reentrant model
  7321 ;;
  7322                           
  7323     0B4E                     _FVR_Initialize:	
  7324                           ;psect for function _FVR_Initialize
  7325                           
  7326                           
  7327                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0x85;
  7328                           
  7329                           ;incstack = 0
  7330                           ; Regs used in _FVR_Initialize: [wreg]
  7331     0B4E  3085               	movlw	133
  7332     0B4F  0097               	movwf	23	;volatile
  7333     0B50  0008               	return
  7334     0B51                     __end_of_FVR_Initialize:
  7335                           
  7336                           	psect	text33
  7337     0D23                     __ptext33:	
  7338 ;; *************** function _EUSART_Initialize *****************
  7339 ;; Defined at:
  7340 ;;		line 66 in file "mcc_generated_files/eusart.c"
  7341 ;; Parameters:    Size  Location     Type
  7342 ;;		None
  7343 ;; Auto vars:     Size  Location     Type
  7344 ;;		None
  7345 ;; Return value:  Size  Location     Type
  7346 ;;                  1    wreg      void 
  7347 ;; Registers used:
  7348 ;;		wreg, status,2, status,0, pclath, cstack
  7349 ;; Tracked objects:
  7350 ;;		On entry : 1F/0
  7351 ;;		On exit  : 1F/1
  7352 ;;		Unchanged: 0/0
  7353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7354 ;;      Params:         0       0       0       0       0       0
  7355 ;;      Locals:         0       0       0       0       0       0
  7356 ;;      Temps:          0       0       0       0       0       0
  7357 ;;      Totals:         0       0       0       0       0       0
  7358 ;;Total ram usage:        0 bytes
  7359 ;; Hardware stack levels used: 1
  7360 ;; Hardware stack levels required when called: 6
  7361 ;; This function calls:
  7362 ;;		_EUSART_SetErrorHandler
  7363 ;;		_EUSART_SetFramingErrorHandler
  7364 ;;		_EUSART_SetOverrunErrorHandler
  7365 ;; This function is called by:
  7366 ;;		_SYSTEM_Initialize
  7367 ;; This function uses a non-reentrant model
  7368 ;;
  7369                           
  7370     0D23                     _EUSART_Initialize:	
  7371                           ;psect for function _EUSART_Initialize
  7372                           
  7373                           
  7374                           ;mcc_generated_files/eusart.c: 71:     BAUDCON = 0x08;
  7375                           
  7376                           ;incstack = 0
  7377                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7378     0D23  3008               	movlw	8
  7379     0D24  0023               	movlb	3	; select bank3
  7380     0D25  009F               	movwf	31	;volatile
  7381                           
  7382                           ;mcc_generated_files/eusart.c: 74:     RCSTA = 0x90;
  7383     0D26  3090               	movlw	144
  7384     0D27  009D               	movwf	29	;volatile
  7385                           
  7386                           ;mcc_generated_files/eusart.c: 77:     TXSTA = 0x24;
  7387     0D28  3024               	movlw	36
  7388     0D29  009E               	movwf	30	;volatile
  7389                           
  7390                           ;mcc_generated_files/eusart.c: 80:     SPBRGL = 0x22;
  7391     0D2A  3022               	movlw	34
  7392     0D2B  009B               	movwf	27	;volatile
  7393                           
  7394                           ;mcc_generated_files/eusart.c: 83:     SPBRGH = 0x00;
  7395     0D2C  019C               	clrf	28	;volatile
  7396                           
  7397                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  7398     0D2D  3000               	movlw	0
  7399     0D2E  0021               	movlb	1	; select bank1
  7400     0D2F  00CD               	movwf	EUSART_SetFramingErrorHandler@interruptHandler^(0+128)
  7401     0D30  3000               	movlw	0
  7402     0D31  00CE               	movwf	(EUSART_SetFramingErrorHandler@interruptHandler^(0+128)+1)
  7403     0D32  318B  23B1  318D   	fcall	_EUSART_SetFramingErrorHandler
  7404                           
  7405                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  7406     0D35  3000               	movlw	0
  7407     0D36  0021               	movlb	1	; select bank1
  7408     0D37  00CD               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler^(0+128)
  7409     0D38  3000               	movlw	0
  7410     0D39  00CE               	movwf	(EUSART_SetOverrunErrorHandler@interruptHandler^(0+128)+1)
  7411     0D3A  318B  23B9  318D   	fcall	_EUSART_SetOverrunErrorHandler
  7412                           
  7413                           ;mcc_generated_files/eusart.c: 88:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  7414     0D3D  3000               	movlw	0
  7415     0D3E  0021               	movlb	1	; select bank1
  7416     0D3F  00CD               	movwf	EUSART_SetErrorHandler@interruptHandler^(0+128)
  7417     0D40  3000               	movlw	0
  7418     0D41  00CE               	movwf	(EUSART_SetErrorHandler@interruptHandler^(0+128)+1)
  7419     0D42  318B  23A9         	fcall	_EUSART_SetErrorHandler
  7420                           
  7421                           ;mcc_generated_files/eusart.c: 90:     eusartRxLastError.status = 0;
  7422     0D44  0021               	movlb	1	; select bank1
  7423     0D45  01CC               	clrf	_eusartRxLastError^(0+128)	;volatile
  7424     0D46  0008               	return
  7425     0D47                     __end_of_EUSART_Initialize:
  7426                           
  7427                           	psect	text34
  7428     0BB9                     __ptext34:	
  7429 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  7430 ;; Defined at:
  7431 ;;		line 161 in file "mcc_generated_files/eusart.c"
  7432 ;; Parameters:    Size  Location     Type
  7433 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  7434 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  7435 ;; Auto vars:     Size  Location     Type
  7436 ;;		None
  7437 ;; Return value:  Size  Location     Type
  7438 ;;                  1    wreg      void 
  7439 ;; Registers used:
  7440 ;;		wreg
  7441 ;; Tracked objects:
  7442 ;;		On entry : 1F/1
  7443 ;;		On exit  : 1F/2
  7444 ;;		Unchanged: 0/0
  7445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7446 ;;      Params:         0       0       2       0       0       0
  7447 ;;      Locals:         0       0       0       0       0       0
  7448 ;;      Temps:          0       0       0       0       0       0
  7449 ;;      Totals:         0       0       2       0       0       0
  7450 ;;Total ram usage:        2 bytes
  7451 ;; Hardware stack levels used: 1
  7452 ;; Hardware stack levels required when called: 5
  7453 ;; This function calls:
  7454 ;;		Nothing
  7455 ;; This function is called by:
  7456 ;;		_EUSART_Initialize
  7457 ;; This function uses a non-reentrant model
  7458 ;;
  7459                           
  7460     0BB9                     _EUSART_SetOverrunErrorHandler:	
  7461                           ;psect for function _EUSART_SetOverrunErrorHandler
  7462                           
  7463                           
  7464                           ;mcc_generated_files/eusart.c: 162:     EUSART_OverrunErrorHandler = interruptHandler;
  7465                           
  7466                           ;incstack = 0
  7467                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  7468     0BB9  084E               	movf	(EUSART_SetOverrunErrorHandler@interruptHandler+1)^(0+128),w
  7469     0BBA  0022               	movlb	2	; select bank2
  7470     0BBB  00B2               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+256)
  7471     0BBC  0021               	movlb	1	; select bank1
  7472     0BBD  084D               	movf	EUSART_SetOverrunErrorHandler@interruptHandler^(0+128),w
  7473     0BBE  0022               	movlb	2	; select bank2
  7474     0BBF  00B1               	movwf	_EUSART_OverrunErrorHandler^(0+256)
  7475     0BC0  0008               	return
  7476     0BC1                     __end_of_EUSART_SetOverrunErrorHandler:
  7477                           
  7478                           	psect	text35
  7479     0BB1                     __ptext35:	
  7480 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  7481 ;; Defined at:
  7482 ;;		line 157 in file "mcc_generated_files/eusart.c"
  7483 ;; Parameters:    Size  Location     Type
  7484 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  7485 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  7486 ;; Auto vars:     Size  Location     Type
  7487 ;;		None
  7488 ;; Return value:  Size  Location     Type
  7489 ;;                  1    wreg      void 
  7490 ;; Registers used:
  7491 ;;		wreg
  7492 ;; Tracked objects:
  7493 ;;		On entry : 1F/1
  7494 ;;		On exit  : 1F/2
  7495 ;;		Unchanged: 0/0
  7496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7497 ;;      Params:         0       0       2       0       0       0
  7498 ;;      Locals:         0       0       0       0       0       0
  7499 ;;      Temps:          0       0       0       0       0       0
  7500 ;;      Totals:         0       0       2       0       0       0
  7501 ;;Total ram usage:        2 bytes
  7502 ;; Hardware stack levels used: 1
  7503 ;; Hardware stack levels required when called: 5
  7504 ;; This function calls:
  7505 ;;		Nothing
  7506 ;; This function is called by:
  7507 ;;		_EUSART_Initialize
  7508 ;; This function uses a non-reentrant model
  7509 ;;
  7510                           
  7511     0BB1                     _EUSART_SetFramingErrorHandler:	
  7512                           ;psect for function _EUSART_SetFramingErrorHandler
  7513                           
  7514                           
  7515                           ;mcc_generated_files/eusart.c: 158:     EUSART_FramingErrorHandler = interruptHandler;
  7516                           
  7517                           ;incstack = 0
  7518                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  7519     0BB1  084E               	movf	(EUSART_SetFramingErrorHandler@interruptHandler+1)^(0+128),w
  7520     0BB2  0022               	movlb	2	; select bank2
  7521     0BB3  00B4               	movwf	(_EUSART_FramingErrorHandler+1)^(0+256)
  7522     0BB4  0021               	movlb	1	; select bank1
  7523     0BB5  084D               	movf	EUSART_SetFramingErrorHandler@interruptHandler^(0+128),w
  7524     0BB6  0022               	movlb	2	; select bank2
  7525     0BB7  00B3               	movwf	_EUSART_FramingErrorHandler^(0+256)
  7526     0BB8  0008               	return
  7527     0BB9                     __end_of_EUSART_SetFramingErrorHandler:
  7528                           
  7529                           	psect	text36
  7530     0BA9                     __ptext36:	
  7531 ;; *************** function _EUSART_SetErrorHandler *****************
  7532 ;; Defined at:
  7533 ;;		line 165 in file "mcc_generated_files/eusart.c"
  7534 ;; Parameters:    Size  Location     Type
  7535 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  7536 ;;		 -> EUSART_DefaultErrorHandler(1), 
  7537 ;; Auto vars:     Size  Location     Type
  7538 ;;		None
  7539 ;; Return value:  Size  Location     Type
  7540 ;;                  1    wreg      void 
  7541 ;; Registers used:
  7542 ;;		wreg
  7543 ;; Tracked objects:
  7544 ;;		On entry : 1F/1
  7545 ;;		On exit  : 1F/2
  7546 ;;		Unchanged: 0/0
  7547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7548 ;;      Params:         0       0       2       0       0       0
  7549 ;;      Locals:         0       0       0       0       0       0
  7550 ;;      Temps:          0       0       0       0       0       0
  7551 ;;      Totals:         0       0       2       0       0       0
  7552 ;;Total ram usage:        2 bytes
  7553 ;; Hardware stack levels used: 1
  7554 ;; Hardware stack levels required when called: 5
  7555 ;; This function calls:
  7556 ;;		Nothing
  7557 ;; This function is called by:
  7558 ;;		_EUSART_Initialize
  7559 ;; This function uses a non-reentrant model
  7560 ;;
  7561                           
  7562     0BA9                     _EUSART_SetErrorHandler:	
  7563                           ;psect for function _EUSART_SetErrorHandler
  7564                           
  7565                           
  7566                           ;mcc_generated_files/eusart.c: 166:     EUSART_ErrorHandler = interruptHandler;
  7567                           
  7568                           ;incstack = 0
  7569                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  7570     0BA9  084E               	movf	(EUSART_SetErrorHandler@interruptHandler+1)^(0+128),w
  7571     0BAA  0022               	movlb	2	; select bank2
  7572     0BAB  00B0               	movwf	(_EUSART_ErrorHandler+1)^(0+256)
  7573     0BAC  0021               	movlb	1	; select bank1
  7574     0BAD  084D               	movf	EUSART_SetErrorHandler@interruptHandler^(0+128),w
  7575     0BAE  0022               	movlb	2	; select bank2
  7576     0BAF  00AF               	movwf	_EUSART_ErrorHandler^(0+256)
  7577     0BB0  0008               	return
  7578     0BB1                     __end_of_EUSART_SetErrorHandler:
  7579                           
  7580                           	psect	text37
  7581     0C0F                     __ptext37:	
  7582 ;; *************** function _EPWM1_Initialize *****************
  7583 ;; Defined at:
  7584 ;;		line 64 in file "mcc_generated_files/epwm1.c"
  7585 ;; Parameters:    Size  Location     Type
  7586 ;;		None
  7587 ;; Auto vars:     Size  Location     Type
  7588 ;;		None
  7589 ;; Return value:  Size  Location     Type
  7590 ;;                  1    wreg      void 
  7591 ;; Registers used:
  7592 ;;		wreg, status,2, status,0
  7593 ;; Tracked objects:
  7594 ;;		On entry : 1F/1
  7595 ;;		On exit  : 1F/5
  7596 ;;		Unchanged: 0/0
  7597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7598 ;;      Params:         0       0       0       0       0       0
  7599 ;;      Locals:         0       0       0       0       0       0
  7600 ;;      Temps:          0       0       0       0       0       0
  7601 ;;      Totals:         0       0       0       0       0       0
  7602 ;;Total ram usage:        0 bytes
  7603 ;; Hardware stack levels used: 1
  7604 ;; Hardware stack levels required when called: 5
  7605 ;; This function calls:
  7606 ;;		Nothing
  7607 ;; This function is called by:
  7608 ;;		_SYSTEM_Initialize
  7609 ;; This function uses a non-reentrant model
  7610 ;;
  7611                           
  7612     0C0F                     _EPWM1_Initialize:	
  7613                           ;psect for function _EPWM1_Initialize
  7614                           
  7615                           
  7616                           ;mcc_generated_files/epwm1.c: 69:  CCP1CON = 0x3C;
  7617                           
  7618                           ;incstack = 0
  7619                           ; Regs used in _EPWM1_Initialize: [wreg+status,2+status,0]
  7620     0C0F  303C               	movlw	60
  7621     0C10  0025               	movlb	5	; select bank5
  7622     0C11  0093               	movwf	19	;volatile
  7623                           
  7624                           ;mcc_generated_files/epwm1.c: 72:  ECCP1AS = 0x00;
  7625     0C12  0195               	clrf	21	;volatile
  7626                           
  7627                           ;mcc_generated_files/epwm1.c: 75:  PWM1CON = 0x80;
  7628     0C13  3080               	movlw	128
  7629     0C14  0094               	movwf	20	;volatile
  7630                           
  7631                           ;mcc_generated_files/epwm1.c: 78:  PSTR1CON = 0x01;
  7632     0C15  3001               	movlw	1
  7633     0C16  0096               	movwf	22	;volatile
  7634                           
  7635                           ;mcc_generated_files/epwm1.c: 81:  CCPR1H = 0x00;
  7636     0C17  0192               	clrf	18	;volatile
  7637                           
  7638                           ;mcc_generated_files/epwm1.c: 84:  CCPR1L = 0x7F;
  7639     0C18  307F               	movlw	127
  7640     0C19  0091               	movwf	17	;volatile
  7641                           
  7642                           ;mcc_generated_files/epwm1.c: 87:  CCPTMRS0bits.C1TSEL = 0x0;
  7643     0C1A  30FC               	movlw	-4
  7644     0C1B  059E               	andwf	30,f	;volatile
  7645     0C1C  0008               	return
  7646     0C1D                     __end_of_EPWM1_Initialize:
  7647                           
  7648                           	psect	text38
  7649     0B6E                     __ptext38:	
  7650 ;; *************** function _DAC_Initialize *****************
  7651 ;; Defined at:
  7652 ;;		line 58 in file "mcc_generated_files/dac.c"
  7653 ;; Parameters:    Size  Location     Type
  7654 ;;		None
  7655 ;; Auto vars:     Size  Location     Type
  7656 ;;		None
  7657 ;; Return value:  Size  Location     Type
  7658 ;;                  1    wreg      void 
  7659 ;; Registers used:
  7660 ;;		wreg
  7661 ;; Tracked objects:
  7662 ;;		On entry : B1F/1
  7663 ;;		On exit  : B1F/2
  7664 ;;		Unchanged: B00/0
  7665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7666 ;;      Params:         0       0       0       0       0       0
  7667 ;;      Locals:         0       0       0       0       0       0
  7668 ;;      Temps:          0       0       0       0       0       0
  7669 ;;      Totals:         0       0       0       0       0       0
  7670 ;;Total ram usage:        0 bytes
  7671 ;; Hardware stack levels used: 1
  7672 ;; Hardware stack levels required when called: 5
  7673 ;; This function calls:
  7674 ;;		Nothing
  7675 ;; This function is called by:
  7676 ;;		_SYSTEM_Initialize
  7677 ;; This function uses a non-reentrant model
  7678 ;;
  7679                           
  7680     0B6E                     _DAC_Initialize:	
  7681                           ;psect for function _DAC_Initialize
  7682                           
  7683                           
  7684                           ;mcc_generated_files/dac.c: 61:     DACCON0 = 0x80;
  7685                           
  7686                           ;incstack = 0
  7687                           ; Regs used in _DAC_Initialize: [wreg]
  7688     0B6E  3080               	movlw	128
  7689     0B6F  0022               	movlb	2	; select bank2
  7690     0B70  0098               	movwf	24	;volatile
  7691                           
  7692                           ;mcc_generated_files/dac.c: 63:     DACCON1 = 0x06;
  7693     0B71  3006               	movlw	6
  7694     0B72  0099               	movwf	25	;volatile
  7695     0B73  0008               	return
  7696     0B74                     __end_of_DAC_Initialize:
  7697                           
  7698                           	psect	text39
  7699     0B68                     __ptext39:	
  7700 ;; *************** function _CMP1_Initialize *****************
  7701 ;; Defined at:
  7702 ;;		line 58 in file "mcc_generated_files/cmp1.c"
  7703 ;; Parameters:    Size  Location     Type
  7704 ;;		None
  7705 ;; Auto vars:     Size  Location     Type
  7706 ;;		None
  7707 ;; Return value:  Size  Location     Type
  7708 ;;                  1    wreg      void 
  7709 ;; Registers used:
  7710 ;;		wreg
  7711 ;; Tracked objects:
  7712 ;;		On entry : B1F/8
  7713 ;;		On exit  : B1F/2
  7714 ;;		Unchanged: B00/0
  7715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7716 ;;      Params:         0       0       0       0       0       0
  7717 ;;      Locals:         0       0       0       0       0       0
  7718 ;;      Temps:          0       0       0       0       0       0
  7719 ;;      Totals:         0       0       0       0       0       0
  7720 ;;Total ram usage:        0 bytes
  7721 ;; Hardware stack levels used: 1
  7722 ;; Hardware stack levels required when called: 5
  7723 ;; This function calls:
  7724 ;;		Nothing
  7725 ;; This function is called by:
  7726 ;;		_SYSTEM_Initialize
  7727 ;; This function uses a non-reentrant model
  7728 ;;
  7729                           
  7730     0B68                     _CMP1_Initialize:	
  7731                           ;psect for function _CMP1_Initialize
  7732                           
  7733                           
  7734                           ;mcc_generated_files/cmp1.c: 62:     CM1CON0 = 0x84;
  7735                           
  7736                           ;incstack = 0
  7737                           ; Regs used in _CMP1_Initialize: [wreg]
  7738     0B68  3084               	movlw	132
  7739     0B69  0022               	movlb	2	; select bank2
  7740     0B6A  0091               	movwf	17	;volatile
  7741                           
  7742                           ;mcc_generated_files/cmp1.c: 65:     CM1CON1 = 0x10;
  7743     0B6B  3010               	movlw	16
  7744     0B6C  0092               	movwf	18	;volatile
  7745     0B6D  0008               	return
  7746     0B6E                     __end_of_CMP1_Initialize:
  7747                           
  7748                           	psect	text40
  7749     0BA1                     __ptext40:	
  7750 ;; *************** function _ADC_Initialize *****************
  7751 ;; Defined at:
  7752 ;;		line 67 in file "mcc_generated_files/adc.c"
  7753 ;; Parameters:    Size  Location     Type
  7754 ;;		None
  7755 ;; Auto vars:     Size  Location     Type
  7756 ;;		None
  7757 ;; Return value:  Size  Location     Type
  7758 ;;                  1    wreg      void 
  7759 ;; Registers used:
  7760 ;;		wreg, status,2
  7761 ;; Tracked objects:
  7762 ;;		On entry : 1F/2
  7763 ;;		On exit  : 1F/1
  7764 ;;		Unchanged: 0/0
  7765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7766 ;;      Params:         0       0       0       0       0       0
  7767 ;;      Locals:         0       0       0       0       0       0
  7768 ;;      Temps:          0       0       0       0       0       0
  7769 ;;      Totals:         0       0       0       0       0       0
  7770 ;;Total ram usage:        0 bytes
  7771 ;; Hardware stack levels used: 1
  7772 ;; Hardware stack levels required when called: 5
  7773 ;; This function calls:
  7774 ;;		Nothing
  7775 ;; This function is called by:
  7776 ;;		_SYSTEM_Initialize
  7777 ;; This function uses a non-reentrant model
  7778 ;;
  7779                           
  7780     0BA1                     _ADC_Initialize:	
  7781                           ;psect for function _ADC_Initialize
  7782                           
  7783                           
  7784                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0xD3;
  7785                           
  7786                           ;incstack = 0
  7787                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  7788     0BA1  30D3               	movlw	211
  7789     0BA2  0021               	movlb	1	; select bank1
  7790     0BA3  009E               	movwf	30	;volatile
  7791                           
  7792                           ;mcc_generated_files/adc.c: 75:     ADRESL = 0x00;
  7793     0BA4  019B               	clrf	27	;volatile
  7794                           
  7795                           ;mcc_generated_files/adc.c: 78:     ADRESH = 0x00;
  7796     0BA5  019C               	clrf	28	;volatile
  7797                           
  7798                           ;mcc_generated_files/adc.c: 81:     ADCON0 = 0x01;
  7799     0BA6  3001               	movlw	1
  7800     0BA7  009D               	movwf	29	;volatile
  7801     0BA8  0008               	return
  7802     0BA9                     __end_of_ADC_Initialize:
  7803                           
  7804                           	psect	text41
  7805     0B63                     __ptext41:	
  7806 ;; *************** function _EUSART_is_rx_ready *****************
  7807 ;; Defined at:
  7808 ;;		line 99 in file "mcc_generated_files/eusart.c"
  7809 ;; Parameters:    Size  Location     Type
  7810 ;;		None
  7811 ;; Auto vars:     Size  Location     Type
  7812 ;;		None
  7813 ;; Return value:  Size  Location     Type
  7814 ;;                  1    wreg      _Bool 
  7815 ;; Registers used:
  7816 ;;		wreg, status,2, status,0
  7817 ;; Tracked objects:
  7818 ;;		On entry : 17/0
  7819 ;;		On exit  : 1F/0
  7820 ;;		Unchanged: 0/0
  7821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7822 ;;      Params:         0       0       0       0       0       0
  7823 ;;      Locals:         0       0       0       0       0       0
  7824 ;;      Temps:          0       0       0       0       0       0
  7825 ;;      Totals:         0       0       0       0       0       0
  7826 ;;Total ram usage:        0 bytes
  7827 ;; Hardware stack levels used: 1
  7828 ;; Hardware stack levels required when called: 5
  7829 ;; This function calls:
  7830 ;;		Nothing
  7831 ;; This function is called by:
  7832 ;;		_main
  7833 ;; This function uses a non-reentrant model
  7834 ;;
  7835                           
  7836     0B63                     _EUSART_is_rx_ready:	
  7837                           ;psect for function _EUSART_is_rx_ready
  7838                           
  7839                           
  7840                           ;mcc_generated_files/eusart.c: 101:     return (_Bool)(PIR1bits.RCIF);
  7841                           
  7842                           ;incstack = 0
  7843                           ; Regs used in _EUSART_is_rx_ready: [wreg+status,2+status,0]
  7844     0B63  0020               	movlb	0	; select bank0
  7845     0B64  0E11               	swapf	17,w	;volatile
  7846     0B65  0C89               	rrf	9,f
  7847     0B66  3901               	andlw	1
  7848     0B67  0008               	return
  7849     0B68                     __end_of_EUSART_is_rx_ready:
  7850                           
  7851                           	psect	text42
  7852     0C03                     __ptext42:	
  7853 ;; *************** function _EUSART_Read *****************
  7854 ;; Defined at:
  7855 ;;		line 113 in file "mcc_generated_files/eusart.c"
  7856 ;; Parameters:    Size  Location     Type
  7857 ;;		None
  7858 ;; Auto vars:     Size  Location     Type
  7859 ;;		None
  7860 ;; Return value:  Size  Location     Type
  7861 ;;                  1    wreg      unsigned char 
  7862 ;; Registers used:
  7863 ;;		wreg, status,2
  7864 ;; Tracked objects:
  7865 ;;		On entry : 1F/1
  7866 ;;		On exit  : 1F/3
  7867 ;;		Unchanged: 0/0
  7868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7869 ;;      Params:         0       0       0       0       0       0
  7870 ;;      Locals:         0       0       0       0       0       0
  7871 ;;      Temps:          0       0       0       0       0       0
  7872 ;;      Totals:         0       0       0       0       0       0
  7873 ;;Total ram usage:        0 bytes
  7874 ;; Hardware stack levels used: 1
  7875 ;; Hardware stack levels required when called: 5
  7876 ;; This function calls:
  7877 ;;		Nothing
  7878 ;; This function is called by:
  7879 ;;		_main
  7880 ;; This function uses a non-reentrant model
  7881 ;;
  7882                           
  7883     0C03                     _EUSART_Read:	
  7884                           ;psect for function _EUSART_Read
  7885                           
  7886     0C03                     l240:	
  7887                           ;mcc_generated_files/eusart.c: 116:     {;mcc_generated_files/eusart.c: 117:     }
  7888                           
  7889                           ;incstack = 0
  7890                           ; Regs used in _EUSART_Read: [wreg+status,2]
  7891                           
  7892                           
  7893                           ;mcc_generated_files/eusart.c: 115:     while(!PIR1bits.RCIF)
  7894     0C03  0020               	movlb	0	; select bank0
  7895     0C04  1E91               	btfss	17,5	;volatile
  7896     0C05  2C03               	goto	l240
  7897                           
  7898                           ;mcc_generated_files/eusart.c: 119:     eusartRxLastError.status = 0;
  7899     0C06  0021               	movlb	1	; select bank1
  7900     0C07  01CC               	clrf	_eusartRxLastError^(0+128)	;volatile
  7901                           
  7902                           ;mcc_generated_files/eusart.c: 121:     if(1 == RCSTAbits.OERR)
  7903     0C08  0023               	movlb	3	; select bank3
  7904     0C09  1C9D               	btfss	29,1	;volatile
  7905     0C0A  2C0D               	goto	l2946
  7906                           
  7907                           ;mcc_generated_files/eusart.c: 122:     {;mcc_generated_files/eusart.c: 125:         RCS
      +                          TAbits.CREN = 0;
  7908     0C0B  121D               	bcf	29,4	;volatile
  7909                           
  7910                           ;mcc_generated_files/eusart.c: 126:         RCSTAbits.CREN = 1;
  7911     0C0C  161D               	bsf	29,4	;volatile
  7912     0C0D                     l2946:
  7913                           
  7914                           ;mcc_generated_files/eusart.c: 129:     return RCREG;
  7915     0C0D  0819               	movf	25,w	;volatile
  7916     0C0E  0008               	return
  7917     0C0F                     __end_of_EUSART_Read:
  7918                           
  7919                           	psect	text43
  7920     0C7C                     __ptext43:	
  7921 ;; *************** function _ADC_GetConversion *****************
  7922 ;; Defined at:
  7923 ;;		line 112 in file "mcc_generated_files/adc.c"
  7924 ;; Parameters:    Size  Location     Type
  7925 ;;  channel         1    wreg     enum E2495
  7926 ;; Auto vars:     Size  Location     Type
  7927 ;;  channel         1    3[BANK1 ] enum E2495
  7928 ;; Return value:  Size  Location     Type
  7929 ;;                  2    0[BANK1 ] unsigned short 
  7930 ;; Registers used:
  7931 ;;		wreg, status,2, status,0
  7932 ;; Tracked objects:
  7933 ;;		On entry : 1F/8
  7934 ;;		On exit  : 1F/1
  7935 ;;		Unchanged: 0/0
  7936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7937 ;;      Params:         0       0       2       0       0       0
  7938 ;;      Locals:         0       0       1       0       0       0
  7939 ;;      Temps:          0       0       1       0       0       0
  7940 ;;      Totals:         0       0       4       0       0       0
  7941 ;;Total ram usage:        4 bytes
  7942 ;; Hardware stack levels used: 1
  7943 ;; Hardware stack levels required when called: 5
  7944 ;; This function calls:
  7945 ;;		Nothing
  7946 ;; This function is called by:
  7947 ;;		_main
  7948 ;; This function uses a non-reentrant model
  7949 ;;
  7950                           
  7951     0C7C                     _ADC_GetConversion:	
  7952                           ;psect for function _ADC_GetConversion
  7953                           
  7954                           
  7955                           ;incstack = 0
  7956                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
  7957                           ;ADC_GetConversion@channel stored from wreg
  7958     0C7C  0021               	movlb	1	; select bank1
  7959     0C7D  00D0               	movwf	ADC_GetConversion@channel^(0+128)
  7960                           
  7961                           ;mcc_generated_files/adc.c: 112: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 113: {;mcc_generated_files/adc.c: 115:     ADCON0bits.CHS = ch
      +                          annel;
  7962     0C7E  0850               	movf	ADC_GetConversion@channel^(0+128),w
  7963     0C7F  00CF               	movwf	??_ADC_GetConversion^(0+128)
  7964     0C80  0DCF               	rlf	??_ADC_GetConversion^(0+128),f
  7965     0C81  0DCF               	rlf	??_ADC_GetConversion^(0+128),f
  7966     0C82  081D               	movf	29,w	;volatile
  7967     0C83  064F               	xorwf	??_ADC_GetConversion^(0+128),w
  7968     0C84  3983               	andlw	-125
  7969     0C85  064F               	xorwf	??_ADC_GetConversion^(0+128),w
  7970     0C86  009D               	movwf	29	;volatile
  7971                           
  7972                           ;mcc_generated_files/adc.c: 118:     ADCON0bits.ADON = 1;
  7973     0C87  141D               	bsf	29,0	;volatile
  7974                           
  7975                           ;mcc_generated_files/adc.c: 121:     _delay((unsigned long)((5)*(16000000/4000000.0)));
  7976     0C88  3006               	movlw	6
  7977     0C89                     u3117:
  7978     0C89  0B89               	decfsz	9,f
  7979     0C8A  2C89               	goto	u3117
  7980     0C8B  3200               	nop2
  7981                           
  7982                           ;mcc_generated_files/adc.c: 124:     ADCON0bits.GO_nDONE = 1;
  7983     0C8C  0021               	movlb	1	; select bank1
  7984     0C8D  149D               	bsf	29,1	;volatile
  7985     0C8E                     l333:	
  7986                           ;mcc_generated_files/adc.c: 128:     {;mcc_generated_files/adc.c: 129:     }
  7987                           
  7988                           
  7989                           ;mcc_generated_files/adc.c: 127:     while (ADCON0bits.GO_nDONE)
  7990     0C8E  189D               	btfsc	29,1	;volatile
  7991     0C8F  2C8E               	goto	l333
  7992                           
  7993                           ;mcc_generated_files/adc.c: 132:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  7994     0C90  081C               	movf	28,w	;volatile
  7995     0C91  00CE               	movwf	(?_ADC_GetConversion+1)^(0+128)
  7996     0C92  081B               	movf	27,w	;volatile
  7997     0C93  00CD               	movwf	?_ADC_GetConversion^(0+128)
  7998     0C94  0008               	return
  7999     0C95                     __end_of_ADC_GetConversion:
  8000                           
  8001                           	psect	intentry
  8002     0004                     __pintentry:	
  8003 ;; *************** function _INTERRUPT_InterruptManager *****************
  8004 ;; Defined at:
  8005 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  8006 ;; Parameters:    Size  Location     Type
  8007 ;;		None
  8008 ;; Auto vars:     Size  Location     Type
  8009 ;;		None
  8010 ;; Return value:  Size  Location     Type
  8011 ;;                  1    wreg      void 
  8012 ;; Registers used:
  8013 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8014 ;; Tracked objects:
  8015 ;;		On entry : 0/0
  8016 ;;		On exit  : 0/0
  8017 ;;		Unchanged: 0/0
  8018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8019 ;;      Params:         0       0       0       0       0       0
  8020 ;;      Locals:         0       0       0       0       0       0
  8021 ;;      Temps:          0       0       0       0       0       0
  8022 ;;      Totals:         0       0       0       0       0       0
  8023 ;;Total ram usage:        0 bytes
  8024 ;; Hardware stack levels used: 1
  8025 ;; Hardware stack levels required when called: 4
  8026 ;; This function calls:
  8027 ;;		_PIN_MANAGER_IOC
  8028 ;;		_TMR1_GATE_ISR
  8029 ;; This function is called by:
  8030 ;;		Interrupt level 1
  8031 ;; This function uses a non-reentrant model
  8032 ;;
  8033                           
  8034     0004                     _INTERRUPT_InterruptManager:
  8035                           
  8036                           ;incstack = 0
  8037     0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  8038                           
  8039                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8040     0005  3180               	pagesel	$
  8041                           
  8042                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.IOCIE == 1 && INTCONbits
      +                          .IOCIF == 1)
  8043     0006  198B               	btfsc	11,3	;volatile
  8044     0007  1C0B               	btfss	11,0	;volatile
  8045     0008  280D               	goto	i1l174
  8046                           
  8047                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         PIN_MANAGER_IOC();
  8048     0009  3187  27FF  3180   	fcall	_PIN_MANAGER_IOC
  8049                           
  8050                           ;mcc_generated_files/interrupt_manager.c: 58:     }
  8051     000C  2817               	goto	i1l180
  8052     000D                     i1l174:	
  8053                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
  8054                           
  8055     000D  1F0B               	btfss	11,6	;volatile
  8056     000E  2817               	goto	i1l180
  8057                           
  8058                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE1bits.TMR1GIE == 1 && PIR1bits.TMR1GIF == 1)
  8059     000F  0021               	movlb	1	; select bank1
  8060     0010  1F91               	btfss	17,7	;volatile
  8061     0011  2817               	goto	i1l180
  8062     0012  0020               	movlb	0	; select bank0
  8063     0013  1F91               	btfss	17,7	;volatile
  8064     0014  2817               	goto	i1l180
  8065                           
  8066                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             TMR1_GATE_ISR();
  8067     0015  318B  23F8         	fcall	_TMR1_GATE_ISR
  8068     0017                     i1l180:	
  8069                           ;mcc_generated_files/interrupt_manager.c: 71:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 73:     }
  8070                           
  8071                           ;mcc_generated_files/interrupt_manager.c: 64:         }
  8072                           
  8073     0017  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  8074     0018  0009               	retfie
  8075     0019                     __end_of_INTERRUPT_InterruptManager:
  8076                           
  8077                           	psect	text45
  8078     0BF8                     __ptext45:	
  8079 ;; *************** function _TMR1_GATE_ISR *****************
  8080 ;; Defined at:
  8081 ;;		line 166 in file "mcc_generated_files/tmr1.c"
  8082 ;; Parameters:    Size  Location     Type
  8083 ;;		None
  8084 ;; Auto vars:     Size  Location     Type
  8085 ;;		None
  8086 ;; Return value:  Size  Location     Type
  8087 ;;                  1    wreg      void 
  8088 ;; Registers used:
  8089 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8090 ;; Tracked objects:
  8091 ;;		On entry : 1F/0
  8092 ;;		On exit  : 0/0
  8093 ;;		Unchanged: 0/0
  8094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8095 ;;      Params:         0       0       0       0       0       0
  8096 ;;      Locals:         0       0       0       0       0       0
  8097 ;;      Temps:          0       0       0       0       0       0
  8098 ;;      Totals:         0       0       0       0       0       0
  8099 ;;Total ram usage:        0 bytes
  8100 ;; Hardware stack levels used: 1
  8101 ;; Hardware stack levels required when called: 3
  8102 ;; This function calls:
  8103 ;;		NULL
  8104 ;;		_TMR1_DefaultGateInterruptHandler
  8105 ;;		_mede_height
  8106 ;; This function is called by:
  8107 ;;		_INTERRUPT_InterruptManager
  8108 ;; This function uses a non-reentrant model
  8109 ;;
  8110                           
  8111     0BF8                     _TMR1_GATE_ISR:	
  8112                           ;psect for function _TMR1_GATE_ISR
  8113                           
  8114                           
  8115                           ;mcc_generated_files/tmr1.c: 169:     PIR1bits.TMR1GIF = 0;
  8116                           
  8117                           ;incstack = 0
  8118                           ; Regs used in _TMR1_GATE_ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8119     0BF8  1391               	bcf	17,7	;volatile
  8120                           
  8121                           ;mcc_generated_files/tmr1.c: 171:     if(TMR1_GateInterruptHandler)
  8122     0BF9  086E               	movf	_TMR1_GateInterruptHandler,w
  8123     0BFA  046F               	iorwf	_TMR1_GateInterruptHandler+1,w
  8124     0BFB  1903               	btfsc	3,2
  8125     0BFC  0008               	return
  8126                           
  8127                           ;mcc_generated_files/tmr1.c: 172:     {;mcc_generated_files/tmr1.c: 173:         TMR1_Ga
      +                          teInterruptHandler();
  8128     0BFD  086F               	movf	_TMR1_GateInterruptHandler+1,w
  8129     0BFE  008A               	movwf	10
  8130     0BFF  086E               	movf	_TMR1_GateInterruptHandler,w
  8131     0C00  000A               	callw
  8132     0C01  318B               	pagesel	$
  8133     0C02  0008               	return
  8134     0C03                     __end_of_TMR1_GATE_ISR:
  8135                           
  8136                           	psect	text46
  8137     07FE                     __ptext46:	
  8138 ;; *************** function _TMR1_DefaultGateInterruptHandler *****************
  8139 ;; Defined at:
  8140 ;;		line 181 in file "mcc_generated_files/tmr1.c"
  8141 ;; Parameters:    Size  Location     Type
  8142 ;;		None
  8143 ;; Auto vars:     Size  Location     Type
  8144 ;;		None
  8145 ;; Return value:  Size  Location     Type
  8146 ;;                  1    wreg      void 
  8147 ;; Registers used:
  8148 ;;		None
  8149 ;; Tracked objects:
  8150 ;;		On entry : 1F/0
  8151 ;;		On exit  : 1F/0
  8152 ;;		Unchanged: 1F/0
  8153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8154 ;;      Params:         0       0       0       0       0       0
  8155 ;;      Locals:         0       0       0       0       0       0
  8156 ;;      Temps:          0       0       0       0       0       0
  8157 ;;      Totals:         0       0       0       0       0       0
  8158 ;;Total ram usage:        0 bytes
  8159 ;; Hardware stack levels used: 1
  8160 ;; This function calls:
  8161 ;;		Nothing
  8162 ;; This function is called by:
  8163 ;;		_TMR1_Initialize
  8164 ;;		_TMR1_GATE_ISR
  8165 ;; This function uses a non-reentrant model
  8166 ;;
  8167                           
  8168     07FE                     _TMR1_DefaultGateInterruptHandler:	
  8169                           ;psect for function _TMR1_DefaultGateInterruptHandler
  8170                           
  8171                           
  8172                           ;incstack = 0
  8173                           ; Regs used in _TMR1_DefaultGateInterruptHandler: []
  8174     07FE  0008               	return
  8175     07FF                     __end_of_TMR1_DefaultGateInterruptHandler:
  8176                           
  8177                           	psect	text47
  8178     05DD                     __ptext47:	
  8179 ;; *************** function _mede_height *****************
  8180 ;; Defined at:
  8181 ;;		line 301 in file "main.c"
  8182 ;; Parameters:    Size  Location     Type
  8183 ;;		None
  8184 ;; Auto vars:     Size  Location     Type
  8185 ;;		None
  8186 ;; Return value:  Size  Location     Type
  8187 ;;                  1    wreg      void 
  8188 ;; Registers used:
  8189 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8190 ;; Tracked objects:
  8191 ;;		On entry : 1F/0
  8192 ;;		On exit  : 1F/1
  8193 ;;		Unchanged: 0/0
  8194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8195 ;;      Params:         0       0       0       0       0       0
  8196 ;;      Locals:         0       0       0       0       0       0
  8197 ;;      Temps:          0       6       0       0       0       0
  8198 ;;      Totals:         0       6       0       0       0       0
  8199 ;;Total ram usage:        6 bytes
  8200 ;; Hardware stack levels used: 1
  8201 ;; Hardware stack levels required when called: 2
  8202 ;; This function calls:
  8203 ;;		_TMR1_ReadTimer
  8204 ;;		_TMR1_Reload
  8205 ;;		___flmul
  8206 ;;		___xxtofl
  8207 ;;		i1___fltol
  8208 ;;		i1___lwdiv
  8209 ;; This function is called by:
  8210 ;;		_main
  8211 ;;		_TMR1_GATE_ISR
  8212 ;; This function uses a non-reentrant model
  8213 ;;
  8214                           
  8215     05DD                     _mede_height:	
  8216                           ;psect for function _mede_height
  8217                           
  8218                           
  8219                           ;main.c: 302:     tempo_voo = TMR1_ReadTimer();
  8220                           
  8221                           ;incstack = 0
  8222                           ; Regs used in _mede_height: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8223     05DD  318C  2464  3185   	fcall	_TMR1_ReadTimer
  8224     05E0  0871               	movf	?_TMR1_ReadTimer+1,w
  8225     05E1  00E2               	movwf	_tempo_voo+1
  8226     05E2  0870               	movf	?_TMR1_ReadTimer,w
  8227     05E3  00E1               	movwf	_tempo_voo
  8228                           
  8229                           ;main.c: 303:     TMR1_Reload();
  8230     05E4  318B  2399  3185   	fcall	_TMR1_Reload
  8231                           
  8232                           ;main.c: 304:     if (first_read == 1){
  8233     05E7  036D               	decf	_first_read,w
  8234     05E8  1D03               	btfss	3,2
  8235     05E9  2E06               	goto	i1l2882
  8236                           
  8237                           ;main.c: 305:         avg_tempo_voo = tempo_voo;
  8238     05EA  0861               	movf	_tempo_voo,w
  8239     05EB  00BF               	movwf	___xxtofl@val
  8240     05EC  0862               	movf	_tempo_voo+1,w
  8241     05ED  00C0               	movwf	___xxtofl@val+1
  8242     05EE  01C1               	clrf	___xxtofl@val+2
  8243     05EF  01C2               	clrf	___xxtofl@val+3
  8244     05F0  3000               	movlw	0
  8245     05F1  3187  2737  3185   	fcall	___xxtofl
  8246     05F4  0842               	movf	?___xxtofl+3,w
  8247     05F5  0021               	movlb	1	; select bank1
  8248     05F6  00A3               	movwf	(_avg_tempo_voo+3)^(0+128)
  8249     05F7  0020               	movlb	0	; select bank0
  8250     05F8  0841               	movf	?___xxtofl+2,w
  8251     05F9  0021               	movlb	1	; select bank1
  8252     05FA  00A2               	movwf	(_avg_tempo_voo+2)^(0+128)
  8253     05FB  0020               	movlb	0	; select bank0
  8254     05FC  0840               	movf	?___xxtofl+1,w
  8255     05FD  0021               	movlb	1	; select bank1
  8256     05FE  00A1               	movwf	(_avg_tempo_voo+1)^(0+128)
  8257     05FF  0020               	movlb	0	; select bank0
  8258     0600  083F               	movf	?___xxtofl,w
  8259     0601  0021               	movlb	1	; select bank1
  8260     0602  00A0               	movwf	_avg_tempo_voo^(0+128)
  8261                           
  8262                           ;main.c: 306:         first_read = 0;
  8263     0603  0020               	movlb	0	; select bank0
  8264     0604  01ED               	clrf	_first_read
  8265                           
  8266                           ;main.c: 307:     }
  8267     0605  2E42               	goto	i1l2884
  8268     0606                     i1l2882:
  8269                           
  8270                           ;main.c: 309:         avg_tempo_voo = ((uint16_t)avg_tempo_voo + (tempo_voo))>>1;
  8271     0606  0021               	movlb	1	; select bank1
  8272     0607  0823               	movf	(_avg_tempo_voo+3)^(0+128),w
  8273     0608  0020               	movlb	0	; select bank0
  8274     0609  00B8               	movwf	i1___fltol@f1+3
  8275     060A  0021               	movlb	1	; select bank1
  8276     060B  0822               	movf	(_avg_tempo_voo+2)^(0+128),w
  8277     060C  0020               	movlb	0	; select bank0
  8278     060D  00B7               	movwf	i1___fltol@f1+2
  8279     060E  0021               	movlb	1	; select bank1
  8280     060F  0821               	movf	(_avg_tempo_voo+1)^(0+128),w
  8281     0610  0020               	movlb	0	; select bank0
  8282     0611  00B6               	movwf	i1___fltol@f1+1
  8283     0612  0021               	movlb	1	; select bank1
  8284     0613  0820               	movf	_avg_tempo_voo^(0+128),w
  8285     0614  0020               	movlb	0	; select bank0
  8286     0615  00B5               	movwf	i1___fltol@f1
  8287     0616  318E  2660  3185   	fcall	i1___fltol
  8288     0619  0861               	movf	_tempo_voo,w
  8289     061A  0735               	addwf	?i1___fltol,w
  8290     061B  00CD               	movwf	??_mede_height
  8291     061C  0862               	movf	_tempo_voo+1,w
  8292     061D  3D36               	addwfc	?i1___fltol+1,w
  8293     061E  00CE               	movwf	??_mede_height+1
  8294     061F  36CE               	lsrf	??_mede_height+1,f
  8295     0620  0CCD               	rrf	??_mede_height,f
  8296     0621  084D               	movf	??_mede_height,w
  8297     0622  00CF               	movwf	??_mede_height+2
  8298     0623  084E               	movf	??_mede_height+1,w
  8299     0624  00D0               	movwf	??_mede_height+3
  8300     0625  01D1               	clrf	??_mede_height+4
  8301     0626  01D2               	clrf	??_mede_height+5
  8302     0627  0852               	movf	??_mede_height+5,w
  8303     0628  00C2               	movwf	___xxtofl@val+3
  8304     0629  0851               	movf	??_mede_height+4,w
  8305     062A  00C1               	movwf	___xxtofl@val+2
  8306     062B  0850               	movf	??_mede_height+3,w
  8307     062C  00C0               	movwf	___xxtofl@val+1
  8308     062D  084F               	movf	??_mede_height+2,w
  8309     062E  00BF               	movwf	___xxtofl@val
  8310     062F  3000               	movlw	0
  8311     0630  3187  2737  3185   	fcall	___xxtofl
  8312     0633  0842               	movf	?___xxtofl+3,w
  8313     0634  0021               	movlb	1	; select bank1
  8314     0635  00A3               	movwf	(_avg_tempo_voo+3)^(0+128)
  8315     0636  0020               	movlb	0	; select bank0
  8316     0637  0841               	movf	?___xxtofl+2,w
  8317     0638  0021               	movlb	1	; select bank1
  8318     0639  00A2               	movwf	(_avg_tempo_voo+2)^(0+128)
  8319     063A  0020               	movlb	0	; select bank0
  8320     063B  0840               	movf	?___xxtofl+1,w
  8321     063C  0021               	movlb	1	; select bank1
  8322     063D  00A1               	movwf	(_avg_tempo_voo+1)^(0+128)
  8323     063E  0020               	movlb	0	; select bank0
  8324     063F  083F               	movf	?___xxtofl,w
  8325     0640  0021               	movlb	1	; select bank1
  8326     0641  00A0               	movwf	_avg_tempo_voo^(0+128)
  8327     0642                     i1l2884:
  8328                           
  8329                           ;main.c: 311:     height = (uint16_t)(avg_tempo_voo*lookupTable[(int)(adc_temp/10)]);
  8330     0642  0021               	movlb	1	; select bank1
  8331     0643  0836               	movf	(_adc_temp+1)^(0+128),w
  8332     0644  00F3               	movwf	i1___lwdiv@dividend+1
  8333     0645  0835               	movf	_adc_temp^(0+128),w
  8334     0646  00F2               	movwf	i1___lwdiv@dividend
  8335     0647  300A               	movlw	10
  8336     0648  00F0               	movwf	i1___lwdiv@divisor
  8337     0649  3000               	movlw	0
  8338     064A  00F1               	movwf	i1___lwdiv@divisor+1
  8339     064B  318D  2597  3185   	fcall	i1___lwdiv
  8340     064E  0871               	movf	?i1___lwdiv+1,w
  8341     064F  0085               	movwf	5
  8342     0650  0870               	movf	?i1___lwdiv,w
  8343     0651  0084               	movwf	4
  8344     0652  3584               	lslf	4,f
  8345     0653  0D85               	rlf	5,f
  8346     0654  3584               	lslf	4,f
  8347     0655  0D85               	rlf	5,f
  8348     0656  3045               	movlw	low _lookupTable
  8349     0657  0784               	addwf	4,f
  8350     0658  3004               	movlw	high _lookupTable
  8351     0659  3D05               	addwfc	5,w
  8352     065A  3880               	iorlw	128
  8353     065B  0085               	movwf	5
  8354     065C  3F00               	moviw [0]fsr0
  8355     065D  0020               	movlb	0	; select bank0
  8356     065E  00CD               	movwf	??_mede_height
  8357     065F  3F01               	moviw [1]fsr0
  8358     0660  00CE               	movwf	??_mede_height+1
  8359     0661  3F02               	moviw [2]fsr0
  8360     0662  00CF               	movwf	??_mede_height+2
  8361     0663  3F03               	moviw [3]fsr0
  8362     0664  00D0               	movwf	??_mede_height+3
  8363     0665  0850               	movf	??_mede_height+3,w
  8364     0666  00A7               	movwf	___flmul@a+3
  8365     0667  084F               	movf	??_mede_height+2,w
  8366     0668  00A6               	movwf	___flmul@a+2
  8367     0669  084E               	movf	??_mede_height+1,w
  8368     066A  00A5               	movwf	___flmul@a+1
  8369     066B  084D               	movf	??_mede_height,w
  8370     066C  00A4               	movwf	___flmul@a
  8371     066D  0021               	movlb	1	; select bank1
  8372     066E  0823               	movf	(_avg_tempo_voo+3)^(0+128),w
  8373     066F  0020               	movlb	0	; select bank0
  8374     0670  00A3               	movwf	___flmul@b+3
  8375     0671  0021               	movlb	1	; select bank1
  8376     0672  0822               	movf	(_avg_tempo_voo+2)^(0+128),w
  8377     0673  0020               	movlb	0	; select bank0
  8378     0674  00A2               	movwf	___flmul@b+2
  8379     0675  0021               	movlb	1	; select bank1
  8380     0676  0821               	movf	(_avg_tempo_voo+1)^(0+128),w
  8381     0677  0020               	movlb	0	; select bank0
  8382     0678  00A1               	movwf	___flmul@b+1
  8383     0679  0021               	movlb	1	; select bank1
  8384     067A  0820               	movf	_avg_tempo_voo^(0+128),w
  8385     067B  0020               	movlb	0	; select bank0
  8386     067C  00A0               	movwf	___flmul@b
  8387     067D  3180  2046  3185   	fcall	___flmul
  8388     0680  0823               	movf	?___flmul+3,w
  8389     0681  00B8               	movwf	i1___fltol@f1+3
  8390     0682  0822               	movf	?___flmul+2,w
  8391     0683  00B7               	movwf	i1___fltol@f1+2
  8392     0684  0821               	movf	?___flmul+1,w
  8393     0685  00B6               	movwf	i1___fltol@f1+1
  8394     0686  0820               	movf	?___flmul,w
  8395     0687  00B5               	movwf	i1___fltol@f1
  8396     0688  318E  2660         	fcall	i1___fltol
  8397     068A  0836               	movf	?i1___fltol+1,w
  8398     068B  0021               	movlb	1	; select bank1
  8399     068C  00B4               	movwf	(_height+1)^(0+128)
  8400     068D  0020               	movlb	0	; select bank0
  8401     068E  0835               	movf	?i1___fltol,w
  8402     068F  0021               	movlb	1	; select bank1
  8403     0690  00B3               	movwf	_height^(0+128)
  8404                           
  8405                           ;main.c: 312:     balldist = height;
  8406     0691  0833               	movf	_height^(0+128),w
  8407     0692  00AA               	movwf	_balldist^(0+128)
  8408     0693  0834               	movf	(_height+1)^(0+128),w
  8409     0694  00AB               	movwf	(_balldist+1)^(0+128)
  8410     0695  01AC               	clrf	(_balldist+2)^(0+128)
  8411     0696  0008               	return
  8412     0697                     __end_of_mede_height:
  8413                           
  8414                           	psect	text48
  8415     0D97                     __ptext48:	
  8416 ;; *************** function i1___lwdiv *****************
  8417 ;; Defined at:
  8418 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lwdiv.c"
  8419 ;; Parameters:    Size  Location     Type
  8420 ;;  divisor         2    0[COMMON] unsigned int 
  8421 ;;  dividend        2    2[COMMON] unsigned int 
  8422 ;; Auto vars:     Size  Location     Type
  8423 ;;  quotient        2    5[COMMON] unsigned int 
  8424 ;;  counter         1    7[COMMON] unsigned char 
  8425 ;; Return value:  Size  Location     Type
  8426 ;;                  2    0[COMMON] unsigned int 
  8427 ;; Registers used:
  8428 ;;		wreg, status,2, status,0
  8429 ;; Tracked objects:
  8430 ;;		On entry : 1F/1
  8431 ;;		On exit  : 1F/1
  8432 ;;		Unchanged: 1F/0
  8433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8434 ;;      Params:         4       0       0       0       0       0
  8435 ;;      Locals:         3       0       0       0       0       0
  8436 ;;      Temps:          1       0       0       0       0       0
  8437 ;;      Totals:         8       0       0       0       0       0
  8438 ;;Total ram usage:        8 bytes
  8439 ;; Hardware stack levels used: 1
  8440 ;; This function calls:
  8441 ;;		Nothing
  8442 ;; This function is called by:
  8443 ;;		_mede_height
  8444 ;; This function uses a non-reentrant model
  8445 ;;
  8446                           
  8447     0D97                     i1___lwdiv:	
  8448                           ;psect for function i1___lwdiv
  8449                           
  8450                           
  8451                           ;incstack = 0
  8452                           ; Regs used in i1___lwdiv: [wreg+status,2+status,0]
  8453     0D97  01F5               	clrf	i1___lwdiv@quotient
  8454     0D98  01F6               	clrf	i1___lwdiv@quotient+1
  8455     0D99  0870               	movf	i1___lwdiv@divisor,w
  8456     0D9A  0471               	iorwf	i1___lwdiv@divisor+1,w
  8457     0D9B  1903               	btfsc	3,2
  8458     0D9C  2DC6               	goto	i1l2674
  8459     0D9D  01F7               	clrf	i1___lwdiv@counter
  8460     0D9E  0AF7               	incf	i1___lwdiv@counter,f
  8461     0D9F                     i1l2662:
  8462     0D9F  1BF1               	btfsc	i1___lwdiv@divisor+1,7
  8463     0DA0  2DAB               	goto	i1l2664
  8464     0DA1  3001               	movlw	1
  8465     0DA2                     u233_25:
  8466     0DA2  35F0               	lslf	i1___lwdiv@divisor,f
  8467     0DA3  0DF1               	rlf	i1___lwdiv@divisor+1,f
  8468     0DA4  0B89               	decfsz	9,f
  8469     0DA5  2DA2               	goto	u233_25
  8470     0DA6  3001               	movlw	1
  8471     0DA7  00F4               	movwf	??i1___lwdiv
  8472     0DA8  0874               	movf	??i1___lwdiv,w
  8473     0DA9  07F7               	addwf	i1___lwdiv@counter,f
  8474     0DAA  2D9F               	goto	i1l2662
  8475     0DAB                     i1l2664:
  8476     0DAB  3001               	movlw	1
  8477     0DAC                     u235_25:
  8478     0DAC  35F5               	lslf	i1___lwdiv@quotient,f
  8479     0DAD  0DF6               	rlf	i1___lwdiv@quotient+1,f
  8480     0DAE  0B89               	decfsz	9,f
  8481     0DAF  2DAC               	goto	u235_25
  8482     0DB0  0871               	movf	i1___lwdiv@divisor+1,w
  8483     0DB1  0273               	subwf	i1___lwdiv@dividend+1,w
  8484     0DB2  1D03               	skipz
  8485     0DB3  2DB6               	goto	u236_25
  8486     0DB4  0870               	movf	i1___lwdiv@divisor,w
  8487     0DB5  0272               	subwf	i1___lwdiv@dividend,w
  8488     0DB6                     u236_25:
  8489     0DB6  1C03               	skipc
  8490     0DB7  2DBD               	goto	i1l2670
  8491     0DB8  0870               	movf	i1___lwdiv@divisor,w
  8492     0DB9  02F2               	subwf	i1___lwdiv@dividend,f
  8493     0DBA  0871               	movf	i1___lwdiv@divisor+1,w
  8494     0DBB  3BF3               	subwfb	i1___lwdiv@dividend+1,f
  8495     0DBC  1475               	bsf	i1___lwdiv@quotient,0
  8496     0DBD                     i1l2670:
  8497     0DBD  3001               	movlw	1
  8498     0DBE                     u237_25:
  8499     0DBE  36F1               	lsrf	i1___lwdiv@divisor+1,f
  8500     0DBF  0CF0               	rrf	i1___lwdiv@divisor,f
  8501     0DC0  0B89               	decfsz	9,f
  8502     0DC1  2DBE               	goto	u237_25
  8503     0DC2  3001               	movlw	1
  8504     0DC3  02F7               	subwf	i1___lwdiv@counter,f
  8505     0DC4  1D03               	btfss	3,2
  8506     0DC5  2DAB               	goto	i1l2664
  8507     0DC6                     i1l2674:
  8508     0DC6  0876               	movf	i1___lwdiv@quotient+1,w
  8509     0DC7  00F1               	movwf	?i1___lwdiv+1
  8510     0DC8  0875               	movf	i1___lwdiv@quotient,w
  8511     0DC9  00F0               	movwf	?i1___lwdiv
  8512     0DCA  0008               	return
  8513     0DCB                     __end_ofi1___lwdiv:
  8514                           
  8515                           	psect	text49
  8516     0E60                     __ptext49:	
  8517 ;; *************** function i1___fltol *****************
  8518 ;; Defined at:
  8519 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\fltol.c"
  8520 ;; Parameters:    Size  Location     Type
  8521 ;;  f1              4   21[BANK0 ] unsigned int 
  8522 ;; Auto vars:     Size  Location     Type
  8523 ;;  exp1            1   30[BANK0 ] unsigned char 
  8524 ;;  sign1           1   29[BANK0 ] unsigned char 
  8525 ;; Return value:  Size  Location     Type
  8526 ;;                  4   21[BANK0 ] long 
  8527 ;; Registers used:
  8528 ;;		wreg, status,2, status,0
  8529 ;; Tracked objects:
  8530 ;;		On entry : 1F/0
  8531 ;;		On exit  : 1F/0
  8532 ;;		Unchanged: 0/0
  8533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8534 ;;      Params:         0       4       0       0       0       0
  8535 ;;      Locals:         0       2       0       0       0       0
  8536 ;;      Temps:          0       4       0       0       0       0
  8537 ;;      Totals:         0      10       0       0       0       0
  8538 ;;Total ram usage:       10 bytes
  8539 ;; Hardware stack levels used: 1
  8540 ;; This function calls:
  8541 ;;		Nothing
  8542 ;; This function is called by:
  8543 ;;		_mede_height
  8544 ;; This function uses a non-reentrant model
  8545 ;;
  8546                           
  8547     0E60                     i1___fltol:	
  8548                           ;psect for function i1___fltol
  8549                           
  8550                           
  8551                           ;incstack = 0
  8552                           ; Regs used in i1___fltol: [wreg+status,2+status,0]
  8553     0E60  1003               	clrc
  8554     0E61  0D37               	rlf	i1___fltol@f1+2,w
  8555     0E62  0D38               	rlf	i1___fltol@f1+3,w
  8556     0E63  00BE               	movwf	i1___fltol@exp1
  8557     0E64  083E               	movf	i1___fltol@exp1,w
  8558     0E65  1D03               	btfss	3,2
  8559     0E66  2E70               	goto	i1l2622
  8560     0E67                     i1l2618:
  8561     0E67  3000               	movlw	0
  8562     0E68  00B8               	movwf	?i1___fltol+3
  8563     0E69  3000               	movlw	0
  8564     0E6A  00B7               	movwf	?i1___fltol+2
  8565     0E6B  3000               	movlw	0
  8566     0E6C  00B6               	movwf	?i1___fltol+1
  8567     0E6D  3000               	movlw	0
  8568     0E6E  00B5               	movwf	?i1___fltol
  8569     0E6F  0008               	return
  8570     0E70                     i1l2622:
  8571     0E70  0835               	movf	i1___fltol@f1,w
  8572     0E71  00B9               	movwf	??i1___fltol
  8573     0E72  0836               	movf	i1___fltol@f1+1,w
  8574     0E73  00BA               	movwf	??i1___fltol+1
  8575     0E74  0837               	movf	i1___fltol@f1+2,w
  8576     0E75  00BB               	movwf	??i1___fltol+2
  8577     0E76  0838               	movf	i1___fltol@f1+3,w
  8578     0E77  00BC               	movwf	??i1___fltol+3
  8579     0E78  301F               	movlw	31
  8580     0E79                     u223_25:
  8581     0E79  36BC               	lsrf	??i1___fltol+3,f
  8582     0E7A  0CBB               	rrf	??i1___fltol+2,f
  8583     0E7B  0CBA               	rrf	??i1___fltol+1,f
  8584     0E7C  0CB9               	rrf	??i1___fltol,f
  8585     0E7D  0B89               	decfsz	9,f
  8586     0E7E  2E79               	goto	u223_25
  8587     0E7F  0839               	movf	??i1___fltol,w
  8588     0E80  00BD               	movwf	i1___fltol@sign1
  8589     0E81  17B7               	bsf	i1___fltol@f1+2,7
  8590     0E82  30FF               	movlw	255
  8591     0E83  05B5               	andwf	i1___fltol@f1,f
  8592     0E84  30FF               	movlw	255
  8593     0E85  05B6               	andwf	i1___fltol@f1+1,f
  8594     0E86  30FF               	movlw	255
  8595     0E87  05B7               	andwf	i1___fltol@f1+2,f
  8596     0E88  3000               	movlw	0
  8597     0E89  05B8               	andwf	i1___fltol@f1+3,f
  8598     0E8A  3096               	movlw	150
  8599     0E8B  02BE               	subwf	i1___fltol@exp1,f
  8600     0E8C  1FBE               	btfss	i1___fltol@exp1,7
  8601     0E8D  2EA1               	goto	i1l2640
  8602     0E8E  083E               	movf	i1___fltol@exp1,w
  8603     0E8F  3A80               	xorlw	128
  8604     0E90  3E97               	addlw	151
  8605     0E91  1C03               	btfss	3,0
  8606     0E92  2E67               	goto	i1l2618
  8607     0E93                     i1l2638:
  8608     0E93  3001               	movlw	1
  8609     0E94                     u226_25:
  8610     0E94  36B8               	lsrf	i1___fltol@f1+3,f
  8611     0E95  0CB7               	rrf	i1___fltol@f1+2,f
  8612     0E96  0CB6               	rrf	i1___fltol@f1+1,f
  8613     0E97  0CB5               	rrf	i1___fltol@f1,f
  8614     0E98  0B89               	decfsz	9,f
  8615     0E99  2E94               	goto	u226_25
  8616     0E9A  3001               	movlw	1
  8617     0E9B  00B9               	movwf	??i1___fltol
  8618     0E9C  0839               	movf	??i1___fltol,w
  8619     0E9D  07BE               	addwf	i1___fltol@exp1,f
  8620     0E9E  1903               	btfsc	3,2
  8621     0E9F  2EB2               	goto	i1l2648
  8622     0EA0  2E93               	goto	i1l2638
  8623     0EA1                     i1l2640:
  8624     0EA1  3020               	movlw	32
  8625     0EA2  023E               	subwf	i1___fltol@exp1,w
  8626     0EA3  1803               	btfsc	3,0
  8627     0EA4  2E67               	goto	i1l2618
  8628     0EA5                     i1l1133:
  8629     0EA5  083E               	movf	i1___fltol@exp1,w
  8630     0EA6  1903               	btfsc	3,2
  8631     0EA7  2EB2               	goto	i1l2648
  8632     0EA8  3001               	movlw	1
  8633     0EA9                     u229_25:
  8634     0EA9  35B5               	lslf	i1___fltol@f1,f
  8635     0EAA  0DB6               	rlf	i1___fltol@f1+1,f
  8636     0EAB  0DB7               	rlf	i1___fltol@f1+2,f
  8637     0EAC  0DB8               	rlf	i1___fltol@f1+3,f
  8638     0EAD  0B89               	decfsz	9,f
  8639     0EAE  2EA9               	goto	u229_25
  8640     0EAF  3001               	movlw	1
  8641     0EB0  02BE               	subwf	i1___fltol@exp1,f
  8642     0EB1  2EA5               	goto	i1l1133
  8643     0EB2                     i1l2648:
  8644     0EB2  083D               	movf	i1___fltol@sign1,w
  8645     0EB3  1903               	btfsc	3,2
  8646     0EB4  0008               	return
  8647     0EB5  09B5               	comf	i1___fltol@f1,f
  8648     0EB6  09B6               	comf	i1___fltol@f1+1,f
  8649     0EB7  09B7               	comf	i1___fltol@f1+2,f
  8650     0EB8  09B8               	comf	i1___fltol@f1+3,f
  8651     0EB9  0AB5               	incf	i1___fltol@f1,f
  8652     0EBA  1903               	skipnz
  8653     0EBB  0AB6               	incf	i1___fltol@f1+1,f
  8654     0EBC  1903               	skipnz
  8655     0EBD  0AB7               	incf	i1___fltol@f1+2,f
  8656     0EBE  1903               	skipnz
  8657     0EBF  0AB8               	incf	i1___fltol@f1+3,f
  8658     0EC0  0008               	return
  8659     0EC1                     __end_ofi1___fltol:
  8660                           
  8661                           	psect	text50
  8662     0737                     __ptext50:	
  8663 ;; *************** function ___xxtofl *****************
  8664 ;; Defined at:
  8665 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\xxtofl.c"
  8666 ;; Parameters:    Size  Location     Type
  8667 ;;  sign            1    wreg     unsigned char 
  8668 ;;  val             4   31[BANK0 ] long 
  8669 ;; Auto vars:     Size  Location     Type
  8670 ;;  sign            1   39[BANK0 ] unsigned char 
  8671 ;;  arg             4   41[BANK0 ] unsigned long 
  8672 ;;  exp             1   40[BANK0 ] unsigned char 
  8673 ;; Return value:  Size  Location     Type
  8674 ;;                  4   31[BANK0 ] unsigned char 
  8675 ;; Registers used:
  8676 ;;		wreg, status,2, status,0
  8677 ;; Tracked objects:
  8678 ;;		On entry : 1F/0
  8679 ;;		On exit  : 1F/0
  8680 ;;		Unchanged: 0/0
  8681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8682 ;;      Params:         0       4       0       0       0       0
  8683 ;;      Locals:         0       6       0       0       0       0
  8684 ;;      Temps:          0       4       0       0       0       0
  8685 ;;      Totals:         0      14       0       0       0       0
  8686 ;;Total ram usage:       14 bytes
  8687 ;; Hardware stack levels used: 1
  8688 ;; This function calls:
  8689 ;;		Nothing
  8690 ;; This function is called by:
  8691 ;;		_mede_height
  8692 ;; This function uses a non-reentrant model
  8693 ;;
  8694                           
  8695     0737                     ___xxtofl:	
  8696                           ;psect for function ___xxtofl
  8697                           
  8698                           
  8699                           ;incstack = 0
  8700                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  8701                           ;___xxtofl@sign stored from wreg
  8702     0737  00C7               	movwf	___xxtofl@sign
  8703     0738  0847               	movf	___xxtofl@sign,w
  8704     0739  1D03               	btfss	3,2
  8705     073A  1FC2               	btfss	___xxtofl@val+3,7
  8706     073B  2F4C               	goto	i1l2578
  8707     073C  093F               	comf	___xxtofl@val,w
  8708     073D  00C9               	movwf	___xxtofl@arg
  8709     073E  0940               	comf	___xxtofl@val+1,w
  8710     073F  00CA               	movwf	___xxtofl@arg+1
  8711     0740  0941               	comf	___xxtofl@val+2,w
  8712     0741  00CB               	movwf	___xxtofl@arg+2
  8713     0742  0942               	comf	___xxtofl@val+3,w
  8714     0743  00CC               	movwf	___xxtofl@arg+3
  8715     0744  0AC9               	incf	___xxtofl@arg,f
  8716     0745  1903               	skipnz
  8717     0746  0ACA               	incf	___xxtofl@arg+1,f
  8718     0747  1903               	skipnz
  8719     0748  0ACB               	incf	___xxtofl@arg+2,f
  8720     0749  1903               	skipnz
  8721     074A  0ACC               	incf	___xxtofl@arg+3,f
  8722     074B  2F54               	goto	i1l1373
  8723     074C                     i1l2578:
  8724     074C  0842               	movf	___xxtofl@val+3,w
  8725     074D  00CC               	movwf	___xxtofl@arg+3
  8726     074E  0841               	movf	___xxtofl@val+2,w
  8727     074F  00CB               	movwf	___xxtofl@arg+2
  8728     0750  0840               	movf	___xxtofl@val+1,w
  8729     0751  00CA               	movwf	___xxtofl@arg+1
  8730     0752  083F               	movf	___xxtofl@val,w
  8731     0753  00C9               	movwf	___xxtofl@arg
  8732     0754                     i1l1373:
  8733     0754  0842               	movf	___xxtofl@val+3,w
  8734     0755  0441               	iorwf	___xxtofl@val+2,w
  8735     0756  0440               	iorwf	___xxtofl@val+1,w
  8736     0757  043F               	iorwf	___xxtofl@val,w
  8737     0758  1D03               	skipz
  8738     0759  2F63               	goto	i1l2584
  8739     075A  3000               	movlw	0
  8740     075B  00C2               	movwf	?___xxtofl+3
  8741     075C  3000               	movlw	0
  8742     075D  00C1               	movwf	?___xxtofl+2
  8743     075E  3000               	movlw	0
  8744     075F  00C0               	movwf	?___xxtofl+1
  8745     0760  3000               	movlw	0
  8746     0761  00BF               	movwf	?___xxtofl
  8747     0762  0008               	return
  8748     0763                     i1l2584:
  8749     0763  3096               	movlw	150
  8750     0764  00C8               	movwf	___xxtofl@exp
  8751     0765                     i1l2588:
  8752     0765  30FE               	movlw	254
  8753     0766  054C               	andwf	___xxtofl@arg+3,w
  8754     0767  1903               	btfsc	3,2
  8755     0768  2F88               	goto	i1l1379
  8756     0769  3001               	movlw	1
  8757     076A  00C3               	movwf	??___xxtofl
  8758     076B  0843               	movf	??___xxtofl,w
  8759     076C  07C8               	addwf	___xxtofl@exp,f
  8760     076D  3001               	movlw	1
  8761     076E                     u211_25:
  8762     076E  36CC               	lsrf	___xxtofl@arg+3,f
  8763     076F  0CCB               	rrf	___xxtofl@arg+2,f
  8764     0770  0CCA               	rrf	___xxtofl@arg+1,f
  8765     0771  0CC9               	rrf	___xxtofl@arg,f
  8766     0772  0B89               	decfsz	9,f
  8767     0773  2F6E               	goto	u211_25
  8768     0774  2F65               	goto	i1l2588
  8769     0775                     i1l2590:
  8770     0775  3001               	movlw	1
  8771     0776  00C3               	movwf	??___xxtofl
  8772     0777  0843               	movf	??___xxtofl,w
  8773     0778  07C8               	addwf	___xxtofl@exp,f
  8774     0779  3001               	movlw	1
  8775     077A  07C9               	addwf	___xxtofl@arg,f
  8776     077B  3000               	movlw	0
  8777     077C  3DCA               	addwfc	___xxtofl@arg+1,f
  8778     077D  3000               	movlw	0
  8779     077E  3DCB               	addwfc	___xxtofl@arg+2,f
  8780     077F  3000               	movlw	0
  8781     0780  3DCC               	addwfc	___xxtofl@arg+3,f
  8782     0781  3001               	movlw	1
  8783     0782                     u213_25:
  8784     0782  36CC               	lsrf	___xxtofl@arg+3,f
  8785     0783  0CCB               	rrf	___xxtofl@arg+2,f
  8786     0784  0CCA               	rrf	___xxtofl@arg+1,f
  8787     0785  0CC9               	rrf	___xxtofl@arg,f
  8788     0786  0B89               	decfsz	9,f
  8789     0787  2F82               	goto	u213_25
  8790     0788                     i1l1379:
  8791     0788  30FF               	movlw	255
  8792     0789  054C               	andwf	___xxtofl@arg+3,w
  8793     078A  1903               	btfsc	3,2
  8794     078B  2F9A               	goto	i1l2598
  8795     078C  2F75               	goto	i1l2590
  8796     078D                     i1l2600:
  8797     078D  3002               	movlw	2
  8798     078E  0248               	subwf	___xxtofl@exp,w
  8799     078F  1C03               	btfss	3,0
  8800     0790  2F9C               	goto	i1l1386
  8801     0791  3001               	movlw	1
  8802     0792  02C8               	subwf	___xxtofl@exp,f
  8803     0793  3001               	movlw	1
  8804     0794                     u215_25:
  8805     0794  35C9               	lslf	___xxtofl@arg,f
  8806     0795  0DCA               	rlf	___xxtofl@arg+1,f
  8807     0796  0DCB               	rlf	___xxtofl@arg+2,f
  8808     0797  0DCC               	rlf	___xxtofl@arg+3,f
  8809     0798  0B89               	decfsz	9,f
  8810     0799  2F94               	goto	u215_25
  8811     079A                     i1l2598:
  8812     079A  1FCB               	btfss	___xxtofl@arg+2,7
  8813     079B  2F8D               	goto	i1l2600
  8814     079C                     i1l1386:
  8815     079C  1848               	btfsc	___xxtofl@exp,0
  8816     079D  2FA6               	goto	i1l1387
  8817     079E  30FF               	movlw	255
  8818     079F  05C9               	andwf	___xxtofl@arg,f
  8819     07A0  30FF               	movlw	255
  8820     07A1  05CA               	andwf	___xxtofl@arg+1,f
  8821     07A2  307F               	movlw	127
  8822     07A3  05CB               	andwf	___xxtofl@arg+2,f
  8823     07A4  30FF               	movlw	255
  8824     07A5  05CC               	andwf	___xxtofl@arg+3,f
  8825     07A6                     i1l1387:
  8826     07A6  1003               	clrc
  8827     07A7  0CC8               	rrf	___xxtofl@exp,f
  8828     07A8  0848               	movf	___xxtofl@exp,w
  8829     07A9  00C3               	movwf	??___xxtofl
  8830     07AA  01C4               	clrf	??___xxtofl+1
  8831     07AB  01C5               	clrf	??___xxtofl+2
  8832     07AC  01C6               	clrf	??___xxtofl+3
  8833     07AD  3018               	movlw	24
  8834     07AE                     u219_25:
  8835     07AE  35C3               	lslf	??___xxtofl,f
  8836     07AF  0DC4               	rlf	??___xxtofl+1,f
  8837     07B0  0DC5               	rlf	??___xxtofl+2,f
  8838     07B1  0DC6               	rlf	??___xxtofl+3,f
  8839     07B2  0B89               	decfsz	9,f
  8840     07B3  2FAE               	goto	u219_25
  8841     07B4  0843               	movf	??___xxtofl,w
  8842     07B5  04C9               	iorwf	___xxtofl@arg,f
  8843     07B6  0844               	movf	??___xxtofl+1,w
  8844     07B7  04CA               	iorwf	___xxtofl@arg+1,f
  8845     07B8  0845               	movf	??___xxtofl+2,w
  8846     07B9  04CB               	iorwf	___xxtofl@arg+2,f
  8847     07BA  0846               	movf	??___xxtofl+3,w
  8848     07BB  04CC               	iorwf	___xxtofl@arg+3,f
  8849     07BC  0847               	movf	___xxtofl@sign,w
  8850     07BD  1D03               	btfss	3,2
  8851     07BE  1FC2               	btfss	___xxtofl@val+3,7
  8852     07BF  2FC1               	goto	i1l2612
  8853     07C0  17CC               	bsf	___xxtofl@arg+3,7
  8854     07C1                     i1l2612:
  8855     07C1  084C               	movf	___xxtofl@arg+3,w
  8856     07C2  00C2               	movwf	?___xxtofl+3
  8857     07C3  084B               	movf	___xxtofl@arg+2,w
  8858     07C4  00C1               	movwf	?___xxtofl+2
  8859     07C5  084A               	movf	___xxtofl@arg+1,w
  8860     07C6  00C0               	movwf	?___xxtofl+1
  8861     07C7  0849               	movf	___xxtofl@arg,w
  8862     07C8  00BF               	movwf	?___xxtofl
  8863     07C9  0008               	return
  8864     07CA                     __end_of___xxtofl:
  8865                           
  8866                           	psect	text51
  8867     0046                     __ptext51:	
  8868 ;; *************** function ___flmul *****************
  8869 ;; Defined at:
  8870 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcmul.c"
  8871 ;; Parameters:    Size  Location     Type
  8872 ;;  b               4    0[BANK0 ] unsigned char 
  8873 ;;  a               4    4[BANK0 ] unsigned char 
  8874 ;; Auto vars:     Size  Location     Type
  8875 ;;  prod            4   15[BANK0 ] struct .
  8876 ;;  grs             4   10[BANK0 ] unsigned long 
  8877 ;;  temp            2   19[BANK0 ] struct .
  8878 ;;  bexp            1   14[BANK0 ] unsigned char 
  8879 ;;  aexp            1    9[BANK0 ] unsigned char 
  8880 ;;  sign            1    8[BANK0 ] unsigned char 
  8881 ;; Return value:  Size  Location     Type
  8882 ;;                  4    0[BANK0 ] unsigned char 
  8883 ;; Registers used:
  8884 ;;		wreg, status,2, status,0, pclath, cstack
  8885 ;; Tracked objects:
  8886 ;;		On entry : 1F/0
  8887 ;;		On exit  : 1F/0
  8888 ;;		Unchanged: 0/0
  8889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8890 ;;      Params:         0       8       0       0       0       0
  8891 ;;      Locals:         0      13       0       0       0       0
  8892 ;;      Temps:          5       0       0       0       0       0
  8893 ;;      Totals:         5      21       0       0       0       0
  8894 ;;Total ram usage:       26 bytes
  8895 ;; Hardware stack levels used: 1
  8896 ;; Hardware stack levels required when called: 1
  8897 ;; This function calls:
  8898 ;;		__Umul8_16
  8899 ;; This function is called by:
  8900 ;;		_mede_height
  8901 ;; This function uses a non-reentrant model
  8902 ;;
  8903                           
  8904     0046                     ___flmul:	
  8905                           ;psect for function ___flmul
  8906                           
  8907                           
  8908                           ;incstack = 0
  8909                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  8910     0046  0823               	movf	___flmul@b+3,w
  8911     0047  3980               	andlw	128
  8912     0048  00A8               	movwf	___flmul@sign
  8913     0049  3523               	lslf	___flmul@b+3,w
  8914     004A  00AE               	movwf	___flmul@bexp
  8915     004B  1BA2               	btfsc	___flmul@b+2,7
  8916     004C  142E               	bsf	___flmul@bexp,0
  8917     004D  082E               	movf	___flmul@bexp,w
  8918     004E  1903               	btfsc	3,2
  8919     004F  285D               	goto	i1l2448
  8920     0050  0A2E               	incf	___flmul@bexp,w
  8921     0051  1D03               	btfss	3,2
  8922     0052  285B               	goto	i1l2446
  8923     0053  3000               	movlw	0
  8924     0054  00A3               	movwf	___flmul@b+3
  8925     0055  3000               	movlw	0
  8926     0056  00A2               	movwf	___flmul@b+2
  8927     0057  3000               	movlw	0
  8928     0058  00A1               	movwf	___flmul@b+1
  8929     0059  3000               	movlw	0
  8930     005A  00A0               	movwf	___flmul@b
  8931     005B                     i1l2446:
  8932     005B  17A2               	bsf	___flmul@b+2,7
  8933     005C  2865               	goto	i1l2450
  8934     005D                     i1l2448:
  8935     005D  3000               	movlw	0
  8936     005E  00A3               	movwf	___flmul@b+3
  8937     005F  3000               	movlw	0
  8938     0060  00A2               	movwf	___flmul@b+2
  8939     0061  3000               	movlw	0
  8940     0062  00A1               	movwf	___flmul@b+1
  8941     0063  3000               	movlw	0
  8942     0064  00A0               	movwf	___flmul@b
  8943     0065                     i1l2450:
  8944     0065  0827               	movf	___flmul@a+3,w
  8945     0066  3980               	andlw	128
  8946     0067  00F9               	movwf	??___flmul
  8947     0068  0879               	movf	??___flmul,w
  8948     0069  06A8               	xorwf	___flmul@sign,f
  8949     006A  3527               	lslf	___flmul@a+3,w
  8950     006B  00A9               	movwf	___flmul@aexp
  8951     006C  1BA6               	btfsc	___flmul@a+2,7
  8952     006D  1429               	bsf	___flmul@aexp,0
  8953     006E  0829               	movf	___flmul@aexp,w
  8954     006F  1903               	btfsc	3,2
  8955     0070  287E               	goto	i1l2466
  8956     0071  0A29               	incf	___flmul@aexp,w
  8957     0072  1D03               	btfss	3,2
  8958     0073  287C               	goto	i1l2464
  8959     0074  3000               	movlw	0
  8960     0075  00A7               	movwf	___flmul@a+3
  8961     0076  3000               	movlw	0
  8962     0077  00A6               	movwf	___flmul@a+2
  8963     0078  3000               	movlw	0
  8964     0079  00A5               	movwf	___flmul@a+1
  8965     007A  3000               	movlw	0
  8966     007B  00A4               	movwf	___flmul@a
  8967     007C                     i1l2464:
  8968     007C  17A6               	bsf	___flmul@a+2,7
  8969     007D  2886               	goto	i1l2468
  8970     007E                     i1l2466:
  8971     007E  3000               	movlw	0
  8972     007F  00A7               	movwf	___flmul@a+3
  8973     0080  3000               	movlw	0
  8974     0081  00A6               	movwf	___flmul@a+2
  8975     0082  3000               	movlw	0
  8976     0083  00A5               	movwf	___flmul@a+1
  8977     0084  3000               	movlw	0
  8978     0085  00A4               	movwf	___flmul@a
  8979     0086                     i1l2468:
  8980     0086  0829               	movf	___flmul@aexp,w
  8981     0087  1D03               	btfss	3,2
  8982     0088  082E               	movf	___flmul@bexp,w
  8983     0089  1D03               	btfss	3,2
  8984     008A  2894               	goto	i1l2476
  8985     008B  3000               	movlw	0
  8986     008C  00A3               	movwf	?___flmul+3
  8987     008D  3000               	movlw	0
  8988     008E  00A2               	movwf	?___flmul+2
  8989     008F  3000               	movlw	0
  8990     0090  00A1               	movwf	?___flmul+1
  8991     0091  3000               	movlw	0
  8992     0092  00A0               	movwf	?___flmul
  8993     0093  0008               	return
  8994     0094                     i1l2476:
  8995     0094  0820               	movf	___flmul@b,w
  8996     0095  00F0               	movwf	__Umul8_16@multiplicand
  8997     0096  0826               	movf	___flmul@a+2,w
  8998     0097  318C  24E4  3180   	fcall	__Umul8_16
  8999     009A  0871               	movf	?__Umul8_16+1,w
  9000     009B  00B4               	movwf	___flmul@temp+1
  9001     009C  0870               	movf	?__Umul8_16,w
  9002     009D  00B3               	movwf	___flmul@temp
  9003     009E  0833               	movf	___flmul@temp,w
  9004     009F  00F9               	movwf	??___flmul
  9005     00A0  01FA               	clrf	??___flmul+1
  9006     00A1  01FB               	clrf	??___flmul+2
  9007     00A2  01FC               	clrf	??___flmul+3
  9008     00A3  087C               	movf	??___flmul+3,w
  9009     00A4  00AD               	movwf	___flmul@grs+3
  9010     00A5  087B               	movf	??___flmul+2,w
  9011     00A6  00AC               	movwf	___flmul@grs+2
  9012     00A7  087A               	movf	??___flmul+1,w
  9013     00A8  00AB               	movwf	___flmul@grs+1
  9014     00A9  0879               	movf	??___flmul,w
  9015     00AA  00AA               	movwf	___flmul@grs
  9016     00AB  0834               	movf	___flmul@temp+1,w
  9017     00AC  00F9               	movwf	??___flmul
  9018     00AD  01FA               	clrf	??___flmul+1
  9019     00AE  01FB               	clrf	??___flmul+2
  9020     00AF  01FC               	clrf	??___flmul+3
  9021     00B0  087C               	movf	??___flmul+3,w
  9022     00B1  00B2               	movwf	___flmul@prod+3
  9023     00B2  087B               	movf	??___flmul+2,w
  9024     00B3  00B1               	movwf	___flmul@prod+2
  9025     00B4  087A               	movf	??___flmul+1,w
  9026     00B5  00B0               	movwf	___flmul@prod+1
  9027     00B6  0879               	movf	??___flmul,w
  9028     00B7  00AF               	movwf	___flmul@prod
  9029     00B8  0821               	movf	___flmul@b+1,w
  9030     00B9  00F0               	movwf	__Umul8_16@multiplicand
  9031     00BA  0825               	movf	___flmul@a+1,w
  9032     00BB  318C  24E4  3180   	fcall	__Umul8_16
  9033     00BE  0871               	movf	?__Umul8_16+1,w
  9034     00BF  00B4               	movwf	___flmul@temp+1
  9035     00C0  0870               	movf	?__Umul8_16,w
  9036     00C1  00B3               	movwf	___flmul@temp
  9037     00C2  0833               	movf	___flmul@temp,w
  9038     00C3  00F9               	movwf	??___flmul
  9039     00C4  01FA               	clrf	??___flmul+1
  9040     00C5  01FB               	clrf	??___flmul+2
  9041     00C6  01FC               	clrf	??___flmul+3
  9042     00C7  0879               	movf	??___flmul,w
  9043     00C8  07AA               	addwf	___flmul@grs,f
  9044     00C9  087A               	movf	??___flmul+1,w
  9045     00CA  3DAB               	addwfc	___flmul@grs+1,f
  9046     00CB  087B               	movf	??___flmul+2,w
  9047     00CC  3DAC               	addwfc	___flmul@grs+2,f
  9048     00CD  087C               	movf	??___flmul+3,w
  9049     00CE  3DAD               	addwfc	___flmul@grs+3,f
  9050     00CF  0834               	movf	___flmul@temp+1,w
  9051     00D0  00F9               	movwf	??___flmul
  9052     00D1  01FA               	clrf	??___flmul+1
  9053     00D2  01FB               	clrf	??___flmul+2
  9054     00D3  01FC               	clrf	??___flmul+3
  9055     00D4  0879               	movf	??___flmul,w
  9056     00D5  07AF               	addwf	___flmul@prod,f
  9057     00D6  087A               	movf	??___flmul+1,w
  9058     00D7  3DB0               	addwfc	___flmul@prod+1,f
  9059     00D8  087B               	movf	??___flmul+2,w
  9060     00D9  3DB1               	addwfc	___flmul@prod+2,f
  9061     00DA  087C               	movf	??___flmul+3,w
  9062     00DB  3DB2               	addwfc	___flmul@prod+3,f
  9063     00DC  0822               	movf	___flmul@b+2,w
  9064     00DD  00F0               	movwf	__Umul8_16@multiplicand
  9065     00DE  0824               	movf	___flmul@a,w
  9066     00DF  318C  24E4  3180   	fcall	__Umul8_16
  9067     00E2  0871               	movf	?__Umul8_16+1,w
  9068     00E3  00B4               	movwf	___flmul@temp+1
  9069     00E4  0870               	movf	?__Umul8_16,w
  9070     00E5  00B3               	movwf	___flmul@temp
  9071     00E6  0833               	movf	___flmul@temp,w
  9072     00E7  00F9               	movwf	??___flmul
  9073     00E8  01FA               	clrf	??___flmul+1
  9074     00E9  01FB               	clrf	??___flmul+2
  9075     00EA  01FC               	clrf	??___flmul+3
  9076     00EB  0879               	movf	??___flmul,w
  9077     00EC  07AA               	addwf	___flmul@grs,f
  9078     00ED  087A               	movf	??___flmul+1,w
  9079     00EE  3DAB               	addwfc	___flmul@grs+1,f
  9080     00EF  087B               	movf	??___flmul+2,w
  9081     00F0  3DAC               	addwfc	___flmul@grs+2,f
  9082     00F1  087C               	movf	??___flmul+3,w
  9083     00F2  3DAD               	addwfc	___flmul@grs+3,f
  9084     00F3  0834               	movf	___flmul@temp+1,w
  9085     00F4  00F9               	movwf	??___flmul
  9086     00F5  01FA               	clrf	??___flmul+1
  9087     00F6  01FB               	clrf	??___flmul+2
  9088     00F7  01FC               	clrf	??___flmul+3
  9089     00F8  0879               	movf	??___flmul,w
  9090     00F9  07AF               	addwf	___flmul@prod,f
  9091     00FA  087A               	movf	??___flmul+1,w
  9092     00FB  3DB0               	addwfc	___flmul@prod+1,f
  9093     00FC  087B               	movf	??___flmul+2,w
  9094     00FD  3DB1               	addwfc	___flmul@prod+2,f
  9095     00FE  087C               	movf	??___flmul+3,w
  9096     00FF  3DB2               	addwfc	___flmul@prod+3,f
  9097     0100  3008               	movlw	8
  9098     0101                     u191_25:
  9099     0101  35AA               	lslf	___flmul@grs,f
  9100     0102  0DAB               	rlf	___flmul@grs+1,f
  9101     0103  0DAC               	rlf	___flmul@grs+2,f
  9102     0104  0DAD               	rlf	___flmul@grs+3,f
  9103     0105  0B89               	decfsz	9,f
  9104     0106  2901               	goto	u191_25
  9105     0107  0821               	movf	___flmul@b+1,w
  9106     0108  00F0               	movwf	__Umul8_16@multiplicand
  9107     0109  0824               	movf	___flmul@a,w
  9108     010A  318C  24E4  3180   	fcall	__Umul8_16
  9109     010D  0871               	movf	?__Umul8_16+1,w
  9110     010E  00B4               	movwf	___flmul@temp+1
  9111     010F  0870               	movf	?__Umul8_16,w
  9112     0110  00B3               	movwf	___flmul@temp
  9113     0111  0833               	movf	___flmul@temp,w
  9114     0112  07AA               	addwf	___flmul@grs,f
  9115     0113  0834               	movf	___flmul@temp+1,w
  9116     0114  3DAB               	addwfc	___flmul@grs+1,f
  9117     0115  3000               	movlw	0
  9118     0116  3DAC               	addwfc	___flmul@grs+2,f
  9119     0117  3DAD               	addwfc	___flmul@grs+3,f
  9120     0118  0820               	movf	___flmul@b,w
  9121     0119  00F0               	movwf	__Umul8_16@multiplicand
  9122     011A  0825               	movf	___flmul@a+1,w
  9123     011B  318C  24E4  3180   	fcall	__Umul8_16
  9124     011E  0871               	movf	?__Umul8_16+1,w
  9125     011F  00B4               	movwf	___flmul@temp+1
  9126     0120  0870               	movf	?__Umul8_16,w
  9127     0121  00B3               	movwf	___flmul@temp
  9128     0122  0833               	movf	___flmul@temp,w
  9129     0123  07AA               	addwf	___flmul@grs,f
  9130     0124  0834               	movf	___flmul@temp+1,w
  9131     0125  3DAB               	addwfc	___flmul@grs+1,f
  9132     0126  3000               	movlw	0
  9133     0127  3DAC               	addwfc	___flmul@grs+2,f
  9134     0128  3DAD               	addwfc	___flmul@grs+3,f
  9135     0129  3008               	movlw	8
  9136     012A                     u192_25:
  9137     012A  35AA               	lslf	___flmul@grs,f
  9138     012B  0DAB               	rlf	___flmul@grs+1,f
  9139     012C  0DAC               	rlf	___flmul@grs+2,f
  9140     012D  0DAD               	rlf	___flmul@grs+3,f
  9141     012E  0B89               	decfsz	9,f
  9142     012F  292A               	goto	u192_25
  9143     0130  0820               	movf	___flmul@b,w
  9144     0131  00F0               	movwf	__Umul8_16@multiplicand
  9145     0132  0824               	movf	___flmul@a,w
  9146     0133  318C  24E4  3180   	fcall	__Umul8_16
  9147     0136  0871               	movf	?__Umul8_16+1,w
  9148     0137  00B4               	movwf	___flmul@temp+1
  9149     0138  0870               	movf	?__Umul8_16,w
  9150     0139  00B3               	movwf	___flmul@temp
  9151     013A  0833               	movf	___flmul@temp,w
  9152     013B  07AA               	addwf	___flmul@grs,f
  9153     013C  0834               	movf	___flmul@temp+1,w
  9154     013D  3DAB               	addwfc	___flmul@grs+1,f
  9155     013E  3000               	movlw	0
  9156     013F  3DAC               	addwfc	___flmul@grs+2,f
  9157     0140  3DAD               	addwfc	___flmul@grs+3,f
  9158     0141  0821               	movf	___flmul@b+1,w
  9159     0142  00F0               	movwf	__Umul8_16@multiplicand
  9160     0143  0826               	movf	___flmul@a+2,w
  9161     0144  318C  24E4  3180   	fcall	__Umul8_16
  9162     0147  0871               	movf	?__Umul8_16+1,w
  9163     0148  00B4               	movwf	___flmul@temp+1
  9164     0149  0870               	movf	?__Umul8_16,w
  9165     014A  00B3               	movwf	___flmul@temp
  9166     014B  0833               	movf	___flmul@temp,w
  9167     014C  07AF               	addwf	___flmul@prod,f
  9168     014D  0834               	movf	___flmul@temp+1,w
  9169     014E  3DB0               	addwfc	___flmul@prod+1,f
  9170     014F  3000               	movlw	0
  9171     0150  3DB1               	addwfc	___flmul@prod+2,f
  9172     0151  3DB2               	addwfc	___flmul@prod+3,f
  9173     0152  0822               	movf	___flmul@b+2,w
  9174     0153  00F0               	movwf	__Umul8_16@multiplicand
  9175     0154  0825               	movf	___flmul@a+1,w
  9176     0155  318C  24E4  3180   	fcall	__Umul8_16
  9177     0158  0871               	movf	?__Umul8_16+1,w
  9178     0159  00B4               	movwf	___flmul@temp+1
  9179     015A  0870               	movf	?__Umul8_16,w
  9180     015B  00B3               	movwf	___flmul@temp
  9181     015C  0833               	movf	___flmul@temp,w
  9182     015D  07AF               	addwf	___flmul@prod,f
  9183     015E  0834               	movf	___flmul@temp+1,w
  9184     015F  3DB0               	addwfc	___flmul@prod+1,f
  9185     0160  3000               	movlw	0
  9186     0161  3DB1               	addwfc	___flmul@prod+2,f
  9187     0162  3DB2               	addwfc	___flmul@prod+3,f
  9188     0163  0822               	movf	___flmul@b+2,w
  9189     0164  00F0               	movwf	__Umul8_16@multiplicand
  9190     0165  0826               	movf	___flmul@a+2,w
  9191     0166  318C  24E4  3180   	fcall	__Umul8_16
  9192     0169  0871               	movf	?__Umul8_16+1,w
  9193     016A  00B4               	movwf	___flmul@temp+1
  9194     016B  0870               	movf	?__Umul8_16,w
  9195     016C  00B3               	movwf	___flmul@temp
  9196     016D  0833               	movf	___flmul@temp,w
  9197     016E  00F9               	movwf	??___flmul
  9198     016F  0834               	movf	___flmul@temp+1,w
  9199     0170  00FA               	movwf	??___flmul+1
  9200     0171  01FB               	clrf	??___flmul+2
  9201     0172  01FC               	clrf	??___flmul+3
  9202     0173  3008               	movlw	8
  9203     0174                     u193_25:
  9204     0174  35F9               	lslf	??___flmul,f
  9205     0175  0DFA               	rlf	??___flmul+1,f
  9206     0176  0DFB               	rlf	??___flmul+2,f
  9207     0177  0DFC               	rlf	??___flmul+3,f
  9208     0178  0B89               	decfsz	9,f
  9209     0179  2974               	goto	u193_25
  9210     017A  0879               	movf	??___flmul,w
  9211     017B  07AF               	addwf	___flmul@prod,f
  9212     017C  087A               	movf	??___flmul+1,w
  9213     017D  3DB0               	addwfc	___flmul@prod+1,f
  9214     017E  087B               	movf	??___flmul+2,w
  9215     017F  3DB1               	addwfc	___flmul@prod+2,f
  9216     0180  087C               	movf	??___flmul+3,w
  9217     0181  3DB2               	addwfc	___flmul@prod+3,f
  9218     0182  082D               	movf	___flmul@grs+3,w
  9219     0183  00F9               	movwf	??___flmul
  9220     0184  01FA               	clrf	??___flmul+1
  9221     0185  01FB               	clrf	??___flmul+2
  9222     0186  01FC               	clrf	??___flmul+3
  9223     0187  0879               	movf	??___flmul,w
  9224     0188  07AF               	addwf	___flmul@prod,f
  9225     0189  087A               	movf	??___flmul+1,w
  9226     018A  3DB0               	addwfc	___flmul@prod+1,f
  9227     018B  087B               	movf	??___flmul+2,w
  9228     018C  3DB1               	addwfc	___flmul@prod+2,f
  9229     018D  087C               	movf	??___flmul+3,w
  9230     018E  3DB2               	addwfc	___flmul@prod+3,f
  9231     018F  3008               	movlw	8
  9232     0190                     u194_25:
  9233     0190  35AA               	lslf	___flmul@grs,f
  9234     0191  0DAB               	rlf	___flmul@grs+1,f
  9235     0192  0DAC               	rlf	___flmul@grs+2,f
  9236     0193  0DAD               	rlf	___flmul@grs+3,f
  9237     0194  0B89               	decfsz	9,f
  9238     0195  2990               	goto	u194_25
  9239     0196  082E               	movf	___flmul@bexp,w
  9240     0197  0729               	addwf	___flmul@aexp,w
  9241     0198  00F9               	movwf	??___flmul
  9242     0199  01FA               	clrf	??___flmul+1
  9243     019A  0DFA               	rlf	??___flmul+1,f
  9244     019B  0879               	movf	??___flmul,w
  9245     019C  3E82               	addlw	130
  9246     019D  00B3               	movwf	___flmul@temp
  9247     019E  30FF               	movlw	255
  9248     019F  3D7A               	addwfc	??___flmul+1,w
  9249     01A0  00B4               	movwf	___flmul@temp+1
  9250     01A1                     i1l2528:
  9251     01A1  1BB1               	btfsc	___flmul@prod+2,7
  9252     01A2  29B8               	goto	i1l2530
  9253     01A3  3001               	movlw	1
  9254     01A4                     u195_25:
  9255     01A4  35AF               	lslf	___flmul@prod,f
  9256     01A5  0DB0               	rlf	___flmul@prod+1,f
  9257     01A6  0DB1               	rlf	___flmul@prod+2,f
  9258     01A7  0DB2               	rlf	___flmul@prod+3,f
  9259     01A8  0B89               	decfsz	9,f
  9260     01A9  29A4               	goto	u195_25
  9261     01AA  1BAD               	btfsc	___flmul@grs+3,7
  9262     01AB  142F               	bsf	___flmul@prod,0
  9263     01AC  3001               	movlw	1
  9264     01AD                     u197_25:
  9265     01AD  35AA               	lslf	___flmul@grs,f
  9266     01AE  0DAB               	rlf	___flmul@grs+1,f
  9267     01AF  0DAC               	rlf	___flmul@grs+2,f
  9268     01B0  0DAD               	rlf	___flmul@grs+3,f
  9269     01B1  0B89               	decfsz	9,f
  9270     01B2  29AD               	goto	u197_25
  9271     01B3  30FF               	movlw	255
  9272     01B4  07B3               	addwf	___flmul@temp,f
  9273     01B5  30FF               	movlw	255
  9274     01B6  3DB4               	addwfc	___flmul@temp+1,f
  9275     01B7  29A1               	goto	i1l2528
  9276     01B8                     i1l2530:
  9277     01B8  01A9               	clrf	___flmul@aexp
  9278     01B9  1FAD               	btfss	___flmul@grs+3,7
  9279     01BA  29D1               	goto	i1l2540
  9280     01BB  30FF               	movlw	255
  9281     01BC  052A               	andwf	___flmul@grs,w
  9282     01BD  00F9               	movwf	??___flmul
  9283     01BE  30FF               	movlw	255
  9284     01BF  052B               	andwf	___flmul@grs+1,w
  9285     01C0  00FA               	movwf	??___flmul+1
  9286     01C1  30FF               	movlw	255
  9287     01C2  052C               	andwf	___flmul@grs+2,w
  9288     01C3  00FB               	movwf	??___flmul+2
  9289     01C4  307F               	movlw	127
  9290     01C5  052D               	andwf	___flmul@grs+3,w
  9291     01C6  00FC               	movwf	??___flmul+3
  9292     01C7  087C               	movf	??___flmul+3,w
  9293     01C8  047B               	iorwf	??___flmul+2,w
  9294     01C9  047A               	iorwf	??___flmul+1,w
  9295     01CA  0479               	iorwf	??___flmul,w
  9296     01CB  1903               	skipnz
  9297     01CC  182F               	btfsc	___flmul@prod,0
  9298     01CD  29CF               	goto	i1l2536
  9299     01CE  29D1               	goto	i1l2540
  9300     01CF                     i1l2536:
  9301     01CF  01A9               	clrf	___flmul@aexp
  9302     01D0  0AA9               	incf	___flmul@aexp,f
  9303     01D1                     i1l2540:
  9304     01D1  0829               	movf	___flmul@aexp,w
  9305     01D2  1903               	btfsc	3,2
  9306     01D3  29FA               	goto	i1l2550
  9307     01D4  3001               	movlw	1
  9308     01D5  07AF               	addwf	___flmul@prod,f
  9309     01D6  3000               	movlw	0
  9310     01D7  3DB0               	addwfc	___flmul@prod+1,f
  9311     01D8  3000               	movlw	0
  9312     01D9  3DB1               	addwfc	___flmul@prod+2,f
  9313     01DA  3000               	movlw	0
  9314     01DB  3DB2               	addwfc	___flmul@prod+3,f
  9315     01DC  1C32               	btfss	___flmul@prod+3,0
  9316     01DD  29FA               	goto	i1l2550
  9317     01DE  082F               	movf	___flmul@prod,w
  9318     01DF  00F9               	movwf	??___flmul
  9319     01E0  0830               	movf	___flmul@prod+1,w
  9320     01E1  00FA               	movwf	??___flmul+1
  9321     01E2  0831               	movf	___flmul@prod+2,w
  9322     01E3  00FB               	movwf	??___flmul+2
  9323     01E4  0832               	movf	___flmul@prod+3,w
  9324     01E5  00FC               	movwf	??___flmul+3
  9325     01E6  3001               	movlw	1
  9326     01E7  00FD               	movwf	??___flmul+4
  9327     01E8                     u204_25:
  9328     01E8  37FC               	asrf	??___flmul+3,f
  9329     01E9  0CFB               	rrf	??___flmul+2,f
  9330     01EA  0CFA               	rrf	??___flmul+1,f
  9331     01EB  0CF9               	rrf	??___flmul,f
  9332     01EC  0BFD               	decfsz	??___flmul+4,f
  9333     01ED  29E8               	goto	u204_25
  9334     01EE  087C               	movf	??___flmul+3,w
  9335     01EF  00B2               	movwf	___flmul@prod+3
  9336     01F0  087B               	movf	??___flmul+2,w
  9337     01F1  00B1               	movwf	___flmul@prod+2
  9338     01F2  087A               	movf	??___flmul+1,w
  9339     01F3  00B0               	movwf	___flmul@prod+1
  9340     01F4  0879               	movf	??___flmul,w
  9341     01F5  00AF               	movwf	___flmul@prod
  9342     01F6  3001               	movlw	1
  9343     01F7  07B3               	addwf	___flmul@temp,f
  9344     01F8  3000               	movlw	0
  9345     01F9  3DB4               	addwfc	___flmul@temp+1,f
  9346     01FA                     i1l2550:
  9347     01FA  0834               	movf	___flmul@temp+1,w
  9348     01FB  3A80               	xorlw	128
  9349     01FC  00F9               	movwf	??___flmul
  9350     01FD  3080               	movlw	128
  9351     01FE  0279               	subwf	??___flmul,w
  9352     01FF  1D03               	skipz
  9353     0200  2A03               	goto	u205_25
  9354     0201  30FF               	movlw	255
  9355     0202  0233               	subwf	___flmul@temp,w
  9356     0203                     u205_25:
  9357     0203  1C03               	skipc
  9358     0204  2A0F               	goto	i1l2554
  9359     0205  307F               	movlw	127
  9360     0206  0020               	movlb	0	; select bank0
  9361     0207  00B2               	movwf	___flmul@prod+3
  9362     0208  3080               	movlw	128
  9363     0209  00B1               	movwf	___flmul@prod+2
  9364     020A  3000               	movlw	0
  9365     020B  00B0               	movwf	___flmul@prod+1
  9366     020C  3000               	movlw	0
  9367     020D  00AF               	movwf	___flmul@prod
  9368     020E  2A35               	goto	i1l1341
  9369     020F                     i1l2554:
  9370     020F  0020               	movlb	0	; select bank0
  9371     0210  0834               	movf	___flmul@temp+1,w
  9372     0211  3A80               	xorlw	128
  9373     0212  00F9               	movwf	??___flmul
  9374     0213  3080               	movlw	128
  9375     0214  0279               	subwf	??___flmul,w
  9376     0215  1D03               	skipz
  9377     0216  2A19               	goto	u206_25
  9378     0217  3001               	movlw	1
  9379     0218  0233               	subwf	___flmul@temp,w
  9380     0219                     u206_25:
  9381     0219  1803               	skipnc
  9382     021A  2A26               	goto	i1l2560
  9383     021B  3000               	movlw	0
  9384     021C  0020               	movlb	0	; select bank0
  9385     021D  00B2               	movwf	___flmul@prod+3
  9386     021E  3000               	movlw	0
  9387     021F  00B1               	movwf	___flmul@prod+2
  9388     0220  3000               	movlw	0
  9389     0221  00B0               	movwf	___flmul@prod+1
  9390     0222  3000               	movlw	0
  9391     0223  00AF               	movwf	___flmul@prod
  9392     0224  01A8               	clrf	___flmul@sign
  9393     0225  2A35               	goto	i1l1341
  9394     0226                     i1l2560:
  9395     0226  0020               	movlb	0	; select bank0
  9396     0227  0833               	movf	___flmul@temp,w
  9397     0228  00AE               	movwf	___flmul@bexp
  9398     0229  30FF               	movlw	255
  9399     022A  05AF               	andwf	___flmul@prod,f
  9400     022B  30FF               	movlw	255
  9401     022C  05B0               	andwf	___flmul@prod+1,f
  9402     022D  307F               	movlw	127
  9403     022E  05B1               	andwf	___flmul@prod+2,f
  9404     022F  3000               	movlw	0
  9405     0230  05B2               	andwf	___flmul@prod+3,f
  9406     0231  182E               	btfsc	___flmul@bexp,0
  9407     0232  17B1               	bsf	___flmul@prod+2,7
  9408     0233  362E               	lsrf	___flmul@bexp,w
  9409     0234  00B2               	movwf	___flmul@prod+3
  9410     0235                     i1l1341:
  9411     0235  0828               	movf	___flmul@sign,w
  9412     0236  00F9               	movwf	??___flmul
  9413     0237  0879               	movf	??___flmul,w
  9414     0238  04B2               	iorwf	___flmul@prod+3,f
  9415     0239  0832               	movf	___flmul@prod+3,w
  9416     023A  00A3               	movwf	?___flmul+3
  9417     023B  0831               	movf	___flmul@prod+2,w
  9418     023C  00A2               	movwf	?___flmul+2
  9419     023D  0830               	movf	___flmul@prod+1,w
  9420     023E  00A1               	movwf	?___flmul+1
  9421     023F  082F               	movf	___flmul@prod,w
  9422     0240  00A0               	movwf	?___flmul
  9423     0241  0008               	return
  9424     0242                     __end_of___flmul:
  9425                           
  9426                           	psect	text52
  9427     0CE4                     __ptext52:	
  9428 ;; *************** function __Umul8_16 *****************
  9429 ;; Defined at:
  9430 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul8_16.c"
  9431 ;; Parameters:    Size  Location     Type
  9432 ;;  multiplier      1    wreg     unsigned char 
  9433 ;;  multiplicand    1    0[COMMON] unsigned char 
  9434 ;; Auto vars:     Size  Location     Type
  9435 ;;  multiplier      1    8[COMMON] unsigned char 
  9436 ;;  word_mpld       2    6[COMMON] unsigned short 
  9437 ;;  product         2    4[COMMON] unsigned short 
  9438 ;; Return value:  Size  Location     Type
  9439 ;;                  2    0[COMMON] unsigned int 
  9440 ;; Registers used:
  9441 ;;		wreg, status,2, status,0
  9442 ;; Tracked objects:
  9443 ;;		On entry : 1F/0
  9444 ;;		On exit  : 1F/0
  9445 ;;		Unchanged: 1F/0
  9446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9447 ;;      Params:         2       0       0       0       0       0
  9448 ;;      Locals:         5       0       0       0       0       0
  9449 ;;      Temps:          2       0       0       0       0       0
  9450 ;;      Totals:         9       0       0       0       0       0
  9451 ;;Total ram usage:        9 bytes
  9452 ;; Hardware stack levels used: 1
  9453 ;; This function calls:
  9454 ;;		Nothing
  9455 ;; This function is called by:
  9456 ;;		___flmul
  9457 ;; This function uses a non-reentrant model
  9458 ;;
  9459                           
  9460     0CE4                     __Umul8_16:	
  9461                           ;psect for function __Umul8_16
  9462                           
  9463                           
  9464                           ;incstack = 0
  9465                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  9466                           ;__Umul8_16@multiplier stored from wreg
  9467     0CE4  00F8               	movwf	__Umul8_16@multiplier
  9468     0CE5  01F4               	clrf	__Umul8_16@product
  9469     0CE6  01F5               	clrf	__Umul8_16@product+1
  9470     0CE7  0870               	movf	__Umul8_16@multiplicand,w
  9471     0CE8  00F2               	movwf	??__Umul8_16
  9472     0CE9  01F3               	clrf	??__Umul8_16+1
  9473     0CEA  0872               	movf	??__Umul8_16,w
  9474     0CEB  00F6               	movwf	__Umul8_16@word_mpld
  9475     0CEC  0873               	movf	??__Umul8_16+1,w
  9476     0CED  00F7               	movwf	__Umul8_16@word_mpld+1
  9477     0CEE                     i1l2306:
  9478     0CEE  1C78               	btfss	__Umul8_16@multiplier,0
  9479     0CEF  2CF4               	goto	i1l1348
  9480     0CF0  0876               	movf	__Umul8_16@word_mpld,w
  9481     0CF1  07F4               	addwf	__Umul8_16@product,f
  9482     0CF2  0877               	movf	__Umul8_16@word_mpld+1,w
  9483     0CF3  3DF5               	addwfc	__Umul8_16@product+1,f
  9484     0CF4                     i1l1348:
  9485     0CF4  3001               	movlw	1
  9486     0CF5                     u157_25:
  9487     0CF5  35F6               	lslf	__Umul8_16@word_mpld,f
  9488     0CF6  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  9489     0CF7  0B89               	decfsz	9,f
  9490     0CF8  2CF5               	goto	u157_25
  9491     0CF9  1003               	clrc
  9492     0CFA  0CF8               	rrf	__Umul8_16@multiplier,f
  9493     0CFB  0878               	movf	__Umul8_16@multiplier,w
  9494     0CFC  1D03               	btfss	3,2
  9495     0CFD  2CEE               	goto	i1l2306
  9496     0CFE  0875               	movf	__Umul8_16@product+1,w
  9497     0CFF  00F1               	movwf	?__Umul8_16+1
  9498     0D00  0874               	movf	__Umul8_16@product,w
  9499     0D01  00F0               	movwf	?__Umul8_16
  9500     0D02  0008               	return
  9501     0D03                     __end_of__Umul8_16:
  9502                           
  9503                           	psect	text53
  9504     0B99                     __ptext53:	
  9505 ;; *************** function _TMR1_Reload *****************
  9506 ;; Defined at:
  9507 ;;		line 146 in file "mcc_generated_files/tmr1.c"
  9508 ;; Parameters:    Size  Location     Type
  9509 ;;		None
  9510 ;; Auto vars:     Size  Location     Type
  9511 ;;		None
  9512 ;; Return value:  Size  Location     Type
  9513 ;;                  1    wreg      void 
  9514 ;; Registers used:
  9515 ;;		wreg, status,2, status,0, pclath, cstack
  9516 ;; Tracked objects:
  9517 ;;		On entry : 1F/0
  9518 ;;		On exit  : 1F/0
  9519 ;;		Unchanged: 0/0
  9520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9521 ;;      Params:         0       0       0       0       0       0
  9522 ;;      Locals:         0       0       0       0       0       0
  9523 ;;      Temps:          0       0       0       0       0       0
  9524 ;;      Totals:         0       0       0       0       0       0
  9525 ;;Total ram usage:        0 bytes
  9526 ;; Hardware stack levels used: 1
  9527 ;; Hardware stack levels required when called: 1
  9528 ;; This function calls:
  9529 ;;		_TMR1_WriteTimer
  9530 ;; This function is called by:
  9531 ;;		_mede_height
  9532 ;; This function uses a non-reentrant model
  9533 ;;
  9534                           
  9535     0B99                     _TMR1_Reload:	
  9536                           ;psect for function _TMR1_Reload
  9537                           
  9538                           
  9539                           ;mcc_generated_files/tmr1.c: 148:     TMR1_WriteTimer(timer1ReloadVal);
  9540                           
  9541                           ;incstack = 0
  9542                           ; Regs used in _TMR1_Reload: [wreg+status,2+status,0+pclath+cstack]
  9543     0B99  0021               	movlb	1	; select bank1
  9544     0B9A  0844               	movf	(_timer1ReloadVal+1)^(0+128),w	;volatile
  9545     0B9B  00F1               	movwf	TMR1_WriteTimer@timerVal+1
  9546     0B9C  0843               	movf	_timer1ReloadVal^(0+128),w	;volatile
  9547     0B9D  00F0               	movwf	TMR1_WriteTimer@timerVal
  9548     0B9E  318C  241D         	fcall	_TMR1_WriteTimer
  9549     0BA0  0008               	return
  9550     0BA1                     __end_of_TMR1_Reload:
  9551                           
  9552                           	psect	text54
  9553     0C1D                     __ptext54:	
  9554 ;; *************** function _TMR1_WriteTimer *****************
  9555 ;; Defined at:
  9556 ;;		line 124 in file "mcc_generated_files/tmr1.c"
  9557 ;; Parameters:    Size  Location     Type
  9558 ;;  timerVal        2    0[COMMON] unsigned short 
  9559 ;; Auto vars:     Size  Location     Type
  9560 ;;		None
  9561 ;; Return value:  Size  Location     Type
  9562 ;;                  1    wreg      void 
  9563 ;; Registers used:
  9564 ;;		wreg
  9565 ;; Tracked objects:
  9566 ;;		On entry : 1F/1
  9567 ;;		On exit  : 1F/0
  9568 ;;		Unchanged: 0/0
  9569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9570 ;;      Params:         2       0       0       0       0       0
  9571 ;;      Locals:         0       0       0       0       0       0
  9572 ;;      Temps:          0       0       0       0       0       0
  9573 ;;      Totals:         2       0       0       0       0       0
  9574 ;;Total ram usage:        2 bytes
  9575 ;; Hardware stack levels used: 1
  9576 ;; This function calls:
  9577 ;;		Nothing
  9578 ;; This function is called by:
  9579 ;;		_TMR1_Reload
  9580 ;; This function uses a non-reentrant model
  9581 ;;
  9582                           
  9583     0C1D                     _TMR1_WriteTimer:	
  9584                           ;psect for function _TMR1_WriteTimer
  9585                           
  9586                           
  9587                           ;mcc_generated_files/tmr1.c: 124: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 125: {;mcc_generated_files/tmr1.c: 126:     if (T1CONbits.nT1SYNC == 1)
  9588                           
  9589                           ;incstack = 0
  9590                           ; Regs used in _TMR1_WriteTimer: [wreg]
  9591     0C1D  0020               	movlb	0	; select bank0
  9592     0C1E  1D18               	btfss	24,2	;volatile
  9593     0C1F  2C27               	goto	i1l2300
  9594                           
  9595                           ;mcc_generated_files/tmr1.c: 127:     {;mcc_generated_files/tmr1.c: 129:         T1CONbi
      +                          ts.TMR1ON = 0;
  9596     0C20  1018               	bcf	24,0	;volatile
  9597                           
  9598                           ;mcc_generated_files/tmr1.c: 132:         TMR1H = (uint8_t)(timerVal >> 8);
  9599     0C21  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  9600     0C22  0097               	movwf	23	;volatile
  9601                           
  9602                           ;mcc_generated_files/tmr1.c: 133:         TMR1L = (uint8_t)timerVal;
  9603     0C23  0870               	movf	TMR1_WriteTimer@timerVal,w
  9604     0C24  0096               	movwf	22	;volatile
  9605                           
  9606                           ;mcc_generated_files/tmr1.c: 136:         T1CONbits.TMR1ON =1;
  9607     0C25  1418               	bsf	24,0	;volatile
  9608                           
  9609                           ;mcc_generated_files/tmr1.c: 137:     }
  9610     0C26  0008               	return
  9611     0C27                     i1l2300:
  9612                           
  9613                           ;mcc_generated_files/tmr1.c: 139:     {;mcc_generated_files/tmr1.c: 141:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
  9614     0C27  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  9615     0C28  0097               	movwf	23	;volatile
  9616                           
  9617                           ;mcc_generated_files/tmr1.c: 142:         TMR1L = (uint8_t)timerVal;
  9618     0C29  0870               	movf	TMR1_WriteTimer@timerVal,w
  9619     0C2A  0096               	movwf	22	;volatile
  9620     0C2B  0008               	return
  9621     0C2C                     __end_of_TMR1_WriteTimer:
  9622                           
  9623                           	psect	text55
  9624     0C64                     __ptext55:	
  9625 ;; *************** function _TMR1_ReadTimer *****************
  9626 ;; Defined at:
  9627 ;;		line 109 in file "mcc_generated_files/tmr1.c"
  9628 ;; Parameters:    Size  Location     Type
  9629 ;;		None
  9630 ;; Auto vars:     Size  Location     Type
  9631 ;;  readVal         2    7[COMMON] unsigned short 
  9632 ;;  readValLow      1   10[COMMON] unsigned char 
  9633 ;;  readValHigh     1    9[COMMON] unsigned char 
  9634 ;; Return value:  Size  Location     Type
  9635 ;;                  2    0[COMMON] unsigned short 
  9636 ;; Registers used:
  9637 ;;		wreg
  9638 ;; Tracked objects:
  9639 ;;		On entry : 1F/0
  9640 ;;		On exit  : 1F/0
  9641 ;;		Unchanged: 0/0
  9642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9643 ;;      Params:         2       0       0       0       0       0
  9644 ;;      Locals:         4       0       0       0       0       0
  9645 ;;      Temps:          5       0       0       0       0       0
  9646 ;;      Totals:        11       0       0       0       0       0
  9647 ;;Total ram usage:       11 bytes
  9648 ;; Hardware stack levels used: 1
  9649 ;; This function calls:
  9650 ;;		Nothing
  9651 ;; This function is called by:
  9652 ;;		_mede_height
  9653 ;; This function uses a non-reentrant model
  9654 ;;
  9655                           
  9656     0C64                     _TMR1_ReadTimer:	
  9657                           ;psect for function _TMR1_ReadTimer
  9658                           
  9659                           
  9660                           ;mcc_generated_files/tmr1.c: 111:     uint16_t readVal;;mcc_generated_files/tmr1.c: 112:
      +                               uint8_t readValHigh;;mcc_generated_files/tmr1.c: 113:     uint8_t readValLow;;mcc_g
      +                          enerated_files/tmr1.c: 116:     readValLow = TMR1L;
  9661                           
  9662                           ;incstack = 0
  9663                           ; Regs used in _TMR1_ReadTimer: [wreg]
  9664     0C64  0816               	movf	22,w	;volatile
  9665     0C65  00FA               	movwf	TMR1_ReadTimer@readValLow
  9666                           
  9667                           ;mcc_generated_files/tmr1.c: 117:     readValHigh = TMR1H;
  9668     0C66  0817               	movf	23,w	;volatile
  9669     0C67  00F9               	movwf	TMR1_ReadTimer@readValHigh
  9670                           
  9671                           ;mcc_generated_files/tmr1.c: 119:     readVal = ((uint16_t)readValHigh << 8) | readValLo
      +                          w;
  9672     0C68  087A               	movf	TMR1_ReadTimer@readValLow,w
  9673     0C69  00F2               	movwf	??_TMR1_ReadTimer
  9674     0C6A  01F3               	clrf	??_TMR1_ReadTimer+1
  9675     0C6B  0879               	movf	TMR1_ReadTimer@readValHigh,w
  9676     0C6C  00F4               	movwf	??_TMR1_ReadTimer+2
  9677     0C6D  01F5               	clrf	??_TMR1_ReadTimer+3
  9678     0C6E  0874               	movf	??_TMR1_ReadTimer+2,w
  9679     0C6F  00F5               	movwf	??_TMR1_ReadTimer+3
  9680     0C70  01F4               	clrf	??_TMR1_ReadTimer+2
  9681     0C71  0872               	movf	??_TMR1_ReadTimer,w
  9682     0C72  0474               	iorwf	??_TMR1_ReadTimer+2,w
  9683     0C73  00F7               	movwf	TMR1_ReadTimer@readVal
  9684     0C74  0873               	movf	??_TMR1_ReadTimer+1,w
  9685     0C75  0475               	iorwf	??_TMR1_ReadTimer+3,w
  9686     0C76  00F8               	movwf	TMR1_ReadTimer@readVal+1
  9687                           
  9688                           ;mcc_generated_files/tmr1.c: 121:     return readVal;
  9689     0C77  0878               	movf	TMR1_ReadTimer@readVal+1,w
  9690     0C78  00F1               	movwf	?_TMR1_ReadTimer+1
  9691     0C79  0877               	movf	TMR1_ReadTimer@readVal,w
  9692     0C7A  00F0               	movwf	?_TMR1_ReadTimer
  9693     0C7B  0008               	return
  9694     0C7C                     __end_of_TMR1_ReadTimer:
  9695                           
  9696                           	psect	text56
  9697     07FF                     __ptext56:	
  9698 ;; *************** function _PIN_MANAGER_IOC *****************
  9699 ;; Defined at:
  9700 ;;		line 98 in file "mcc_generated_files/pin_manager.c"
  9701 ;; Parameters:    Size  Location     Type
  9702 ;;		None
  9703 ;; Auto vars:     Size  Location     Type
  9704 ;;		None
  9705 ;; Return value:  Size  Location     Type
  9706 ;;                  1    wreg      void 
  9707 ;; Registers used:
  9708 ;;		None
  9709 ;; Tracked objects:
  9710 ;;		On entry : 0/0
  9711 ;;		On exit  : 0/0
  9712 ;;		Unchanged: 0/0
  9713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9714 ;;      Params:         0       0       0       0       0       0
  9715 ;;      Locals:         0       0       0       0       0       0
  9716 ;;      Temps:          0       0       0       0       0       0
  9717 ;;      Totals:         0       0       0       0       0       0
  9718 ;;Total ram usage:        0 bytes
  9719 ;; Hardware stack levels used: 1
  9720 ;; This function calls:
  9721 ;;		Nothing
  9722 ;; This function is called by:
  9723 ;;		_INTERRUPT_InterruptManager
  9724 ;; This function uses a non-reentrant model
  9725 ;;
  9726                           
  9727     07FF                     _PIN_MANAGER_IOC:	
  9728                           ;psect for function _PIN_MANAGER_IOC
  9729                           
  9730                           
  9731                           ;incstack = 0
  9732                           ; Regs used in _PIN_MANAGER_IOC: []
  9733     07FF  0008               	return
  9734     0800                     __end_of_PIN_MANAGER_IOC:
  9735     007E                     btemp	set	126	;btemp
  9736     007E                     int$flags	set	126
  9737     007E                     wtemp0	set	126
  9738                           
  9739                           	psect	config
  9740                           
  9741                           ;Config register CONFIG1 @ 0x8007
  9742                           ;	Oscillator Selection
  9743                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  9744                           ;	Watchdog Timer Enable
  9745                           ;	WDTE = OFF, WDT disabled
  9746                           ;	Power-up Timer Enable
  9747                           ;	PWRTE = OFF, PWRT disabled
  9748                           ;	MCLR Pin Function Select
  9749                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  9750                           ;	Flash Program Memory Code Protection
  9751                           ;	CP = OFF, Program memory code protection is disabled
  9752                           ;	Data Memory Code Protection
  9753                           ;	CPD = OFF, Data memory code protection is disabled
  9754                           ;	Brown-out Reset Enable
  9755                           ;	BOREN = ON, Brown-out Reset enabled
  9756                           ;	Clock Out Enable
  9757                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  9758                           ;	Internal/External Switchover
  9759                           ;	IESO = ON, Internal/External Switchover mode is enabled
  9760                           ;	Fail-Safe Clock Monitor Enable
  9761                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  9762     8007                     	org	32775
  9763     8007  3FE4               	dw	16356
  9764                           
  9765                           ;Config register CONFIG2 @ 0x8008
  9766                           ;	Flash Memory Self-Write Protection
  9767                           ;	WRT = OFF, Write protection off
  9768                           ;	PLL Enable
  9769                           ;	PLLEN = OFF, 4x PLL disabled
  9770                           ;	Stack Overflow/Underflow Reset Enable
  9771                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  9772                           ;	Brown-out Reset Voltage Selection
  9773                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  9774                           ;	In-Circuit Debugger Mode
  9775                           ;	DEBUG = 0x1, unprogrammed default
  9776                           ;	Low-Voltage Programming Enable
  9777                           ;	LVP = ON, Low-voltage programming enabled
  9778     8008                     	org	32776
  9779     8008  3EFF               	dw	16127

Data Sizes:
    Strings     0
    Constant    204
    Data        19
    BSS         68
    Persistent  40
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     51      80
    BANK1            80     34      79
    BANK2            80      0      21
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), NULL(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), NULL(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), NULL(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    TMR1_GateInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> mede_height(), TMR1_DefaultGateInterruptHandler(), NULL(), 

    TMR1_SetGateInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> mede_height(), TMR1_DefaultGateInterruptHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _mede_height->___flmul
    i1___fltol->___flmul
    ___flmul->__Umul8_16
    _TMR1_Reload->_TMR1_WriteTimer

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _TMR1_GATE_ISR->_mede_height
    _mede_height->___xxtofl
    i1___fltol->___flmul
    ___xxtofl->i1___fltol

Critical Paths under _main in BANK1

    _setaPorta->_daUmPasso
    _fluxpos->_daUmPasso
    _daUmPasso->_definePassoMotor
    _envia_Tx->___fltol
    _controlchoose->_pwmcontrol
    _pwmcontrol->___atdiv
    ___atdiv->___tmul
    _fluxcontrol->___tmul
    _analisa_Rx->_EPWM1_LoadDutyValue
    _TMR1_Initialize->_TMR1_SetGateInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    5463
                                             33 BANK1      1     1      0
                  _ADC_GetConversion
                        _EUSART_Read
                 _EUSART_is_rx_ready
                  _SYSTEM_Initialize
                     _TMR0_ReadTimer
       _TMR1_SetGateInterruptHandler
                     _TMR4_StopTimer
            _TMR6_LoadPeriodRegister
                    _TMR6_WriteTimer
                         _analisa_Rx
                      _controlchoose
                           _envia_Tx
                            _fluxpos
                          _setaPorta
 ---------------------------------------------------------------------------------
 (1) _setaPorta                                            1     1      0     306
                                              4 BANK1      1     1      0
               _CMP1_GetOutputStatus
                          _daUmPasso
 ---------------------------------------------------------------------------------
 (2) _CMP1_GetOutputStatus                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _fluxpos                                              0     0      0     306
                          _daUmPasso
 ---------------------------------------------------------------------------------
 (2) _daUmPasso                                            1     1      0     306
                                              3 BANK1      1     1      0
                   _definePassoMotor
 ---------------------------------------------------------------------------------
 (3) _definePassoMotor                                     3     2      1     240
                                              0 BANK1      3     2      1
 ---------------------------------------------------------------------------------
 (1) _envia_Tx                                             0     0      0     427
                       _EUSART_Write
                            ___fltol
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     405
                                              0 BANK1     10     6      4
 ---------------------------------------------------------------------------------
 (2) _EUSART_Write                                         1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _controlchoose                                        0     0      0    3421
                    _TMR4_StartTimer
                        _fluxcontrol
                         _pwmcontrol
 ---------------------------------------------------------------------------------
 (2) _pwmcontrol                                          12    12      0    2281
                                             21 BANK1     12    12      0
                _EPWM1_LoadDutyValue
                            ___atdiv
                            ___lwdiv
                             ___tmul
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     414
                                              0 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (3) ___atdiv                                             12     6      6     452
                                              9 BANK1     12     6      6
                             ___tmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _fluxcontrol                                          6     6      0    1140
                                              9 BANK1      6     6      0
                             ___tmul
 ---------------------------------------------------------------------------------
 (3) ___tmul                                               9     3      6    1140
                                              0 BANK1      9     3      6
 ---------------------------------------------------------------------------------
 (2) _TMR4_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _analisa_Rx                                           0     0      0     272
                _EPWM1_LoadDutyValue
 ---------------------------------------------------------------------------------
 (3) _EPWM1_LoadDutyValue                                  4     2      2     272
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (1) _TMR6_WriteTimer                                      1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _TMR6_LoadPeriodRegister                              1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _TMR4_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR0_ReadTimer                                       1     1      0      23
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     468
                     _ADC_Initialize
                    _CMP1_Initialize
                     _DAC_Initialize
                   _EPWM1_Initialize
                  _EUSART_Initialize
                     _FVR_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
                    _TMR6_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     174
       _TMR1_SetGateInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetGateInterruptHandler                         2     0      2     174
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     294
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _EPWM1_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DAC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CMP1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_is_rx_ready                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Read                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion                                    4     2      2      22
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0    3622
                    _PIN_MANAGER_IOC
                      _TMR1_GATE_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR1_GATE_ISR                                        0     0      0    3622
                                NULL *
   _TMR1_DefaultGateInterruptHandler *
                        _mede_height *
 ---------------------------------------------------------------------------------
 (6) _mede_height                                          6     6      0    3622
                                             45 BANK0      6     6      0
                     _TMR1_ReadTimer
                        _TMR1_Reload
                            ___flmul
                           ___xxtofl
                          i1___fltol
                          i1___lwdiv
 ---------------------------------------------------------------------------------
 (7) i1___lwdiv                                            8     4      4     214
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (7) i1___fltol                                           10     6      4     281
                                             21 BANK0     10     6      4
                            ___flmul (ARG)
                          i1___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (7) ___xxtofl                                            14    10      4     474
                                             31 BANK0     14    10      4
                          i1___fltol (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flmul                                             26    18      8    2418
                                              9 COMMON     5     5      0
                                              0 BANK0     21    13      8
                          __Umul8_16
                          i1___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (8) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (7) _TMR1_Reload                                          0     0      0     166
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (8) _TMR1_WriteTimer                                      2     0      2     166
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (7) _TMR1_ReadTimer                                      11     9      2      69
                                              0 COMMON    11     9      2
 ---------------------------------------------------------------------------------
 (6) _TMR1_DefaultGateInterruptHandler                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _PIN_MANAGER_IOC                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion
   _EUSART_Read
   _EUSART_is_rx_ready
   _SYSTEM_Initialize
     _ADC_Initialize
     _CMP1_Initialize
     _DAC_Initialize
     _EPWM1_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _FVR_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
     _TMR1_Initialize
       _TMR1_SetGateInterruptHandler
     _TMR2_Initialize
     _TMR4_Initialize
     _TMR6_Initialize
     _WDT_Initialize
   _TMR0_ReadTimer
   _TMR1_SetGateInterruptHandler
   _TMR4_StopTimer
   _TMR6_LoadPeriodRegister
   _TMR6_WriteTimer
   _analisa_Rx
     _EPWM1_LoadDutyValue
   _controlchoose
     _TMR4_StartTimer
     _fluxcontrol
       ___tmul
     _pwmcontrol
       _EPWM1_LoadDutyValue
       ___atdiv
         ___tmul (ARG)
       ___lwdiv
       ___tmul
   _envia_Tx
     _EUSART_Write
     ___fltol
   _fluxpos
     _daUmPasso
       _definePassoMotor
   _setaPorta
     _CMP1_GetOutputStatus
     _daUmPasso

 _INTERRUPT_InterruptManager (ROOT)
   _PIN_MANAGER_IOC
   _TMR1_GATE_ISR
     NULL(Fake) *
     _TMR1_DefaultGateInterruptHandler *
     _mede_height *
       _TMR1_ReadTimer
       _TMR1_Reload
         _TMR1_WriteTimer
       ___flmul
         __Umul8_16
         i1___lwdiv (ARG)
       ___xxtofl
         i1___fltol (ARG)
           ___flmul (ARG)
           i1___lwdiv (ARG)
       i1___fltol
       i1___lwdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      C2       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     33      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     22      4F       8       98.8%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      15      10       26.2%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      C2      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Tue Sep 10 16:38:31 2024

                            ??_CMP1_Initialize 00CD                               ___atdiv@quotient 00DF  
                                           _dc 00BB                         __end_of_FVR_Initialize 0B51  
                              _timer0ReloadVal 0069                            __Umul8_16@word_mpld 0076  
                                          l240 0C03                                            l333 0C8E  
                                          l247 0BD2                                            l615 0E14  
                                          l712 043D                                            l633 0E1F  
                                          l609 0E10                                            l618 0E16  
                                          l723 032B                                            l627 0E1B  
                                          l655 0E3C                                            l639 0E33  
                                          l584 0CC3                                            l649 0E38  
                                          l658 0E3E                                            l667 0E43  
                                          l599 0E0B                                            l687 0E00  
                                          _PR2 001B                                            _PR4 0416  
                                          _PR6 041D                                _timer1ReloadVal 00C3  
                                          _kdf 012C                                            _kdp 0123  
                                          _kip 0126                                            _kpf 006A  
                                          _vRx 00BD                                            _vTx 00BF  
                                          _kpp 0129                 ?_EUSART_SetFramingErrorHandler 00CD  
                                 i1___fltol@f1 0035                                   ?_mede_height 0070  
                              _TMR2_Initialize 0BC9                                            wreg 0009  
                                 ___flmul@aexp 0029                                   ___flmul@bexp 002E  
     __end_of_TMR1_DefaultGateInterruptHandler 07FF             ??_TMR1_DefaultGateInterruptHandler 0070  
            ?_TMR1_DefaultGateInterruptHandler 0070               _TMR1_DefaultGateInterruptHandler 07FE  
                                 ___flmul@sign 0028                                   ___flmul@temp 0033  
                                 ___flmul@prod 002F                                   ?_EUSART_Read 0070  
                                 ___fltol@exp1 00D6                                           l1133 0F06  
                                         l1049 0F2F                                           l3010 0512  
                                         l3002 0C43                                           l3006 0C4A  
                                         l3018 0532                                           l3026 0544  
                                         l2402 0F85                                           l3044 0592  
                                         l3036 057E                                           l3028 0547  
                                         l2340 0E2F                                           l3124 06B5  
                                         l3116 06AB                                           l2424 07F0  
                                         l2416 07D2                                           l3136 06CB  
                                         l3058 05C6                                           l3066 05CD  
                                         l2354 0D4D                                           l2418 07DE  
                                         l2346 0E49                                           l2338 0E21  
                                         l3138 06D6                                           l3146 06C1  
                                         l2428 07F9                                           l2348 0E57  
                                         l3172 070A                                           l3148 06E8  
                                         l3156 06F5                                           l2358 0D55  
                                         l2384 0F4A                                           l2376 0F3D  
                                         l2800 0D10                                           l3192 0731  
                                         l3184 0721                                           l2394 0F70  
                                         l2386 0F57                                           l2820 02B0  
                                         l2812 026D                                           l2804 0D17  
                                         l2398 0F7A                                           l2814 0278  
                                         l2910 0EF4                                           l2806 0D1D  
                                         l2832 0333                                           l2824 02C2  
                                         l2920 0F13                                           l2912 0F02  
                                         l2850 03B1                                           l2842 0368  
                                         l2834 0344                                           l2818 02A9  
                                         l2852 03BC                                           l2836 034F  
                                         l2828 0328                                           l2838 0356  
                                         l2864 0419                                           l2856 0405  
                                         l2946 0C0D                                           l2866 0424  
                                         l2858 0409                                           l2890 0EC8  
                                         l2868 042B                                           l2894 0ED1  
                                         l2990 0DE8                                           l2976 0CAF  
                                         l2994 0DF4                                           l2986 0DDC  
                                         _LATA 010C                                           _LATB 010D  
                                         u3107 0CBD                                           u3117 0C89  
                                         u2431 0250                                           u2432 0251  
                                         u2433 025A                                           u2434 025B  
                                         u1635 0D56                                           u2531 0385  
                                         u1715 0F58                                           u2532 0386  
                                         u1645 0D5C                                           u2533 038F  
                                         u1725 0F67                                           u1805 07E9  
                                         u2534 0390                                           u1735 0F71  
                                         u1815 07F1                                           u2625 0EDA  
                                         u3097 071D                                           u1595 0CD9  
                                         u2485 02EB                                           u2805 0DFA  
                                         u1695 0F4D                                           u1775 07D5  
                                         u2655 0EF5                                           u1795 07DF  
                                         u2940 06A9                                           u2685 0F0A  
                                         u2775 0DD6                                           u2785 0DE2  
                                         u2795 0DEE                                           _TMR0 0015  
                                         _TMR2 001A                                           _TMR4 0415  
                                         _TMR6 041C                                           _WPUA 020C  
                                         _WPUB 020D                              ??_TMR6_WriteTimer 00CD  
                ?_TMR1_SetGateInterruptHandler 00CD                                           _main 0697  
                                         _flux 005B                                           fsr0h 0005  
                                         fsr1h 0007                                           indf0 0000  
                                         fsr0l 0004                                           indf1 0001  
                                         fsr1l 0006                                           btemp 007E  
                                         start 0019                          ??_EPWM1_LoadDutyValue 00CF  
                      __end_of_TMR0_Initialize 0BE4                                ?_FVR_Initialize 0070  
                                ?_EUSART_Write 0070                  __end_of_OSCILLATOR_Initialize 0B99  
                                ___fltol@sign1 00D5                                          ?_main 0070  
                              __end_of___atdiv 0F8C                                __end_of___flmul 0242  
                              __end_of___fltol 0F22                                          _T1CON 0018  
                                        _T2CON 001C                                          _T4CON 0417  
                                        _T6CON 041E                                __end_of___lwdiv 07FE  
                                        i1l180 0017                                          i1l174 000D  
                                        _RCREG 0199                                          _RCSTA 019D  
                                        _TMR1H 0017                                          _TMR1L 0016  
                                        _TRISA 008C                                          _TRISB 008D  
                                 ?_fluxcontrol 0070                                          _TXREG 019A  
                                        _TXSTA 019E                                _TMR4_Initialize 0BE4  
                      __end_of_PIN_MANAGER_IOC 0800                                 _WDT_Initialize 0B57  
                                        _error 00B0                      ??_TMR6_LoadPeriodRegister 00CD  
                                        _passo 00C7                                __end_of_fluxpos 0E06  
                                _controlchoice 00CB                                  _controlchoose 0C3B  
                      __end_of_TMR1_Initialize 0CAF                                          pclath 000A  
                               i1___fltol@exp1 003E                                          status 0003  
                                        wtemp0 007E                               daUmPasso@sentido 00D0  
                              _TMR1_WriteTimer 0C1D                               ??_DAC_Initialize 00CD  
                 __end_of_CMP1_GetOutputStatus 0B5F                                __initialization 001B  
                                 __end_of_main 0737                                 ??_EUSART_Write 00CD  
                      __end_of_TMR2_Initialize 0BD1                    ?_INTERRUPT_InterruptManager 0070  
                                       ??_main 00EE                         __end_of_WDT_Initialize 0B5B  
                              _TMR6_Initialize 0BEE              _EUSART_DefaultFramingErrorHandler 0000  
                                       _ADCON0 009D                                         _ADCON1 009E  
                   _EUSART_OverrunErrorHandler 0131                                 ?_controlchoose 0070  
                                       _ADRESH 009C                                         _ADRESL 009B  
                                       _CCPR1H 0292                                         _CCPR1L 0291  
                                       _ANSELA 018C                                         _ANSELB 018D  
                   __end_of_EUSART_is_rx_ready 0B68                                         _BORCON 0116  
                                       _T1GCON 0019                        TMR1_WriteTimer@timerVal 0070  
                                       i1l1133 0EA5                                         i1l2300 0C27  
                                       i1l1341 0235                                         i1l2306 0CEE  
                                       i1l1348 0CF4                                         i1l1373 0754  
                                       i1l2600 078D                                         i1l2530 01B8  
                                       i1l2450 0065                                         i1l1386 079C  
                                       i1l1387 07A6                                         i1l1379 0788  
                                       i1l2540 01D1                                         i1l2612 07C1  
                                       i1l2550 01FA                                         i1l2446 005B  
                                       i1l2622 0E70                                         i1l2560 0226  
                                       i1l2536 01CF                                         i1l2528 01A1  
                                       i1l2464 007C                                         i1l2448 005D  
                                       i1l2640 0EA1                                         i1l2554 020F  
                                       i1l2466 007E                                         i1l2618 0E67  
                                       i1l2476 0094                                         i1l2468 0086  
                                       i1l2590 0775                                         i1l2638 0E93  
                                       i1l2670 0DBD                                         i1l2662 0D9F  
                                       i1l2584 0763                                         i1l2648 0EB2  
                                       i1l2664 0DAB                                         i1l2578 074C  
                                       i1l2674 0DC6                                         i1l2588 0765  
                                       u211_25 076E                                         i1l2598 079A  
                                       i1l2882 0606                                         i1l2884 0642  
                                       u204_25 01E8                                         u205_25 0203  
                                       u213_25 0782                                         u206_25 0219  
                                       u215_25 0794                                         u223_25 0E79  
                                       u233_25 0DA2                                         u226_25 0E94  
                                       _FVRCON 0117                                         u219_25 07AE  
                                       u235_25 0DAC                                         u236_25 0DB6  
                                       u157_25 0CF5                                         u229_25 0EA9  
                                       u237_25 0DBE                                         u191_25 0101  
                                       u192_25 012A                                         u193_25 0174  
                                       u194_25 0190                                         u195_25 01A4  
                                       u197_25 01AD                                         _OSCCON 0099  
                                       _SPBRGH 019C                                         _SPBRGL 019B  
                                       _WDTCON 0097                               __end_of___xxtofl 07CA  
                              _TMR4_StartTimer 0B54                          __end_of_TMR1_GATE_ISR 0C03  
               ??_TMR1_SetGateInterruptHandler 00CF                                   _CCPTMRS0bits 029E  
                                 ?_TMR1_Reload 0070                                         ___tmul 0D47  
                                    ??___atdiv 00DC                                      ??___flmul 0079  
                                    ??___fltol 00D1                               __end_of_envia_Tx 1000  
                                    ??___lwdiv 00D1                                         _height 00B3  
                             ?_TMR0_Initialize 0070                                         _errorp 00AD  
                      __end_of_TMR4_Initialize 0BEE                                         _outpre 00A4  
                                       _output 00C1                              __end_ofi1___fltol 0EC1  
                            __end_ofi1___lwdiv 0DCB                                      ??_fluxpos 00D1  
                              ?_WDT_Initialize 0070                                i1___fltol@sign1 003D  
                     ADC_GetConversion@channel 00D0   TMR1_SetGateInterruptHandler@InterruptHandler 00CD  
                             ?_PIN_MANAGER_IOC 0070                        __end_of_TMR1_WriteTimer 0C2C  
                             ?_TMR1_Initialize 0070                                   ___xxtofl@arg 0049  
                                 ___xxtofl@exp 0048                              _SYSTEM_Initialize 0D6D  
                                 ___xxtofl@val 003F                        __end_of__initialization 0042  
                              _CMP1_Initialize 0B68                             ?_SYSTEM_Initialize 0070  
                                   ___fltol@f1 00CD                              ?_EPWM1_Initialize 0070  
                               __pcstackCOMMON 0070                                   __pidataBANK0 0B5F  
                                 __pidataBANK2 0C2C                            ??_SYSTEM_Initialize 00CF  
                           ??_EPWM1_Initialize 00CD                               ?_TMR2_Initialize 0070  
                      __end_of_TMR6_Initialize 0BF8                                 _OPTION_REGbits 0095  
                              _TMR6_WriteTimer 0B80                                ??_controlchoose 00EE  
              ??_EUSART_SetOverrunErrorHandler 00CF                           _CMP1_GetOutputStatus 0B5B  
                      __end_of_TMR4_StartTimer 0B57                      __end_of_SYSTEM_Initialize 0D97  
                                   __pbssBANK0 0053                                     __pbssBANK1 00A0  
                         __end_of_EUSART_Write 0BDA                                     _analisa_Rx 0511  
                            __end_of__Umul8_16 0D03                               ??_FVR_Initialize 00CD  
                                   __pmaintext 0697                                        ?___tmul 00CD  
                                   __pintentry 0004                                        _DACCON0 0118  
                                      _DACCON1 0119                                        _CM1CON0 0111  
                                      _CM1CON1 0112                                        _CCP1CON 0293  
                                      _ECCP1AS 0295                                        _BAUDCON 019F  
                             ?_TMR4_Initialize 0070                              __end_of_daUmPasso 0D23  
                                      _APFCON0 011D                                        _APFCON1 011E  
                             _definePassoMotor 0E06                                      ?___xxtofl 003F  
                        ?_CMP1_GetOutputStatus 0070                                        _OSCTUNE 0098  
                                      _PWM1CON 0294                        __end_of_CMP1_Initialize 0B6E  
                     ??_EUSART_SetErrorHandler 00CF                               ?_TMR1_WriteTimer 0070  
                       definePassoMotor@passom 00CF                                      ?_envia_Tx 0070  
                  __end_of_EPWM1_LoadDutyValue 0CE4                                     _first_read 006D  
                         _ADC_InterruptHandler 0065                                        ___atdiv 0F22  
                                      ___flmul 0046                                        ___fltol 0EC1  
                                      ___lwdiv 07CA                        __end_of_TMR6_WriteTimer 0B86  
                                      _ballset 005E                               ?_TMR6_Initialize 0070  
                     TMR1_ReadTimer@readValLow 007A                                        __ptext1 0CAF  
                                      __ptext2 0B5B                                        __ptext3 0DCB  
                                      __ptext4 0D03                                        __ptext5 0E06  
                                      __ptext6 0F8C                                        __ptext7 0EC1  
                                      __ptext8 0BD1                                        __ptext9 0C3B  
                    TMR1_ReadTimer@readValHigh 0079                                      _T1CONbits 0018  
                                      _countRx 00CA                              i1___lwdiv@divisor 0070  
                        _OSCILLATOR_Initialize 0B92                              i1___lwdiv@counter 0077  
                                      _fluxpos 0DCB                                     ??___xxtofl 0043  
                                    _CMOUTbits 0115                                      _T4CONbits 0417  
                     ??_PIN_MANAGER_Initialize 00CD                                        _sentido 0068  
                                      clrloop0 0B87                               ?_TMR4_StartTimer 0070  
                                   _passo_ctrl 00C5                           end_of_initialization 0042  
                                   ??_envia_Tx 00D7          __end_of_EUSART_SetOverrunErrorHandler 0BC1  
                _EUSART_SetOverrunErrorHandler 0BB9                              __end_of_setaPorta 0CC9  
                                      init_ram 0B8C                                        initloop 0B8D  
                                  ?_analisa_Rx 0070                              _EUSART_Initialize 0D23  
                           ?_EUSART_Initialize 0070                          TMR0_ReadTimer@readVal 00CD  
                                    _RCSTAbits 019D                             _EUSART_is_rx_ready 0B63  
                               _TMR0_ReadTimer 0B74                            ??_EUSART_Initialize 00CF  
                             ??_WDT_Initialize 00CD                            ?_EUSART_is_rx_ready 0070  
                       ??_CMP1_GetOutputStatus 00CD                                 _TMR1_ReadTimer 0C64  
                     ?_TMR6_LoadPeriodRegister 0070                                  ___xxtofl@sign 0047  
                                    i1___fltol 0E60                                      i1___lwdiv 0D97  
                             ?_CMP1_Initialize 0070                                     _pwmcontrol 0242  
                                  ___flmul@grs 002A                      __end_of_EUSART_Initialize 0D47  
                         ??_EUSART_is_rx_ready 00CD                         __end_of_TMR0_ReadTimer 0B7A  
                   _EUSART_DefaultErrorHandler 0000                               ?_TMR6_WriteTimer 0070  
                               __end_of___tmul 0D6D                                   _EUSART_Write 0BD1  
                               _ADC_Initialize 0BA1                         ?_OSCILLATOR_Initialize 0070  
                       __end_of_TMR1_ReadTimer 0C7C                                  ??_mede_height 004D  
                          start_initialization 001B                                  ??_EUSART_Read 00CD  
                                   ?i1___fltol 0035                                     ?i1___lwdiv 0070  
                 EPWM1_LoadDutyValue@dutyValue 00CD                       __end_of_definePassoMotor 0E60  
               ?_EUSART_SetOverrunErrorHandler 00CD                                 _TMR4_StopTimer 0B51  
                   _EUSART_FramingErrorHandler 0133                                ?_TMR0_ReadTimer 0070  
                                     ??___tmul 00D3                         _EUSART_SetErrorHandler 0BA9  
                       __end_of_ADC_Initialize 0BA9                                      __Umul8_16 0CE4  
                                  __pdataBANK0 006A                                    __pdataBANK2 0120  
              __end_of_TMR6_LoadPeriodRegister 0B80                                 ___tmul@product 00D3  
                              ?_TMR1_ReadTimer 0070                                  ??_fluxcontrol 00D6  
                                    ___flmul@a 0024                                      _daUmPasso 0D03  
                                    ___flmul@b 0020                                      ___latbits 0001  
                                __pcstackBANK0 0020                                  __pcstackBANK1 00CD  
                        __end_of_controlchoose 0C4D                            __end_of_mede_height 0697  
                                  ?_pwmcontrol 0070                            __end_of_EUSART_Read 0C0F  
                                    __pnvBANK0 006E                                      __pnvBANK2 012F  
                       __end_of_TMR4_StopTimer 0B54                               ___lwdiv@dividend 00CF  
                       _PIN_MANAGER_Initialize 0C4D                                  _TMR1_GATE_ISR 0BF8  
                                     ?___atdiv 00D6                                       ?___flmul 0020  
                                     ?___fltol 00CD                                     ?__Umul8_16 0070  
                                     ?___lwdiv 00CD                                ?_ADC_Initialize 0070  
                                    _fim_curso 00C6                   ??_INTERRUPT_InterruptManager 007E  
                                     ?_fluxpos 0070                                     ?_daUmPasso 0070  
                                    _nao_salva 00C8                                    ??i1___fltol 0039  
                             ___lwdiv@quotient 00D2                                    ??i1___lwdiv 0074  
                                    _func_mode 0067                            __end_of_fluxcontrol 0445  
                            ??_TMR0_Initialize 00CD                                       _LATAbits 010C  
       EUSART_SetErrorHandler@interruptHandler 00CD                                   ??_analisa_Rx 00D1  
                                    clear_ram0 0B86                                       _PIE1bits 0091  
                            _eusartRxLastError 00CC                                ?_TMR4_StopTimer 0070  
                                    _setaPorta 0CAF                                 ?_TMR1_GATE_ISR 0070  
                                     _PIR1bits 0011                ??_EUSART_SetFramingErrorHandler 00CF  
                                     _PIR3bits 0013                                  ??_TMR1_Reload 0072  
                                    _sp_height 0063                                      _tempo_voo 0061  
            _EUSART_DefaultOverrunErrorHandler 0000                                       _PSTR1CON 0296  
                            ??_PIN_MANAGER_IOC 0070                      _TMR1_GateInterruptHandler 006E  
                            ??_TMR1_Initialize 00CF                                     _ADCON0bits 009D  
                               _DAC_Initialize 0B6E                                    _mede_height 05DD  
                             _EPWM1_Initialize 0C0F                        definePassoMotor@sentido 00CD  
                          ___tmul@multiplicand 00D0                                      _outputsum 00A7  
                           __end_of_analisa_Rx 05DD                                    _EUSART_Read 0C03  
                            ??_TMR2_Initialize 00CD                            __end_of_lookupTable 0511  
                                   ?_setaPorta 0070                              _ADC_GetConversion 0C7C  
                        TMR1_ReadTimer@readVal 0077                        ??_OSCILLATOR_Initialize 00CD  
                                  ??__Umul8_16 0072                            _EUSART_ErrorHandler 012F  
                           ?_ADC_GetConversion 00CD                         __end_of_DAC_Initialize 0B74  
                                     _adc_temp 00B5                            __end_of_TMR1_Reload 0BA1  
                                     _balldist 00AA                            ??_ADC_GetConversion 00CF  
                                     ___xxtofl 0737                                    ??_daUmPasso 00D0  
                                  _fluxcontrol 0377                                ___lwdiv@divisor 00CD  
                              ___lwdiv@counter 00D4                                       __ptext10 0242  
                                     __ptext11 07CA                                       __ptext20 0B51  
                                     __ptext12 0F22                                       __ptext21 0B74  
                                     __ptext13 0377                                       __ptext30 0C4D  
                                     __ptext22 0D6D                                       __ptext14 0D47  
                                     __ptext31 0B92                                       __ptext23 0B57  
                                     __ptext15 0B54                                       __ptext40 0BA1  
                                     __ptext32 0B4E                                       __ptext24 0BEE  
                                     __ptext16 0511                                       __ptext41 0B63  
                                     __ptext33 0D23                                       __ptext25 0BE4  
                                     __ptext17 0CC9                                       __ptext50 0737  
                                     __ptext42 0C03                                       __ptext34 0BB9  
                                     __ptext26 0BC9                                       __ptext18 0B80  
                                     __ptext51 0046                                       __ptext43 0C7C  
                                     __ptext35 0BB1                                       __ptext27 0C95  
                                     __ptext19 0B7A                                       __ptext52 0CE4  
                                     __ptext36 0BA9                                       __ptext28 0BC1  
                                     __ptext53 0B99                                       __ptext45 0BF8  
                                     __ptext37 0C0F                                       __ptext29 0BDA  
                                     __ptext54 0C1D                                       __ptext46 07FE  
                                     __ptext38 0B6E                                       __ptext55 0C64  
                                     __ptext47 05DD                                       __ptext39 0B68  
                                     __ptext56 07FF                                       __ptext48 0D97  
                                     __ptext49 0E60                                       _bufferRx 0053  
                           i1___lwdiv@dividend 0072                                       _envia_Tx 0F8C  
                                     _count_Tx 00C9                        TMR6_WriteTimer@timerVal 00CD  
             TMR6_LoadPeriodRegister@periodVal 00CD                              ??_TMR4_Initialize 00CD  
                             ??_TMR0_ReadTimer 00CD                                ??_TMR1_GATE_ISR 007E  
                    __end_of_ADC_GetConversion 0C95                        ?_EUSART_SetErrorHandler 00CD  
                            ?_definePassoMotor 00CD  EUSART_SetOverrunErrorHandler@interruptHandler 00CD  
                           ??_definePassoMotor 00CE                               ??_TMR1_ReadTimer 0072  
                                     int$flags 007E                                       _position 00B9  
           __end_of_INTERRUPT_InterruptManager 0019                     _INTERRUPT_InterruptManager 0004  
        __end_of_EUSART_SetFramingErrorHandler 0BB9                  _EUSART_SetFramingErrorHandler 0BB1  
                              ?_DAC_Initialize 0070                              ??_TMR1_WriteTimer 0072  
                           i1___lwdiv@quotient 0075                                     _INTCONbits 000B  
                                _avg_tempo_voo 00A0                                   ??_pwmcontrol 00E2  
                                  _lookupTable 0445                                       intlevel1 0000  
                      ?_PIN_MANAGER_Initialize 0070                              ??_TMR6_Initialize 00CD  
               __end_of_EUSART_SetErrorHandler 0BB1                                    ??_setaPorta 00D1  
                             ??_ADC_Initialize 00CD                                    _TMR1_Reload 0B99  
                            ___tmul@multiplier 00CD  EUSART_SetFramingErrorHandler@interruptHandler 00CD  
                            ??_TMR4_StartTimer 00CD                                  __pstringtext1 0445  
                           __end_of_pwmcontrol 0377                                 _FVR_Initialize 0B4E  
                       __Umul8_16@multiplicand 0070                                     _OPTION_REG 0095  
                              _TMR0_Initialize 0BDA                                    _timecontrol 0120  
                          _EPWM1_LoadDutyValue 0CC9                               ___atdiv@dividend 00D9  
                           EUSART_Write@txData 00CD           __end_of_TMR1_SetGateInterruptHandler 0BC9  
                 _TMR1_SetGateInterruptHandler 0BC1                 __end_of_PIN_MANAGER_Initialize 0C64  
                             ??_TMR4_StopTimer 00CD                        _TMR6_LoadPeriodRegister 0B7A  
                                  _sp_position 00B7                                ___atdiv@divisor 00D6  
                              _PIN_MANAGER_IOC 07FF                           __Umul8_16@multiplier 0078  
                              ___atdiv@counter 00DD                                _TMR1_Initialize 0C95  
                     __end_of_EPWM1_Initialize 0C1D                           ?_EPWM1_LoadDutyValue 00CD  
                            __Umul8_16@product 0074                                   ___atdiv@sign 00DE  
