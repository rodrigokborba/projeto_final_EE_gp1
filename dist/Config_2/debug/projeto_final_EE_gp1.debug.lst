

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Mon Sep 09 16:39:33 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og9 
     1                           	processor	16F1827
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     6                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,noexec
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    17                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    19                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    20                           	psect	text1,local,class=CODE,merge=1,delta=2
    21                           	psect	text2,local,class=CODE,merge=1,delta=2
    22                           	psect	text3,local,class=CODE,merge=1,delta=2
    23                           	psect	text4,local,class=CODE,merge=1,delta=2
    24                           	psect	text5,local,class=CODE,merge=1,delta=2
    25                           	psect	text6,local,class=CODE,merge=1,delta=2
    26                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text8,local,class=CODE,merge=1,delta=2
    28                           	psect	text9,local,class=CODE,merge=1,delta=2
    29                           	psect	text10,local,class=CODE,merge=1,delta=2
    30                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text13,local,class=CODE,merge=1,delta=2
    33                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text15,local,class=CODE,merge=1,delta=2
    35                           	psect	text16,local,class=CODE,merge=1,delta=2
    36                           	psect	text17,local,class=CODE,merge=1,delta=2
    37                           	psect	text18,local,class=CODE,merge=1,delta=2
    38                           	psect	text19,local,class=CODE,merge=1,delta=2
    39                           	psect	text20,local,class=CODE,merge=1,delta=2
    40                           	psect	text21,local,class=CODE,merge=1,delta=2
    41                           	psect	text22,local,class=CODE,merge=1,delta=2
    42                           	psect	text23,local,class=CODE,merge=1,delta=2
    43                           	psect	text24,local,class=CODE,merge=1,delta=2
    44                           	psect	text25,local,class=CODE,merge=1,delta=2
    45                           	psect	text26,local,class=CODE,merge=1,delta=2
    46                           	psect	text27,local,class=CODE,merge=1,delta=2
    47                           	psect	text28,local,class=CODE,merge=1,delta=2
    48                           	psect	text29,local,class=CODE,merge=1,delta=2
    49                           	psect	text30,local,class=CODE,merge=1,delta=2
    50                           	psect	text31,local,class=CODE,merge=1,delta=2
    51                           	psect	text32,local,class=CODE,merge=1,delta=2
    52                           	psect	text33,local,class=CODE,merge=1,delta=2
    53                           	psect	text34,local,class=CODE,merge=1,delta=2
    54                           	psect	text35,local,class=CODE,merge=1,delta=2
    55                           	psect	text36,local,class=CODE,merge=1,delta=2
    56                           	psect	text37,local,class=CODE,merge=1,delta=2
    57                           	psect	text38,local,class=CODE,merge=1,delta=2
    58                           	psect	text39,local,class=CODE,merge=1,delta=2
    59                           	psect	text40,local,class=CODE,merge=1,delta=2
    60                           	psect	text41,local,class=CODE,merge=1,delta=2
    61                           	psect	text42,local,class=CODE,merge=1,delta=2
    62                           	psect	text43,local,class=CODE,merge=1,delta=2
    63                           	psect	intentry,global,class=CODE,delta=2
    64                           	psect	text45,local,class=CODE,merge=1,delta=2
    65                           	psect	text46,local,class=CODE,merge=1,delta=2
    66                           	psect	text47,local,class=CODE,merge=1,delta=2
    67                           	psect	text48,local,class=CODE,merge=1,delta=2
    68                           	psect	text49,local,class=CODE,merge=1,delta=2
    69                           	psect	text50,local,class=CODE,merge=1,delta=2,group=1
    70                           	psect	text51,local,class=CODE,merge=1,delta=2,group=1
    71                           	psect	text52,local,class=CODE,merge=1,delta=2,group=1
    72                           	psect	text53,local,class=CODE,merge=1,delta=2
    73                           	psect	text54,local,class=CODE,merge=1,delta=2
    74                           	psect	text55,local,class=CODE,merge=1,delta=2
    75                           	psect	text56,local,class=CODE,merge=1,delta=2
    76                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    77                           	dabs	1,0x7E,2
    78     0000                     
    79                           ; Generated 07/09/2023 GMT
    80                           ; 
    81                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    82                           ; All rights reserved.
    83                           ; 
    84                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    85                           ; 
    86                           ; Redistribution and use in source and binary forms, with or without modification, are
    87                           ; permitted provided that the following conditions are met:
    88                           ; 
    89                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    90                           ;        conditions and the following disclaimer.
    91                           ; 
    92                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    93                           ;        of conditions and the following disclaimer in the documentation and/or other
    94                           ;        materials provided with the distribution. Publication is not required when
    95                           ;        this file is used in an embedded application.
    96                           ; 
    97                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    98                           ;        software without specific prior written permission.
    99                           ; 
   100                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   101                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   102                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   103                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   104                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   105                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   106                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   107                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   108                           ; 
   109                           ; 
   110                           ; Code-generator required, PIC16F1827 Definitions
   111                           ; 
   112                           ; SFR Addresses
   113     0000                     	;# 
   114     0001                     	;# 
   115     0002                     	;# 
   116     0003                     	;# 
   117     0004                     	;# 
   118     0005                     	;# 
   119     0006                     	;# 
   120     0007                     	;# 
   121     0008                     	;# 
   122     0009                     	;# 
   123     000A                     	;# 
   124     000B                     	;# 
   125     000C                     	;# 
   126     000D                     	;# 
   127     0011                     	;# 
   128     0012                     	;# 
   129     0013                     	;# 
   130     0014                     	;# 
   131     0015                     	;# 
   132     0016                     	;# 
   133     0016                     	;# 
   134     0017                     	;# 
   135     0018                     	;# 
   136     0019                     	;# 
   137     001A                     	;# 
   138     001B                     	;# 
   139     001C                     	;# 
   140     001E                     	;# 
   141     001F                     	;# 
   142     008C                     	;# 
   143     008D                     	;# 
   144     0091                     	;# 
   145     0092                     	;# 
   146     0093                     	;# 
   147     0094                     	;# 
   148     0095                     	;# 
   149     0096                     	;# 
   150     0097                     	;# 
   151     0098                     	;# 
   152     0099                     	;# 
   153     009A                     	;# 
   154     009B                     	;# 
   155     009B                     	;# 
   156     009C                     	;# 
   157     009D                     	;# 
   158     009E                     	;# 
   159     010C                     	;# 
   160     010D                     	;# 
   161     0111                     	;# 
   162     0112                     	;# 
   163     0113                     	;# 
   164     0114                     	;# 
   165     0115                     	;# 
   166     0116                     	;# 
   167     0117                     	;# 
   168     0118                     	;# 
   169     0119                     	;# 
   170     011A                     	;# 
   171     011B                     	;# 
   172     011D                     	;# 
   173     011E                     	;# 
   174     018C                     	;# 
   175     018D                     	;# 
   176     0191                     	;# 
   177     0191                     	;# 
   178     0192                     	;# 
   179     0193                     	;# 
   180     0193                     	;# 
   181     0193                     	;# 
   182     0194                     	;# 
   183     0195                     	;# 
   184     0196                     	;# 
   185     0199                     	;# 
   186     019A                     	;# 
   187     019B                     	;# 
   188     019B                     	;# 
   189     019B                     	;# 
   190     019B                     	;# 
   191     019C                     	;# 
   192     019C                     	;# 
   193     019D                     	;# 
   194     019E                     	;# 
   195     019F                     	;# 
   196     020C                     	;# 
   197     020D                     	;# 
   198     0211                     	;# 
   199     0211                     	;# 
   200     0212                     	;# 
   201     0212                     	;# 
   202     0213                     	;# 
   203     0213                     	;# 
   204     0214                     	;# 
   205     0214                     	;# 
   206     0215                     	;# 
   207     0215                     	;# 
   208     0215                     	;# 
   209     0216                     	;# 
   210     0216                     	;# 
   211     0217                     	;# 
   212     0217                     	;# 
   213     0219                     	;# 
   214     021A                     	;# 
   215     021B                     	;# 
   216     021C                     	;# 
   217     021D                     	;# 
   218     021E                     	;# 
   219     021F                     	;# 
   220     0291                     	;# 
   221     0291                     	;# 
   222     0292                     	;# 
   223     0293                     	;# 
   224     0294                     	;# 
   225     0295                     	;# 
   226     0295                     	;# 
   227     0296                     	;# 
   228     0298                     	;# 
   229     0298                     	;# 
   230     0299                     	;# 
   231     029A                     	;# 
   232     029B                     	;# 
   233     029C                     	;# 
   234     029C                     	;# 
   235     029D                     	;# 
   236     029E                     	;# 
   237     029E                     	;# 
   238     0311                     	;# 
   239     0311                     	;# 
   240     0312                     	;# 
   241     0313                     	;# 
   242     0318                     	;# 
   243     0318                     	;# 
   244     0319                     	;# 
   245     031A                     	;# 
   246     0394                     	;# 
   247     0395                     	;# 
   248     0396                     	;# 
   249     039A                     	;# 
   250     039C                     	;# 
   251     039D                     	;# 
   252     039E                     	;# 
   253     039F                     	;# 
   254     0415                     	;# 
   255     0416                     	;# 
   256     0417                     	;# 
   257     041C                     	;# 
   258     041D                     	;# 
   259     041E                     	;# 
   260     0FE4                     	;# 
   261     0FE5                     	;# 
   262     0FE6                     	;# 
   263     0FE7                     	;# 
   264     0FE8                     	;# 
   265     0FE9                     	;# 
   266     0FEA                     	;# 
   267     0FEB                     	;# 
   268     0FED                     	;# 
   269     0FEE                     	;# 
   270     0FEF                     	;# 
   271     0000                     	;# 
   272     0001                     	;# 
   273     0002                     	;# 
   274     0003                     	;# 
   275     0004                     	;# 
   276     0005                     	;# 
   277     0006                     	;# 
   278     0007                     	;# 
   279     0008                     	;# 
   280     0009                     	;# 
   281     000A                     	;# 
   282     000B                     	;# 
   283     000C                     	;# 
   284     000D                     	;# 
   285     0011                     	;# 
   286     0012                     	;# 
   287     0013                     	;# 
   288     0014                     	;# 
   289     0015                     	;# 
   290     0016                     	;# 
   291     0016                     	;# 
   292     0017                     	;# 
   293     0018                     	;# 
   294     0019                     	;# 
   295     001A                     	;# 
   296     001B                     	;# 
   297     001C                     	;# 
   298     001E                     	;# 
   299     001F                     	;# 
   300     008C                     	;# 
   301     008D                     	;# 
   302     0091                     	;# 
   303     0092                     	;# 
   304     0093                     	;# 
   305     0094                     	;# 
   306     0095                     	;# 
   307     0096                     	;# 
   308     0097                     	;# 
   309     0098                     	;# 
   310     0099                     	;# 
   311     009A                     	;# 
   312     009B                     	;# 
   313     009B                     	;# 
   314     009C                     	;# 
   315     009D                     	;# 
   316     009E                     	;# 
   317     010C                     	;# 
   318     010D                     	;# 
   319     0111                     	;# 
   320     0112                     	;# 
   321     0113                     	;# 
   322     0114                     	;# 
   323     0115                     	;# 
   324     0116                     	;# 
   325     0117                     	;# 
   326     0118                     	;# 
   327     0119                     	;# 
   328     011A                     	;# 
   329     011B                     	;# 
   330     011D                     	;# 
   331     011E                     	;# 
   332     018C                     	;# 
   333     018D                     	;# 
   334     0191                     	;# 
   335     0191                     	;# 
   336     0192                     	;# 
   337     0193                     	;# 
   338     0193                     	;# 
   339     0193                     	;# 
   340     0194                     	;# 
   341     0195                     	;# 
   342     0196                     	;# 
   343     0199                     	;# 
   344     019A                     	;# 
   345     019B                     	;# 
   346     019B                     	;# 
   347     019B                     	;# 
   348     019B                     	;# 
   349     019C                     	;# 
   350     019C                     	;# 
   351     019D                     	;# 
   352     019E                     	;# 
   353     019F                     	;# 
   354     020C                     	;# 
   355     020D                     	;# 
   356     0211                     	;# 
   357     0211                     	;# 
   358     0212                     	;# 
   359     0212                     	;# 
   360     0213                     	;# 
   361     0213                     	;# 
   362     0214                     	;# 
   363     0214                     	;# 
   364     0215                     	;# 
   365     0215                     	;# 
   366     0215                     	;# 
   367     0216                     	;# 
   368     0216                     	;# 
   369     0217                     	;# 
   370     0217                     	;# 
   371     0219                     	;# 
   372     021A                     	;# 
   373     021B                     	;# 
   374     021C                     	;# 
   375     021D                     	;# 
   376     021E                     	;# 
   377     021F                     	;# 
   378     0291                     	;# 
   379     0291                     	;# 
   380     0292                     	;# 
   381     0293                     	;# 
   382     0294                     	;# 
   383     0295                     	;# 
   384     0295                     	;# 
   385     0296                     	;# 
   386     0298                     	;# 
   387     0298                     	;# 
   388     0299                     	;# 
   389     029A                     	;# 
   390     029B                     	;# 
   391     029C                     	;# 
   392     029C                     	;# 
   393     029D                     	;# 
   394     029E                     	;# 
   395     029E                     	;# 
   396     0311                     	;# 
   397     0311                     	;# 
   398     0312                     	;# 
   399     0313                     	;# 
   400     0318                     	;# 
   401     0318                     	;# 
   402     0319                     	;# 
   403     031A                     	;# 
   404     0394                     	;# 
   405     0395                     	;# 
   406     0396                     	;# 
   407     039A                     	;# 
   408     039C                     	;# 
   409     039D                     	;# 
   410     039E                     	;# 
   411     039F                     	;# 
   412     0415                     	;# 
   413     0416                     	;# 
   414     0417                     	;# 
   415     041C                     	;# 
   416     041D                     	;# 
   417     041E                     	;# 
   418     0FE4                     	;# 
   419     0FE5                     	;# 
   420     0FE6                     	;# 
   421     0FE7                     	;# 
   422     0FE8                     	;# 
   423     0FE9                     	;# 
   424     0FEA                     	;# 
   425     0FEB                     	;# 
   426     0FED                     	;# 
   427     0FEE                     	;# 
   428     0FEF                     	;# 
   429     0000                     	;# 
   430     0001                     	;# 
   431     0002                     	;# 
   432     0003                     	;# 
   433     0004                     	;# 
   434     0005                     	;# 
   435     0006                     	;# 
   436     0007                     	;# 
   437     0008                     	;# 
   438     0009                     	;# 
   439     000A                     	;# 
   440     000B                     	;# 
   441     000C                     	;# 
   442     000D                     	;# 
   443     0011                     	;# 
   444     0012                     	;# 
   445     0013                     	;# 
   446     0014                     	;# 
   447     0015                     	;# 
   448     0016                     	;# 
   449     0016                     	;# 
   450     0017                     	;# 
   451     0018                     	;# 
   452     0019                     	;# 
   453     001A                     	;# 
   454     001B                     	;# 
   455     001C                     	;# 
   456     001E                     	;# 
   457     001F                     	;# 
   458     008C                     	;# 
   459     008D                     	;# 
   460     0091                     	;# 
   461     0092                     	;# 
   462     0093                     	;# 
   463     0094                     	;# 
   464     0095                     	;# 
   465     0096                     	;# 
   466     0097                     	;# 
   467     0098                     	;# 
   468     0099                     	;# 
   469     009A                     	;# 
   470     009B                     	;# 
   471     009B                     	;# 
   472     009C                     	;# 
   473     009D                     	;# 
   474     009E                     	;# 
   475     010C                     	;# 
   476     010D                     	;# 
   477     0111                     	;# 
   478     0112                     	;# 
   479     0113                     	;# 
   480     0114                     	;# 
   481     0115                     	;# 
   482     0116                     	;# 
   483     0117                     	;# 
   484     0118                     	;# 
   485     0119                     	;# 
   486     011A                     	;# 
   487     011B                     	;# 
   488     011D                     	;# 
   489     011E                     	;# 
   490     018C                     	;# 
   491     018D                     	;# 
   492     0191                     	;# 
   493     0191                     	;# 
   494     0192                     	;# 
   495     0193                     	;# 
   496     0193                     	;# 
   497     0193                     	;# 
   498     0194                     	;# 
   499     0195                     	;# 
   500     0196                     	;# 
   501     0199                     	;# 
   502     019A                     	;# 
   503     019B                     	;# 
   504     019B                     	;# 
   505     019B                     	;# 
   506     019B                     	;# 
   507     019C                     	;# 
   508     019C                     	;# 
   509     019D                     	;# 
   510     019E                     	;# 
   511     019F                     	;# 
   512     020C                     	;# 
   513     020D                     	;# 
   514     0211                     	;# 
   515     0211                     	;# 
   516     0212                     	;# 
   517     0212                     	;# 
   518     0213                     	;# 
   519     0213                     	;# 
   520     0214                     	;# 
   521     0214                     	;# 
   522     0215                     	;# 
   523     0215                     	;# 
   524     0215                     	;# 
   525     0216                     	;# 
   526     0216                     	;# 
   527     0217                     	;# 
   528     0217                     	;# 
   529     0219                     	;# 
   530     021A                     	;# 
   531     021B                     	;# 
   532     021C                     	;# 
   533     021D                     	;# 
   534     021E                     	;# 
   535     021F                     	;# 
   536     0291                     	;# 
   537     0291                     	;# 
   538     0292                     	;# 
   539     0293                     	;# 
   540     0294                     	;# 
   541     0295                     	;# 
   542     0295                     	;# 
   543     0296                     	;# 
   544     0298                     	;# 
   545     0298                     	;# 
   546     0299                     	;# 
   547     029A                     	;# 
   548     029B                     	;# 
   549     029C                     	;# 
   550     029C                     	;# 
   551     029D                     	;# 
   552     029E                     	;# 
   553     029E                     	;# 
   554     0311                     	;# 
   555     0311                     	;# 
   556     0312                     	;# 
   557     0313                     	;# 
   558     0318                     	;# 
   559     0318                     	;# 
   560     0319                     	;# 
   561     031A                     	;# 
   562     0394                     	;# 
   563     0395                     	;# 
   564     0396                     	;# 
   565     039A                     	;# 
   566     039C                     	;# 
   567     039D                     	;# 
   568     039E                     	;# 
   569     039F                     	;# 
   570     0415                     	;# 
   571     0416                     	;# 
   572     0417                     	;# 
   573     041C                     	;# 
   574     041D                     	;# 
   575     041E                     	;# 
   576     0FE4                     	;# 
   577     0FE5                     	;# 
   578     0FE6                     	;# 
   579     0FE7                     	;# 
   580     0FE8                     	;# 
   581     0FE9                     	;# 
   582     0FEA                     	;# 
   583     0FEB                     	;# 
   584     0FED                     	;# 
   585     0FEE                     	;# 
   586     0FEF                     	;# 
   587     0000                     	;# 
   588     0001                     	;# 
   589     0002                     	;# 
   590     0003                     	;# 
   591     0004                     	;# 
   592     0005                     	;# 
   593     0006                     	;# 
   594     0007                     	;# 
   595     0008                     	;# 
   596     0009                     	;# 
   597     000A                     	;# 
   598     000B                     	;# 
   599     000C                     	;# 
   600     000D                     	;# 
   601     0011                     	;# 
   602     0012                     	;# 
   603     0013                     	;# 
   604     0014                     	;# 
   605     0015                     	;# 
   606     0016                     	;# 
   607     0016                     	;# 
   608     0017                     	;# 
   609     0018                     	;# 
   610     0019                     	;# 
   611     001A                     	;# 
   612     001B                     	;# 
   613     001C                     	;# 
   614     001E                     	;# 
   615     001F                     	;# 
   616     008C                     	;# 
   617     008D                     	;# 
   618     0091                     	;# 
   619     0092                     	;# 
   620     0093                     	;# 
   621     0094                     	;# 
   622     0095                     	;# 
   623     0096                     	;# 
   624     0097                     	;# 
   625     0098                     	;# 
   626     0099                     	;# 
   627     009A                     	;# 
   628     009B                     	;# 
   629     009B                     	;# 
   630     009C                     	;# 
   631     009D                     	;# 
   632     009E                     	;# 
   633     010C                     	;# 
   634     010D                     	;# 
   635     0111                     	;# 
   636     0112                     	;# 
   637     0113                     	;# 
   638     0114                     	;# 
   639     0115                     	;# 
   640     0116                     	;# 
   641     0117                     	;# 
   642     0118                     	;# 
   643     0119                     	;# 
   644     011A                     	;# 
   645     011B                     	;# 
   646     011D                     	;# 
   647     011E                     	;# 
   648     018C                     	;# 
   649     018D                     	;# 
   650     0191                     	;# 
   651     0191                     	;# 
   652     0192                     	;# 
   653     0193                     	;# 
   654     0193                     	;# 
   655     0193                     	;# 
   656     0194                     	;# 
   657     0195                     	;# 
   658     0196                     	;# 
   659     0199                     	;# 
   660     019A                     	;# 
   661     019B                     	;# 
   662     019B                     	;# 
   663     019B                     	;# 
   664     019B                     	;# 
   665     019C                     	;# 
   666     019C                     	;# 
   667     019D                     	;# 
   668     019E                     	;# 
   669     019F                     	;# 
   670     020C                     	;# 
   671     020D                     	;# 
   672     0211                     	;# 
   673     0211                     	;# 
   674     0212                     	;# 
   675     0212                     	;# 
   676     0213                     	;# 
   677     0213                     	;# 
   678     0214                     	;# 
   679     0214                     	;# 
   680     0215                     	;# 
   681     0215                     	;# 
   682     0215                     	;# 
   683     0216                     	;# 
   684     0216                     	;# 
   685     0217                     	;# 
   686     0217                     	;# 
   687     0219                     	;# 
   688     021A                     	;# 
   689     021B                     	;# 
   690     021C                     	;# 
   691     021D                     	;# 
   692     021E                     	;# 
   693     021F                     	;# 
   694     0291                     	;# 
   695     0291                     	;# 
   696     0292                     	;# 
   697     0293                     	;# 
   698     0294                     	;# 
   699     0295                     	;# 
   700     0295                     	;# 
   701     0296                     	;# 
   702     0298                     	;# 
   703     0298                     	;# 
   704     0299                     	;# 
   705     029A                     	;# 
   706     029B                     	;# 
   707     029C                     	;# 
   708     029C                     	;# 
   709     029D                     	;# 
   710     029E                     	;# 
   711     029E                     	;# 
   712     0311                     	;# 
   713     0311                     	;# 
   714     0312                     	;# 
   715     0313                     	;# 
   716     0318                     	;# 
   717     0318                     	;# 
   718     0319                     	;# 
   719     031A                     	;# 
   720     0394                     	;# 
   721     0395                     	;# 
   722     0396                     	;# 
   723     039A                     	;# 
   724     039C                     	;# 
   725     039D                     	;# 
   726     039E                     	;# 
   727     039F                     	;# 
   728     0415                     	;# 
   729     0416                     	;# 
   730     0417                     	;# 
   731     041C                     	;# 
   732     041D                     	;# 
   733     041E                     	;# 
   734     0FE4                     	;# 
   735     0FE5                     	;# 
   736     0FE6                     	;# 
   737     0FE7                     	;# 
   738     0FE8                     	;# 
   739     0FE9                     	;# 
   740     0FEA                     	;# 
   741     0FEB                     	;# 
   742     0FED                     	;# 
   743     0FEE                     	;# 
   744     0FEF                     	;# 
   745     0000                     	;# 
   746     0001                     	;# 
   747     0002                     	;# 
   748     0003                     	;# 
   749     0004                     	;# 
   750     0005                     	;# 
   751     0006                     	;# 
   752     0007                     	;# 
   753     0008                     	;# 
   754     0009                     	;# 
   755     000A                     	;# 
   756     000B                     	;# 
   757     000C                     	;# 
   758     000D                     	;# 
   759     0011                     	;# 
   760     0012                     	;# 
   761     0013                     	;# 
   762     0014                     	;# 
   763     0015                     	;# 
   764     0016                     	;# 
   765     0016                     	;# 
   766     0017                     	;# 
   767     0018                     	;# 
   768     0019                     	;# 
   769     001A                     	;# 
   770     001B                     	;# 
   771     001C                     	;# 
   772     001E                     	;# 
   773     001F                     	;# 
   774     008C                     	;# 
   775     008D                     	;# 
   776     0091                     	;# 
   777     0092                     	;# 
   778     0093                     	;# 
   779     0094                     	;# 
   780     0095                     	;# 
   781     0096                     	;# 
   782     0097                     	;# 
   783     0098                     	;# 
   784     0099                     	;# 
   785     009A                     	;# 
   786     009B                     	;# 
   787     009B                     	;# 
   788     009C                     	;# 
   789     009D                     	;# 
   790     009E                     	;# 
   791     010C                     	;# 
   792     010D                     	;# 
   793     0111                     	;# 
   794     0112                     	;# 
   795     0113                     	;# 
   796     0114                     	;# 
   797     0115                     	;# 
   798     0116                     	;# 
   799     0117                     	;# 
   800     0118                     	;# 
   801     0119                     	;# 
   802     011A                     	;# 
   803     011B                     	;# 
   804     011D                     	;# 
   805     011E                     	;# 
   806     018C                     	;# 
   807     018D                     	;# 
   808     0191                     	;# 
   809     0191                     	;# 
   810     0192                     	;# 
   811     0193                     	;# 
   812     0193                     	;# 
   813     0193                     	;# 
   814     0194                     	;# 
   815     0195                     	;# 
   816     0196                     	;# 
   817     0199                     	;# 
   818     019A                     	;# 
   819     019B                     	;# 
   820     019B                     	;# 
   821     019B                     	;# 
   822     019B                     	;# 
   823     019C                     	;# 
   824     019C                     	;# 
   825     019D                     	;# 
   826     019E                     	;# 
   827     019F                     	;# 
   828     020C                     	;# 
   829     020D                     	;# 
   830     0211                     	;# 
   831     0211                     	;# 
   832     0212                     	;# 
   833     0212                     	;# 
   834     0213                     	;# 
   835     0213                     	;# 
   836     0214                     	;# 
   837     0214                     	;# 
   838     0215                     	;# 
   839     0215                     	;# 
   840     0215                     	;# 
   841     0216                     	;# 
   842     0216                     	;# 
   843     0217                     	;# 
   844     0217                     	;# 
   845     0219                     	;# 
   846     021A                     	;# 
   847     021B                     	;# 
   848     021C                     	;# 
   849     021D                     	;# 
   850     021E                     	;# 
   851     021F                     	;# 
   852     0291                     	;# 
   853     0291                     	;# 
   854     0292                     	;# 
   855     0293                     	;# 
   856     0294                     	;# 
   857     0295                     	;# 
   858     0295                     	;# 
   859     0296                     	;# 
   860     0298                     	;# 
   861     0298                     	;# 
   862     0299                     	;# 
   863     029A                     	;# 
   864     029B                     	;# 
   865     029C                     	;# 
   866     029C                     	;# 
   867     029D                     	;# 
   868     029E                     	;# 
   869     029E                     	;# 
   870     0311                     	;# 
   871     0311                     	;# 
   872     0312                     	;# 
   873     0313                     	;# 
   874     0318                     	;# 
   875     0318                     	;# 
   876     0319                     	;# 
   877     031A                     	;# 
   878     0394                     	;# 
   879     0395                     	;# 
   880     0396                     	;# 
   881     039A                     	;# 
   882     039C                     	;# 
   883     039D                     	;# 
   884     039E                     	;# 
   885     039F                     	;# 
   886     0415                     	;# 
   887     0416                     	;# 
   888     0417                     	;# 
   889     041C                     	;# 
   890     041D                     	;# 
   891     041E                     	;# 
   892     0FE4                     	;# 
   893     0FE5                     	;# 
   894     0FE6                     	;# 
   895     0FE7                     	;# 
   896     0FE8                     	;# 
   897     0FE9                     	;# 
   898     0FEA                     	;# 
   899     0FEB                     	;# 
   900     0FED                     	;# 
   901     0FEE                     	;# 
   902     0FEF                     	;# 
   903     0000                     	;# 
   904     0001                     	;# 
   905     0002                     	;# 
   906     0003                     	;# 
   907     0004                     	;# 
   908     0005                     	;# 
   909     0006                     	;# 
   910     0007                     	;# 
   911     0008                     	;# 
   912     0009                     	;# 
   913     000A                     	;# 
   914     000B                     	;# 
   915     000C                     	;# 
   916     000D                     	;# 
   917     0011                     	;# 
   918     0012                     	;# 
   919     0013                     	;# 
   920     0014                     	;# 
   921     0015                     	;# 
   922     0016                     	;# 
   923     0016                     	;# 
   924     0017                     	;# 
   925     0018                     	;# 
   926     0019                     	;# 
   927     001A                     	;# 
   928     001B                     	;# 
   929     001C                     	;# 
   930     001E                     	;# 
   931     001F                     	;# 
   932     008C                     	;# 
   933     008D                     	;# 
   934     0091                     	;# 
   935     0092                     	;# 
   936     0093                     	;# 
   937     0094                     	;# 
   938     0095                     	;# 
   939     0096                     	;# 
   940     0097                     	;# 
   941     0098                     	;# 
   942     0099                     	;# 
   943     009A                     	;# 
   944     009B                     	;# 
   945     009B                     	;# 
   946     009C                     	;# 
   947     009D                     	;# 
   948     009E                     	;# 
   949     010C                     	;# 
   950     010D                     	;# 
   951     0111                     	;# 
   952     0112                     	;# 
   953     0113                     	;# 
   954     0114                     	;# 
   955     0115                     	;# 
   956     0116                     	;# 
   957     0117                     	;# 
   958     0118                     	;# 
   959     0119                     	;# 
   960     011A                     	;# 
   961     011B                     	;# 
   962     011D                     	;# 
   963     011E                     	;# 
   964     018C                     	;# 
   965     018D                     	;# 
   966     0191                     	;# 
   967     0191                     	;# 
   968     0192                     	;# 
   969     0193                     	;# 
   970     0193                     	;# 
   971     0193                     	;# 
   972     0194                     	;# 
   973     0195                     	;# 
   974     0196                     	;# 
   975     0199                     	;# 
   976     019A                     	;# 
   977     019B                     	;# 
   978     019B                     	;# 
   979     019B                     	;# 
   980     019B                     	;# 
   981     019C                     	;# 
   982     019C                     	;# 
   983     019D                     	;# 
   984     019E                     	;# 
   985     019F                     	;# 
   986     020C                     	;# 
   987     020D                     	;# 
   988     0211                     	;# 
   989     0211                     	;# 
   990     0212                     	;# 
   991     0212                     	;# 
   992     0213                     	;# 
   993     0213                     	;# 
   994     0214                     	;# 
   995     0214                     	;# 
   996     0215                     	;# 
   997     0215                     	;# 
   998     0215                     	;# 
   999     0216                     	;# 
  1000     0216                     	;# 
  1001     0217                     	;# 
  1002     0217                     	;# 
  1003     0219                     	;# 
  1004     021A                     	;# 
  1005     021B                     	;# 
  1006     021C                     	;# 
  1007     021D                     	;# 
  1008     021E                     	;# 
  1009     021F                     	;# 
  1010     0291                     	;# 
  1011     0291                     	;# 
  1012     0292                     	;# 
  1013     0293                     	;# 
  1014     0294                     	;# 
  1015     0295                     	;# 
  1016     0295                     	;# 
  1017     0296                     	;# 
  1018     0298                     	;# 
  1019     0298                     	;# 
  1020     0299                     	;# 
  1021     029A                     	;# 
  1022     029B                     	;# 
  1023     029C                     	;# 
  1024     029C                     	;# 
  1025     029D                     	;# 
  1026     029E                     	;# 
  1027     029E                     	;# 
  1028     0311                     	;# 
  1029     0311                     	;# 
  1030     0312                     	;# 
  1031     0313                     	;# 
  1032     0318                     	;# 
  1033     0318                     	;# 
  1034     0319                     	;# 
  1035     031A                     	;# 
  1036     0394                     	;# 
  1037     0395                     	;# 
  1038     0396                     	;# 
  1039     039A                     	;# 
  1040     039C                     	;# 
  1041     039D                     	;# 
  1042     039E                     	;# 
  1043     039F                     	;# 
  1044     0415                     	;# 
  1045     0416                     	;# 
  1046     0417                     	;# 
  1047     041C                     	;# 
  1048     041D                     	;# 
  1049     041E                     	;# 
  1050     0FE4                     	;# 
  1051     0FE5                     	;# 
  1052     0FE6                     	;# 
  1053     0FE7                     	;# 
  1054     0FE8                     	;# 
  1055     0FE9                     	;# 
  1056     0FEA                     	;# 
  1057     0FEB                     	;# 
  1058     0FED                     	;# 
  1059     0FEE                     	;# 
  1060     0FEF                     	;# 
  1061     0000                     	;# 
  1062     0001                     	;# 
  1063     0002                     	;# 
  1064     0003                     	;# 
  1065     0004                     	;# 
  1066     0005                     	;# 
  1067     0006                     	;# 
  1068     0007                     	;# 
  1069     0008                     	;# 
  1070     0009                     	;# 
  1071     000A                     	;# 
  1072     000B                     	;# 
  1073     000C                     	;# 
  1074     000D                     	;# 
  1075     0011                     	;# 
  1076     0012                     	;# 
  1077     0013                     	;# 
  1078     0014                     	;# 
  1079     0015                     	;# 
  1080     0016                     	;# 
  1081     0016                     	;# 
  1082     0017                     	;# 
  1083     0018                     	;# 
  1084     0019                     	;# 
  1085     001A                     	;# 
  1086     001B                     	;# 
  1087     001C                     	;# 
  1088     001E                     	;# 
  1089     001F                     	;# 
  1090     008C                     	;# 
  1091     008D                     	;# 
  1092     0091                     	;# 
  1093     0092                     	;# 
  1094     0093                     	;# 
  1095     0094                     	;# 
  1096     0095                     	;# 
  1097     0096                     	;# 
  1098     0097                     	;# 
  1099     0098                     	;# 
  1100     0099                     	;# 
  1101     009A                     	;# 
  1102     009B                     	;# 
  1103     009B                     	;# 
  1104     009C                     	;# 
  1105     009D                     	;# 
  1106     009E                     	;# 
  1107     010C                     	;# 
  1108     010D                     	;# 
  1109     0111                     	;# 
  1110     0112                     	;# 
  1111     0113                     	;# 
  1112     0114                     	;# 
  1113     0115                     	;# 
  1114     0116                     	;# 
  1115     0117                     	;# 
  1116     0118                     	;# 
  1117     0119                     	;# 
  1118     011A                     	;# 
  1119     011B                     	;# 
  1120     011D                     	;# 
  1121     011E                     	;# 
  1122     018C                     	;# 
  1123     018D                     	;# 
  1124     0191                     	;# 
  1125     0191                     	;# 
  1126     0192                     	;# 
  1127     0193                     	;# 
  1128     0193                     	;# 
  1129     0193                     	;# 
  1130     0194                     	;# 
  1131     0195                     	;# 
  1132     0196                     	;# 
  1133     0199                     	;# 
  1134     019A                     	;# 
  1135     019B                     	;# 
  1136     019B                     	;# 
  1137     019B                     	;# 
  1138     019B                     	;# 
  1139     019C                     	;# 
  1140     019C                     	;# 
  1141     019D                     	;# 
  1142     019E                     	;# 
  1143     019F                     	;# 
  1144     020C                     	;# 
  1145     020D                     	;# 
  1146     0211                     	;# 
  1147     0211                     	;# 
  1148     0212                     	;# 
  1149     0212                     	;# 
  1150     0213                     	;# 
  1151     0213                     	;# 
  1152     0214                     	;# 
  1153     0214                     	;# 
  1154     0215                     	;# 
  1155     0215                     	;# 
  1156     0215                     	;# 
  1157     0216                     	;# 
  1158     0216                     	;# 
  1159     0217                     	;# 
  1160     0217                     	;# 
  1161     0219                     	;# 
  1162     021A                     	;# 
  1163     021B                     	;# 
  1164     021C                     	;# 
  1165     021D                     	;# 
  1166     021E                     	;# 
  1167     021F                     	;# 
  1168     0291                     	;# 
  1169     0291                     	;# 
  1170     0292                     	;# 
  1171     0293                     	;# 
  1172     0294                     	;# 
  1173     0295                     	;# 
  1174     0295                     	;# 
  1175     0296                     	;# 
  1176     0298                     	;# 
  1177     0298                     	;# 
  1178     0299                     	;# 
  1179     029A                     	;# 
  1180     029B                     	;# 
  1181     029C                     	;# 
  1182     029C                     	;# 
  1183     029D                     	;# 
  1184     029E                     	;# 
  1185     029E                     	;# 
  1186     0311                     	;# 
  1187     0311                     	;# 
  1188     0312                     	;# 
  1189     0313                     	;# 
  1190     0318                     	;# 
  1191     0318                     	;# 
  1192     0319                     	;# 
  1193     031A                     	;# 
  1194     0394                     	;# 
  1195     0395                     	;# 
  1196     0396                     	;# 
  1197     039A                     	;# 
  1198     039C                     	;# 
  1199     039D                     	;# 
  1200     039E                     	;# 
  1201     039F                     	;# 
  1202     0415                     	;# 
  1203     0416                     	;# 
  1204     0417                     	;# 
  1205     041C                     	;# 
  1206     041D                     	;# 
  1207     041E                     	;# 
  1208     0FE4                     	;# 
  1209     0FE5                     	;# 
  1210     0FE6                     	;# 
  1211     0FE7                     	;# 
  1212     0FE8                     	;# 
  1213     0FE9                     	;# 
  1214     0FEA                     	;# 
  1215     0FEB                     	;# 
  1216     0FED                     	;# 
  1217     0FEE                     	;# 
  1218     0FEF                     	;# 
  1219     0000                     	;# 
  1220     0001                     	;# 
  1221     0002                     	;# 
  1222     0003                     	;# 
  1223     0004                     	;# 
  1224     0005                     	;# 
  1225     0006                     	;# 
  1226     0007                     	;# 
  1227     0008                     	;# 
  1228     0009                     	;# 
  1229     000A                     	;# 
  1230     000B                     	;# 
  1231     000C                     	;# 
  1232     000D                     	;# 
  1233     0011                     	;# 
  1234     0012                     	;# 
  1235     0013                     	;# 
  1236     0014                     	;# 
  1237     0015                     	;# 
  1238     0016                     	;# 
  1239     0016                     	;# 
  1240     0017                     	;# 
  1241     0018                     	;# 
  1242     0019                     	;# 
  1243     001A                     	;# 
  1244     001B                     	;# 
  1245     001C                     	;# 
  1246     001E                     	;# 
  1247     001F                     	;# 
  1248     008C                     	;# 
  1249     008D                     	;# 
  1250     0091                     	;# 
  1251     0092                     	;# 
  1252     0093                     	;# 
  1253     0094                     	;# 
  1254     0095                     	;# 
  1255     0096                     	;# 
  1256     0097                     	;# 
  1257     0098                     	;# 
  1258     0099                     	;# 
  1259     009A                     	;# 
  1260     009B                     	;# 
  1261     009B                     	;# 
  1262     009C                     	;# 
  1263     009D                     	;# 
  1264     009E                     	;# 
  1265     010C                     	;# 
  1266     010D                     	;# 
  1267     0111                     	;# 
  1268     0112                     	;# 
  1269     0113                     	;# 
  1270     0114                     	;# 
  1271     0115                     	;# 
  1272     0116                     	;# 
  1273     0117                     	;# 
  1274     0118                     	;# 
  1275     0119                     	;# 
  1276     011A                     	;# 
  1277     011B                     	;# 
  1278     011D                     	;# 
  1279     011E                     	;# 
  1280     018C                     	;# 
  1281     018D                     	;# 
  1282     0191                     	;# 
  1283     0191                     	;# 
  1284     0192                     	;# 
  1285     0193                     	;# 
  1286     0193                     	;# 
  1287     0193                     	;# 
  1288     0194                     	;# 
  1289     0195                     	;# 
  1290     0196                     	;# 
  1291     0199                     	;# 
  1292     019A                     	;# 
  1293     019B                     	;# 
  1294     019B                     	;# 
  1295     019B                     	;# 
  1296     019B                     	;# 
  1297     019C                     	;# 
  1298     019C                     	;# 
  1299     019D                     	;# 
  1300     019E                     	;# 
  1301     019F                     	;# 
  1302     020C                     	;# 
  1303     020D                     	;# 
  1304     0211                     	;# 
  1305     0211                     	;# 
  1306     0212                     	;# 
  1307     0212                     	;# 
  1308     0213                     	;# 
  1309     0213                     	;# 
  1310     0214                     	;# 
  1311     0214                     	;# 
  1312     0215                     	;# 
  1313     0215                     	;# 
  1314     0215                     	;# 
  1315     0216                     	;# 
  1316     0216                     	;# 
  1317     0217                     	;# 
  1318     0217                     	;# 
  1319     0219                     	;# 
  1320     021A                     	;# 
  1321     021B                     	;# 
  1322     021C                     	;# 
  1323     021D                     	;# 
  1324     021E                     	;# 
  1325     021F                     	;# 
  1326     0291                     	;# 
  1327     0291                     	;# 
  1328     0292                     	;# 
  1329     0293                     	;# 
  1330     0294                     	;# 
  1331     0295                     	;# 
  1332     0295                     	;# 
  1333     0296                     	;# 
  1334     0298                     	;# 
  1335     0298                     	;# 
  1336     0299                     	;# 
  1337     029A                     	;# 
  1338     029B                     	;# 
  1339     029C                     	;# 
  1340     029C                     	;# 
  1341     029D                     	;# 
  1342     029E                     	;# 
  1343     029E                     	;# 
  1344     0311                     	;# 
  1345     0311                     	;# 
  1346     0312                     	;# 
  1347     0313                     	;# 
  1348     0318                     	;# 
  1349     0318                     	;# 
  1350     0319                     	;# 
  1351     031A                     	;# 
  1352     0394                     	;# 
  1353     0395                     	;# 
  1354     0396                     	;# 
  1355     039A                     	;# 
  1356     039C                     	;# 
  1357     039D                     	;# 
  1358     039E                     	;# 
  1359     039F                     	;# 
  1360     0415                     	;# 
  1361     0416                     	;# 
  1362     0417                     	;# 
  1363     041C                     	;# 
  1364     041D                     	;# 
  1365     041E                     	;# 
  1366     0FE4                     	;# 
  1367     0FE5                     	;# 
  1368     0FE6                     	;# 
  1369     0FE7                     	;# 
  1370     0FE8                     	;# 
  1371     0FE9                     	;# 
  1372     0FEA                     	;# 
  1373     0FEB                     	;# 
  1374     0FED                     	;# 
  1375     0FEE                     	;# 
  1376     0FEF                     	;# 
  1377     0000                     	;# 
  1378     0001                     	;# 
  1379     0002                     	;# 
  1380     0003                     	;# 
  1381     0004                     	;# 
  1382     0005                     	;# 
  1383     0006                     	;# 
  1384     0007                     	;# 
  1385     0008                     	;# 
  1386     0009                     	;# 
  1387     000A                     	;# 
  1388     000B                     	;# 
  1389     000C                     	;# 
  1390     000D                     	;# 
  1391     0011                     	;# 
  1392     0012                     	;# 
  1393     0013                     	;# 
  1394     0014                     	;# 
  1395     0015                     	;# 
  1396     0016                     	;# 
  1397     0016                     	;# 
  1398     0017                     	;# 
  1399     0018                     	;# 
  1400     0019                     	;# 
  1401     001A                     	;# 
  1402     001B                     	;# 
  1403     001C                     	;# 
  1404     001E                     	;# 
  1405     001F                     	;# 
  1406     008C                     	;# 
  1407     008D                     	;# 
  1408     0091                     	;# 
  1409     0092                     	;# 
  1410     0093                     	;# 
  1411     0094                     	;# 
  1412     0095                     	;# 
  1413     0096                     	;# 
  1414     0097                     	;# 
  1415     0098                     	;# 
  1416     0099                     	;# 
  1417     009A                     	;# 
  1418     009B                     	;# 
  1419     009B                     	;# 
  1420     009C                     	;# 
  1421     009D                     	;# 
  1422     009E                     	;# 
  1423     010C                     	;# 
  1424     010D                     	;# 
  1425     0111                     	;# 
  1426     0112                     	;# 
  1427     0113                     	;# 
  1428     0114                     	;# 
  1429     0115                     	;# 
  1430     0116                     	;# 
  1431     0117                     	;# 
  1432     0118                     	;# 
  1433     0119                     	;# 
  1434     011A                     	;# 
  1435     011B                     	;# 
  1436     011D                     	;# 
  1437     011E                     	;# 
  1438     018C                     	;# 
  1439     018D                     	;# 
  1440     0191                     	;# 
  1441     0191                     	;# 
  1442     0192                     	;# 
  1443     0193                     	;# 
  1444     0193                     	;# 
  1445     0193                     	;# 
  1446     0194                     	;# 
  1447     0195                     	;# 
  1448     0196                     	;# 
  1449     0199                     	;# 
  1450     019A                     	;# 
  1451     019B                     	;# 
  1452     019B                     	;# 
  1453     019B                     	;# 
  1454     019B                     	;# 
  1455     019C                     	;# 
  1456     019C                     	;# 
  1457     019D                     	;# 
  1458     019E                     	;# 
  1459     019F                     	;# 
  1460     020C                     	;# 
  1461     020D                     	;# 
  1462     0211                     	;# 
  1463     0211                     	;# 
  1464     0212                     	;# 
  1465     0212                     	;# 
  1466     0213                     	;# 
  1467     0213                     	;# 
  1468     0214                     	;# 
  1469     0214                     	;# 
  1470     0215                     	;# 
  1471     0215                     	;# 
  1472     0215                     	;# 
  1473     0216                     	;# 
  1474     0216                     	;# 
  1475     0217                     	;# 
  1476     0217                     	;# 
  1477     0219                     	;# 
  1478     021A                     	;# 
  1479     021B                     	;# 
  1480     021C                     	;# 
  1481     021D                     	;# 
  1482     021E                     	;# 
  1483     021F                     	;# 
  1484     0291                     	;# 
  1485     0291                     	;# 
  1486     0292                     	;# 
  1487     0293                     	;# 
  1488     0294                     	;# 
  1489     0295                     	;# 
  1490     0295                     	;# 
  1491     0296                     	;# 
  1492     0298                     	;# 
  1493     0298                     	;# 
  1494     0299                     	;# 
  1495     029A                     	;# 
  1496     029B                     	;# 
  1497     029C                     	;# 
  1498     029C                     	;# 
  1499     029D                     	;# 
  1500     029E                     	;# 
  1501     029E                     	;# 
  1502     0311                     	;# 
  1503     0311                     	;# 
  1504     0312                     	;# 
  1505     0313                     	;# 
  1506     0318                     	;# 
  1507     0318                     	;# 
  1508     0319                     	;# 
  1509     031A                     	;# 
  1510     0394                     	;# 
  1511     0395                     	;# 
  1512     0396                     	;# 
  1513     039A                     	;# 
  1514     039C                     	;# 
  1515     039D                     	;# 
  1516     039E                     	;# 
  1517     039F                     	;# 
  1518     0415                     	;# 
  1519     0416                     	;# 
  1520     0417                     	;# 
  1521     041C                     	;# 
  1522     041D                     	;# 
  1523     041E                     	;# 
  1524     0FE4                     	;# 
  1525     0FE5                     	;# 
  1526     0FE6                     	;# 
  1527     0FE7                     	;# 
  1528     0FE8                     	;# 
  1529     0FE9                     	;# 
  1530     0FEA                     	;# 
  1531     0FEB                     	;# 
  1532     0FED                     	;# 
  1533     0FEE                     	;# 
  1534     0FEF                     	;# 
  1535     0000                     	;# 
  1536     0001                     	;# 
  1537     0002                     	;# 
  1538     0003                     	;# 
  1539     0004                     	;# 
  1540     0005                     	;# 
  1541     0006                     	;# 
  1542     0007                     	;# 
  1543     0008                     	;# 
  1544     0009                     	;# 
  1545     000A                     	;# 
  1546     000B                     	;# 
  1547     000C                     	;# 
  1548     000D                     	;# 
  1549     0011                     	;# 
  1550     0012                     	;# 
  1551     0013                     	;# 
  1552     0014                     	;# 
  1553     0015                     	;# 
  1554     0016                     	;# 
  1555     0016                     	;# 
  1556     0017                     	;# 
  1557     0018                     	;# 
  1558     0019                     	;# 
  1559     001A                     	;# 
  1560     001B                     	;# 
  1561     001C                     	;# 
  1562     001E                     	;# 
  1563     001F                     	;# 
  1564     008C                     	;# 
  1565     008D                     	;# 
  1566     0091                     	;# 
  1567     0092                     	;# 
  1568     0093                     	;# 
  1569     0094                     	;# 
  1570     0095                     	;# 
  1571     0096                     	;# 
  1572     0097                     	;# 
  1573     0098                     	;# 
  1574     0099                     	;# 
  1575     009A                     	;# 
  1576     009B                     	;# 
  1577     009B                     	;# 
  1578     009C                     	;# 
  1579     009D                     	;# 
  1580     009E                     	;# 
  1581     010C                     	;# 
  1582     010D                     	;# 
  1583     0111                     	;# 
  1584     0112                     	;# 
  1585     0113                     	;# 
  1586     0114                     	;# 
  1587     0115                     	;# 
  1588     0116                     	;# 
  1589     0117                     	;# 
  1590     0118                     	;# 
  1591     0119                     	;# 
  1592     011A                     	;# 
  1593     011B                     	;# 
  1594     011D                     	;# 
  1595     011E                     	;# 
  1596     018C                     	;# 
  1597     018D                     	;# 
  1598     0191                     	;# 
  1599     0191                     	;# 
  1600     0192                     	;# 
  1601     0193                     	;# 
  1602     0193                     	;# 
  1603     0193                     	;# 
  1604     0194                     	;# 
  1605     0195                     	;# 
  1606     0196                     	;# 
  1607     0199                     	;# 
  1608     019A                     	;# 
  1609     019B                     	;# 
  1610     019B                     	;# 
  1611     019B                     	;# 
  1612     019B                     	;# 
  1613     019C                     	;# 
  1614     019C                     	;# 
  1615     019D                     	;# 
  1616     019E                     	;# 
  1617     019F                     	;# 
  1618     020C                     	;# 
  1619     020D                     	;# 
  1620     0211                     	;# 
  1621     0211                     	;# 
  1622     0212                     	;# 
  1623     0212                     	;# 
  1624     0213                     	;# 
  1625     0213                     	;# 
  1626     0214                     	;# 
  1627     0214                     	;# 
  1628     0215                     	;# 
  1629     0215                     	;# 
  1630     0215                     	;# 
  1631     0216                     	;# 
  1632     0216                     	;# 
  1633     0217                     	;# 
  1634     0217                     	;# 
  1635     0219                     	;# 
  1636     021A                     	;# 
  1637     021B                     	;# 
  1638     021C                     	;# 
  1639     021D                     	;# 
  1640     021E                     	;# 
  1641     021F                     	;# 
  1642     0291                     	;# 
  1643     0291                     	;# 
  1644     0292                     	;# 
  1645     0293                     	;# 
  1646     0294                     	;# 
  1647     0295                     	;# 
  1648     0295                     	;# 
  1649     0296                     	;# 
  1650     0298                     	;# 
  1651     0298                     	;# 
  1652     0299                     	;# 
  1653     029A                     	;# 
  1654     029B                     	;# 
  1655     029C                     	;# 
  1656     029C                     	;# 
  1657     029D                     	;# 
  1658     029E                     	;# 
  1659     029E                     	;# 
  1660     0311                     	;# 
  1661     0311                     	;# 
  1662     0312                     	;# 
  1663     0313                     	;# 
  1664     0318                     	;# 
  1665     0318                     	;# 
  1666     0319                     	;# 
  1667     031A                     	;# 
  1668     0394                     	;# 
  1669     0395                     	;# 
  1670     0396                     	;# 
  1671     039A                     	;# 
  1672     039C                     	;# 
  1673     039D                     	;# 
  1674     039E                     	;# 
  1675     039F                     	;# 
  1676     0415                     	;# 
  1677     0416                     	;# 
  1678     0417                     	;# 
  1679     041C                     	;# 
  1680     041D                     	;# 
  1681     041E                     	;# 
  1682     0FE4                     	;# 
  1683     0FE5                     	;# 
  1684     0FE6                     	;# 
  1685     0FE7                     	;# 
  1686     0FE8                     	;# 
  1687     0FE9                     	;# 
  1688     0FEA                     	;# 
  1689     0FEB                     	;# 
  1690     0FED                     	;# 
  1691     0FEE                     	;# 
  1692     0FEF                     	;# 
  1693     0000                     	;# 
  1694     0001                     	;# 
  1695     0002                     	;# 
  1696     0003                     	;# 
  1697     0004                     	;# 
  1698     0005                     	;# 
  1699     0006                     	;# 
  1700     0007                     	;# 
  1701     0008                     	;# 
  1702     0009                     	;# 
  1703     000A                     	;# 
  1704     000B                     	;# 
  1705     000C                     	;# 
  1706     000D                     	;# 
  1707     0011                     	;# 
  1708     0012                     	;# 
  1709     0013                     	;# 
  1710     0014                     	;# 
  1711     0015                     	;# 
  1712     0016                     	;# 
  1713     0016                     	;# 
  1714     0017                     	;# 
  1715     0018                     	;# 
  1716     0019                     	;# 
  1717     001A                     	;# 
  1718     001B                     	;# 
  1719     001C                     	;# 
  1720     001E                     	;# 
  1721     001F                     	;# 
  1722     008C                     	;# 
  1723     008D                     	;# 
  1724     0091                     	;# 
  1725     0092                     	;# 
  1726     0093                     	;# 
  1727     0094                     	;# 
  1728     0095                     	;# 
  1729     0096                     	;# 
  1730     0097                     	;# 
  1731     0098                     	;# 
  1732     0099                     	;# 
  1733     009A                     	;# 
  1734     009B                     	;# 
  1735     009B                     	;# 
  1736     009C                     	;# 
  1737     009D                     	;# 
  1738     009E                     	;# 
  1739     010C                     	;# 
  1740     010D                     	;# 
  1741     0111                     	;# 
  1742     0112                     	;# 
  1743     0113                     	;# 
  1744     0114                     	;# 
  1745     0115                     	;# 
  1746     0116                     	;# 
  1747     0117                     	;# 
  1748     0118                     	;# 
  1749     0119                     	;# 
  1750     011A                     	;# 
  1751     011B                     	;# 
  1752     011D                     	;# 
  1753     011E                     	;# 
  1754     018C                     	;# 
  1755     018D                     	;# 
  1756     0191                     	;# 
  1757     0191                     	;# 
  1758     0192                     	;# 
  1759     0193                     	;# 
  1760     0193                     	;# 
  1761     0193                     	;# 
  1762     0194                     	;# 
  1763     0195                     	;# 
  1764     0196                     	;# 
  1765     0199                     	;# 
  1766     019A                     	;# 
  1767     019B                     	;# 
  1768     019B                     	;# 
  1769     019B                     	;# 
  1770     019B                     	;# 
  1771     019C                     	;# 
  1772     019C                     	;# 
  1773     019D                     	;# 
  1774     019E                     	;# 
  1775     019F                     	;# 
  1776     020C                     	;# 
  1777     020D                     	;# 
  1778     0211                     	;# 
  1779     0211                     	;# 
  1780     0212                     	;# 
  1781     0212                     	;# 
  1782     0213                     	;# 
  1783     0213                     	;# 
  1784     0214                     	;# 
  1785     0214                     	;# 
  1786     0215                     	;# 
  1787     0215                     	;# 
  1788     0215                     	;# 
  1789     0216                     	;# 
  1790     0216                     	;# 
  1791     0217                     	;# 
  1792     0217                     	;# 
  1793     0219                     	;# 
  1794     021A                     	;# 
  1795     021B                     	;# 
  1796     021C                     	;# 
  1797     021D                     	;# 
  1798     021E                     	;# 
  1799     021F                     	;# 
  1800     0291                     	;# 
  1801     0291                     	;# 
  1802     0292                     	;# 
  1803     0293                     	;# 
  1804     0294                     	;# 
  1805     0295                     	;# 
  1806     0295                     	;# 
  1807     0296                     	;# 
  1808     0298                     	;# 
  1809     0298                     	;# 
  1810     0299                     	;# 
  1811     029A                     	;# 
  1812     029B                     	;# 
  1813     029C                     	;# 
  1814     029C                     	;# 
  1815     029D                     	;# 
  1816     029E                     	;# 
  1817     029E                     	;# 
  1818     0311                     	;# 
  1819     0311                     	;# 
  1820     0312                     	;# 
  1821     0313                     	;# 
  1822     0318                     	;# 
  1823     0318                     	;# 
  1824     0319                     	;# 
  1825     031A                     	;# 
  1826     0394                     	;# 
  1827     0395                     	;# 
  1828     0396                     	;# 
  1829     039A                     	;# 
  1830     039C                     	;# 
  1831     039D                     	;# 
  1832     039E                     	;# 
  1833     039F                     	;# 
  1834     0415                     	;# 
  1835     0416                     	;# 
  1836     0417                     	;# 
  1837     041C                     	;# 
  1838     041D                     	;# 
  1839     041E                     	;# 
  1840     0FE4                     	;# 
  1841     0FE5                     	;# 
  1842     0FE6                     	;# 
  1843     0FE7                     	;# 
  1844     0FE8                     	;# 
  1845     0FE9                     	;# 
  1846     0FEA                     	;# 
  1847     0FEB                     	;# 
  1848     0FED                     	;# 
  1849     0FEE                     	;# 
  1850     0FEF                     	;# 
  1851     0000                     	;# 
  1852     0001                     	;# 
  1853     0002                     	;# 
  1854     0003                     	;# 
  1855     0004                     	;# 
  1856     0005                     	;# 
  1857     0006                     	;# 
  1858     0007                     	;# 
  1859     0008                     	;# 
  1860     0009                     	;# 
  1861     000A                     	;# 
  1862     000B                     	;# 
  1863     000C                     	;# 
  1864     000D                     	;# 
  1865     0011                     	;# 
  1866     0012                     	;# 
  1867     0013                     	;# 
  1868     0014                     	;# 
  1869     0015                     	;# 
  1870     0016                     	;# 
  1871     0016                     	;# 
  1872     0017                     	;# 
  1873     0018                     	;# 
  1874     0019                     	;# 
  1875     001A                     	;# 
  1876     001B                     	;# 
  1877     001C                     	;# 
  1878     001E                     	;# 
  1879     001F                     	;# 
  1880     008C                     	;# 
  1881     008D                     	;# 
  1882     0091                     	;# 
  1883     0092                     	;# 
  1884     0093                     	;# 
  1885     0094                     	;# 
  1886     0095                     	;# 
  1887     0096                     	;# 
  1888     0097                     	;# 
  1889     0098                     	;# 
  1890     0099                     	;# 
  1891     009A                     	;# 
  1892     009B                     	;# 
  1893     009B                     	;# 
  1894     009C                     	;# 
  1895     009D                     	;# 
  1896     009E                     	;# 
  1897     010C                     	;# 
  1898     010D                     	;# 
  1899     0111                     	;# 
  1900     0112                     	;# 
  1901     0113                     	;# 
  1902     0114                     	;# 
  1903     0115                     	;# 
  1904     0116                     	;# 
  1905     0117                     	;# 
  1906     0118                     	;# 
  1907     0119                     	;# 
  1908     011A                     	;# 
  1909     011B                     	;# 
  1910     011D                     	;# 
  1911     011E                     	;# 
  1912     018C                     	;# 
  1913     018D                     	;# 
  1914     0191                     	;# 
  1915     0191                     	;# 
  1916     0192                     	;# 
  1917     0193                     	;# 
  1918     0193                     	;# 
  1919     0193                     	;# 
  1920     0194                     	;# 
  1921     0195                     	;# 
  1922     0196                     	;# 
  1923     0199                     	;# 
  1924     019A                     	;# 
  1925     019B                     	;# 
  1926     019B                     	;# 
  1927     019B                     	;# 
  1928     019B                     	;# 
  1929     019C                     	;# 
  1930     019C                     	;# 
  1931     019D                     	;# 
  1932     019E                     	;# 
  1933     019F                     	;# 
  1934     020C                     	;# 
  1935     020D                     	;# 
  1936     0211                     	;# 
  1937     0211                     	;# 
  1938     0212                     	;# 
  1939     0212                     	;# 
  1940     0213                     	;# 
  1941     0213                     	;# 
  1942     0214                     	;# 
  1943     0214                     	;# 
  1944     0215                     	;# 
  1945     0215                     	;# 
  1946     0215                     	;# 
  1947     0216                     	;# 
  1948     0216                     	;# 
  1949     0217                     	;# 
  1950     0217                     	;# 
  1951     0219                     	;# 
  1952     021A                     	;# 
  1953     021B                     	;# 
  1954     021C                     	;# 
  1955     021D                     	;# 
  1956     021E                     	;# 
  1957     021F                     	;# 
  1958     0291                     	;# 
  1959     0291                     	;# 
  1960     0292                     	;# 
  1961     0293                     	;# 
  1962     0294                     	;# 
  1963     0295                     	;# 
  1964     0295                     	;# 
  1965     0296                     	;# 
  1966     0298                     	;# 
  1967     0298                     	;# 
  1968     0299                     	;# 
  1969     029A                     	;# 
  1970     029B                     	;# 
  1971     029C                     	;# 
  1972     029C                     	;# 
  1973     029D                     	;# 
  1974     029E                     	;# 
  1975     029E                     	;# 
  1976     0311                     	;# 
  1977     0311                     	;# 
  1978     0312                     	;# 
  1979     0313                     	;# 
  1980     0318                     	;# 
  1981     0318                     	;# 
  1982     0319                     	;# 
  1983     031A                     	;# 
  1984     0394                     	;# 
  1985     0395                     	;# 
  1986     0396                     	;# 
  1987     039A                     	;# 
  1988     039C                     	;# 
  1989     039D                     	;# 
  1990     039E                     	;# 
  1991     039F                     	;# 
  1992     0415                     	;# 
  1993     0416                     	;# 
  1994     0417                     	;# 
  1995     041C                     	;# 
  1996     041D                     	;# 
  1997     041E                     	;# 
  1998     0FE4                     	;# 
  1999     0FE5                     	;# 
  2000     0FE6                     	;# 
  2001     0FE7                     	;# 
  2002     0FE8                     	;# 
  2003     0FE9                     	;# 
  2004     0FEA                     	;# 
  2005     0FEB                     	;# 
  2006     0FED                     	;# 
  2007     0FEE                     	;# 
  2008     0FEF                     	;# 
  2009     0000                     	;# 
  2010     0001                     	;# 
  2011     0002                     	;# 
  2012     0003                     	;# 
  2013     0004                     	;# 
  2014     0005                     	;# 
  2015     0006                     	;# 
  2016     0007                     	;# 
  2017     0008                     	;# 
  2018     0009                     	;# 
  2019     000A                     	;# 
  2020     000B                     	;# 
  2021     000C                     	;# 
  2022     000D                     	;# 
  2023     0011                     	;# 
  2024     0012                     	;# 
  2025     0013                     	;# 
  2026     0014                     	;# 
  2027     0015                     	;# 
  2028     0016                     	;# 
  2029     0016                     	;# 
  2030     0017                     	;# 
  2031     0018                     	;# 
  2032     0019                     	;# 
  2033     001A                     	;# 
  2034     001B                     	;# 
  2035     001C                     	;# 
  2036     001E                     	;# 
  2037     001F                     	;# 
  2038     008C                     	;# 
  2039     008D                     	;# 
  2040     0091                     	;# 
  2041     0092                     	;# 
  2042     0093                     	;# 
  2043     0094                     	;# 
  2044     0095                     	;# 
  2045     0096                     	;# 
  2046     0097                     	;# 
  2047     0098                     	;# 
  2048     0099                     	;# 
  2049     009A                     	;# 
  2050     009B                     	;# 
  2051     009B                     	;# 
  2052     009C                     	;# 
  2053     009D                     	;# 
  2054     009E                     	;# 
  2055     010C                     	;# 
  2056     010D                     	;# 
  2057     0111                     	;# 
  2058     0112                     	;# 
  2059     0113                     	;# 
  2060     0114                     	;# 
  2061     0115                     	;# 
  2062     0116                     	;# 
  2063     0117                     	;# 
  2064     0118                     	;# 
  2065     0119                     	;# 
  2066     011A                     	;# 
  2067     011B                     	;# 
  2068     011D                     	;# 
  2069     011E                     	;# 
  2070     018C                     	;# 
  2071     018D                     	;# 
  2072     0191                     	;# 
  2073     0191                     	;# 
  2074     0192                     	;# 
  2075     0193                     	;# 
  2076     0193                     	;# 
  2077     0193                     	;# 
  2078     0194                     	;# 
  2079     0195                     	;# 
  2080     0196                     	;# 
  2081     0199                     	;# 
  2082     019A                     	;# 
  2083     019B                     	;# 
  2084     019B                     	;# 
  2085     019B                     	;# 
  2086     019B                     	;# 
  2087     019C                     	;# 
  2088     019C                     	;# 
  2089     019D                     	;# 
  2090     019E                     	;# 
  2091     019F                     	;# 
  2092     020C                     	;# 
  2093     020D                     	;# 
  2094     0211                     	;# 
  2095     0211                     	;# 
  2096     0212                     	;# 
  2097     0212                     	;# 
  2098     0213                     	;# 
  2099     0213                     	;# 
  2100     0214                     	;# 
  2101     0214                     	;# 
  2102     0215                     	;# 
  2103     0215                     	;# 
  2104     0215                     	;# 
  2105     0216                     	;# 
  2106     0216                     	;# 
  2107     0217                     	;# 
  2108     0217                     	;# 
  2109     0219                     	;# 
  2110     021A                     	;# 
  2111     021B                     	;# 
  2112     021C                     	;# 
  2113     021D                     	;# 
  2114     021E                     	;# 
  2115     021F                     	;# 
  2116     0291                     	;# 
  2117     0291                     	;# 
  2118     0292                     	;# 
  2119     0293                     	;# 
  2120     0294                     	;# 
  2121     0295                     	;# 
  2122     0295                     	;# 
  2123     0296                     	;# 
  2124     0298                     	;# 
  2125     0298                     	;# 
  2126     0299                     	;# 
  2127     029A                     	;# 
  2128     029B                     	;# 
  2129     029C                     	;# 
  2130     029C                     	;# 
  2131     029D                     	;# 
  2132     029E                     	;# 
  2133     029E                     	;# 
  2134     0311                     	;# 
  2135     0311                     	;# 
  2136     0312                     	;# 
  2137     0313                     	;# 
  2138     0318                     	;# 
  2139     0318                     	;# 
  2140     0319                     	;# 
  2141     031A                     	;# 
  2142     0394                     	;# 
  2143     0395                     	;# 
  2144     0396                     	;# 
  2145     039A                     	;# 
  2146     039C                     	;# 
  2147     039D                     	;# 
  2148     039E                     	;# 
  2149     039F                     	;# 
  2150     0415                     	;# 
  2151     0416                     	;# 
  2152     0417                     	;# 
  2153     041C                     	;# 
  2154     041D                     	;# 
  2155     041E                     	;# 
  2156     0FE4                     	;# 
  2157     0FE5                     	;# 
  2158     0FE6                     	;# 
  2159     0FE7                     	;# 
  2160     0FE8                     	;# 
  2161     0FE9                     	;# 
  2162     0FEA                     	;# 
  2163     0FEB                     	;# 
  2164     0FED                     	;# 
  2165     0FEE                     	;# 
  2166     0FEF                     	;# 
  2167     0000                     	;# 
  2168     0001                     	;# 
  2169     0002                     	;# 
  2170     0003                     	;# 
  2171     0004                     	;# 
  2172     0005                     	;# 
  2173     0006                     	;# 
  2174     0007                     	;# 
  2175     0008                     	;# 
  2176     0009                     	;# 
  2177     000A                     	;# 
  2178     000B                     	;# 
  2179     000C                     	;# 
  2180     000D                     	;# 
  2181     0011                     	;# 
  2182     0012                     	;# 
  2183     0013                     	;# 
  2184     0014                     	;# 
  2185     0015                     	;# 
  2186     0016                     	;# 
  2187     0016                     	;# 
  2188     0017                     	;# 
  2189     0018                     	;# 
  2190     0019                     	;# 
  2191     001A                     	;# 
  2192     001B                     	;# 
  2193     001C                     	;# 
  2194     001E                     	;# 
  2195     001F                     	;# 
  2196     008C                     	;# 
  2197     008D                     	;# 
  2198     0091                     	;# 
  2199     0092                     	;# 
  2200     0093                     	;# 
  2201     0094                     	;# 
  2202     0095                     	;# 
  2203     0096                     	;# 
  2204     0097                     	;# 
  2205     0098                     	;# 
  2206     0099                     	;# 
  2207     009A                     	;# 
  2208     009B                     	;# 
  2209     009B                     	;# 
  2210     009C                     	;# 
  2211     009D                     	;# 
  2212     009E                     	;# 
  2213     010C                     	;# 
  2214     010D                     	;# 
  2215     0111                     	;# 
  2216     0112                     	;# 
  2217     0113                     	;# 
  2218     0114                     	;# 
  2219     0115                     	;# 
  2220     0116                     	;# 
  2221     0117                     	;# 
  2222     0118                     	;# 
  2223     0119                     	;# 
  2224     011A                     	;# 
  2225     011B                     	;# 
  2226     011D                     	;# 
  2227     011E                     	;# 
  2228     018C                     	;# 
  2229     018D                     	;# 
  2230     0191                     	;# 
  2231     0191                     	;# 
  2232     0192                     	;# 
  2233     0193                     	;# 
  2234     0193                     	;# 
  2235     0193                     	;# 
  2236     0194                     	;# 
  2237     0195                     	;# 
  2238     0196                     	;# 
  2239     0199                     	;# 
  2240     019A                     	;# 
  2241     019B                     	;# 
  2242     019B                     	;# 
  2243     019B                     	;# 
  2244     019B                     	;# 
  2245     019C                     	;# 
  2246     019C                     	;# 
  2247     019D                     	;# 
  2248     019E                     	;# 
  2249     019F                     	;# 
  2250     020C                     	;# 
  2251     020D                     	;# 
  2252     0211                     	;# 
  2253     0211                     	;# 
  2254     0212                     	;# 
  2255     0212                     	;# 
  2256     0213                     	;# 
  2257     0213                     	;# 
  2258     0214                     	;# 
  2259     0214                     	;# 
  2260     0215                     	;# 
  2261     0215                     	;# 
  2262     0215                     	;# 
  2263     0216                     	;# 
  2264     0216                     	;# 
  2265     0217                     	;# 
  2266     0217                     	;# 
  2267     0219                     	;# 
  2268     021A                     	;# 
  2269     021B                     	;# 
  2270     021C                     	;# 
  2271     021D                     	;# 
  2272     021E                     	;# 
  2273     021F                     	;# 
  2274     0291                     	;# 
  2275     0291                     	;# 
  2276     0292                     	;# 
  2277     0293                     	;# 
  2278     0294                     	;# 
  2279     0295                     	;# 
  2280     0295                     	;# 
  2281     0296                     	;# 
  2282     0298                     	;# 
  2283     0298                     	;# 
  2284     0299                     	;# 
  2285     029A                     	;# 
  2286     029B                     	;# 
  2287     029C                     	;# 
  2288     029C                     	;# 
  2289     029D                     	;# 
  2290     029E                     	;# 
  2291     029E                     	;# 
  2292     0311                     	;# 
  2293     0311                     	;# 
  2294     0312                     	;# 
  2295     0313                     	;# 
  2296     0318                     	;# 
  2297     0318                     	;# 
  2298     0319                     	;# 
  2299     031A                     	;# 
  2300     0394                     	;# 
  2301     0395                     	;# 
  2302     0396                     	;# 
  2303     039A                     	;# 
  2304     039C                     	;# 
  2305     039D                     	;# 
  2306     039E                     	;# 
  2307     039F                     	;# 
  2308     0415                     	;# 
  2309     0416                     	;# 
  2310     0417                     	;# 
  2311     041C                     	;# 
  2312     041D                     	;# 
  2313     041E                     	;# 
  2314     0FE4                     	;# 
  2315     0FE5                     	;# 
  2316     0FE6                     	;# 
  2317     0FE7                     	;# 
  2318     0FE8                     	;# 
  2319     0FE9                     	;# 
  2320     0FEA                     	;# 
  2321     0FEB                     	;# 
  2322     0FED                     	;# 
  2323     0FEE                     	;# 
  2324     0FEF                     	;# 
  2325     0000                     	;# 
  2326     0001                     	;# 
  2327     0002                     	;# 
  2328     0003                     	;# 
  2329     0004                     	;# 
  2330     0005                     	;# 
  2331     0006                     	;# 
  2332     0007                     	;# 
  2333     0008                     	;# 
  2334     0009                     	;# 
  2335     000A                     	;# 
  2336     000B                     	;# 
  2337     000C                     	;# 
  2338     000D                     	;# 
  2339     0011                     	;# 
  2340     0012                     	;# 
  2341     0013                     	;# 
  2342     0014                     	;# 
  2343     0015                     	;# 
  2344     0016                     	;# 
  2345     0016                     	;# 
  2346     0017                     	;# 
  2347     0018                     	;# 
  2348     0019                     	;# 
  2349     001A                     	;# 
  2350     001B                     	;# 
  2351     001C                     	;# 
  2352     001E                     	;# 
  2353     001F                     	;# 
  2354     008C                     	;# 
  2355     008D                     	;# 
  2356     0091                     	;# 
  2357     0092                     	;# 
  2358     0093                     	;# 
  2359     0094                     	;# 
  2360     0095                     	;# 
  2361     0096                     	;# 
  2362     0097                     	;# 
  2363     0098                     	;# 
  2364     0099                     	;# 
  2365     009A                     	;# 
  2366     009B                     	;# 
  2367     009B                     	;# 
  2368     009C                     	;# 
  2369     009D                     	;# 
  2370     009E                     	;# 
  2371     010C                     	;# 
  2372     010D                     	;# 
  2373     0111                     	;# 
  2374     0112                     	;# 
  2375     0113                     	;# 
  2376     0114                     	;# 
  2377     0115                     	;# 
  2378     0116                     	;# 
  2379     0117                     	;# 
  2380     0118                     	;# 
  2381     0119                     	;# 
  2382     011A                     	;# 
  2383     011B                     	;# 
  2384     011D                     	;# 
  2385     011E                     	;# 
  2386     018C                     	;# 
  2387     018D                     	;# 
  2388     0191                     	;# 
  2389     0191                     	;# 
  2390     0192                     	;# 
  2391     0193                     	;# 
  2392     0193                     	;# 
  2393     0193                     	;# 
  2394     0194                     	;# 
  2395     0195                     	;# 
  2396     0196                     	;# 
  2397     0199                     	;# 
  2398     019A                     	;# 
  2399     019B                     	;# 
  2400     019B                     	;# 
  2401     019B                     	;# 
  2402     019B                     	;# 
  2403     019C                     	;# 
  2404     019C                     	;# 
  2405     019D                     	;# 
  2406     019E                     	;# 
  2407     019F                     	;# 
  2408     020C                     	;# 
  2409     020D                     	;# 
  2410     0211                     	;# 
  2411     0211                     	;# 
  2412     0212                     	;# 
  2413     0212                     	;# 
  2414     0213                     	;# 
  2415     0213                     	;# 
  2416     0214                     	;# 
  2417     0214                     	;# 
  2418     0215                     	;# 
  2419     0215                     	;# 
  2420     0215                     	;# 
  2421     0216                     	;# 
  2422     0216                     	;# 
  2423     0217                     	;# 
  2424     0217                     	;# 
  2425     0219                     	;# 
  2426     021A                     	;# 
  2427     021B                     	;# 
  2428     021C                     	;# 
  2429     021D                     	;# 
  2430     021E                     	;# 
  2431     021F                     	;# 
  2432     0291                     	;# 
  2433     0291                     	;# 
  2434     0292                     	;# 
  2435     0293                     	;# 
  2436     0294                     	;# 
  2437     0295                     	;# 
  2438     0295                     	;# 
  2439     0296                     	;# 
  2440     0298                     	;# 
  2441     0298                     	;# 
  2442     0299                     	;# 
  2443     029A                     	;# 
  2444     029B                     	;# 
  2445     029C                     	;# 
  2446     029C                     	;# 
  2447     029D                     	;# 
  2448     029E                     	;# 
  2449     029E                     	;# 
  2450     0311                     	;# 
  2451     0311                     	;# 
  2452     0312                     	;# 
  2453     0313                     	;# 
  2454     0318                     	;# 
  2455     0318                     	;# 
  2456     0319                     	;# 
  2457     031A                     	;# 
  2458     0394                     	;# 
  2459     0395                     	;# 
  2460     0396                     	;# 
  2461     039A                     	;# 
  2462     039C                     	;# 
  2463     039D                     	;# 
  2464     039E                     	;# 
  2465     039F                     	;# 
  2466     0415                     	;# 
  2467     0416                     	;# 
  2468     0417                     	;# 
  2469     041C                     	;# 
  2470     041D                     	;# 
  2471     041E                     	;# 
  2472     0FE4                     	;# 
  2473     0FE5                     	;# 
  2474     0FE6                     	;# 
  2475     0FE7                     	;# 
  2476     0FE8                     	;# 
  2477     0FE9                     	;# 
  2478     0FEA                     	;# 
  2479     0FEB                     	;# 
  2480     0FED                     	;# 
  2481     0FEE                     	;# 
  2482     0FEF                     	;# 
  2483     0000                     	;# 
  2484     0001                     	;# 
  2485     0002                     	;# 
  2486     0003                     	;# 
  2487     0004                     	;# 
  2488     0005                     	;# 
  2489     0006                     	;# 
  2490     0007                     	;# 
  2491     0008                     	;# 
  2492     0009                     	;# 
  2493     000A                     	;# 
  2494     000B                     	;# 
  2495     000C                     	;# 
  2496     000D                     	;# 
  2497     0011                     	;# 
  2498     0012                     	;# 
  2499     0013                     	;# 
  2500     0014                     	;# 
  2501     0015                     	;# 
  2502     0016                     	;# 
  2503     0016                     	;# 
  2504     0017                     	;# 
  2505     0018                     	;# 
  2506     0019                     	;# 
  2507     001A                     	;# 
  2508     001B                     	;# 
  2509     001C                     	;# 
  2510     001E                     	;# 
  2511     001F                     	;# 
  2512     008C                     	;# 
  2513     008D                     	;# 
  2514     0091                     	;# 
  2515     0092                     	;# 
  2516     0093                     	;# 
  2517     0094                     	;# 
  2518     0095                     	;# 
  2519     0096                     	;# 
  2520     0097                     	;# 
  2521     0098                     	;# 
  2522     0099                     	;# 
  2523     009A                     	;# 
  2524     009B                     	;# 
  2525     009B                     	;# 
  2526     009C                     	;# 
  2527     009D                     	;# 
  2528     009E                     	;# 
  2529     010C                     	;# 
  2530     010D                     	;# 
  2531     0111                     	;# 
  2532     0112                     	;# 
  2533     0113                     	;# 
  2534     0114                     	;# 
  2535     0115                     	;# 
  2536     0116                     	;# 
  2537     0117                     	;# 
  2538     0118                     	;# 
  2539     0119                     	;# 
  2540     011A                     	;# 
  2541     011B                     	;# 
  2542     011D                     	;# 
  2543     011E                     	;# 
  2544     018C                     	;# 
  2545     018D                     	;# 
  2546     0191                     	;# 
  2547     0191                     	;# 
  2548     0192                     	;# 
  2549     0193                     	;# 
  2550     0193                     	;# 
  2551     0193                     	;# 
  2552     0194                     	;# 
  2553     0195                     	;# 
  2554     0196                     	;# 
  2555     0199                     	;# 
  2556     019A                     	;# 
  2557     019B                     	;# 
  2558     019B                     	;# 
  2559     019B                     	;# 
  2560     019B                     	;# 
  2561     019C                     	;# 
  2562     019C                     	;# 
  2563     019D                     	;# 
  2564     019E                     	;# 
  2565     019F                     	;# 
  2566     020C                     	;# 
  2567     020D                     	;# 
  2568     0211                     	;# 
  2569     0211                     	;# 
  2570     0212                     	;# 
  2571     0212                     	;# 
  2572     0213                     	;# 
  2573     0213                     	;# 
  2574     0214                     	;# 
  2575     0214                     	;# 
  2576     0215                     	;# 
  2577     0215                     	;# 
  2578     0215                     	;# 
  2579     0216                     	;# 
  2580     0216                     	;# 
  2581     0217                     	;# 
  2582     0217                     	;# 
  2583     0219                     	;# 
  2584     021A                     	;# 
  2585     021B                     	;# 
  2586     021C                     	;# 
  2587     021D                     	;# 
  2588     021E                     	;# 
  2589     021F                     	;# 
  2590     0291                     	;# 
  2591     0291                     	;# 
  2592     0292                     	;# 
  2593     0293                     	;# 
  2594     0294                     	;# 
  2595     0295                     	;# 
  2596     0295                     	;# 
  2597     0296                     	;# 
  2598     0298                     	;# 
  2599     0298                     	;# 
  2600     0299                     	;# 
  2601     029A                     	;# 
  2602     029B                     	;# 
  2603     029C                     	;# 
  2604     029C                     	;# 
  2605     029D                     	;# 
  2606     029E                     	;# 
  2607     029E                     	;# 
  2608     0311                     	;# 
  2609     0311                     	;# 
  2610     0312                     	;# 
  2611     0313                     	;# 
  2612     0318                     	;# 
  2613     0318                     	;# 
  2614     0319                     	;# 
  2615     031A                     	;# 
  2616     0394                     	;# 
  2617     0395                     	;# 
  2618     0396                     	;# 
  2619     039A                     	;# 
  2620     039C                     	;# 
  2621     039D                     	;# 
  2622     039E                     	;# 
  2623     039F                     	;# 
  2624     0415                     	;# 
  2625     0416                     	;# 
  2626     0417                     	;# 
  2627     041C                     	;# 
  2628     041D                     	;# 
  2629     041E                     	;# 
  2630     0FE4                     	;# 
  2631     0FE5                     	;# 
  2632     0FE6                     	;# 
  2633     0FE7                     	;# 
  2634     0FE8                     	;# 
  2635     0FE9                     	;# 
  2636     0FEA                     	;# 
  2637     0FEB                     	;# 
  2638     0FED                     	;# 
  2639     0FEE                     	;# 
  2640     0FEF                     	;# 
  2641                           
  2642 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  2643     0000                     
  2644 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  2645     0000                     
  2646 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  2647     0000                     
  2648                           	psect	idataBANK0
  2649     0B70                     __pidataBANK0:
  2650                           
  2651                           ;initializer for _kpf
  2652     0B70  3415               	retlw	21
  2653     0B71  3400               	retlw	0
  2654     0B72  3400               	retlw	0
  2655                           
  2656                           ;initializer for _first_read
  2657     0B73  3401               	retlw	1
  2658                           
  2659                           	psect	idataBANK2
  2660     0C42                     __pidataBANK2:
  2661                           
  2662                           ;initializer for _timecontrol
  2663     0C42  3404               	retlw	4
  2664     0C43  3400               	retlw	0
  2665     0C44  3400               	retlw	0
  2666                           
  2667                           ;initializer for _kdp
  2668     0C45  340F               	retlw	15
  2669     0C46  3400               	retlw	0
  2670     0C47  3400               	retlw	0
  2671                           
  2672                           ;initializer for _kip
  2673     0C48  3411               	retlw	17
  2674     0C49  3400               	retlw	0
  2675     0C4A  3400               	retlw	0
  2676                           
  2677                           ;initializer for _kpp
  2678     0C4B  3420               	retlw	32
  2679     0C4C  3400               	retlw	0
  2680     0C4D  3400               	retlw	0
  2681                           
  2682                           ;initializer for _kdf
  2683     0C4E  346D               	retlw	109
  2684     0C4F  3400               	retlw	0
  2685     0C50  3400               	retlw	0
  2686                           
  2687                           ;initializer for _kif
  2688     0C51  3402               	retlw	2
  2689     0C52  3400               	retlw	0
  2690     0C53  3400               	retlw	0
  2691                           
  2692                           	psect	stringtext1
  2693     0445                     __pstringtext1:
  2694     0445                     _lookupTable:
  2695     0445  348D               	retlw	141
  2696     0446  34B3               	retlw	179
  2697     0447  3429               	retlw	41
  2698     0448  343D               	retlw	61
  2699     0449  343E               	retlw	62
  2700     044A  3403               	retlw	3
  2701     044B  342A               	retlw	42
  2702     044C  343D               	retlw	61
  2703     044D  34F0               	retlw	240
  2704     044E  3452               	retlw	82
  2705     044F  342A               	retlw	42
  2706     0450  343D               	retlw	61
  2707     0451  3494               	retlw	148
  2708     0452  34A1               	retlw	161
  2709     0453  342A               	retlw	42
  2710     0454  343D               	retlw	61
  2711     0455  3445               	retlw	69
  2712     0456  34F1               	retlw	241
  2713     0457  342A               	retlw	42
  2714     0458  343D               	retlw	61
  2715     0459  34EA               	retlw	234
  2716     045A  343F               	retlw	63
  2717     045B  342B               	retlw	43
  2718     045C  343D               	retlw	61
  2719     045D  348F               	retlw	143
  2720     045E  348E               	retlw	142
  2721     045F  342B               	retlw	43
  2722     0460  343D               	retlw	61
  2723     0461  3433               	retlw	51
  2724     0462  34DD               	retlw	221
  2725     0463  342B               	retlw	43
  2726     0464  343D               	retlw	61
  2727     0465  34D8               	retlw	216
  2728     0466  342B               	retlw	43
  2729     0467  342C               	retlw	44
  2730     0468  343D               	retlw	61
  2731     0469  3470               	retlw	112
  2732     046A  3479               	retlw	121
  2733     046B  342C               	retlw	44
  2734     046C  343D               	retlw	61
  2735     046D  3415               	retlw	21
  2736     046E  34C8               	retlw	200
  2737     046F  342C               	retlw	44
  2738     0470  343D               	retlw	61
  2739     0471  34AD               	retlw	173
  2740     0472  3415               	retlw	21
  2741     0473  342D               	retlw	45
  2742     0474  343D               	retlw	61
  2743     0475  3452               	retlw	82
  2744     0476  3464               	retlw	100
  2745     0477  342D               	retlw	45
  2746     0478  343D               	retlw	61
  2747     0479  34EA               	retlw	234
  2748     047A  34B1               	retlw	177
  2749     047B  342D               	retlw	45
  2750     047C  343D               	retlw	61
  2751     047D  3482               	retlw	130
  2752     047E  34FF               	retlw	255
  2753     047F  342D               	retlw	45
  2754     0480  343D               	retlw	61
  2755     0481  341A               	retlw	26
  2756     0482  344D               	retlw	77
  2757     0483  342E               	retlw	46
  2758     0484  343D               	retlw	61
  2759     0485  34A6               	retlw	166
  2760     0486  3499               	retlw	153
  2761     0487  342E               	retlw	46
  2762     0488  343D               	retlw	61
  2763     0489  343E               	retlw	62
  2764     048A  34E7               	retlw	231
  2765     048B  342E               	retlw	46
  2766     048C  343D               	retlw	61
  2767     048D  34D7               	retlw	215
  2768     048E  3434               	retlw	52
  2769     048F  342F               	retlw	47
  2770     0490  343D               	retlw	61
  2771     0491  3462               	retlw	98
  2772     0492  3481               	retlw	129
  2773     0493  342F               	retlw	47
  2774     0494  343D               	retlw	61
  2775     0495  34EE               	retlw	238
  2776     0496  34CD               	retlw	205
  2777     0497  342F               	retlw	47
  2778     0498  343D               	retlw	61
  2779     0499  347A               	retlw	122
  2780     049A  341A               	retlw	26
  2781     049B  3430               	retlw	48
  2782     049C  343D               	retlw	61
  2783     049D  3406               	retlw	6
  2784     049E  3467               	retlw	103
  2785     049F  3430               	retlw	48
  2786     04A0  343D               	retlw	61
  2787     04A1  3492               	retlw	146
  2788     04A2  34B3               	retlw	179
  2789     04A3  3430               	retlw	48
  2790     04A4  343D               	retlw	61
  2791     04A5  341D               	retlw	29
  2792     04A6  3400               	retlw	0
  2793     04A7  3431               	retlw	49
  2794     04A8  343D               	retlw	61
  2795     04A9  34A9               	retlw	169
  2796     04AA  344C               	retlw	76
  2797     04AB  3431               	retlw	49
  2798     04AC  343D               	retlw	61
  2799     04AD  3429               	retlw	41
  2800     04AE  3498               	retlw	152
  2801     04AF  3431               	retlw	49
  2802     04B0  343D               	retlw	61
  2803     04B1  34B4               	retlw	180
  2804     04B2  34E4               	retlw	228
  2805     04B3  3431               	retlw	49
  2806     04B4  343D               	retlw	61
  2807     04B5  3434               	retlw	52
  2808     04B6  3430               	retlw	48
  2809     04B7  3432               	retlw	50
  2810     04B8  343D               	retlw	61
  2811     04B9  34B3               	retlw	179
  2812     04BA  347B               	retlw	123
  2813     04BB  3432               	retlw	50
  2814     04BC  343D               	retlw	61
  2815     04BD  3432               	retlw	50
  2816     04BE  34C7               	retlw	199
  2817     04BF  3432               	retlw	50
  2818     04C0  343D               	retlw	61
  2819     04C1  34B2               	retlw	178
  2820     04C2  3412               	retlw	18
  2821     04C3  3433               	retlw	51
  2822     04C4  343D               	retlw	61
  2823     04C5  3431               	retlw	49
  2824     04C6  345E               	retlw	94
  2825     04C7  3433               	retlw	51
  2826     04C8  343D               	retlw	61
  2827     04C9  34B0               	retlw	176
  2828     04CA  34A9               	retlw	169
  2829     04CB  3433               	retlw	51
  2830     04CC  343D               	retlw	61
  2831     04CD  3423               	retlw	35
  2832     04CE  34F4               	retlw	244
  2833     04CF  3433               	retlw	51
  2834     04D0  343D               	retlw	61
  2835     04D1  34A3               	retlw	163
  2836     04D2  343F               	retlw	63
  2837     04D3  3434               	retlw	52
  2838     04D4  343D               	retlw	61
  2839     04D5  3416               	retlw	22
  2840     04D6  348A               	retlw	138
  2841     04D7  3434               	retlw	52
  2842     04D8  343D               	retlw	61
  2843     04D9  3489               	retlw	137
  2844     04DA  34D4               	retlw	212
  2845     04DB  3434               	retlw	52
  2846     04DC  343D               	retlw	61
  2847     04DD  34FB               	retlw	251
  2848     04DE  341E               	retlw	30
  2849     04DF  3435               	retlw	53
  2850     04E0  343D               	retlw	61
  2851     04E1  346E               	retlw	110
  2852     04E2  3469               	retlw	105
  2853     04E3  3435               	retlw	53
  2854     04E4  343D               	retlw	61
  2855     04E5  34E1               	retlw	225
  2856     04E6  34B3               	retlw	179
  2857     04E7  3435               	retlw	53
  2858     04E8  343D               	retlw	61
  2859     04E9  3454               	retlw	84
  2860     04EA  34FE               	retlw	254
  2861     04EB  3435               	retlw	53
  2862     04EC  343D               	retlw	61
  2863     04ED  34C7               	retlw	199
  2864     04EE  3448               	retlw	72
  2865     04EF  3436               	retlw	54
  2866     04F0  343D               	retlw	61
  2867     04F1  342E               	retlw	46
  2868     04F2  3492               	retlw	146
  2869     04F3  3436               	retlw	54
  2870     04F4  343D               	retlw	61
  2871     04F5  34A0               	retlw	160
  2872     04F6  34DC               	retlw	220
  2873     04F7  3436               	retlw	54
  2874     04F8  343D               	retlw	61
  2875     04F9  3407               	retlw	7
  2876     04FA  3426               	retlw	38
  2877     04FB  3437               	retlw	55
  2878     04FC  343D               	retlw	61
  2879     04FD  346D               	retlw	109
  2880     04FE  346F               	retlw	111
  2881     04FF  3437               	retlw	55
  2882     0500  343D               	retlw	61
  2883     0501  34D4               	retlw	212
  2884     0502  34B8               	retlw	184
  2885     0503  3437               	retlw	55
  2886     0504  343D               	retlw	61
  2887     0505  343A               	retlw	58
  2888     0506  3402               	retlw	2
  2889     0507  3438               	retlw	56
  2890     0508  343D               	retlw	61
  2891     0509  34A1               	retlw	161
  2892     050A  344B               	retlw	75
  2893     050B  3438               	retlw	56
  2894     050C  343D               	retlw	61
  2895     050D  3407               	retlw	7
  2896     050E  3495               	retlw	149
  2897     050F  3438               	retlw	56
  2898     0510  343D               	retlw	61
  2899     0511                     __end_of_lookupTable:
  2900                           
  2901                           	psect	nvBANK0
  2902     006E                     __pnvBANK0:
  2903     006E                     _TMR1_GateInterruptHandler:
  2904     006E                     	ds	2
  2905                           
  2906                           	psect	nvBANK2
  2907     0132                     __pnvBANK2:
  2908     0132                     _EUSART_ErrorHandler:
  2909     0132                     	ds	2
  2910     0134                     _EUSART_OverrunErrorHandler:
  2911     0134                     	ds	2
  2912     0136                     _EUSART_FramingErrorHandler:
  2913     0136                     	ds	2
  2914     0018                     _T1CONbits	set	24
  2915     0018                     _T1CON	set	24
  2916     0016                     _TMR1L	set	22
  2917     0017                     _TMR1H	set	23
  2918     0019                     _T1GCON	set	25
  2919     0015                     _TMR0	set	21
  2920     0013                     _PIR3bits	set	19
  2921     001C                     _T2CON	set	28
  2922     0011                     _PIR1bits	set	17
  2923     001A                     _TMR2	set	26
  2924     001B                     _PR2	set	27
  2925     000B                     _INTCONbits	set	11
  2926     009D                     _ADCON0bits	set	157
  2927     009D                     _ADCON0	set	157
  2928     009C                     _ADRESH	set	156
  2929     009B                     _ADRESL	set	155
  2930     009E                     _ADCON1	set	158
  2931     0095                     _OPTION_REG	set	149
  2932     0091                     _PIE1bits	set	145
  2933     0095                     _OPTION_REGbits	set	149
  2934     008D                     _TRISB	set	141
  2935     008C                     _TRISA	set	140
  2936     0097                     _WDTCON	set	151
  2937     0098                     _OSCTUNE	set	152
  2938     0099                     _OSCCON	set	153
  2939     010C                     _LATAbits	set	268
  2940     0115                     _CMOUTbits	set	277
  2941     0112                     _CM1CON1	set	274
  2942     0111                     _CM1CON0	set	273
  2943     0119                     _DACCON1	set	281
  2944     0118                     _DACCON0	set	280
  2945     0117                     _FVRCON	set	279
  2946     011E                     _APFCON1	set	286
  2947     011D                     _APFCON0	set	285
  2948     010D                     _LATB	set	269
  2949     010C                     _LATA	set	268
  2950     0116                     _BORCON	set	278
  2951     019A                     _TXREG	set	410
  2952     0199                     _RCREG	set	409
  2953     019D                     _RCSTAbits	set	413
  2954     019C                     _SPBRGH	set	412
  2955     019B                     _SPBRGL	set	411
  2956     019E                     _TXSTA	set	414
  2957     019D                     _RCSTA	set	413
  2958     019F                     _BAUDCON	set	415
  2959     018C                     _ANSELA	set	396
  2960     018D                     _ANSELB	set	397
  2961     020C                     _WPUA	set	524
  2962     020D                     _WPUB	set	525
  2963     029E                     _CCPTMRS0bits	set	670
  2964     0291                     _CCPR1L	set	657
  2965     0292                     _CCPR1H	set	658
  2966     0296                     _PSTR1CON	set	662
  2967     0294                     _PWM1CON	set	660
  2968     0295                     _ECCP1AS	set	661
  2969     0293                     _CCP1CON	set	659
  2970     041E                     _T6CON	set	1054
  2971     041C                     _TMR6	set	1052
  2972     041D                     _PR6	set	1053
  2973     0417                     _T4CONbits	set	1047
  2974     0417                     _T4CON	set	1047
  2975     0415                     _TMR4	set	1045
  2976     0416                     _PR4	set	1046
  2977                           
  2978                           	psect	cinit
  2979     001B                     start_initialization:	
  2980                           ; #config settings
  2981                           
  2982     001B                     __initialization:
  2983                           
  2984                           ; Initialize objects allocated to BANK0
  2985     001B  3070               	movlw	low __pidataBANK0
  2986     001C  0084               	movwf	4
  2987     001D  308B               	movlw	(high __pidataBANK0)| (0+128)
  2988     001E  0085               	movwf	5
  2989     001F  306A               	movlw	low __pdataBANK0
  2990     0020  0086               	movwf	6
  2991     0021  3000               	movlw	high __pdataBANK0
  2992     0022  0087               	movwf	7
  2993     0023  3004               	movlw	4
  2994     0024  318B  239C  3180   	fcall	init_ram
  2995                           
  2996                           ; Initialize objects allocated to BANK2
  2997     0027  3042               	movlw	low __pidataBANK2
  2998     0028  0084               	movwf	4
  2999     0029  308C               	movlw	(high __pidataBANK2)| (0+128)
  3000     002A  0085               	movwf	5
  3001     002B  3020               	movlw	low __pdataBANK2
  3002     002C  0086               	movwf	6
  3003     002D  3001               	movlw	high __pdataBANK2
  3004     002E  0087               	movwf	7
  3005     002F  3012               	movlw	18
  3006     0030  318B  239C  3180   	fcall	init_ram
  3007                           
  3008                           ; Clear objects allocated to BANK0
  3009     0033  3053               	movlw	low __pbssBANK0
  3010     0034  0084               	movwf	4
  3011     0035  3000               	movlw	high __pbssBANK0
  3012     0036  0085               	movwf	5
  3013     0037  3017               	movlw	23
  3014     0038  318B  2396  3180   	fcall	clear_ram0
  3015                           
  3016                           ; Clear objects allocated to BANK1
  3017     003B  30A0               	movlw	low __pbssBANK1
  3018     003C  0084               	movwf	4
  3019     003D  3000               	movlw	high __pbssBANK1
  3020     003E  0085               	movwf	5
  3021     003F  302D               	movlw	45
  3022     0040  318B  2396         	fcall	clear_ram0
  3023     0042                     end_of_initialization:	
  3024                           ;End of C runtime variable initialization code
  3025                           
  3026     0042                     __end_of__initialization:
  3027     0042  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3028     0043  0020               	movlb	0
  3029     0044  3186  2E8D         	ljmp	_main	;jump to C main() function
  3030                           
  3031                           	psect	bssBANK0
  3032     0053                     __pbssBANK0:
  3033     0053                     _bufferRx:
  3034     0053                     	ds	8
  3035     005B                     _flux:
  3036     005B                     	ds	3
  3037     005E                     _ballset:
  3038     005E                     	ds	3
  3039     0061                     _tempo_voo:
  3040     0061                     	ds	2
  3041     0063                     _sp_height:
  3042     0063                     	ds	2
  3043     0065                     _ADC_InterruptHandler:
  3044     0065                     	ds	2
  3045     0067                     _func_mode:
  3046     0067                     	ds	1
  3047     0068                     _sentido:
  3048     0068                     	ds	1
  3049     0069                     _timer0ReloadVal:
  3050     0069                     	ds	1
  3051                           
  3052                           	psect	dataBANK0
  3053     006A                     __pdataBANK0:
  3054     006A                     _kpf:
  3055     006A                     	ds	3
  3056     006D                     _first_read:
  3057     006D                     	ds	1
  3058                           
  3059                           	psect	bssBANK1
  3060     00A0                     __pbssBANK1:
  3061     00A0                     _avg_tempo_voo:
  3062     00A0                     	ds	4
  3063     00A4                     _outpre:
  3064     00A4                     	ds	3
  3065     00A7                     _outputsum:
  3066     00A7                     	ds	3
  3067     00AA                     _balldist:
  3068     00AA                     	ds	3
  3069     00AD                     _errorp:
  3070     00AD                     	ds	3
  3071     00B0                     _error:
  3072     00B0                     	ds	3
  3073     00B3                     _height:
  3074     00B3                     	ds	2
  3075     00B5                     _adc_temp:
  3076     00B5                     	ds	2
  3077     00B7                     _sp_position:
  3078     00B7                     	ds	2
  3079     00B9                     _position:
  3080     00B9                     	ds	2
  3081     00BB                     _dc:
  3082     00BB                     	ds	2
  3083     00BD                     _vRx:
  3084     00BD                     	ds	2
  3085     00BF                     _vTx:
  3086     00BF                     	ds	2
  3087     00C1                     _output:
  3088     00C1                     	ds	2
  3089     00C3                     _timer1ReloadVal:
  3090     00C3                     	ds	2
  3091     00C5                     _passo_ctrl:
  3092     00C5                     	ds	1
  3093     00C6                     _fim_curso:
  3094     00C6                     	ds	1
  3095     00C7                     _passo:
  3096     00C7                     	ds	1
  3097     00C8                     _nao_salva:
  3098     00C8                     	ds	1
  3099     00C9                     _count_Tx:
  3100     00C9                     	ds	1
  3101     00CA                     _countRx:
  3102     00CA                     	ds	1
  3103     00CB                     _controlchoice:
  3104     00CB                     	ds	1
  3105     00CC                     _eusartRxLastError:
  3106     00CC                     	ds	1
  3107                           
  3108                           	psect	dataBANK2
  3109     0120                     __pdataBANK2:
  3110     0120                     _timecontrol:
  3111     0120                     	ds	3
  3112     0123                     _kdp:
  3113     0123                     	ds	3
  3114     0126                     _kip:
  3115     0126                     	ds	3
  3116     0129                     _kpp:
  3117     0129                     	ds	3
  3118     012C                     _kdf:
  3119     012C                     	ds	3
  3120     012F                     _kif:
  3121     012F                     	ds	3
  3122                           
  3123                           	psect	inittext
  3124     0B9C                     init_ram:
  3125     0B9C  00FE               	movwf	126
  3126     0B9D                     initloop:
  3127     0B9D  0012               	moviw fsr0++
  3128     0B9E  001E               	movwi fsr1++
  3129     0B9F  0BFE               	decfsz	126,f
  3130     0BA0  2B9D               	goto	initloop
  3131     0BA1  3400               	retlw	0
  3132                           
  3133                           	psect	clrtext
  3134     0B96                     clear_ram0:	
  3135                           ;	Called with FSR0 containing the base address, and
  3136                           ;	WREG with the size to clear
  3137                           
  3138     0B96  0064               	clrwdt	;clear the watchdog before getting into this loop
  3139     0B97                     clrloop0:
  3140     0B97  0180               	clrf	0	;clear RAM location pointed to by FSR
  3141     0B98  3101               	addfsr 0,1
  3142     0B99  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3143     0B9A  2B97               	goto	clrloop0	;have we reached the end yet?
  3144     0B9B  3400               	retlw	0	;all done for this memory range, return
  3145                           
  3146                           	psect	cstackBANK1
  3147     00CD                     __pcstackBANK1:
  3148     00CD                     ??_PIN_MANAGER_Initialize:
  3149     00CD                     ??_OSCILLATOR_Initialize:	
  3150                           ; 1 bytes @ 0x0
  3151                           
  3152     00CD                     ??_WDT_Initialize:	
  3153                           ; 1 bytes @ 0x0
  3154                           
  3155     00CD                     ??_FVR_Initialize:	
  3156                           ; 1 bytes @ 0x0
  3157                           
  3158     00CD                     ??_DAC_Initialize:	
  3159                           ; 1 bytes @ 0x0
  3160                           
  3161     00CD                     ??_TMR4_Initialize:	
  3162                           ; 1 bytes @ 0x0
  3163                           
  3164     00CD                     ??_TMR2_Initialize:	
  3165                           ; 1 bytes @ 0x0
  3166                           
  3167     00CD                     ??_TMR0_Initialize:	
  3168                           ; 1 bytes @ 0x0
  3169                           
  3170     00CD                     ??_TMR6_Initialize:	
  3171                           ; 1 bytes @ 0x0
  3172                           
  3173     00CD                     ??_CMP1_Initialize:	
  3174                           ; 1 bytes @ 0x0
  3175                           
  3176     00CD                     ??_ADC_Initialize:	
  3177                           ; 1 bytes @ 0x0
  3178                           
  3179     00CD                     ??_EPWM1_Initialize:	
  3180                           ; 1 bytes @ 0x0
  3181                           
  3182     00CD                     ?_EUSART_SetFramingErrorHandler:	
  3183                           ; 1 bytes @ 0x0
  3184                           
  3185     00CD                     ?_EUSART_SetOverrunErrorHandler:	
  3186                           ; 1 bytes @ 0x0
  3187                           
  3188     00CD                     ?_EUSART_SetErrorHandler:	
  3189                           ; 1 bytes @ 0x0
  3190                           
  3191     00CD                     ?_TMR1_SetGateInterruptHandler:	
  3192                           ; 1 bytes @ 0x0
  3193                           
  3194     00CD                     ?_definePassoMotor:	
  3195                           ; 1 bytes @ 0x0
  3196                           
  3197     00CD                     ??_TMR4_StartTimer:	
  3198                           ; 1 bytes @ 0x0
  3199                           
  3200     00CD                     ??_TMR4_StopTimer:	
  3201                           ; 1 bytes @ 0x0
  3202                           
  3203     00CD                     ?_EPWM1_LoadDutyValue:	
  3204                           ; 1 bytes @ 0x0
  3205                           
  3206     00CD                     ??_EUSART_is_rx_ready:	
  3207                           ; 1 bytes @ 0x0
  3208                           
  3209     00CD                     ??_EUSART_Read:	
  3210                           ; 1 bytes @ 0x0
  3211                           
  3212     00CD                     ??_EUSART_Write:	
  3213                           ; 1 bytes @ 0x0
  3214                           
  3215     00CD                     ??_TMR0_ReadTimer:	
  3216                           ; 1 bytes @ 0x0
  3217                           
  3218     00CD                     ??_CMP1_GetOutputStatus:	
  3219                           ; 1 bytes @ 0x0
  3220                           
  3221     00CD                     ??_TMR6_WriteTimer:	
  3222                           ; 1 bytes @ 0x0
  3223                           
  3224     00CD                     ??_TMR6_LoadPeriodRegister:	
  3225                           ; 1 bytes @ 0x0
  3226                           
  3227     00CD                     ?_ADC_GetConversion:	
  3228                           ; 1 bytes @ 0x0
  3229                           
  3230     00CD                     ?___lwdiv:	
  3231                           ; 2 bytes @ 0x0
  3232                           
  3233     00CD                     ?___tmul:	
  3234                           ; 2 bytes @ 0x0
  3235                           
  3236     00CD                     ?___fltol:	
  3237                           ; 3 bytes @ 0x0
  3238                           
  3239     00CD                     EUSART_Write@txData:	
  3240                           ; 4 bytes @ 0x0
  3241                           
  3242     00CD                     TMR0_ReadTimer@readVal:	
  3243                           ; 1 bytes @ 0x0
  3244                           
  3245     00CD                     TMR6_WriteTimer@timerVal:	
  3246                           ; 1 bytes @ 0x0
  3247                           
  3248     00CD                     TMR6_LoadPeriodRegister@periodVal:	
  3249                           ; 1 bytes @ 0x0
  3250                           
  3251     00CD                     definePassoMotor@sentido:	
  3252                           ; 1 bytes @ 0x0
  3253                           
  3254     00CD                     EPWM1_LoadDutyValue@dutyValue:	
  3255                           ; 1 bytes @ 0x0
  3256                           
  3257     00CD                     EUSART_SetFramingErrorHandler@interruptHandler:	
  3258                           ; 2 bytes @ 0x0
  3259                           
  3260     00CD                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  3261                           ; 2 bytes @ 0x0
  3262                           
  3263     00CD                     EUSART_SetErrorHandler@interruptHandler:	
  3264                           ; 2 bytes @ 0x0
  3265                           
  3266     00CD                     TMR1_SetGateInterruptHandler@InterruptHandler:	
  3267                           ; 2 bytes @ 0x0
  3268                           
  3269     00CD                     ___lwdiv@divisor:	
  3270                           ; 2 bytes @ 0x0
  3271                           
  3272     00CD                     ___tmul@multiplier:	
  3273                           ; 2 bytes @ 0x0
  3274                           
  3275     00CD                     ___fltol@f1:	
  3276                           ; 3 bytes @ 0x0
  3277                           
  3278                           
  3279                           ; 4 bytes @ 0x0
  3280     00CD                     	ds	1
  3281     00CE                     ??_definePassoMotor:
  3282                           
  3283                           ; 1 bytes @ 0x1
  3284     00CE                     	ds	1
  3285     00CF                     ??_TMR1_Initialize:
  3286     00CF                     ??_EUSART_Initialize:	
  3287                           ; 1 bytes @ 0x2
  3288                           
  3289     00CF                     ??_EUSART_SetFramingErrorHandler:	
  3290                           ; 1 bytes @ 0x2
  3291                           
  3292     00CF                     ??_EUSART_SetOverrunErrorHandler:	
  3293                           ; 1 bytes @ 0x2
  3294                           
  3295     00CF                     ??_EUSART_SetErrorHandler:	
  3296                           ; 1 bytes @ 0x2
  3297                           
  3298     00CF                     ??_TMR1_SetGateInterruptHandler:	
  3299                           ; 1 bytes @ 0x2
  3300                           
  3301     00CF                     ??_SYSTEM_Initialize:	
  3302                           ; 1 bytes @ 0x2
  3303                           
  3304     00CF                     ??_EPWM1_LoadDutyValue:	
  3305                           ; 1 bytes @ 0x2
  3306                           
  3307     00CF                     ??_ADC_GetConversion:	
  3308                           ; 1 bytes @ 0x2
  3309                           
  3310     00CF                     definePassoMotor@passom:	
  3311                           ; 1 bytes @ 0x2
  3312                           
  3313     00CF                     ___lwdiv@dividend:	
  3314                           ; 1 bytes @ 0x2
  3315                           
  3316                           
  3317                           ; 2 bytes @ 0x2
  3318     00CF                     	ds	1
  3319     00D0                     ??_daUmPasso:
  3320     00D0                     ADC_GetConversion@channel:	
  3321                           ; 1 bytes @ 0x3
  3322                           
  3323     00D0                     daUmPasso@sentido:	
  3324                           ; 1 bytes @ 0x3
  3325                           
  3326     00D0                     ___tmul@multiplicand:	
  3327                           ; 1 bytes @ 0x3
  3328                           
  3329                           
  3330                           ; 3 bytes @ 0x3
  3331     00D0                     	ds	1
  3332     00D1                     ??_setaPorta:
  3333     00D1                     ??_fluxpos:	
  3334                           ; 1 bytes @ 0x4
  3335                           
  3336     00D1                     ??_analisa_Rx:	
  3337                           ; 1 bytes @ 0x4
  3338                           
  3339     00D1                     ??___fltol:	
  3340                           ; 1 bytes @ 0x4
  3341                           
  3342     00D1                     ??___lwdiv:	
  3343                           ; 1 bytes @ 0x4
  3344                           
  3345                           
  3346                           ; 1 bytes @ 0x4
  3347     00D1                     	ds	1
  3348     00D2                     ___lwdiv@quotient:
  3349                           
  3350                           ; 2 bytes @ 0x5
  3351     00D2                     	ds	1
  3352     00D3                     ??___tmul:
  3353     00D3                     ___tmul@product:	
  3354                           ; 1 bytes @ 0x6
  3355                           
  3356                           
  3357                           ; 3 bytes @ 0x6
  3358     00D3                     	ds	1
  3359     00D4                     ___lwdiv@counter:
  3360                           
  3361                           ; 1 bytes @ 0x7
  3362     00D4                     	ds	1
  3363     00D5                     ___fltol@sign1:
  3364                           
  3365                           ; 1 bytes @ 0x8
  3366     00D5                     	ds	1
  3367     00D6                     ??_fluxcontrol:
  3368     00D6                     ?___atdiv:	
  3369                           ; 1 bytes @ 0x9
  3370                           
  3371     00D6                     ___fltol@exp1:	
  3372                           ; 3 bytes @ 0x9
  3373                           
  3374     00D6                     ___atdiv@divisor:	
  3375                           ; 1 bytes @ 0x9
  3376                           
  3377                           
  3378                           ; 3 bytes @ 0x9
  3379     00D6                     	ds	1
  3380     00D7                     ??_envia_Tx:
  3381                           
  3382                           ; 1 bytes @ 0xA
  3383     00D7                     	ds	2
  3384     00D9                     ___atdiv@dividend:
  3385                           
  3386                           ; 3 bytes @ 0xC
  3387     00D9                     	ds	3
  3388     00DC                     ??___atdiv:
  3389                           
  3390                           ; 1 bytes @ 0xF
  3391     00DC                     	ds	1
  3392     00DD                     ___atdiv@counter:
  3393                           
  3394                           ; 1 bytes @ 0x10
  3395     00DD                     	ds	1
  3396     00DE                     ___atdiv@sign:
  3397                           
  3398                           ; 1 bytes @ 0x11
  3399     00DE                     	ds	1
  3400     00DF                     ___atdiv@quotient:
  3401                           
  3402                           ; 3 bytes @ 0x12
  3403     00DF                     	ds	3
  3404     00E2                     ??_pwmcontrol:
  3405                           
  3406                           ; 1 bytes @ 0x15
  3407     00E2                     	ds	12
  3408     00EE                     ??_controlchoose:
  3409     00EE                     ??_main:	
  3410                           ; 1 bytes @ 0x21
  3411                           
  3412                           
  3413                           ; 1 bytes @ 0x21
  3414     00EE                     	ds	1
  3415                           
  3416                           	psect	cstackCOMMON
  3417     0070                     __pcstackCOMMON:
  3418     0070                     ?_PIN_MANAGER_Initialize:
  3419     0070                     ?_OSCILLATOR_Initialize:	
  3420                           ; 1 bytes @ 0x0
  3421                           
  3422     0070                     ?_WDT_Initialize:	
  3423                           ; 1 bytes @ 0x0
  3424                           
  3425     0070                     ?_FVR_Initialize:	
  3426                           ; 1 bytes @ 0x0
  3427                           
  3428     0070                     ?_DAC_Initialize:	
  3429                           ; 1 bytes @ 0x0
  3430                           
  3431     0070                     ?_TMR4_Initialize:	
  3432                           ; 1 bytes @ 0x0
  3433                           
  3434     0070                     ?_TMR2_Initialize:	
  3435                           ; 1 bytes @ 0x0
  3436                           
  3437     0070                     ?_TMR0_Initialize:	
  3438                           ; 1 bytes @ 0x0
  3439                           
  3440     0070                     ?_TMR6_Initialize:	
  3441                           ; 1 bytes @ 0x0
  3442                           
  3443     0070                     ?_CMP1_Initialize:	
  3444                           ; 1 bytes @ 0x0
  3445                           
  3446     0070                     ?_ADC_Initialize:	
  3447                           ; 1 bytes @ 0x0
  3448                           
  3449     0070                     ?_EPWM1_Initialize:	
  3450                           ; 1 bytes @ 0x0
  3451                           
  3452     0070                     ?_TMR1_Initialize:	
  3453                           ; 1 bytes @ 0x0
  3454                           
  3455     0070                     ?_EUSART_Initialize:	
  3456                           ; 1 bytes @ 0x0
  3457                           
  3458     0070                     ?_TMR1_GATE_ISR:	
  3459                           ; 1 bytes @ 0x0
  3460                           
  3461     0070                     ?_TMR1_DefaultGateInterruptHandler:	
  3462                           ; 1 bytes @ 0x0
  3463                           
  3464     0070                     ??_TMR1_DefaultGateInterruptHandler:	
  3465                           ; 1 bytes @ 0x0
  3466                           
  3467     0070                     ?_daUmPasso:	
  3468                           ; 1 bytes @ 0x0
  3469                           
  3470     0070                     ?_pwmcontrol:	
  3471                           ; 1 bytes @ 0x0
  3472                           
  3473     0070                     ?_fluxcontrol:	
  3474                           ; 1 bytes @ 0x0
  3475                           
  3476     0070                     ?_SYSTEM_Initialize:	
  3477                           ; 1 bytes @ 0x0
  3478                           
  3479     0070                     ?_PIN_MANAGER_IOC:	
  3480                           ; 1 bytes @ 0x0
  3481                           
  3482     0070                     ??_PIN_MANAGER_IOC:	
  3483                           ; 1 bytes @ 0x0
  3484                           
  3485     0070                     ?_TMR4_StartTimer:	
  3486                           ; 1 bytes @ 0x0
  3487                           
  3488     0070                     ?_TMR4_StopTimer:	
  3489                           ; 1 bytes @ 0x0
  3490                           
  3491     0070                     ?_INTERRUPT_InterruptManager:	
  3492                           ; 1 bytes @ 0x0
  3493                           
  3494     0070                     ?_EUSART_is_rx_ready:	
  3495                           ; 1 bytes @ 0x0
  3496                           
  3497     0070                     ?_EUSART_Read:	
  3498                           ; 1 bytes @ 0x0
  3499                           
  3500     0070                     ?_EUSART_Write:	
  3501                           ; 1 bytes @ 0x0
  3502                           
  3503     0070                     ?_TMR0_ReadTimer:	
  3504                           ; 1 bytes @ 0x0
  3505                           
  3506     0070                     ?_CMP1_GetOutputStatus:	
  3507                           ; 1 bytes @ 0x0
  3508                           
  3509     0070                     ?_TMR6_WriteTimer:	
  3510                           ; 1 bytes @ 0x0
  3511                           
  3512     0070                     ?_TMR6_LoadPeriodRegister:	
  3513                           ; 1 bytes @ 0x0
  3514                           
  3515     0070                     ?_TMR1_WriteTimer:	
  3516                           ; 1 bytes @ 0x0
  3517                           
  3518     0070                     ?_TMR1_Reload:	
  3519                           ; 1 bytes @ 0x0
  3520                           
  3521     0070                     ?_setaPorta:	
  3522                           ; 1 bytes @ 0x0
  3523                           
  3524     0070                     ?_fluxpos:	
  3525                           ; 1 bytes @ 0x0
  3526                           
  3527     0070                     ?_controlchoose:	
  3528                           ; 1 bytes @ 0x0
  3529                           
  3530     0070                     ?_analisa_Rx:	
  3531                           ; 1 bytes @ 0x0
  3532                           
  3533     0070                     ?_envia_Tx:	
  3534                           ; 1 bytes @ 0x0
  3535                           
  3536     0070                     ?_mede_height:	
  3537                           ; 1 bytes @ 0x0
  3538                           
  3539     0070                     ?_main:	
  3540                           ; 1 bytes @ 0x0
  3541                           
  3542     0070                     ?__Umul8_16:	
  3543                           ; 1 bytes @ 0x0
  3544                           
  3545     0070                     ?_TMR1_ReadTimer:	
  3546                           ; 2 bytes @ 0x0
  3547                           
  3548     0070                     ?i1___lwdiv:	
  3549                           ; 2 bytes @ 0x0
  3550                           
  3551     0070                     __Umul8_16@multiplicand:	
  3552                           ; 2 bytes @ 0x0
  3553                           
  3554     0070                     TMR1_WriteTimer@timerVal:	
  3555                           ; 1 bytes @ 0x0
  3556                           
  3557     0070                     i1___lwdiv@divisor:	
  3558                           ; 2 bytes @ 0x0
  3559                           
  3560                           
  3561                           ; 2 bytes @ 0x0
  3562     0070                     	ds	2
  3563     0072                     ??__Umul8_16:
  3564     0072                     ??_TMR1_ReadTimer:	
  3565                           ; 1 bytes @ 0x2
  3566                           
  3567     0072                     ??_TMR1_WriteTimer:	
  3568                           ; 1 bytes @ 0x2
  3569                           
  3570     0072                     ??_TMR1_Reload:	
  3571                           ; 1 bytes @ 0x2
  3572                           
  3573     0072                     i1___lwdiv@dividend:	
  3574                           ; 1 bytes @ 0x2
  3575                           
  3576                           
  3577                           ; 2 bytes @ 0x2
  3578     0072                     	ds	2
  3579     0074                     ??i1___lwdiv:
  3580     0074                     __Umul8_16@product:	
  3581                           ; 1 bytes @ 0x4
  3582                           
  3583                           
  3584                           ; 2 bytes @ 0x4
  3585     0074                     	ds	1
  3586     0075                     i1___lwdiv@quotient:
  3587                           
  3588                           ; 2 bytes @ 0x5
  3589     0075                     	ds	1
  3590     0076                     __Umul8_16@word_mpld:
  3591                           
  3592                           ; 2 bytes @ 0x6
  3593     0076                     	ds	1
  3594     0077                     i1___lwdiv@counter:
  3595     0077                     TMR1_ReadTimer@readVal:	
  3596                           ; 1 bytes @ 0x7
  3597                           
  3598                           
  3599                           ; 2 bytes @ 0x7
  3600     0077                     	ds	1
  3601     0078                     __Umul8_16@multiplier:
  3602                           
  3603                           ; 1 bytes @ 0x8
  3604     0078                     	ds	1
  3605     0079                     ??___flmul:
  3606     0079                     TMR1_ReadTimer@readValHigh:	
  3607                           ; 1 bytes @ 0x9
  3608                           
  3609                           
  3610                           ; 1 bytes @ 0x9
  3611     0079                     	ds	1
  3612     007A                     TMR1_ReadTimer@readValLow:
  3613                           
  3614                           ; 1 bytes @ 0xA
  3615     007A                     	ds	4
  3616     007E                     ??_TMR1_GATE_ISR:
  3617     007E                     ??_INTERRUPT_InterruptManager:	
  3618                           ; 1 bytes @ 0xE
  3619                           
  3620                           
  3621                           	psect	cstackBANK0
  3622     0020                     __pcstackBANK0:	
  3623                           ; 1 bytes @ 0xE
  3624                           
  3625     0020                     ?___flmul:
  3626     0020                     ___flmul@b:	
  3627                           ; 4 bytes @ 0x0
  3628                           
  3629                           
  3630                           ; 4 bytes @ 0x0
  3631     0020                     	ds	4
  3632     0024                     ___flmul@a:
  3633                           
  3634                           ; 4 bytes @ 0x4
  3635     0024                     	ds	4
  3636     0028                     ___flmul@sign:
  3637                           
  3638                           ; 1 bytes @ 0x8
  3639     0028                     	ds	1
  3640     0029                     ___flmul@aexp:
  3641                           
  3642                           ; 1 bytes @ 0x9
  3643     0029                     	ds	1
  3644     002A                     ___flmul@grs:
  3645                           
  3646                           ; 4 bytes @ 0xA
  3647     002A                     	ds	4
  3648     002E                     ___flmul@bexp:
  3649                           
  3650                           ; 1 bytes @ 0xE
  3651     002E                     	ds	1
  3652     002F                     ___flmul@prod:
  3653                           
  3654                           ; 4 bytes @ 0xF
  3655     002F                     	ds	4
  3656     0033                     ___flmul@temp:
  3657                           
  3658                           ; 2 bytes @ 0x13
  3659     0033                     	ds	2
  3660     0035                     ?i1___fltol:
  3661     0035                     i1___fltol@f1:	
  3662                           ; 4 bytes @ 0x15
  3663                           
  3664                           
  3665                           ; 4 bytes @ 0x15
  3666     0035                     	ds	4
  3667     0039                     ??i1___fltol:
  3668                           
  3669                           ; 1 bytes @ 0x19
  3670     0039                     	ds	4
  3671     003D                     i1___fltol@sign1:
  3672                           
  3673                           ; 1 bytes @ 0x1D
  3674     003D                     	ds	1
  3675     003E                     i1___fltol@exp1:
  3676                           
  3677                           ; 1 bytes @ 0x1E
  3678     003E                     	ds	1
  3679     003F                     ?___xxtofl:
  3680     003F                     ___xxtofl@val:	
  3681                           ; 4 bytes @ 0x1F
  3682                           
  3683                           
  3684                           ; 4 bytes @ 0x1F
  3685     003F                     	ds	4
  3686     0043                     ??___xxtofl:
  3687                           
  3688                           ; 1 bytes @ 0x23
  3689     0043                     	ds	4
  3690     0047                     ___xxtofl@sign:
  3691                           
  3692                           ; 1 bytes @ 0x27
  3693     0047                     	ds	1
  3694     0048                     ___xxtofl@exp:
  3695                           
  3696                           ; 1 bytes @ 0x28
  3697     0048                     	ds	1
  3698     0049                     ___xxtofl@arg:
  3699                           
  3700                           ; 4 bytes @ 0x29
  3701     0049                     	ds	4
  3702     004D                     ??_mede_height:
  3703                           
  3704                           ; 1 bytes @ 0x2D
  3705     004D                     	ds	6
  3706                           
  3707                           	psect	maintext
  3708     068D                     __pmaintext:	
  3709 ;;
  3710 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  3711 ;;
  3712 ;; *************** function _main *****************
  3713 ;; Defined at:
  3714 ;;		line 312 in file "main.c"
  3715 ;; Parameters:    Size  Location     Type
  3716 ;;		None
  3717 ;; Auto vars:     Size  Location     Type
  3718 ;;		None
  3719 ;; Return value:  Size  Location     Type
  3720 ;;                  1    wreg      void 
  3721 ;; Registers used:
  3722 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3723 ;; Tracked objects:
  3724 ;;		On entry : B1F/0
  3725 ;;		On exit  : 1F/2
  3726 ;;		Unchanged: 0/0
  3727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3728 ;;      Params:         0       0       0       0       0       0
  3729 ;;      Locals:         0       0       0       0       0       0
  3730 ;;      Temps:          0       0       1       0       0       0
  3731 ;;      Totals:         0       0       1       0       0       0
  3732 ;;Total ram usage:        1 bytes
  3733 ;; Hardware stack levels required when called: 8
  3734 ;; This function calls:
  3735 ;;		_ADC_GetConversion
  3736 ;;		_EUSART_Read
  3737 ;;		_EUSART_is_rx_ready
  3738 ;;		_SYSTEM_Initialize
  3739 ;;		_TMR0_ReadTimer
  3740 ;;		_TMR1_SetGateInterruptHandler
  3741 ;;		_TMR4_StopTimer
  3742 ;;		_TMR6_LoadPeriodRegister
  3743 ;;		_TMR6_WriteTimer
  3744 ;;		_analisa_Rx
  3745 ;;		_controlchoose
  3746 ;;		_envia_Tx
  3747 ;;		_fluxpos
  3748 ;;		_setaPorta
  3749 ;; This function is called by:
  3750 ;;		Startup code after reset
  3751 ;; This function uses a non-reentrant model
  3752 ;;
  3753                           
  3754     068D                     _main:	
  3755                           ;psect for function _main
  3756                           
  3757                           
  3758                           ;main.c: 315:     SYSTEM_Initialize();
  3759                           
  3760                           ;incstack = 0
  3761                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3762     068D  318D  2574  3186   	fcall	_SYSTEM_Initialize
  3763                           
  3764                           ;main.c: 316:     TMR1_SetGateInterruptHandler(mede_height);
  3765     0690  30D3               	movlw	low _mede_height
  3766     0691  00CD               	movwf	TMR1_SetGateInterruptHandler@InterruptHandler^(0+128)
  3767     0692  3005               	movlw	high _mede_height
  3768     0693  00CE               	movwf	(TMR1_SetGateInterruptHandler@InterruptHandler^(0+128)+1)
  3769     0694  318B  23D1  3186   	fcall	_TMR1_SetGateInterruptHandler
  3770                           
  3771                           ;main.c: 321:     (INTCONbits.GIE = 1);
  3772     0697  178B               	bsf	11,7	;volatile
  3773                           
  3774                           ;main.c: 324:     (INTCONbits.PEIE = 1);
  3775     0698  170B               	bsf	11,6	;volatile
  3776                           
  3777                           ;main.c: 331:     setaPorta();
  3778     0699  318C  24B6  3186   	fcall	_setaPorta
  3779                           
  3780                           ;main.c: 332:     LATAbits.LATA7=CMOUTbits.MC1OUT;
  3781     069C  0022               	movlb	2	; select bank2
  3782     069D  1815               	btfsc	21,0	;volatile
  3783     069E  2F29               	goto	L1
  3784     069F                     u2920:
  3785     069F  0022               	movlb	2	; select bank2
  3786     06A0  138C               	bcf	12,7	;volatile
  3787     06A1                     l3087:
  3788                           
  3789                           ;main.c: 335:     {;main.c: 336:         if(PIR3bits.TMR4IF==1){
  3790     06A1  0020               	movlb	0	; select bank0
  3791     06A2  1C93               	btfss	19,1	;volatile
  3792     06A3  2EAB               	goto	l3095
  3793                           
  3794                           ;main.c: 337:             PIR3bits.TMR4IF=0;
  3795     06A4  1093               	bcf	19,1	;volatile
  3796                           
  3797                           ;main.c: 338:             TMR4_StopTimer();
  3798     06A5  318B  235E  3186   	fcall	_TMR4_StopTimer
  3799                           
  3800                           ;main.c: 339:             controlchoose();
  3801     06A8  318C  2430  3186   	fcall	_controlchoose
  3802     06AB                     l3095:
  3803                           
  3804                           ;main.c: 341:         if (EUSART_is_rx_ready()){
  3805     06AB  318B  2374  3186   	fcall	_EUSART_is_rx_ready
  3806     06AE  3A00               	xorlw	0
  3807     06AF  1903               	skipnz
  3808     06B0  2EEB               	goto	l3127
  3809                           
  3810                           ;main.c: 342:             TMR6_LoadPeriodRegister(0xF9);
  3811     06B1  30F9               	movlw	249
  3812     06B2  318B  238A  3186   	fcall	_TMR6_LoadPeriodRegister
  3813                           
  3814                           ;main.c: 343:             nao_salva = 0;
  3815     06B5  0021               	movlb	1	; select bank1
  3816     06B6  01C8               	clrf	_nao_salva^(0+128)
  3817     06B7                     l3117:	
  3818                           ;main.c: 344:             while(countRx<8 -1){
  3819                           
  3820                           
  3821                           ;main.c: 344:             while(countRx<8 -1){
  3822     06B7  3007               	movlw	7
  3823     06B8  024A               	subwf	_countRx^(0+128),w
  3824     06B9  1803               	btfsc	3,0
  3825     06BA  2EDE               	goto	l3119
  3826                           
  3827                           ;main.c: 345:                 TMR6_WriteTimer(0);
  3828     06BB  3000               	movlw	0
  3829     06BC  318B  2390  3186   	fcall	_TMR6_WriteTimer
  3830                           
  3831                           ;main.c: 346:                 PIR3bits.TMR6IF = 0;
  3832     06BF  0020               	movlb	0	; select bank0
  3833     06C0  1193               	bcf	19,3	;volatile
  3834     06C1                     l3107:	
  3835                           ;main.c: 347:                 while(!EUSART_is_rx_ready()){
  3836                           
  3837                           
  3838                           ;main.c: 347:                 while(!EUSART_is_rx_ready()){
  3839     06C1  318B  2374  3186   	fcall	_EUSART_is_rx_ready
  3840     06C4  3A00               	xorlw	0
  3841     06C5  1D03               	btfss	3,2
  3842     06C6  2ECC               	goto	l3109
  3843                           
  3844                           ;main.c: 348:                     if(PIR3bits.TMR6IF){
  3845     06C7  1D93               	btfss	19,3	;volatile
  3846     06C8  2EC1               	goto	l3107
  3847                           
  3848                           ;main.c: 349:                         nao_salva = 1;
  3849     06C9  0021               	movlb	1	; select bank1
  3850     06CA  01C8               	clrf	_nao_salva^(0+128)
  3851     06CB  0AC8               	incf	_nao_salva^(0+128),f
  3852     06CC                     l3109:	
  3853                           ;main.c: 350:                         break;
  3854                           
  3855                           
  3856                           ;main.c: 353:                 if(nao_salva == 1){
  3857     06CC  0021               	movlb	1	; select bank1
  3858     06CD  0348               	decf	_nao_salva^(0+128),w
  3859     06CE  1903               	btfsc	3,2
  3860     06CF  2EDE               	goto	l3119
  3861                           
  3862                           ;main.c: 356:                 bufferRx[countRx] = EUSART_Read();
  3863     06D0  084A               	movf	_countRx^(0+128),w
  3864     06D1  3E53               	addlw	(low (_bufferRx| 0))& (0+255)
  3865     06D2  0086               	movwf	6
  3866     06D3  0187               	clrf	7
  3867     06D4  3187  27F4  3186   	fcall	_EUSART_Read
  3868     06D7  0081               	movwf	1
  3869                           
  3870                           ;main.c: 357:                 countRx++;
  3871     06D8  3001               	movlw	1
  3872     06D9  0021               	movlb	1	; select bank1
  3873     06DA  00EE               	movwf	??_main^(0+128)
  3874     06DB  086E               	movf	??_main^(0+128),w
  3875     06DC  07CA               	addwf	_countRx^(0+128),f
  3876     06DD  2EB7               	goto	l3117
  3877     06DE                     l3119:
  3878                           
  3879                           ;main.c: 359:             analisa_Rx();
  3880     06DE  3185  2511  3186   	fcall	_analisa_Rx
  3881                           
  3882                           ;main.c: 360:             TMR6_LoadPeriodRegister(0x4A);
  3883     06E1  304A               	movlw	74
  3884     06E2  318B  238A  3186   	fcall	_TMR6_LoadPeriodRegister
  3885                           
  3886                           ;main.c: 361:             TMR6_WriteTimer(0);
  3887     06E5  3000               	movlw	0
  3888     06E6  318B  2390  3186   	fcall	_TMR6_WriteTimer
  3889                           
  3890                           ;main.c: 362:             PIR3bits.TMR6IF = 0;
  3891     06E9  0020               	movlb	0	; select bank0
  3892     06EA  1193               	bcf	19,3	;volatile
  3893     06EB                     l3127:
  3894                           
  3895                           ;main.c: 364:         if(INTCONbits.TMR0IF == 1){
  3896     06EB  1D0B               	btfss	11,2	;volatile
  3897     06EC  2EFF               	goto	l3143
  3898                           
  3899                           ;main.c: 365:             INTCONbits.TMR0IF = 0;
  3900     06ED  110B               	bcf	11,2	;volatile
  3901                           
  3902                           ;main.c: 366:             fluxpos();
  3903     06EE  3187  27BF  3186   	fcall	_fluxpos
  3904                           
  3905                           ;main.c: 367:             passo_ctrl = 0;
  3906     06F1  01C5               	clrf	_passo_ctrl^(0+128)
  3907                           
  3908                           ;main.c: 368:             count_Tx ++;
  3909     06F2  3001               	movlw	1
  3910     06F3  00EE               	movwf	??_main^(0+128)
  3911     06F4  086E               	movf	??_main^(0+128),w
  3912     06F5  07C9               	addwf	_count_Tx^(0+128),f
  3913                           
  3914                           ;main.c: 369:             if (count_Tx == 6){
  3915     06F6  3006               	movlw	6
  3916     06F7  0649               	xorwf	_count_Tx^(0+128),w
  3917     06F8  1D03               	btfss	3,2
  3918     06F9  2EFF               	goto	l3143
  3919                           
  3920                           ;main.c: 370:                 envia_Tx ();
  3921     06FA  318F  278C  3186   	fcall	_envia_Tx
  3922                           
  3923                           ;main.c: 371:                 count_Tx = 0;
  3924     06FD  0021               	movlb	1	; select bank1
  3925     06FE  01C9               	clrf	_count_Tx^(0+128)
  3926     06FF                     l3143:
  3927                           
  3928                           ;main.c: 374:         if(PIR3bits.TMR6IF == 1){
  3929     06FF  0020               	movlb	0	; select bank0
  3930     0700  1D93               	btfss	19,3	;volatile
  3931     0701  2F16               	goto	l3155
  3932                           
  3933                           ;main.c: 375:             PIR3bits.TMR6IF = 0;
  3934     0702  1193               	bcf	19,3	;volatile
  3935                           
  3936                           ;main.c: 376:             TMR6_WriteTimer(0);
  3937     0703  3000               	movlw	0
  3938     0704  318B  2390  3186   	fcall	_TMR6_WriteTimer
  3939                           
  3940                           ;main.c: 377:             adc_temp = ADC_GetConversion(channel_AN8);
  3941     0707  3008               	movlw	8
  3942     0708  318C  2483  3186   	fcall	_ADC_GetConversion
  3943     070B  084E               	movf	(?_ADC_GetConversion+1)^(0+128),w
  3944     070C  00B6               	movwf	(_adc_temp+1)^(0+128)
  3945     070D  084D               	movf	?_ADC_GetConversion^(0+128),w
  3946     070E  00B5               	movwf	_adc_temp^(0+128)
  3947     070F  0022               	movlb	2	; select bank2
  3948     0710  170C               	bsf	12,6	;volatile
  3949                           
  3950                           ;main.c: 379:             _delay((unsigned long)((15)*(16000000/4000000.0)));
  3951     0711  3014               	movlw	20
  3952     0712                     u3077:
  3953     0712  0B89               	decfsz	9,f
  3954     0713  2F12               	goto	u3077
  3955     0714  0022               	movlb	2	; select bank2
  3956     0715  130C               	bcf	12,6	;volatile
  3957     0716                     l3155:
  3958                           
  3959                           ;main.c: 382:         if(TMR0_ReadTimer() >= 0x7F && passo_ctrl == 0){
  3960     0716  318B  2384  3186   	fcall	_TMR0_ReadTimer
  3961     0719  00EE               	movwf	??_main^(0+128)
  3962     071A  307F               	movlw	127
  3963     071B  026E               	subwf	??_main^(0+128),w
  3964     071C  1C03               	skipc
  3965     071D  2F26               	goto	l3163
  3966     071E  0845               	movf	_passo_ctrl^(0+128),w
  3967     071F  1D03               	btfss	3,2
  3968     0720  2F26               	goto	l3163
  3969                           
  3970                           ;main.c: 383:             passo_ctrl = 1;
  3971     0721  01C5               	clrf	_passo_ctrl^(0+128)
  3972     0722  0AC5               	incf	_passo_ctrl^(0+128),f
  3973                           
  3974                           ;main.c: 384:             fluxpos();
  3975     0723  3187  27BF  3186   	fcall	_fluxpos
  3976     0726                     l3163:
  3977                           
  3978                           ;main.c: 386:         LATAbits.LATA7=CMOUTbits.MC1OUT;
  3979     0726  0022               	movlb	2	; select bank2
  3980     0727  1C15               	btfss	21,0	;volatile
  3981     0728  2E9F               	goto	u2920
  3982     0729                     L1:
  3983     0729  0022               	movlb	2	; select bank2
  3984     072A  178C               	bsf	12,7	;volatile
  3985     072B  2EA1               	goto	l3087
  3986     072C                     __end_of_main:
  3987                           
  3988                           	psect	text1
  3989     0CB6                     __ptext1:	
  3990 ;; *************** function _setaPorta *****************
  3991 ;; Defined at:
  3992 ;;		line 53 in file "main.c"
  3993 ;; Parameters:    Size  Location     Type
  3994 ;;		None
  3995 ;; Auto vars:     Size  Location     Type
  3996 ;;		None
  3997 ;; Return value:  Size  Location     Type
  3998 ;;                  1    wreg      void 
  3999 ;; Registers used:
  4000 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4001 ;; Tracked objects:
  4002 ;;		On entry : 1F/0
  4003 ;;		On exit  : 1F/1
  4004 ;;		Unchanged: 0/0
  4005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4006 ;;      Params:         0       0       0       0       0       0
  4007 ;;      Locals:         0       0       0       0       0       0
  4008 ;;      Temps:          0       0       1       0       0       0
  4009 ;;      Totals:         0       0       1       0       0       0
  4010 ;;Total ram usage:        1 bytes
  4011 ;; Hardware stack levels used: 1
  4012 ;; Hardware stack levels required when called: 7
  4013 ;; This function calls:
  4014 ;;		_CMP1_GetOutputStatus
  4015 ;;		_daUmPasso
  4016 ;; This function is called by:
  4017 ;;		_main
  4018 ;; This function uses a non-reentrant model
  4019 ;;
  4020                           
  4021     0CB6                     _setaPorta:	
  4022                           ;psect for function _setaPorta
  4023                           
  4024     0CB6                     l2957:	
  4025                           ;main.c: 54:     while(!CMP1_GetOutputStatus()){
  4026                           
  4027                           ;incstack = 0
  4028                           ; Regs used in _setaPorta: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4029                           
  4030                           
  4031                           ;main.c: 54:     while(!CMP1_GetOutputStatus()){
  4032     0CB6  318B  236C  318C   	fcall	_CMP1_GetOutputStatus
  4033     0CB9  3A00               	xorlw	0
  4034     0CBA  1D03               	btfss	3,2
  4035     0CBB  2CCA               	goto	l586
  4036                           
  4037                           ;main.c: 55:         daUmPasso(1);
  4038     0CBC  3001               	movlw	1
  4039     0CBD  318D  250A  318C   	fcall	_daUmPasso
  4040                           
  4041                           ;main.c: 56:         _delay((unsigned long)((6)*(16000000/4000.0)));
  4042     0CC0  3020               	movlw	32
  4043     0CC1  0021               	movlb	1	; select bank1
  4044     0CC2  00D1               	movwf	??_setaPorta^(0+128)
  4045     0CC3  3029               	movlw	41
  4046     0CC4                     u3087:
  4047     0CC4  0B89               	decfsz	9,f
  4048     0CC5  2CC4               	goto	u3087
  4049     0CC6  0BD1               	decfsz	??_setaPorta^(0+128),f
  4050     0CC7  2CC4               	goto	u3087
  4051     0CC8  3200               	nop2
  4052     0CC9  2CB6               	goto	l2957
  4053     0CCA                     l586:
  4054                           
  4055                           ;main.c: 59:     fim_curso = 1;
  4056     0CCA  0021               	movlb	1	; select bank1
  4057     0CCB  01C6               	clrf	_fim_curso^(0+128)
  4058     0CCC  0AC6               	incf	_fim_curso^(0+128),f
  4059                           
  4060                           ;main.c: 60:     position = 0;
  4061     0CCD  01B9               	clrf	_position^(0+128)
  4062     0CCE  01BA               	clrf	(_position+1)^(0+128)
  4063     0CCF  0008               	return
  4064     0CD0                     __end_of_setaPorta:
  4065                           
  4066                           	psect	text2
  4067     0B6C                     __ptext2:	
  4068 ;; *************** function _CMP1_GetOutputStatus *****************
  4069 ;; Defined at:
  4070 ;;		line 69 in file "mcc_generated_files/cmp1.c"
  4071 ;; Parameters:    Size  Location     Type
  4072 ;;		None
  4073 ;; Auto vars:     Size  Location     Type
  4074 ;;		None
  4075 ;; Return value:  Size  Location     Type
  4076 ;;                  1    wreg      _Bool 
  4077 ;; Registers used:
  4078 ;;		wreg, status,2, status,0
  4079 ;; Tracked objects:
  4080 ;;		On entry : 0/0
  4081 ;;		On exit  : 1F/2
  4082 ;;		Unchanged: 0/0
  4083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4084 ;;      Params:         0       0       0       0       0       0
  4085 ;;      Locals:         0       0       0       0       0       0
  4086 ;;      Temps:          0       0       0       0       0       0
  4087 ;;      Totals:         0       0       0       0       0       0
  4088 ;;Total ram usage:        0 bytes
  4089 ;; Hardware stack levels used: 1
  4090 ;; Hardware stack levels required when called: 5
  4091 ;; This function calls:
  4092 ;;		Nothing
  4093 ;; This function is called by:
  4094 ;;		_setaPorta
  4095 ;; This function uses a non-reentrant model
  4096 ;;
  4097                           
  4098     0B6C                     _CMP1_GetOutputStatus:	
  4099                           ;psect for function _CMP1_GetOutputStatus
  4100                           
  4101                           
  4102                           ;mcc_generated_files/cmp1.c: 71:  return (CMOUTbits.MC1OUT);
  4103                           
  4104                           ;incstack = 0
  4105                           ; Regs used in _CMP1_GetOutputStatus: [wreg+status,2+status,0]
  4106     0B6C  0022               	movlb	2	; select bank2
  4107     0B6D  0815               	movf	21,w	;volatile
  4108     0B6E  3901               	andlw	1
  4109     0B6F  0008               	return
  4110     0B70                     __end_of_CMP1_GetOutputStatus:
  4111                           
  4112                           	psect	text3
  4113     07BF                     __ptext3:	
  4114 ;; *************** function _fluxpos *****************
  4115 ;; Defined at:
  4116 ;;		line 141 in file "main.c"
  4117 ;; Parameters:    Size  Location     Type
  4118 ;;		None
  4119 ;; Auto vars:     Size  Location     Type
  4120 ;;		None
  4121 ;; Return value:  Size  Location     Type
  4122 ;;                  1    wreg      void 
  4123 ;; Registers used:
  4124 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4125 ;; Tracked objects:
  4126 ;;		On entry : 1E/0
  4127 ;;		On exit  : 1F/1
  4128 ;;		Unchanged: 0/0
  4129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4130 ;;      Params:         0       0       0       0       0       0
  4131 ;;      Locals:         0       0       0       0       0       0
  4132 ;;      Temps:          0       0       0       0       0       0
  4133 ;;      Totals:         0       0       0       0       0       0
  4134 ;;Total ram usage:        0 bytes
  4135 ;; Hardware stack levels used: 1
  4136 ;; Hardware stack levels required when called: 7
  4137 ;; This function calls:
  4138 ;;		_daUmPasso
  4139 ;; This function is called by:
  4140 ;;		_main
  4141 ;; This function uses a non-reentrant model
  4142 ;;
  4143                           
  4144     07BF                     _fluxpos:	
  4145                           ;psect for function _fluxpos
  4146                           
  4147                           
  4148                           ;main.c: 142:     if(controlchoice==2){
  4149                           
  4150                           ;incstack = 0
  4151                           ; Regs used in _fluxpos: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4152     07BF  3002               	movlw	2
  4153     07C0  0021               	movlb	1	; select bank1
  4154     07C1  064B               	xorwf	_controlchoice^(0+128),w
  4155     07C2  1D03               	btfss	3,2
  4156     07C3  2FDC               	goto	l2971
  4157                           
  4158                           ;main.c: 143:         if(output>position) daUmPasso(0);
  4159     07C4  0842               	movf	(_output+1)^(0+128),w
  4160     07C5  023A               	subwf	(_position+1)^(0+128),w
  4161     07C6  1D03               	skipz
  4162     07C7  2FCA               	goto	u2765
  4163     07C8  0841               	movf	_output^(0+128),w
  4164     07C9  0239               	subwf	_position^(0+128),w
  4165     07CA                     u2765:
  4166     07CA  1803               	skipnc
  4167     07CB  2FD0               	goto	l2967
  4168     07CC  3000               	movlw	0
  4169     07CD  318D  250A         	fcall	_daUmPasso
  4170     07CF  0008               	return
  4171     07D0                     l2967:
  4172     07D0  083A               	movf	(_position+1)^(0+128),w
  4173     07D1  0242               	subwf	(_output+1)^(0+128),w
  4174     07D2  1D03               	skipz
  4175     07D3  2FD6               	goto	u2775
  4176     07D4  0839               	movf	_position^(0+128),w
  4177     07D5  0241               	subwf	_output^(0+128),w
  4178     07D6                     u2775:
  4179     07D6  1803               	skipnc
  4180     07D7  0008               	return
  4181     07D8  3001               	movlw	1
  4182     07D9  318D  250A         	fcall	_daUmPasso
  4183     07DB  0008               	return
  4184     07DC                     l2971:
  4185                           
  4186                           ;main.c: 147:         if(sp_position>position) daUmPasso(0);
  4187     07DC  0838               	movf	(_sp_position+1)^(0+128),w
  4188     07DD  023A               	subwf	(_position+1)^(0+128),w
  4189     07DE  1D03               	skipz
  4190     07DF  2FE2               	goto	u2785
  4191     07E0  0837               	movf	_sp_position^(0+128),w
  4192     07E1  0239               	subwf	_position^(0+128),w
  4193     07E2                     u2785:
  4194     07E2  1803               	skipnc
  4195     07E3  2FE8               	goto	l2975
  4196     07E4  3000               	movlw	0
  4197     07E5  318D  250A         	fcall	_daUmPasso
  4198     07E7  0008               	return
  4199     07E8                     l2975:
  4200     07E8  083A               	movf	(_position+1)^(0+128),w
  4201     07E9  0238               	subwf	(_sp_position+1)^(0+128),w
  4202     07EA  1D03               	skipz
  4203     07EB  2FEE               	goto	u2795
  4204     07EC  0839               	movf	_position^(0+128),w
  4205     07ED  0237               	subwf	_sp_position^(0+128),w
  4206     07EE                     u2795:
  4207     07EE  1803               	skipnc
  4208     07EF  0008               	return
  4209     07F0  3001               	movlw	1
  4210     07F1  318D  250A         	fcall	_daUmPasso
  4211     07F3  0008               	return
  4212     07F4                     __end_of_fluxpos:
  4213                           
  4214                           	psect	text4
  4215     0D0A                     __ptext4:	
  4216 ;; *************** function _daUmPasso *****************
  4217 ;; Defined at:
  4218 ;;		line 63 in file "main.c"
  4219 ;; Parameters:    Size  Location     Type
  4220 ;;  sentido         1    wreg     unsigned char 
  4221 ;; Auto vars:     Size  Location     Type
  4222 ;;  sentido         1    3[BANK1 ] unsigned char 
  4223 ;; Return value:  Size  Location     Type
  4224 ;;                  1    wreg      void 
  4225 ;; Registers used:
  4226 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4227 ;; Tracked objects:
  4228 ;;		On entry : 1C/2
  4229 ;;		On exit  : 1F/1
  4230 ;;		Unchanged: 0/0
  4231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4232 ;;      Params:         0       0       0       0       0       0
  4233 ;;      Locals:         0       0       1       0       0       0
  4234 ;;      Temps:          0       0       0       0       0       0
  4235 ;;      Totals:         0       0       1       0       0       0
  4236 ;;Total ram usage:        1 bytes
  4237 ;; Hardware stack levels used: 1
  4238 ;; Hardware stack levels required when called: 6
  4239 ;; This function calls:
  4240 ;;		_definePassoMotor
  4241 ;; This function is called by:
  4242 ;;		_setaPorta
  4243 ;;		_fluxpos
  4244 ;; This function uses a non-reentrant model
  4245 ;;
  4246                           
  4247     0D0A                     _daUmPasso:	
  4248                           ;psect for function _daUmPasso
  4249                           
  4250                           
  4251                           ;incstack = 0
  4252                           ; Regs used in _daUmPasso: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4253                           ;daUmPasso@sentido stored from wreg
  4254     0D0A  0021               	movlb	1	; select bank1
  4255     0D0B  00D0               	movwf	daUmPasso@sentido^(0+128)
  4256                           
  4257                           ;main.c: 64:     if (fim_curso) {
  4258     0D0C  0846               	movf	_fim_curso^(0+128),w
  4259     0D0D  1903               	btfsc	3,2
  4260     0D0E  2D24               	goto	l2787
  4261                           
  4262                           ;main.c: 65:         if(sentido == 1){
  4263     0D0F  0350               	decf	daUmPasso@sentido^(0+128),w
  4264     0D10  1D03               	btfss	3,2
  4265     0D11  2D17               	goto	l2781
  4266                           
  4267                           ;main.c: 66:             position--;
  4268     0D12  3001               	movlw	1
  4269     0D13  02B9               	subwf	_position^(0+128),f
  4270     0D14  3000               	movlw	0
  4271     0D15  3BBA               	subwfb	(_position+1)^(0+128),f
  4272                           
  4273                           ;main.c: 67:         }
  4274     0D16  2D1E               	goto	l2785
  4275     0D17                     l2781:
  4276     0D17  0850               	movf	daUmPasso@sentido^(0+128),w
  4277     0D18  1D03               	btfss	3,2
  4278     0D19  2D1E               	goto	l2785
  4279                           
  4280                           ;main.c: 69:             position++;
  4281     0D1A  3001               	movlw	1
  4282     0D1B  07B9               	addwf	_position^(0+128),f
  4283     0D1C  3000               	movlw	0
  4284     0D1D  3DBA               	addwfc	(_position+1)^(0+128),f
  4285     0D1E                     l2785:
  4286                           
  4287                           ;main.c: 71:         definePassoMotor(passo, sentido);
  4288     0D1E  0850               	movf	daUmPasso@sentido^(0+128),w
  4289     0D1F  00CD               	movwf	definePassoMotor@sentido^(0+128)
  4290     0D20  0847               	movf	_passo^(0+128),w
  4291     0D21  318E  2606         	fcall	_definePassoMotor
  4292                           
  4293                           ;main.c: 72:     } else {
  4294     0D23  0008               	return
  4295     0D24                     l2787:
  4296                           
  4297                           ;main.c: 73:         definePassoMotor(passo, 1);
  4298     0D24  01CD               	clrf	definePassoMotor@sentido^(0+128)
  4299     0D25  0ACD               	incf	definePassoMotor@sentido^(0+128),f
  4300     0D26  0847               	movf	_passo^(0+128),w
  4301     0D27  318E  2606         	fcall	_definePassoMotor
  4302     0D29  0008               	return
  4303     0D2A                     __end_of_daUmPasso:
  4304                           
  4305                           	psect	text5
  4306     0E06                     __ptext5:	
  4307 ;; *************** function _definePassoMotor *****************
  4308 ;; Defined at:
  4309 ;;		line 77 in file "main.c"
  4310 ;; Parameters:    Size  Location     Type
  4311 ;;  passom          1    wreg     unsigned char 
  4312 ;;  sentido         1    0[BANK1 ] unsigned char 
  4313 ;; Auto vars:     Size  Location     Type
  4314 ;;  passom          1    2[BANK1 ] unsigned char 
  4315 ;; Return value:  Size  Location     Type
  4316 ;;                  1    wreg      void 
  4317 ;; Registers used:
  4318 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4319 ;; Tracked objects:
  4320 ;;		On entry : 1F/1
  4321 ;;		On exit  : 1F/1
  4322 ;;		Unchanged: 0/0
  4323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4324 ;;      Params:         0       0       1       0       0       0
  4325 ;;      Locals:         0       0       1       0       0       0
  4326 ;;      Temps:          0       0       1       0       0       0
  4327 ;;      Totals:         0       0       3       0       0       0
  4328 ;;Total ram usage:        3 bytes
  4329 ;; Hardware stack levels used: 1
  4330 ;; Hardware stack levels required when called: 5
  4331 ;; This function calls:
  4332 ;;		Nothing
  4333 ;; This function is called by:
  4334 ;;		_daUmPasso
  4335 ;; This function uses a non-reentrant model
  4336 ;;
  4337                           
  4338     0E06                     _definePassoMotor:	
  4339                           ;psect for function _definePassoMotor
  4340                           
  4341                           
  4342                           ;incstack = 0
  4343                           ; Regs used in _definePassoMotor: [wreg-fsr0h+status,2+status,0]
  4344                           ;definePassoMotor@passom stored from wreg
  4345     0E06  00CF               	movwf	definePassoMotor@passom^(0+128)
  4346                           
  4347                           ;main.c: 78:     if (sentido == 1) {
  4348     0E07  034D               	decf	definePassoMotor@sentido^(0+128),w
  4349     0E08  1903               	btfsc	3,2
  4350     0E09  2E21               	goto	l2319
  4351     0E0A  2E2F               	goto	l2321
  4352     0E0B                     l601:	
  4353                           ;main.c: 81:                 do { LATAbits.LATA1 = 1; } while(0);
  4354                           
  4355     0E0B  0022               	movlb	2	; select bank2
  4356     0E0C  148C               	bsf	12,1	;volatile
  4357                           
  4358                           ;main.c: 82:                 do { LATAbits.LATA2 = 1; } while(0);
  4359     0E0D  150C               	bsf	12,2	;volatile
  4360                           
  4361                           ;main.c: 83:                 do { LATAbits.LATA3 = 0; } while(0);
  4362     0E0E  118C               	bcf	12,3	;volatile
  4363     0E0F  2E14               	goto	l617
  4364     0E10                     l611:	
  4365                           ;main.c: 87:                 do { LATAbits.LATA1 = 0; } while(0);
  4366                           
  4367                           ;main.c: 84:                 do { LATAbits.LATA4 = 0; } while(0);
  4368                           
  4369     0E10  0022               	movlb	2	; select bank2
  4370     0E11  108C               	bcf	12,1	;volatile
  4371                           
  4372                           ;main.c: 88:                 do { LATAbits.LATA2 = 1; } while(0);
  4373     0E12  150C               	bsf	12,2	;volatile
  4374                           
  4375                           ;main.c: 89:                 do { LATAbits.LATA3 = 1; } while(0);
  4376     0E13  158C               	bsf	12,3	;volatile
  4377     0E14                     l617:	
  4378                           ;main.c: 90:                 do { LATAbits.LATA4 = 0; } while(0);
  4379                           
  4380     0E14  120C               	bcf	12,4	;volatile
  4381     0E15  2E57               	goto	l2329
  4382     0E16                     l620:	
  4383                           ;main.c: 93:                 do { LATAbits.LATA1 = 0; } while(0);
  4384                           
  4385     0E16  0022               	movlb	2	; select bank2
  4386     0E17  108C               	bcf	12,1	;volatile
  4387                           
  4388                           ;main.c: 94:                 do { LATAbits.LATA2 = 0; } while(0);
  4389     0E18  110C               	bcf	12,2	;volatile
  4390                           
  4391                           ;main.c: 95:                 do { LATAbits.LATA3 = 1; } while(0);
  4392     0E19  158C               	bsf	12,3	;volatile
  4393     0E1A  2E1F               	goto	l635
  4394     0E1B                     l629:	
  4395                           ;main.c: 99:                 do { LATAbits.LATA1 = 1; } while(0);
  4396                           
  4397                           ;main.c: 96:                 do { LATAbits.LATA4 = 1; } while(0);
  4398                           
  4399     0E1B  0022               	movlb	2	; select bank2
  4400     0E1C  148C               	bsf	12,1	;volatile
  4401                           
  4402                           ;main.c: 100:                 do { LATAbits.LATA2 = 0; } while(0);
  4403     0E1D  110C               	bcf	12,2	;volatile
  4404                           
  4405                           ;main.c: 101:                 do { LATAbits.LATA3 = 0; } while(0);
  4406     0E1E  118C               	bcf	12,3	;volatile
  4407     0E1F                     l635:	
  4408                           ;main.c: 102:                 do { LATAbits.LATA4 = 1; } while(0);
  4409                           
  4410     0E1F  160C               	bsf	12,4	;volatile
  4411     0E20  2E57               	goto	l2329
  4412     0E21                     l2319:
  4413     0E21  084F               	movf	definePassoMotor@passom^(0+128),w
  4414                           
  4415                           ; Switch size 1, requested type "simple"
  4416                           ; Number of cases is 4, Range of values is 0 to 3
  4417                           ; switch strategies available:
  4418                           ; Name         Instructions Cycles
  4419                           ; simple_byte           13     7 (average)
  4420                           ; direct_byte           14     6 (fixed)
  4421                           ; jumptable            260     6 (fixed)
  4422                           ;	Chosen strategy is simple_byte
  4423     0E22  3A00               	xorlw	0	; case 0
  4424     0E23  1903               	skipnz
  4425     0E24  2E0B               	goto	l601
  4426     0E25  3A01               	xorlw	1	; case 1
  4427     0E26  1903               	skipnz
  4428     0E27  2E10               	goto	l611
  4429     0E28  3A03               	xorlw	3	; case 2
  4430     0E29  1903               	skipnz
  4431     0E2A  2E16               	goto	l620
  4432     0E2B  3A01               	xorlw	1	; case 3
  4433     0E2C  1903               	skipnz
  4434     0E2D  2E1B               	goto	l629
  4435     0E2E  2E57               	goto	l2329
  4436     0E2F                     l2321:
  4437     0E2F  084D               	movf	definePassoMotor@sentido^(0+128),w
  4438     0E30  1903               	btfsc	3,2
  4439     0E31  2E49               	goto	l2327
  4440     0E32  2E57               	goto	l2329
  4441     0E33                     l641:	
  4442                           ;main.c: 109:                 do { LATAbits.LATA4 = 1; } while(0);
  4443                           
  4444     0E33  0022               	movlb	2	; select bank2
  4445     0E34  160C               	bsf	12,4	;volatile
  4446                           
  4447                           ;main.c: 110:                 do { LATAbits.LATA3 = 1; } while(0);
  4448     0E35  158C               	bsf	12,3	;volatile
  4449                           
  4450                           ;main.c: 111:                 do { LATAbits.LATA2 = 0; } while(0);
  4451     0E36  110C               	bcf	12,2	;volatile
  4452     0E37  2E3C               	goto	l657
  4453     0E38                     l651:	
  4454                           ;main.c: 115:                 do { LATAbits.LATA4 = 0; } while(0);
  4455                           
  4456                           ;main.c: 112:                 do { LATAbits.LATA1 = 0; } while(0);
  4457                           
  4458     0E38  0022               	movlb	2	; select bank2
  4459     0E39  120C               	bcf	12,4	;volatile
  4460                           
  4461                           ;main.c: 116:                 do { LATAbits.LATA3 = 1; } while(0);
  4462     0E3A  158C               	bsf	12,3	;volatile
  4463                           
  4464                           ;main.c: 117:                 do { LATAbits.LATA2 = 1; } while(0);
  4465     0E3B  150C               	bsf	12,2	;volatile
  4466     0E3C                     l657:	
  4467                           ;main.c: 118:                 do { LATAbits.LATA1 = 0; } while(0);
  4468                           
  4469     0E3C  108C               	bcf	12,1	;volatile
  4470     0E3D  2E57               	goto	l2329
  4471     0E3E                     l660:	
  4472                           ;main.c: 121:                 do { LATAbits.LATA4 = 0; } while(0);
  4473                           
  4474     0E3E  0022               	movlb	2	; select bank2
  4475     0E3F  120C               	bcf	12,4	;volatile
  4476                           
  4477                           ;main.c: 122:                 do { LATAbits.LATA3 = 0; } while(0);
  4478     0E40  118C               	bcf	12,3	;volatile
  4479                           
  4480                           ;main.c: 123:                 do { LATAbits.LATA2 = 1; } while(0);
  4481     0E41  150C               	bsf	12,2	;volatile
  4482     0E42  2E47               	goto	L3
  4483     0E43                     l669:	
  4484                           ;main.c: 127:                 do { LATAbits.LATA4 = 1; } while(0);
  4485                           
  4486                           ;main.c: 124:                 do { LATAbits.LATA1 = 1; } while(0);
  4487                           
  4488     0E43  0022               	movlb	2	; select bank2
  4489     0E44  160C               	bsf	12,4	;volatile
  4490                           
  4491                           ;main.c: 128:                 do { LATAbits.LATA3 = 0; } while(0);
  4492     0E45  118C               	bcf	12,3	;volatile
  4493                           
  4494                           ;main.c: 129:                 do { LATAbits.LATA2 = 0; } while(0);
  4495     0E46  110C               	bcf	12,2	;volatile
  4496     0E47                     L3:
  4497                           
  4498                           ;main.c: 130:                 do { LATAbits.LATA1 = 1; } while(0);
  4499     0E47  148C               	bsf	12,1	;volatile
  4500     0E48  2E57               	goto	l2329
  4501     0E49                     l2327:
  4502     0E49  084F               	movf	definePassoMotor@passom^(0+128),w
  4503                           
  4504                           ; Switch size 1, requested type "simple"
  4505                           ; Number of cases is 4, Range of values is 0 to 3
  4506                           ; switch strategies available:
  4507                           ; Name         Instructions Cycles
  4508                           ; simple_byte           13     7 (average)
  4509                           ; direct_byte           14     6 (fixed)
  4510                           ; jumptable            260     6 (fixed)
  4511                           ;	Chosen strategy is simple_byte
  4512     0E4A  3A00               	xorlw	0	; case 0
  4513     0E4B  1903               	skipnz
  4514     0E4C  2E33               	goto	l641
  4515     0E4D  3A01               	xorlw	1	; case 1
  4516     0E4E  1903               	skipnz
  4517     0E4F  2E38               	goto	l651
  4518     0E50  3A03               	xorlw	3	; case 2
  4519     0E51  1903               	skipnz
  4520     0E52  2E3E               	goto	l660
  4521     0E53  3A01               	xorlw	1	; case 3
  4522     0E54  1903               	skipnz
  4523     0E55  2E43               	goto	l669
  4524     0E56  2E57               	goto	l2329
  4525     0E57                     l2329:
  4526                           
  4527                           ;main.c: 135:     passo++;
  4528     0E57  3001               	movlw	1
  4529     0E58  0021               	movlb	1	; select bank1
  4530     0E59  00CE               	movwf	??_definePassoMotor^(0+128)
  4531     0E5A  084E               	movf	??_definePassoMotor^(0+128),w
  4532     0E5B  07C7               	addwf	_passo^(0+128),f
  4533                           
  4534                           ;main.c: 136:     passo = passo & 0x03;
  4535     0E5C  0847               	movf	_passo^(0+128),w
  4536     0E5D  3903               	andlw	3
  4537     0E5E  00C7               	movwf	_passo^(0+128)
  4538     0E5F  0008               	return
  4539     0E60                     __end_of_definePassoMotor:
  4540                           
  4541                           	psect	text6
  4542     0F8C                     __ptext6:	
  4543 ;; *************** function _envia_Tx *****************
  4544 ;; Defined at:
  4545 ;;		line 273 in file "main.c"
  4546 ;; Parameters:    Size  Location     Type
  4547 ;;		None
  4548 ;; Auto vars:     Size  Location     Type
  4549 ;;		None
  4550 ;; Return value:  Size  Location     Type
  4551 ;;                  1    wreg      void 
  4552 ;; Registers used:
  4553 ;;		wreg, status,2, status,0, pclath, cstack
  4554 ;; Tracked objects:
  4555 ;;		On entry : 1F/1
  4556 ;;		On exit  : 1F/3
  4557 ;;		Unchanged: 0/0
  4558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4559 ;;      Params:         0       0       0       0       0       0
  4560 ;;      Locals:         0       0       0       0       0       0
  4561 ;;      Temps:          0       0       0       0       0       0
  4562 ;;      Totals:         0       0       0       0       0       0
  4563 ;;Total ram usage:        0 bytes
  4564 ;; Hardware stack levels used: 1
  4565 ;; Hardware stack levels required when called: 6
  4566 ;; This function calls:
  4567 ;;		_EUSART_Write
  4568 ;;		___fltol
  4569 ;; This function is called by:
  4570 ;;		_main
  4571 ;; This function uses a non-reentrant model
  4572 ;;
  4573                           
  4574     0F8C                     _envia_Tx:	
  4575                           ;psect for function _envia_Tx
  4576                           
  4577                           
  4578                           ;main.c: 274:     EUSART_Write(controlchoice);
  4579                           
  4580                           ;incstack = 0
  4581                           ; Regs used in _envia_Tx: [wreg+status,2+status,0+pclath+cstack]
  4582     0F8C  084B               	movf	_controlchoice^(0+128),w
  4583     0F8D  318B  23E1  318F   	fcall	_EUSART_Write
  4584                           
  4585                           ;main.c: 275:     vTx.v = sp_height;
  4586     0F90  0020               	movlb	0	; select bank0
  4587     0F91  0864               	movf	_sp_height+1,w
  4588     0F92  0021               	movlb	1	; select bank1
  4589     0F93  00C0               	movwf	(_vTx+1)^(0+128)
  4590     0F94  0020               	movlb	0	; select bank0
  4591     0F95  0863               	movf	_sp_height,w
  4592     0F96  0021               	movlb	1	; select bank1
  4593     0F97  00BF               	movwf	_vTx^(0+128)
  4594                           
  4595                           ;main.c: 276:     EUSART_Write(vTx.vH);
  4596     0F98  0840               	movf	(_vTx^(0+128)+1),w
  4597     0F99  318B  23E1  318F   	fcall	_EUSART_Write
  4598                           
  4599                           ;main.c: 277:     EUSART_Write(vTx.vL);
  4600     0F9C  0021               	movlb	1	; select bank1
  4601     0F9D  083F               	movf	_vTx^(0+128),w
  4602     0F9E  318B  23E1  318F   	fcall	_EUSART_Write
  4603                           
  4604                           ;main.c: 278:     vTx.v = height;
  4605     0FA1  0021               	movlb	1	; select bank1
  4606     0FA2  0834               	movf	(_height+1)^(0+128),w
  4607     0FA3  00C0               	movwf	(_vTx+1)^(0+128)
  4608     0FA4  0833               	movf	_height^(0+128),w
  4609     0FA5  00BF               	movwf	_vTx^(0+128)
  4610                           
  4611                           ;main.c: 279:     EUSART_Write(vTx.vH);
  4612     0FA6  0840               	movf	(_vTx^(0+128)+1),w
  4613     0FA7  318B  23E1  318F   	fcall	_EUSART_Write
  4614                           
  4615                           ;main.c: 280:     EUSART_Write(vTx.vL);
  4616     0FAA  0021               	movlb	1	; select bank1
  4617     0FAB  083F               	movf	_vTx^(0+128),w
  4618     0FAC  318B  23E1  318F   	fcall	_EUSART_Write
  4619                           
  4620                           ;main.c: 281:     vTx.v = avg_tempo_voo;
  4621     0FAF  0021               	movlb	1	; select bank1
  4622     0FB0  0823               	movf	(_avg_tempo_voo+3)^(0+128),w
  4623     0FB1  00D0               	movwf	(___fltol@f1+3)^(0+128)
  4624     0FB2  0822               	movf	(_avg_tempo_voo+2)^(0+128),w
  4625     0FB3  00CF               	movwf	(___fltol@f1+2)^(0+128)
  4626     0FB4  0821               	movf	(_avg_tempo_voo+1)^(0+128),w
  4627     0FB5  00CE               	movwf	(___fltol@f1+1)^(0+128)
  4628     0FB6  0820               	movf	_avg_tempo_voo^(0+128),w
  4629     0FB7  00CD               	movwf	___fltol@f1^(0+128)
  4630     0FB8  318E  26C1  318F   	fcall	___fltol
  4631     0FBB  084E               	movf	(?___fltol+1)^(0+128),w
  4632     0FBC  00C0               	movwf	(_vTx+1)^(0+128)
  4633     0FBD  084D               	movf	?___fltol^(0+128),w
  4634     0FBE  00BF               	movwf	_vTx^(0+128)
  4635                           
  4636                           ;main.c: 282:     EUSART_Write(vTx.vH);
  4637     0FBF  0840               	movf	(_vTx^(0+128)+1),w
  4638     0FC0  318B  23E1  318F   	fcall	_EUSART_Write
  4639                           
  4640                           ;main.c: 283:     EUSART_Write(vTx.vL);
  4641     0FC3  0021               	movlb	1	; select bank1
  4642     0FC4  083F               	movf	_vTx^(0+128),w
  4643     0FC5  318B  23E1  318F   	fcall	_EUSART_Write
  4644                           
  4645                           ;main.c: 284:     vTx.v = adc_temp;
  4646     0FC8  0021               	movlb	1	; select bank1
  4647     0FC9  0836               	movf	(_adc_temp+1)^(0+128),w
  4648     0FCA  00C0               	movwf	(_vTx+1)^(0+128)
  4649     0FCB  0835               	movf	_adc_temp^(0+128),w
  4650     0FCC  00BF               	movwf	_vTx^(0+128)
  4651                           
  4652                           ;main.c: 285:     EUSART_Write(vTx.vH);
  4653     0FCD  0840               	movf	(_vTx^(0+128)+1),w
  4654     0FCE  318B  23E1  318F   	fcall	_EUSART_Write
  4655                           
  4656                           ;main.c: 286:     EUSART_Write(vTx.vL);
  4657     0FD1  0021               	movlb	1	; select bank1
  4658     0FD2  083F               	movf	_vTx^(0+128),w
  4659     0FD3  318B  23E1  318F   	fcall	_EUSART_Write
  4660                           
  4661                           ;main.c: 287:     vTx.v = sp_position;
  4662     0FD6  0021               	movlb	1	; select bank1
  4663     0FD7  0838               	movf	(_sp_position+1)^(0+128),w
  4664     0FD8  00C0               	movwf	(_vTx+1)^(0+128)
  4665     0FD9  0837               	movf	_sp_position^(0+128),w
  4666     0FDA  00BF               	movwf	_vTx^(0+128)
  4667                           
  4668                           ;main.c: 288:     EUSART_Write(vTx.vH);
  4669     0FDB  0840               	movf	(_vTx^(0+128)+1),w
  4670     0FDC  318B  23E1  318F   	fcall	_EUSART_Write
  4671                           
  4672                           ;main.c: 289:     EUSART_Write(vTx.vL);
  4673     0FDF  0021               	movlb	1	; select bank1
  4674     0FE0  083F               	movf	_vTx^(0+128),w
  4675     0FE1  318B  23E1  318F   	fcall	_EUSART_Write
  4676                           
  4677                           ;main.c: 290:     vTx.v = position;
  4678     0FE4  0021               	movlb	1	; select bank1
  4679     0FE5  083A               	movf	(_position+1)^(0+128),w
  4680     0FE6  00C0               	movwf	(_vTx+1)^(0+128)
  4681     0FE7  0839               	movf	_position^(0+128),w
  4682     0FE8  00BF               	movwf	_vTx^(0+128)
  4683                           
  4684                           ;main.c: 291:     EUSART_Write(vTx.vH);
  4685     0FE9  0840               	movf	(_vTx^(0+128)+1),w
  4686     0FEA  318B  23E1  318F   	fcall	_EUSART_Write
  4687                           
  4688                           ;main.c: 292:     EUSART_Write(vTx.vL);
  4689     0FED  0021               	movlb	1	; select bank1
  4690     0FEE  083F               	movf	_vTx^(0+128),w
  4691     0FEF  318B  23E1  318F   	fcall	_EUSART_Write
  4692                           
  4693                           ;main.c: 293:     vTx.v = dc;
  4694     0FF2  0021               	movlb	1	; select bank1
  4695     0FF3  083C               	movf	(_dc+1)^(0+128),w
  4696     0FF4  00C0               	movwf	(_vTx+1)^(0+128)
  4697     0FF5  083B               	movf	_dc^(0+128),w
  4698     0FF6  00BF               	movwf	_vTx^(0+128)
  4699                           
  4700                           ;main.c: 294:     EUSART_Write(vTx.vH);
  4701     0FF7  0840               	movf	(_vTx^(0+128)+1),w
  4702     0FF8  318B  23E1  318F   	fcall	_EUSART_Write
  4703                           
  4704                           ;main.c: 295:     EUSART_Write(vTx.vL);
  4705     0FFB  0021               	movlb	1	; select bank1
  4706     0FFC  083F               	movf	_vTx^(0+128),w
  4707     0FFD  318B  23E1         	fcall	_EUSART_Write
  4708     0FFF  0008               	return
  4709     1000                     __end_of_envia_Tx:
  4710                           
  4711                           	psect	text7
  4712     0EC1                     __ptext7:	
  4713 ;; *************** function ___fltol *****************
  4714 ;; Defined at:
  4715 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\fltol.c"
  4716 ;; Parameters:    Size  Location     Type
  4717 ;;  f1              4    0[BANK1 ] void 
  4718 ;; Auto vars:     Size  Location     Type
  4719 ;;  exp1            1    9[BANK1 ] unsigned char 
  4720 ;;  sign1           1    8[BANK1 ] unsigned char 
  4721 ;; Return value:  Size  Location     Type
  4722 ;;                  4    0[BANK1 ] long 
  4723 ;; Registers used:
  4724 ;;		wreg, status,2, status,0
  4725 ;; Tracked objects:
  4726 ;;		On entry : 1F/1
  4727 ;;		On exit  : 1F/1
  4728 ;;		Unchanged: 0/0
  4729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4730 ;;      Params:         0       0       4       0       0       0
  4731 ;;      Locals:         0       0       2       0       0       0
  4732 ;;      Temps:          0       0       4       0       0       0
  4733 ;;      Totals:         0       0      10       0       0       0
  4734 ;;Total ram usage:       10 bytes
  4735 ;; Hardware stack levels used: 1
  4736 ;; Hardware stack levels required when called: 5
  4737 ;; This function calls:
  4738 ;;		Nothing
  4739 ;; This function is called by:
  4740 ;;		_envia_Tx
  4741 ;; This function uses a non-reentrant model
  4742 ;;
  4743                           
  4744     0EC1                     ___fltol:	
  4745                           ;psect for function ___fltol
  4746                           
  4747                           
  4748                           ;incstack = 0
  4749                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  4750     0EC1  1003               	clrc
  4751     0EC2  0D4F               	rlf	(___fltol@f1+2)^(0+128),w
  4752     0EC3  0D50               	rlf	(___fltol@f1+3)^(0+128),w
  4753     0EC4  00D6               	movwf	___fltol@exp1^(0+128)
  4754     0EC5  0856               	movf	___fltol@exp1^(0+128),w
  4755     0EC6  1D03               	btfss	3,2
  4756     0EC7  2ED1               	goto	l2875
  4757     0EC8                     l2871:
  4758     0EC8  3000               	movlw	0
  4759     0EC9  00D0               	movwf	(?___fltol+3)^(0+128)
  4760     0ECA  3000               	movlw	0
  4761     0ECB  00CF               	movwf	(?___fltol+2)^(0+128)
  4762     0ECC  3000               	movlw	0
  4763     0ECD  00CE               	movwf	(?___fltol+1)^(0+128)
  4764     0ECE  3000               	movlw	0
  4765     0ECF  00CD               	movwf	?___fltol^(0+128)
  4766     0ED0  0008               	return
  4767     0ED1                     l2875:
  4768     0ED1  084D               	movf	___fltol@f1^(0+128),w
  4769     0ED2  00D1               	movwf	??___fltol^(0+128)
  4770     0ED3  084E               	movf	(___fltol@f1+1)^(0+128),w
  4771     0ED4  00D2               	movwf	(??___fltol^(0+128)+1)
  4772     0ED5  084F               	movf	(___fltol@f1+2)^(0+128),w
  4773     0ED6  00D3               	movwf	(??___fltol^(0+128)+2)
  4774     0ED7  0850               	movf	(___fltol@f1+3)^(0+128),w
  4775     0ED8  00D4               	movwf	(??___fltol^(0+128)+3)
  4776     0ED9  301F               	movlw	31
  4777     0EDA                     u2615:
  4778     0EDA  36D4               	lsrf	(??___fltol^(0+128)+3),f
  4779     0EDB  0CD3               	rrf	(??___fltol^(0+128)+2),f
  4780     0EDC  0CD2               	rrf	(??___fltol^(0+128)+1),f
  4781     0EDD  0CD1               	rrf	??___fltol^(0+128),f
  4782     0EDE  0B89               	decfsz	9,f
  4783     0EDF  2EDA               	goto	u2615
  4784     0EE0  0851               	movf	??___fltol^(0+128),w
  4785     0EE1  00D5               	movwf	___fltol@sign1^(0+128)
  4786     0EE2  17CF               	bsf	(___fltol@f1^(0+128)+2),7
  4787     0EE3  30FF               	movlw	255
  4788     0EE4  05CD               	andwf	___fltol@f1^(0+128),f
  4789     0EE5  30FF               	movlw	255
  4790     0EE6  05CE               	andwf	(___fltol@f1+1)^(0+128),f
  4791     0EE7  30FF               	movlw	255
  4792     0EE8  05CF               	andwf	(___fltol@f1+2)^(0+128),f
  4793     0EE9  3000               	movlw	0
  4794     0EEA  05D0               	andwf	(___fltol@f1+3)^(0+128),f
  4795     0EEB  3096               	movlw	150
  4796     0EEC  02D6               	subwf	___fltol@exp1^(0+128),f
  4797     0EED  1FD6               	btfss	___fltol@exp1^(0+128),7
  4798     0EEE  2F02               	goto	l2893
  4799     0EEF  0856               	movf	___fltol@exp1^(0+128),w
  4800     0EF0  3A80               	xorlw	128
  4801     0EF1  3E97               	addlw	151
  4802     0EF2  1C03               	btfss	3,0
  4803     0EF3  2EC8               	goto	l2871
  4804     0EF4                     l2891:
  4805     0EF4  3001               	movlw	1
  4806     0EF5                     u2645:
  4807     0EF5  36D0               	lsrf	(___fltol@f1+3)^(0+128),f
  4808     0EF6  0CCF               	rrf	(___fltol@f1+2)^(0+128),f
  4809     0EF7  0CCE               	rrf	(___fltol@f1+1)^(0+128),f
  4810     0EF8  0CCD               	rrf	___fltol@f1^(0+128),f
  4811     0EF9  0B89               	decfsz	9,f
  4812     0EFA  2EF5               	goto	u2645
  4813     0EFB  3001               	movlw	1
  4814     0EFC  00D1               	movwf	??___fltol^(0+128)
  4815     0EFD  0851               	movf	??___fltol^(0+128),w
  4816     0EFE  07D6               	addwf	___fltol@exp1^(0+128),f
  4817     0EFF  1903               	btfsc	3,2
  4818     0F00  2F13               	goto	l2901
  4819     0F01  2EF4               	goto	l2891
  4820     0F02                     l2893:
  4821     0F02  3020               	movlw	32
  4822     0F03  0256               	subwf	___fltol@exp1^(0+128),w
  4823     0F04  1803               	btfsc	3,0
  4824     0F05  2EC8               	goto	l2871
  4825     0F06                     l1124:
  4826     0F06  0856               	movf	___fltol@exp1^(0+128),w
  4827     0F07  1903               	btfsc	3,2
  4828     0F08  2F13               	goto	l2901
  4829     0F09  3001               	movlw	1
  4830     0F0A                     u2675:
  4831     0F0A  35CD               	lslf	___fltol@f1^(0+128),f
  4832     0F0B  0DCE               	rlf	(___fltol@f1+1)^(0+128),f
  4833     0F0C  0DCF               	rlf	(___fltol@f1+2)^(0+128),f
  4834     0F0D  0DD0               	rlf	(___fltol@f1+3)^(0+128),f
  4835     0F0E  0B89               	decfsz	9,f
  4836     0F0F  2F0A               	goto	u2675
  4837     0F10  3001               	movlw	1
  4838     0F11  02D6               	subwf	___fltol@exp1^(0+128),f
  4839     0F12  2F06               	goto	l1124
  4840     0F13                     l2901:
  4841     0F13  0855               	movf	___fltol@sign1^(0+128),w
  4842     0F14  1903               	btfsc	3,2
  4843     0F15  0008               	return
  4844     0F16  09CD               	comf	___fltol@f1^(0+128),f
  4845     0F17  09CE               	comf	(___fltol@f1+1)^(0+128),f
  4846     0F18  09CF               	comf	(___fltol@f1+2)^(0+128),f
  4847     0F19  09D0               	comf	(___fltol@f1+3)^(0+128),f
  4848     0F1A  0ACD               	incf	___fltol@f1^(0+128),f
  4849     0F1B  1903               	skipnz
  4850     0F1C  0ACE               	incf	(___fltol@f1+1)^(0+128),f
  4851     0F1D  1903               	skipnz
  4852     0F1E  0ACF               	incf	(___fltol@f1+2)^(0+128),f
  4853     0F1F  1903               	skipnz
  4854     0F20  0AD0               	incf	(___fltol@f1+3)^(0+128),f
  4855     0F21  0008               	return
  4856     0F22                     __end_of___fltol:
  4857                           
  4858                           	psect	text8
  4859     0BE1                     __ptext8:	
  4860 ;; *************** function _EUSART_Write *****************
  4861 ;; Defined at:
  4862 ;;		line 132 in file "mcc_generated_files/eusart.c"
  4863 ;; Parameters:    Size  Location     Type
  4864 ;;  txData          1    wreg     unsigned char 
  4865 ;; Auto vars:     Size  Location     Type
  4866 ;;  txData          1    0[BANK1 ] unsigned char 
  4867 ;; Return value:  Size  Location     Type
  4868 ;;                  1    wreg      void 
  4869 ;; Registers used:
  4870 ;;		wreg
  4871 ;; Tracked objects:
  4872 ;;		On entry : 1F/1
  4873 ;;		On exit  : 1F/3
  4874 ;;		Unchanged: 0/0
  4875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4876 ;;      Params:         0       0       0       0       0       0
  4877 ;;      Locals:         0       0       1       0       0       0
  4878 ;;      Temps:          0       0       0       0       0       0
  4879 ;;      Totals:         0       0       1       0       0       0
  4880 ;;Total ram usage:        1 bytes
  4881 ;; Hardware stack levels used: 1
  4882 ;; Hardware stack levels required when called: 5
  4883 ;; This function calls:
  4884 ;;		Nothing
  4885 ;; This function is called by:
  4886 ;;		_envia_Tx
  4887 ;; This function uses a non-reentrant model
  4888 ;;
  4889                           
  4890     0BE1                     _EUSART_Write:	
  4891                           ;psect for function _EUSART_Write
  4892                           
  4893                           
  4894                           ;incstack = 0
  4895                           ; Regs used in _EUSART_Write: [wreg]
  4896                           ;EUSART_Write@txData stored from wreg
  4897     0BE1  00CD               	movwf	EUSART_Write@txData^(0+128)
  4898     0BE2                     l247:	
  4899                           ;mcc_generated_files/eusart.c: 135:     {;mcc_generated_files/eusart.c: 136:     }
  4900                           
  4901                           
  4902                           ;mcc_generated_files/eusart.c: 134:     while(0 == PIR1bits.TXIF)
  4903     0BE2  0020               	movlb	0	; select bank0
  4904     0BE3  1E11               	btfss	17,4	;volatile
  4905     0BE4  2BE2               	goto	l247
  4906                           
  4907                           ;mcc_generated_files/eusart.c: 138:     TXREG = txData;
  4908     0BE5  0021               	movlb	1	; select bank1
  4909     0BE6  084D               	movf	EUSART_Write@txData^(0+128),w
  4910     0BE7  0023               	movlb	3	; select bank3
  4911     0BE8  009A               	movwf	26	;volatile
  4912     0BE9  0008               	return
  4913     0BEA                     __end_of_EUSART_Write:
  4914                           
  4915                           	psect	text9
  4916     0C30                     __ptext9:	
  4917 ;; *************** function _controlchoose *****************
  4918 ;; Defined at:
  4919 ;;		line 152 in file "main.c"
  4920 ;; Parameters:    Size  Location     Type
  4921 ;;		None
  4922 ;; Auto vars:     Size  Location     Type
  4923 ;;		None
  4924 ;; Return value:  Size  Location     Type
  4925 ;;                  1    wreg      void 
  4926 ;; Registers used:
  4927 ;;		wreg, status,2, status,0, pclath, cstack
  4928 ;; Tracked objects:
  4929 ;;		On entry : 1F/8
  4930 ;;		On exit  : 1F/8
  4931 ;;		Unchanged: 0/0
  4932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4933 ;;      Params:         0       0       0       0       0       0
  4934 ;;      Locals:         0       0       0       0       0       0
  4935 ;;      Temps:          0       0       0       0       0       0
  4936 ;;      Totals:         0       0       0       0       0       0
  4937 ;;Total ram usage:        0 bytes
  4938 ;; Hardware stack levels used: 1
  4939 ;; Hardware stack levels required when called: 7
  4940 ;; This function calls:
  4941 ;;		_TMR4_StartTimer
  4942 ;;		_fluxcontrol
  4943 ;;		_pwmcontrol
  4944 ;; This function is called by:
  4945 ;;		_main
  4946 ;; This function uses a non-reentrant model
  4947 ;;
  4948                           
  4949     0C30                     _controlchoose:	
  4950                           ;psect for function _controlchoose
  4951                           
  4952                           
  4953                           ;main.c: 153:     if (controlchoice == 1){
  4954                           
  4955                           ;incstack = 0
  4956                           ; Regs used in _controlchoose: [wreg+status,2+status,0+pclath+cstack]
  4957     0C30  0021               	movlb	1	; select bank1
  4958     0C31  034B               	decf	_controlchoice^(0+128),w
  4959     0C32  1D03               	btfss	3,2
  4960     0C33  2C38               	goto	l2983
  4961                           
  4962                           ;main.c: 154:         pwmcontrol ();
  4963     0C34  3182  2242  318C   	fcall	_pwmcontrol
  4964                           
  4965                           ;main.c: 155:     } else if(controlchoice == 2){
  4966     0C37  2C3F               	goto	l2987
  4967     0C38                     l2983:
  4968     0C38  3002               	movlw	2
  4969     0C39  064B               	xorwf	_controlchoice^(0+128),w
  4970     0C3A  1D03               	btfss	3,2
  4971     0C3B  2C3F               	goto	l2987
  4972                           
  4973                           ;main.c: 156:         fluxcontrol ();
  4974     0C3C  3183  2377  318C   	fcall	_fluxcontrol
  4975     0C3F                     l2987:
  4976                           
  4977                           ;main.c: 158:     TMR4_StartTimer();
  4978     0C3F  318B  2361         	fcall	_TMR4_StartTimer
  4979     0C41  0008               	return
  4980     0C42                     __end_of_controlchoose:
  4981                           
  4982                           	psect	text10
  4983     0242                     __ptext10:	
  4984 ;; *************** function _pwmcontrol *****************
  4985 ;; Defined at:
  4986 ;;		line 183 in file "main.c"
  4987 ;; Parameters:    Size  Location     Type
  4988 ;;		None
  4989 ;; Auto vars:     Size  Location     Type
  4990 ;;		None
  4991 ;; Return value:  Size  Location     Type
  4992 ;;                  1    wreg      void 
  4993 ;; Registers used:
  4994 ;;		wreg, status,2, status,0, pclath, cstack
  4995 ;; Tracked objects:
  4996 ;;		On entry : 1F/1
  4997 ;;		On exit  : 0/0
  4998 ;;		Unchanged: 0/0
  4999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5000 ;;      Params:         0       0       0       0       0       0
  5001 ;;      Locals:         0       0       0       0       0       0
  5002 ;;      Temps:          0       0      12       0       0       0
  5003 ;;      Totals:         0       0      12       0       0       0
  5004 ;;Total ram usage:       12 bytes
  5005 ;; Hardware stack levels used: 1
  5006 ;; Hardware stack levels required when called: 6
  5007 ;; This function calls:
  5008 ;;		_EPWM1_LoadDutyValue
  5009 ;;		___atdiv
  5010 ;;		___lwdiv
  5011 ;;		___tmul
  5012 ;; This function is called by:
  5013 ;;		_controlchoose
  5014 ;; This function uses a non-reentrant model
  5015 ;;
  5016                           
  5017     0242                     _pwmcontrol:	
  5018                           ;psect for function _pwmcontrol
  5019                           
  5020                           
  5021                           ;main.c: 184:     error = (ballset-balldist);
  5022                           
  5023                           ;incstack = 0
  5024                           ; Regs used in _pwmcontrol: [wreg+status,2+status,0+pclath+cstack]
  5025     0242  082A               	movf	_balldist^(0+128),w
  5026     0243  0020               	movlb	0	; select bank0
  5027     0244  025E               	subwf	_ballset,w
  5028     0245  0021               	movlb	1	; select bank1
  5029     0246  00E2               	movwf	??_pwmcontrol^(0+128)
  5030     0247  0020               	movlb	0	; select bank0
  5031     0248  085F               	movf	_ballset+1,w
  5032     0249  0021               	movlb	1	; select bank1
  5033     024A  00E3               	movwf	(??_pwmcontrol^(0+128)+1)
  5034     024B  082B               	movf	(_balldist+1)^(0+128),w
  5035     024C  1C03               	skipc
  5036     024D  0F2B               	incfsz	(_balldist+1)^(0+128),w
  5037     024E  2A50               	goto	u2421
  5038     024F  2A51               	goto	u2422
  5039     0250                     u2421:
  5040     0250  02E3               	subwf	(??_pwmcontrol^(0+128)+1),f
  5041     0251                     u2422:
  5042     0251  0020               	movlb	0	; select bank0
  5043     0252  0860               	movf	_ballset+2,w
  5044     0253  0021               	movlb	1	; select bank1
  5045     0254  00E4               	movwf	(??_pwmcontrol^(0+128)+2)
  5046     0255  082C               	movf	(_balldist+2)^(0+128),w
  5047     0256  1C03               	skipc
  5048     0257  0F2C               	incfsz	(_balldist+2)^(0+128),w
  5049     0258  2A5A               	goto	u2423
  5050     0259  2A5B               	goto	u2424
  5051     025A                     u2423:
  5052     025A  02E4               	subwf	(??_pwmcontrol^(0+128)+2),f
  5053     025B                     u2424:
  5054     025B  0862               	movf	??_pwmcontrol^(0+128),w
  5055     025C  00B0               	movwf	_error^(0+128)
  5056     025D  0863               	movf	(??_pwmcontrol+1)^(0+128),w
  5057     025E  00B1               	movwf	(_error+1)^(0+128)
  5058     025F  0864               	movf	(??_pwmcontrol+2)^(0+128),w
  5059     0260  00B2               	movwf	(_error+2)^(0+128)
  5060                           
  5061                           ;main.c: 185:     if(error > 15 || error < -15){
  5062     0261  1BB2               	btfsc	(_error+2)^(0+128),7
  5063     0262  2A6D               	goto	l2793
  5064     0263  0832               	movf	(_error+2)^(0+128),w
  5065     0264  1D03               	btfss	3,2
  5066     0265  2A78               	goto	l2795
  5067     0266  0831               	movf	(_error+1)^(0+128),w
  5068     0267  1D03               	btfss	3,2
  5069     0268  2A78               	goto	l2795
  5070     0269  3010               	movlw	16
  5071     026A  0230               	subwf	_error^(0+128),w
  5072     026B  1803               	btfsc	3,0
  5073     026C  2A78               	goto	l2795
  5074     026D                     l2793:
  5075     026D  0021               	movlb	1	; select bank1
  5076     026E  1FB2               	btfss	(_error+2)^(0+128),7
  5077     026F  0008               	return
  5078     0270  30F1               	movlw	241
  5079     0271  0230               	subwf	_error^(0+128),w
  5080     0272  30FF               	movlw	255
  5081     0273  3B31               	subwfb	(_error+1)^(0+128),w
  5082     0274  30FF               	movlw	255
  5083     0275  3B32               	subwfb	(_error+2)^(0+128),w
  5084     0276  1803               	btfsc	3,0
  5085     0277  0008               	return
  5086     0278                     l2795:
  5087     0278  300A               	movlw	10
  5088     0279  0021               	movlb	1	; select bank1
  5089     027A  00D6               	movwf	___atdiv@divisor^(0+128)
  5090     027B  3000               	movlw	0
  5091     027C  00D7               	movwf	(___atdiv@divisor+1)^(0+128)
  5092     027D  3000               	movlw	0
  5093     027E  00D8               	movwf	(___atdiv@divisor+2)^(0+128)
  5094     027F  0830               	movf	_error^(0+128),w
  5095     0280  00CD               	movwf	___tmul@multiplier^(0+128)
  5096     0281  0831               	movf	(_error+1)^(0+128),w
  5097     0282  00CE               	movwf	(___tmul@multiplier+1)^(0+128)
  5098     0283  0832               	movf	(_error+2)^(0+128),w
  5099     0284  00CF               	movwf	(___tmul@multiplier+2)^(0+128)
  5100     0285  3044               	movlw	68
  5101     0286  00D0               	movwf	___tmul@multiplicand^(0+128)
  5102     0287  3000               	movlw	0
  5103     0288  00D1               	movwf	(___tmul@multiplicand+1)^(0+128)
  5104     0289  3000               	movlw	0
  5105     028A  00D2               	movwf	(___tmul@multiplicand+2)^(0+128)
  5106     028B  318D  254E  3182   	fcall	___tmul
  5107     028E  084D               	movf	?___tmul^(0+128),w
  5108     028F  00D9               	movwf	___atdiv@dividend^(0+128)
  5109     0290  084E               	movf	(?___tmul+1)^(0+128),w
  5110     0291  00DA               	movwf	(___atdiv@dividend+1)^(0+128)
  5111     0292  084F               	movf	(?___tmul+2)^(0+128),w
  5112     0293  00DB               	movwf	(___atdiv@dividend+2)^(0+128)
  5113     0294  318F  2722  3182   	fcall	___atdiv
  5114     0297  0856               	movf	?___atdiv^(0+128),w
  5115     0298  07A7               	addwf	_outputsum^(0+128),f
  5116     0299  0857               	movf	(?___atdiv+1)^(0+128),w
  5117     029A  3DA8               	addwfc	(_outputsum+1)^(0+128),f
  5118     029B  0858               	movf	(?___atdiv+2)^(0+128),w
  5119     029C  3DA9               	addwfc	(_outputsum+2)^(0+128),f
  5120                           
  5121                           ;main.c: 187:         if (outputsum > 100) outputsum = 100;
  5122     029D  1BA9               	btfsc	(_outputsum+2)^(0+128),7
  5123     029E  2AB0               	goto	l2801
  5124     029F  0829               	movf	(_outputsum+2)^(0+128),w
  5125     02A0  1D03               	btfss	3,2
  5126     02A1  2AA9               	goto	l2799
  5127     02A2  0828               	movf	(_outputsum+1)^(0+128),w
  5128     02A3  1D03               	btfss	3,2
  5129     02A4  2AA9               	goto	l2799
  5130     02A5  3065               	movlw	101
  5131     02A6  0227               	subwf	_outputsum^(0+128),w
  5132     02A7  1C03               	btfss	3,0
  5133     02A8  2AB0               	goto	l2801
  5134     02A9                     l2799:
  5135     02A9  3064               	movlw	100
  5136     02AA  0021               	movlb	1	; select bank1
  5137     02AB  00A7               	movwf	_outputsum^(0+128)
  5138     02AC  3000               	movlw	0
  5139     02AD  00A8               	movwf	(_outputsum+1)^(0+128)
  5140     02AE  3000               	movlw	0
  5141     02AF  2AC1               	goto	L4
  5142     02B0                     l2801:
  5143     02B0  0021               	movlb	1	; select bank1
  5144     02B1  1FA9               	btfss	(_outputsum+2)^(0+128),7
  5145     02B2  2AC2               	goto	l2805
  5146     02B3  30F6               	movlw	246
  5147     02B4  0227               	subwf	_outputsum^(0+128),w
  5148     02B5  30FF               	movlw	255
  5149     02B6  3B28               	subwfb	(_outputsum+1)^(0+128),w
  5150     02B7  30FF               	movlw	255
  5151     02B8  3B29               	subwfb	(_outputsum+2)^(0+128),w
  5152     02B9  1803               	btfsc	3,0
  5153     02BA  2AC2               	goto	l2805
  5154     02BB  30F6               	movlw	246
  5155     02BC  0021               	movlb	1	; select bank1
  5156     02BD  00A7               	movwf	_outputsum^(0+128)
  5157     02BE  30FF               	movlw	255
  5158     02BF  00A8               	movwf	(_outputsum+1)^(0+128)
  5159     02C0  30FF               	movlw	255
  5160     02C1                     L4:
  5161     02C1  00A9               	movwf	(_outputsum+2)^(0+128)
  5162     02C2                     l2805:
  5163     02C2  0021               	movlb	1	; select bank1
  5164     02C3  0824               	movf	_outpre^(0+128),w
  5165     02C4  00E2               	movwf	??_pwmcontrol^(0+128)
  5166     02C5  0825               	movf	(_outpre+1)^(0+128),w
  5167     02C6  00E3               	movwf	(??_pwmcontrol^(0+128)+1)
  5168     02C7  0826               	movf	(_outpre+2)^(0+128),w
  5169     02C8  00E4               	movwf	(??_pwmcontrol^(0+128)+2)
  5170     02C9  0827               	movf	_outputsum^(0+128),w
  5171     02CA  00E5               	movwf	(??_pwmcontrol+3)^(0+128)
  5172     02CB  0828               	movf	(_outputsum+1)^(0+128),w
  5173     02CC  00E6               	movwf	((??_pwmcontrol+3)^(0+128)+1)
  5174     02CD  0829               	movf	(_outputsum+2)^(0+128),w
  5175     02CE  00E7               	movwf	((??_pwmcontrol+3)^(0+128)+2)
  5176     02CF  082D               	movf	_errorp^(0+128),w
  5177     02D0  00CD               	movwf	___tmul@multiplier^(0+128)
  5178     02D1  082E               	movf	(_errorp+1)^(0+128),w
  5179     02D2  00CE               	movwf	(___tmul@multiplier+1)^(0+128)
  5180     02D3  082F               	movf	(_errorp+2)^(0+128),w
  5181     02D4  00CF               	movwf	(___tmul@multiplier+2)^(0+128)
  5182     02D5  30F1               	movlw	241
  5183     02D6  00D0               	movwf	___tmul@multiplicand^(0+128)
  5184     02D7  30FF               	movlw	255
  5185     02D8  00D1               	movwf	(___tmul@multiplicand+1)^(0+128)
  5186     02D9  30FF               	movlw	255
  5187     02DA  00D2               	movwf	(___tmul@multiplicand+2)^(0+128)
  5188     02DB  318D  254E  3182   	fcall	___tmul
  5189     02DE  084D               	movf	?___tmul^(0+128),w
  5190     02DF  00E8               	movwf	(??_pwmcontrol+6)^(0+128)
  5191     02E0  084E               	movf	(?___tmul+1)^(0+128),w
  5192     02E1  00E9               	movwf	((??_pwmcontrol+6)^(0+128)+1)
  5193     02E2  084F               	movf	(?___tmul+2)^(0+128),w
  5194     02E3  00EA               	movwf	((??_pwmcontrol+6)^(0+128)+2)
  5195     02E4  0830               	movf	_error^(0+128),w
  5196     02E5  00EB               	movwf	(??_pwmcontrol+9)^(0+128)
  5197     02E6  0831               	movf	(_error+1)^(0+128),w
  5198     02E7  00EC               	movwf	((??_pwmcontrol+9)^(0+128)+1)
  5199     02E8  0832               	movf	(_error+2)^(0+128),w
  5200     02E9  00ED               	movwf	((??_pwmcontrol+9)^(0+128)+2)
  5201     02EA  3005               	movlw	5
  5202     02EB                     u2475:
  5203     02EB  35EB               	lslf	(??_pwmcontrol+9)^(0+128),f
  5204     02EC  0DEC               	rlf	((??_pwmcontrol+9)^(0+128)+1),f
  5205     02ED  0DED               	rlf	((??_pwmcontrol+9)^(0+128)+2),f
  5206     02EE  0B89               	decfsz	9,f
  5207     02EF  2AEB               	goto	u2475
  5208     02F0  0830               	movf	_error^(0+128),w
  5209     02F1  00CD               	movwf	___tmul@multiplier^(0+128)
  5210     02F2  0831               	movf	(_error+1)^(0+128),w
  5211     02F3  00CE               	movwf	(___tmul@multiplier+1)^(0+128)
  5212     02F4  0832               	movf	(_error+2)^(0+128),w
  5213     02F5  00CF               	movwf	(___tmul@multiplier+2)^(0+128)
  5214     02F6  300F               	movlw	15
  5215     02F7  00D0               	movwf	___tmul@multiplicand^(0+128)
  5216     02F8  3000               	movlw	0
  5217     02F9  00D1               	movwf	(___tmul@multiplicand+1)^(0+128)
  5218     02FA  3000               	movlw	0
  5219     02FB  00D2               	movwf	(___tmul@multiplicand+2)^(0+128)
  5220     02FC  318D  254E  3182   	fcall	___tmul
  5221     02FF  084D               	movf	?___tmul^(0+128),w
  5222     0300  07EB               	addwf	(??_pwmcontrol+9)^(0+128),f
  5223     0301  084E               	movf	(?___tmul+1)^(0+128),w
  5224     0302  3DEC               	addwfc	((??_pwmcontrol+9)^(0+128)+1),f
  5225     0303  084F               	movf	(?___tmul+2)^(0+128),w
  5226     0304  3DED               	addwfc	((??_pwmcontrol+9)^(0+128)+2),f
  5227     0305  086B               	movf	(??_pwmcontrol+9)^(0+128),w
  5228     0306  07E8               	addwf	(??_pwmcontrol+6)^(0+128),f
  5229     0307  086C               	movf	(??_pwmcontrol+10)^(0+128),w
  5230     0308  3DE9               	addwfc	((??_pwmcontrol+6)^(0+128)+1),f
  5231     0309  086D               	movf	(??_pwmcontrol+11)^(0+128),w
  5232     030A  3DEA               	addwfc	((??_pwmcontrol+6)^(0+128)+2),f
  5233     030B  0868               	movf	(??_pwmcontrol+6)^(0+128),w
  5234     030C  07E5               	addwf	(??_pwmcontrol+3)^(0+128),f
  5235     030D  0869               	movf	(??_pwmcontrol+7)^(0+128),w
  5236     030E  3DE6               	addwfc	((??_pwmcontrol+3)^(0+128)+1),f
  5237     030F  086A               	movf	(??_pwmcontrol+8)^(0+128),w
  5238     0310  3DE7               	addwfc	((??_pwmcontrol+3)^(0+128)+2),f
  5239     0311  0865               	movf	(??_pwmcontrol+3)^(0+128),w
  5240     0312  07E2               	addwf	??_pwmcontrol^(0+128),f
  5241     0313  0866               	movf	(??_pwmcontrol+4)^(0+128),w
  5242     0314  3DE3               	addwfc	(??_pwmcontrol^(0+128)+1),f
  5243     0315  0867               	movf	(??_pwmcontrol+5)^(0+128),w
  5244     0316  3DE4               	addwfc	(??_pwmcontrol^(0+128)+2),f
  5245     0317  0862               	movf	??_pwmcontrol^(0+128),w
  5246     0318  00A4               	movwf	_outpre^(0+128)
  5247     0319  0863               	movf	(??_pwmcontrol+1)^(0+128),w
  5248     031A  00A5               	movwf	(_outpre+1)^(0+128)
  5249     031B  0864               	movf	(??_pwmcontrol+2)^(0+128),w
  5250     031C  00A6               	movwf	(_outpre+2)^(0+128)
  5251                           
  5252                           ;main.c: 190:         if(outpre > 2230){
  5253     031D  1BA6               	btfsc	(_outpre+2)^(0+128),7
  5254     031E  2B2B               	goto	l716
  5255     031F  0826               	movf	(_outpre+2)^(0+128),w
  5256     0320  1D03               	btfss	3,2
  5257     0321  2B28               	goto	l2809
  5258     0322  30B7               	movlw	183
  5259     0323  0224               	subwf	_outpre^(0+128),w
  5260     0324  3008               	movlw	8
  5261     0325  3B25               	subwfb	(_outpre+1)^(0+128),w
  5262     0326  1C03               	btfss	3,0
  5263     0327  2B2B               	goto	l716
  5264     0328                     l2809:
  5265                           
  5266                           ;main.c: 191:             output = 1023;
  5267     0328  30FF               	movlw	255
  5268     0329  0021               	movlb	1	; select bank1
  5269     032A  2B2F               	goto	L5
  5270     032B                     l716:	
  5271                           ;main.c: 193:         else if(outpre <0) {
  5272                           
  5273                           ;main.c: 192:         }
  5274                           
  5275     032B  0021               	movlb	1	; select bank1
  5276     032C  1FA6               	btfss	(_outpre+2)^(0+128),7
  5277     032D  2B33               	goto	l2813
  5278                           
  5279                           ;main.c: 194:             output= 0+800;
  5280     032E  3020               	movlw	32
  5281     032F                     L5:
  5282     032F  00C1               	movwf	_output^(0+128)
  5283     0330  3003               	movlw	3
  5284     0331  00C2               	movwf	(_output^(0+128)+1)
  5285                           
  5286                           ;main.c: 195:         } else {
  5287     0332  2B44               	goto	l2815
  5288     0333                     l2813:
  5289                           
  5290                           ;main.c: 196:             output = ((uint16_t)outpre/10) + 800;
  5291     0333  300A               	movlw	10
  5292     0334  00CD               	movwf	___lwdiv@divisor^(0+128)
  5293     0335  3000               	movlw	0
  5294     0336  00CE               	movwf	(___lwdiv@divisor^(0+128)+1)
  5295     0337  0825               	movf	(_outpre+1)^(0+128),w
  5296     0338  00D0               	movwf	(___lwdiv@dividend+1)^(0+128)
  5297     0339  0824               	movf	_outpre^(0+128),w
  5298     033A  00CF               	movwf	___lwdiv@dividend^(0+128)
  5299     033B  318D  25D2  3182   	fcall	___lwdiv
  5300     033E  084D               	movf	?___lwdiv^(0+128),w
  5301     033F  3E20               	addlw	32
  5302     0340  00C1               	movwf	_output^(0+128)
  5303     0341  3003               	movlw	3
  5304     0342  3D4E               	addwfc	(?___lwdiv+1)^(0+128),w
  5305     0343  00C2               	movwf	(_output+1)^(0+128)
  5306     0344                     l2815:
  5307                           
  5308                           ;main.c: 198:         if (outpre>2230){
  5309     0344  1BA6               	btfsc	(_outpre+2)^(0+128),7
  5310     0345  2B56               	goto	l2819
  5311     0346  0826               	movf	(_outpre+2)^(0+128),w
  5312     0347  1D03               	btfss	3,2
  5313     0348  2B4F               	goto	l2817
  5314     0349  30B7               	movlw	183
  5315     034A  0224               	subwf	_outpre^(0+128),w
  5316     034B  3008               	movlw	8
  5317     034C  3B25               	subwfb	(_outpre+1)^(0+128),w
  5318     034D  1C03               	btfss	3,0
  5319     034E  2B56               	goto	l2819
  5320     034F                     l2817:
  5321                           
  5322                           ;main.c: 199:             outpre = 2230;
  5323     034F  30B6               	movlw	182
  5324     0350  0021               	movlb	1	; select bank1
  5325     0351  00A4               	movwf	_outpre^(0+128)
  5326     0352  3008               	movlw	8
  5327     0353  00A5               	movwf	(_outpre+1)^(0+128)
  5328     0354  3000               	movlw	0
  5329     0355  2B67               	goto	L6
  5330     0356                     l2819:	
  5331                           ;main.c: 200:         } else if (outpre < -800){
  5332                           
  5333     0356  0021               	movlb	1	; select bank1
  5334     0357  1FA6               	btfss	(_outpre+2)^(0+128),7
  5335     0358  2B68               	goto	l2823
  5336     0359  30E0               	movlw	224
  5337     035A  0224               	subwf	_outpre^(0+128),w
  5338     035B  30FC               	movlw	252
  5339     035C  3B25               	subwfb	(_outpre+1)^(0+128),w
  5340     035D  30FF               	movlw	255
  5341     035E  3B26               	subwfb	(_outpre+2)^(0+128),w
  5342     035F  1803               	btfsc	3,0
  5343     0360  2B68               	goto	l2823
  5344                           
  5345                           ;main.c: 201:             outpre = -800;
  5346     0361  30E0               	movlw	224
  5347     0362  0021               	movlb	1	; select bank1
  5348     0363  00A4               	movwf	_outpre^(0+128)
  5349     0364  30FC               	movlw	252
  5350     0365  00A5               	movwf	(_outpre+1)^(0+128)
  5351     0366  30FF               	movlw	255
  5352     0367                     L6:
  5353     0367  00A6               	movwf	(_outpre+2)^(0+128)
  5354     0368                     l2823:
  5355                           
  5356                           ;main.c: 204:         EPWM1_LoadDutyValue(output);
  5357     0368  0021               	movlb	1	; select bank1
  5358     0369  0842               	movf	(_output+1)^(0+128),w
  5359     036A  00CE               	movwf	(EPWM1_LoadDutyValue@dutyValue+1)^(0+128)
  5360     036B  0841               	movf	_output^(0+128),w
  5361     036C  00CD               	movwf	EPWM1_LoadDutyValue@dutyValue^(0+128)
  5362     036D  318C  24D0         	fcall	_EPWM1_LoadDutyValue
  5363                           
  5364                           ;main.c: 205:         errorp = error;
  5365     036F  0021               	movlb	1	; select bank1
  5366     0370  0830               	movf	_error^(0+128),w
  5367     0371  00AD               	movwf	_errorp^(0+128)
  5368     0372  0831               	movf	(_error+1)^(0+128),w
  5369     0373  00AE               	movwf	(_errorp+1)^(0+128)
  5370     0374  0832               	movf	(_error+2)^(0+128),w
  5371     0375  00AF               	movwf	(_errorp+2)^(0+128)
  5372     0376  0008               	return
  5373     0377                     __end_of_pwmcontrol:
  5374                           
  5375                           	psect	text11
  5376     0DD2                     __ptext11:	
  5377 ;; *************** function ___lwdiv *****************
  5378 ;; Defined at:
  5379 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lwdiv.c"
  5380 ;; Parameters:    Size  Location     Type
  5381 ;;  divisor         2    0[BANK1 ] unsigned int 
  5382 ;;  dividend        2    2[BANK1 ] unsigned int 
  5383 ;; Auto vars:     Size  Location     Type
  5384 ;;  quotient        2    5[BANK1 ] unsigned int 
  5385 ;;  counter         1    7[BANK1 ] unsigned char 
  5386 ;; Return value:  Size  Location     Type
  5387 ;;                  2    0[BANK1 ] unsigned int 
  5388 ;; Registers used:
  5389 ;;		wreg, status,2, status,0
  5390 ;; Tracked objects:
  5391 ;;		On entry : 1F/1
  5392 ;;		On exit  : 1F/1
  5393 ;;		Unchanged: 0/0
  5394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5395 ;;      Params:         0       0       4       0       0       0
  5396 ;;      Locals:         0       0       3       0       0       0
  5397 ;;      Temps:          0       0       1       0       0       0
  5398 ;;      Totals:         0       0       8       0       0       0
  5399 ;;Total ram usage:        8 bytes
  5400 ;; Hardware stack levels used: 1
  5401 ;; Hardware stack levels required when called: 5
  5402 ;; This function calls:
  5403 ;;		Nothing
  5404 ;; This function is called by:
  5405 ;;		_pwmcontrol
  5406 ;; This function uses a non-reentrant model
  5407 ;;
  5408                           
  5409     0DD2                     ___lwdiv:	
  5410                           ;psect for function ___lwdiv
  5411                           
  5412                           
  5413                           ;incstack = 0
  5414                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5415     0DD2  01D2               	clrf	___lwdiv@quotient^(0+128)
  5416     0DD3  01D3               	clrf	(___lwdiv@quotient+1)^(0+128)
  5417     0DD4  084D               	movf	___lwdiv@divisor^(0+128),w
  5418     0DD5  044E               	iorwf	(___lwdiv@divisor+1)^(0+128),w
  5419     0DD6  1903               	btfsc	3,2
  5420     0DD7  2E01               	goto	l2409
  5421     0DD8  01D4               	clrf	___lwdiv@counter^(0+128)
  5422     0DD9  0AD4               	incf	___lwdiv@counter^(0+128),f
  5423     0DDA                     l2397:
  5424     0DDA  1BCE               	btfsc	(___lwdiv@divisor+1)^(0+128),7
  5425     0DDB  2DE6               	goto	l2399
  5426     0DDC  3001               	movlw	1
  5427     0DDD                     u1765:
  5428     0DDD  35CD               	lslf	___lwdiv@divisor^(0+128),f
  5429     0DDE  0DCE               	rlf	(___lwdiv@divisor+1)^(0+128),f
  5430     0DDF  0B89               	decfsz	9,f
  5431     0DE0  2DDD               	goto	u1765
  5432     0DE1  3001               	movlw	1
  5433     0DE2  00D1               	movwf	??___lwdiv^(0+128)
  5434     0DE3  0851               	movf	??___lwdiv^(0+128),w
  5435     0DE4  07D4               	addwf	___lwdiv@counter^(0+128),f
  5436     0DE5  2DDA               	goto	l2397
  5437     0DE6                     l2399:
  5438     0DE6  3001               	movlw	1
  5439     0DE7                     u1785:
  5440     0DE7  35D2               	lslf	___lwdiv@quotient^(0+128),f
  5441     0DE8  0DD3               	rlf	(___lwdiv@quotient+1)^(0+128),f
  5442     0DE9  0B89               	decfsz	9,f
  5443     0DEA  2DE7               	goto	u1785
  5444     0DEB  084E               	movf	(___lwdiv@divisor+1)^(0+128),w
  5445     0DEC  0250               	subwf	(___lwdiv@dividend+1)^(0+128),w
  5446     0DED  1D03               	skipz
  5447     0DEE  2DF1               	goto	u1795
  5448     0DEF  084D               	movf	___lwdiv@divisor^(0+128),w
  5449     0DF0  024F               	subwf	___lwdiv@dividend^(0+128),w
  5450     0DF1                     u1795:
  5451     0DF1  1C03               	skipc
  5452     0DF2  2DF8               	goto	l2405
  5453     0DF3  084D               	movf	___lwdiv@divisor^(0+128),w
  5454     0DF4  02CF               	subwf	___lwdiv@dividend^(0+128),f
  5455     0DF5  084E               	movf	(___lwdiv@divisor+1)^(0+128),w
  5456     0DF6  3BD0               	subwfb	(___lwdiv@dividend+1)^(0+128),f
  5457     0DF7  1452               	bsf	___lwdiv@quotient^(0+128),0
  5458     0DF8                     l2405:
  5459     0DF8  3001               	movlw	1
  5460     0DF9                     u1805:
  5461     0DF9  36CE               	lsrf	(___lwdiv@divisor+1)^(0+128),f
  5462     0DFA  0CCD               	rrf	___lwdiv@divisor^(0+128),f
  5463     0DFB  0B89               	decfsz	9,f
  5464     0DFC  2DF9               	goto	u1805
  5465     0DFD  3001               	movlw	1
  5466     0DFE  02D4               	subwf	___lwdiv@counter^(0+128),f
  5467     0DFF  1D03               	btfss	3,2
  5468     0E00  2DE6               	goto	l2399
  5469     0E01                     l2409:
  5470     0E01  0853               	movf	(___lwdiv@quotient+1)^(0+128),w
  5471     0E02  00CE               	movwf	(?___lwdiv+1)^(0+128)
  5472     0E03  0852               	movf	___lwdiv@quotient^(0+128),w
  5473     0E04  00CD               	movwf	?___lwdiv^(0+128)
  5474     0E05  0008               	return
  5475     0E06                     __end_of___lwdiv:
  5476                           
  5477                           	psect	text12
  5478     0F22                     __ptext12:	
  5479 ;; *************** function ___atdiv *****************
  5480 ;; Defined at:
  5481 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\atdiv.c"
  5482 ;; Parameters:    Size  Location     Type
  5483 ;;  divisor         3    9[BANK1 ] m
  5484 ;;  dividend        3   12[BANK1 ] m
  5485 ;; Auto vars:     Size  Location     Type
  5486 ;;  quotient        3   18[BANK1 ] m
  5487 ;;  sign            1   17[BANK1 ] unsigned char 
  5488 ;;  counter         1   16[BANK1 ] unsigned char 
  5489 ;; Return value:  Size  Location     Type
  5490 ;;                  3    9[BANK1 ] m
  5491 ;; Registers used:
  5492 ;;		wreg, status,2, status,0
  5493 ;; Tracked objects:
  5494 ;;		On entry : 1F/1
  5495 ;;		On exit  : 1F/1
  5496 ;;		Unchanged: 0/0
  5497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5498 ;;      Params:         0       0       6       0       0       0
  5499 ;;      Locals:         0       0       5       0       0       0
  5500 ;;      Temps:          0       0       1       0       0       0
  5501 ;;      Totals:         0       0      12       0       0       0
  5502 ;;Total ram usage:       12 bytes
  5503 ;; Hardware stack levels used: 1
  5504 ;; Hardware stack levels required when called: 5
  5505 ;; This function calls:
  5506 ;;		Nothing
  5507 ;; This function is called by:
  5508 ;;		_pwmcontrol
  5509 ;; This function uses a non-reentrant model
  5510 ;;
  5511                           
  5512     0F22                     ___atdiv:	
  5513                           ;psect for function ___atdiv
  5514                           
  5515                           
  5516                           ;incstack = 0
  5517                           ; Regs used in ___atdiv: [wreg+status,2+status,0]
  5518     0F22  01DE               	clrf	___atdiv@sign^(0+128)
  5519     0F23  1FD8               	btfss	(___atdiv@divisor+2)^(0+128),7
  5520     0F24  2F2F               	goto	l1040
  5521     0F25  09D6               	comf	___atdiv@divisor^(0+128),f
  5522     0F26  09D7               	comf	(___atdiv@divisor+1)^(0+128),f
  5523     0F27  09D8               	comf	(___atdiv@divisor+2)^(0+128),f
  5524     0F28  0AD6               	incf	___atdiv@divisor^(0+128),f
  5525     0F29  1903               	skipnz
  5526     0F2A  0AD7               	incf	(___atdiv@divisor+1)^(0+128),f
  5527     0F2B  1903               	skipnz
  5528     0F2C  0AD8               	incf	(___atdiv@divisor+2)^(0+128),f
  5529     0F2D  01DE               	clrf	___atdiv@sign^(0+128)
  5530     0F2E  0ADE               	incf	___atdiv@sign^(0+128),f
  5531     0F2F                     l1040:
  5532     0F2F  1FDB               	btfss	(___atdiv@dividend+2)^(0+128),7
  5533     0F30  2F3D               	goto	l2357
  5534     0F31  09D9               	comf	___atdiv@dividend^(0+128),f
  5535     0F32  09DA               	comf	(___atdiv@dividend+1)^(0+128),f
  5536     0F33  09DB               	comf	(___atdiv@dividend+2)^(0+128),f
  5537     0F34  0AD9               	incf	___atdiv@dividend^(0+128),f
  5538     0F35  1903               	skipnz
  5539     0F36  0ADA               	incf	(___atdiv@dividend+1)^(0+128),f
  5540     0F37  1903               	skipnz
  5541     0F38  0ADB               	incf	(___atdiv@dividend+2)^(0+128),f
  5542     0F39  3001               	movlw	1
  5543     0F3A  00DC               	movwf	??___atdiv^(0+128)
  5544     0F3B  085C               	movf	??___atdiv^(0+128),w
  5545     0F3C  06DE               	xorwf	___atdiv@sign^(0+128),f
  5546     0F3D                     l2357:
  5547     0F3D  3000               	movlw	0
  5548     0F3E  00DF               	movwf	___atdiv@quotient^(0+128)
  5549     0F3F  3000               	movlw	0
  5550     0F40  00E0               	movwf	(___atdiv@quotient+1)^(0+128)
  5551     0F41  3000               	movlw	0
  5552     0F42  00E1               	movwf	(___atdiv@quotient+2)^(0+128)
  5553     0F43  0858               	movf	(___atdiv@divisor+2)^(0+128),w
  5554     0F44  0457               	iorwf	(___atdiv@divisor+1)^(0+128),w
  5555     0F45  0456               	iorwf	___atdiv@divisor^(0+128),w
  5556     0F46  1903               	skipnz
  5557     0F47  2F7A               	goto	l2379
  5558     0F48  01DD               	clrf	___atdiv@counter^(0+128)
  5559     0F49  0ADD               	incf	___atdiv@counter^(0+128),f
  5560     0F4A                     l2365:
  5561     0F4A  1BD8               	btfsc	(___atdiv@divisor+2)^(0+128),7
  5562     0F4B  2F57               	goto	l2367
  5563     0F4C  3001               	movlw	1
  5564     0F4D                     u1685:
  5565     0F4D  35D6               	lslf	___atdiv@divisor^(0+128),f
  5566     0F4E  0DD7               	rlf	(___atdiv@divisor+1)^(0+128),f
  5567     0F4F  0DD8               	rlf	(___atdiv@divisor+2)^(0+128),f
  5568     0F50  0B89               	decfsz	9,f
  5569     0F51  2F4D               	goto	u1685
  5570     0F52  3001               	movlw	1
  5571     0F53  00DC               	movwf	??___atdiv^(0+128)
  5572     0F54  085C               	movf	??___atdiv^(0+128),w
  5573     0F55  07DD               	addwf	___atdiv@counter^(0+128),f
  5574     0F56  2F4A               	goto	l2365
  5575     0F57                     l2367:
  5576     0F57  3001               	movlw	1
  5577     0F58                     u1705:
  5578     0F58  35DF               	lslf	___atdiv@quotient^(0+128),f
  5579     0F59  0DE0               	rlf	(___atdiv@quotient+1)^(0+128),f
  5580     0F5A  0DE1               	rlf	(___atdiv@quotient+2)^(0+128),f
  5581     0F5B  0B89               	decfsz	9,f
  5582     0F5C  2F58               	goto	u1705
  5583     0F5D  0858               	movf	(___atdiv@divisor+2)^(0+128),w
  5584     0F5E  025B               	subwf	(___atdiv@dividend+2)^(0+128),w
  5585     0F5F  1D03               	skipz
  5586     0F60  2F67               	goto	u1715
  5587     0F61  0857               	movf	(___atdiv@divisor+1)^(0+128),w
  5588     0F62  025A               	subwf	(___atdiv@dividend+1)^(0+128),w
  5589     0F63  1D03               	skipz
  5590     0F64  2F67               	goto	u1715
  5591     0F65  0856               	movf	___atdiv@divisor^(0+128),w
  5592     0F66  0259               	subwf	___atdiv@dividend^(0+128),w
  5593     0F67                     u1715:
  5594     0F67  1C03               	skipc
  5595     0F68  2F70               	goto	l2375
  5596     0F69  0856               	movf	___atdiv@divisor^(0+128),w
  5597     0F6A  02D9               	subwf	___atdiv@dividend^(0+128),f
  5598     0F6B  0857               	movf	(___atdiv@divisor+1)^(0+128),w
  5599     0F6C  3BDA               	subwfb	(___atdiv@dividend+1)^(0+128),f
  5600     0F6D  0858               	movf	(___atdiv@divisor+2)^(0+128),w
  5601     0F6E  3BDB               	subwfb	(___atdiv@dividend+2)^(0+128),f
  5602     0F6F  145F               	bsf	___atdiv@quotient^(0+128),0
  5603     0F70                     l2375:
  5604     0F70  3001               	movlw	1
  5605     0F71                     u1725:
  5606     0F71  36D8               	lsrf	(___atdiv@divisor+2)^(0+128),f
  5607     0F72  0CD7               	rrf	(___atdiv@divisor+1)^(0+128),f
  5608     0F73  0CD6               	rrf	___atdiv@divisor^(0+128),f
  5609     0F74  0B89               	decfsz	9,f
  5610     0F75  2F71               	goto	u1725
  5611     0F76  3001               	movlw	1
  5612     0F77  02DD               	subwf	___atdiv@counter^(0+128),f
  5613     0F78  1D03               	btfss	3,2
  5614     0F79  2F57               	goto	l2367
  5615     0F7A                     l2379:
  5616     0F7A  085E               	movf	___atdiv@sign^(0+128),w
  5617     0F7B  1903               	btfsc	3,2
  5618     0F7C  2F85               	goto	l2383
  5619     0F7D  09DF               	comf	___atdiv@quotient^(0+128),f
  5620     0F7E  09E0               	comf	(___atdiv@quotient+1)^(0+128),f
  5621     0F7F  09E1               	comf	(___atdiv@quotient+2)^(0+128),f
  5622     0F80  0ADF               	incf	___atdiv@quotient^(0+128),f
  5623     0F81  1903               	skipnz
  5624     0F82  0AE0               	incf	(___atdiv@quotient+1)^(0+128),f
  5625     0F83  1903               	skipnz
  5626     0F84  0AE1               	incf	(___atdiv@quotient+2)^(0+128),f
  5627     0F85                     l2383:
  5628     0F85  085F               	movf	___atdiv@quotient^(0+128),w
  5629     0F86  00D6               	movwf	?___atdiv^(0+128)
  5630     0F87  0860               	movf	(___atdiv@quotient+1)^(0+128),w
  5631     0F88  00D7               	movwf	(?___atdiv+1)^(0+128)
  5632     0F89  0861               	movf	(___atdiv@quotient+2)^(0+128),w
  5633     0F8A  00D8               	movwf	(?___atdiv+2)^(0+128)
  5634     0F8B  0008               	return
  5635     0F8C                     __end_of___atdiv:
  5636                           
  5637                           	psect	text13
  5638     0377                     __ptext13:	
  5639 ;; *************** function _fluxcontrol *****************
  5640 ;; Defined at:
  5641 ;;		line 161 in file "main.c"
  5642 ;; Parameters:    Size  Location     Type
  5643 ;;		None
  5644 ;; Auto vars:     Size  Location     Type
  5645 ;;		None
  5646 ;; Return value:  Size  Location     Type
  5647 ;;                  1    wreg      void 
  5648 ;; Registers used:
  5649 ;;		wreg, status,2, status,0, pclath, cstack
  5650 ;; Tracked objects:
  5651 ;;		On entry : 1F/1
  5652 ;;		On exit  : 0/0
  5653 ;;		Unchanged: 0/0
  5654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5655 ;;      Params:         0       0       0       0       0       0
  5656 ;;      Locals:         0       0       0       0       0       0
  5657 ;;      Temps:          0       0       6       0       0       0
  5658 ;;      Totals:         0       0       6       0       0       0
  5659 ;;Total ram usage:        6 bytes
  5660 ;; Hardware stack levels used: 1
  5661 ;; Hardware stack levels required when called: 6
  5662 ;; This function calls:
  5663 ;;		___tmul
  5664 ;; This function is called by:
  5665 ;;		_controlchoose
  5666 ;; This function uses a non-reentrant model
  5667 ;;
  5668                           
  5669     0377                     _fluxcontrol:	
  5670                           ;psect for function _fluxcontrol
  5671                           
  5672                           
  5673                           ;main.c: 162:     error = (ballset-balldist)*100;
  5674                           
  5675                           ;incstack = 0
  5676                           ; Regs used in _fluxcontrol: [wreg+status,2+status,0+pclath+cstack]
  5677     0377  082A               	movf	_balldist^(0+128),w
  5678     0378  0020               	movlb	0	; select bank0
  5679     0379  025E               	subwf	_ballset,w
  5680     037A  0021               	movlb	1	; select bank1
  5681     037B  00D6               	movwf	??_fluxcontrol^(0+128)
  5682     037C  0020               	movlb	0	; select bank0
  5683     037D  085F               	movf	_ballset+1,w
  5684     037E  0021               	movlb	1	; select bank1
  5685     037F  00D7               	movwf	(??_fluxcontrol^(0+128)+1)
  5686     0380  082B               	movf	(_balldist+1)^(0+128),w
  5687     0381  1C03               	skipc
  5688     0382  0F2B               	incfsz	(_balldist+1)^(0+128),w
  5689     0383  2B85               	goto	u2521
  5690     0384  2B86               	goto	u2522
  5691     0385                     u2521:
  5692     0385  02D7               	subwf	(??_fluxcontrol^(0+128)+1),f
  5693     0386                     u2522:
  5694     0386  0020               	movlb	0	; select bank0
  5695     0387  0860               	movf	_ballset+2,w
  5696     0388  0021               	movlb	1	; select bank1
  5697     0389  00D8               	movwf	(??_fluxcontrol^(0+128)+2)
  5698     038A  082C               	movf	(_balldist+2)^(0+128),w
  5699     038B  1C03               	skipc
  5700     038C  0F2C               	incfsz	(_balldist+2)^(0+128),w
  5701     038D  2B8F               	goto	u2523
  5702     038E  2B90               	goto	u2524
  5703     038F                     u2523:
  5704     038F  02D8               	subwf	(??_fluxcontrol^(0+128)+2),f
  5705     0390                     u2524:
  5706     0390  0856               	movf	??_fluxcontrol^(0+128),w
  5707     0391  00CD               	movwf	___tmul@multiplier^(0+128)
  5708     0392  0857               	movf	(??_fluxcontrol+1)^(0+128),w
  5709     0393  00CE               	movwf	(___tmul@multiplier+1)^(0+128)
  5710     0394  0858               	movf	(??_fluxcontrol+2)^(0+128),w
  5711     0395  00CF               	movwf	(___tmul@multiplier+2)^(0+128)
  5712     0396  3064               	movlw	100
  5713     0397  00D0               	movwf	___tmul@multiplicand^(0+128)
  5714     0398  3000               	movlw	0
  5715     0399  00D1               	movwf	(___tmul@multiplicand+1)^(0+128)
  5716     039A  3000               	movlw	0
  5717     039B  00D2               	movwf	(___tmul@multiplicand+2)^(0+128)
  5718     039C  318D  254E  3183   	fcall	___tmul
  5719     039F  084D               	movf	?___tmul^(0+128),w
  5720     03A0  00B0               	movwf	_error^(0+128)
  5721     03A1  084E               	movf	(?___tmul+1)^(0+128),w
  5722     03A2  00B1               	movwf	(_error+1)^(0+128)
  5723     03A3  084F               	movf	(?___tmul+2)^(0+128),w
  5724     03A4  00B2               	movwf	(_error+2)^(0+128)
  5725                           
  5726                           ;main.c: 163:     if(error > 150 || error < -150){
  5727     03A5  1BB2               	btfsc	(_error+2)^(0+128),7
  5728     03A6  2BB1               	goto	l2831
  5729     03A7  0832               	movf	(_error+2)^(0+128),w
  5730     03A8  1D03               	btfss	3,2
  5731     03A9  2BBC               	goto	l2833
  5732     03AA  0831               	movf	(_error+1)^(0+128),w
  5733     03AB  1D03               	btfss	3,2
  5734     03AC  2BBC               	goto	l2833
  5735     03AD  3097               	movlw	151
  5736     03AE  0230               	subwf	_error^(0+128),w
  5737     03AF  1803               	btfsc	3,0
  5738     03B0  2BBC               	goto	l2833
  5739     03B1                     l2831:
  5740     03B1  0021               	movlb	1	; select bank1
  5741     03B2  1FB2               	btfss	(_error+2)^(0+128),7
  5742     03B3  0008               	return
  5743     03B4  306A               	movlw	106
  5744     03B5  0230               	subwf	_error^(0+128),w
  5745     03B6  30FF               	movlw	255
  5746     03B7  3B31               	subwfb	(_error+1)^(0+128),w
  5747     03B8  30FF               	movlw	255
  5748     03B9  3B32               	subwfb	(_error+2)^(0+128),w
  5749     03BA  1803               	btfsc	3,0
  5750     03BB  0008               	return
  5751     03BC                     l2833:
  5752                           
  5753                           ;main.c: 169:         outpre = (((kpf*error +kdf*(error-errorp)))+outpre);
  5754     03BC  0021               	movlb	1	; select bank1
  5755     03BD  0824               	movf	_outpre^(0+128),w
  5756     03BE  00D6               	movwf	??_fluxcontrol^(0+128)
  5757     03BF  0825               	movf	(_outpre+1)^(0+128),w
  5758     03C0  00D7               	movwf	(??_fluxcontrol^(0+128)+1)
  5759     03C1  0826               	movf	(_outpre+2)^(0+128),w
  5760     03C2  00D8               	movwf	(??_fluxcontrol^(0+128)+2)
  5761     03C3  082D               	movf	_errorp^(0+128),w
  5762     03C4  00CD               	movwf	___tmul@multiplier^(0+128)
  5763     03C5  082E               	movf	(_errorp+1)^(0+128),w
  5764     03C6  00CE               	movwf	(___tmul@multiplier+1)^(0+128)
  5765     03C7  082F               	movf	(_errorp+2)^(0+128),w
  5766     03C8  00CF               	movwf	(___tmul@multiplier+2)^(0+128)
  5767     03C9  3093               	movlw	147
  5768     03CA  00D0               	movwf	___tmul@multiplicand^(0+128)
  5769     03CB  30FF               	movlw	255
  5770     03CC  00D1               	movwf	(___tmul@multiplicand+1)^(0+128)
  5771     03CD  30FF               	movlw	255
  5772     03CE  00D2               	movwf	(___tmul@multiplicand+2)^(0+128)
  5773     03CF  318D  254E  3183   	fcall	___tmul
  5774     03D2  084D               	movf	?___tmul^(0+128),w
  5775     03D3  00D9               	movwf	(??_fluxcontrol+3)^(0+128)
  5776     03D4  084E               	movf	(?___tmul+1)^(0+128),w
  5777     03D5  00DA               	movwf	((??_fluxcontrol+3)^(0+128)+1)
  5778     03D6  084F               	movf	(?___tmul+2)^(0+128),w
  5779     03D7  00DB               	movwf	((??_fluxcontrol+3)^(0+128)+2)
  5780     03D8  0830               	movf	_error^(0+128),w
  5781     03D9  00CD               	movwf	___tmul@multiplier^(0+128)
  5782     03DA  0831               	movf	(_error+1)^(0+128),w
  5783     03DB  00CE               	movwf	(___tmul@multiplier+1)^(0+128)
  5784     03DC  0832               	movf	(_error+2)^(0+128),w
  5785     03DD  00CF               	movwf	(___tmul@multiplier+2)^(0+128)
  5786     03DE  3082               	movlw	130
  5787     03DF  00D0               	movwf	___tmul@multiplicand^(0+128)
  5788     03E0  3000               	movlw	0
  5789     03E1  00D1               	movwf	(___tmul@multiplicand+1)^(0+128)
  5790     03E2  3000               	movlw	0
  5791     03E3  00D2               	movwf	(___tmul@multiplicand+2)^(0+128)
  5792     03E4  318D  254E  3183   	fcall	___tmul
  5793     03E7  084D               	movf	?___tmul^(0+128),w
  5794     03E8  07D9               	addwf	(??_fluxcontrol+3)^(0+128),f
  5795     03E9  084E               	movf	(?___tmul+1)^(0+128),w
  5796     03EA  3DDA               	addwfc	((??_fluxcontrol+3)^(0+128)+1),f
  5797     03EB  084F               	movf	(?___tmul+2)^(0+128),w
  5798     03EC  3DDB               	addwfc	((??_fluxcontrol+3)^(0+128)+2),f
  5799     03ED  0859               	movf	(??_fluxcontrol+3)^(0+128),w
  5800     03EE  07D6               	addwf	??_fluxcontrol^(0+128),f
  5801     03EF  085A               	movf	(??_fluxcontrol+4)^(0+128),w
  5802     03F0  3DD7               	addwfc	(??_fluxcontrol^(0+128)+1),f
  5803     03F1  085B               	movf	(??_fluxcontrol+5)^(0+128),w
  5804     03F2  3DD8               	addwfc	(??_fluxcontrol^(0+128)+2),f
  5805     03F3  0856               	movf	??_fluxcontrol^(0+128),w
  5806     03F4  00A4               	movwf	_outpre^(0+128)
  5807     03F5  0857               	movf	(??_fluxcontrol+1)^(0+128),w
  5808     03F6  00A5               	movwf	(_outpre+1)^(0+128)
  5809     03F7  0858               	movf	(??_fluxcontrol+2)^(0+128),w
  5810     03F8  00A6               	movwf	(_outpre+2)^(0+128)
  5811                           
  5812                           ;main.c: 170:         if (outpre > 0) output = 0;
  5813     03F9  1BA6               	btfsc	(_outpre+2)^(0+128),7
  5814     03FA  2C09               	goto	l2839
  5815     03FB  0826               	movf	(_outpre+2)^(0+128),w
  5816     03FC  1D03               	btfss	3,2
  5817     03FD  2C05               	goto	l2837
  5818     03FE  0825               	movf	(_outpre+1)^(0+128),w
  5819     03FF  1D03               	btfss	3,2
  5820     0400  2C05               	goto	l2837
  5821     0401  3001               	movlw	1
  5822     0402  0224               	subwf	_outpre^(0+128),w
  5823     0403  1C03               	btfss	3,0
  5824     0404  2C09               	goto	l2839
  5825     0405                     l2837:
  5826     0405  0021               	movlb	1	; select bank1
  5827     0406  01C1               	clrf	_output^(0+128)
  5828     0407  01C2               	clrf	(_output+1)^(0+128)
  5829     0408  2C19               	goto	l2845
  5830     0409                     l2839:
  5831     0409  0021               	movlb	1	; select bank1
  5832     040A  1FA6               	btfss	(_outpre+2)^(0+128),7
  5833     040B  2C05               	goto	l2837
  5834     040C  30C0               	movlw	192
  5835     040D  0224               	subwf	_outpre^(0+128),w
  5836     040E  3063               	movlw	99
  5837     040F  3B25               	subwfb	(_outpre+1)^(0+128),w
  5838     0410  30FF               	movlw	255
  5839     0411  3B26               	subwfb	(_outpre+2)^(0+128),w
  5840     0412  1803               	btfsc	3,0
  5841     0413  2C05               	goto	l2837
  5842     0414  3090               	movlw	144
  5843     0415  0021               	movlb	1	; select bank1
  5844     0416  00C1               	movwf	_output^(0+128)
  5845     0417  3001               	movlw	1
  5846     0418  00C2               	movwf	(_output^(0+128)+1)
  5847     0419                     l2845:
  5848                           
  5849                           ;main.c: 173:         if (outpre>800){
  5850     0419  1BA6               	btfsc	(_outpre+2)^(0+128),7
  5851     041A  2C2B               	goto	l2849
  5852     041B  0826               	movf	(_outpre+2)^(0+128),w
  5853     041C  1D03               	btfss	3,2
  5854     041D  2C24               	goto	l2847
  5855     041E  3021               	movlw	33
  5856     041F  0224               	subwf	_outpre^(0+128),w
  5857     0420  3003               	movlw	3
  5858     0421  3B25               	subwfb	(_outpre+1)^(0+128),w
  5859     0422  1C03               	btfss	3,0
  5860     0423  2C2B               	goto	l2849
  5861     0424                     l2847:
  5862                           
  5863                           ;main.c: 174:             outpre = 800;
  5864     0424  3020               	movlw	32
  5865     0425  0021               	movlb	1	; select bank1
  5866     0426  00A4               	movwf	_outpre^(0+128)
  5867     0427  3003               	movlw	3
  5868     0428  00A5               	movwf	(_outpre+1)^(0+128)
  5869     0429  3000               	movlw	0
  5870     042A  2C3C               	goto	L7
  5871     042B                     l2849:	
  5872                           ;main.c: 175:         } else if (outpre < -45000){
  5873                           
  5874     042B  0021               	movlb	1	; select bank1
  5875     042C  1FA6               	btfss	(_outpre+2)^(0+128),7
  5876     042D  2C3D               	goto	l705
  5877     042E  3038               	movlw	56
  5878     042F  0224               	subwf	_outpre^(0+128),w
  5879     0430  3050               	movlw	80
  5880     0431  3B25               	subwfb	(_outpre+1)^(0+128),w
  5881     0432  30FF               	movlw	255
  5882     0433  3B26               	subwfb	(_outpre+2)^(0+128),w
  5883     0434  1803               	btfsc	3,0
  5884     0435  2C3D               	goto	l705
  5885                           
  5886                           ;main.c: 176:             outpre = -45000;
  5887     0436  3038               	movlw	56
  5888     0437  0021               	movlb	1	; select bank1
  5889     0438  00A4               	movwf	_outpre^(0+128)
  5890     0439  3050               	movlw	80
  5891     043A  00A5               	movwf	(_outpre+1)^(0+128)
  5892     043B  30FF               	movlw	255
  5893     043C                     L7:
  5894     043C  00A6               	movwf	(_outpre+2)^(0+128)
  5895     043D                     l705:
  5896                           
  5897                           ;main.c: 178:         errorp = error;
  5898     043D  0021               	movlb	1	; select bank1
  5899     043E  0830               	movf	_error^(0+128),w
  5900     043F  00AD               	movwf	_errorp^(0+128)
  5901     0440  0831               	movf	(_error+1)^(0+128),w
  5902     0441  00AE               	movwf	(_errorp+1)^(0+128)
  5903     0442  0832               	movf	(_error+2)^(0+128),w
  5904     0443  00AF               	movwf	(_errorp+2)^(0+128)
  5905     0444  0008               	return
  5906     0445                     __end_of_fluxcontrol:
  5907                           
  5908                           	psect	text14
  5909     0D4E                     __ptext14:	
  5910 ;; *************** function ___tmul *****************
  5911 ;; Defined at:
  5912 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul24.c"
  5913 ;; Parameters:    Size  Location     Type
  5914 ;;  multiplier      3    0[BANK1 ] unsigned um
  5915 ;;  multiplicand    3    3[BANK1 ] unsigned um
  5916 ;; Auto vars:     Size  Location     Type
  5917 ;;  product         3    6[BANK1 ] unsigned um
  5918 ;; Return value:  Size  Location     Type
  5919 ;;                  3    0[BANK1 ] unsigned um
  5920 ;; Registers used:
  5921 ;;		wreg, status,2, status,0
  5922 ;; Tracked objects:
  5923 ;;		On entry : 1F/1
  5924 ;;		On exit  : 1F/1
  5925 ;;		Unchanged: 0/0
  5926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5927 ;;      Params:         0       0       6       0       0       0
  5928 ;;      Locals:         0       0       3       0       0       0
  5929 ;;      Temps:          0       0       0       0       0       0
  5930 ;;      Totals:         0       0       9       0       0       0
  5931 ;;Total ram usage:        9 bytes
  5932 ;; Hardware stack levels used: 1
  5933 ;; Hardware stack levels required when called: 5
  5934 ;; This function calls:
  5935 ;;		Nothing
  5936 ;; This function is called by:
  5937 ;;		_fluxcontrol
  5938 ;;		_pwmcontrol
  5939 ;; This function uses a non-reentrant model
  5940 ;;
  5941                           
  5942     0D4E                     ___tmul:	
  5943                           ;psect for function ___tmul
  5944                           
  5945                           
  5946                           ;incstack = 0
  5947                           ; Regs used in ___tmul: [wreg+status,2+status,0]
  5948     0D4E  3000               	movlw	0
  5949     0D4F  00D3               	movwf	___tmul@product^(0+128)
  5950     0D50  3000               	movlw	0
  5951     0D51  00D4               	movwf	(___tmul@product+1)^(0+128)
  5952     0D52  3000               	movlw	0
  5953     0D53  00D5               	movwf	(___tmul@product+2)^(0+128)
  5954     0D54                     l2335:
  5955     0D54  1C4D               	btfss	___tmul@multiplier^(0+128),0
  5956     0D55  2D5C               	goto	l2339
  5957     0D56  0850               	movf	___tmul@multiplicand^(0+128),w
  5958     0D57  07D3               	addwf	___tmul@product^(0+128),f
  5959     0D58  0851               	movf	(___tmul@multiplicand+1)^(0+128),w
  5960     0D59  3DD4               	addwfc	(___tmul@product+1)^(0+128),f
  5961     0D5A  0852               	movf	(___tmul@multiplicand+2)^(0+128),w
  5962     0D5B  3DD5               	addwfc	(___tmul@product+2)^(0+128),f
  5963     0D5C                     l2339:
  5964     0D5C  3001               	movlw	1
  5965     0D5D                     u1625:
  5966     0D5D  35D0               	lslf	___tmul@multiplicand^(0+128),f
  5967     0D5E  0DD1               	rlf	(___tmul@multiplicand+1)^(0+128),f
  5968     0D5F  0DD2               	rlf	(___tmul@multiplicand+2)^(0+128),f
  5969     0D60  0B89               	decfsz	9,f
  5970     0D61  2D5D               	goto	u1625
  5971     0D62  3001               	movlw	1
  5972     0D63                     u1635:
  5973     0D63  36CF               	lsrf	(___tmul@multiplier+2)^(0+128),f
  5974     0D64  0CCE               	rrf	(___tmul@multiplier+1)^(0+128),f
  5975     0D65  0CCD               	rrf	___tmul@multiplier^(0+128),f
  5976     0D66  0B89               	decfsz	9,f
  5977     0D67  2D63               	goto	u1635
  5978     0D68  084F               	movf	(___tmul@multiplier+2)^(0+128),w
  5979     0D69  044E               	iorwf	(___tmul@multiplier+1)^(0+128),w
  5980     0D6A  044D               	iorwf	___tmul@multiplier^(0+128),w
  5981     0D6B  1D03               	skipz
  5982     0D6C  2D54               	goto	l2335
  5983     0D6D  0853               	movf	___tmul@product^(0+128),w
  5984     0D6E  00CD               	movwf	?___tmul^(0+128)
  5985     0D6F  0854               	movf	(___tmul@product+1)^(0+128),w
  5986     0D70  00CE               	movwf	(?___tmul+1)^(0+128)
  5987     0D71  0855               	movf	(___tmul@product+2)^(0+128),w
  5988     0D72  00CF               	movwf	(?___tmul+2)^(0+128)
  5989     0D73  0008               	return
  5990     0D74                     __end_of___tmul:
  5991                           
  5992                           	psect	text15
  5993     0B61                     __ptext15:	
  5994 ;; *************** function _TMR4_StartTimer *****************
  5995 ;; Defined at:
  5996 ;;		line 79 in file "mcc_generated_files/tmr4.c"
  5997 ;; Parameters:    Size  Location     Type
  5998 ;;		None
  5999 ;; Auto vars:     Size  Location     Type
  6000 ;;		None
  6001 ;; Return value:  Size  Location     Type
  6002 ;;                  1    wreg      void 
  6003 ;; Registers used:
  6004 ;;		None
  6005 ;; Tracked objects:
  6006 ;;		On entry : 0/1
  6007 ;;		On exit  : 1F/8
  6008 ;;		Unchanged: 0/0
  6009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6010 ;;      Params:         0       0       0       0       0       0
  6011 ;;      Locals:         0       0       0       0       0       0
  6012 ;;      Temps:          0       0       0       0       0       0
  6013 ;;      Totals:         0       0       0       0       0       0
  6014 ;;Total ram usage:        0 bytes
  6015 ;; Hardware stack levels used: 1
  6016 ;; Hardware stack levels required when called: 5
  6017 ;; This function calls:
  6018 ;;		Nothing
  6019 ;; This function is called by:
  6020 ;;		_controlchoose
  6021 ;; This function uses a non-reentrant model
  6022 ;;
  6023                           
  6024     0B61                     _TMR4_StartTimer:	
  6025                           ;psect for function _TMR4_StartTimer
  6026                           
  6027                           
  6028                           ;mcc_generated_files/tmr4.c: 82:     T4CONbits.TMR4ON = 1;
  6029                           
  6030                           ;incstack = 0
  6031                           ; Regs used in _TMR4_StartTimer: []
  6032     0B61  0028               	movlb	8	; select bank8
  6033     0B62  1517               	bsf	23,2	;volatile
  6034     0B63  0008               	return
  6035     0B64                     __end_of_TMR4_StartTimer:
  6036                           
  6037                           	psect	text16
  6038     0511                     __ptext16:	
  6039 ;; *************** function _analisa_Rx *****************
  6040 ;; Defined at:
  6041 ;;		line 212 in file "main.c"
  6042 ;; Parameters:    Size  Location     Type
  6043 ;;		None
  6044 ;; Auto vars:     Size  Location     Type
  6045 ;;		None
  6046 ;; Return value:  Size  Location     Type
  6047 ;;                  1    wreg      void 
  6048 ;; Registers used:
  6049 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6050 ;; Tracked objects:
  6051 ;;		On entry : 1F/1
  6052 ;;		On exit  : 1F/1
  6053 ;;		Unchanged: 0/0
  6054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6055 ;;      Params:         0       0       0       0       0       0
  6056 ;;      Locals:         0       0       0       0       0       0
  6057 ;;      Temps:          0       0       0       0       0       0
  6058 ;;      Totals:         0       0       0       0       0       0
  6059 ;;Total ram usage:        0 bytes
  6060 ;; Hardware stack levels used: 1
  6061 ;; Hardware stack levels required when called: 6
  6062 ;; This function calls:
  6063 ;;		_EPWM1_LoadDutyValue
  6064 ;; This function is called by:
  6065 ;;		_main
  6066 ;; This function uses a non-reentrant model
  6067 ;;
  6068                           
  6069     0511                     _analisa_Rx:	
  6070                           ;psect for function _analisa_Rx
  6071                           
  6072                           
  6073                           ;main.c: 213:     switch(bufferRx[0]){
  6074                           
  6075                           ;incstack = 0
  6076                           ; Regs used in _analisa_Rx: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6077     0511  2DC3               	goto	l3037
  6078     0512                     l2991:
  6079                           
  6080                           ;main.c: 215:             if(countRx==7){
  6081     0512  3007               	movlw	7
  6082     0513  0021               	movlb	1	; select bank1
  6083     0514  064A               	xorwf	_countRx^(0+128),w
  6084     0515  1D03               	btfss	3,2
  6085     0516  2D44               	goto	l3007
  6086                           
  6087                           ;main.c: 216:                 controlchoice = bufferRx[0];
  6088     0517  0020               	movlb	0	; select bank0
  6089     0518  0853               	movf	_bufferRx,w
  6090     0519  0021               	movlb	1	; select bank1
  6091     051A  00CB               	movwf	_controlchoice^(0+128)
  6092                           
  6093                           ;main.c: 217:                 vRx.vH = bufferRx[3];
  6094     051B  0020               	movlb	0	; select bank0
  6095     051C  0856               	movf	_bufferRx+3,w
  6096     051D  0021               	movlb	1	; select bank1
  6097     051E  00BE               	movwf	(_vRx^(0+128)+1)
  6098                           
  6099                           ;main.c: 218:                 vRx.vL = bufferRx[4];
  6100     051F  0020               	movlb	0	; select bank0
  6101     0520  0857               	movf	_bufferRx+4,w
  6102     0521  0021               	movlb	1	; select bank1
  6103     0522  00BD               	movwf	_vRx^(0+128)
  6104                           
  6105                           ;main.c: 219:                 sp_position = vRx.v;
  6106     0523  083E               	movf	(_vRx+1)^(0+128),w
  6107     0524  00B8               	movwf	(_sp_position+1)^(0+128)
  6108     0525  083D               	movf	_vRx^(0+128),w
  6109     0526  00B7               	movwf	_sp_position^(0+128)
  6110                           
  6111                           ;main.c: 220:                 if(sp_position > 400 ) sp_position = 400;
  6112     0527  3001               	movlw	1
  6113     0528  0238               	subwf	(_sp_position+1)^(0+128),w
  6114     0529  3091               	movlw	145
  6115     052A  1903               	skipnz
  6116     052B  0237               	subwf	_sp_position^(0+128),w
  6117     052C  1C03               	skipc
  6118     052D  2D32               	goto	l2999
  6119     052E  3090               	movlw	144
  6120     052F  00B7               	movwf	_sp_position^(0+128)
  6121     0530  3001               	movlw	1
  6122     0531  00B8               	movwf	(_sp_position^(0+128)+1)
  6123     0532                     l2999:
  6124                           
  6125                           ;main.c: 222:                 vRx.vH = bufferRx[5];
  6126     0532  0020               	movlb	0	; select bank0
  6127     0533  0858               	movf	_bufferRx+5,w
  6128     0534  0021               	movlb	1	; select bank1
  6129     0535  00BE               	movwf	(_vRx^(0+128)+1)
  6130                           
  6131                           ;main.c: 223:                 vRx.vL = bufferRx[6];
  6132     0536  0020               	movlb	0	; select bank0
  6133     0537  0859               	movf	_bufferRx+6,w
  6134     0538  0021               	movlb	1	; select bank1
  6135     0539  00BD               	movwf	_vRx^(0+128)
  6136                           
  6137                           ;main.c: 224:                 dc = vRx.v;
  6138     053A  083E               	movf	(_vRx+1)^(0+128),w
  6139     053B  00BC               	movwf	(_dc+1)^(0+128)
  6140     053C  083D               	movf	_vRx^(0+128),w
  6141     053D  00BB               	movwf	_dc^(0+128)
  6142                           
  6143                           ;main.c: 225:                 EPWM1_LoadDutyValue(dc);
  6144     053E  083C               	movf	(_dc+1)^(0+128),w
  6145     053F  00CE               	movwf	(EPWM1_LoadDutyValue@dutyValue+1)^(0+128)
  6146     0540  083B               	movf	_dc^(0+128),w
  6147     0541  00CD               	movwf	EPWM1_LoadDutyValue@dutyValue^(0+128)
  6148     0542  318C  24D0         	fcall	_EPWM1_LoadDutyValue
  6149     0544                     l3007:
  6150                           
  6151                           ;main.c: 227:             countRx = 0;
  6152     0544  0021               	movlb	1	; select bank1
  6153     0545  01CA               	clrf	_countRx^(0+128)
  6154                           
  6155                           ;main.c: 228:             break;
  6156     0546  0008               	return
  6157     0547                     l3009:
  6158                           
  6159                           ;main.c: 230:             if(countRx==7){
  6160     0547  3007               	movlw	7
  6161     0548  0021               	movlb	1	; select bank1
  6162     0549  064A               	xorwf	_countRx^(0+128),w
  6163     054A  1D03               	btfss	3,2
  6164     054B  2D44               	goto	l3007
  6165                           
  6166                           ;main.c: 231:                 controlchoice = bufferRx[0];
  6167     054C  0020               	movlb	0	; select bank0
  6168     054D  0853               	movf	_bufferRx,w
  6169     054E  0021               	movlb	1	; select bank1
  6170     054F  00CB               	movwf	_controlchoice^(0+128)
  6171                           
  6172                           ;main.c: 232:                 vRx.vH = bufferRx[1];
  6173     0550  0020               	movlb	0	; select bank0
  6174     0551  0854               	movf	_bufferRx+1,w
  6175     0552  0021               	movlb	1	; select bank1
  6176     0553  00BE               	movwf	(_vRx^(0+128)+1)
  6177                           
  6178                           ;main.c: 233:                 vRx.vL = bufferRx[2];
  6179     0554  0020               	movlb	0	; select bank0
  6180     0555  0855               	movf	_bufferRx+2,w
  6181     0556  0021               	movlb	1	; select bank1
  6182     0557  00BD               	movwf	_vRx^(0+128)
  6183                           
  6184                           ;main.c: 234:                 sp_height = vRx.v;
  6185     0558  083E               	movf	(_vRx+1)^(0+128),w
  6186     0559  0020               	movlb	0	; select bank0
  6187     055A  00E4               	movwf	_sp_height+1
  6188     055B  0021               	movlb	1	; select bank1
  6189     055C  083D               	movf	_vRx^(0+128),w
  6190     055D  0020               	movlb	0	; select bank0
  6191     055E  00E3               	movwf	_sp_height
  6192                           
  6193                           ;main.c: 235:                 ballset = vRx.v ;
  6194     055F  0021               	movlb	1	; select bank1
  6195     0560  083D               	movf	_vRx^(0+128),w
  6196     0561  0020               	movlb	0	; select bank0
  6197     0562  00DE               	movwf	_ballset
  6198     0563  0021               	movlb	1	; select bank1
  6199     0564  083E               	movf	(_vRx+1)^(0+128),w
  6200     0565  0020               	movlb	0	; select bank0
  6201     0566  00DF               	movwf	_ballset+1
  6202     0567  01E0               	clrf	_ballset+2
  6203                           
  6204                           ;main.c: 236:                 vRx.vH = bufferRx[3];
  6205     0568  0856               	movf	_bufferRx+3,w
  6206     0569  0021               	movlb	1	; select bank1
  6207     056A  00BE               	movwf	(_vRx^(0+128)+1)
  6208                           
  6209                           ;main.c: 237:                 vRx.vL = bufferRx[4];
  6210     056B  0020               	movlb	0	; select bank0
  6211     056C  0857               	movf	_bufferRx+4,w
  6212     056D  0021               	movlb	1	; select bank1
  6213     056E  00BD               	movwf	_vRx^(0+128)
  6214                           
  6215                           ;main.c: 238:                 sp_position = vRx.v;
  6216     056F  083E               	movf	(_vRx+1)^(0+128),w
  6217     0570  00B8               	movwf	(_sp_position+1)^(0+128)
  6218     0571  083D               	movf	_vRx^(0+128),w
  6219     0572  00B7               	movwf	_sp_position^(0+128)
  6220                           
  6221                           ;main.c: 239:                 outputsum = 0;
  6222     0573  3000               	movlw	0
  6223     0574  2DAA               	goto	L8
  6224     0575                     l3015:	
  6225                           ;main.c: 241:                 error =0;
  6226                           
  6227                           ;main.c: 240:                 errorp=0;
  6228                           
  6229                           
  6230                           ;main.c: 246:             if(countRx==7){
  6231     0575  3007               	movlw	7
  6232     0576  0021               	movlb	1	; select bank1
  6233     0577  064A               	xorwf	_countRx^(0+128),w
  6234     0578  1D03               	btfss	3,2
  6235     0579  2D44               	goto	l3007
  6236                           
  6237                           ;main.c: 247:                 controlchoice = bufferRx[0];
  6238     057A  0020               	movlb	0	; select bank0
  6239     057B  0853               	movf	_bufferRx,w
  6240     057C  0021               	movlb	1	; select bank1
  6241     057D  00CB               	movwf	_controlchoice^(0+128)
  6242                           
  6243                           ;main.c: 248:                 vRx.vH = bufferRx[1];
  6244     057E  0020               	movlb	0	; select bank0
  6245     057F  0854               	movf	_bufferRx+1,w
  6246     0580  0021               	movlb	1	; select bank1
  6247     0581  00BE               	movwf	(_vRx^(0+128)+1)
  6248                           
  6249                           ;main.c: 249:                 vRx.vL = bufferRx[2];
  6250     0582  0020               	movlb	0	; select bank0
  6251     0583  0855               	movf	_bufferRx+2,w
  6252     0584  0021               	movlb	1	; select bank1
  6253     0585  00BD               	movwf	_vRx^(0+128)
  6254                           
  6255                           ;main.c: 250:                 sp_height = vRx.v;
  6256     0586  083E               	movf	(_vRx+1)^(0+128),w
  6257     0587  0020               	movlb	0	; select bank0
  6258     0588  00E4               	movwf	_sp_height+1
  6259     0589  0021               	movlb	1	; select bank1
  6260     058A  083D               	movf	_vRx^(0+128),w
  6261     058B  0020               	movlb	0	; select bank0
  6262     058C  00E3               	movwf	_sp_height
  6263                           
  6264                           ;main.c: 251:                 ballset = vRx.v;
  6265     058D  0021               	movlb	1	; select bank1
  6266     058E  083D               	movf	_vRx^(0+128),w
  6267     058F  0020               	movlb	0	; select bank0
  6268     0590  00DE               	movwf	_ballset
  6269     0591  0021               	movlb	1	; select bank1
  6270     0592  083E               	movf	(_vRx+1)^(0+128),w
  6271     0593  0020               	movlb	0	; select bank0
  6272     0594  00DF               	movwf	_ballset+1
  6273     0595  01E0               	clrf	_ballset+2
  6274                           
  6275                           ;main.c: 252:                 vRx.vH = bufferRx[5];
  6276     0596  0858               	movf	_bufferRx+5,w
  6277     0597  0021               	movlb	1	; select bank1
  6278     0598  00BE               	movwf	(_vRx^(0+128)+1)
  6279                           
  6280                           ;main.c: 253:                 vRx.vL = bufferRx[6];
  6281     0599  0020               	movlb	0	; select bank0
  6282     059A  0859               	movf	_bufferRx+6,w
  6283     059B  0021               	movlb	1	; select bank1
  6284     059C  00BD               	movwf	_vRx^(0+128)
  6285                           
  6286                           ;main.c: 254:                 dc = vRx.v;
  6287     059D  083E               	movf	(_vRx+1)^(0+128),w
  6288     059E  00BC               	movwf	(_dc+1)^(0+128)
  6289     059F  083D               	movf	_vRx^(0+128),w
  6290     05A0  00BB               	movwf	_dc^(0+128)
  6291                           
  6292                           ;main.c: 255:                 EPWM1_LoadDutyValue(dc);
  6293     05A1  083C               	movf	(_dc+1)^(0+128),w
  6294     05A2  00CE               	movwf	(EPWM1_LoadDutyValue@dutyValue+1)^(0+128)
  6295     05A3  083B               	movf	_dc^(0+128),w
  6296     05A4  00CD               	movwf	EPWM1_LoadDutyValue@dutyValue^(0+128)
  6297     05A5  318C  24D0  3185   	fcall	_EPWM1_LoadDutyValue
  6298                           
  6299                           ;main.c: 256:                 outputsum = 0;
  6300     05A8  3000               	movlw	0
  6301     05A9  0021               	movlb	1	; select bank1
  6302     05AA                     L8:
  6303     05AA  00A7               	movwf	_outputsum^(0+128)
  6304     05AB  3000               	movlw	0
  6305     05AC  00A8               	movwf	(_outputsum+1)^(0+128)
  6306     05AD  3000               	movlw	0
  6307     05AE  00A9               	movwf	(_outputsum+2)^(0+128)
  6308                           
  6309                           ;main.c: 257:                 errorp=0;
  6310     05AF  3000               	movlw	0
  6311     05B0  00AD               	movwf	_errorp^(0+128)
  6312     05B1  3000               	movlw	0
  6313     05B2  00AE               	movwf	(_errorp+1)^(0+128)
  6314     05B3  3000               	movlw	0
  6315     05B4  00AF               	movwf	(_errorp+2)^(0+128)
  6316                           
  6317                           ;main.c: 258:                 error =0;
  6318     05B5  3000               	movlw	0
  6319     05B6  00B0               	movwf	_error^(0+128)
  6320     05B7  3000               	movlw	0
  6321     05B8  00B1               	movwf	(_error+1)^(0+128)
  6322     05B9  3000               	movlw	0
  6323     05BA  00B2               	movwf	(_error+2)^(0+128)
  6324     05BB  2D44               	goto	l3007
  6325     05BC                     l3029:
  6326                           
  6327                           ;main.c: 263:             if(countRx==7){
  6328     05BC  3007               	movlw	7
  6329     05BD  0021               	movlb	1	; select bank1
  6330     05BE  064A               	xorwf	_countRx^(0+128),w
  6331     05BF  1D03               	btfss	3,2
  6332     05C0  2D44               	goto	l3007
  6333     05C1  0001               	reset	;# 
  6334     05C2  2D44               	goto	l3007
  6335     05C3                     l3037:
  6336     05C3  0020               	movlb	0	; select bank0
  6337     05C4  0853               	movf	_bufferRx,w
  6338                           
  6339                           ; Switch size 1, requested type "simple"
  6340                           ; Number of cases is 4, Range of values is 0 to 3
  6341                           ; switch strategies available:
  6342                           ; Name         Instructions Cycles
  6343                           ; simple_byte           13     7 (average)
  6344                           ; direct_byte           14     6 (fixed)
  6345                           ; jumptable            260     6 (fixed)
  6346                           ;	Chosen strategy is simple_byte
  6347     05C5  3A00               	xorlw	0	; case 0
  6348     05C6  1903               	skipnz
  6349     05C7  2D12               	goto	l2991
  6350     05C8  3A01               	xorlw	1	; case 1
  6351     05C9  1903               	skipnz
  6352     05CA  2D47               	goto	l3009
  6353     05CB  3A03               	xorlw	3	; case 2
  6354     05CC  1903               	skipnz
  6355     05CD  2D75               	goto	l3015
  6356     05CE  3A01               	xorlw	1	; case 3
  6357     05CF  1903               	skipnz
  6358     05D0  2DBC               	goto	l3029
  6359     05D1  2D44               	goto	l3007
  6360     05D2  0008               	return
  6361     05D3                     __end_of_analisa_Rx:
  6362                           
  6363                           	psect	text17
  6364     0CD0                     __ptext17:	
  6365 ;; *************** function _EPWM1_LoadDutyValue *****************
  6366 ;; Defined at:
  6367 ;;		line 90 in file "mcc_generated_files/epwm1.c"
  6368 ;; Parameters:    Size  Location     Type
  6369 ;;  dutyValue       2    0[BANK1 ] unsigned short 
  6370 ;; Auto vars:     Size  Location     Type
  6371 ;;		None
  6372 ;; Return value:  Size  Location     Type
  6373 ;;                  1    wreg      void 
  6374 ;; Registers used:
  6375 ;;		wreg, status,2, status,0
  6376 ;; Tracked objects:
  6377 ;;		On entry : 1F/1
  6378 ;;		On exit  : 1F/5
  6379 ;;		Unchanged: 0/0
  6380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6381 ;;      Params:         0       0       2       0       0       0
  6382 ;;      Locals:         0       0       0       0       0       0
  6383 ;;      Temps:          0       0       2       0       0       0
  6384 ;;      Totals:         0       0       4       0       0       0
  6385 ;;Total ram usage:        4 bytes
  6386 ;; Hardware stack levels used: 1
  6387 ;; Hardware stack levels required when called: 5
  6388 ;; This function calls:
  6389 ;;		Nothing
  6390 ;; This function is called by:
  6391 ;;		_pwmcontrol
  6392 ;;		_analisa_Rx
  6393 ;; This function uses a non-reentrant model
  6394 ;;
  6395                           
  6396     0CD0                     _EPWM1_LoadDutyValue:	
  6397                           ;psect for function _EPWM1_LoadDutyValue
  6398                           
  6399                           
  6400                           ;mcc_generated_files/epwm1.c: 90: void EPWM1_LoadDutyValue(uint16_t dutyValue);mcc_gener
      +                          ated_files/epwm1.c: 91: {;mcc_generated_files/epwm1.c: 93:     CCPR1L = ((dutyValue & 0x
      +                          03FC)>>2);
  6401                           
  6402                           ;incstack = 0
  6403                           ; Regs used in _EPWM1_LoadDutyValue: [wreg+status,2+status,0]
  6404     0CD0  084E               	movf	(EPWM1_LoadDutyValue@dutyValue+1)^(0+128),w
  6405     0CD1  00D0               	movwf	(??_EPWM1_LoadDutyValue^(0+128)+1)
  6406     0CD2  084D               	movf	EPWM1_LoadDutyValue@dutyValue^(0+128),w
  6407     0CD3  00CF               	movwf	??_EPWM1_LoadDutyValue^(0+128)
  6408     0CD4  36D0               	lsrf	(??_EPWM1_LoadDutyValue^(0+128)+1),f
  6409     0CD5  0CCF               	rrf	??_EPWM1_LoadDutyValue^(0+128),f
  6410     0CD6  36D0               	lsrf	(??_EPWM1_LoadDutyValue^(0+128)+1),f
  6411     0CD7  0CCF               	rrf	??_EPWM1_LoadDutyValue^(0+128),f
  6412     0CD8  084F               	movf	??_EPWM1_LoadDutyValue^(0+128),w
  6413     0CD9  0025               	movlb	5	; select bank5
  6414     0CDA  0091               	movwf	17	;volatile
  6415                           
  6416                           ;mcc_generated_files/epwm1.c: 96:     CCP1CON = ((uint8_t)(CCP1CON & 0xCF) | ((dutyValue
      +                           & 0x0003)<<4));
  6417     0CDB  0021               	movlb	1	; select bank1
  6418     0CDC  084D               	movf	EPWM1_LoadDutyValue@dutyValue^(0+128),w
  6419     0CDD  3903               	andlw	3
  6420     0CDE  00CF               	movwf	??_EPWM1_LoadDutyValue^(0+128)
  6421     0CDF  3004               	movlw	4
  6422     0CE0                     u1585:
  6423     0CE0  35CF               	lslf	??_EPWM1_LoadDutyValue^(0+128),f
  6424     0CE1  0B89               	decfsz	9,f
  6425     0CE2  2CE0               	goto	u1585
  6426     0CE3  0025               	movlb	5	; select bank5
  6427     0CE4  0813               	movf	19,w	;volatile
  6428     0CE5  39CF               	andlw	207
  6429     0CE6  0021               	movlb	1	; select bank1
  6430     0CE7  044F               	iorwf	??_EPWM1_LoadDutyValue^(0+128),w
  6431     0CE8  0025               	movlb	5	; select bank5
  6432     0CE9  0093               	movwf	19	;volatile
  6433     0CEA  0008               	return
  6434     0CEB                     __end_of_EPWM1_LoadDutyValue:
  6435                           
  6436                           	psect	text18
  6437     0B90                     __ptext18:	
  6438 ;; *************** function _TMR6_WriteTimer *****************
  6439 ;; Defined at:
  6440 ;;		line 100 in file "mcc_generated_files/tmr6.c"
  6441 ;; Parameters:    Size  Location     Type
  6442 ;;  timerVal        1    wreg     unsigned char 
  6443 ;; Auto vars:     Size  Location     Type
  6444 ;;  timerVal        1    0[BANK1 ] unsigned char 
  6445 ;; Return value:  Size  Location     Type
  6446 ;;                  1    wreg      void 
  6447 ;; Registers used:
  6448 ;;		wreg
  6449 ;; Tracked objects:
  6450 ;;		On entry : 16/1
  6451 ;;		On exit  : 1F/8
  6452 ;;		Unchanged: 0/0
  6453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6454 ;;      Params:         0       0       0       0       0       0
  6455 ;;      Locals:         0       0       1       0       0       0
  6456 ;;      Temps:          0       0       0       0       0       0
  6457 ;;      Totals:         0       0       1       0       0       0
  6458 ;;Total ram usage:        1 bytes
  6459 ;; Hardware stack levels used: 1
  6460 ;; Hardware stack levels required when called: 5
  6461 ;; This function calls:
  6462 ;;		Nothing
  6463 ;; This function is called by:
  6464 ;;		_main
  6465 ;; This function uses a non-reentrant model
  6466 ;;
  6467                           
  6468     0B90                     _TMR6_WriteTimer:	
  6469                           ;psect for function _TMR6_WriteTimer
  6470                           
  6471                           
  6472                           ;incstack = 0
  6473                           ; Regs used in _TMR6_WriteTimer: [wreg]
  6474                           ;TMR6_WriteTimer@timerVal stored from wreg
  6475     0B90  0021               	movlb	1	; select bank1
  6476     0B91  00CD               	movwf	TMR6_WriteTimer@timerVal^(0+128)
  6477                           
  6478                           ;mcc_generated_files/tmr6.c: 100: void TMR6_WriteTimer(uint8_t timerVal);mcc_generated_f
      +                          iles/tmr6.c: 101: {;mcc_generated_files/tmr6.c: 103:     TMR6 = timerVal;
  6479     0B92  084D               	movf	TMR6_WriteTimer@timerVal^(0+128),w
  6480     0B93  0028               	movlb	8	; select bank8
  6481     0B94  009C               	movwf	28	;volatile
  6482     0B95  0008               	return
  6483     0B96                     __end_of_TMR6_WriteTimer:
  6484                           
  6485                           	psect	text19
  6486     0B8A                     __ptext19:	
  6487 ;; *************** function _TMR6_LoadPeriodRegister *****************
  6488 ;; Defined at:
  6489 ;;		line 106 in file "mcc_generated_files/tmr6.c"
  6490 ;; Parameters:    Size  Location     Type
  6491 ;;  periodVal       1    wreg     unsigned char 
  6492 ;; Auto vars:     Size  Location     Type
  6493 ;;  periodVal       1    0[BANK1 ] unsigned char 
  6494 ;; Return value:  Size  Location     Type
  6495 ;;                  1    wreg      void 
  6496 ;; Registers used:
  6497 ;;		wreg
  6498 ;; Tracked objects:
  6499 ;;		On entry : 1E/0
  6500 ;;		On exit  : 1F/8
  6501 ;;		Unchanged: 0/0
  6502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6503 ;;      Params:         0       0       0       0       0       0
  6504 ;;      Locals:         0       0       1       0       0       0
  6505 ;;      Temps:          0       0       0       0       0       0
  6506 ;;      Totals:         0       0       1       0       0       0
  6507 ;;Total ram usage:        1 bytes
  6508 ;; Hardware stack levels used: 1
  6509 ;; Hardware stack levels required when called: 5
  6510 ;; This function calls:
  6511 ;;		Nothing
  6512 ;; This function is called by:
  6513 ;;		_main
  6514 ;; This function uses a non-reentrant model
  6515 ;;
  6516                           
  6517     0B8A                     _TMR6_LoadPeriodRegister:	
  6518                           ;psect for function _TMR6_LoadPeriodRegister
  6519                           
  6520                           
  6521                           ;incstack = 0
  6522                           ; Regs used in _TMR6_LoadPeriodRegister: [wreg]
  6523                           ;TMR6_LoadPeriodRegister@periodVal stored from wreg
  6524     0B8A  0021               	movlb	1	; select bank1
  6525     0B8B  00CD               	movwf	TMR6_LoadPeriodRegister@periodVal^(0+128)
  6526                           
  6527                           ;mcc_generated_files/tmr6.c: 106: void TMR6_LoadPeriodRegister(uint8_t periodVal);mcc_ge
      +                          nerated_files/tmr6.c: 107: {;mcc_generated_files/tmr6.c: 108:    PR6 = periodVal;
  6528     0B8C  084D               	movf	TMR6_LoadPeriodRegister@periodVal^(0+128),w
  6529     0B8D  0028               	movlb	8	; select bank8
  6530     0B8E  009D               	movwf	29	;volatile
  6531     0B8F  0008               	return
  6532     0B90                     __end_of_TMR6_LoadPeriodRegister:
  6533                           
  6534                           	psect	text20
  6535     0B5E                     __ptext20:	
  6536 ;; *************** function _TMR4_StopTimer *****************
  6537 ;; Defined at:
  6538 ;;		line 85 in file "mcc_generated_files/tmr4.c"
  6539 ;; Parameters:    Size  Location     Type
  6540 ;;		None
  6541 ;; Auto vars:     Size  Location     Type
  6542 ;;		None
  6543 ;; Return value:  Size  Location     Type
  6544 ;;                  1    wreg      void 
  6545 ;; Registers used:
  6546 ;;		None
  6547 ;; Tracked objects:
  6548 ;;		On entry : 1F/0
  6549 ;;		On exit  : 1F/8
  6550 ;;		Unchanged: 0/0
  6551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6552 ;;      Params:         0       0       0       0       0       0
  6553 ;;      Locals:         0       0       0       0       0       0
  6554 ;;      Temps:          0       0       0       0       0       0
  6555 ;;      Totals:         0       0       0       0       0       0
  6556 ;;Total ram usage:        0 bytes
  6557 ;; Hardware stack levels used: 1
  6558 ;; Hardware stack levels required when called: 5
  6559 ;; This function calls:
  6560 ;;		Nothing
  6561 ;; This function is called by:
  6562 ;;		_main
  6563 ;; This function uses a non-reentrant model
  6564 ;;
  6565                           
  6566     0B5E                     _TMR4_StopTimer:	
  6567                           ;psect for function _TMR4_StopTimer
  6568                           
  6569                           
  6570                           ;mcc_generated_files/tmr4.c: 88:     T4CONbits.TMR4ON = 0;
  6571                           
  6572                           ;incstack = 0
  6573                           ; Regs used in _TMR4_StopTimer: []
  6574     0B5E  0028               	movlb	8	; select bank8
  6575     0B5F  1117               	bcf	23,2	;volatile
  6576     0B60  0008               	return
  6577     0B61                     __end_of_TMR4_StopTimer:
  6578                           
  6579                           	psect	text21
  6580     0B84                     __ptext21:	
  6581 ;; *************** function _TMR0_ReadTimer *****************
  6582 ;; Defined at:
  6583 ;;		line 80 in file "mcc_generated_files/tmr0.c"
  6584 ;; Parameters:    Size  Location     Type
  6585 ;;		None
  6586 ;; Auto vars:     Size  Location     Type
  6587 ;;  readVal         1    0[BANK1 ] unsigned char 
  6588 ;; Return value:  Size  Location     Type
  6589 ;;                  1    wreg      unsigned char 
  6590 ;; Registers used:
  6591 ;;		wreg
  6592 ;; Tracked objects:
  6593 ;;		On entry : 1D/0
  6594 ;;		On exit  : 1F/1
  6595 ;;		Unchanged: 0/0
  6596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6597 ;;      Params:         0       0       0       0       0       0
  6598 ;;      Locals:         0       0       1       0       0       0
  6599 ;;      Temps:          0       0       0       0       0       0
  6600 ;;      Totals:         0       0       1       0       0       0
  6601 ;;Total ram usage:        1 bytes
  6602 ;; Hardware stack levels used: 1
  6603 ;; Hardware stack levels required when called: 5
  6604 ;; This function calls:
  6605 ;;		Nothing
  6606 ;; This function is called by:
  6607 ;;		_main
  6608 ;; This function uses a non-reentrant model
  6609 ;;
  6610                           
  6611     0B84                     _TMR0_ReadTimer:	
  6612                           ;psect for function _TMR0_ReadTimer
  6613                           
  6614                           
  6615                           ;mcc_generated_files/tmr0.c: 82:     uint8_t readVal;;mcc_generated_files/tmr0.c: 84:   
      +                            readVal = TMR0;
  6616                           
  6617                           ;incstack = 0
  6618                           ; Regs used in _TMR0_ReadTimer: [wreg]
  6619     0B84  0020               	movlb	0	; select bank0
  6620     0B85  0815               	movf	21,w	;volatile
  6621     0B86  0021               	movlb	1	; select bank1
  6622     0B87  00CD               	movwf	TMR0_ReadTimer@readVal^(0+128)
  6623                           
  6624                           ;mcc_generated_files/tmr0.c: 86:     return readVal;
  6625     0B88  084D               	movf	TMR0_ReadTimer@readVal^(0+128),w
  6626     0B89  0008               	return
  6627     0B8A                     __end_of_TMR0_ReadTimer:
  6628                           
  6629                           	psect	text22
  6630     0D74                     __ptext22:	
  6631 ;; *************** function _SYSTEM_Initialize *****************
  6632 ;; Defined at:
  6633 ;;		line 50 in file "mcc_generated_files/mcc.c"
  6634 ;; Parameters:    Size  Location     Type
  6635 ;;		None
  6636 ;; Auto vars:     Size  Location     Type
  6637 ;;		None
  6638 ;; Return value:  Size  Location     Type
  6639 ;;                  1    wreg      void 
  6640 ;; Registers used:
  6641 ;;		wreg, status,2, status,0, pclath, cstack
  6642 ;; Tracked objects:
  6643 ;;		On entry : B1F/0
  6644 ;;		On exit  : 1F/1
  6645 ;;		Unchanged: 0/0
  6646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6647 ;;      Params:         0       0       0       0       0       0
  6648 ;;      Locals:         0       0       0       0       0       0
  6649 ;;      Temps:          0       0       0       0       0       0
  6650 ;;      Totals:         0       0       0       0       0       0
  6651 ;;Total ram usage:        0 bytes
  6652 ;; Hardware stack levels used: 1
  6653 ;; Hardware stack levels required when called: 7
  6654 ;; This function calls:
  6655 ;;		_ADC_Initialize
  6656 ;;		_CMP1_Initialize
  6657 ;;		_DAC_Initialize
  6658 ;;		_EPWM1_Initialize
  6659 ;;		_EUSART_Initialize
  6660 ;;		_FVR_Initialize
  6661 ;;		_OSCILLATOR_Initialize
  6662 ;;		_PIN_MANAGER_Initialize
  6663 ;;		_TMR0_Initialize
  6664 ;;		_TMR1_Initialize
  6665 ;;		_TMR2_Initialize
  6666 ;;		_TMR4_Initialize
  6667 ;;		_TMR6_Initialize
  6668 ;;		_WDT_Initialize
  6669 ;; This function is called by:
  6670 ;;		_main
  6671 ;; This function uses a non-reentrant model
  6672 ;;
  6673                           
  6674     0D74                     _SYSTEM_Initialize:	
  6675                           ;psect for function _SYSTEM_Initialize
  6676                           
  6677                           
  6678                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  6679                           
  6680                           ;incstack = 0
  6681                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6682     0D74  318C  2454  318D   	fcall	_PIN_MANAGER_Initialize
  6683                           
  6684                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  6685     0D77  318B  23A2  318D   	fcall	_OSCILLATOR_Initialize
  6686                           
  6687                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  6688     0D7A  318B  2368  318D   	fcall	_WDT_Initialize
  6689                           
  6690                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
  6691     0D7D  318B  2364  318D   	fcall	_FVR_Initialize
  6692                           
  6693                           ;mcc_generated_files/mcc.c: 57:     DAC_Initialize();
  6694     0D80  318B  2379  318D   	fcall	_DAC_Initialize
  6695                           
  6696                           ;mcc_generated_files/mcc.c: 58:     TMR4_Initialize();
  6697     0D83  318B  23F4  318D   	fcall	_TMR4_Initialize
  6698                           
  6699                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
  6700     0D86  318B  23D9  318D   	fcall	_TMR2_Initialize
  6701                           
  6702                           ;mcc_generated_files/mcc.c: 60:     TMR0_Initialize();
  6703     0D89  318B  23EA  318D   	fcall	_TMR0_Initialize
  6704                           
  6705                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
  6706     0D8C  318B  23FE  318D   	fcall	_TMR6_Initialize
  6707                           
  6708                           ;mcc_generated_files/mcc.c: 62:     CMP1_Initialize();
  6709     0D8F  318B  237E  318D   	fcall	_CMP1_Initialize
  6710                           
  6711                           ;mcc_generated_files/mcc.c: 63:     ADC_Initialize();
  6712     0D92  318B  23B1  318D   	fcall	_ADC_Initialize
  6713                           
  6714                           ;mcc_generated_files/mcc.c: 64:     EPWM1_Initialize();
  6715     0D95  318C  2413  318D   	fcall	_EPWM1_Initialize
  6716                           
  6717                           ;mcc_generated_files/mcc.c: 65:     TMR1_Initialize();
  6718     0D98  318C  249C  318D   	fcall	_TMR1_Initialize
  6719                           
  6720                           ;mcc_generated_files/mcc.c: 66:     EUSART_Initialize();
  6721     0D9B  318D  252A         	fcall	_EUSART_Initialize
  6722     0D9D  0008               	return
  6723     0D9E                     __end_of_SYSTEM_Initialize:
  6724                           
  6725                           	psect	text23
  6726     0B68                     __ptext23:	
  6727 ;; *************** function _WDT_Initialize *****************
  6728 ;; Defined at:
  6729 ;;		line 79 in file "mcc_generated_files/mcc.c"
  6730 ;; Parameters:    Size  Location     Type
  6731 ;;		None
  6732 ;; Auto vars:     Size  Location     Type
  6733 ;;		None
  6734 ;; Return value:  Size  Location     Type
  6735 ;;                  1    wreg      void 
  6736 ;; Registers used:
  6737 ;;		wreg
  6738 ;; Tracked objects:
  6739 ;;		On entry : B1F/2
  6740 ;;		On exit  : B1F/1
  6741 ;;		Unchanged: B00/0
  6742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6743 ;;      Params:         0       0       0       0       0       0
  6744 ;;      Locals:         0       0       0       0       0       0
  6745 ;;      Temps:          0       0       0       0       0       0
  6746 ;;      Totals:         0       0       0       0       0       0
  6747 ;;Total ram usage:        0 bytes
  6748 ;; Hardware stack levels used: 1
  6749 ;; Hardware stack levels required when called: 5
  6750 ;; This function calls:
  6751 ;;		Nothing
  6752 ;; This function is called by:
  6753 ;;		_SYSTEM_Initialize
  6754 ;; This function uses a non-reentrant model
  6755 ;;
  6756                           
  6757     0B68                     _WDT_Initialize:	
  6758                           ;psect for function _WDT_Initialize
  6759                           
  6760                           
  6761                           ;mcc_generated_files/mcc.c: 82:     WDTCON = 0x16;
  6762                           
  6763                           ;incstack = 0
  6764                           ; Regs used in _WDT_Initialize: [wreg]
  6765     0B68  3016               	movlw	22
  6766     0B69  0021               	movlb	1	; select bank1
  6767     0B6A  0097               	movwf	23	;volatile
  6768     0B6B  0008               	return
  6769     0B6C                     __end_of_WDT_Initialize:
  6770                           
  6771                           	psect	text24
  6772     0BFE                     __ptext24:	
  6773 ;; *************** function _TMR6_Initialize *****************
  6774 ;; Defined at:
  6775 ;;		line 62 in file "mcc_generated_files/tmr6.c"
  6776 ;; Parameters:    Size  Location     Type
  6777 ;;		None
  6778 ;; Auto vars:     Size  Location     Type
  6779 ;;		None
  6780 ;; Return value:  Size  Location     Type
  6781 ;;                  1    wreg      void 
  6782 ;; Registers used:
  6783 ;;		wreg, status,2
  6784 ;; Tracked objects:
  6785 ;;		On entry : B1F/0
  6786 ;;		On exit  : B1F/8
  6787 ;;		Unchanged: B00/0
  6788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6789 ;;      Params:         0       0       0       0       0       0
  6790 ;;      Locals:         0       0       0       0       0       0
  6791 ;;      Temps:          0       0       0       0       0       0
  6792 ;;      Totals:         0       0       0       0       0       0
  6793 ;;Total ram usage:        0 bytes
  6794 ;; Hardware stack levels used: 1
  6795 ;; Hardware stack levels required when called: 5
  6796 ;; This function calls:
  6797 ;;		Nothing
  6798 ;; This function is called by:
  6799 ;;		_SYSTEM_Initialize
  6800 ;; This function uses a non-reentrant model
  6801 ;;
  6802                           
  6803     0BFE                     _TMR6_Initialize:	
  6804                           ;psect for function _TMR6_Initialize
  6805                           
  6806                           
  6807                           ;mcc_generated_files/tmr6.c: 67:     PR6 = 0x4A;
  6808                           
  6809                           ;incstack = 0
  6810                           ; Regs used in _TMR6_Initialize: [wreg+status,2]
  6811     0BFE  304A               	movlw	74
  6812     0BFF  0028               	movlb	8	; select bank8
  6813     0C00  009D               	movwf	29	;volatile
  6814                           
  6815                           ;mcc_generated_files/tmr6.c: 70:     TMR6 = 0x00;
  6816     0C01  019C               	clrf	28	;volatile
  6817                           
  6818                           ;mcc_generated_files/tmr6.c: 73:     PIR3bits.TMR6IF = 0;
  6819     0C02  0020               	movlb	0	; select bank0
  6820     0C03  1193               	bcf	19,3	;volatile
  6821                           
  6822                           ;mcc_generated_files/tmr6.c: 76:     T6CON = 0x4F;
  6823     0C04  304F               	movlw	79
  6824     0C05  0028               	movlb	8	; select bank8
  6825     0C06  009E               	movwf	30	;volatile
  6826     0C07  0008               	return
  6827     0C08                     __end_of_TMR6_Initialize:
  6828                           
  6829                           	psect	text25
  6830     0BF4                     __ptext25:	
  6831 ;; *************** function _TMR4_Initialize *****************
  6832 ;; Defined at:
  6833 ;;		line 62 in file "mcc_generated_files/tmr4.c"
  6834 ;; Parameters:    Size  Location     Type
  6835 ;;		None
  6836 ;; Auto vars:     Size  Location     Type
  6837 ;;		None
  6838 ;; Return value:  Size  Location     Type
  6839 ;;                  1    wreg      void 
  6840 ;; Registers used:
  6841 ;;		wreg, status,2
  6842 ;; Tracked objects:
  6843 ;;		On entry : B1F/2
  6844 ;;		On exit  : B1F/8
  6845 ;;		Unchanged: B00/0
  6846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6847 ;;      Params:         0       0       0       0       0       0
  6848 ;;      Locals:         0       0       0       0       0       0
  6849 ;;      Temps:          0       0       0       0       0       0
  6850 ;;      Totals:         0       0       0       0       0       0
  6851 ;;Total ram usage:        0 bytes
  6852 ;; Hardware stack levels used: 1
  6853 ;; Hardware stack levels required when called: 5
  6854 ;; This function calls:
  6855 ;;		Nothing
  6856 ;; This function is called by:
  6857 ;;		_SYSTEM_Initialize
  6858 ;; This function uses a non-reentrant model
  6859 ;;
  6860                           
  6861     0BF4                     _TMR4_Initialize:	
  6862                           ;psect for function _TMR4_Initialize
  6863                           
  6864                           
  6865                           ;mcc_generated_files/tmr4.c: 67:     PR4 = 0xF9;
  6866                           
  6867                           ;incstack = 0
  6868                           ; Regs used in _TMR4_Initialize: [wreg+status,2]
  6869     0BF4  30F9               	movlw	249
  6870     0BF5  0028               	movlb	8	; select bank8
  6871     0BF6  0096               	movwf	22	;volatile
  6872                           
  6873                           ;mcc_generated_files/tmr4.c: 70:     TMR4 = 0x00;
  6874     0BF7  0195               	clrf	21	;volatile
  6875                           
  6876                           ;mcc_generated_files/tmr4.c: 73:     PIR3bits.TMR4IF = 0;
  6877     0BF8  0020               	movlb	0	; select bank0
  6878     0BF9  1093               	bcf	19,1	;volatile
  6879                           
  6880                           ;mcc_generated_files/tmr4.c: 76:     T4CON = 0x4F;
  6881     0BFA  304F               	movlw	79
  6882     0BFB  0028               	movlb	8	; select bank8
  6883     0BFC  0097               	movwf	23	;volatile
  6884     0BFD  0008               	return
  6885     0BFE                     __end_of_TMR4_Initialize:
  6886                           
  6887                           	psect	text26
  6888     0BD9                     __ptext26:	
  6889 ;; *************** function _TMR2_Initialize *****************
  6890 ;; Defined at:
  6891 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  6892 ;; Parameters:    Size  Location     Type
  6893 ;;		None
  6894 ;; Auto vars:     Size  Location     Type
  6895 ;;		None
  6896 ;; Return value:  Size  Location     Type
  6897 ;;                  1    wreg      void 
  6898 ;; Registers used:
  6899 ;;		wreg, status,2
  6900 ;; Tracked objects:
  6901 ;;		On entry : B1F/8
  6902 ;;		On exit  : B1F/0
  6903 ;;		Unchanged: B00/0
  6904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6905 ;;      Params:         0       0       0       0       0       0
  6906 ;;      Locals:         0       0       0       0       0       0
  6907 ;;      Temps:          0       0       0       0       0       0
  6908 ;;      Totals:         0       0       0       0       0       0
  6909 ;;Total ram usage:        0 bytes
  6910 ;; Hardware stack levels used: 1
  6911 ;; Hardware stack levels required when called: 5
  6912 ;; This function calls:
  6913 ;;		Nothing
  6914 ;; This function is called by:
  6915 ;;		_SYSTEM_Initialize
  6916 ;; This function uses a non-reentrant model
  6917 ;;
  6918                           
  6919     0BD9                     _TMR2_Initialize:	
  6920                           ;psect for function _TMR2_Initialize
  6921                           
  6922                           
  6923                           ;mcc_generated_files/tmr2.c: 67:     PR2 = 0xFF;
  6924                           
  6925                           ;incstack = 0
  6926                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  6927     0BD9  30FF               	movlw	255
  6928     0BDA  0020               	movlb	0	; select bank0
  6929     0BDB  009B               	movwf	27	;volatile
  6930                           
  6931                           ;mcc_generated_files/tmr2.c: 70:     TMR2 = 0x00;
  6932     0BDC  019A               	clrf	26	;volatile
  6933                           
  6934                           ;mcc_generated_files/tmr2.c: 73:     PIR1bits.TMR2IF = 0;
  6935     0BDD  1091               	bcf	17,1	;volatile
  6936                           
  6937                           ;mcc_generated_files/tmr2.c: 76:     T2CON = 0x04;
  6938     0BDE  3004               	movlw	4
  6939     0BDF  009C               	movwf	28	;volatile
  6940     0BE0  0008               	return
  6941     0BE1                     __end_of_TMR2_Initialize:
  6942                           
  6943                           	psect	text27
  6944     0C9C                     __ptext27:	
  6945 ;; *************** function _TMR1_Initialize *****************
  6946 ;; Defined at:
  6947 ;;		line 65 in file "mcc_generated_files/tmr1.c"
  6948 ;; Parameters:    Size  Location     Type
  6949 ;;		None
  6950 ;; Auto vars:     Size  Location     Type
  6951 ;;		None
  6952 ;; Return value:  Size  Location     Type
  6953 ;;                  1    wreg      void 
  6954 ;; Registers used:
  6955 ;;		wreg, status,2, status,0, pclath, cstack
  6956 ;; Tracked objects:
  6957 ;;		On entry : 1F/5
  6958 ;;		On exit  : 1F/0
  6959 ;;		Unchanged: 0/0
  6960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6961 ;;      Params:         0       0       0       0       0       0
  6962 ;;      Locals:         0       0       0       0       0       0
  6963 ;;      Temps:          0       0       0       0       0       0
  6964 ;;      Totals:         0       0       0       0       0       0
  6965 ;;Total ram usage:        0 bytes
  6966 ;; Hardware stack levels used: 1
  6967 ;; Hardware stack levels required when called: 6
  6968 ;; This function calls:
  6969 ;;		_TMR1_SetGateInterruptHandler
  6970 ;; This function is called by:
  6971 ;;		_SYSTEM_Initialize
  6972 ;; This function uses a non-reentrant model
  6973 ;;
  6974                           
  6975     0C9C                     _TMR1_Initialize:	
  6976                           ;psect for function _TMR1_Initialize
  6977                           
  6978                           
  6979                           ;mcc_generated_files/tmr1.c: 70:     T1GCON = 0xC0;
  6980                           
  6981                           ;incstack = 0
  6982                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6983     0C9C  30C0               	movlw	192
  6984     0C9D  0020               	movlb	0	; select bank0
  6985     0C9E  0099               	movwf	25	;volatile
  6986                           
  6987                           ;mcc_generated_files/tmr1.c: 73:     TMR1H = 0x00;
  6988     0C9F  0197               	clrf	23	;volatile
  6989                           
  6990                           ;mcc_generated_files/tmr1.c: 76:     TMR1L = 0x00;
  6991     0CA0  0196               	clrf	22	;volatile
  6992                           
  6993                           ;mcc_generated_files/tmr1.c: 79:     PIR1bits.TMR1IF = 0;
  6994     0CA1  1011               	bcf	17,0	;volatile
  6995                           
  6996                           ;mcc_generated_files/tmr1.c: 82:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  6997     0CA2  0817               	movf	23,w	;volatile
  6998     0CA3  0021               	movlb	1	; select bank1
  6999     0CA4  00C4               	movwf	(_timer1ReloadVal+1)^(0+128)	;volatile
  7000     0CA5  0020               	movlb	0	; select bank0
  7001     0CA6  0816               	movf	22,w	;volatile
  7002     0CA7  0021               	movlb	1	; select bank1
  7003     0CA8  00C3               	movwf	_timer1ReloadVal^(0+128)	;volatile
  7004                           
  7005                           ;mcc_generated_files/tmr1.c: 85:     PIR1bits.TMR1GIF = 0;
  7006     0CA9  0020               	movlb	0	; select bank0
  7007     0CAA  1391               	bcf	17,7	;volatile
  7008                           
  7009                           ;mcc_generated_files/tmr1.c: 88:     PIE1bits.TMR1GIE = 1;
  7010     0CAB  0021               	movlb	1	; select bank1
  7011     0CAC  1791               	bsf	17,7	;volatile
  7012                           
  7013                           ;mcc_generated_files/tmr1.c: 91:     TMR1_SetGateInterruptHandler(TMR1_DefaultGateInterr
      +                          uptHandler);
  7014     0CAD  3003               	movlw	low _TMR1_DefaultGateInterruptHandler
  7015     0CAE  00CD               	movwf	TMR1_SetGateInterruptHandler@InterruptHandler^(0+128)
  7016     0CAF  3000               	movlw	high _TMR1_DefaultGateInterruptHandler
  7017     0CB0  00CE               	movwf	(TMR1_SetGateInterruptHandler@InterruptHandler^(0+128)+1)
  7018     0CB1  318B  23D1         	fcall	_TMR1_SetGateInterruptHandler
  7019                           
  7020                           ;mcc_generated_files/tmr1.c: 94:     T1CON = 0x01;
  7021     0CB3  3001               	movlw	1
  7022     0CB4  0098               	movwf	24	;volatile
  7023     0CB5  0008               	return
  7024     0CB6                     __end_of_TMR1_Initialize:
  7025                           
  7026                           	psect	text28
  7027     0BD1                     __ptext28:	
  7028 ;; *************** function _TMR1_SetGateInterruptHandler *****************
  7029 ;; Defined at:
  7030 ;;		line 177 in file "mcc_generated_files/tmr1.c"
  7031 ;; Parameters:    Size  Location     Type
  7032 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  7033 ;;		 -> mede_height(1), TMR1_DefaultGateInterruptHandler(1), 
  7034 ;; Auto vars:     Size  Location     Type
  7035 ;;		None
  7036 ;; Return value:  Size  Location     Type
  7037 ;;                  1    wreg      void 
  7038 ;; Registers used:
  7039 ;;		wreg
  7040 ;; Tracked objects:
  7041 ;;		On entry : 1F/1
  7042 ;;		On exit  : 1F/0
  7043 ;;		Unchanged: 0/0
  7044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7045 ;;      Params:         0       0       2       0       0       0
  7046 ;;      Locals:         0       0       0       0       0       0
  7047 ;;      Temps:          0       0       0       0       0       0
  7048 ;;      Totals:         0       0       2       0       0       0
  7049 ;;Total ram usage:        2 bytes
  7050 ;; Hardware stack levels used: 1
  7051 ;; Hardware stack levels required when called: 5
  7052 ;; This function calls:
  7053 ;;		Nothing
  7054 ;; This function is called by:
  7055 ;;		_TMR1_Initialize
  7056 ;;		_main
  7057 ;; This function uses a non-reentrant model
  7058 ;;
  7059                           
  7060     0BD1                     _TMR1_SetGateInterruptHandler:	
  7061                           ;psect for function _TMR1_SetGateInterruptHandler
  7062                           
  7063                           
  7064                           ;mcc_generated_files/tmr1.c: 178:     TMR1_GateInterruptHandler = InterruptHandler;
  7065                           
  7066                           ;incstack = 0
  7067                           ; Regs used in _TMR1_SetGateInterruptHandler: [wreg]
  7068     0BD1  084E               	movf	(TMR1_SetGateInterruptHandler@InterruptHandler+1)^(0+128),w
  7069     0BD2  0020               	movlb	0	; select bank0
  7070     0BD3  00EF               	movwf	_TMR1_GateInterruptHandler+1
  7071     0BD4  0021               	movlb	1	; select bank1
  7072     0BD5  084D               	movf	TMR1_SetGateInterruptHandler@InterruptHandler^(0+128),w
  7073     0BD6  0020               	movlb	0	; select bank0
  7074     0BD7  00EE               	movwf	_TMR1_GateInterruptHandler
  7075     0BD8  0008               	return
  7076     0BD9                     __end_of_TMR1_SetGateInterruptHandler:
  7077                           
  7078                           	psect	text29
  7079     0BEA                     __ptext29:	
  7080 ;; *************** function _TMR0_Initialize *****************
  7081 ;; Defined at:
  7082 ;;		line 63 in file "mcc_generated_files/tmr0.c"
  7083 ;; Parameters:    Size  Location     Type
  7084 ;;		None
  7085 ;; Auto vars:     Size  Location     Type
  7086 ;;		None
  7087 ;; Return value:  Size  Location     Type
  7088 ;;                  1    wreg      void 
  7089 ;; Registers used:
  7090 ;;		wreg, status,2
  7091 ;; Tracked objects:
  7092 ;;		On entry : B1F/0
  7093 ;;		On exit  : B1F/0
  7094 ;;		Unchanged: B00/0
  7095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7096 ;;      Params:         0       0       0       0       0       0
  7097 ;;      Locals:         0       0       0       0       0       0
  7098 ;;      Temps:          0       0       0       0       0       0
  7099 ;;      Totals:         0       0       0       0       0       0
  7100 ;;Total ram usage:        0 bytes
  7101 ;; Hardware stack levels used: 1
  7102 ;; Hardware stack levels required when called: 5
  7103 ;; This function calls:
  7104 ;;		Nothing
  7105 ;; This function is called by:
  7106 ;;		_SYSTEM_Initialize
  7107 ;; This function uses a non-reentrant model
  7108 ;;
  7109                           
  7110     0BEA                     _TMR0_Initialize:	
  7111                           ;psect for function _TMR0_Initialize
  7112                           
  7113                           
  7114                           ;mcc_generated_files/tmr0.c: 68:     OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | (0xD7 
      +                          & 0x3F));
  7115                           
  7116                           ;incstack = 0
  7117                           ; Regs used in _TMR0_Initialize: [wreg+status,2]
  7118     0BEA  0021               	movlb	1	; select bank1
  7119     0BEB  0815               	movf	21,w	;volatile
  7120     0BEC  39C0               	andlw	192
  7121     0BED  3817               	iorlw	23
  7122     0BEE  0095               	movwf	21	;volatile
  7123                           
  7124                           ;mcc_generated_files/tmr0.c: 71:     TMR0 = 0x00;
  7125     0BEF  0020               	movlb	0	; select bank0
  7126     0BF0  0195               	clrf	21	;volatile
  7127                           
  7128                           ;mcc_generated_files/tmr0.c: 74:     timer0ReloadVal= 0;
  7129     0BF1  01E9               	clrf	_timer0ReloadVal	;volatile
  7130                           
  7131                           ;mcc_generated_files/tmr0.c: 77:     INTCONbits.TMR0IF = 0;
  7132     0BF2  110B               	bcf	11,2	;volatile
  7133     0BF3  0008               	return
  7134     0BF4                     __end_of_TMR0_Initialize:
  7135                           
  7136                           	psect	text30
  7137     0C54                     __ptext30:	
  7138 ;; *************** function _PIN_MANAGER_Initialize *****************
  7139 ;; Defined at:
  7140 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  7141 ;; Parameters:    Size  Location     Type
  7142 ;;		None
  7143 ;; Auto vars:     Size  Location     Type
  7144 ;;		None
  7145 ;; Return value:  Size  Location     Type
  7146 ;;                  1    wreg      void 
  7147 ;; Registers used:
  7148 ;;		wreg, status,2
  7149 ;; Tracked objects:
  7150 ;;		On entry : B1F/0
  7151 ;;		On exit  : B1F/2
  7152 ;;		Unchanged: B00/0
  7153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7154 ;;      Params:         0       0       0       0       0       0
  7155 ;;      Locals:         0       0       0       0       0       0
  7156 ;;      Temps:          0       0       0       0       0       0
  7157 ;;      Totals:         0       0       0       0       0       0
  7158 ;;Total ram usage:        0 bytes
  7159 ;; Hardware stack levels used: 1
  7160 ;; Hardware stack levels required when called: 5
  7161 ;; This function calls:
  7162 ;;		Nothing
  7163 ;; This function is called by:
  7164 ;;		_SYSTEM_Initialize
  7165 ;; This function uses a non-reentrant model
  7166 ;;
  7167                           
  7168     0C54                     _PIN_MANAGER_Initialize:	
  7169                           ;psect for function _PIN_MANAGER_Initialize
  7170                           
  7171                           
  7172                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  7173                           
  7174                           ;incstack = 0
  7175                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  7176     0C54  0022               	movlb	2	; select bank2
  7177     0C55  018C               	clrf	12	;volatile
  7178                           
  7179                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  7180     0C56  018D               	clrf	13	;volatile
  7181                           
  7182                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0x21;
  7183     0C57  3021               	movlw	33
  7184     0C58  0021               	movlb	1	; select bank1
  7185     0C59  008C               	movwf	12	;volatile
  7186                           
  7187                           ;mcc_generated_files/pin_manager.c: 67:     TRISB = 0xF7;
  7188     0C5A  30F7               	movlw	247
  7189     0C5B  008D               	movwf	13	;volatile
  7190                           
  7191                           ;mcc_generated_files/pin_manager.c: 72:     ANSELB = 0xF0;
  7192     0C5C  30F0               	movlw	240
  7193     0C5D  0023               	movlb	3	; select bank3
  7194     0C5E  008D               	movwf	13	;volatile
  7195                           
  7196                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x01;
  7197     0C5F  3001               	movlw	1
  7198     0C60  008C               	movwf	12	;volatile
  7199                           
  7200                           ;mcc_generated_files/pin_manager.c: 78:     WPUB = 0x00;
  7201     0C61  0024               	movlb	4	; select bank4
  7202     0C62  018D               	clrf	13	;volatile
  7203                           
  7204                           ;mcc_generated_files/pin_manager.c: 79:     WPUA = 0x00;
  7205     0C63  018C               	clrf	12	;volatile
  7206                           
  7207                           ;mcc_generated_files/pin_manager.c: 80:     OPTION_REGbits.nWPUEN = 1;
  7208     0C64  0021               	movlb	1	; select bank1
  7209     0C65  1795               	bsf	21,7	;volatile
  7210                           
  7211                           ;mcc_generated_files/pin_manager.c: 86:     APFCON0 = 0x00;
  7212     0C66  0022               	movlb	2	; select bank2
  7213     0C67  019D               	clrf	29	;volatile
  7214                           
  7215                           ;mcc_generated_files/pin_manager.c: 87:     APFCON1 = 0x00;
  7216     0C68  019E               	clrf	30	;volatile
  7217                           
  7218                           ;mcc_generated_files/pin_manager.c: 94:     INTCONbits.IOCIE = 1;
  7219     0C69  158B               	bsf	11,3	;volatile
  7220     0C6A  0008               	return
  7221     0C6B                     __end_of_PIN_MANAGER_Initialize:
  7222                           
  7223                           	psect	text31
  7224     0BA2                     __ptext31:	
  7225 ;; *************** function _OSCILLATOR_Initialize *****************
  7226 ;; Defined at:
  7227 ;;		line 69 in file "mcc_generated_files/mcc.c"
  7228 ;; Parameters:    Size  Location     Type
  7229 ;;		None
  7230 ;; Auto vars:     Size  Location     Type
  7231 ;;		None
  7232 ;; Return value:  Size  Location     Type
  7233 ;;                  1    wreg      void 
  7234 ;; Registers used:
  7235 ;;		wreg, status,2
  7236 ;; Tracked objects:
  7237 ;;		On entry : B1F/2
  7238 ;;		On exit  : B1F/2
  7239 ;;		Unchanged: B00/0
  7240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7241 ;;      Params:         0       0       0       0       0       0
  7242 ;;      Locals:         0       0       0       0       0       0
  7243 ;;      Temps:          0       0       0       0       0       0
  7244 ;;      Totals:         0       0       0       0       0       0
  7245 ;;Total ram usage:        0 bytes
  7246 ;; Hardware stack levels used: 1
  7247 ;; Hardware stack levels required when called: 5
  7248 ;; This function calls:
  7249 ;;		Nothing
  7250 ;; This function is called by:
  7251 ;;		_SYSTEM_Initialize
  7252 ;; This function uses a non-reentrant model
  7253 ;;
  7254                           
  7255     0BA2                     _OSCILLATOR_Initialize:	
  7256                           ;psect for function _OSCILLATOR_Initialize
  7257                           
  7258                           
  7259                           ;mcc_generated_files/mcc.c: 72:     OSCCON = 0x78;
  7260                           
  7261                           ;incstack = 0
  7262                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  7263     0BA2  3078               	movlw	120
  7264     0BA3  0021               	movlb	1	; select bank1
  7265     0BA4  0099               	movwf	25	;volatile
  7266                           
  7267                           ;mcc_generated_files/mcc.c: 74:     OSCTUNE = 0x00;
  7268     0BA5  0198               	clrf	24	;volatile
  7269                           
  7270                           ;mcc_generated_files/mcc.c: 76:     BORCON = 0x00;
  7271     0BA6  0022               	movlb	2	; select bank2
  7272     0BA7  0196               	clrf	22	;volatile
  7273     0BA8  0008               	return
  7274     0BA9                     __end_of_OSCILLATOR_Initialize:
  7275                           
  7276                           	psect	text32
  7277     0B64                     __ptext32:	
  7278 ;; *************** function _FVR_Initialize *****************
  7279 ;; Defined at:
  7280 ;;		line 58 in file "mcc_generated_files/fvr.c"
  7281 ;; Parameters:    Size  Location     Type
  7282 ;;		None
  7283 ;; Auto vars:     Size  Location     Type
  7284 ;;		None
  7285 ;; Return value:  Size  Location     Type
  7286 ;;                  1    wreg      void 
  7287 ;; Registers used:
  7288 ;;		wreg
  7289 ;; Tracked objects:
  7290 ;;		On entry : B1F/1
  7291 ;;		On exit  : B1F/2
  7292 ;;		Unchanged: B00/0
  7293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7294 ;;      Params:         0       0       0       0       0       0
  7295 ;;      Locals:         0       0       0       0       0       0
  7296 ;;      Temps:          0       0       0       0       0       0
  7297 ;;      Totals:         0       0       0       0       0       0
  7298 ;;Total ram usage:        0 bytes
  7299 ;; Hardware stack levels used: 1
  7300 ;; Hardware stack levels required when called: 5
  7301 ;; This function calls:
  7302 ;;		Nothing
  7303 ;; This function is called by:
  7304 ;;		_SYSTEM_Initialize
  7305 ;; This function uses a non-reentrant model
  7306 ;;
  7307                           
  7308     0B64                     _FVR_Initialize:	
  7309                           ;psect for function _FVR_Initialize
  7310                           
  7311                           
  7312                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0x85;
  7313                           
  7314                           ;incstack = 0
  7315                           ; Regs used in _FVR_Initialize: [wreg]
  7316     0B64  3085               	movlw	133
  7317     0B65  0022               	movlb	2	; select bank2
  7318     0B66  0097               	movwf	23	;volatile
  7319     0B67  0008               	return
  7320     0B68                     __end_of_FVR_Initialize:
  7321                           
  7322                           	psect	text33
  7323     0D2A                     __ptext33:	
  7324 ;; *************** function _EUSART_Initialize *****************
  7325 ;; Defined at:
  7326 ;;		line 66 in file "mcc_generated_files/eusart.c"
  7327 ;; Parameters:    Size  Location     Type
  7328 ;;		None
  7329 ;; Auto vars:     Size  Location     Type
  7330 ;;		None
  7331 ;; Return value:  Size  Location     Type
  7332 ;;                  1    wreg      void 
  7333 ;; Registers used:
  7334 ;;		wreg, status,2, status,0, pclath, cstack
  7335 ;; Tracked objects:
  7336 ;;		On entry : 1F/0
  7337 ;;		On exit  : 1F/1
  7338 ;;		Unchanged: 0/0
  7339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7340 ;;      Params:         0       0       0       0       0       0
  7341 ;;      Locals:         0       0       0       0       0       0
  7342 ;;      Temps:          0       0       0       0       0       0
  7343 ;;      Totals:         0       0       0       0       0       0
  7344 ;;Total ram usage:        0 bytes
  7345 ;; Hardware stack levels used: 1
  7346 ;; Hardware stack levels required when called: 6
  7347 ;; This function calls:
  7348 ;;		_EUSART_SetErrorHandler
  7349 ;;		_EUSART_SetFramingErrorHandler
  7350 ;;		_EUSART_SetOverrunErrorHandler
  7351 ;; This function is called by:
  7352 ;;		_SYSTEM_Initialize
  7353 ;; This function uses a non-reentrant model
  7354 ;;
  7355                           
  7356     0D2A                     _EUSART_Initialize:	
  7357                           ;psect for function _EUSART_Initialize
  7358                           
  7359                           
  7360                           ;mcc_generated_files/eusart.c: 71:     BAUDCON = 0x08;
  7361                           
  7362                           ;incstack = 0
  7363                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7364     0D2A  3008               	movlw	8
  7365     0D2B  0023               	movlb	3	; select bank3
  7366     0D2C  009F               	movwf	31	;volatile
  7367                           
  7368                           ;mcc_generated_files/eusart.c: 74:     RCSTA = 0x90;
  7369     0D2D  3090               	movlw	144
  7370     0D2E  009D               	movwf	29	;volatile
  7371                           
  7372                           ;mcc_generated_files/eusart.c: 77:     TXSTA = 0x24;
  7373     0D2F  3024               	movlw	36
  7374     0D30  009E               	movwf	30	;volatile
  7375                           
  7376                           ;mcc_generated_files/eusart.c: 80:     SPBRGL = 0x22;
  7377     0D31  3022               	movlw	34
  7378     0D32  009B               	movwf	27	;volatile
  7379                           
  7380                           ;mcc_generated_files/eusart.c: 83:     SPBRGH = 0x00;
  7381     0D33  019C               	clrf	28	;volatile
  7382                           
  7383                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  7384     0D34  3000               	movlw	0
  7385     0D35  0021               	movlb	1	; select bank1
  7386     0D36  00CD               	movwf	EUSART_SetFramingErrorHandler@interruptHandler^(0+128)
  7387     0D37  3000               	movlw	0
  7388     0D38  00CE               	movwf	(EUSART_SetFramingErrorHandler@interruptHandler^(0+128)+1)
  7389     0D39  318B  23C1  318D   	fcall	_EUSART_SetFramingErrorHandler
  7390                           
  7391                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  7392     0D3C  3000               	movlw	0
  7393     0D3D  0021               	movlb	1	; select bank1
  7394     0D3E  00CD               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler^(0+128)
  7395     0D3F  3000               	movlw	0
  7396     0D40  00CE               	movwf	(EUSART_SetOverrunErrorHandler@interruptHandler^(0+128)+1)
  7397     0D41  318B  23C9  318D   	fcall	_EUSART_SetOverrunErrorHandler
  7398                           
  7399                           ;mcc_generated_files/eusart.c: 88:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  7400     0D44  3000               	movlw	0
  7401     0D45  0021               	movlb	1	; select bank1
  7402     0D46  00CD               	movwf	EUSART_SetErrorHandler@interruptHandler^(0+128)
  7403     0D47  3000               	movlw	0
  7404     0D48  00CE               	movwf	(EUSART_SetErrorHandler@interruptHandler^(0+128)+1)
  7405     0D49  318B  23B9         	fcall	_EUSART_SetErrorHandler
  7406                           
  7407                           ;mcc_generated_files/eusart.c: 90:     eusartRxLastError.status = 0;
  7408     0D4B  0021               	movlb	1	; select bank1
  7409     0D4C  01CC               	clrf	_eusartRxLastError^(0+128)	;volatile
  7410     0D4D  0008               	return
  7411     0D4E                     __end_of_EUSART_Initialize:
  7412                           
  7413                           	psect	text34
  7414     0BC9                     __ptext34:	
  7415 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  7416 ;; Defined at:
  7417 ;;		line 161 in file "mcc_generated_files/eusart.c"
  7418 ;; Parameters:    Size  Location     Type
  7419 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  7420 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  7421 ;; Auto vars:     Size  Location     Type
  7422 ;;		None
  7423 ;; Return value:  Size  Location     Type
  7424 ;;                  1    wreg      void 
  7425 ;; Registers used:
  7426 ;;		wreg
  7427 ;; Tracked objects:
  7428 ;;		On entry : 1F/1
  7429 ;;		On exit  : 1F/2
  7430 ;;		Unchanged: 0/0
  7431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7432 ;;      Params:         0       0       2       0       0       0
  7433 ;;      Locals:         0       0       0       0       0       0
  7434 ;;      Temps:          0       0       0       0       0       0
  7435 ;;      Totals:         0       0       2       0       0       0
  7436 ;;Total ram usage:        2 bytes
  7437 ;; Hardware stack levels used: 1
  7438 ;; Hardware stack levels required when called: 5
  7439 ;; This function calls:
  7440 ;;		Nothing
  7441 ;; This function is called by:
  7442 ;;		_EUSART_Initialize
  7443 ;; This function uses a non-reentrant model
  7444 ;;
  7445                           
  7446     0BC9                     _EUSART_SetOverrunErrorHandler:	
  7447                           ;psect for function _EUSART_SetOverrunErrorHandler
  7448                           
  7449                           
  7450                           ;mcc_generated_files/eusart.c: 162:     EUSART_OverrunErrorHandler = interruptHandler;
  7451                           
  7452                           ;incstack = 0
  7453                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  7454     0BC9  084E               	movf	(EUSART_SetOverrunErrorHandler@interruptHandler+1)^(0+128),w
  7455     0BCA  0022               	movlb	2	; select bank2
  7456     0BCB  00B5               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+256)
  7457     0BCC  0021               	movlb	1	; select bank1
  7458     0BCD  084D               	movf	EUSART_SetOverrunErrorHandler@interruptHandler^(0+128),w
  7459     0BCE  0022               	movlb	2	; select bank2
  7460     0BCF  00B4               	movwf	_EUSART_OverrunErrorHandler^(0+256)
  7461     0BD0  0008               	return
  7462     0BD1                     __end_of_EUSART_SetOverrunErrorHandler:
  7463                           
  7464                           	psect	text35
  7465     0BC1                     __ptext35:	
  7466 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  7467 ;; Defined at:
  7468 ;;		line 157 in file "mcc_generated_files/eusart.c"
  7469 ;; Parameters:    Size  Location     Type
  7470 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  7471 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  7472 ;; Auto vars:     Size  Location     Type
  7473 ;;		None
  7474 ;; Return value:  Size  Location     Type
  7475 ;;                  1    wreg      void 
  7476 ;; Registers used:
  7477 ;;		wreg
  7478 ;; Tracked objects:
  7479 ;;		On entry : 1F/1
  7480 ;;		On exit  : 1F/2
  7481 ;;		Unchanged: 0/0
  7482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7483 ;;      Params:         0       0       2       0       0       0
  7484 ;;      Locals:         0       0       0       0       0       0
  7485 ;;      Temps:          0       0       0       0       0       0
  7486 ;;      Totals:         0       0       2       0       0       0
  7487 ;;Total ram usage:        2 bytes
  7488 ;; Hardware stack levels used: 1
  7489 ;; Hardware stack levels required when called: 5
  7490 ;; This function calls:
  7491 ;;		Nothing
  7492 ;; This function is called by:
  7493 ;;		_EUSART_Initialize
  7494 ;; This function uses a non-reentrant model
  7495 ;;
  7496                           
  7497     0BC1                     _EUSART_SetFramingErrorHandler:	
  7498                           ;psect for function _EUSART_SetFramingErrorHandler
  7499                           
  7500                           
  7501                           ;mcc_generated_files/eusart.c: 158:     EUSART_FramingErrorHandler = interruptHandler;
  7502                           
  7503                           ;incstack = 0
  7504                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  7505     0BC1  084E               	movf	(EUSART_SetFramingErrorHandler@interruptHandler+1)^(0+128),w
  7506     0BC2  0022               	movlb	2	; select bank2
  7507     0BC3  00B7               	movwf	(_EUSART_FramingErrorHandler+1)^(0+256)
  7508     0BC4  0021               	movlb	1	; select bank1
  7509     0BC5  084D               	movf	EUSART_SetFramingErrorHandler@interruptHandler^(0+128),w
  7510     0BC6  0022               	movlb	2	; select bank2
  7511     0BC7  00B6               	movwf	_EUSART_FramingErrorHandler^(0+256)
  7512     0BC8  0008               	return
  7513     0BC9                     __end_of_EUSART_SetFramingErrorHandler:
  7514                           
  7515                           	psect	text36
  7516     0BB9                     __ptext36:	
  7517 ;; *************** function _EUSART_SetErrorHandler *****************
  7518 ;; Defined at:
  7519 ;;		line 165 in file "mcc_generated_files/eusart.c"
  7520 ;; Parameters:    Size  Location     Type
  7521 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  7522 ;;		 -> EUSART_DefaultErrorHandler(1), 
  7523 ;; Auto vars:     Size  Location     Type
  7524 ;;		None
  7525 ;; Return value:  Size  Location     Type
  7526 ;;                  1    wreg      void 
  7527 ;; Registers used:
  7528 ;;		wreg
  7529 ;; Tracked objects:
  7530 ;;		On entry : 1F/1
  7531 ;;		On exit  : 1F/2
  7532 ;;		Unchanged: 0/0
  7533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7534 ;;      Params:         0       0       2       0       0       0
  7535 ;;      Locals:         0       0       0       0       0       0
  7536 ;;      Temps:          0       0       0       0       0       0
  7537 ;;      Totals:         0       0       2       0       0       0
  7538 ;;Total ram usage:        2 bytes
  7539 ;; Hardware stack levels used: 1
  7540 ;; Hardware stack levels required when called: 5
  7541 ;; This function calls:
  7542 ;;		Nothing
  7543 ;; This function is called by:
  7544 ;;		_EUSART_Initialize
  7545 ;; This function uses a non-reentrant model
  7546 ;;
  7547                           
  7548     0BB9                     _EUSART_SetErrorHandler:	
  7549                           ;psect for function _EUSART_SetErrorHandler
  7550                           
  7551                           
  7552                           ;mcc_generated_files/eusart.c: 166:     EUSART_ErrorHandler = interruptHandler;
  7553                           
  7554                           ;incstack = 0
  7555                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  7556     0BB9  084E               	movf	(EUSART_SetErrorHandler@interruptHandler+1)^(0+128),w
  7557     0BBA  0022               	movlb	2	; select bank2
  7558     0BBB  00B3               	movwf	(_EUSART_ErrorHandler+1)^(0+256)
  7559     0BBC  0021               	movlb	1	; select bank1
  7560     0BBD  084D               	movf	EUSART_SetErrorHandler@interruptHandler^(0+128),w
  7561     0BBE  0022               	movlb	2	; select bank2
  7562     0BBF  00B2               	movwf	_EUSART_ErrorHandler^(0+256)
  7563     0BC0  0008               	return
  7564     0BC1                     __end_of_EUSART_SetErrorHandler:
  7565                           
  7566                           	psect	text37
  7567     0C13                     __ptext37:	
  7568 ;; *************** function _EPWM1_Initialize *****************
  7569 ;; Defined at:
  7570 ;;		line 64 in file "mcc_generated_files/epwm1.c"
  7571 ;; Parameters:    Size  Location     Type
  7572 ;;		None
  7573 ;; Auto vars:     Size  Location     Type
  7574 ;;		None
  7575 ;; Return value:  Size  Location     Type
  7576 ;;                  1    wreg      void 
  7577 ;; Registers used:
  7578 ;;		wreg, status,2, status,0
  7579 ;; Tracked objects:
  7580 ;;		On entry : 1F/1
  7581 ;;		On exit  : 1F/5
  7582 ;;		Unchanged: 0/0
  7583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7584 ;;      Params:         0       0       0       0       0       0
  7585 ;;      Locals:         0       0       0       0       0       0
  7586 ;;      Temps:          0       0       0       0       0       0
  7587 ;;      Totals:         0       0       0       0       0       0
  7588 ;;Total ram usage:        0 bytes
  7589 ;; Hardware stack levels used: 1
  7590 ;; Hardware stack levels required when called: 5
  7591 ;; This function calls:
  7592 ;;		Nothing
  7593 ;; This function is called by:
  7594 ;;		_SYSTEM_Initialize
  7595 ;; This function uses a non-reentrant model
  7596 ;;
  7597                           
  7598     0C13                     _EPWM1_Initialize:	
  7599                           ;psect for function _EPWM1_Initialize
  7600                           
  7601                           
  7602                           ;mcc_generated_files/epwm1.c: 69:  CCP1CON = 0x3C;
  7603                           
  7604                           ;incstack = 0
  7605                           ; Regs used in _EPWM1_Initialize: [wreg+status,2+status,0]
  7606     0C13  303C               	movlw	60
  7607     0C14  0025               	movlb	5	; select bank5
  7608     0C15  0093               	movwf	19	;volatile
  7609                           
  7610                           ;mcc_generated_files/epwm1.c: 72:  ECCP1AS = 0x00;
  7611     0C16  0195               	clrf	21	;volatile
  7612                           
  7613                           ;mcc_generated_files/epwm1.c: 75:  PWM1CON = 0x80;
  7614     0C17  3080               	movlw	128
  7615     0C18  0094               	movwf	20	;volatile
  7616                           
  7617                           ;mcc_generated_files/epwm1.c: 78:  PSTR1CON = 0x01;
  7618     0C19  3001               	movlw	1
  7619     0C1A  0096               	movwf	22	;volatile
  7620                           
  7621                           ;mcc_generated_files/epwm1.c: 81:  CCPR1H = 0x00;
  7622     0C1B  0192               	clrf	18	;volatile
  7623                           
  7624                           ;mcc_generated_files/epwm1.c: 84:  CCPR1L = 0x7F;
  7625     0C1C  307F               	movlw	127
  7626     0C1D  0091               	movwf	17	;volatile
  7627                           
  7628                           ;mcc_generated_files/epwm1.c: 87:  CCPTMRS0bits.C1TSEL = 0x0;
  7629     0C1E  30FC               	movlw	-4
  7630     0C1F  059E               	andwf	30,f	;volatile
  7631     0C20  0008               	return
  7632     0C21                     __end_of_EPWM1_Initialize:
  7633                           
  7634                           	psect	text38
  7635     0B79                     __ptext38:	
  7636 ;; *************** function _DAC_Initialize *****************
  7637 ;; Defined at:
  7638 ;;		line 58 in file "mcc_generated_files/dac.c"
  7639 ;; Parameters:    Size  Location     Type
  7640 ;;		None
  7641 ;; Auto vars:     Size  Location     Type
  7642 ;;		None
  7643 ;; Return value:  Size  Location     Type
  7644 ;;                  1    wreg      void 
  7645 ;; Registers used:
  7646 ;;		wreg
  7647 ;; Tracked objects:
  7648 ;;		On entry : B1F/2
  7649 ;;		On exit  : B1F/2
  7650 ;;		Unchanged: B00/0
  7651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7652 ;;      Params:         0       0       0       0       0       0
  7653 ;;      Locals:         0       0       0       0       0       0
  7654 ;;      Temps:          0       0       0       0       0       0
  7655 ;;      Totals:         0       0       0       0       0       0
  7656 ;;Total ram usage:        0 bytes
  7657 ;; Hardware stack levels used: 1
  7658 ;; Hardware stack levels required when called: 5
  7659 ;; This function calls:
  7660 ;;		Nothing
  7661 ;; This function is called by:
  7662 ;;		_SYSTEM_Initialize
  7663 ;; This function uses a non-reentrant model
  7664 ;;
  7665                           
  7666     0B79                     _DAC_Initialize:	
  7667                           ;psect for function _DAC_Initialize
  7668                           
  7669                           
  7670                           ;mcc_generated_files/dac.c: 61:     DACCON0 = 0x80;
  7671                           
  7672                           ;incstack = 0
  7673                           ; Regs used in _DAC_Initialize: [wreg]
  7674     0B79  3080               	movlw	128
  7675     0B7A  0098               	movwf	24	;volatile
  7676                           
  7677                           ;mcc_generated_files/dac.c: 63:     DACCON1 = 0x06;
  7678     0B7B  3006               	movlw	6
  7679     0B7C  0099               	movwf	25	;volatile
  7680     0B7D  0008               	return
  7681     0B7E                     __end_of_DAC_Initialize:
  7682                           
  7683                           	psect	text39
  7684     0B7E                     __ptext39:	
  7685 ;; *************** function _CMP1_Initialize *****************
  7686 ;; Defined at:
  7687 ;;		line 58 in file "mcc_generated_files/cmp1.c"
  7688 ;; Parameters:    Size  Location     Type
  7689 ;;		None
  7690 ;; Auto vars:     Size  Location     Type
  7691 ;;		None
  7692 ;; Return value:  Size  Location     Type
  7693 ;;                  1    wreg      void 
  7694 ;; Registers used:
  7695 ;;		wreg
  7696 ;; Tracked objects:
  7697 ;;		On entry : B1F/8
  7698 ;;		On exit  : B1F/2
  7699 ;;		Unchanged: B00/0
  7700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7701 ;;      Params:         0       0       0       0       0       0
  7702 ;;      Locals:         0       0       0       0       0       0
  7703 ;;      Temps:          0       0       0       0       0       0
  7704 ;;      Totals:         0       0       0       0       0       0
  7705 ;;Total ram usage:        0 bytes
  7706 ;; Hardware stack levels used: 1
  7707 ;; Hardware stack levels required when called: 5
  7708 ;; This function calls:
  7709 ;;		Nothing
  7710 ;; This function is called by:
  7711 ;;		_SYSTEM_Initialize
  7712 ;; This function uses a non-reentrant model
  7713 ;;
  7714                           
  7715     0B7E                     _CMP1_Initialize:	
  7716                           ;psect for function _CMP1_Initialize
  7717                           
  7718                           
  7719                           ;mcc_generated_files/cmp1.c: 62:     CM1CON0 = 0x84;
  7720                           
  7721                           ;incstack = 0
  7722                           ; Regs used in _CMP1_Initialize: [wreg]
  7723     0B7E  3084               	movlw	132
  7724     0B7F  0022               	movlb	2	; select bank2
  7725     0B80  0091               	movwf	17	;volatile
  7726                           
  7727                           ;mcc_generated_files/cmp1.c: 65:     CM1CON1 = 0x10;
  7728     0B81  3010               	movlw	16
  7729     0B82  0092               	movwf	18	;volatile
  7730     0B83  0008               	return
  7731     0B84                     __end_of_CMP1_Initialize:
  7732                           
  7733                           	psect	text40
  7734     0BB1                     __ptext40:	
  7735 ;; *************** function _ADC_Initialize *****************
  7736 ;; Defined at:
  7737 ;;		line 67 in file "mcc_generated_files/adc.c"
  7738 ;; Parameters:    Size  Location     Type
  7739 ;;		None
  7740 ;; Auto vars:     Size  Location     Type
  7741 ;;		None
  7742 ;; Return value:  Size  Location     Type
  7743 ;;                  1    wreg      void 
  7744 ;; Registers used:
  7745 ;;		wreg, status,2
  7746 ;; Tracked objects:
  7747 ;;		On entry : 1F/2
  7748 ;;		On exit  : 1F/1
  7749 ;;		Unchanged: 0/0
  7750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7751 ;;      Params:         0       0       0       0       0       0
  7752 ;;      Locals:         0       0       0       0       0       0
  7753 ;;      Temps:          0       0       0       0       0       0
  7754 ;;      Totals:         0       0       0       0       0       0
  7755 ;;Total ram usage:        0 bytes
  7756 ;; Hardware stack levels used: 1
  7757 ;; Hardware stack levels required when called: 5
  7758 ;; This function calls:
  7759 ;;		Nothing
  7760 ;; This function is called by:
  7761 ;;		_SYSTEM_Initialize
  7762 ;; This function uses a non-reentrant model
  7763 ;;
  7764                           
  7765     0BB1                     _ADC_Initialize:	
  7766                           ;psect for function _ADC_Initialize
  7767                           
  7768                           
  7769                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0xD3;
  7770                           
  7771                           ;incstack = 0
  7772                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  7773     0BB1  30D3               	movlw	211
  7774     0BB2  0021               	movlb	1	; select bank1
  7775     0BB3  009E               	movwf	30	;volatile
  7776                           
  7777                           ;mcc_generated_files/adc.c: 75:     ADRESL = 0x00;
  7778     0BB4  019B               	clrf	27	;volatile
  7779                           
  7780                           ;mcc_generated_files/adc.c: 78:     ADRESH = 0x00;
  7781     0BB5  019C               	clrf	28	;volatile
  7782                           
  7783                           ;mcc_generated_files/adc.c: 81:     ADCON0 = 0x01;
  7784     0BB6  3001               	movlw	1
  7785     0BB7  009D               	movwf	29	;volatile
  7786     0BB8  0008               	return
  7787     0BB9                     __end_of_ADC_Initialize:
  7788                           
  7789                           	psect	text41
  7790     0B74                     __ptext41:	
  7791 ;; *************** function _EUSART_is_rx_ready *****************
  7792 ;; Defined at:
  7793 ;;		line 99 in file "mcc_generated_files/eusart.c"
  7794 ;; Parameters:    Size  Location     Type
  7795 ;;		None
  7796 ;; Auto vars:     Size  Location     Type
  7797 ;;		None
  7798 ;; Return value:  Size  Location     Type
  7799 ;;                  1    wreg      _Bool 
  7800 ;; Registers used:
  7801 ;;		wreg, status,2, status,0
  7802 ;; Tracked objects:
  7803 ;;		On entry : 17/0
  7804 ;;		On exit  : 1F/0
  7805 ;;		Unchanged: 0/0
  7806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7807 ;;      Params:         0       0       0       0       0       0
  7808 ;;      Locals:         0       0       0       0       0       0
  7809 ;;      Temps:          0       0       0       0       0       0
  7810 ;;      Totals:         0       0       0       0       0       0
  7811 ;;Total ram usage:        0 bytes
  7812 ;; Hardware stack levels used: 1
  7813 ;; Hardware stack levels required when called: 5
  7814 ;; This function calls:
  7815 ;;		Nothing
  7816 ;; This function is called by:
  7817 ;;		_main
  7818 ;; This function uses a non-reentrant model
  7819 ;;
  7820                           
  7821     0B74                     _EUSART_is_rx_ready:	
  7822                           ;psect for function _EUSART_is_rx_ready
  7823                           
  7824                           
  7825                           ;mcc_generated_files/eusart.c: 101:     return (_Bool)(PIR1bits.RCIF);
  7826                           
  7827                           ;incstack = 0
  7828                           ; Regs used in _EUSART_is_rx_ready: [wreg+status,2+status,0]
  7829     0B74  0020               	movlb	0	; select bank0
  7830     0B75  0E11               	swapf	17,w	;volatile
  7831     0B76  0C89               	rrf	9,f
  7832     0B77  3901               	andlw	1
  7833     0B78  0008               	return
  7834     0B79                     __end_of_EUSART_is_rx_ready:
  7835                           
  7836                           	psect	text42
  7837     07F4                     __ptext42:	
  7838 ;; *************** function _EUSART_Read *****************
  7839 ;; Defined at:
  7840 ;;		line 113 in file "mcc_generated_files/eusart.c"
  7841 ;; Parameters:    Size  Location     Type
  7842 ;;		None
  7843 ;; Auto vars:     Size  Location     Type
  7844 ;;		None
  7845 ;; Return value:  Size  Location     Type
  7846 ;;                  1    wreg      unsigned char 
  7847 ;; Registers used:
  7848 ;;		wreg, status,2
  7849 ;; Tracked objects:
  7850 ;;		On entry : 1F/1
  7851 ;;		On exit  : 1F/3
  7852 ;;		Unchanged: 0/0
  7853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7854 ;;      Params:         0       0       0       0       0       0
  7855 ;;      Locals:         0       0       0       0       0       0
  7856 ;;      Temps:          0       0       0       0       0       0
  7857 ;;      Totals:         0       0       0       0       0       0
  7858 ;;Total ram usage:        0 bytes
  7859 ;; Hardware stack levels used: 1
  7860 ;; Hardware stack levels required when called: 5
  7861 ;; This function calls:
  7862 ;;		Nothing
  7863 ;; This function is called by:
  7864 ;;		_main
  7865 ;; This function uses a non-reentrant model
  7866 ;;
  7867                           
  7868     07F4                     _EUSART_Read:	
  7869                           ;psect for function _EUSART_Read
  7870                           
  7871     07F4                     l240:	
  7872                           ;mcc_generated_files/eusart.c: 116:     {;mcc_generated_files/eusart.c: 117:     }
  7873                           
  7874                           ;incstack = 0
  7875                           ; Regs used in _EUSART_Read: [wreg+status,2]
  7876                           
  7877                           
  7878                           ;mcc_generated_files/eusart.c: 115:     while(!PIR1bits.RCIF)
  7879     07F4  0020               	movlb	0	; select bank0
  7880     07F5  1E91               	btfss	17,5	;volatile
  7881     07F6  2FF4               	goto	l240
  7882                           
  7883                           ;mcc_generated_files/eusart.c: 119:     eusartRxLastError.status = 0;
  7884     07F7  0021               	movlb	1	; select bank1
  7885     07F8  01CC               	clrf	_eusartRxLastError^(0+128)	;volatile
  7886                           
  7887                           ;mcc_generated_files/eusart.c: 121:     if(1 == RCSTAbits.OERR)
  7888     07F9  0023               	movlb	3	; select bank3
  7889     07FA  1C9D               	btfss	29,1	;volatile
  7890     07FB  2FFE               	goto	l2927
  7891                           
  7892                           ;mcc_generated_files/eusart.c: 122:     {;mcc_generated_files/eusart.c: 125:         RCS
      +                          TAbits.CREN = 0;
  7893     07FC  121D               	bcf	29,4	;volatile
  7894                           
  7895                           ;mcc_generated_files/eusart.c: 126:         RCSTAbits.CREN = 1;
  7896     07FD  161D               	bsf	29,4	;volatile
  7897     07FE                     l2927:
  7898                           
  7899                           ;mcc_generated_files/eusart.c: 129:     return RCREG;
  7900     07FE  0819               	movf	25,w	;volatile
  7901     07FF  0008               	return
  7902     0800                     __end_of_EUSART_Read:
  7903                           
  7904                           	psect	text43
  7905     0C83                     __ptext43:	
  7906 ;; *************** function _ADC_GetConversion *****************
  7907 ;; Defined at:
  7908 ;;		line 112 in file "mcc_generated_files/adc.c"
  7909 ;; Parameters:    Size  Location     Type
  7910 ;;  channel         1    wreg     enum E2495
  7911 ;; Auto vars:     Size  Location     Type
  7912 ;;  channel         1    3[BANK1 ] enum E2495
  7913 ;; Return value:  Size  Location     Type
  7914 ;;                  2    0[BANK1 ] unsigned short 
  7915 ;; Registers used:
  7916 ;;		wreg, status,2, status,0
  7917 ;; Tracked objects:
  7918 ;;		On entry : 1F/8
  7919 ;;		On exit  : 1F/1
  7920 ;;		Unchanged: 0/0
  7921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7922 ;;      Params:         0       0       2       0       0       0
  7923 ;;      Locals:         0       0       1       0       0       0
  7924 ;;      Temps:          0       0       1       0       0       0
  7925 ;;      Totals:         0       0       4       0       0       0
  7926 ;;Total ram usage:        4 bytes
  7927 ;; Hardware stack levels used: 1
  7928 ;; Hardware stack levels required when called: 5
  7929 ;; This function calls:
  7930 ;;		Nothing
  7931 ;; This function is called by:
  7932 ;;		_main
  7933 ;; This function uses a non-reentrant model
  7934 ;;
  7935                           
  7936     0C83                     _ADC_GetConversion:	
  7937                           ;psect for function _ADC_GetConversion
  7938                           
  7939                           
  7940                           ;incstack = 0
  7941                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
  7942                           ;ADC_GetConversion@channel stored from wreg
  7943     0C83  0021               	movlb	1	; select bank1
  7944     0C84  00D0               	movwf	ADC_GetConversion@channel^(0+128)
  7945                           
  7946                           ;mcc_generated_files/adc.c: 112: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 113: {;mcc_generated_files/adc.c: 115:     ADCON0bits.CHS = ch
      +                          annel;
  7947     0C85  0850               	movf	ADC_GetConversion@channel^(0+128),w
  7948     0C86  00CF               	movwf	??_ADC_GetConversion^(0+128)
  7949     0C87  0DCF               	rlf	??_ADC_GetConversion^(0+128),f
  7950     0C88  0DCF               	rlf	??_ADC_GetConversion^(0+128),f
  7951     0C89  081D               	movf	29,w	;volatile
  7952     0C8A  064F               	xorwf	??_ADC_GetConversion^(0+128),w
  7953     0C8B  3983               	andlw	-125
  7954     0C8C  064F               	xorwf	??_ADC_GetConversion^(0+128),w
  7955     0C8D  009D               	movwf	29	;volatile
  7956                           
  7957                           ;mcc_generated_files/adc.c: 118:     ADCON0bits.ADON = 1;
  7958     0C8E  141D               	bsf	29,0	;volatile
  7959                           
  7960                           ;mcc_generated_files/adc.c: 121:     _delay((unsigned long)((5)*(16000000/4000000.0)));
  7961     0C8F  3006               	movlw	6
  7962     0C90                     u3097:
  7963     0C90  0B89               	decfsz	9,f
  7964     0C91  2C90               	goto	u3097
  7965     0C92  3200               	nop2
  7966                           
  7967                           ;mcc_generated_files/adc.c: 124:     ADCON0bits.GO_nDONE = 1;
  7968     0C93  0021               	movlb	1	; select bank1
  7969     0C94  149D               	bsf	29,1	;volatile
  7970     0C95                     l333:	
  7971                           ;mcc_generated_files/adc.c: 128:     {;mcc_generated_files/adc.c: 129:     }
  7972                           
  7973                           
  7974                           ;mcc_generated_files/adc.c: 127:     while (ADCON0bits.GO_nDONE)
  7975     0C95  189D               	btfsc	29,1	;volatile
  7976     0C96  2C95               	goto	l333
  7977                           
  7978                           ;mcc_generated_files/adc.c: 132:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  7979     0C97  081C               	movf	28,w	;volatile
  7980     0C98  00CE               	movwf	(?_ADC_GetConversion+1)^(0+128)
  7981     0C99  081B               	movf	27,w	;volatile
  7982     0C9A  00CD               	movwf	?_ADC_GetConversion^(0+128)
  7983     0C9B  0008               	return
  7984     0C9C                     __end_of_ADC_GetConversion:
  7985                           
  7986                           	psect	intentry
  7987     0004                     __pintentry:	
  7988 ;; *************** function _INTERRUPT_InterruptManager *****************
  7989 ;; Defined at:
  7990 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  7991 ;; Parameters:    Size  Location     Type
  7992 ;;		None
  7993 ;; Auto vars:     Size  Location     Type
  7994 ;;		None
  7995 ;; Return value:  Size  Location     Type
  7996 ;;                  1    wreg      void 
  7997 ;; Registers used:
  7998 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7999 ;; Tracked objects:
  8000 ;;		On entry : 0/0
  8001 ;;		On exit  : 0/0
  8002 ;;		Unchanged: 0/0
  8003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8004 ;;      Params:         0       0       0       0       0       0
  8005 ;;      Locals:         0       0       0       0       0       0
  8006 ;;      Temps:          0       0       0       0       0       0
  8007 ;;      Totals:         0       0       0       0       0       0
  8008 ;;Total ram usage:        0 bytes
  8009 ;; Hardware stack levels used: 1
  8010 ;; Hardware stack levels required when called: 4
  8011 ;; This function calls:
  8012 ;;		_PIN_MANAGER_IOC
  8013 ;;		_TMR1_GATE_ISR
  8014 ;; This function is called by:
  8015 ;;		Interrupt level 1
  8016 ;; This function uses a non-reentrant model
  8017 ;;
  8018                           
  8019     0004                     _INTERRUPT_InterruptManager:
  8020                           
  8021                           ;incstack = 0
  8022     0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  8023                           
  8024                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8025     0005  3180               	pagesel	$
  8026                           
  8027                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.IOCIE == 1 && INTCONbits
      +                          .IOCIF == 1)
  8028     0006  198B               	btfsc	11,3	;volatile
  8029     0007  1C0B               	btfss	11,0	;volatile
  8030     0008  280D               	goto	i1l174
  8031                           
  8032                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         PIN_MANAGER_IOC();
  8033     0009  3180  2002  3180   	fcall	_PIN_MANAGER_IOC
  8034                           
  8035                           ;mcc_generated_files/interrupt_manager.c: 58:     }
  8036     000C  2817               	goto	i1l180
  8037     000D                     i1l174:	
  8038                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
  8039                           
  8040     000D  1F0B               	btfss	11,6	;volatile
  8041     000E  2817               	goto	i1l180
  8042                           
  8043                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE1bits.TMR1GIE == 1 && PIR1bits.TMR1GIF == 1)
  8044     000F  0021               	movlb	1	; select bank1
  8045     0010  1F91               	btfss	17,7	;volatile
  8046     0011  2817               	goto	i1l180
  8047     0012  0020               	movlb	0	; select bank0
  8048     0013  1F91               	btfss	17,7	;volatile
  8049     0014  2817               	goto	i1l180
  8050                           
  8051                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             TMR1_GATE_ISR();
  8052     0015  318C  2408         	fcall	_TMR1_GATE_ISR
  8053     0017                     i1l180:	
  8054                           ;mcc_generated_files/interrupt_manager.c: 71:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 73:     }
  8055                           
  8056                           ;mcc_generated_files/interrupt_manager.c: 64:         }
  8057                           
  8058     0017  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  8059     0018  0009               	retfie
  8060     0019                     __end_of_INTERRUPT_InterruptManager:
  8061                           
  8062                           	psect	text45
  8063     0C08                     __ptext45:	
  8064 ;; *************** function _TMR1_GATE_ISR *****************
  8065 ;; Defined at:
  8066 ;;		line 166 in file "mcc_generated_files/tmr1.c"
  8067 ;; Parameters:    Size  Location     Type
  8068 ;;		None
  8069 ;; Auto vars:     Size  Location     Type
  8070 ;;		None
  8071 ;; Return value:  Size  Location     Type
  8072 ;;                  1    wreg      void 
  8073 ;; Registers used:
  8074 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8075 ;; Tracked objects:
  8076 ;;		On entry : 1F/0
  8077 ;;		On exit  : 0/0
  8078 ;;		Unchanged: 0/0
  8079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8080 ;;      Params:         0       0       0       0       0       0
  8081 ;;      Locals:         0       0       0       0       0       0
  8082 ;;      Temps:          0       0       0       0       0       0
  8083 ;;      Totals:         0       0       0       0       0       0
  8084 ;;Total ram usage:        0 bytes
  8085 ;; Hardware stack levels used: 1
  8086 ;; Hardware stack levels required when called: 3
  8087 ;; This function calls:
  8088 ;;		NULL
  8089 ;;		_TMR1_DefaultGateInterruptHandler
  8090 ;;		_mede_height
  8091 ;; This function is called by:
  8092 ;;		_INTERRUPT_InterruptManager
  8093 ;; This function uses a non-reentrant model
  8094 ;;
  8095                           
  8096     0C08                     _TMR1_GATE_ISR:	
  8097                           ;psect for function _TMR1_GATE_ISR
  8098                           
  8099                           
  8100                           ;mcc_generated_files/tmr1.c: 169:     PIR1bits.TMR1GIF = 0;
  8101                           
  8102                           ;incstack = 0
  8103                           ; Regs used in _TMR1_GATE_ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8104     0C08  1391               	bcf	17,7	;volatile
  8105                           
  8106                           ;mcc_generated_files/tmr1.c: 171:     if(TMR1_GateInterruptHandler)
  8107     0C09  086E               	movf	_TMR1_GateInterruptHandler,w
  8108     0C0A  046F               	iorwf	_TMR1_GateInterruptHandler+1,w
  8109     0C0B  1903               	btfsc	3,2
  8110     0C0C  0008               	return
  8111                           
  8112                           ;mcc_generated_files/tmr1.c: 172:     {;mcc_generated_files/tmr1.c: 173:         TMR1_Ga
      +                          teInterruptHandler();
  8113     0C0D  086F               	movf	_TMR1_GateInterruptHandler+1,w
  8114     0C0E  008A               	movwf	10
  8115     0C0F  086E               	movf	_TMR1_GateInterruptHandler,w
  8116     0C10  000A               	callw
  8117     0C11  318C               	pagesel	$
  8118     0C12  0008               	return
  8119     0C13                     __end_of_TMR1_GATE_ISR:
  8120                           
  8121                           	psect	text46
  8122     0003                     __ptext46:	
  8123 ;; *************** function _TMR1_DefaultGateInterruptHandler *****************
  8124 ;; Defined at:
  8125 ;;		line 181 in file "mcc_generated_files/tmr1.c"
  8126 ;; Parameters:    Size  Location     Type
  8127 ;;		None
  8128 ;; Auto vars:     Size  Location     Type
  8129 ;;		None
  8130 ;; Return value:  Size  Location     Type
  8131 ;;                  1    wreg      void 
  8132 ;; Registers used:
  8133 ;;		None
  8134 ;; Tracked objects:
  8135 ;;		On entry : 1F/0
  8136 ;;		On exit  : 1F/0
  8137 ;;		Unchanged: 1F/0
  8138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8139 ;;      Params:         0       0       0       0       0       0
  8140 ;;      Locals:         0       0       0       0       0       0
  8141 ;;      Temps:          0       0       0       0       0       0
  8142 ;;      Totals:         0       0       0       0       0       0
  8143 ;;Total ram usage:        0 bytes
  8144 ;; Hardware stack levels used: 1
  8145 ;; This function calls:
  8146 ;;		Nothing
  8147 ;; This function is called by:
  8148 ;;		_TMR1_Initialize
  8149 ;;		_TMR1_GATE_ISR
  8150 ;; This function uses a non-reentrant model
  8151 ;;
  8152                           
  8153     0003                     _TMR1_DefaultGateInterruptHandler:	
  8154                           ;psect for function _TMR1_DefaultGateInterruptHandler
  8155                           
  8156                           
  8157                           ;incstack = 0
  8158                           ; Regs used in _TMR1_DefaultGateInterruptHandler: []
  8159     0003  0008               	return
  8160     0004                     __end_of_TMR1_DefaultGateInterruptHandler:
  8161                           
  8162                           	psect	text47
  8163     05D3                     __ptext47:	
  8164 ;; *************** function _mede_height *****************
  8165 ;; Defined at:
  8166 ;;		line 298 in file "main.c"
  8167 ;; Parameters:    Size  Location     Type
  8168 ;;		None
  8169 ;; Auto vars:     Size  Location     Type
  8170 ;;		None
  8171 ;; Return value:  Size  Location     Type
  8172 ;;                  1    wreg      void 
  8173 ;; Registers used:
  8174 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8175 ;; Tracked objects:
  8176 ;;		On entry : 1F/0
  8177 ;;		On exit  : 1F/1
  8178 ;;		Unchanged: 0/0
  8179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8180 ;;      Params:         0       0       0       0       0       0
  8181 ;;      Locals:         0       0       0       0       0       0
  8182 ;;      Temps:          0       6       0       0       0       0
  8183 ;;      Totals:         0       6       0       0       0       0
  8184 ;;Total ram usage:        6 bytes
  8185 ;; Hardware stack levels used: 1
  8186 ;; Hardware stack levels required when called: 2
  8187 ;; This function calls:
  8188 ;;		_TMR1_ReadTimer
  8189 ;;		_TMR1_Reload
  8190 ;;		___flmul
  8191 ;;		___xxtofl
  8192 ;;		i1___fltol
  8193 ;;		i1___lwdiv
  8194 ;; This function is called by:
  8195 ;;		_main
  8196 ;;		_TMR1_GATE_ISR
  8197 ;; This function uses a non-reentrant model
  8198 ;;
  8199                           
  8200     05D3                     _mede_height:	
  8201                           ;psect for function _mede_height
  8202                           
  8203                           
  8204                           ;main.c: 299:     tempo_voo = TMR1_ReadTimer();
  8205                           
  8206                           ;incstack = 0
  8207                           ; Regs used in _mede_height: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8208     05D3  318C  246B  3185   	fcall	_TMR1_ReadTimer
  8209     05D6  0871               	movf	?_TMR1_ReadTimer+1,w
  8210     05D7  00E2               	movwf	_tempo_voo+1
  8211     05D8  0870               	movf	?_TMR1_ReadTimer,w
  8212     05D9  00E1               	movwf	_tempo_voo
  8213                           
  8214                           ;main.c: 300:     TMR1_Reload();
  8215     05DA  318B  23A9  3185   	fcall	_TMR1_Reload
  8216                           
  8217                           ;main.c: 301:     if (first_read == 1){
  8218     05DD  036D               	decf	_first_read,w
  8219     05DE  1D03               	btfss	3,2
  8220     05DF  2DFC               	goto	i1l2863
  8221                           
  8222                           ;main.c: 302:         avg_tempo_voo = tempo_voo;
  8223     05E0  0861               	movf	_tempo_voo,w
  8224     05E1  00BF               	movwf	___xxtofl@val
  8225     05E2  0862               	movf	_tempo_voo+1,w
  8226     05E3  00C0               	movwf	___xxtofl@val+1
  8227     05E4  01C1               	clrf	___xxtofl@val+2
  8228     05E5  01C2               	clrf	___xxtofl@val+3
  8229     05E6  3000               	movlw	0
  8230     05E7  3187  272C  3185   	fcall	___xxtofl
  8231     05EA  0842               	movf	?___xxtofl+3,w
  8232     05EB  0021               	movlb	1	; select bank1
  8233     05EC  00A3               	movwf	(_avg_tempo_voo+3)^(0+128)
  8234     05ED  0020               	movlb	0	; select bank0
  8235     05EE  0841               	movf	?___xxtofl+2,w
  8236     05EF  0021               	movlb	1	; select bank1
  8237     05F0  00A2               	movwf	(_avg_tempo_voo+2)^(0+128)
  8238     05F1  0020               	movlb	0	; select bank0
  8239     05F2  0840               	movf	?___xxtofl+1,w
  8240     05F3  0021               	movlb	1	; select bank1
  8241     05F4  00A1               	movwf	(_avg_tempo_voo+1)^(0+128)
  8242     05F5  0020               	movlb	0	; select bank0
  8243     05F6  083F               	movf	?___xxtofl,w
  8244     05F7  0021               	movlb	1	; select bank1
  8245     05F8  00A0               	movwf	_avg_tempo_voo^(0+128)
  8246                           
  8247                           ;main.c: 303:         first_read = 0;
  8248     05F9  0020               	movlb	0	; select bank0
  8249     05FA  01ED               	clrf	_first_read
  8250                           
  8251                           ;main.c: 304:     }
  8252     05FB  2E38               	goto	i1l2865
  8253     05FC                     i1l2863:
  8254                           
  8255                           ;main.c: 306:         avg_tempo_voo = ((uint16_t)avg_tempo_voo + (tempo_voo))>>1;
  8256     05FC  0021               	movlb	1	; select bank1
  8257     05FD  0823               	movf	(_avg_tempo_voo+3)^(0+128),w
  8258     05FE  0020               	movlb	0	; select bank0
  8259     05FF  00B8               	movwf	i1___fltol@f1+3
  8260     0600  0021               	movlb	1	; select bank1
  8261     0601  0822               	movf	(_avg_tempo_voo+2)^(0+128),w
  8262     0602  0020               	movlb	0	; select bank0
  8263     0603  00B7               	movwf	i1___fltol@f1+2
  8264     0604  0021               	movlb	1	; select bank1
  8265     0605  0821               	movf	(_avg_tempo_voo+1)^(0+128),w
  8266     0606  0020               	movlb	0	; select bank0
  8267     0607  00B6               	movwf	i1___fltol@f1+1
  8268     0608  0021               	movlb	1	; select bank1
  8269     0609  0820               	movf	_avg_tempo_voo^(0+128),w
  8270     060A  0020               	movlb	0	; select bank0
  8271     060B  00B5               	movwf	i1___fltol@f1
  8272     060C  318E  2660  3185   	fcall	i1___fltol
  8273     060F  0861               	movf	_tempo_voo,w
  8274     0610  0735               	addwf	?i1___fltol,w
  8275     0611  00CD               	movwf	??_mede_height
  8276     0612  0862               	movf	_tempo_voo+1,w
  8277     0613  3D36               	addwfc	?i1___fltol+1,w
  8278     0614  00CE               	movwf	??_mede_height+1
  8279     0615  36CE               	lsrf	??_mede_height+1,f
  8280     0616  0CCD               	rrf	??_mede_height,f
  8281     0617  084D               	movf	??_mede_height,w
  8282     0618  00CF               	movwf	??_mede_height+2
  8283     0619  084E               	movf	??_mede_height+1,w
  8284     061A  00D0               	movwf	??_mede_height+3
  8285     061B  01D1               	clrf	??_mede_height+4
  8286     061C  01D2               	clrf	??_mede_height+5
  8287     061D  0852               	movf	??_mede_height+5,w
  8288     061E  00C2               	movwf	___xxtofl@val+3
  8289     061F  0851               	movf	??_mede_height+4,w
  8290     0620  00C1               	movwf	___xxtofl@val+2
  8291     0621  0850               	movf	??_mede_height+3,w
  8292     0622  00C0               	movwf	___xxtofl@val+1
  8293     0623  084F               	movf	??_mede_height+2,w
  8294     0624  00BF               	movwf	___xxtofl@val
  8295     0625  3000               	movlw	0
  8296     0626  3187  272C  3185   	fcall	___xxtofl
  8297     0629  0842               	movf	?___xxtofl+3,w
  8298     062A  0021               	movlb	1	; select bank1
  8299     062B  00A3               	movwf	(_avg_tempo_voo+3)^(0+128)
  8300     062C  0020               	movlb	0	; select bank0
  8301     062D  0841               	movf	?___xxtofl+2,w
  8302     062E  0021               	movlb	1	; select bank1
  8303     062F  00A2               	movwf	(_avg_tempo_voo+2)^(0+128)
  8304     0630  0020               	movlb	0	; select bank0
  8305     0631  0840               	movf	?___xxtofl+1,w
  8306     0632  0021               	movlb	1	; select bank1
  8307     0633  00A1               	movwf	(_avg_tempo_voo+1)^(0+128)
  8308     0634  0020               	movlb	0	; select bank0
  8309     0635  083F               	movf	?___xxtofl,w
  8310     0636  0021               	movlb	1	; select bank1
  8311     0637  00A0               	movwf	_avg_tempo_voo^(0+128)
  8312     0638                     i1l2865:
  8313                           
  8314                           ;main.c: 308:     height = (uint16_t)(avg_tempo_voo*lookupTable[(int)(adc_temp/10)]);
  8315     0638  0021               	movlb	1	; select bank1
  8316     0639  0836               	movf	(_adc_temp+1)^(0+128),w
  8317     063A  00F3               	movwf	i1___lwdiv@dividend+1
  8318     063B  0835               	movf	_adc_temp^(0+128),w
  8319     063C  00F2               	movwf	i1___lwdiv@dividend
  8320     063D  300A               	movlw	10
  8321     063E  00F0               	movwf	i1___lwdiv@divisor
  8322     063F  3000               	movlw	0
  8323     0640  00F1               	movwf	i1___lwdiv@divisor+1
  8324     0641  318D  259E  3185   	fcall	i1___lwdiv
  8325     0644  0871               	movf	?i1___lwdiv+1,w
  8326     0645  0085               	movwf	5
  8327     0646  0870               	movf	?i1___lwdiv,w
  8328     0647  0084               	movwf	4
  8329     0648  3584               	lslf	4,f
  8330     0649  0D85               	rlf	5,f
  8331     064A  3584               	lslf	4,f
  8332     064B  0D85               	rlf	5,f
  8333     064C  3045               	movlw	low _lookupTable
  8334     064D  0784               	addwf	4,f
  8335     064E  3004               	movlw	high _lookupTable
  8336     064F  3D05               	addwfc	5,w
  8337     0650  3880               	iorlw	128
  8338     0651  0085               	movwf	5
  8339     0652  3F00               	moviw [0]fsr0
  8340     0653  0020               	movlb	0	; select bank0
  8341     0654  00CD               	movwf	??_mede_height
  8342     0655  3F01               	moviw [1]fsr0
  8343     0656  00CE               	movwf	??_mede_height+1
  8344     0657  3F02               	moviw [2]fsr0
  8345     0658  00CF               	movwf	??_mede_height+2
  8346     0659  3F03               	moviw [3]fsr0
  8347     065A  00D0               	movwf	??_mede_height+3
  8348     065B  0850               	movf	??_mede_height+3,w
  8349     065C  00A7               	movwf	___flmul@a+3
  8350     065D  084F               	movf	??_mede_height+2,w
  8351     065E  00A6               	movwf	___flmul@a+2
  8352     065F  084E               	movf	??_mede_height+1,w
  8353     0660  00A5               	movwf	___flmul@a+1
  8354     0661  084D               	movf	??_mede_height,w
  8355     0662  00A4               	movwf	___flmul@a
  8356     0663  0021               	movlb	1	; select bank1
  8357     0664  0823               	movf	(_avg_tempo_voo+3)^(0+128),w
  8358     0665  0020               	movlb	0	; select bank0
  8359     0666  00A3               	movwf	___flmul@b+3
  8360     0667  0021               	movlb	1	; select bank1
  8361     0668  0822               	movf	(_avg_tempo_voo+2)^(0+128),w
  8362     0669  0020               	movlb	0	; select bank0
  8363     066A  00A2               	movwf	___flmul@b+2
  8364     066B  0021               	movlb	1	; select bank1
  8365     066C  0821               	movf	(_avg_tempo_voo+1)^(0+128),w
  8366     066D  0020               	movlb	0	; select bank0
  8367     066E  00A1               	movwf	___flmul@b+1
  8368     066F  0021               	movlb	1	; select bank1
  8369     0670  0820               	movf	_avg_tempo_voo^(0+128),w
  8370     0671  0020               	movlb	0	; select bank0
  8371     0672  00A0               	movwf	___flmul@b
  8372     0673  3180  2046  3185   	fcall	___flmul
  8373     0676  0823               	movf	?___flmul+3,w
  8374     0677  00B8               	movwf	i1___fltol@f1+3
  8375     0678  0822               	movf	?___flmul+2,w
  8376     0679  00B7               	movwf	i1___fltol@f1+2
  8377     067A  0821               	movf	?___flmul+1,w
  8378     067B  00B6               	movwf	i1___fltol@f1+1
  8379     067C  0820               	movf	?___flmul,w
  8380     067D  00B5               	movwf	i1___fltol@f1
  8381     067E  318E  2660         	fcall	i1___fltol
  8382     0680  0836               	movf	?i1___fltol+1,w
  8383     0681  0021               	movlb	1	; select bank1
  8384     0682  00B4               	movwf	(_height+1)^(0+128)
  8385     0683  0020               	movlb	0	; select bank0
  8386     0684  0835               	movf	?i1___fltol,w
  8387     0685  0021               	movlb	1	; select bank1
  8388     0686  00B3               	movwf	_height^(0+128)
  8389                           
  8390                           ;main.c: 309:     balldist = height;
  8391     0687  0833               	movf	_height^(0+128),w
  8392     0688  00AA               	movwf	_balldist^(0+128)
  8393     0689  0834               	movf	(_height+1)^(0+128),w
  8394     068A  00AB               	movwf	(_balldist+1)^(0+128)
  8395     068B  01AC               	clrf	(_balldist+2)^(0+128)
  8396     068C  0008               	return
  8397     068D                     __end_of_mede_height:
  8398                           
  8399                           	psect	text48
  8400     0D9E                     __ptext48:	
  8401 ;; *************** function i1___lwdiv *****************
  8402 ;; Defined at:
  8403 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lwdiv.c"
  8404 ;; Parameters:    Size  Location     Type
  8405 ;;  divisor         2    0[COMMON] unsigned int 
  8406 ;;  dividend        2    2[COMMON] unsigned int 
  8407 ;; Auto vars:     Size  Location     Type
  8408 ;;  quotient        2    5[COMMON] unsigned int 
  8409 ;;  counter         1    7[COMMON] unsigned char 
  8410 ;; Return value:  Size  Location     Type
  8411 ;;                  2    0[COMMON] unsigned int 
  8412 ;; Registers used:
  8413 ;;		wreg, status,2, status,0
  8414 ;; Tracked objects:
  8415 ;;		On entry : 1F/1
  8416 ;;		On exit  : 1F/1
  8417 ;;		Unchanged: 1F/0
  8418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8419 ;;      Params:         4       0       0       0       0       0
  8420 ;;      Locals:         3       0       0       0       0       0
  8421 ;;      Temps:          1       0       0       0       0       0
  8422 ;;      Totals:         8       0       0       0       0       0
  8423 ;;Total ram usage:        8 bytes
  8424 ;; Hardware stack levels used: 1
  8425 ;; This function calls:
  8426 ;;		Nothing
  8427 ;; This function is called by:
  8428 ;;		_mede_height
  8429 ;; This function uses a non-reentrant model
  8430 ;;
  8431                           
  8432     0D9E                     i1___lwdiv:	
  8433                           ;psect for function i1___lwdiv
  8434                           
  8435                           
  8436                           ;incstack = 0
  8437                           ; Regs used in i1___lwdiv: [wreg+status,2+status,0]
  8438     0D9E  01F5               	clrf	i1___lwdiv@quotient
  8439     0D9F  01F6               	clrf	i1___lwdiv@quotient+1
  8440     0DA0  0870               	movf	i1___lwdiv@divisor,w
  8441     0DA1  0471               	iorwf	i1___lwdiv@divisor+1,w
  8442     0DA2  1903               	btfsc	3,2
  8443     0DA3  2DCD               	goto	i1l2655
  8444     0DA4  01F7               	clrf	i1___lwdiv@counter
  8445     0DA5  0AF7               	incf	i1___lwdiv@counter,f
  8446     0DA6                     i1l2643:
  8447     0DA6  1BF1               	btfsc	i1___lwdiv@divisor+1,7
  8448     0DA7  2DB2               	goto	i1l2645
  8449     0DA8  3001               	movlw	1
  8450     0DA9                     u232_25:
  8451     0DA9  35F0               	lslf	i1___lwdiv@divisor,f
  8452     0DAA  0DF1               	rlf	i1___lwdiv@divisor+1,f
  8453     0DAB  0B89               	decfsz	9,f
  8454     0DAC  2DA9               	goto	u232_25
  8455     0DAD  3001               	movlw	1
  8456     0DAE  00F4               	movwf	??i1___lwdiv
  8457     0DAF  0874               	movf	??i1___lwdiv,w
  8458     0DB0  07F7               	addwf	i1___lwdiv@counter,f
  8459     0DB1  2DA6               	goto	i1l2643
  8460     0DB2                     i1l2645:
  8461     0DB2  3001               	movlw	1
  8462     0DB3                     u234_25:
  8463     0DB3  35F5               	lslf	i1___lwdiv@quotient,f
  8464     0DB4  0DF6               	rlf	i1___lwdiv@quotient+1,f
  8465     0DB5  0B89               	decfsz	9,f
  8466     0DB6  2DB3               	goto	u234_25
  8467     0DB7  0871               	movf	i1___lwdiv@divisor+1,w
  8468     0DB8  0273               	subwf	i1___lwdiv@dividend+1,w
  8469     0DB9  1D03               	skipz
  8470     0DBA  2DBD               	goto	u235_25
  8471     0DBB  0870               	movf	i1___lwdiv@divisor,w
  8472     0DBC  0272               	subwf	i1___lwdiv@dividend,w
  8473     0DBD                     u235_25:
  8474     0DBD  1C03               	skipc
  8475     0DBE  2DC4               	goto	i1l2651
  8476     0DBF  0870               	movf	i1___lwdiv@divisor,w
  8477     0DC0  02F2               	subwf	i1___lwdiv@dividend,f
  8478     0DC1  0871               	movf	i1___lwdiv@divisor+1,w
  8479     0DC2  3BF3               	subwfb	i1___lwdiv@dividend+1,f
  8480     0DC3  1475               	bsf	i1___lwdiv@quotient,0
  8481     0DC4                     i1l2651:
  8482     0DC4  3001               	movlw	1
  8483     0DC5                     u236_25:
  8484     0DC5  36F1               	lsrf	i1___lwdiv@divisor+1,f
  8485     0DC6  0CF0               	rrf	i1___lwdiv@divisor,f
  8486     0DC7  0B89               	decfsz	9,f
  8487     0DC8  2DC5               	goto	u236_25
  8488     0DC9  3001               	movlw	1
  8489     0DCA  02F7               	subwf	i1___lwdiv@counter,f
  8490     0DCB  1D03               	btfss	3,2
  8491     0DCC  2DB2               	goto	i1l2645
  8492     0DCD                     i1l2655:
  8493     0DCD  0876               	movf	i1___lwdiv@quotient+1,w
  8494     0DCE  00F1               	movwf	?i1___lwdiv+1
  8495     0DCF  0875               	movf	i1___lwdiv@quotient,w
  8496     0DD0  00F0               	movwf	?i1___lwdiv
  8497     0DD1  0008               	return
  8498     0DD2                     __end_ofi1___lwdiv:
  8499                           
  8500                           	psect	text49
  8501     0E60                     __ptext49:	
  8502 ;; *************** function i1___fltol *****************
  8503 ;; Defined at:
  8504 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\fltol.c"
  8505 ;; Parameters:    Size  Location     Type
  8506 ;;  f1              4   21[BANK0 ] unsigned int 
  8507 ;; Auto vars:     Size  Location     Type
  8508 ;;  exp1            1   30[BANK0 ] unsigned char 
  8509 ;;  sign1           1   29[BANK0 ] unsigned char 
  8510 ;; Return value:  Size  Location     Type
  8511 ;;                  4   21[BANK0 ] long 
  8512 ;; Registers used:
  8513 ;;		wreg, status,2, status,0
  8514 ;; Tracked objects:
  8515 ;;		On entry : 1F/0
  8516 ;;		On exit  : 1F/0
  8517 ;;		Unchanged: 0/0
  8518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8519 ;;      Params:         0       4       0       0       0       0
  8520 ;;      Locals:         0       2       0       0       0       0
  8521 ;;      Temps:          0       4       0       0       0       0
  8522 ;;      Totals:         0      10       0       0       0       0
  8523 ;;Total ram usage:       10 bytes
  8524 ;; Hardware stack levels used: 1
  8525 ;; This function calls:
  8526 ;;		Nothing
  8527 ;; This function is called by:
  8528 ;;		_mede_height
  8529 ;; This function uses a non-reentrant model
  8530 ;;
  8531                           
  8532     0E60                     i1___fltol:	
  8533                           ;psect for function i1___fltol
  8534                           
  8535                           
  8536                           ;incstack = 0
  8537                           ; Regs used in i1___fltol: [wreg+status,2+status,0]
  8538     0E60  1003               	clrc
  8539     0E61  0D37               	rlf	i1___fltol@f1+2,w
  8540     0E62  0D38               	rlf	i1___fltol@f1+3,w
  8541     0E63  00BE               	movwf	i1___fltol@exp1
  8542     0E64  083E               	movf	i1___fltol@exp1,w
  8543     0E65  1D03               	btfss	3,2
  8544     0E66  2E70               	goto	i1l2603
  8545     0E67                     i1l2599:
  8546     0E67  3000               	movlw	0
  8547     0E68  00B8               	movwf	?i1___fltol+3
  8548     0E69  3000               	movlw	0
  8549     0E6A  00B7               	movwf	?i1___fltol+2
  8550     0E6B  3000               	movlw	0
  8551     0E6C  00B6               	movwf	?i1___fltol+1
  8552     0E6D  3000               	movlw	0
  8553     0E6E  00B5               	movwf	?i1___fltol
  8554     0E6F  0008               	return
  8555     0E70                     i1l2603:
  8556     0E70  0835               	movf	i1___fltol@f1,w
  8557     0E71  00B9               	movwf	??i1___fltol
  8558     0E72  0836               	movf	i1___fltol@f1+1,w
  8559     0E73  00BA               	movwf	??i1___fltol+1
  8560     0E74  0837               	movf	i1___fltol@f1+2,w
  8561     0E75  00BB               	movwf	??i1___fltol+2
  8562     0E76  0838               	movf	i1___fltol@f1+3,w
  8563     0E77  00BC               	movwf	??i1___fltol+3
  8564     0E78  301F               	movlw	31
  8565     0E79                     u222_25:
  8566     0E79  36BC               	lsrf	??i1___fltol+3,f
  8567     0E7A  0CBB               	rrf	??i1___fltol+2,f
  8568     0E7B  0CBA               	rrf	??i1___fltol+1,f
  8569     0E7C  0CB9               	rrf	??i1___fltol,f
  8570     0E7D  0B89               	decfsz	9,f
  8571     0E7E  2E79               	goto	u222_25
  8572     0E7F  0839               	movf	??i1___fltol,w
  8573     0E80  00BD               	movwf	i1___fltol@sign1
  8574     0E81  17B7               	bsf	i1___fltol@f1+2,7
  8575     0E82  30FF               	movlw	255
  8576     0E83  05B5               	andwf	i1___fltol@f1,f
  8577     0E84  30FF               	movlw	255
  8578     0E85  05B6               	andwf	i1___fltol@f1+1,f
  8579     0E86  30FF               	movlw	255
  8580     0E87  05B7               	andwf	i1___fltol@f1+2,f
  8581     0E88  3000               	movlw	0
  8582     0E89  05B8               	andwf	i1___fltol@f1+3,f
  8583     0E8A  3096               	movlw	150
  8584     0E8B  02BE               	subwf	i1___fltol@exp1,f
  8585     0E8C  1FBE               	btfss	i1___fltol@exp1,7
  8586     0E8D  2EA1               	goto	i1l2621
  8587     0E8E  083E               	movf	i1___fltol@exp1,w
  8588     0E8F  3A80               	xorlw	128
  8589     0E90  3E97               	addlw	151
  8590     0E91  1C03               	btfss	3,0
  8591     0E92  2E67               	goto	i1l2599
  8592     0E93                     i1l2619:
  8593     0E93  3001               	movlw	1
  8594     0E94                     u225_25:
  8595     0E94  36B8               	lsrf	i1___fltol@f1+3,f
  8596     0E95  0CB7               	rrf	i1___fltol@f1+2,f
  8597     0E96  0CB6               	rrf	i1___fltol@f1+1,f
  8598     0E97  0CB5               	rrf	i1___fltol@f1,f
  8599     0E98  0B89               	decfsz	9,f
  8600     0E99  2E94               	goto	u225_25
  8601     0E9A  3001               	movlw	1
  8602     0E9B  00B9               	movwf	??i1___fltol
  8603     0E9C  0839               	movf	??i1___fltol,w
  8604     0E9D  07BE               	addwf	i1___fltol@exp1,f
  8605     0E9E  1903               	btfsc	3,2
  8606     0E9F  2EB2               	goto	i1l2629
  8607     0EA0  2E93               	goto	i1l2619
  8608     0EA1                     i1l2621:
  8609     0EA1  3020               	movlw	32
  8610     0EA2  023E               	subwf	i1___fltol@exp1,w
  8611     0EA3  1803               	btfsc	3,0
  8612     0EA4  2E67               	goto	i1l2599
  8613     0EA5                     i1l1124:
  8614     0EA5  083E               	movf	i1___fltol@exp1,w
  8615     0EA6  1903               	btfsc	3,2
  8616     0EA7  2EB2               	goto	i1l2629
  8617     0EA8  3001               	movlw	1
  8618     0EA9                     u228_25:
  8619     0EA9  35B5               	lslf	i1___fltol@f1,f
  8620     0EAA  0DB6               	rlf	i1___fltol@f1+1,f
  8621     0EAB  0DB7               	rlf	i1___fltol@f1+2,f
  8622     0EAC  0DB8               	rlf	i1___fltol@f1+3,f
  8623     0EAD  0B89               	decfsz	9,f
  8624     0EAE  2EA9               	goto	u228_25
  8625     0EAF  3001               	movlw	1
  8626     0EB0  02BE               	subwf	i1___fltol@exp1,f
  8627     0EB1  2EA5               	goto	i1l1124
  8628     0EB2                     i1l2629:
  8629     0EB2  083D               	movf	i1___fltol@sign1,w
  8630     0EB3  1903               	btfsc	3,2
  8631     0EB4  0008               	return
  8632     0EB5  09B5               	comf	i1___fltol@f1,f
  8633     0EB6  09B6               	comf	i1___fltol@f1+1,f
  8634     0EB7  09B7               	comf	i1___fltol@f1+2,f
  8635     0EB8  09B8               	comf	i1___fltol@f1+3,f
  8636     0EB9  0AB5               	incf	i1___fltol@f1,f
  8637     0EBA  1903               	skipnz
  8638     0EBB  0AB6               	incf	i1___fltol@f1+1,f
  8639     0EBC  1903               	skipnz
  8640     0EBD  0AB7               	incf	i1___fltol@f1+2,f
  8641     0EBE  1903               	skipnz
  8642     0EBF  0AB8               	incf	i1___fltol@f1+3,f
  8643     0EC0  0008               	return
  8644     0EC1                     __end_ofi1___fltol:
  8645                           
  8646                           	psect	text50
  8647     072C                     __ptext50:	
  8648 ;; *************** function ___xxtofl *****************
  8649 ;; Defined at:
  8650 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\xxtofl.c"
  8651 ;; Parameters:    Size  Location     Type
  8652 ;;  sign            1    wreg     unsigned char 
  8653 ;;  val             4   31[BANK0 ] long 
  8654 ;; Auto vars:     Size  Location     Type
  8655 ;;  sign            1   39[BANK0 ] unsigned char 
  8656 ;;  arg             4   41[BANK0 ] unsigned long 
  8657 ;;  exp             1   40[BANK0 ] unsigned char 
  8658 ;; Return value:  Size  Location     Type
  8659 ;;                  4   31[BANK0 ] unsigned char 
  8660 ;; Registers used:
  8661 ;;		wreg, status,2, status,0
  8662 ;; Tracked objects:
  8663 ;;		On entry : 1F/0
  8664 ;;		On exit  : 1F/0
  8665 ;;		Unchanged: 0/0
  8666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8667 ;;      Params:         0       4       0       0       0       0
  8668 ;;      Locals:         0       6       0       0       0       0
  8669 ;;      Temps:          0       4       0       0       0       0
  8670 ;;      Totals:         0      14       0       0       0       0
  8671 ;;Total ram usage:       14 bytes
  8672 ;; Hardware stack levels used: 1
  8673 ;; This function calls:
  8674 ;;		Nothing
  8675 ;; This function is called by:
  8676 ;;		_mede_height
  8677 ;; This function uses a non-reentrant model
  8678 ;;
  8679                           
  8680     072C                     ___xxtofl:	
  8681                           ;psect for function ___xxtofl
  8682                           
  8683                           
  8684                           ;incstack = 0
  8685                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  8686                           ;___xxtofl@sign stored from wreg
  8687     072C  00C7               	movwf	___xxtofl@sign
  8688     072D  0847               	movf	___xxtofl@sign,w
  8689     072E  1D03               	btfss	3,2
  8690     072F  1FC2               	btfss	___xxtofl@val+3,7
  8691     0730  2F41               	goto	i1l2559
  8692     0731  093F               	comf	___xxtofl@val,w
  8693     0732  00C9               	movwf	___xxtofl@arg
  8694     0733  0940               	comf	___xxtofl@val+1,w
  8695     0734  00CA               	movwf	___xxtofl@arg+1
  8696     0735  0941               	comf	___xxtofl@val+2,w
  8697     0736  00CB               	movwf	___xxtofl@arg+2
  8698     0737  0942               	comf	___xxtofl@val+3,w
  8699     0738  00CC               	movwf	___xxtofl@arg+3
  8700     0739  0AC9               	incf	___xxtofl@arg,f
  8701     073A  1903               	skipnz
  8702     073B  0ACA               	incf	___xxtofl@arg+1,f
  8703     073C  1903               	skipnz
  8704     073D  0ACB               	incf	___xxtofl@arg+2,f
  8705     073E  1903               	skipnz
  8706     073F  0ACC               	incf	___xxtofl@arg+3,f
  8707     0740  2F49               	goto	i1l1364
  8708     0741                     i1l2559:
  8709     0741  0842               	movf	___xxtofl@val+3,w
  8710     0742  00CC               	movwf	___xxtofl@arg+3
  8711     0743  0841               	movf	___xxtofl@val+2,w
  8712     0744  00CB               	movwf	___xxtofl@arg+2
  8713     0745  0840               	movf	___xxtofl@val+1,w
  8714     0746  00CA               	movwf	___xxtofl@arg+1
  8715     0747  083F               	movf	___xxtofl@val,w
  8716     0748  00C9               	movwf	___xxtofl@arg
  8717     0749                     i1l1364:
  8718     0749  0842               	movf	___xxtofl@val+3,w
  8719     074A  0441               	iorwf	___xxtofl@val+2,w
  8720     074B  0440               	iorwf	___xxtofl@val+1,w
  8721     074C  043F               	iorwf	___xxtofl@val,w
  8722     074D  1D03               	skipz
  8723     074E  2F58               	goto	i1l2565
  8724     074F  3000               	movlw	0
  8725     0750  00C2               	movwf	?___xxtofl+3
  8726     0751  3000               	movlw	0
  8727     0752  00C1               	movwf	?___xxtofl+2
  8728     0753  3000               	movlw	0
  8729     0754  00C0               	movwf	?___xxtofl+1
  8730     0755  3000               	movlw	0
  8731     0756  00BF               	movwf	?___xxtofl
  8732     0757  0008               	return
  8733     0758                     i1l2565:
  8734     0758  3096               	movlw	150
  8735     0759  00C8               	movwf	___xxtofl@exp
  8736     075A                     i1l2569:
  8737     075A  30FE               	movlw	254
  8738     075B  054C               	andwf	___xxtofl@arg+3,w
  8739     075C  1903               	btfsc	3,2
  8740     075D  2F7D               	goto	i1l1370
  8741     075E  3001               	movlw	1
  8742     075F  00C3               	movwf	??___xxtofl
  8743     0760  0843               	movf	??___xxtofl,w
  8744     0761  07C8               	addwf	___xxtofl@exp,f
  8745     0762  3001               	movlw	1
  8746     0763                     u210_25:
  8747     0763  36CC               	lsrf	___xxtofl@arg+3,f
  8748     0764  0CCB               	rrf	___xxtofl@arg+2,f
  8749     0765  0CCA               	rrf	___xxtofl@arg+1,f
  8750     0766  0CC9               	rrf	___xxtofl@arg,f
  8751     0767  0B89               	decfsz	9,f
  8752     0768  2F63               	goto	u210_25
  8753     0769  2F5A               	goto	i1l2569
  8754     076A                     i1l2571:
  8755     076A  3001               	movlw	1
  8756     076B  00C3               	movwf	??___xxtofl
  8757     076C  0843               	movf	??___xxtofl,w
  8758     076D  07C8               	addwf	___xxtofl@exp,f
  8759     076E  3001               	movlw	1
  8760     076F  07C9               	addwf	___xxtofl@arg,f
  8761     0770  3000               	movlw	0
  8762     0771  3DCA               	addwfc	___xxtofl@arg+1,f
  8763     0772  3000               	movlw	0
  8764     0773  3DCB               	addwfc	___xxtofl@arg+2,f
  8765     0774  3000               	movlw	0
  8766     0775  3DCC               	addwfc	___xxtofl@arg+3,f
  8767     0776  3001               	movlw	1
  8768     0777                     u212_25:
  8769     0777  36CC               	lsrf	___xxtofl@arg+3,f
  8770     0778  0CCB               	rrf	___xxtofl@arg+2,f
  8771     0779  0CCA               	rrf	___xxtofl@arg+1,f
  8772     077A  0CC9               	rrf	___xxtofl@arg,f
  8773     077B  0B89               	decfsz	9,f
  8774     077C  2F77               	goto	u212_25
  8775     077D                     i1l1370:
  8776     077D  30FF               	movlw	255
  8777     077E  054C               	andwf	___xxtofl@arg+3,w
  8778     077F  1903               	btfsc	3,2
  8779     0780  2F8F               	goto	i1l2579
  8780     0781  2F6A               	goto	i1l2571
  8781     0782                     i1l2581:
  8782     0782  3002               	movlw	2
  8783     0783  0248               	subwf	___xxtofl@exp,w
  8784     0784  1C03               	btfss	3,0
  8785     0785  2F91               	goto	i1l1377
  8786     0786  3001               	movlw	1
  8787     0787  02C8               	subwf	___xxtofl@exp,f
  8788     0788  3001               	movlw	1
  8789     0789                     u214_25:
  8790     0789  35C9               	lslf	___xxtofl@arg,f
  8791     078A  0DCA               	rlf	___xxtofl@arg+1,f
  8792     078B  0DCB               	rlf	___xxtofl@arg+2,f
  8793     078C  0DCC               	rlf	___xxtofl@arg+3,f
  8794     078D  0B89               	decfsz	9,f
  8795     078E  2F89               	goto	u214_25
  8796     078F                     i1l2579:
  8797     078F  1FCB               	btfss	___xxtofl@arg+2,7
  8798     0790  2F82               	goto	i1l2581
  8799     0791                     i1l1377:
  8800     0791  1848               	btfsc	___xxtofl@exp,0
  8801     0792  2F9B               	goto	i1l1378
  8802     0793  30FF               	movlw	255
  8803     0794  05C9               	andwf	___xxtofl@arg,f
  8804     0795  30FF               	movlw	255
  8805     0796  05CA               	andwf	___xxtofl@arg+1,f
  8806     0797  307F               	movlw	127
  8807     0798  05CB               	andwf	___xxtofl@arg+2,f
  8808     0799  30FF               	movlw	255
  8809     079A  05CC               	andwf	___xxtofl@arg+3,f
  8810     079B                     i1l1378:
  8811     079B  1003               	clrc
  8812     079C  0CC8               	rrf	___xxtofl@exp,f
  8813     079D  0848               	movf	___xxtofl@exp,w
  8814     079E  00C3               	movwf	??___xxtofl
  8815     079F  01C4               	clrf	??___xxtofl+1
  8816     07A0  01C5               	clrf	??___xxtofl+2
  8817     07A1  01C6               	clrf	??___xxtofl+3
  8818     07A2  3018               	movlw	24
  8819     07A3                     u218_25:
  8820     07A3  35C3               	lslf	??___xxtofl,f
  8821     07A4  0DC4               	rlf	??___xxtofl+1,f
  8822     07A5  0DC5               	rlf	??___xxtofl+2,f
  8823     07A6  0DC6               	rlf	??___xxtofl+3,f
  8824     07A7  0B89               	decfsz	9,f
  8825     07A8  2FA3               	goto	u218_25
  8826     07A9  0843               	movf	??___xxtofl,w
  8827     07AA  04C9               	iorwf	___xxtofl@arg,f
  8828     07AB  0844               	movf	??___xxtofl+1,w
  8829     07AC  04CA               	iorwf	___xxtofl@arg+1,f
  8830     07AD  0845               	movf	??___xxtofl+2,w
  8831     07AE  04CB               	iorwf	___xxtofl@arg+2,f
  8832     07AF  0846               	movf	??___xxtofl+3,w
  8833     07B0  04CC               	iorwf	___xxtofl@arg+3,f
  8834     07B1  0847               	movf	___xxtofl@sign,w
  8835     07B2  1D03               	btfss	3,2
  8836     07B3  1FC2               	btfss	___xxtofl@val+3,7
  8837     07B4  2FB6               	goto	i1l2593
  8838     07B5  17CC               	bsf	___xxtofl@arg+3,7
  8839     07B6                     i1l2593:
  8840     07B6  084C               	movf	___xxtofl@arg+3,w
  8841     07B7  00C2               	movwf	?___xxtofl+3
  8842     07B8  084B               	movf	___xxtofl@arg+2,w
  8843     07B9  00C1               	movwf	?___xxtofl+2
  8844     07BA  084A               	movf	___xxtofl@arg+1,w
  8845     07BB  00C0               	movwf	?___xxtofl+1
  8846     07BC  0849               	movf	___xxtofl@arg,w
  8847     07BD  00BF               	movwf	?___xxtofl
  8848     07BE  0008               	return
  8849     07BF                     __end_of___xxtofl:
  8850                           
  8851                           	psect	text51
  8852     0046                     __ptext51:	
  8853 ;; *************** function ___flmul *****************
  8854 ;; Defined at:
  8855 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcmul.c"
  8856 ;; Parameters:    Size  Location     Type
  8857 ;;  b               4    0[BANK0 ] unsigned char 
  8858 ;;  a               4    4[BANK0 ] unsigned char 
  8859 ;; Auto vars:     Size  Location     Type
  8860 ;;  prod            4   15[BANK0 ] struct .
  8861 ;;  grs             4   10[BANK0 ] unsigned long 
  8862 ;;  temp            2   19[BANK0 ] struct .
  8863 ;;  bexp            1   14[BANK0 ] unsigned char 
  8864 ;;  aexp            1    9[BANK0 ] unsigned char 
  8865 ;;  sign            1    8[BANK0 ] unsigned char 
  8866 ;; Return value:  Size  Location     Type
  8867 ;;                  4    0[BANK0 ] unsigned char 
  8868 ;; Registers used:
  8869 ;;		wreg, status,2, status,0, pclath, cstack
  8870 ;; Tracked objects:
  8871 ;;		On entry : 1F/0
  8872 ;;		On exit  : 1F/0
  8873 ;;		Unchanged: 0/0
  8874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8875 ;;      Params:         0       8       0       0       0       0
  8876 ;;      Locals:         0      13       0       0       0       0
  8877 ;;      Temps:          5       0       0       0       0       0
  8878 ;;      Totals:         5      21       0       0       0       0
  8879 ;;Total ram usage:       26 bytes
  8880 ;; Hardware stack levels used: 1
  8881 ;; Hardware stack levels required when called: 1
  8882 ;; This function calls:
  8883 ;;		__Umul8_16
  8884 ;; This function is called by:
  8885 ;;		_mede_height
  8886 ;; This function uses a non-reentrant model
  8887 ;;
  8888                           
  8889     0046                     ___flmul:	
  8890                           ;psect for function ___flmul
  8891                           
  8892                           
  8893                           ;incstack = 0
  8894                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  8895     0046  0823               	movf	___flmul@b+3,w
  8896     0047  3980               	andlw	128
  8897     0048  00A8               	movwf	___flmul@sign
  8898     0049  3523               	lslf	___flmul@b+3,w
  8899     004A  00AE               	movwf	___flmul@bexp
  8900     004B  1BA2               	btfsc	___flmul@b+2,7
  8901     004C  142E               	bsf	___flmul@bexp,0
  8902     004D  082E               	movf	___flmul@bexp,w
  8903     004E  1903               	btfsc	3,2
  8904     004F  285D               	goto	i1l2429
  8905     0050  0A2E               	incf	___flmul@bexp,w
  8906     0051  1D03               	btfss	3,2
  8907     0052  285B               	goto	i1l2427
  8908     0053  3000               	movlw	0
  8909     0054  00A3               	movwf	___flmul@b+3
  8910     0055  3000               	movlw	0
  8911     0056  00A2               	movwf	___flmul@b+2
  8912     0057  3000               	movlw	0
  8913     0058  00A1               	movwf	___flmul@b+1
  8914     0059  3000               	movlw	0
  8915     005A  00A0               	movwf	___flmul@b
  8916     005B                     i1l2427:
  8917     005B  17A2               	bsf	___flmul@b+2,7
  8918     005C  2865               	goto	i1l2431
  8919     005D                     i1l2429:
  8920     005D  3000               	movlw	0
  8921     005E  00A3               	movwf	___flmul@b+3
  8922     005F  3000               	movlw	0
  8923     0060  00A2               	movwf	___flmul@b+2
  8924     0061  3000               	movlw	0
  8925     0062  00A1               	movwf	___flmul@b+1
  8926     0063  3000               	movlw	0
  8927     0064  00A0               	movwf	___flmul@b
  8928     0065                     i1l2431:
  8929     0065  0827               	movf	___flmul@a+3,w
  8930     0066  3980               	andlw	128
  8931     0067  00F9               	movwf	??___flmul
  8932     0068  0879               	movf	??___flmul,w
  8933     0069  06A8               	xorwf	___flmul@sign,f
  8934     006A  3527               	lslf	___flmul@a+3,w
  8935     006B  00A9               	movwf	___flmul@aexp
  8936     006C  1BA6               	btfsc	___flmul@a+2,7
  8937     006D  1429               	bsf	___flmul@aexp,0
  8938     006E  0829               	movf	___flmul@aexp,w
  8939     006F  1903               	btfsc	3,2
  8940     0070  287E               	goto	i1l2447
  8941     0071  0A29               	incf	___flmul@aexp,w
  8942     0072  1D03               	btfss	3,2
  8943     0073  287C               	goto	i1l2445
  8944     0074  3000               	movlw	0
  8945     0075  00A7               	movwf	___flmul@a+3
  8946     0076  3000               	movlw	0
  8947     0077  00A6               	movwf	___flmul@a+2
  8948     0078  3000               	movlw	0
  8949     0079  00A5               	movwf	___flmul@a+1
  8950     007A  3000               	movlw	0
  8951     007B  00A4               	movwf	___flmul@a
  8952     007C                     i1l2445:
  8953     007C  17A6               	bsf	___flmul@a+2,7
  8954     007D  2886               	goto	i1l2449
  8955     007E                     i1l2447:
  8956     007E  3000               	movlw	0
  8957     007F  00A7               	movwf	___flmul@a+3
  8958     0080  3000               	movlw	0
  8959     0081  00A6               	movwf	___flmul@a+2
  8960     0082  3000               	movlw	0
  8961     0083  00A5               	movwf	___flmul@a+1
  8962     0084  3000               	movlw	0
  8963     0085  00A4               	movwf	___flmul@a
  8964     0086                     i1l2449:
  8965     0086  0829               	movf	___flmul@aexp,w
  8966     0087  1D03               	btfss	3,2
  8967     0088  082E               	movf	___flmul@bexp,w
  8968     0089  1D03               	btfss	3,2
  8969     008A  2894               	goto	i1l2457
  8970     008B  3000               	movlw	0
  8971     008C  00A3               	movwf	?___flmul+3
  8972     008D  3000               	movlw	0
  8973     008E  00A2               	movwf	?___flmul+2
  8974     008F  3000               	movlw	0
  8975     0090  00A1               	movwf	?___flmul+1
  8976     0091  3000               	movlw	0
  8977     0092  00A0               	movwf	?___flmul
  8978     0093  0008               	return
  8979     0094                     i1l2457:
  8980     0094  0820               	movf	___flmul@b,w
  8981     0095  00F0               	movwf	__Umul8_16@multiplicand
  8982     0096  0826               	movf	___flmul@a+2,w
  8983     0097  318C  24EB  3180   	fcall	__Umul8_16
  8984     009A  0871               	movf	?__Umul8_16+1,w
  8985     009B  00B4               	movwf	___flmul@temp+1
  8986     009C  0870               	movf	?__Umul8_16,w
  8987     009D  00B3               	movwf	___flmul@temp
  8988     009E  0833               	movf	___flmul@temp,w
  8989     009F  00F9               	movwf	??___flmul
  8990     00A0  01FA               	clrf	??___flmul+1
  8991     00A1  01FB               	clrf	??___flmul+2
  8992     00A2  01FC               	clrf	??___flmul+3
  8993     00A3  087C               	movf	??___flmul+3,w
  8994     00A4  00AD               	movwf	___flmul@grs+3
  8995     00A5  087B               	movf	??___flmul+2,w
  8996     00A6  00AC               	movwf	___flmul@grs+2
  8997     00A7  087A               	movf	??___flmul+1,w
  8998     00A8  00AB               	movwf	___flmul@grs+1
  8999     00A9  0879               	movf	??___flmul,w
  9000     00AA  00AA               	movwf	___flmul@grs
  9001     00AB  0834               	movf	___flmul@temp+1,w
  9002     00AC  00F9               	movwf	??___flmul
  9003     00AD  01FA               	clrf	??___flmul+1
  9004     00AE  01FB               	clrf	??___flmul+2
  9005     00AF  01FC               	clrf	??___flmul+3
  9006     00B0  087C               	movf	??___flmul+3,w
  9007     00B1  00B2               	movwf	___flmul@prod+3
  9008     00B2  087B               	movf	??___flmul+2,w
  9009     00B3  00B1               	movwf	___flmul@prod+2
  9010     00B4  087A               	movf	??___flmul+1,w
  9011     00B5  00B0               	movwf	___flmul@prod+1
  9012     00B6  0879               	movf	??___flmul,w
  9013     00B7  00AF               	movwf	___flmul@prod
  9014     00B8  0821               	movf	___flmul@b+1,w
  9015     00B9  00F0               	movwf	__Umul8_16@multiplicand
  9016     00BA  0825               	movf	___flmul@a+1,w
  9017     00BB  318C  24EB  3180   	fcall	__Umul8_16
  9018     00BE  0871               	movf	?__Umul8_16+1,w
  9019     00BF  00B4               	movwf	___flmul@temp+1
  9020     00C0  0870               	movf	?__Umul8_16,w
  9021     00C1  00B3               	movwf	___flmul@temp
  9022     00C2  0833               	movf	___flmul@temp,w
  9023     00C3  00F9               	movwf	??___flmul
  9024     00C4  01FA               	clrf	??___flmul+1
  9025     00C5  01FB               	clrf	??___flmul+2
  9026     00C6  01FC               	clrf	??___flmul+3
  9027     00C7  0879               	movf	??___flmul,w
  9028     00C8  07AA               	addwf	___flmul@grs,f
  9029     00C9  087A               	movf	??___flmul+1,w
  9030     00CA  3DAB               	addwfc	___flmul@grs+1,f
  9031     00CB  087B               	movf	??___flmul+2,w
  9032     00CC  3DAC               	addwfc	___flmul@grs+2,f
  9033     00CD  087C               	movf	??___flmul+3,w
  9034     00CE  3DAD               	addwfc	___flmul@grs+3,f
  9035     00CF  0834               	movf	___flmul@temp+1,w
  9036     00D0  00F9               	movwf	??___flmul
  9037     00D1  01FA               	clrf	??___flmul+1
  9038     00D2  01FB               	clrf	??___flmul+2
  9039     00D3  01FC               	clrf	??___flmul+3
  9040     00D4  0879               	movf	??___flmul,w
  9041     00D5  07AF               	addwf	___flmul@prod,f
  9042     00D6  087A               	movf	??___flmul+1,w
  9043     00D7  3DB0               	addwfc	___flmul@prod+1,f
  9044     00D8  087B               	movf	??___flmul+2,w
  9045     00D9  3DB1               	addwfc	___flmul@prod+2,f
  9046     00DA  087C               	movf	??___flmul+3,w
  9047     00DB  3DB2               	addwfc	___flmul@prod+3,f
  9048     00DC  0822               	movf	___flmul@b+2,w
  9049     00DD  00F0               	movwf	__Umul8_16@multiplicand
  9050     00DE  0824               	movf	___flmul@a,w
  9051     00DF  318C  24EB  3180   	fcall	__Umul8_16
  9052     00E2  0871               	movf	?__Umul8_16+1,w
  9053     00E3  00B4               	movwf	___flmul@temp+1
  9054     00E4  0870               	movf	?__Umul8_16,w
  9055     00E5  00B3               	movwf	___flmul@temp
  9056     00E6  0833               	movf	___flmul@temp,w
  9057     00E7  00F9               	movwf	??___flmul
  9058     00E8  01FA               	clrf	??___flmul+1
  9059     00E9  01FB               	clrf	??___flmul+2
  9060     00EA  01FC               	clrf	??___flmul+3
  9061     00EB  0879               	movf	??___flmul,w
  9062     00EC  07AA               	addwf	___flmul@grs,f
  9063     00ED  087A               	movf	??___flmul+1,w
  9064     00EE  3DAB               	addwfc	___flmul@grs+1,f
  9065     00EF  087B               	movf	??___flmul+2,w
  9066     00F0  3DAC               	addwfc	___flmul@grs+2,f
  9067     00F1  087C               	movf	??___flmul+3,w
  9068     00F2  3DAD               	addwfc	___flmul@grs+3,f
  9069     00F3  0834               	movf	___flmul@temp+1,w
  9070     00F4  00F9               	movwf	??___flmul
  9071     00F5  01FA               	clrf	??___flmul+1
  9072     00F6  01FB               	clrf	??___flmul+2
  9073     00F7  01FC               	clrf	??___flmul+3
  9074     00F8  0879               	movf	??___flmul,w
  9075     00F9  07AF               	addwf	___flmul@prod,f
  9076     00FA  087A               	movf	??___flmul+1,w
  9077     00FB  3DB0               	addwfc	___flmul@prod+1,f
  9078     00FC  087B               	movf	??___flmul+2,w
  9079     00FD  3DB1               	addwfc	___flmul@prod+2,f
  9080     00FE  087C               	movf	??___flmul+3,w
  9081     00FF  3DB2               	addwfc	___flmul@prod+3,f
  9082     0100  3008               	movlw	8
  9083     0101                     u190_25:
  9084     0101  35AA               	lslf	___flmul@grs,f
  9085     0102  0DAB               	rlf	___flmul@grs+1,f
  9086     0103  0DAC               	rlf	___flmul@grs+2,f
  9087     0104  0DAD               	rlf	___flmul@grs+3,f
  9088     0105  0B89               	decfsz	9,f
  9089     0106  2901               	goto	u190_25
  9090     0107  0821               	movf	___flmul@b+1,w
  9091     0108  00F0               	movwf	__Umul8_16@multiplicand
  9092     0109  0824               	movf	___flmul@a,w
  9093     010A  318C  24EB  3180   	fcall	__Umul8_16
  9094     010D  0871               	movf	?__Umul8_16+1,w
  9095     010E  00B4               	movwf	___flmul@temp+1
  9096     010F  0870               	movf	?__Umul8_16,w
  9097     0110  00B3               	movwf	___flmul@temp
  9098     0111  0833               	movf	___flmul@temp,w
  9099     0112  07AA               	addwf	___flmul@grs,f
  9100     0113  0834               	movf	___flmul@temp+1,w
  9101     0114  3DAB               	addwfc	___flmul@grs+1,f
  9102     0115  3000               	movlw	0
  9103     0116  3DAC               	addwfc	___flmul@grs+2,f
  9104     0117  3DAD               	addwfc	___flmul@grs+3,f
  9105     0118  0820               	movf	___flmul@b,w
  9106     0119  00F0               	movwf	__Umul8_16@multiplicand
  9107     011A  0825               	movf	___flmul@a+1,w
  9108     011B  318C  24EB  3180   	fcall	__Umul8_16
  9109     011E  0871               	movf	?__Umul8_16+1,w
  9110     011F  00B4               	movwf	___flmul@temp+1
  9111     0120  0870               	movf	?__Umul8_16,w
  9112     0121  00B3               	movwf	___flmul@temp
  9113     0122  0833               	movf	___flmul@temp,w
  9114     0123  07AA               	addwf	___flmul@grs,f
  9115     0124  0834               	movf	___flmul@temp+1,w
  9116     0125  3DAB               	addwfc	___flmul@grs+1,f
  9117     0126  3000               	movlw	0
  9118     0127  3DAC               	addwfc	___flmul@grs+2,f
  9119     0128  3DAD               	addwfc	___flmul@grs+3,f
  9120     0129  3008               	movlw	8
  9121     012A                     u191_25:
  9122     012A  35AA               	lslf	___flmul@grs,f
  9123     012B  0DAB               	rlf	___flmul@grs+1,f
  9124     012C  0DAC               	rlf	___flmul@grs+2,f
  9125     012D  0DAD               	rlf	___flmul@grs+3,f
  9126     012E  0B89               	decfsz	9,f
  9127     012F  292A               	goto	u191_25
  9128     0130  0820               	movf	___flmul@b,w
  9129     0131  00F0               	movwf	__Umul8_16@multiplicand
  9130     0132  0824               	movf	___flmul@a,w
  9131     0133  318C  24EB  3180   	fcall	__Umul8_16
  9132     0136  0871               	movf	?__Umul8_16+1,w
  9133     0137  00B4               	movwf	___flmul@temp+1
  9134     0138  0870               	movf	?__Umul8_16,w
  9135     0139  00B3               	movwf	___flmul@temp
  9136     013A  0833               	movf	___flmul@temp,w
  9137     013B  07AA               	addwf	___flmul@grs,f
  9138     013C  0834               	movf	___flmul@temp+1,w
  9139     013D  3DAB               	addwfc	___flmul@grs+1,f
  9140     013E  3000               	movlw	0
  9141     013F  3DAC               	addwfc	___flmul@grs+2,f
  9142     0140  3DAD               	addwfc	___flmul@grs+3,f
  9143     0141  0821               	movf	___flmul@b+1,w
  9144     0142  00F0               	movwf	__Umul8_16@multiplicand
  9145     0143  0826               	movf	___flmul@a+2,w
  9146     0144  318C  24EB  3180   	fcall	__Umul8_16
  9147     0147  0871               	movf	?__Umul8_16+1,w
  9148     0148  00B4               	movwf	___flmul@temp+1
  9149     0149  0870               	movf	?__Umul8_16,w
  9150     014A  00B3               	movwf	___flmul@temp
  9151     014B  0833               	movf	___flmul@temp,w
  9152     014C  07AF               	addwf	___flmul@prod,f
  9153     014D  0834               	movf	___flmul@temp+1,w
  9154     014E  3DB0               	addwfc	___flmul@prod+1,f
  9155     014F  3000               	movlw	0
  9156     0150  3DB1               	addwfc	___flmul@prod+2,f
  9157     0151  3DB2               	addwfc	___flmul@prod+3,f
  9158     0152  0822               	movf	___flmul@b+2,w
  9159     0153  00F0               	movwf	__Umul8_16@multiplicand
  9160     0154  0825               	movf	___flmul@a+1,w
  9161     0155  318C  24EB  3180   	fcall	__Umul8_16
  9162     0158  0871               	movf	?__Umul8_16+1,w
  9163     0159  00B4               	movwf	___flmul@temp+1
  9164     015A  0870               	movf	?__Umul8_16,w
  9165     015B  00B3               	movwf	___flmul@temp
  9166     015C  0833               	movf	___flmul@temp,w
  9167     015D  07AF               	addwf	___flmul@prod,f
  9168     015E  0834               	movf	___flmul@temp+1,w
  9169     015F  3DB0               	addwfc	___flmul@prod+1,f
  9170     0160  3000               	movlw	0
  9171     0161  3DB1               	addwfc	___flmul@prod+2,f
  9172     0162  3DB2               	addwfc	___flmul@prod+3,f
  9173     0163  0822               	movf	___flmul@b+2,w
  9174     0164  00F0               	movwf	__Umul8_16@multiplicand
  9175     0165  0826               	movf	___flmul@a+2,w
  9176     0166  318C  24EB  3180   	fcall	__Umul8_16
  9177     0169  0871               	movf	?__Umul8_16+1,w
  9178     016A  00B4               	movwf	___flmul@temp+1
  9179     016B  0870               	movf	?__Umul8_16,w
  9180     016C  00B3               	movwf	___flmul@temp
  9181     016D  0833               	movf	___flmul@temp,w
  9182     016E  00F9               	movwf	??___flmul
  9183     016F  0834               	movf	___flmul@temp+1,w
  9184     0170  00FA               	movwf	??___flmul+1
  9185     0171  01FB               	clrf	??___flmul+2
  9186     0172  01FC               	clrf	??___flmul+3
  9187     0173  3008               	movlw	8
  9188     0174                     u192_25:
  9189     0174  35F9               	lslf	??___flmul,f
  9190     0175  0DFA               	rlf	??___flmul+1,f
  9191     0176  0DFB               	rlf	??___flmul+2,f
  9192     0177  0DFC               	rlf	??___flmul+3,f
  9193     0178  0B89               	decfsz	9,f
  9194     0179  2974               	goto	u192_25
  9195     017A  0879               	movf	??___flmul,w
  9196     017B  07AF               	addwf	___flmul@prod,f
  9197     017C  087A               	movf	??___flmul+1,w
  9198     017D  3DB0               	addwfc	___flmul@prod+1,f
  9199     017E  087B               	movf	??___flmul+2,w
  9200     017F  3DB1               	addwfc	___flmul@prod+2,f
  9201     0180  087C               	movf	??___flmul+3,w
  9202     0181  3DB2               	addwfc	___flmul@prod+3,f
  9203     0182  082D               	movf	___flmul@grs+3,w
  9204     0183  00F9               	movwf	??___flmul
  9205     0184  01FA               	clrf	??___flmul+1
  9206     0185  01FB               	clrf	??___flmul+2
  9207     0186  01FC               	clrf	??___flmul+3
  9208     0187  0879               	movf	??___flmul,w
  9209     0188  07AF               	addwf	___flmul@prod,f
  9210     0189  087A               	movf	??___flmul+1,w
  9211     018A  3DB0               	addwfc	___flmul@prod+1,f
  9212     018B  087B               	movf	??___flmul+2,w
  9213     018C  3DB1               	addwfc	___flmul@prod+2,f
  9214     018D  087C               	movf	??___flmul+3,w
  9215     018E  3DB2               	addwfc	___flmul@prod+3,f
  9216     018F  3008               	movlw	8
  9217     0190                     u193_25:
  9218     0190  35AA               	lslf	___flmul@grs,f
  9219     0191  0DAB               	rlf	___flmul@grs+1,f
  9220     0192  0DAC               	rlf	___flmul@grs+2,f
  9221     0193  0DAD               	rlf	___flmul@grs+3,f
  9222     0194  0B89               	decfsz	9,f
  9223     0195  2990               	goto	u193_25
  9224     0196  082E               	movf	___flmul@bexp,w
  9225     0197  0729               	addwf	___flmul@aexp,w
  9226     0198  00F9               	movwf	??___flmul
  9227     0199  01FA               	clrf	??___flmul+1
  9228     019A  0DFA               	rlf	??___flmul+1,f
  9229     019B  0879               	movf	??___flmul,w
  9230     019C  3E82               	addlw	130
  9231     019D  00B3               	movwf	___flmul@temp
  9232     019E  30FF               	movlw	255
  9233     019F  3D7A               	addwfc	??___flmul+1,w
  9234     01A0  00B4               	movwf	___flmul@temp+1
  9235     01A1                     i1l2509:
  9236     01A1  1BB1               	btfsc	___flmul@prod+2,7
  9237     01A2  29B8               	goto	i1l2511
  9238     01A3  3001               	movlw	1
  9239     01A4                     u194_25:
  9240     01A4  35AF               	lslf	___flmul@prod,f
  9241     01A5  0DB0               	rlf	___flmul@prod+1,f
  9242     01A6  0DB1               	rlf	___flmul@prod+2,f
  9243     01A7  0DB2               	rlf	___flmul@prod+3,f
  9244     01A8  0B89               	decfsz	9,f
  9245     01A9  29A4               	goto	u194_25
  9246     01AA  1BAD               	btfsc	___flmul@grs+3,7
  9247     01AB  142F               	bsf	___flmul@prod,0
  9248     01AC  3001               	movlw	1
  9249     01AD                     u196_25:
  9250     01AD  35AA               	lslf	___flmul@grs,f
  9251     01AE  0DAB               	rlf	___flmul@grs+1,f
  9252     01AF  0DAC               	rlf	___flmul@grs+2,f
  9253     01B0  0DAD               	rlf	___flmul@grs+3,f
  9254     01B1  0B89               	decfsz	9,f
  9255     01B2  29AD               	goto	u196_25
  9256     01B3  30FF               	movlw	255
  9257     01B4  07B3               	addwf	___flmul@temp,f
  9258     01B5  30FF               	movlw	255
  9259     01B6  3DB4               	addwfc	___flmul@temp+1,f
  9260     01B7  29A1               	goto	i1l2509
  9261     01B8                     i1l2511:
  9262     01B8  01A9               	clrf	___flmul@aexp
  9263     01B9  1FAD               	btfss	___flmul@grs+3,7
  9264     01BA  29D1               	goto	i1l2521
  9265     01BB  30FF               	movlw	255
  9266     01BC  052A               	andwf	___flmul@grs,w
  9267     01BD  00F9               	movwf	??___flmul
  9268     01BE  30FF               	movlw	255
  9269     01BF  052B               	andwf	___flmul@grs+1,w
  9270     01C0  00FA               	movwf	??___flmul+1
  9271     01C1  30FF               	movlw	255
  9272     01C2  052C               	andwf	___flmul@grs+2,w
  9273     01C3  00FB               	movwf	??___flmul+2
  9274     01C4  307F               	movlw	127
  9275     01C5  052D               	andwf	___flmul@grs+3,w
  9276     01C6  00FC               	movwf	??___flmul+3
  9277     01C7  087C               	movf	??___flmul+3,w
  9278     01C8  047B               	iorwf	??___flmul+2,w
  9279     01C9  047A               	iorwf	??___flmul+1,w
  9280     01CA  0479               	iorwf	??___flmul,w
  9281     01CB  1903               	skipnz
  9282     01CC  182F               	btfsc	___flmul@prod,0
  9283     01CD  29CF               	goto	i1l2517
  9284     01CE  29D1               	goto	i1l2521
  9285     01CF                     i1l2517:
  9286     01CF  01A9               	clrf	___flmul@aexp
  9287     01D0  0AA9               	incf	___flmul@aexp,f
  9288     01D1                     i1l2521:
  9289     01D1  0829               	movf	___flmul@aexp,w
  9290     01D2  1903               	btfsc	3,2
  9291     01D3  29FA               	goto	i1l2531
  9292     01D4  3001               	movlw	1
  9293     01D5  07AF               	addwf	___flmul@prod,f
  9294     01D6  3000               	movlw	0
  9295     01D7  3DB0               	addwfc	___flmul@prod+1,f
  9296     01D8  3000               	movlw	0
  9297     01D9  3DB1               	addwfc	___flmul@prod+2,f
  9298     01DA  3000               	movlw	0
  9299     01DB  3DB2               	addwfc	___flmul@prod+3,f
  9300     01DC  1C32               	btfss	___flmul@prod+3,0
  9301     01DD  29FA               	goto	i1l2531
  9302     01DE  082F               	movf	___flmul@prod,w
  9303     01DF  00F9               	movwf	??___flmul
  9304     01E0  0830               	movf	___flmul@prod+1,w
  9305     01E1  00FA               	movwf	??___flmul+1
  9306     01E2  0831               	movf	___flmul@prod+2,w
  9307     01E3  00FB               	movwf	??___flmul+2
  9308     01E4  0832               	movf	___flmul@prod+3,w
  9309     01E5  00FC               	movwf	??___flmul+3
  9310     01E6  3001               	movlw	1
  9311     01E7  00FD               	movwf	??___flmul+4
  9312     01E8                     u203_25:
  9313     01E8  37FC               	asrf	??___flmul+3,f
  9314     01E9  0CFB               	rrf	??___flmul+2,f
  9315     01EA  0CFA               	rrf	??___flmul+1,f
  9316     01EB  0CF9               	rrf	??___flmul,f
  9317     01EC  0BFD               	decfsz	??___flmul+4,f
  9318     01ED  29E8               	goto	u203_25
  9319     01EE  087C               	movf	??___flmul+3,w
  9320     01EF  00B2               	movwf	___flmul@prod+3
  9321     01F0  087B               	movf	??___flmul+2,w
  9322     01F1  00B1               	movwf	___flmul@prod+2
  9323     01F2  087A               	movf	??___flmul+1,w
  9324     01F3  00B0               	movwf	___flmul@prod+1
  9325     01F4  0879               	movf	??___flmul,w
  9326     01F5  00AF               	movwf	___flmul@prod
  9327     01F6  3001               	movlw	1
  9328     01F7  07B3               	addwf	___flmul@temp,f
  9329     01F8  3000               	movlw	0
  9330     01F9  3DB4               	addwfc	___flmul@temp+1,f
  9331     01FA                     i1l2531:
  9332     01FA  0834               	movf	___flmul@temp+1,w
  9333     01FB  3A80               	xorlw	128
  9334     01FC  00F9               	movwf	??___flmul
  9335     01FD  3080               	movlw	128
  9336     01FE  0279               	subwf	??___flmul,w
  9337     01FF  1D03               	skipz
  9338     0200  2A03               	goto	u204_25
  9339     0201  30FF               	movlw	255
  9340     0202  0233               	subwf	___flmul@temp,w
  9341     0203                     u204_25:
  9342     0203  1C03               	skipc
  9343     0204  2A0F               	goto	i1l2535
  9344     0205  307F               	movlw	127
  9345     0206  0020               	movlb	0	; select bank0
  9346     0207  00B2               	movwf	___flmul@prod+3
  9347     0208  3080               	movlw	128
  9348     0209  00B1               	movwf	___flmul@prod+2
  9349     020A  3000               	movlw	0
  9350     020B  00B0               	movwf	___flmul@prod+1
  9351     020C  3000               	movlw	0
  9352     020D  00AF               	movwf	___flmul@prod
  9353     020E  2A35               	goto	i1l1332
  9354     020F                     i1l2535:
  9355     020F  0020               	movlb	0	; select bank0
  9356     0210  0834               	movf	___flmul@temp+1,w
  9357     0211  3A80               	xorlw	128
  9358     0212  00F9               	movwf	??___flmul
  9359     0213  3080               	movlw	128
  9360     0214  0279               	subwf	??___flmul,w
  9361     0215  1D03               	skipz
  9362     0216  2A19               	goto	u205_25
  9363     0217  3001               	movlw	1
  9364     0218  0233               	subwf	___flmul@temp,w
  9365     0219                     u205_25:
  9366     0219  1803               	skipnc
  9367     021A  2A26               	goto	i1l2541
  9368     021B  3000               	movlw	0
  9369     021C  0020               	movlb	0	; select bank0
  9370     021D  00B2               	movwf	___flmul@prod+3
  9371     021E  3000               	movlw	0
  9372     021F  00B1               	movwf	___flmul@prod+2
  9373     0220  3000               	movlw	0
  9374     0221  00B0               	movwf	___flmul@prod+1
  9375     0222  3000               	movlw	0
  9376     0223  00AF               	movwf	___flmul@prod
  9377     0224  01A8               	clrf	___flmul@sign
  9378     0225  2A35               	goto	i1l1332
  9379     0226                     i1l2541:
  9380     0226  0020               	movlb	0	; select bank0
  9381     0227  0833               	movf	___flmul@temp,w
  9382     0228  00AE               	movwf	___flmul@bexp
  9383     0229  30FF               	movlw	255
  9384     022A  05AF               	andwf	___flmul@prod,f
  9385     022B  30FF               	movlw	255
  9386     022C  05B0               	andwf	___flmul@prod+1,f
  9387     022D  307F               	movlw	127
  9388     022E  05B1               	andwf	___flmul@prod+2,f
  9389     022F  3000               	movlw	0
  9390     0230  05B2               	andwf	___flmul@prod+3,f
  9391     0231  182E               	btfsc	___flmul@bexp,0
  9392     0232  17B1               	bsf	___flmul@prod+2,7
  9393     0233  362E               	lsrf	___flmul@bexp,w
  9394     0234  00B2               	movwf	___flmul@prod+3
  9395     0235                     i1l1332:
  9396     0235  0828               	movf	___flmul@sign,w
  9397     0236  00F9               	movwf	??___flmul
  9398     0237  0879               	movf	??___flmul,w
  9399     0238  04B2               	iorwf	___flmul@prod+3,f
  9400     0239  0832               	movf	___flmul@prod+3,w
  9401     023A  00A3               	movwf	?___flmul+3
  9402     023B  0831               	movf	___flmul@prod+2,w
  9403     023C  00A2               	movwf	?___flmul+2
  9404     023D  0830               	movf	___flmul@prod+1,w
  9405     023E  00A1               	movwf	?___flmul+1
  9406     023F  082F               	movf	___flmul@prod,w
  9407     0240  00A0               	movwf	?___flmul
  9408     0241  0008               	return
  9409     0242                     __end_of___flmul:
  9410                           
  9411                           	psect	text52
  9412     0CEB                     __ptext52:	
  9413 ;; *************** function __Umul8_16 *****************
  9414 ;; Defined at:
  9415 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul8_16.c"
  9416 ;; Parameters:    Size  Location     Type
  9417 ;;  multiplier      1    wreg     unsigned char 
  9418 ;;  multiplicand    1    0[COMMON] unsigned char 
  9419 ;; Auto vars:     Size  Location     Type
  9420 ;;  multiplier      1    8[COMMON] unsigned char 
  9421 ;;  word_mpld       2    6[COMMON] unsigned short 
  9422 ;;  product         2    4[COMMON] unsigned short 
  9423 ;; Return value:  Size  Location     Type
  9424 ;;                  2    0[COMMON] unsigned int 
  9425 ;; Registers used:
  9426 ;;		wreg, status,2, status,0
  9427 ;; Tracked objects:
  9428 ;;		On entry : 1F/0
  9429 ;;		On exit  : 1F/0
  9430 ;;		Unchanged: 1F/0
  9431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9432 ;;      Params:         2       0       0       0       0       0
  9433 ;;      Locals:         5       0       0       0       0       0
  9434 ;;      Temps:          2       0       0       0       0       0
  9435 ;;      Totals:         9       0       0       0       0       0
  9436 ;;Total ram usage:        9 bytes
  9437 ;; Hardware stack levels used: 1
  9438 ;; This function calls:
  9439 ;;		Nothing
  9440 ;; This function is called by:
  9441 ;;		___flmul
  9442 ;; This function uses a non-reentrant model
  9443 ;;
  9444                           
  9445     0CEB                     __Umul8_16:	
  9446                           ;psect for function __Umul8_16
  9447                           
  9448                           
  9449                           ;incstack = 0
  9450                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  9451                           ;__Umul8_16@multiplier stored from wreg
  9452     0CEB  00F8               	movwf	__Umul8_16@multiplier
  9453     0CEC  01F4               	clrf	__Umul8_16@product
  9454     0CED  01F5               	clrf	__Umul8_16@product+1
  9455     0CEE  0870               	movf	__Umul8_16@multiplicand,w
  9456     0CEF  00F2               	movwf	??__Umul8_16
  9457     0CF0  01F3               	clrf	??__Umul8_16+1
  9458     0CF1  0872               	movf	??__Umul8_16,w
  9459     0CF2  00F6               	movwf	__Umul8_16@word_mpld
  9460     0CF3  0873               	movf	??__Umul8_16+1,w
  9461     0CF4  00F7               	movwf	__Umul8_16@word_mpld+1
  9462     0CF5                     i1l2287:
  9463     0CF5  1C78               	btfss	__Umul8_16@multiplier,0
  9464     0CF6  2CFB               	goto	i1l1339
  9465     0CF7  0876               	movf	__Umul8_16@word_mpld,w
  9466     0CF8  07F4               	addwf	__Umul8_16@product,f
  9467     0CF9  0877               	movf	__Umul8_16@word_mpld+1,w
  9468     0CFA  3DF5               	addwfc	__Umul8_16@product+1,f
  9469     0CFB                     i1l1339:
  9470     0CFB  3001               	movlw	1
  9471     0CFC                     u156_25:
  9472     0CFC  35F6               	lslf	__Umul8_16@word_mpld,f
  9473     0CFD  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  9474     0CFE  0B89               	decfsz	9,f
  9475     0CFF  2CFC               	goto	u156_25
  9476     0D00  1003               	clrc
  9477     0D01  0CF8               	rrf	__Umul8_16@multiplier,f
  9478     0D02  0878               	movf	__Umul8_16@multiplier,w
  9479     0D03  1D03               	btfss	3,2
  9480     0D04  2CF5               	goto	i1l2287
  9481     0D05  0875               	movf	__Umul8_16@product+1,w
  9482     0D06  00F1               	movwf	?__Umul8_16+1
  9483     0D07  0874               	movf	__Umul8_16@product,w
  9484     0D08  00F0               	movwf	?__Umul8_16
  9485     0D09  0008               	return
  9486     0D0A                     __end_of__Umul8_16:
  9487                           
  9488                           	psect	text53
  9489     0BA9                     __ptext53:	
  9490 ;; *************** function _TMR1_Reload *****************
  9491 ;; Defined at:
  9492 ;;		line 146 in file "mcc_generated_files/tmr1.c"
  9493 ;; Parameters:    Size  Location     Type
  9494 ;;		None
  9495 ;; Auto vars:     Size  Location     Type
  9496 ;;		None
  9497 ;; Return value:  Size  Location     Type
  9498 ;;                  1    wreg      void 
  9499 ;; Registers used:
  9500 ;;		wreg, status,2, status,0, pclath, cstack
  9501 ;; Tracked objects:
  9502 ;;		On entry : 1F/0
  9503 ;;		On exit  : 1F/0
  9504 ;;		Unchanged: 0/0
  9505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9506 ;;      Params:         0       0       0       0       0       0
  9507 ;;      Locals:         0       0       0       0       0       0
  9508 ;;      Temps:          0       0       0       0       0       0
  9509 ;;      Totals:         0       0       0       0       0       0
  9510 ;;Total ram usage:        0 bytes
  9511 ;; Hardware stack levels used: 1
  9512 ;; Hardware stack levels required when called: 1
  9513 ;; This function calls:
  9514 ;;		_TMR1_WriteTimer
  9515 ;; This function is called by:
  9516 ;;		_mede_height
  9517 ;; This function uses a non-reentrant model
  9518 ;;
  9519                           
  9520     0BA9                     _TMR1_Reload:	
  9521                           ;psect for function _TMR1_Reload
  9522                           
  9523                           
  9524                           ;mcc_generated_files/tmr1.c: 148:     TMR1_WriteTimer(timer1ReloadVal);
  9525                           
  9526                           ;incstack = 0
  9527                           ; Regs used in _TMR1_Reload: [wreg+status,2+status,0+pclath+cstack]
  9528     0BA9  0021               	movlb	1	; select bank1
  9529     0BAA  0844               	movf	(_timer1ReloadVal+1)^(0+128),w	;volatile
  9530     0BAB  00F1               	movwf	TMR1_WriteTimer@timerVal+1
  9531     0BAC  0843               	movf	_timer1ReloadVal^(0+128),w	;volatile
  9532     0BAD  00F0               	movwf	TMR1_WriteTimer@timerVal
  9533     0BAE  318C  2421         	fcall	_TMR1_WriteTimer
  9534     0BB0  0008               	return
  9535     0BB1                     __end_of_TMR1_Reload:
  9536                           
  9537                           	psect	text54
  9538     0C21                     __ptext54:	
  9539 ;; *************** function _TMR1_WriteTimer *****************
  9540 ;; Defined at:
  9541 ;;		line 124 in file "mcc_generated_files/tmr1.c"
  9542 ;; Parameters:    Size  Location     Type
  9543 ;;  timerVal        2    0[COMMON] unsigned short 
  9544 ;; Auto vars:     Size  Location     Type
  9545 ;;		None
  9546 ;; Return value:  Size  Location     Type
  9547 ;;                  1    wreg      void 
  9548 ;; Registers used:
  9549 ;;		wreg
  9550 ;; Tracked objects:
  9551 ;;		On entry : 1F/1
  9552 ;;		On exit  : 1F/0
  9553 ;;		Unchanged: 0/0
  9554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9555 ;;      Params:         2       0       0       0       0       0
  9556 ;;      Locals:         0       0       0       0       0       0
  9557 ;;      Temps:          0       0       0       0       0       0
  9558 ;;      Totals:         2       0       0       0       0       0
  9559 ;;Total ram usage:        2 bytes
  9560 ;; Hardware stack levels used: 1
  9561 ;; This function calls:
  9562 ;;		Nothing
  9563 ;; This function is called by:
  9564 ;;		_TMR1_Reload
  9565 ;; This function uses a non-reentrant model
  9566 ;;
  9567                           
  9568     0C21                     _TMR1_WriteTimer:	
  9569                           ;psect for function _TMR1_WriteTimer
  9570                           
  9571                           
  9572                           ;mcc_generated_files/tmr1.c: 124: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 125: {;mcc_generated_files/tmr1.c: 126:     if (T1CONbits.nT1SYNC == 1)
  9573                           
  9574                           ;incstack = 0
  9575                           ; Regs used in _TMR1_WriteTimer: [wreg]
  9576     0C21  0020               	movlb	0	; select bank0
  9577     0C22  1D18               	btfss	24,2	;volatile
  9578     0C23  2C2B               	goto	i1l2281
  9579                           
  9580                           ;mcc_generated_files/tmr1.c: 127:     {;mcc_generated_files/tmr1.c: 129:         T1CONbi
      +                          ts.TMR1ON = 0;
  9581     0C24  1018               	bcf	24,0	;volatile
  9582                           
  9583                           ;mcc_generated_files/tmr1.c: 132:         TMR1H = (uint8_t)(timerVal >> 8);
  9584     0C25  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  9585     0C26  0097               	movwf	23	;volatile
  9586                           
  9587                           ;mcc_generated_files/tmr1.c: 133:         TMR1L = (uint8_t)timerVal;
  9588     0C27  0870               	movf	TMR1_WriteTimer@timerVal,w
  9589     0C28  0096               	movwf	22	;volatile
  9590                           
  9591                           ;mcc_generated_files/tmr1.c: 136:         T1CONbits.TMR1ON =1;
  9592     0C29  1418               	bsf	24,0	;volatile
  9593                           
  9594                           ;mcc_generated_files/tmr1.c: 137:     }
  9595     0C2A  0008               	return
  9596     0C2B                     i1l2281:
  9597                           
  9598                           ;mcc_generated_files/tmr1.c: 139:     {;mcc_generated_files/tmr1.c: 141:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
  9599     0C2B  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  9600     0C2C  0097               	movwf	23	;volatile
  9601                           
  9602                           ;mcc_generated_files/tmr1.c: 142:         TMR1L = (uint8_t)timerVal;
  9603     0C2D  0870               	movf	TMR1_WriteTimer@timerVal,w
  9604     0C2E  0096               	movwf	22	;volatile
  9605     0C2F  0008               	return
  9606     0C30                     __end_of_TMR1_WriteTimer:
  9607                           
  9608                           	psect	text55
  9609     0C6B                     __ptext55:	
  9610 ;; *************** function _TMR1_ReadTimer *****************
  9611 ;; Defined at:
  9612 ;;		line 109 in file "mcc_generated_files/tmr1.c"
  9613 ;; Parameters:    Size  Location     Type
  9614 ;;		None
  9615 ;; Auto vars:     Size  Location     Type
  9616 ;;  readVal         2    7[COMMON] unsigned short 
  9617 ;;  readValLow      1   10[COMMON] unsigned char 
  9618 ;;  readValHigh     1    9[COMMON] unsigned char 
  9619 ;; Return value:  Size  Location     Type
  9620 ;;                  2    0[COMMON] unsigned short 
  9621 ;; Registers used:
  9622 ;;		wreg
  9623 ;; Tracked objects:
  9624 ;;		On entry : 1F/0
  9625 ;;		On exit  : 1F/0
  9626 ;;		Unchanged: 0/0
  9627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9628 ;;      Params:         2       0       0       0       0       0
  9629 ;;      Locals:         4       0       0       0       0       0
  9630 ;;      Temps:          5       0       0       0       0       0
  9631 ;;      Totals:        11       0       0       0       0       0
  9632 ;;Total ram usage:       11 bytes
  9633 ;; Hardware stack levels used: 1
  9634 ;; This function calls:
  9635 ;;		Nothing
  9636 ;; This function is called by:
  9637 ;;		_mede_height
  9638 ;; This function uses a non-reentrant model
  9639 ;;
  9640                           
  9641     0C6B                     _TMR1_ReadTimer:	
  9642                           ;psect for function _TMR1_ReadTimer
  9643                           
  9644                           
  9645                           ;mcc_generated_files/tmr1.c: 111:     uint16_t readVal;;mcc_generated_files/tmr1.c: 112:
      +                               uint8_t readValHigh;;mcc_generated_files/tmr1.c: 113:     uint8_t readValLow;;mcc_g
      +                          enerated_files/tmr1.c: 116:     readValLow = TMR1L;
  9646                           
  9647                           ;incstack = 0
  9648                           ; Regs used in _TMR1_ReadTimer: [wreg]
  9649     0C6B  0816               	movf	22,w	;volatile
  9650     0C6C  00FA               	movwf	TMR1_ReadTimer@readValLow
  9651                           
  9652                           ;mcc_generated_files/tmr1.c: 117:     readValHigh = TMR1H;
  9653     0C6D  0817               	movf	23,w	;volatile
  9654     0C6E  00F9               	movwf	TMR1_ReadTimer@readValHigh
  9655                           
  9656                           ;mcc_generated_files/tmr1.c: 119:     readVal = ((uint16_t)readValHigh << 8) | readValLo
      +                          w;
  9657     0C6F  087A               	movf	TMR1_ReadTimer@readValLow,w
  9658     0C70  00F2               	movwf	??_TMR1_ReadTimer
  9659     0C71  01F3               	clrf	??_TMR1_ReadTimer+1
  9660     0C72  0879               	movf	TMR1_ReadTimer@readValHigh,w
  9661     0C73  00F4               	movwf	??_TMR1_ReadTimer+2
  9662     0C74  01F5               	clrf	??_TMR1_ReadTimer+3
  9663     0C75  0874               	movf	??_TMR1_ReadTimer+2,w
  9664     0C76  00F5               	movwf	??_TMR1_ReadTimer+3
  9665     0C77  01F4               	clrf	??_TMR1_ReadTimer+2
  9666     0C78  0872               	movf	??_TMR1_ReadTimer,w
  9667     0C79  0474               	iorwf	??_TMR1_ReadTimer+2,w
  9668     0C7A  00F7               	movwf	TMR1_ReadTimer@readVal
  9669     0C7B  0873               	movf	??_TMR1_ReadTimer+1,w
  9670     0C7C  0475               	iorwf	??_TMR1_ReadTimer+3,w
  9671     0C7D  00F8               	movwf	TMR1_ReadTimer@readVal+1
  9672                           
  9673                           ;mcc_generated_files/tmr1.c: 121:     return readVal;
  9674     0C7E  0878               	movf	TMR1_ReadTimer@readVal+1,w
  9675     0C7F  00F1               	movwf	?_TMR1_ReadTimer+1
  9676     0C80  0877               	movf	TMR1_ReadTimer@readVal,w
  9677     0C81  00F0               	movwf	?_TMR1_ReadTimer
  9678     0C82  0008               	return
  9679     0C83                     __end_of_TMR1_ReadTimer:
  9680                           
  9681                           	psect	text56
  9682     0002                     __ptext56:	
  9683 ;; *************** function _PIN_MANAGER_IOC *****************
  9684 ;; Defined at:
  9685 ;;		line 98 in file "mcc_generated_files/pin_manager.c"
  9686 ;; Parameters:    Size  Location     Type
  9687 ;;		None
  9688 ;; Auto vars:     Size  Location     Type
  9689 ;;		None
  9690 ;; Return value:  Size  Location     Type
  9691 ;;                  1    wreg      void 
  9692 ;; Registers used:
  9693 ;;		None
  9694 ;; Tracked objects:
  9695 ;;		On entry : 0/0
  9696 ;;		On exit  : 0/0
  9697 ;;		Unchanged: 0/0
  9698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9699 ;;      Params:         0       0       0       0       0       0
  9700 ;;      Locals:         0       0       0       0       0       0
  9701 ;;      Temps:          0       0       0       0       0       0
  9702 ;;      Totals:         0       0       0       0       0       0
  9703 ;;Total ram usage:        0 bytes
  9704 ;; Hardware stack levels used: 1
  9705 ;; This function calls:
  9706 ;;		Nothing
  9707 ;; This function is called by:
  9708 ;;		_INTERRUPT_InterruptManager
  9709 ;; This function uses a non-reentrant model
  9710 ;;
  9711                           
  9712     0002                     _PIN_MANAGER_IOC:	
  9713                           ;psect for function _PIN_MANAGER_IOC
  9714                           
  9715                           
  9716                           ;incstack = 0
  9717                           ; Regs used in _PIN_MANAGER_IOC: []
  9718     0002  0008               	return
  9719     0003                     __end_of_PIN_MANAGER_IOC:
  9720     007E                     btemp	set	126	;btemp
  9721     007E                     int$flags	set	126
  9722     007E                     wtemp0	set	126
  9723                           
  9724                           	psect	config
  9725                           
  9726                           ;Config register CONFIG1 @ 0x8007
  9727                           ;	Oscillator Selection
  9728                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  9729                           ;	Watchdog Timer Enable
  9730                           ;	WDTE = OFF, WDT disabled
  9731                           ;	Power-up Timer Enable
  9732                           ;	PWRTE = OFF, PWRT disabled
  9733                           ;	MCLR Pin Function Select
  9734                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  9735                           ;	Flash Program Memory Code Protection
  9736                           ;	CP = OFF, Program memory code protection is disabled
  9737                           ;	Data Memory Code Protection
  9738                           ;	CPD = OFF, Data memory code protection is disabled
  9739                           ;	Brown-out Reset Enable
  9740                           ;	BOREN = ON, Brown-out Reset enabled
  9741                           ;	Clock Out Enable
  9742                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  9743                           ;	Internal/External Switchover
  9744                           ;	IESO = ON, Internal/External Switchover mode is enabled
  9745                           ;	Fail-Safe Clock Monitor Enable
  9746                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  9747     8007                     	org	32775
  9748     8007  3FE4               	dw	16356
  9749                           
  9750                           ;Config register CONFIG2 @ 0x8008
  9751                           ;	Flash Memory Self-Write Protection
  9752                           ;	WRT = OFF, Write protection off
  9753                           ;	PLL Enable
  9754                           ;	PLLEN = OFF, 4x PLL disabled
  9755                           ;	Stack Overflow/Underflow Reset Enable
  9756                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  9757                           ;	Brown-out Reset Voltage Selection
  9758                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  9759                           ;	In-Circuit Debugger Mode
  9760                           ;	DEBUG = 0x1, unprogrammed default
  9761                           ;	Low-Voltage Programming Enable
  9762                           ;	LVP = ON, Low-voltage programming enabled
  9763     8008                     	org	32776
  9764     8008  3EFF               	dw	16127

Data Sizes:
    Strings     0
    Constant    204
    Data        22
    BSS         68
    Persistent  40
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     51      80
    BANK1            80     34      79
    BANK2            80      0      24
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), NULL(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), NULL(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), NULL(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    TMR1_GateInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> mede_height(), TMR1_DefaultGateInterruptHandler(), NULL(), 

    TMR1_SetGateInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> mede_height(), TMR1_DefaultGateInterruptHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _mede_height->___flmul
    i1___fltol->___flmul
    ___flmul->__Umul8_16
    _TMR1_Reload->_TMR1_WriteTimer

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _TMR1_GATE_ISR->_mede_height
    _mede_height->___xxtofl
    i1___fltol->___flmul
    ___xxtofl->i1___fltol

Critical Paths under _main in BANK1

    _setaPorta->_daUmPasso
    _fluxpos->_daUmPasso
    _daUmPasso->_definePassoMotor
    _envia_Tx->___fltol
    _controlchoose->_pwmcontrol
    _pwmcontrol->___atdiv
    ___atdiv->___tmul
    _fluxcontrol->___tmul
    _analisa_Rx->_EPWM1_LoadDutyValue
    _TMR1_Initialize->_TMR1_SetGateInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    5463
                                             33 BANK1      1     1      0
                  _ADC_GetConversion
                        _EUSART_Read
                 _EUSART_is_rx_ready
                  _SYSTEM_Initialize
                     _TMR0_ReadTimer
       _TMR1_SetGateInterruptHandler
                     _TMR4_StopTimer
            _TMR6_LoadPeriodRegister
                    _TMR6_WriteTimer
                         _analisa_Rx
                      _controlchoose
                           _envia_Tx
                            _fluxpos
                          _setaPorta
 ---------------------------------------------------------------------------------
 (1) _setaPorta                                            1     1      0     306
                                              4 BANK1      1     1      0
               _CMP1_GetOutputStatus
                          _daUmPasso
 ---------------------------------------------------------------------------------
 (2) _CMP1_GetOutputStatus                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _fluxpos                                              0     0      0     306
                          _daUmPasso
 ---------------------------------------------------------------------------------
 (2) _daUmPasso                                            1     1      0     306
                                              3 BANK1      1     1      0
                   _definePassoMotor
 ---------------------------------------------------------------------------------
 (3) _definePassoMotor                                     3     2      1     240
                                              0 BANK1      3     2      1
 ---------------------------------------------------------------------------------
 (1) _envia_Tx                                             0     0      0     427
                       _EUSART_Write
                            ___fltol
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     405
                                              0 BANK1     10     6      4
 ---------------------------------------------------------------------------------
 (2) _EUSART_Write                                         1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _controlchoose                                        0     0      0    3421
                    _TMR4_StartTimer
                        _fluxcontrol
                         _pwmcontrol
 ---------------------------------------------------------------------------------
 (2) _pwmcontrol                                          12    12      0    2281
                                             21 BANK1     12    12      0
                _EPWM1_LoadDutyValue
                            ___atdiv
                            ___lwdiv
                             ___tmul
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     414
                                              0 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (3) ___atdiv                                             12     6      6     452
                                              9 BANK1     12     6      6
                             ___tmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _fluxcontrol                                          6     6      0    1140
                                              9 BANK1      6     6      0
                             ___tmul
 ---------------------------------------------------------------------------------
 (3) ___tmul                                               9     3      6    1140
                                              0 BANK1      9     3      6
 ---------------------------------------------------------------------------------
 (2) _TMR4_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _analisa_Rx                                           0     0      0     272
                _EPWM1_LoadDutyValue
 ---------------------------------------------------------------------------------
 (3) _EPWM1_LoadDutyValue                                  4     2      2     272
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (1) _TMR6_WriteTimer                                      1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _TMR6_LoadPeriodRegister                              1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _TMR4_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR0_ReadTimer                                       1     1      0      23
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     468
                     _ADC_Initialize
                    _CMP1_Initialize
                     _DAC_Initialize
                   _EPWM1_Initialize
                  _EUSART_Initialize
                     _FVR_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
                    _TMR6_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     174
       _TMR1_SetGateInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetGateInterruptHandler                         2     0      2     174
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     294
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _EPWM1_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DAC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CMP1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_is_rx_ready                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Read                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion                                    4     2      2      22
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0    3622
                    _PIN_MANAGER_IOC
                      _TMR1_GATE_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR1_GATE_ISR                                        0     0      0    3622
                                NULL *
   _TMR1_DefaultGateInterruptHandler *
                        _mede_height *
 ---------------------------------------------------------------------------------
 (6) _mede_height                                          6     6      0    3622
                                             45 BANK0      6     6      0
                     _TMR1_ReadTimer
                        _TMR1_Reload
                            ___flmul
                           ___xxtofl
                          i1___fltol
                          i1___lwdiv
 ---------------------------------------------------------------------------------
 (7) i1___lwdiv                                            8     4      4     214
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (7) i1___fltol                                           10     6      4     281
                                             21 BANK0     10     6      4
                            ___flmul (ARG)
                          i1___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (7) ___xxtofl                                            14    10      4     474
                                             31 BANK0     14    10      4
                          i1___fltol (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flmul                                             26    18      8    2418
                                              9 COMMON     5     5      0
                                              0 BANK0     21    13      8
                          __Umul8_16
                          i1___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (8) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (7) _TMR1_Reload                                          0     0      0     166
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (8) _TMR1_WriteTimer                                      2     0      2     166
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (7) _TMR1_ReadTimer                                      11     9      2      69
                                              0 COMMON    11     9      2
 ---------------------------------------------------------------------------------
 (6) _TMR1_DefaultGateInterruptHandler                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _PIN_MANAGER_IOC                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion
   _EUSART_Read
   _EUSART_is_rx_ready
   _SYSTEM_Initialize
     _ADC_Initialize
     _CMP1_Initialize
     _DAC_Initialize
     _EPWM1_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _FVR_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
     _TMR1_Initialize
       _TMR1_SetGateInterruptHandler
     _TMR2_Initialize
     _TMR4_Initialize
     _TMR6_Initialize
     _WDT_Initialize
   _TMR0_ReadTimer
   _TMR1_SetGateInterruptHandler
   _TMR4_StopTimer
   _TMR6_LoadPeriodRegister
   _TMR6_WriteTimer
   _analisa_Rx
     _EPWM1_LoadDutyValue
   _controlchoose
     _TMR4_StartTimer
     _fluxcontrol
       ___tmul
     _pwmcontrol
       _EPWM1_LoadDutyValue
       ___atdiv
         ___tmul (ARG)
       ___lwdiv
       ___tmul
   _envia_Tx
     _EUSART_Write
     ___fltol
   _fluxpos
     _daUmPasso
       _definePassoMotor
   _setaPorta
     _CMP1_GetOutputStatus
     _daUmPasso

 _INTERRUPT_InterruptManager (ROOT)
   _PIN_MANAGER_IOC
   _TMR1_GATE_ISR
     NULL(Fake) *
     _TMR1_DefaultGateInterruptHandler *
     _mede_height *
       _TMR1_ReadTimer
       _TMR1_Reload
         _TMR1_WriteTimer
       ___flmul
         __Umul8_16
         i1___lwdiv (ARG)
       ___xxtofl
         i1___fltol (ARG)
           ___flmul (ARG)
           i1___lwdiv (ARG)
       i1___fltol
       i1___lwdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      C5       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     33      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     22      4F       8       98.8%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      18      10       30.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      C5      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Mon Sep 09 16:39:33 2024

                            ??_CMP1_Initialize 00CD                               ___atdiv@quotient 00DF  
                                           _dc 00BB                         __end_of_FVR_Initialize 0B68  
                              _timer0ReloadVal 0069                            __Umul8_16@word_mpld 0076  
                                          l240 07F4                                            l333 0C95  
                                          l247 0BE2                                            l601 0E0B  
                                          l611 0E10                                            l620 0E16  
                                          l705 043D                                            l641 0E33  
                                          l617 0E14                                            l651 0E38  
                                          l635 0E1F                                            l716 032B  
                                          l660 0E3E                                            l629 0E1B  
                                          l657 0E3C                                            l586 0CCA  
                                          l669 0E43                                            _PR2 001B  
                                          _PR4 0416                                            _PR6 041D  
                              _timer1ReloadVal 00C3                                            _kdf 012C  
                                          _kif 012F                                            _kdp 0123  
                                          _kip 0126                                            _kpf 006A  
                                          _vRx 00BD                                            _vTx 00BF  
                                          _kpp 0129                 ?_EUSART_SetFramingErrorHandler 00CD  
                                 i1___fltol@f1 0035                                   ?_mede_height 0070  
                              _TMR2_Initialize 0BD9                                            wreg 0009  
                                 ___flmul@aexp 0029                                   ___flmul@bexp 002E  
     __end_of_TMR1_DefaultGateInterruptHandler 0004             ??_TMR1_DefaultGateInterruptHandler 0070  
            ?_TMR1_DefaultGateInterruptHandler 0070               _TMR1_DefaultGateInterruptHandler 0003  
                                 ___flmul@sign 0028                                   ___flmul@temp 0033  
                                 ___flmul@prod 002F                                   ?_EUSART_Read 0070  
                                 ___fltol@exp1 00D6                                           l1040 0F2F  
                                         l1124 0F06                                           l3015 0575  
                                         l3007 0544                                           l3009 0547  
                                         l2321 0E2F                                           l3107 06C1  
                                         l3029 05BC                                           l3037 05C3  
                                         l2405 0DF8                                           l3109 06CC  
                                         l3117 06B7                                           l2335 0D54  
                                         l2327 0E49                                           l2319 0E21  
                                         l3143 06FF                                           l3119 06DE  
                                         l3127 06EB                                           l2409 0E01  
                                         l2329 0E57                                           l2339 0D5C  
                                         l3163 0726                                           l3155 0716  
                                         l2365 0F4A                                           l2357 0F3D  
                                         l2383 0F85                                           l2375 0F70  
                                         l2367 0F57                                           l3095 06AB  
                                         l3087 06A1                                           l2801 02B0  
                                         l2379 0F7A                                           l2397 0DDA  
                                         l2813 0333                                           l2805 02C2  
                                         l2901 0F13                                           l2831 03B1  
                                         l2399 0DE6                                           l2823 0368  
                                         l2815 0344                                           l2833 03BC  
                                         l2817 034F                                           l2809 0328  
                                         l2819 0356                                           l2845 0419  
                                         l2837 0405                                           l2781 0D17  
                                         l2927 07FE                                           l2847 0424  
                                         l2839 0409                                           l2871 0EC8  
                                         l2849 042B                                           l2793 026D  
                                         l2785 0D1E                                           l2795 0278  
                                         l2891 0EF4                                           l2875 0ED1  
                                         l2787 0D24                                           l2971 07DC  
                                         l2893 0F02                                           l2957 0CB6  
                                         l2991 0512                                           l2799 02A9  
                                         l2983 0C38                                           l2975 07E8  
                                         l2967 07D0                                           l2987 0C3F  
                                         l2999 0532                                           _LATA 010C  
                                         _LATB 010D                                           u2421 0250  
                                         u2422 0251                                           u2423 025A  
                                         u2424 025B                                           u1625 0D5D  
                                         u2521 0385                                           u1705 0F58  
                                         u2522 0386                                           u1635 0D63  
                                         u2523 038F                                           u1715 0F67  
                                         u2524 0390                                           u1725 0F71  
                                         u1805 0DF9                                           u3077 0712  
                                         u2615 0EDA                                           u3087 0CC4  
                                         u3097 0C90                                           u1585 0CE0  
                                         u2475 02EB                                           u1685 0F4D  
                                         u1765 0DDD                                           u2645 0EF5  
                                         u2920 069F                                           u1785 0DE7  
                                         u1795 0DF1                                           u2675 0F0A  
                                         u2765 07CA                                           u2775 07D6  
                                         u2785 07E2                                           u2795 07EE  
                                         _TMR0 0015                                           _TMR2 001A  
                                         _TMR4 0415                                           _TMR6 041C  
                                         _WPUA 020C                                           _WPUB 020D  
                            ??_TMR6_WriteTimer 00CD                  ?_TMR1_SetGateInterruptHandler 00CD  
                                         _main 068D                                           _flux 005B  
                                         fsr0h 0005                                           fsr1h 0007  
                                         indf0 0000                                           fsr0l 0004  
                                         indf1 0001                                           fsr1l 0006  
                                         btemp 007E                                           start 0019  
                        ??_EPWM1_LoadDutyValue 00CF                        __end_of_TMR0_Initialize 0BF4  
                              ?_FVR_Initialize 0070                                  ?_EUSART_Write 0070  
                __end_of_OSCILLATOR_Initialize 0BA9                                  ___fltol@sign1 00D5  
                                        ?_main 0070                                __end_of___atdiv 0F8C  
                              __end_of___flmul 0242                                __end_of___fltol 0F22  
                                        _T1CON 0018                                          _T2CON 001C  
                                        _T4CON 0417                                          _T6CON 041E  
                              __end_of___lwdiv 0E06                                          i1l180 0017  
                                        i1l174 000D                                          _RCREG 0199  
                                        _RCSTA 019D                                          _TMR1H 0017  
                                        _TMR1L 0016                                          _TRISA 008C  
                                        _TRISB 008D                                   ?_fluxcontrol 0070  
                                        _TXREG 019A                                          _TXSTA 019E  
                              _TMR4_Initialize 0BF4                        __end_of_PIN_MANAGER_IOC 0003  
                               _WDT_Initialize 0B68                                          _error 00B0  
                    ??_TMR6_LoadPeriodRegister 00CD                                          _passo 00C7  
                              __end_of_fluxpos 07F4                                  _controlchoice 00CB  
                                _controlchoose 0C30                        __end_of_TMR1_Initialize 0CB6  
                                        pclath 000A                                 i1___fltol@exp1 003E  
                                        status 0003                                          wtemp0 007E  
                             daUmPasso@sentido 00D0                                _TMR1_WriteTimer 0C21  
                             ??_DAC_Initialize 00CD                   __end_of_CMP1_GetOutputStatus 0B70  
                              __initialization 001B                                   __end_of_main 072C  
                               ??_EUSART_Write 00CD                        __end_of_TMR2_Initialize 0BE1  
                  ?_INTERRUPT_InterruptManager 0070                                         ??_main 00EE  
                       __end_of_WDT_Initialize 0B6C                                _TMR6_Initialize 0BFE  
            _EUSART_DefaultFramingErrorHandler 0000                                         _ADCON0 009D  
                                       _ADCON1 009E                     _EUSART_OverrunErrorHandler 0134  
                               ?_controlchoose 0070                                         _ADRESH 009C  
                                       _ADRESL 009B                                         _CCPR1H 0292  
                                       _CCPR1L 0291                                         _ANSELA 018C  
                                       _ANSELB 018D                     __end_of_EUSART_is_rx_ready 0B79  
                                       _BORCON 0116                                         _T1GCON 0019  
                      TMR1_WriteTimer@timerVal 0070                                         i1l1124 0EA5  
                                       i1l1332 0235                                         i1l1370 077D  
                                       i1l1339 0CFB                                         i1l1364 0749  
                                       i1l2511 01B8                                         i1l2431 0065  
                                       i1l2281 0C2B                                         i1l2521 01D1  
                                       i1l1377 0791                                         i1l1378 079B  
                                       i1l2531 01FA                                         i1l2427 005B  
                                       i1l2603 0E70                                         i1l2541 0226  
                                       i1l2517 01CF                                         i1l2509 01A1  
                                       i1l2445 007C                                         i1l2429 005D  
                                       i1l2621 0EA1                                         i1l2287 0CF5  
                                       i1l2535 020F                                         i1l2447 007E  
                                       i1l2457 0094                                         i1l2449 0086  
                                       i1l2571 076A                                         i1l2619 0E93  
                                       i1l2651 0DC4                                         i1l2643 0DA6  
                                       i1l2581 0782                                         u210_25 0763  
                                       i1l2565 0758                                         i1l2629 0EB2  
                                       i1l2645 0DB2                                         i1l2559 0741  
                                       i1l2655 0DCD                                         i1l2593 07B6  
                                       i1l2569 075A                                         i1l2579 078F  
                                       u203_25 01E8                                         i1l2599 0E67  
                                       i1l2863 05FC                                         i1l2865 0638  
                                       u204_25 0203                                         u212_25 0777  
                                       u205_25 0219                                         u214_25 0789  
                                       u222_25 0E79                                         u232_25 0DA9  
                                       u225_25 0E94                                         u218_25 07A3  
                                       u234_25 0DB3                                         _FVRCON 0117  
                                       u235_25 0DBD                                         u156_25 0CFC  
                                       u228_25 0EA9                                         u236_25 0DC5  
                                       u190_25 0101                                         u191_25 012A  
                                       u192_25 0174                                         u193_25 0190  
                                       u194_25 01A4                                         u196_25 01AD  
                                       _OSCCON 0099                                         _SPBRGH 019C  
                                       _SPBRGL 019B                                         _WDTCON 0097  
                             __end_of___xxtofl 07BF                                _TMR4_StartTimer 0B61  
                        __end_of_TMR1_GATE_ISR 0C13                 ??_TMR1_SetGateInterruptHandler 00CF  
                                 _CCPTMRS0bits 029E                                   ?_TMR1_Reload 0070  
                                       ___tmul 0D4E                                      ??___atdiv 00DC  
                                    ??___flmul 0079                                      ??___fltol 00D1  
                             __end_of_envia_Tx 1000                                      ??___lwdiv 00D1  
                                       _height 00B3                               ?_TMR0_Initialize 0070  
                                       _errorp 00AD                        __end_of_TMR4_Initialize 0BFE  
                                       _outpre 00A4                                         _output 00C1  
                            __end_ofi1___fltol 0EC1                              __end_ofi1___lwdiv 0DD2  
                                    ??_fluxpos 00D1                                ?_WDT_Initialize 0070  
                              i1___fltol@sign1 003D                       ADC_GetConversion@channel 00D0  
 TMR1_SetGateInterruptHandler@InterruptHandler 00CD                               ?_PIN_MANAGER_IOC 0070  
                      __end_of_TMR1_WriteTimer 0C30                               ?_TMR1_Initialize 0070  
                                 ___xxtofl@arg 0049                                   ___xxtofl@exp 0048  
                            _SYSTEM_Initialize 0D74                                   ___xxtofl@val 003F  
                      __end_of__initialization 0042                                _CMP1_Initialize 0B7E  
                           ?_SYSTEM_Initialize 0070                                     ___fltol@f1 00CD  
                            ?_EPWM1_Initialize 0070                                 __pcstackCOMMON 0070  
                                 __pidataBANK0 0B70                                   __pidataBANK2 0C42  
                          ??_SYSTEM_Initialize 00CF                             ??_EPWM1_Initialize 00CD  
                             ?_TMR2_Initialize 0070                        __end_of_TMR6_Initialize 0C08  
                               _OPTION_REGbits 0095                                _TMR6_WriteTimer 0B90  
                              ??_controlchoose 00EE                ??_EUSART_SetOverrunErrorHandler 00CF  
                         _CMP1_GetOutputStatus 0B6C                        __end_of_TMR4_StartTimer 0B64  
                    __end_of_SYSTEM_Initialize 0D9E                                     __pbssBANK0 0053  
                                   __pbssBANK1 00A0                           __end_of_EUSART_Write 0BEA  
                                   _analisa_Rx 0511                              __end_of__Umul8_16 0D0A  
                             ??_FVR_Initialize 00CD                                     __pmaintext 068D  
                                      ?___tmul 00CD                                     __pintentry 0004  
                                      _DACCON0 0118                                        _DACCON1 0119  
                                      _CM1CON0 0111                                        _CM1CON1 0112  
                                      _CCP1CON 0293                                        _ECCP1AS 0295  
                                      _BAUDCON 019F                               ?_TMR4_Initialize 0070  
                            __end_of_daUmPasso 0D2A                                        _APFCON0 011D  
                                      _APFCON1 011E                               _definePassoMotor 0E06  
                                    ?___xxtofl 003F                          ?_CMP1_GetOutputStatus 0070  
                                      _OSCTUNE 0098                                        _PWM1CON 0294  
                      __end_of_CMP1_Initialize 0B84                       ??_EUSART_SetErrorHandler 00CF  
                             ?_TMR1_WriteTimer 0070                         definePassoMotor@passom 00CF  
                                    ?_envia_Tx 0070                    __end_of_EPWM1_LoadDutyValue 0CEB  
                                   _first_read 006D                           _ADC_InterruptHandler 0065  
                                      ___atdiv 0F22                                        ___flmul 0046  
                                      ___fltol 0EC1                                        ___lwdiv 0DD2  
                      __end_of_TMR6_WriteTimer 0B96                                        _ballset 005E  
                             ?_TMR6_Initialize 0070                       TMR1_ReadTimer@readValLow 007A  
                                      __ptext1 0CB6                                        __ptext2 0B6C  
                                      __ptext3 07BF                                        __ptext4 0D0A  
                                      __ptext5 0E06                                        __ptext6 0F8C  
                                      __ptext7 0EC1                                        __ptext8 0BE1  
                                      __ptext9 0C30                      TMR1_ReadTimer@readValHigh 0079  
                                    _T1CONbits 0018                                        _countRx 00CA  
                            i1___lwdiv@divisor 0070                          _OSCILLATOR_Initialize 0BA2  
                            i1___lwdiv@counter 0077                                        _fluxpos 07BF  
                                   ??___xxtofl 0043                                      _CMOUTbits 0115  
                                    _T4CONbits 0417                       ??_PIN_MANAGER_Initialize 00CD  
                                      _sentido 0068                                        clrloop0 0B97  
                             ?_TMR4_StartTimer 0070                                     _passo_ctrl 00C5  
                         end_of_initialization 0042                                     ??_envia_Tx 00D7  
        __end_of_EUSART_SetOverrunErrorHandler 0BD1                  _EUSART_SetOverrunErrorHandler 0BC9  
                            __end_of_setaPorta 0CD0                                        init_ram 0B9C  
                                      initloop 0B9D                                    ?_analisa_Rx 0070  
                            _EUSART_Initialize 0D2A                             ?_EUSART_Initialize 0070  
                        TMR0_ReadTimer@readVal 00CD                                      _RCSTAbits 019D  
                           _EUSART_is_rx_ready 0B74                                 _TMR0_ReadTimer 0B84  
                          ??_EUSART_Initialize 00CF                               ??_WDT_Initialize 00CD  
                          ?_EUSART_is_rx_ready 0070                         ??_CMP1_GetOutputStatus 00CD  
                               _TMR1_ReadTimer 0C6B                       ?_TMR6_LoadPeriodRegister 0070  
                                ___xxtofl@sign 0047                                      i1___fltol 0E60  
                                    i1___lwdiv 0D9E                               ?_CMP1_Initialize 0070  
                                   _pwmcontrol 0242                                    ___flmul@grs 002A  
                    __end_of_EUSART_Initialize 0D4E                           ??_EUSART_is_rx_ready 00CD  
                       __end_of_TMR0_ReadTimer 0B8A                     _EUSART_DefaultErrorHandler 0000  
                             ?_TMR6_WriteTimer 0070                                 __end_of___tmul 0D74  
                                 _EUSART_Write 0BE1                                 _ADC_Initialize 0BB1  
                       ?_OSCILLATOR_Initialize 0070                         __end_of_TMR1_ReadTimer 0C83  
                                ??_mede_height 004D                            start_initialization 001B  
                                ??_EUSART_Read 00CD                                     ?i1___fltol 0035  
                                   ?i1___lwdiv 0070                   EPWM1_LoadDutyValue@dutyValue 00CD  
                     __end_of_definePassoMotor 0E60                 ?_EUSART_SetOverrunErrorHandler 00CD  
                               _TMR4_StopTimer 0B5E                     _EUSART_FramingErrorHandler 0136  
                              ?_TMR0_ReadTimer 0070                                       ??___tmul 00D3  
                       _EUSART_SetErrorHandler 0BB9                         __end_of_ADC_Initialize 0BB9  
                                    __Umul8_16 0CEB                                    __pdataBANK0 006A  
                                  __pdataBANK2 0120                __end_of_TMR6_LoadPeriodRegister 0B90  
                               ___tmul@product 00D3                                ?_TMR1_ReadTimer 0070  
                                ??_fluxcontrol 00D6                                      ___flmul@a 0024  
                                    _daUmPasso 0D0A                                      ___flmul@b 0020  
                                    ___latbits 0001                                  __pcstackBANK0 0020  
                                __pcstackBANK1 00CD                          __end_of_controlchoose 0C42  
                          __end_of_mede_height 068D                                    ?_pwmcontrol 0070  
                          __end_of_EUSART_Read 0800                                      __pnvBANK0 006E  
                                    __pnvBANK2 0132                         __end_of_TMR4_StopTimer 0B61  
                             ___lwdiv@dividend 00CF                         _PIN_MANAGER_Initialize 0C54  
                                _TMR1_GATE_ISR 0C08                                       ?___atdiv 00D6  
                                     ?___flmul 0020                                       ?___fltol 00CD  
                                   ?__Umul8_16 0070                                       ?___lwdiv 00CD  
                              ?_ADC_Initialize 0070                                      _fim_curso 00C6  
                 ??_INTERRUPT_InterruptManager 007E                                       ?_fluxpos 0070  
                                   ?_daUmPasso 0070                                      _nao_salva 00C8  
                                  ??i1___fltol 0039                               ___lwdiv@quotient 00D2  
                                  ??i1___lwdiv 0074                                      _func_mode 0067  
                          __end_of_fluxcontrol 0445                              ??_TMR0_Initialize 00CD  
                                     _LATAbits 010C         EUSART_SetErrorHandler@interruptHandler 00CD  
                                 ??_analisa_Rx 00D1                                      clear_ram0 0B96  
                                     _PIE1bits 0091                              _eusartRxLastError 00CC  
                              ?_TMR4_StopTimer 0070                                      _setaPorta 0CB6  
                               ?_TMR1_GATE_ISR 0070                                       _PIR1bits 0011  
              ??_EUSART_SetFramingErrorHandler 00CF                                       _PIR3bits 0013  
                                ??_TMR1_Reload 0072                                      _sp_height 0063  
                                    _tempo_voo 0061              _EUSART_DefaultOverrunErrorHandler 0000  
                                     _PSTR1CON 0296                              ??_PIN_MANAGER_IOC 0070  
                    _TMR1_GateInterruptHandler 006E                              ??_TMR1_Initialize 00CF  
                                   _ADCON0bits 009D                                 _DAC_Initialize 0B79  
                                  _mede_height 05D3                               _EPWM1_Initialize 0C13  
                      definePassoMotor@sentido 00CD                            ___tmul@multiplicand 00D0  
                                    _outputsum 00A7                             __end_of_analisa_Rx 05D3  
                                  _EUSART_Read 07F4                              ??_TMR2_Initialize 00CD  
                          __end_of_lookupTable 0511                                     ?_setaPorta 0070  
                            _ADC_GetConversion 0C83                          TMR1_ReadTimer@readVal 0077  
                      ??_OSCILLATOR_Initialize 00CD                                    ??__Umul8_16 0072  
                          _EUSART_ErrorHandler 0132                             ?_ADC_GetConversion 00CD  
                       __end_of_DAC_Initialize 0B7E                                       _adc_temp 00B5  
                          __end_of_TMR1_Reload 0BB1                                       _balldist 00AA  
                          ??_ADC_GetConversion 00CF                                       ___xxtofl 072C  
                                  ??_daUmPasso 00D0                                    _fluxcontrol 0377  
                              ___lwdiv@divisor 00CD                                ___lwdiv@counter 00D4  
                                     __ptext10 0242                                       __ptext11 0DD2  
                                     __ptext20 0B5E                                       __ptext12 0F22  
                                     __ptext21 0B84                                       __ptext13 0377  
                                     __ptext30 0C54                                       __ptext22 0D74  
                                     __ptext14 0D4E                                       __ptext31 0BA2  
                                     __ptext23 0B68                                       __ptext15 0B61  
                                     __ptext40 0BB1                                       __ptext32 0B64  
                                     __ptext24 0BFE                                       __ptext16 0511  
                                     __ptext41 0B74                                       __ptext33 0D2A  
                                     __ptext25 0BF4                                       __ptext17 0CD0  
                                     __ptext50 072C                                       __ptext42 07F4  
                                     __ptext34 0BC9                                       __ptext26 0BD9  
                                     __ptext18 0B90                                       __ptext51 0046  
                                     __ptext43 0C83                                       __ptext35 0BC1  
                                     __ptext27 0C9C                                       __ptext19 0B8A  
                                     __ptext52 0CEB                                       __ptext36 0BB9  
                                     __ptext28 0BD1                                       __ptext53 0BA9  
                                     __ptext45 0C08                                       __ptext37 0C13  
                                     __ptext29 0BEA                                       __ptext54 0C21  
                                     __ptext46 0003                                       __ptext38 0B79  
                                     __ptext55 0C6B                                       __ptext47 05D3  
                                     __ptext39 0B7E                                       __ptext56 0002  
                                     __ptext48 0D9E                                       __ptext49 0E60  
                                     _bufferRx 0053                             i1___lwdiv@dividend 0072  
                                     _envia_Tx 0F8C                                       _count_Tx 00C9  
                      TMR6_WriteTimer@timerVal 00CD               TMR6_LoadPeriodRegister@periodVal 00CD  
                            ??_TMR4_Initialize 00CD                               ??_TMR0_ReadTimer 00CD  
                              ??_TMR1_GATE_ISR 007E                      __end_of_ADC_GetConversion 0C9C  
                      ?_EUSART_SetErrorHandler 00CD                              ?_definePassoMotor 00CD  
EUSART_SetOverrunErrorHandler@interruptHandler 00CD                             ??_definePassoMotor 00CE  
                             ??_TMR1_ReadTimer 0072                                       int$flags 007E  
                                     _position 00B9             __end_of_INTERRUPT_InterruptManager 0019  
                   _INTERRUPT_InterruptManager 0004          __end_of_EUSART_SetFramingErrorHandler 0BC9  
                _EUSART_SetFramingErrorHandler 0BC1                                ?_DAC_Initialize 0070  
                            ??_TMR1_WriteTimer 0072                             i1___lwdiv@quotient 0075  
                                   _INTCONbits 000B                                  _avg_tempo_voo 00A0  
                                 ??_pwmcontrol 00E2                                    _lookupTable 0445  
                                     intlevel1 0000                        ?_PIN_MANAGER_Initialize 0070  
                            ??_TMR6_Initialize 00CD                 __end_of_EUSART_SetErrorHandler 0BC1  
                                  ??_setaPorta 00D1                               ??_ADC_Initialize 00CD  
                                  _TMR1_Reload 0BA9                              ___tmul@multiplier 00CD  
EUSART_SetFramingErrorHandler@interruptHandler 00CD                              ??_TMR4_StartTimer 00CD  
                                __pstringtext1 0445                             __end_of_pwmcontrol 0377  
                               _FVR_Initialize 0B64                         __Umul8_16@multiplicand 0070  
                                   _OPTION_REG 0095                                _TMR0_Initialize 0BEA  
                                  _timecontrol 0120                            _EPWM1_LoadDutyValue 0CD0  
                             ___atdiv@dividend 00D9                             EUSART_Write@txData 00CD  
         __end_of_TMR1_SetGateInterruptHandler 0BD9                   _TMR1_SetGateInterruptHandler 0BD1  
               __end_of_PIN_MANAGER_Initialize 0C6B                               ??_TMR4_StopTimer 00CD  
                      _TMR6_LoadPeriodRegister 0B8A                                    _sp_position 00B7  
                              ___atdiv@divisor 00D6                                _PIN_MANAGER_IOC 0002  
                         __Umul8_16@multiplier 0078                                ___atdiv@counter 00DD  
                              _TMR1_Initialize 0C9C                       __end_of_EPWM1_Initialize 0C21  
                         ?_EPWM1_LoadDutyValue 00CD                              __Umul8_16@product 0074  
                                 ___atdiv@sign 00DE  
