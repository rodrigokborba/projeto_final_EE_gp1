

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Thu Sep 05 17:01:16 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og9 
     1                           	processor	16F1827
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     6                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,noexec
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    14                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    15                           	psect	inittext,global,class=CODE,delta=2
    16                           	psect	clrtext,global,class=CODE,delta=2
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    18                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    21                           	psect	text1,local,class=CODE,merge=1,delta=2
    22                           	psect	text2,local,class=CODE,merge=1,delta=2
    23                           	psect	text3,local,class=CODE,merge=1,delta=2
    24                           	psect	text4,local,class=CODE,merge=1,delta=2
    25                           	psect	text5,local,class=CODE,merge=1,delta=2
    26                           	psect	text6,local,class=CODE,merge=1,delta=2
    27                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text8,local,class=CODE,merge=1,delta=2
    29                           	psect	text9,local,class=CODE,merge=1,delta=2
    30                           	psect	text10,local,class=CODE,merge=1,delta=2
    31                           	psect	text11,local,class=CODE,merge=1,delta=2
    32                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text14,local,class=CODE,merge=1,delta=2
    35                           	psect	text15,local,class=CODE,merge=1,delta=2
    36                           	psect	text16,local,class=CODE,merge=1,delta=2
    37                           	psect	text17,local,class=CODE,merge=1,delta=2
    38                           	psect	text18,local,class=CODE,merge=1,delta=2
    39                           	psect	text19,local,class=CODE,merge=1,delta=2
    40                           	psect	text20,local,class=CODE,merge=1,delta=2
    41                           	psect	text21,local,class=CODE,merge=1,delta=2
    42                           	psect	text22,local,class=CODE,merge=1,delta=2
    43                           	psect	text23,local,class=CODE,merge=1,delta=2
    44                           	psect	text24,local,class=CODE,merge=1,delta=2
    45                           	psect	text25,local,class=CODE,merge=1,delta=2
    46                           	psect	text26,local,class=CODE,merge=1,delta=2
    47                           	psect	text27,local,class=CODE,merge=1,delta=2
    48                           	psect	text28,local,class=CODE,merge=1,delta=2
    49                           	psect	text29,local,class=CODE,merge=1,delta=2
    50                           	psect	text30,local,class=CODE,merge=1,delta=2
    51                           	psect	text31,local,class=CODE,merge=1,delta=2
    52                           	psect	text32,local,class=CODE,merge=1,delta=2
    53                           	psect	text33,local,class=CODE,merge=1,delta=2
    54                           	psect	text34,local,class=CODE,merge=1,delta=2
    55                           	psect	text35,local,class=CODE,merge=1,delta=2
    56                           	psect	text36,local,class=CODE,merge=1,delta=2
    57                           	psect	text37,local,class=CODE,merge=1,delta=2
    58                           	psect	text38,local,class=CODE,merge=1,delta=2
    59                           	psect	text39,local,class=CODE,merge=1,delta=2
    60                           	psect	text40,local,class=CODE,merge=1,delta=2
    61                           	psect	text41,local,class=CODE,merge=1,delta=2
    62                           	psect	text42,local,class=CODE,merge=1,delta=2
    63                           	psect	intentry,global,class=CODE,delta=2
    64                           	psect	text44,local,class=CODE,merge=1,delta=2
    65                           	psect	text45,local,class=CODE,merge=1,delta=2
    66                           	psect	text46,local,class=CODE,merge=1,delta=2
    67                           	psect	text47,local,class=CODE,merge=1,delta=2
    68                           	psect	text48,local,class=CODE,merge=1,delta=2,group=1
    69                           	psect	text49,local,class=CODE,merge=1,delta=2,group=1
    70                           	psect	text50,local,class=CODE,merge=1,delta=2,group=1
    71                           	psect	text51,local,class=CODE,merge=1,delta=2,group=1
    72                           	psect	text52,local,class=CODE,merge=1,delta=2
    73                           	psect	text53,local,class=CODE,merge=1,delta=2
    74                           	psect	text54,local,class=CODE,merge=1,delta=2
    75                           	psect	text55,local,class=CODE,merge=1,delta=2
    76                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    77                           	dabs	1,0x7E,2
    78     0000                     
    79                           ; Generated 07/09/2023 GMT
    80                           ; 
    81                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    82                           ; All rights reserved.
    83                           ; 
    84                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    85                           ; 
    86                           ; Redistribution and use in source and binary forms, with or without modification, are
    87                           ; permitted provided that the following conditions are met:
    88                           ; 
    89                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    90                           ;        conditions and the following disclaimer.
    91                           ; 
    92                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    93                           ;        of conditions and the following disclaimer in the documentation and/or other
    94                           ;        materials provided with the distribution. Publication is not required when
    95                           ;        this file is used in an embedded application.
    96                           ; 
    97                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    98                           ;        software without specific prior written permission.
    99                           ; 
   100                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   101                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   102                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   103                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   104                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   105                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   106                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   107                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   108                           ; 
   109                           ; 
   110                           ; Code-generator required, PIC16F1827 Definitions
   111                           ; 
   112                           ; SFR Addresses
   113     0000                     	;# 
   114     0001                     	;# 
   115     0002                     	;# 
   116     0003                     	;# 
   117     0004                     	;# 
   118     0005                     	;# 
   119     0006                     	;# 
   120     0007                     	;# 
   121     0008                     	;# 
   122     0009                     	;# 
   123     000A                     	;# 
   124     000B                     	;# 
   125     000C                     	;# 
   126     000D                     	;# 
   127     0011                     	;# 
   128     0012                     	;# 
   129     0013                     	;# 
   130     0014                     	;# 
   131     0015                     	;# 
   132     0016                     	;# 
   133     0016                     	;# 
   134     0017                     	;# 
   135     0018                     	;# 
   136     0019                     	;# 
   137     001A                     	;# 
   138     001B                     	;# 
   139     001C                     	;# 
   140     001E                     	;# 
   141     001F                     	;# 
   142     008C                     	;# 
   143     008D                     	;# 
   144     0091                     	;# 
   145     0092                     	;# 
   146     0093                     	;# 
   147     0094                     	;# 
   148     0095                     	;# 
   149     0096                     	;# 
   150     0097                     	;# 
   151     0098                     	;# 
   152     0099                     	;# 
   153     009A                     	;# 
   154     009B                     	;# 
   155     009B                     	;# 
   156     009C                     	;# 
   157     009D                     	;# 
   158     009E                     	;# 
   159     010C                     	;# 
   160     010D                     	;# 
   161     0111                     	;# 
   162     0112                     	;# 
   163     0113                     	;# 
   164     0114                     	;# 
   165     0115                     	;# 
   166     0116                     	;# 
   167     0117                     	;# 
   168     0118                     	;# 
   169     0119                     	;# 
   170     011A                     	;# 
   171     011B                     	;# 
   172     011D                     	;# 
   173     011E                     	;# 
   174     018C                     	;# 
   175     018D                     	;# 
   176     0191                     	;# 
   177     0191                     	;# 
   178     0192                     	;# 
   179     0193                     	;# 
   180     0193                     	;# 
   181     0193                     	;# 
   182     0194                     	;# 
   183     0195                     	;# 
   184     0196                     	;# 
   185     0199                     	;# 
   186     019A                     	;# 
   187     019B                     	;# 
   188     019B                     	;# 
   189     019B                     	;# 
   190     019B                     	;# 
   191     019C                     	;# 
   192     019C                     	;# 
   193     019D                     	;# 
   194     019E                     	;# 
   195     019F                     	;# 
   196     020C                     	;# 
   197     020D                     	;# 
   198     0211                     	;# 
   199     0211                     	;# 
   200     0212                     	;# 
   201     0212                     	;# 
   202     0213                     	;# 
   203     0213                     	;# 
   204     0214                     	;# 
   205     0214                     	;# 
   206     0215                     	;# 
   207     0215                     	;# 
   208     0215                     	;# 
   209     0216                     	;# 
   210     0216                     	;# 
   211     0217                     	;# 
   212     0217                     	;# 
   213     0219                     	;# 
   214     021A                     	;# 
   215     021B                     	;# 
   216     021C                     	;# 
   217     021D                     	;# 
   218     021E                     	;# 
   219     021F                     	;# 
   220     0291                     	;# 
   221     0291                     	;# 
   222     0292                     	;# 
   223     0293                     	;# 
   224     0294                     	;# 
   225     0295                     	;# 
   226     0295                     	;# 
   227     0296                     	;# 
   228     0298                     	;# 
   229     0298                     	;# 
   230     0299                     	;# 
   231     029A                     	;# 
   232     029B                     	;# 
   233     029C                     	;# 
   234     029C                     	;# 
   235     029D                     	;# 
   236     029E                     	;# 
   237     029E                     	;# 
   238     0311                     	;# 
   239     0311                     	;# 
   240     0312                     	;# 
   241     0313                     	;# 
   242     0318                     	;# 
   243     0318                     	;# 
   244     0319                     	;# 
   245     031A                     	;# 
   246     0394                     	;# 
   247     0395                     	;# 
   248     0396                     	;# 
   249     039A                     	;# 
   250     039C                     	;# 
   251     039D                     	;# 
   252     039E                     	;# 
   253     039F                     	;# 
   254     0415                     	;# 
   255     0416                     	;# 
   256     0417                     	;# 
   257     041C                     	;# 
   258     041D                     	;# 
   259     041E                     	;# 
   260     0FE4                     	;# 
   261     0FE5                     	;# 
   262     0FE6                     	;# 
   263     0FE7                     	;# 
   264     0FE8                     	;# 
   265     0FE9                     	;# 
   266     0FEA                     	;# 
   267     0FEB                     	;# 
   268     0FED                     	;# 
   269     0FEE                     	;# 
   270     0FEF                     	;# 
   271     0000                     	;# 
   272     0001                     	;# 
   273     0002                     	;# 
   274     0003                     	;# 
   275     0004                     	;# 
   276     0005                     	;# 
   277     0006                     	;# 
   278     0007                     	;# 
   279     0008                     	;# 
   280     0009                     	;# 
   281     000A                     	;# 
   282     000B                     	;# 
   283     000C                     	;# 
   284     000D                     	;# 
   285     0011                     	;# 
   286     0012                     	;# 
   287     0013                     	;# 
   288     0014                     	;# 
   289     0015                     	;# 
   290     0016                     	;# 
   291     0016                     	;# 
   292     0017                     	;# 
   293     0018                     	;# 
   294     0019                     	;# 
   295     001A                     	;# 
   296     001B                     	;# 
   297     001C                     	;# 
   298     001E                     	;# 
   299     001F                     	;# 
   300     008C                     	;# 
   301     008D                     	;# 
   302     0091                     	;# 
   303     0092                     	;# 
   304     0093                     	;# 
   305     0094                     	;# 
   306     0095                     	;# 
   307     0096                     	;# 
   308     0097                     	;# 
   309     0098                     	;# 
   310     0099                     	;# 
   311     009A                     	;# 
   312     009B                     	;# 
   313     009B                     	;# 
   314     009C                     	;# 
   315     009D                     	;# 
   316     009E                     	;# 
   317     010C                     	;# 
   318     010D                     	;# 
   319     0111                     	;# 
   320     0112                     	;# 
   321     0113                     	;# 
   322     0114                     	;# 
   323     0115                     	;# 
   324     0116                     	;# 
   325     0117                     	;# 
   326     0118                     	;# 
   327     0119                     	;# 
   328     011A                     	;# 
   329     011B                     	;# 
   330     011D                     	;# 
   331     011E                     	;# 
   332     018C                     	;# 
   333     018D                     	;# 
   334     0191                     	;# 
   335     0191                     	;# 
   336     0192                     	;# 
   337     0193                     	;# 
   338     0193                     	;# 
   339     0193                     	;# 
   340     0194                     	;# 
   341     0195                     	;# 
   342     0196                     	;# 
   343     0199                     	;# 
   344     019A                     	;# 
   345     019B                     	;# 
   346     019B                     	;# 
   347     019B                     	;# 
   348     019B                     	;# 
   349     019C                     	;# 
   350     019C                     	;# 
   351     019D                     	;# 
   352     019E                     	;# 
   353     019F                     	;# 
   354     020C                     	;# 
   355     020D                     	;# 
   356     0211                     	;# 
   357     0211                     	;# 
   358     0212                     	;# 
   359     0212                     	;# 
   360     0213                     	;# 
   361     0213                     	;# 
   362     0214                     	;# 
   363     0214                     	;# 
   364     0215                     	;# 
   365     0215                     	;# 
   366     0215                     	;# 
   367     0216                     	;# 
   368     0216                     	;# 
   369     0217                     	;# 
   370     0217                     	;# 
   371     0219                     	;# 
   372     021A                     	;# 
   373     021B                     	;# 
   374     021C                     	;# 
   375     021D                     	;# 
   376     021E                     	;# 
   377     021F                     	;# 
   378     0291                     	;# 
   379     0291                     	;# 
   380     0292                     	;# 
   381     0293                     	;# 
   382     0294                     	;# 
   383     0295                     	;# 
   384     0295                     	;# 
   385     0296                     	;# 
   386     0298                     	;# 
   387     0298                     	;# 
   388     0299                     	;# 
   389     029A                     	;# 
   390     029B                     	;# 
   391     029C                     	;# 
   392     029C                     	;# 
   393     029D                     	;# 
   394     029E                     	;# 
   395     029E                     	;# 
   396     0311                     	;# 
   397     0311                     	;# 
   398     0312                     	;# 
   399     0313                     	;# 
   400     0318                     	;# 
   401     0318                     	;# 
   402     0319                     	;# 
   403     031A                     	;# 
   404     0394                     	;# 
   405     0395                     	;# 
   406     0396                     	;# 
   407     039A                     	;# 
   408     039C                     	;# 
   409     039D                     	;# 
   410     039E                     	;# 
   411     039F                     	;# 
   412     0415                     	;# 
   413     0416                     	;# 
   414     0417                     	;# 
   415     041C                     	;# 
   416     041D                     	;# 
   417     041E                     	;# 
   418     0FE4                     	;# 
   419     0FE5                     	;# 
   420     0FE6                     	;# 
   421     0FE7                     	;# 
   422     0FE8                     	;# 
   423     0FE9                     	;# 
   424     0FEA                     	;# 
   425     0FEB                     	;# 
   426     0FED                     	;# 
   427     0FEE                     	;# 
   428     0FEF                     	;# 
   429     0000                     	;# 
   430     0001                     	;# 
   431     0002                     	;# 
   432     0003                     	;# 
   433     0004                     	;# 
   434     0005                     	;# 
   435     0006                     	;# 
   436     0007                     	;# 
   437     0008                     	;# 
   438     0009                     	;# 
   439     000A                     	;# 
   440     000B                     	;# 
   441     000C                     	;# 
   442     000D                     	;# 
   443     0011                     	;# 
   444     0012                     	;# 
   445     0013                     	;# 
   446     0014                     	;# 
   447     0015                     	;# 
   448     0016                     	;# 
   449     0016                     	;# 
   450     0017                     	;# 
   451     0018                     	;# 
   452     0019                     	;# 
   453     001A                     	;# 
   454     001B                     	;# 
   455     001C                     	;# 
   456     001E                     	;# 
   457     001F                     	;# 
   458     008C                     	;# 
   459     008D                     	;# 
   460     0091                     	;# 
   461     0092                     	;# 
   462     0093                     	;# 
   463     0094                     	;# 
   464     0095                     	;# 
   465     0096                     	;# 
   466     0097                     	;# 
   467     0098                     	;# 
   468     0099                     	;# 
   469     009A                     	;# 
   470     009B                     	;# 
   471     009B                     	;# 
   472     009C                     	;# 
   473     009D                     	;# 
   474     009E                     	;# 
   475     010C                     	;# 
   476     010D                     	;# 
   477     0111                     	;# 
   478     0112                     	;# 
   479     0113                     	;# 
   480     0114                     	;# 
   481     0115                     	;# 
   482     0116                     	;# 
   483     0117                     	;# 
   484     0118                     	;# 
   485     0119                     	;# 
   486     011A                     	;# 
   487     011B                     	;# 
   488     011D                     	;# 
   489     011E                     	;# 
   490     018C                     	;# 
   491     018D                     	;# 
   492     0191                     	;# 
   493     0191                     	;# 
   494     0192                     	;# 
   495     0193                     	;# 
   496     0193                     	;# 
   497     0193                     	;# 
   498     0194                     	;# 
   499     0195                     	;# 
   500     0196                     	;# 
   501     0199                     	;# 
   502     019A                     	;# 
   503     019B                     	;# 
   504     019B                     	;# 
   505     019B                     	;# 
   506     019B                     	;# 
   507     019C                     	;# 
   508     019C                     	;# 
   509     019D                     	;# 
   510     019E                     	;# 
   511     019F                     	;# 
   512     020C                     	;# 
   513     020D                     	;# 
   514     0211                     	;# 
   515     0211                     	;# 
   516     0212                     	;# 
   517     0212                     	;# 
   518     0213                     	;# 
   519     0213                     	;# 
   520     0214                     	;# 
   521     0214                     	;# 
   522     0215                     	;# 
   523     0215                     	;# 
   524     0215                     	;# 
   525     0216                     	;# 
   526     0216                     	;# 
   527     0217                     	;# 
   528     0217                     	;# 
   529     0219                     	;# 
   530     021A                     	;# 
   531     021B                     	;# 
   532     021C                     	;# 
   533     021D                     	;# 
   534     021E                     	;# 
   535     021F                     	;# 
   536     0291                     	;# 
   537     0291                     	;# 
   538     0292                     	;# 
   539     0293                     	;# 
   540     0294                     	;# 
   541     0295                     	;# 
   542     0295                     	;# 
   543     0296                     	;# 
   544     0298                     	;# 
   545     0298                     	;# 
   546     0299                     	;# 
   547     029A                     	;# 
   548     029B                     	;# 
   549     029C                     	;# 
   550     029C                     	;# 
   551     029D                     	;# 
   552     029E                     	;# 
   553     029E                     	;# 
   554     0311                     	;# 
   555     0311                     	;# 
   556     0312                     	;# 
   557     0313                     	;# 
   558     0318                     	;# 
   559     0318                     	;# 
   560     0319                     	;# 
   561     031A                     	;# 
   562     0394                     	;# 
   563     0395                     	;# 
   564     0396                     	;# 
   565     039A                     	;# 
   566     039C                     	;# 
   567     039D                     	;# 
   568     039E                     	;# 
   569     039F                     	;# 
   570     0415                     	;# 
   571     0416                     	;# 
   572     0417                     	;# 
   573     041C                     	;# 
   574     041D                     	;# 
   575     041E                     	;# 
   576     0FE4                     	;# 
   577     0FE5                     	;# 
   578     0FE6                     	;# 
   579     0FE7                     	;# 
   580     0FE8                     	;# 
   581     0FE9                     	;# 
   582     0FEA                     	;# 
   583     0FEB                     	;# 
   584     0FED                     	;# 
   585     0FEE                     	;# 
   586     0FEF                     	;# 
   587     0000                     	;# 
   588     0001                     	;# 
   589     0002                     	;# 
   590     0003                     	;# 
   591     0004                     	;# 
   592     0005                     	;# 
   593     0006                     	;# 
   594     0007                     	;# 
   595     0008                     	;# 
   596     0009                     	;# 
   597     000A                     	;# 
   598     000B                     	;# 
   599     000C                     	;# 
   600     000D                     	;# 
   601     0011                     	;# 
   602     0012                     	;# 
   603     0013                     	;# 
   604     0014                     	;# 
   605     0015                     	;# 
   606     0016                     	;# 
   607     0016                     	;# 
   608     0017                     	;# 
   609     0018                     	;# 
   610     0019                     	;# 
   611     001A                     	;# 
   612     001B                     	;# 
   613     001C                     	;# 
   614     001E                     	;# 
   615     001F                     	;# 
   616     008C                     	;# 
   617     008D                     	;# 
   618     0091                     	;# 
   619     0092                     	;# 
   620     0093                     	;# 
   621     0094                     	;# 
   622     0095                     	;# 
   623     0096                     	;# 
   624     0097                     	;# 
   625     0098                     	;# 
   626     0099                     	;# 
   627     009A                     	;# 
   628     009B                     	;# 
   629     009B                     	;# 
   630     009C                     	;# 
   631     009D                     	;# 
   632     009E                     	;# 
   633     010C                     	;# 
   634     010D                     	;# 
   635     0111                     	;# 
   636     0112                     	;# 
   637     0113                     	;# 
   638     0114                     	;# 
   639     0115                     	;# 
   640     0116                     	;# 
   641     0117                     	;# 
   642     0118                     	;# 
   643     0119                     	;# 
   644     011A                     	;# 
   645     011B                     	;# 
   646     011D                     	;# 
   647     011E                     	;# 
   648     018C                     	;# 
   649     018D                     	;# 
   650     0191                     	;# 
   651     0191                     	;# 
   652     0192                     	;# 
   653     0193                     	;# 
   654     0193                     	;# 
   655     0193                     	;# 
   656     0194                     	;# 
   657     0195                     	;# 
   658     0196                     	;# 
   659     0199                     	;# 
   660     019A                     	;# 
   661     019B                     	;# 
   662     019B                     	;# 
   663     019B                     	;# 
   664     019B                     	;# 
   665     019C                     	;# 
   666     019C                     	;# 
   667     019D                     	;# 
   668     019E                     	;# 
   669     019F                     	;# 
   670     020C                     	;# 
   671     020D                     	;# 
   672     0211                     	;# 
   673     0211                     	;# 
   674     0212                     	;# 
   675     0212                     	;# 
   676     0213                     	;# 
   677     0213                     	;# 
   678     0214                     	;# 
   679     0214                     	;# 
   680     0215                     	;# 
   681     0215                     	;# 
   682     0215                     	;# 
   683     0216                     	;# 
   684     0216                     	;# 
   685     0217                     	;# 
   686     0217                     	;# 
   687     0219                     	;# 
   688     021A                     	;# 
   689     021B                     	;# 
   690     021C                     	;# 
   691     021D                     	;# 
   692     021E                     	;# 
   693     021F                     	;# 
   694     0291                     	;# 
   695     0291                     	;# 
   696     0292                     	;# 
   697     0293                     	;# 
   698     0294                     	;# 
   699     0295                     	;# 
   700     0295                     	;# 
   701     0296                     	;# 
   702     0298                     	;# 
   703     0298                     	;# 
   704     0299                     	;# 
   705     029A                     	;# 
   706     029B                     	;# 
   707     029C                     	;# 
   708     029C                     	;# 
   709     029D                     	;# 
   710     029E                     	;# 
   711     029E                     	;# 
   712     0311                     	;# 
   713     0311                     	;# 
   714     0312                     	;# 
   715     0313                     	;# 
   716     0318                     	;# 
   717     0318                     	;# 
   718     0319                     	;# 
   719     031A                     	;# 
   720     0394                     	;# 
   721     0395                     	;# 
   722     0396                     	;# 
   723     039A                     	;# 
   724     039C                     	;# 
   725     039D                     	;# 
   726     039E                     	;# 
   727     039F                     	;# 
   728     0415                     	;# 
   729     0416                     	;# 
   730     0417                     	;# 
   731     041C                     	;# 
   732     041D                     	;# 
   733     041E                     	;# 
   734     0FE4                     	;# 
   735     0FE5                     	;# 
   736     0FE6                     	;# 
   737     0FE7                     	;# 
   738     0FE8                     	;# 
   739     0FE9                     	;# 
   740     0FEA                     	;# 
   741     0FEB                     	;# 
   742     0FED                     	;# 
   743     0FEE                     	;# 
   744     0FEF                     	;# 
   745     0000                     	;# 
   746     0001                     	;# 
   747     0002                     	;# 
   748     0003                     	;# 
   749     0004                     	;# 
   750     0005                     	;# 
   751     0006                     	;# 
   752     0007                     	;# 
   753     0008                     	;# 
   754     0009                     	;# 
   755     000A                     	;# 
   756     000B                     	;# 
   757     000C                     	;# 
   758     000D                     	;# 
   759     0011                     	;# 
   760     0012                     	;# 
   761     0013                     	;# 
   762     0014                     	;# 
   763     0015                     	;# 
   764     0016                     	;# 
   765     0016                     	;# 
   766     0017                     	;# 
   767     0018                     	;# 
   768     0019                     	;# 
   769     001A                     	;# 
   770     001B                     	;# 
   771     001C                     	;# 
   772     001E                     	;# 
   773     001F                     	;# 
   774     008C                     	;# 
   775     008D                     	;# 
   776     0091                     	;# 
   777     0092                     	;# 
   778     0093                     	;# 
   779     0094                     	;# 
   780     0095                     	;# 
   781     0096                     	;# 
   782     0097                     	;# 
   783     0098                     	;# 
   784     0099                     	;# 
   785     009A                     	;# 
   786     009B                     	;# 
   787     009B                     	;# 
   788     009C                     	;# 
   789     009D                     	;# 
   790     009E                     	;# 
   791     010C                     	;# 
   792     010D                     	;# 
   793     0111                     	;# 
   794     0112                     	;# 
   795     0113                     	;# 
   796     0114                     	;# 
   797     0115                     	;# 
   798     0116                     	;# 
   799     0117                     	;# 
   800     0118                     	;# 
   801     0119                     	;# 
   802     011A                     	;# 
   803     011B                     	;# 
   804     011D                     	;# 
   805     011E                     	;# 
   806     018C                     	;# 
   807     018D                     	;# 
   808     0191                     	;# 
   809     0191                     	;# 
   810     0192                     	;# 
   811     0193                     	;# 
   812     0193                     	;# 
   813     0193                     	;# 
   814     0194                     	;# 
   815     0195                     	;# 
   816     0196                     	;# 
   817     0199                     	;# 
   818     019A                     	;# 
   819     019B                     	;# 
   820     019B                     	;# 
   821     019B                     	;# 
   822     019B                     	;# 
   823     019C                     	;# 
   824     019C                     	;# 
   825     019D                     	;# 
   826     019E                     	;# 
   827     019F                     	;# 
   828     020C                     	;# 
   829     020D                     	;# 
   830     0211                     	;# 
   831     0211                     	;# 
   832     0212                     	;# 
   833     0212                     	;# 
   834     0213                     	;# 
   835     0213                     	;# 
   836     0214                     	;# 
   837     0214                     	;# 
   838     0215                     	;# 
   839     0215                     	;# 
   840     0215                     	;# 
   841     0216                     	;# 
   842     0216                     	;# 
   843     0217                     	;# 
   844     0217                     	;# 
   845     0219                     	;# 
   846     021A                     	;# 
   847     021B                     	;# 
   848     021C                     	;# 
   849     021D                     	;# 
   850     021E                     	;# 
   851     021F                     	;# 
   852     0291                     	;# 
   853     0291                     	;# 
   854     0292                     	;# 
   855     0293                     	;# 
   856     0294                     	;# 
   857     0295                     	;# 
   858     0295                     	;# 
   859     0296                     	;# 
   860     0298                     	;# 
   861     0298                     	;# 
   862     0299                     	;# 
   863     029A                     	;# 
   864     029B                     	;# 
   865     029C                     	;# 
   866     029C                     	;# 
   867     029D                     	;# 
   868     029E                     	;# 
   869     029E                     	;# 
   870     0311                     	;# 
   871     0311                     	;# 
   872     0312                     	;# 
   873     0313                     	;# 
   874     0318                     	;# 
   875     0318                     	;# 
   876     0319                     	;# 
   877     031A                     	;# 
   878     0394                     	;# 
   879     0395                     	;# 
   880     0396                     	;# 
   881     039A                     	;# 
   882     039C                     	;# 
   883     039D                     	;# 
   884     039E                     	;# 
   885     039F                     	;# 
   886     0415                     	;# 
   887     0416                     	;# 
   888     0417                     	;# 
   889     041C                     	;# 
   890     041D                     	;# 
   891     041E                     	;# 
   892     0FE4                     	;# 
   893     0FE5                     	;# 
   894     0FE6                     	;# 
   895     0FE7                     	;# 
   896     0FE8                     	;# 
   897     0FE9                     	;# 
   898     0FEA                     	;# 
   899     0FEB                     	;# 
   900     0FED                     	;# 
   901     0FEE                     	;# 
   902     0FEF                     	;# 
   903     0000                     	;# 
   904     0001                     	;# 
   905     0002                     	;# 
   906     0003                     	;# 
   907     0004                     	;# 
   908     0005                     	;# 
   909     0006                     	;# 
   910     0007                     	;# 
   911     0008                     	;# 
   912     0009                     	;# 
   913     000A                     	;# 
   914     000B                     	;# 
   915     000C                     	;# 
   916     000D                     	;# 
   917     0011                     	;# 
   918     0012                     	;# 
   919     0013                     	;# 
   920     0014                     	;# 
   921     0015                     	;# 
   922     0016                     	;# 
   923     0016                     	;# 
   924     0017                     	;# 
   925     0018                     	;# 
   926     0019                     	;# 
   927     001A                     	;# 
   928     001B                     	;# 
   929     001C                     	;# 
   930     001E                     	;# 
   931     001F                     	;# 
   932     008C                     	;# 
   933     008D                     	;# 
   934     0091                     	;# 
   935     0092                     	;# 
   936     0093                     	;# 
   937     0094                     	;# 
   938     0095                     	;# 
   939     0096                     	;# 
   940     0097                     	;# 
   941     0098                     	;# 
   942     0099                     	;# 
   943     009A                     	;# 
   944     009B                     	;# 
   945     009B                     	;# 
   946     009C                     	;# 
   947     009D                     	;# 
   948     009E                     	;# 
   949     010C                     	;# 
   950     010D                     	;# 
   951     0111                     	;# 
   952     0112                     	;# 
   953     0113                     	;# 
   954     0114                     	;# 
   955     0115                     	;# 
   956     0116                     	;# 
   957     0117                     	;# 
   958     0118                     	;# 
   959     0119                     	;# 
   960     011A                     	;# 
   961     011B                     	;# 
   962     011D                     	;# 
   963     011E                     	;# 
   964     018C                     	;# 
   965     018D                     	;# 
   966     0191                     	;# 
   967     0191                     	;# 
   968     0192                     	;# 
   969     0193                     	;# 
   970     0193                     	;# 
   971     0193                     	;# 
   972     0194                     	;# 
   973     0195                     	;# 
   974     0196                     	;# 
   975     0199                     	;# 
   976     019A                     	;# 
   977     019B                     	;# 
   978     019B                     	;# 
   979     019B                     	;# 
   980     019B                     	;# 
   981     019C                     	;# 
   982     019C                     	;# 
   983     019D                     	;# 
   984     019E                     	;# 
   985     019F                     	;# 
   986     020C                     	;# 
   987     020D                     	;# 
   988     0211                     	;# 
   989     0211                     	;# 
   990     0212                     	;# 
   991     0212                     	;# 
   992     0213                     	;# 
   993     0213                     	;# 
   994     0214                     	;# 
   995     0214                     	;# 
   996     0215                     	;# 
   997     0215                     	;# 
   998     0215                     	;# 
   999     0216                     	;# 
  1000     0216                     	;# 
  1001     0217                     	;# 
  1002     0217                     	;# 
  1003     0219                     	;# 
  1004     021A                     	;# 
  1005     021B                     	;# 
  1006     021C                     	;# 
  1007     021D                     	;# 
  1008     021E                     	;# 
  1009     021F                     	;# 
  1010     0291                     	;# 
  1011     0291                     	;# 
  1012     0292                     	;# 
  1013     0293                     	;# 
  1014     0294                     	;# 
  1015     0295                     	;# 
  1016     0295                     	;# 
  1017     0296                     	;# 
  1018     0298                     	;# 
  1019     0298                     	;# 
  1020     0299                     	;# 
  1021     029A                     	;# 
  1022     029B                     	;# 
  1023     029C                     	;# 
  1024     029C                     	;# 
  1025     029D                     	;# 
  1026     029E                     	;# 
  1027     029E                     	;# 
  1028     0311                     	;# 
  1029     0311                     	;# 
  1030     0312                     	;# 
  1031     0313                     	;# 
  1032     0318                     	;# 
  1033     0318                     	;# 
  1034     0319                     	;# 
  1035     031A                     	;# 
  1036     0394                     	;# 
  1037     0395                     	;# 
  1038     0396                     	;# 
  1039     039A                     	;# 
  1040     039C                     	;# 
  1041     039D                     	;# 
  1042     039E                     	;# 
  1043     039F                     	;# 
  1044     0415                     	;# 
  1045     0416                     	;# 
  1046     0417                     	;# 
  1047     041C                     	;# 
  1048     041D                     	;# 
  1049     041E                     	;# 
  1050     0FE4                     	;# 
  1051     0FE5                     	;# 
  1052     0FE6                     	;# 
  1053     0FE7                     	;# 
  1054     0FE8                     	;# 
  1055     0FE9                     	;# 
  1056     0FEA                     	;# 
  1057     0FEB                     	;# 
  1058     0FED                     	;# 
  1059     0FEE                     	;# 
  1060     0FEF                     	;# 
  1061     0000                     	;# 
  1062     0001                     	;# 
  1063     0002                     	;# 
  1064     0003                     	;# 
  1065     0004                     	;# 
  1066     0005                     	;# 
  1067     0006                     	;# 
  1068     0007                     	;# 
  1069     0008                     	;# 
  1070     0009                     	;# 
  1071     000A                     	;# 
  1072     000B                     	;# 
  1073     000C                     	;# 
  1074     000D                     	;# 
  1075     0011                     	;# 
  1076     0012                     	;# 
  1077     0013                     	;# 
  1078     0014                     	;# 
  1079     0015                     	;# 
  1080     0016                     	;# 
  1081     0016                     	;# 
  1082     0017                     	;# 
  1083     0018                     	;# 
  1084     0019                     	;# 
  1085     001A                     	;# 
  1086     001B                     	;# 
  1087     001C                     	;# 
  1088     001E                     	;# 
  1089     001F                     	;# 
  1090     008C                     	;# 
  1091     008D                     	;# 
  1092     0091                     	;# 
  1093     0092                     	;# 
  1094     0093                     	;# 
  1095     0094                     	;# 
  1096     0095                     	;# 
  1097     0096                     	;# 
  1098     0097                     	;# 
  1099     0098                     	;# 
  1100     0099                     	;# 
  1101     009A                     	;# 
  1102     009B                     	;# 
  1103     009B                     	;# 
  1104     009C                     	;# 
  1105     009D                     	;# 
  1106     009E                     	;# 
  1107     010C                     	;# 
  1108     010D                     	;# 
  1109     0111                     	;# 
  1110     0112                     	;# 
  1111     0113                     	;# 
  1112     0114                     	;# 
  1113     0115                     	;# 
  1114     0116                     	;# 
  1115     0117                     	;# 
  1116     0118                     	;# 
  1117     0119                     	;# 
  1118     011A                     	;# 
  1119     011B                     	;# 
  1120     011D                     	;# 
  1121     011E                     	;# 
  1122     018C                     	;# 
  1123     018D                     	;# 
  1124     0191                     	;# 
  1125     0191                     	;# 
  1126     0192                     	;# 
  1127     0193                     	;# 
  1128     0193                     	;# 
  1129     0193                     	;# 
  1130     0194                     	;# 
  1131     0195                     	;# 
  1132     0196                     	;# 
  1133     0199                     	;# 
  1134     019A                     	;# 
  1135     019B                     	;# 
  1136     019B                     	;# 
  1137     019B                     	;# 
  1138     019B                     	;# 
  1139     019C                     	;# 
  1140     019C                     	;# 
  1141     019D                     	;# 
  1142     019E                     	;# 
  1143     019F                     	;# 
  1144     020C                     	;# 
  1145     020D                     	;# 
  1146     0211                     	;# 
  1147     0211                     	;# 
  1148     0212                     	;# 
  1149     0212                     	;# 
  1150     0213                     	;# 
  1151     0213                     	;# 
  1152     0214                     	;# 
  1153     0214                     	;# 
  1154     0215                     	;# 
  1155     0215                     	;# 
  1156     0215                     	;# 
  1157     0216                     	;# 
  1158     0216                     	;# 
  1159     0217                     	;# 
  1160     0217                     	;# 
  1161     0219                     	;# 
  1162     021A                     	;# 
  1163     021B                     	;# 
  1164     021C                     	;# 
  1165     021D                     	;# 
  1166     021E                     	;# 
  1167     021F                     	;# 
  1168     0291                     	;# 
  1169     0291                     	;# 
  1170     0292                     	;# 
  1171     0293                     	;# 
  1172     0294                     	;# 
  1173     0295                     	;# 
  1174     0295                     	;# 
  1175     0296                     	;# 
  1176     0298                     	;# 
  1177     0298                     	;# 
  1178     0299                     	;# 
  1179     029A                     	;# 
  1180     029B                     	;# 
  1181     029C                     	;# 
  1182     029C                     	;# 
  1183     029D                     	;# 
  1184     029E                     	;# 
  1185     029E                     	;# 
  1186     0311                     	;# 
  1187     0311                     	;# 
  1188     0312                     	;# 
  1189     0313                     	;# 
  1190     0318                     	;# 
  1191     0318                     	;# 
  1192     0319                     	;# 
  1193     031A                     	;# 
  1194     0394                     	;# 
  1195     0395                     	;# 
  1196     0396                     	;# 
  1197     039A                     	;# 
  1198     039C                     	;# 
  1199     039D                     	;# 
  1200     039E                     	;# 
  1201     039F                     	;# 
  1202     0415                     	;# 
  1203     0416                     	;# 
  1204     0417                     	;# 
  1205     041C                     	;# 
  1206     041D                     	;# 
  1207     041E                     	;# 
  1208     0FE4                     	;# 
  1209     0FE5                     	;# 
  1210     0FE6                     	;# 
  1211     0FE7                     	;# 
  1212     0FE8                     	;# 
  1213     0FE9                     	;# 
  1214     0FEA                     	;# 
  1215     0FEB                     	;# 
  1216     0FED                     	;# 
  1217     0FEE                     	;# 
  1218     0FEF                     	;# 
  1219     0000                     	;# 
  1220     0001                     	;# 
  1221     0002                     	;# 
  1222     0003                     	;# 
  1223     0004                     	;# 
  1224     0005                     	;# 
  1225     0006                     	;# 
  1226     0007                     	;# 
  1227     0008                     	;# 
  1228     0009                     	;# 
  1229     000A                     	;# 
  1230     000B                     	;# 
  1231     000C                     	;# 
  1232     000D                     	;# 
  1233     0011                     	;# 
  1234     0012                     	;# 
  1235     0013                     	;# 
  1236     0014                     	;# 
  1237     0015                     	;# 
  1238     0016                     	;# 
  1239     0016                     	;# 
  1240     0017                     	;# 
  1241     0018                     	;# 
  1242     0019                     	;# 
  1243     001A                     	;# 
  1244     001B                     	;# 
  1245     001C                     	;# 
  1246     001E                     	;# 
  1247     001F                     	;# 
  1248     008C                     	;# 
  1249     008D                     	;# 
  1250     0091                     	;# 
  1251     0092                     	;# 
  1252     0093                     	;# 
  1253     0094                     	;# 
  1254     0095                     	;# 
  1255     0096                     	;# 
  1256     0097                     	;# 
  1257     0098                     	;# 
  1258     0099                     	;# 
  1259     009A                     	;# 
  1260     009B                     	;# 
  1261     009B                     	;# 
  1262     009C                     	;# 
  1263     009D                     	;# 
  1264     009E                     	;# 
  1265     010C                     	;# 
  1266     010D                     	;# 
  1267     0111                     	;# 
  1268     0112                     	;# 
  1269     0113                     	;# 
  1270     0114                     	;# 
  1271     0115                     	;# 
  1272     0116                     	;# 
  1273     0117                     	;# 
  1274     0118                     	;# 
  1275     0119                     	;# 
  1276     011A                     	;# 
  1277     011B                     	;# 
  1278     011D                     	;# 
  1279     011E                     	;# 
  1280     018C                     	;# 
  1281     018D                     	;# 
  1282     0191                     	;# 
  1283     0191                     	;# 
  1284     0192                     	;# 
  1285     0193                     	;# 
  1286     0193                     	;# 
  1287     0193                     	;# 
  1288     0194                     	;# 
  1289     0195                     	;# 
  1290     0196                     	;# 
  1291     0199                     	;# 
  1292     019A                     	;# 
  1293     019B                     	;# 
  1294     019B                     	;# 
  1295     019B                     	;# 
  1296     019B                     	;# 
  1297     019C                     	;# 
  1298     019C                     	;# 
  1299     019D                     	;# 
  1300     019E                     	;# 
  1301     019F                     	;# 
  1302     020C                     	;# 
  1303     020D                     	;# 
  1304     0211                     	;# 
  1305     0211                     	;# 
  1306     0212                     	;# 
  1307     0212                     	;# 
  1308     0213                     	;# 
  1309     0213                     	;# 
  1310     0214                     	;# 
  1311     0214                     	;# 
  1312     0215                     	;# 
  1313     0215                     	;# 
  1314     0215                     	;# 
  1315     0216                     	;# 
  1316     0216                     	;# 
  1317     0217                     	;# 
  1318     0217                     	;# 
  1319     0219                     	;# 
  1320     021A                     	;# 
  1321     021B                     	;# 
  1322     021C                     	;# 
  1323     021D                     	;# 
  1324     021E                     	;# 
  1325     021F                     	;# 
  1326     0291                     	;# 
  1327     0291                     	;# 
  1328     0292                     	;# 
  1329     0293                     	;# 
  1330     0294                     	;# 
  1331     0295                     	;# 
  1332     0295                     	;# 
  1333     0296                     	;# 
  1334     0298                     	;# 
  1335     0298                     	;# 
  1336     0299                     	;# 
  1337     029A                     	;# 
  1338     029B                     	;# 
  1339     029C                     	;# 
  1340     029C                     	;# 
  1341     029D                     	;# 
  1342     029E                     	;# 
  1343     029E                     	;# 
  1344     0311                     	;# 
  1345     0311                     	;# 
  1346     0312                     	;# 
  1347     0313                     	;# 
  1348     0318                     	;# 
  1349     0318                     	;# 
  1350     0319                     	;# 
  1351     031A                     	;# 
  1352     0394                     	;# 
  1353     0395                     	;# 
  1354     0396                     	;# 
  1355     039A                     	;# 
  1356     039C                     	;# 
  1357     039D                     	;# 
  1358     039E                     	;# 
  1359     039F                     	;# 
  1360     0415                     	;# 
  1361     0416                     	;# 
  1362     0417                     	;# 
  1363     041C                     	;# 
  1364     041D                     	;# 
  1365     041E                     	;# 
  1366     0FE4                     	;# 
  1367     0FE5                     	;# 
  1368     0FE6                     	;# 
  1369     0FE7                     	;# 
  1370     0FE8                     	;# 
  1371     0FE9                     	;# 
  1372     0FEA                     	;# 
  1373     0FEB                     	;# 
  1374     0FED                     	;# 
  1375     0FEE                     	;# 
  1376     0FEF                     	;# 
  1377     0000                     	;# 
  1378     0001                     	;# 
  1379     0002                     	;# 
  1380     0003                     	;# 
  1381     0004                     	;# 
  1382     0005                     	;# 
  1383     0006                     	;# 
  1384     0007                     	;# 
  1385     0008                     	;# 
  1386     0009                     	;# 
  1387     000A                     	;# 
  1388     000B                     	;# 
  1389     000C                     	;# 
  1390     000D                     	;# 
  1391     0011                     	;# 
  1392     0012                     	;# 
  1393     0013                     	;# 
  1394     0014                     	;# 
  1395     0015                     	;# 
  1396     0016                     	;# 
  1397     0016                     	;# 
  1398     0017                     	;# 
  1399     0018                     	;# 
  1400     0019                     	;# 
  1401     001A                     	;# 
  1402     001B                     	;# 
  1403     001C                     	;# 
  1404     001E                     	;# 
  1405     001F                     	;# 
  1406     008C                     	;# 
  1407     008D                     	;# 
  1408     0091                     	;# 
  1409     0092                     	;# 
  1410     0093                     	;# 
  1411     0094                     	;# 
  1412     0095                     	;# 
  1413     0096                     	;# 
  1414     0097                     	;# 
  1415     0098                     	;# 
  1416     0099                     	;# 
  1417     009A                     	;# 
  1418     009B                     	;# 
  1419     009B                     	;# 
  1420     009C                     	;# 
  1421     009D                     	;# 
  1422     009E                     	;# 
  1423     010C                     	;# 
  1424     010D                     	;# 
  1425     0111                     	;# 
  1426     0112                     	;# 
  1427     0113                     	;# 
  1428     0114                     	;# 
  1429     0115                     	;# 
  1430     0116                     	;# 
  1431     0117                     	;# 
  1432     0118                     	;# 
  1433     0119                     	;# 
  1434     011A                     	;# 
  1435     011B                     	;# 
  1436     011D                     	;# 
  1437     011E                     	;# 
  1438     018C                     	;# 
  1439     018D                     	;# 
  1440     0191                     	;# 
  1441     0191                     	;# 
  1442     0192                     	;# 
  1443     0193                     	;# 
  1444     0193                     	;# 
  1445     0193                     	;# 
  1446     0194                     	;# 
  1447     0195                     	;# 
  1448     0196                     	;# 
  1449     0199                     	;# 
  1450     019A                     	;# 
  1451     019B                     	;# 
  1452     019B                     	;# 
  1453     019B                     	;# 
  1454     019B                     	;# 
  1455     019C                     	;# 
  1456     019C                     	;# 
  1457     019D                     	;# 
  1458     019E                     	;# 
  1459     019F                     	;# 
  1460     020C                     	;# 
  1461     020D                     	;# 
  1462     0211                     	;# 
  1463     0211                     	;# 
  1464     0212                     	;# 
  1465     0212                     	;# 
  1466     0213                     	;# 
  1467     0213                     	;# 
  1468     0214                     	;# 
  1469     0214                     	;# 
  1470     0215                     	;# 
  1471     0215                     	;# 
  1472     0215                     	;# 
  1473     0216                     	;# 
  1474     0216                     	;# 
  1475     0217                     	;# 
  1476     0217                     	;# 
  1477     0219                     	;# 
  1478     021A                     	;# 
  1479     021B                     	;# 
  1480     021C                     	;# 
  1481     021D                     	;# 
  1482     021E                     	;# 
  1483     021F                     	;# 
  1484     0291                     	;# 
  1485     0291                     	;# 
  1486     0292                     	;# 
  1487     0293                     	;# 
  1488     0294                     	;# 
  1489     0295                     	;# 
  1490     0295                     	;# 
  1491     0296                     	;# 
  1492     0298                     	;# 
  1493     0298                     	;# 
  1494     0299                     	;# 
  1495     029A                     	;# 
  1496     029B                     	;# 
  1497     029C                     	;# 
  1498     029C                     	;# 
  1499     029D                     	;# 
  1500     029E                     	;# 
  1501     029E                     	;# 
  1502     0311                     	;# 
  1503     0311                     	;# 
  1504     0312                     	;# 
  1505     0313                     	;# 
  1506     0318                     	;# 
  1507     0318                     	;# 
  1508     0319                     	;# 
  1509     031A                     	;# 
  1510     0394                     	;# 
  1511     0395                     	;# 
  1512     0396                     	;# 
  1513     039A                     	;# 
  1514     039C                     	;# 
  1515     039D                     	;# 
  1516     039E                     	;# 
  1517     039F                     	;# 
  1518     0415                     	;# 
  1519     0416                     	;# 
  1520     0417                     	;# 
  1521     041C                     	;# 
  1522     041D                     	;# 
  1523     041E                     	;# 
  1524     0FE4                     	;# 
  1525     0FE5                     	;# 
  1526     0FE6                     	;# 
  1527     0FE7                     	;# 
  1528     0FE8                     	;# 
  1529     0FE9                     	;# 
  1530     0FEA                     	;# 
  1531     0FEB                     	;# 
  1532     0FED                     	;# 
  1533     0FEE                     	;# 
  1534     0FEF                     	;# 
  1535     0000                     	;# 
  1536     0001                     	;# 
  1537     0002                     	;# 
  1538     0003                     	;# 
  1539     0004                     	;# 
  1540     0005                     	;# 
  1541     0006                     	;# 
  1542     0007                     	;# 
  1543     0008                     	;# 
  1544     0009                     	;# 
  1545     000A                     	;# 
  1546     000B                     	;# 
  1547     000C                     	;# 
  1548     000D                     	;# 
  1549     0011                     	;# 
  1550     0012                     	;# 
  1551     0013                     	;# 
  1552     0014                     	;# 
  1553     0015                     	;# 
  1554     0016                     	;# 
  1555     0016                     	;# 
  1556     0017                     	;# 
  1557     0018                     	;# 
  1558     0019                     	;# 
  1559     001A                     	;# 
  1560     001B                     	;# 
  1561     001C                     	;# 
  1562     001E                     	;# 
  1563     001F                     	;# 
  1564     008C                     	;# 
  1565     008D                     	;# 
  1566     0091                     	;# 
  1567     0092                     	;# 
  1568     0093                     	;# 
  1569     0094                     	;# 
  1570     0095                     	;# 
  1571     0096                     	;# 
  1572     0097                     	;# 
  1573     0098                     	;# 
  1574     0099                     	;# 
  1575     009A                     	;# 
  1576     009B                     	;# 
  1577     009B                     	;# 
  1578     009C                     	;# 
  1579     009D                     	;# 
  1580     009E                     	;# 
  1581     010C                     	;# 
  1582     010D                     	;# 
  1583     0111                     	;# 
  1584     0112                     	;# 
  1585     0113                     	;# 
  1586     0114                     	;# 
  1587     0115                     	;# 
  1588     0116                     	;# 
  1589     0117                     	;# 
  1590     0118                     	;# 
  1591     0119                     	;# 
  1592     011A                     	;# 
  1593     011B                     	;# 
  1594     011D                     	;# 
  1595     011E                     	;# 
  1596     018C                     	;# 
  1597     018D                     	;# 
  1598     0191                     	;# 
  1599     0191                     	;# 
  1600     0192                     	;# 
  1601     0193                     	;# 
  1602     0193                     	;# 
  1603     0193                     	;# 
  1604     0194                     	;# 
  1605     0195                     	;# 
  1606     0196                     	;# 
  1607     0199                     	;# 
  1608     019A                     	;# 
  1609     019B                     	;# 
  1610     019B                     	;# 
  1611     019B                     	;# 
  1612     019B                     	;# 
  1613     019C                     	;# 
  1614     019C                     	;# 
  1615     019D                     	;# 
  1616     019E                     	;# 
  1617     019F                     	;# 
  1618     020C                     	;# 
  1619     020D                     	;# 
  1620     0211                     	;# 
  1621     0211                     	;# 
  1622     0212                     	;# 
  1623     0212                     	;# 
  1624     0213                     	;# 
  1625     0213                     	;# 
  1626     0214                     	;# 
  1627     0214                     	;# 
  1628     0215                     	;# 
  1629     0215                     	;# 
  1630     0215                     	;# 
  1631     0216                     	;# 
  1632     0216                     	;# 
  1633     0217                     	;# 
  1634     0217                     	;# 
  1635     0219                     	;# 
  1636     021A                     	;# 
  1637     021B                     	;# 
  1638     021C                     	;# 
  1639     021D                     	;# 
  1640     021E                     	;# 
  1641     021F                     	;# 
  1642     0291                     	;# 
  1643     0291                     	;# 
  1644     0292                     	;# 
  1645     0293                     	;# 
  1646     0294                     	;# 
  1647     0295                     	;# 
  1648     0295                     	;# 
  1649     0296                     	;# 
  1650     0298                     	;# 
  1651     0298                     	;# 
  1652     0299                     	;# 
  1653     029A                     	;# 
  1654     029B                     	;# 
  1655     029C                     	;# 
  1656     029C                     	;# 
  1657     029D                     	;# 
  1658     029E                     	;# 
  1659     029E                     	;# 
  1660     0311                     	;# 
  1661     0311                     	;# 
  1662     0312                     	;# 
  1663     0313                     	;# 
  1664     0318                     	;# 
  1665     0318                     	;# 
  1666     0319                     	;# 
  1667     031A                     	;# 
  1668     0394                     	;# 
  1669     0395                     	;# 
  1670     0396                     	;# 
  1671     039A                     	;# 
  1672     039C                     	;# 
  1673     039D                     	;# 
  1674     039E                     	;# 
  1675     039F                     	;# 
  1676     0415                     	;# 
  1677     0416                     	;# 
  1678     0417                     	;# 
  1679     041C                     	;# 
  1680     041D                     	;# 
  1681     041E                     	;# 
  1682     0FE4                     	;# 
  1683     0FE5                     	;# 
  1684     0FE6                     	;# 
  1685     0FE7                     	;# 
  1686     0FE8                     	;# 
  1687     0FE9                     	;# 
  1688     0FEA                     	;# 
  1689     0FEB                     	;# 
  1690     0FED                     	;# 
  1691     0FEE                     	;# 
  1692     0FEF                     	;# 
  1693     0000                     	;# 
  1694     0001                     	;# 
  1695     0002                     	;# 
  1696     0003                     	;# 
  1697     0004                     	;# 
  1698     0005                     	;# 
  1699     0006                     	;# 
  1700     0007                     	;# 
  1701     0008                     	;# 
  1702     0009                     	;# 
  1703     000A                     	;# 
  1704     000B                     	;# 
  1705     000C                     	;# 
  1706     000D                     	;# 
  1707     0011                     	;# 
  1708     0012                     	;# 
  1709     0013                     	;# 
  1710     0014                     	;# 
  1711     0015                     	;# 
  1712     0016                     	;# 
  1713     0016                     	;# 
  1714     0017                     	;# 
  1715     0018                     	;# 
  1716     0019                     	;# 
  1717     001A                     	;# 
  1718     001B                     	;# 
  1719     001C                     	;# 
  1720     001E                     	;# 
  1721     001F                     	;# 
  1722     008C                     	;# 
  1723     008D                     	;# 
  1724     0091                     	;# 
  1725     0092                     	;# 
  1726     0093                     	;# 
  1727     0094                     	;# 
  1728     0095                     	;# 
  1729     0096                     	;# 
  1730     0097                     	;# 
  1731     0098                     	;# 
  1732     0099                     	;# 
  1733     009A                     	;# 
  1734     009B                     	;# 
  1735     009B                     	;# 
  1736     009C                     	;# 
  1737     009D                     	;# 
  1738     009E                     	;# 
  1739     010C                     	;# 
  1740     010D                     	;# 
  1741     0111                     	;# 
  1742     0112                     	;# 
  1743     0113                     	;# 
  1744     0114                     	;# 
  1745     0115                     	;# 
  1746     0116                     	;# 
  1747     0117                     	;# 
  1748     0118                     	;# 
  1749     0119                     	;# 
  1750     011A                     	;# 
  1751     011B                     	;# 
  1752     011D                     	;# 
  1753     011E                     	;# 
  1754     018C                     	;# 
  1755     018D                     	;# 
  1756     0191                     	;# 
  1757     0191                     	;# 
  1758     0192                     	;# 
  1759     0193                     	;# 
  1760     0193                     	;# 
  1761     0193                     	;# 
  1762     0194                     	;# 
  1763     0195                     	;# 
  1764     0196                     	;# 
  1765     0199                     	;# 
  1766     019A                     	;# 
  1767     019B                     	;# 
  1768     019B                     	;# 
  1769     019B                     	;# 
  1770     019B                     	;# 
  1771     019C                     	;# 
  1772     019C                     	;# 
  1773     019D                     	;# 
  1774     019E                     	;# 
  1775     019F                     	;# 
  1776     020C                     	;# 
  1777     020D                     	;# 
  1778     0211                     	;# 
  1779     0211                     	;# 
  1780     0212                     	;# 
  1781     0212                     	;# 
  1782     0213                     	;# 
  1783     0213                     	;# 
  1784     0214                     	;# 
  1785     0214                     	;# 
  1786     0215                     	;# 
  1787     0215                     	;# 
  1788     0215                     	;# 
  1789     0216                     	;# 
  1790     0216                     	;# 
  1791     0217                     	;# 
  1792     0217                     	;# 
  1793     0219                     	;# 
  1794     021A                     	;# 
  1795     021B                     	;# 
  1796     021C                     	;# 
  1797     021D                     	;# 
  1798     021E                     	;# 
  1799     021F                     	;# 
  1800     0291                     	;# 
  1801     0291                     	;# 
  1802     0292                     	;# 
  1803     0293                     	;# 
  1804     0294                     	;# 
  1805     0295                     	;# 
  1806     0295                     	;# 
  1807     0296                     	;# 
  1808     0298                     	;# 
  1809     0298                     	;# 
  1810     0299                     	;# 
  1811     029A                     	;# 
  1812     029B                     	;# 
  1813     029C                     	;# 
  1814     029C                     	;# 
  1815     029D                     	;# 
  1816     029E                     	;# 
  1817     029E                     	;# 
  1818     0311                     	;# 
  1819     0311                     	;# 
  1820     0312                     	;# 
  1821     0313                     	;# 
  1822     0318                     	;# 
  1823     0318                     	;# 
  1824     0319                     	;# 
  1825     031A                     	;# 
  1826     0394                     	;# 
  1827     0395                     	;# 
  1828     0396                     	;# 
  1829     039A                     	;# 
  1830     039C                     	;# 
  1831     039D                     	;# 
  1832     039E                     	;# 
  1833     039F                     	;# 
  1834     0415                     	;# 
  1835     0416                     	;# 
  1836     0417                     	;# 
  1837     041C                     	;# 
  1838     041D                     	;# 
  1839     041E                     	;# 
  1840     0FE4                     	;# 
  1841     0FE5                     	;# 
  1842     0FE6                     	;# 
  1843     0FE7                     	;# 
  1844     0FE8                     	;# 
  1845     0FE9                     	;# 
  1846     0FEA                     	;# 
  1847     0FEB                     	;# 
  1848     0FED                     	;# 
  1849     0FEE                     	;# 
  1850     0FEF                     	;# 
  1851     0000                     	;# 
  1852     0001                     	;# 
  1853     0002                     	;# 
  1854     0003                     	;# 
  1855     0004                     	;# 
  1856     0005                     	;# 
  1857     0006                     	;# 
  1858     0007                     	;# 
  1859     0008                     	;# 
  1860     0009                     	;# 
  1861     000A                     	;# 
  1862     000B                     	;# 
  1863     000C                     	;# 
  1864     000D                     	;# 
  1865     0011                     	;# 
  1866     0012                     	;# 
  1867     0013                     	;# 
  1868     0014                     	;# 
  1869     0015                     	;# 
  1870     0016                     	;# 
  1871     0016                     	;# 
  1872     0017                     	;# 
  1873     0018                     	;# 
  1874     0019                     	;# 
  1875     001A                     	;# 
  1876     001B                     	;# 
  1877     001C                     	;# 
  1878     001E                     	;# 
  1879     001F                     	;# 
  1880     008C                     	;# 
  1881     008D                     	;# 
  1882     0091                     	;# 
  1883     0092                     	;# 
  1884     0093                     	;# 
  1885     0094                     	;# 
  1886     0095                     	;# 
  1887     0096                     	;# 
  1888     0097                     	;# 
  1889     0098                     	;# 
  1890     0099                     	;# 
  1891     009A                     	;# 
  1892     009B                     	;# 
  1893     009B                     	;# 
  1894     009C                     	;# 
  1895     009D                     	;# 
  1896     009E                     	;# 
  1897     010C                     	;# 
  1898     010D                     	;# 
  1899     0111                     	;# 
  1900     0112                     	;# 
  1901     0113                     	;# 
  1902     0114                     	;# 
  1903     0115                     	;# 
  1904     0116                     	;# 
  1905     0117                     	;# 
  1906     0118                     	;# 
  1907     0119                     	;# 
  1908     011A                     	;# 
  1909     011B                     	;# 
  1910     011D                     	;# 
  1911     011E                     	;# 
  1912     018C                     	;# 
  1913     018D                     	;# 
  1914     0191                     	;# 
  1915     0191                     	;# 
  1916     0192                     	;# 
  1917     0193                     	;# 
  1918     0193                     	;# 
  1919     0193                     	;# 
  1920     0194                     	;# 
  1921     0195                     	;# 
  1922     0196                     	;# 
  1923     0199                     	;# 
  1924     019A                     	;# 
  1925     019B                     	;# 
  1926     019B                     	;# 
  1927     019B                     	;# 
  1928     019B                     	;# 
  1929     019C                     	;# 
  1930     019C                     	;# 
  1931     019D                     	;# 
  1932     019E                     	;# 
  1933     019F                     	;# 
  1934     020C                     	;# 
  1935     020D                     	;# 
  1936     0211                     	;# 
  1937     0211                     	;# 
  1938     0212                     	;# 
  1939     0212                     	;# 
  1940     0213                     	;# 
  1941     0213                     	;# 
  1942     0214                     	;# 
  1943     0214                     	;# 
  1944     0215                     	;# 
  1945     0215                     	;# 
  1946     0215                     	;# 
  1947     0216                     	;# 
  1948     0216                     	;# 
  1949     0217                     	;# 
  1950     0217                     	;# 
  1951     0219                     	;# 
  1952     021A                     	;# 
  1953     021B                     	;# 
  1954     021C                     	;# 
  1955     021D                     	;# 
  1956     021E                     	;# 
  1957     021F                     	;# 
  1958     0291                     	;# 
  1959     0291                     	;# 
  1960     0292                     	;# 
  1961     0293                     	;# 
  1962     0294                     	;# 
  1963     0295                     	;# 
  1964     0295                     	;# 
  1965     0296                     	;# 
  1966     0298                     	;# 
  1967     0298                     	;# 
  1968     0299                     	;# 
  1969     029A                     	;# 
  1970     029B                     	;# 
  1971     029C                     	;# 
  1972     029C                     	;# 
  1973     029D                     	;# 
  1974     029E                     	;# 
  1975     029E                     	;# 
  1976     0311                     	;# 
  1977     0311                     	;# 
  1978     0312                     	;# 
  1979     0313                     	;# 
  1980     0318                     	;# 
  1981     0318                     	;# 
  1982     0319                     	;# 
  1983     031A                     	;# 
  1984     0394                     	;# 
  1985     0395                     	;# 
  1986     0396                     	;# 
  1987     039A                     	;# 
  1988     039C                     	;# 
  1989     039D                     	;# 
  1990     039E                     	;# 
  1991     039F                     	;# 
  1992     0415                     	;# 
  1993     0416                     	;# 
  1994     0417                     	;# 
  1995     041C                     	;# 
  1996     041D                     	;# 
  1997     041E                     	;# 
  1998     0FE4                     	;# 
  1999     0FE5                     	;# 
  2000     0FE6                     	;# 
  2001     0FE7                     	;# 
  2002     0FE8                     	;# 
  2003     0FE9                     	;# 
  2004     0FEA                     	;# 
  2005     0FEB                     	;# 
  2006     0FED                     	;# 
  2007     0FEE                     	;# 
  2008     0FEF                     	;# 
  2009     0000                     	;# 
  2010     0001                     	;# 
  2011     0002                     	;# 
  2012     0003                     	;# 
  2013     0004                     	;# 
  2014     0005                     	;# 
  2015     0006                     	;# 
  2016     0007                     	;# 
  2017     0008                     	;# 
  2018     0009                     	;# 
  2019     000A                     	;# 
  2020     000B                     	;# 
  2021     000C                     	;# 
  2022     000D                     	;# 
  2023     0011                     	;# 
  2024     0012                     	;# 
  2025     0013                     	;# 
  2026     0014                     	;# 
  2027     0015                     	;# 
  2028     0016                     	;# 
  2029     0016                     	;# 
  2030     0017                     	;# 
  2031     0018                     	;# 
  2032     0019                     	;# 
  2033     001A                     	;# 
  2034     001B                     	;# 
  2035     001C                     	;# 
  2036     001E                     	;# 
  2037     001F                     	;# 
  2038     008C                     	;# 
  2039     008D                     	;# 
  2040     0091                     	;# 
  2041     0092                     	;# 
  2042     0093                     	;# 
  2043     0094                     	;# 
  2044     0095                     	;# 
  2045     0096                     	;# 
  2046     0097                     	;# 
  2047     0098                     	;# 
  2048     0099                     	;# 
  2049     009A                     	;# 
  2050     009B                     	;# 
  2051     009B                     	;# 
  2052     009C                     	;# 
  2053     009D                     	;# 
  2054     009E                     	;# 
  2055     010C                     	;# 
  2056     010D                     	;# 
  2057     0111                     	;# 
  2058     0112                     	;# 
  2059     0113                     	;# 
  2060     0114                     	;# 
  2061     0115                     	;# 
  2062     0116                     	;# 
  2063     0117                     	;# 
  2064     0118                     	;# 
  2065     0119                     	;# 
  2066     011A                     	;# 
  2067     011B                     	;# 
  2068     011D                     	;# 
  2069     011E                     	;# 
  2070     018C                     	;# 
  2071     018D                     	;# 
  2072     0191                     	;# 
  2073     0191                     	;# 
  2074     0192                     	;# 
  2075     0193                     	;# 
  2076     0193                     	;# 
  2077     0193                     	;# 
  2078     0194                     	;# 
  2079     0195                     	;# 
  2080     0196                     	;# 
  2081     0199                     	;# 
  2082     019A                     	;# 
  2083     019B                     	;# 
  2084     019B                     	;# 
  2085     019B                     	;# 
  2086     019B                     	;# 
  2087     019C                     	;# 
  2088     019C                     	;# 
  2089     019D                     	;# 
  2090     019E                     	;# 
  2091     019F                     	;# 
  2092     020C                     	;# 
  2093     020D                     	;# 
  2094     0211                     	;# 
  2095     0211                     	;# 
  2096     0212                     	;# 
  2097     0212                     	;# 
  2098     0213                     	;# 
  2099     0213                     	;# 
  2100     0214                     	;# 
  2101     0214                     	;# 
  2102     0215                     	;# 
  2103     0215                     	;# 
  2104     0215                     	;# 
  2105     0216                     	;# 
  2106     0216                     	;# 
  2107     0217                     	;# 
  2108     0217                     	;# 
  2109     0219                     	;# 
  2110     021A                     	;# 
  2111     021B                     	;# 
  2112     021C                     	;# 
  2113     021D                     	;# 
  2114     021E                     	;# 
  2115     021F                     	;# 
  2116     0291                     	;# 
  2117     0291                     	;# 
  2118     0292                     	;# 
  2119     0293                     	;# 
  2120     0294                     	;# 
  2121     0295                     	;# 
  2122     0295                     	;# 
  2123     0296                     	;# 
  2124     0298                     	;# 
  2125     0298                     	;# 
  2126     0299                     	;# 
  2127     029A                     	;# 
  2128     029B                     	;# 
  2129     029C                     	;# 
  2130     029C                     	;# 
  2131     029D                     	;# 
  2132     029E                     	;# 
  2133     029E                     	;# 
  2134     0311                     	;# 
  2135     0311                     	;# 
  2136     0312                     	;# 
  2137     0313                     	;# 
  2138     0318                     	;# 
  2139     0318                     	;# 
  2140     0319                     	;# 
  2141     031A                     	;# 
  2142     0394                     	;# 
  2143     0395                     	;# 
  2144     0396                     	;# 
  2145     039A                     	;# 
  2146     039C                     	;# 
  2147     039D                     	;# 
  2148     039E                     	;# 
  2149     039F                     	;# 
  2150     0415                     	;# 
  2151     0416                     	;# 
  2152     0417                     	;# 
  2153     041C                     	;# 
  2154     041D                     	;# 
  2155     041E                     	;# 
  2156     0FE4                     	;# 
  2157     0FE5                     	;# 
  2158     0FE6                     	;# 
  2159     0FE7                     	;# 
  2160     0FE8                     	;# 
  2161     0FE9                     	;# 
  2162     0FEA                     	;# 
  2163     0FEB                     	;# 
  2164     0FED                     	;# 
  2165     0FEE                     	;# 
  2166     0FEF                     	;# 
  2167     0000                     	;# 
  2168     0001                     	;# 
  2169     0002                     	;# 
  2170     0003                     	;# 
  2171     0004                     	;# 
  2172     0005                     	;# 
  2173     0006                     	;# 
  2174     0007                     	;# 
  2175     0008                     	;# 
  2176     0009                     	;# 
  2177     000A                     	;# 
  2178     000B                     	;# 
  2179     000C                     	;# 
  2180     000D                     	;# 
  2181     0011                     	;# 
  2182     0012                     	;# 
  2183     0013                     	;# 
  2184     0014                     	;# 
  2185     0015                     	;# 
  2186     0016                     	;# 
  2187     0016                     	;# 
  2188     0017                     	;# 
  2189     0018                     	;# 
  2190     0019                     	;# 
  2191     001A                     	;# 
  2192     001B                     	;# 
  2193     001C                     	;# 
  2194     001E                     	;# 
  2195     001F                     	;# 
  2196     008C                     	;# 
  2197     008D                     	;# 
  2198     0091                     	;# 
  2199     0092                     	;# 
  2200     0093                     	;# 
  2201     0094                     	;# 
  2202     0095                     	;# 
  2203     0096                     	;# 
  2204     0097                     	;# 
  2205     0098                     	;# 
  2206     0099                     	;# 
  2207     009A                     	;# 
  2208     009B                     	;# 
  2209     009B                     	;# 
  2210     009C                     	;# 
  2211     009D                     	;# 
  2212     009E                     	;# 
  2213     010C                     	;# 
  2214     010D                     	;# 
  2215     0111                     	;# 
  2216     0112                     	;# 
  2217     0113                     	;# 
  2218     0114                     	;# 
  2219     0115                     	;# 
  2220     0116                     	;# 
  2221     0117                     	;# 
  2222     0118                     	;# 
  2223     0119                     	;# 
  2224     011A                     	;# 
  2225     011B                     	;# 
  2226     011D                     	;# 
  2227     011E                     	;# 
  2228     018C                     	;# 
  2229     018D                     	;# 
  2230     0191                     	;# 
  2231     0191                     	;# 
  2232     0192                     	;# 
  2233     0193                     	;# 
  2234     0193                     	;# 
  2235     0193                     	;# 
  2236     0194                     	;# 
  2237     0195                     	;# 
  2238     0196                     	;# 
  2239     0199                     	;# 
  2240     019A                     	;# 
  2241     019B                     	;# 
  2242     019B                     	;# 
  2243     019B                     	;# 
  2244     019B                     	;# 
  2245     019C                     	;# 
  2246     019C                     	;# 
  2247     019D                     	;# 
  2248     019E                     	;# 
  2249     019F                     	;# 
  2250     020C                     	;# 
  2251     020D                     	;# 
  2252     0211                     	;# 
  2253     0211                     	;# 
  2254     0212                     	;# 
  2255     0212                     	;# 
  2256     0213                     	;# 
  2257     0213                     	;# 
  2258     0214                     	;# 
  2259     0214                     	;# 
  2260     0215                     	;# 
  2261     0215                     	;# 
  2262     0215                     	;# 
  2263     0216                     	;# 
  2264     0216                     	;# 
  2265     0217                     	;# 
  2266     0217                     	;# 
  2267     0219                     	;# 
  2268     021A                     	;# 
  2269     021B                     	;# 
  2270     021C                     	;# 
  2271     021D                     	;# 
  2272     021E                     	;# 
  2273     021F                     	;# 
  2274     0291                     	;# 
  2275     0291                     	;# 
  2276     0292                     	;# 
  2277     0293                     	;# 
  2278     0294                     	;# 
  2279     0295                     	;# 
  2280     0295                     	;# 
  2281     0296                     	;# 
  2282     0298                     	;# 
  2283     0298                     	;# 
  2284     0299                     	;# 
  2285     029A                     	;# 
  2286     029B                     	;# 
  2287     029C                     	;# 
  2288     029C                     	;# 
  2289     029D                     	;# 
  2290     029E                     	;# 
  2291     029E                     	;# 
  2292     0311                     	;# 
  2293     0311                     	;# 
  2294     0312                     	;# 
  2295     0313                     	;# 
  2296     0318                     	;# 
  2297     0318                     	;# 
  2298     0319                     	;# 
  2299     031A                     	;# 
  2300     0394                     	;# 
  2301     0395                     	;# 
  2302     0396                     	;# 
  2303     039A                     	;# 
  2304     039C                     	;# 
  2305     039D                     	;# 
  2306     039E                     	;# 
  2307     039F                     	;# 
  2308     0415                     	;# 
  2309     0416                     	;# 
  2310     0417                     	;# 
  2311     041C                     	;# 
  2312     041D                     	;# 
  2313     041E                     	;# 
  2314     0FE4                     	;# 
  2315     0FE5                     	;# 
  2316     0FE6                     	;# 
  2317     0FE7                     	;# 
  2318     0FE8                     	;# 
  2319     0FE9                     	;# 
  2320     0FEA                     	;# 
  2321     0FEB                     	;# 
  2322     0FED                     	;# 
  2323     0FEE                     	;# 
  2324     0FEF                     	;# 
  2325     0000                     	;# 
  2326     0001                     	;# 
  2327     0002                     	;# 
  2328     0003                     	;# 
  2329     0004                     	;# 
  2330     0005                     	;# 
  2331     0006                     	;# 
  2332     0007                     	;# 
  2333     0008                     	;# 
  2334     0009                     	;# 
  2335     000A                     	;# 
  2336     000B                     	;# 
  2337     000C                     	;# 
  2338     000D                     	;# 
  2339     0011                     	;# 
  2340     0012                     	;# 
  2341     0013                     	;# 
  2342     0014                     	;# 
  2343     0015                     	;# 
  2344     0016                     	;# 
  2345     0016                     	;# 
  2346     0017                     	;# 
  2347     0018                     	;# 
  2348     0019                     	;# 
  2349     001A                     	;# 
  2350     001B                     	;# 
  2351     001C                     	;# 
  2352     001E                     	;# 
  2353     001F                     	;# 
  2354     008C                     	;# 
  2355     008D                     	;# 
  2356     0091                     	;# 
  2357     0092                     	;# 
  2358     0093                     	;# 
  2359     0094                     	;# 
  2360     0095                     	;# 
  2361     0096                     	;# 
  2362     0097                     	;# 
  2363     0098                     	;# 
  2364     0099                     	;# 
  2365     009A                     	;# 
  2366     009B                     	;# 
  2367     009B                     	;# 
  2368     009C                     	;# 
  2369     009D                     	;# 
  2370     009E                     	;# 
  2371     010C                     	;# 
  2372     010D                     	;# 
  2373     0111                     	;# 
  2374     0112                     	;# 
  2375     0113                     	;# 
  2376     0114                     	;# 
  2377     0115                     	;# 
  2378     0116                     	;# 
  2379     0117                     	;# 
  2380     0118                     	;# 
  2381     0119                     	;# 
  2382     011A                     	;# 
  2383     011B                     	;# 
  2384     011D                     	;# 
  2385     011E                     	;# 
  2386     018C                     	;# 
  2387     018D                     	;# 
  2388     0191                     	;# 
  2389     0191                     	;# 
  2390     0192                     	;# 
  2391     0193                     	;# 
  2392     0193                     	;# 
  2393     0193                     	;# 
  2394     0194                     	;# 
  2395     0195                     	;# 
  2396     0196                     	;# 
  2397     0199                     	;# 
  2398     019A                     	;# 
  2399     019B                     	;# 
  2400     019B                     	;# 
  2401     019B                     	;# 
  2402     019B                     	;# 
  2403     019C                     	;# 
  2404     019C                     	;# 
  2405     019D                     	;# 
  2406     019E                     	;# 
  2407     019F                     	;# 
  2408     020C                     	;# 
  2409     020D                     	;# 
  2410     0211                     	;# 
  2411     0211                     	;# 
  2412     0212                     	;# 
  2413     0212                     	;# 
  2414     0213                     	;# 
  2415     0213                     	;# 
  2416     0214                     	;# 
  2417     0214                     	;# 
  2418     0215                     	;# 
  2419     0215                     	;# 
  2420     0215                     	;# 
  2421     0216                     	;# 
  2422     0216                     	;# 
  2423     0217                     	;# 
  2424     0217                     	;# 
  2425     0219                     	;# 
  2426     021A                     	;# 
  2427     021B                     	;# 
  2428     021C                     	;# 
  2429     021D                     	;# 
  2430     021E                     	;# 
  2431     021F                     	;# 
  2432     0291                     	;# 
  2433     0291                     	;# 
  2434     0292                     	;# 
  2435     0293                     	;# 
  2436     0294                     	;# 
  2437     0295                     	;# 
  2438     0295                     	;# 
  2439     0296                     	;# 
  2440     0298                     	;# 
  2441     0298                     	;# 
  2442     0299                     	;# 
  2443     029A                     	;# 
  2444     029B                     	;# 
  2445     029C                     	;# 
  2446     029C                     	;# 
  2447     029D                     	;# 
  2448     029E                     	;# 
  2449     029E                     	;# 
  2450     0311                     	;# 
  2451     0311                     	;# 
  2452     0312                     	;# 
  2453     0313                     	;# 
  2454     0318                     	;# 
  2455     0318                     	;# 
  2456     0319                     	;# 
  2457     031A                     	;# 
  2458     0394                     	;# 
  2459     0395                     	;# 
  2460     0396                     	;# 
  2461     039A                     	;# 
  2462     039C                     	;# 
  2463     039D                     	;# 
  2464     039E                     	;# 
  2465     039F                     	;# 
  2466     0415                     	;# 
  2467     0416                     	;# 
  2468     0417                     	;# 
  2469     041C                     	;# 
  2470     041D                     	;# 
  2471     041E                     	;# 
  2472     0FE4                     	;# 
  2473     0FE5                     	;# 
  2474     0FE6                     	;# 
  2475     0FE7                     	;# 
  2476     0FE8                     	;# 
  2477     0FE9                     	;# 
  2478     0FEA                     	;# 
  2479     0FEB                     	;# 
  2480     0FED                     	;# 
  2481     0FEE                     	;# 
  2482     0FEF                     	;# 
  2483     0000                     	;# 
  2484     0001                     	;# 
  2485     0002                     	;# 
  2486     0003                     	;# 
  2487     0004                     	;# 
  2488     0005                     	;# 
  2489     0006                     	;# 
  2490     0007                     	;# 
  2491     0008                     	;# 
  2492     0009                     	;# 
  2493     000A                     	;# 
  2494     000B                     	;# 
  2495     000C                     	;# 
  2496     000D                     	;# 
  2497     0011                     	;# 
  2498     0012                     	;# 
  2499     0013                     	;# 
  2500     0014                     	;# 
  2501     0015                     	;# 
  2502     0016                     	;# 
  2503     0016                     	;# 
  2504     0017                     	;# 
  2505     0018                     	;# 
  2506     0019                     	;# 
  2507     001A                     	;# 
  2508     001B                     	;# 
  2509     001C                     	;# 
  2510     001E                     	;# 
  2511     001F                     	;# 
  2512     008C                     	;# 
  2513     008D                     	;# 
  2514     0091                     	;# 
  2515     0092                     	;# 
  2516     0093                     	;# 
  2517     0094                     	;# 
  2518     0095                     	;# 
  2519     0096                     	;# 
  2520     0097                     	;# 
  2521     0098                     	;# 
  2522     0099                     	;# 
  2523     009A                     	;# 
  2524     009B                     	;# 
  2525     009B                     	;# 
  2526     009C                     	;# 
  2527     009D                     	;# 
  2528     009E                     	;# 
  2529     010C                     	;# 
  2530     010D                     	;# 
  2531     0111                     	;# 
  2532     0112                     	;# 
  2533     0113                     	;# 
  2534     0114                     	;# 
  2535     0115                     	;# 
  2536     0116                     	;# 
  2537     0117                     	;# 
  2538     0118                     	;# 
  2539     0119                     	;# 
  2540     011A                     	;# 
  2541     011B                     	;# 
  2542     011D                     	;# 
  2543     011E                     	;# 
  2544     018C                     	;# 
  2545     018D                     	;# 
  2546     0191                     	;# 
  2547     0191                     	;# 
  2548     0192                     	;# 
  2549     0193                     	;# 
  2550     0193                     	;# 
  2551     0193                     	;# 
  2552     0194                     	;# 
  2553     0195                     	;# 
  2554     0196                     	;# 
  2555     0199                     	;# 
  2556     019A                     	;# 
  2557     019B                     	;# 
  2558     019B                     	;# 
  2559     019B                     	;# 
  2560     019B                     	;# 
  2561     019C                     	;# 
  2562     019C                     	;# 
  2563     019D                     	;# 
  2564     019E                     	;# 
  2565     019F                     	;# 
  2566     020C                     	;# 
  2567     020D                     	;# 
  2568     0211                     	;# 
  2569     0211                     	;# 
  2570     0212                     	;# 
  2571     0212                     	;# 
  2572     0213                     	;# 
  2573     0213                     	;# 
  2574     0214                     	;# 
  2575     0214                     	;# 
  2576     0215                     	;# 
  2577     0215                     	;# 
  2578     0215                     	;# 
  2579     0216                     	;# 
  2580     0216                     	;# 
  2581     0217                     	;# 
  2582     0217                     	;# 
  2583     0219                     	;# 
  2584     021A                     	;# 
  2585     021B                     	;# 
  2586     021C                     	;# 
  2587     021D                     	;# 
  2588     021E                     	;# 
  2589     021F                     	;# 
  2590     0291                     	;# 
  2591     0291                     	;# 
  2592     0292                     	;# 
  2593     0293                     	;# 
  2594     0294                     	;# 
  2595     0295                     	;# 
  2596     0295                     	;# 
  2597     0296                     	;# 
  2598     0298                     	;# 
  2599     0298                     	;# 
  2600     0299                     	;# 
  2601     029A                     	;# 
  2602     029B                     	;# 
  2603     029C                     	;# 
  2604     029C                     	;# 
  2605     029D                     	;# 
  2606     029E                     	;# 
  2607     029E                     	;# 
  2608     0311                     	;# 
  2609     0311                     	;# 
  2610     0312                     	;# 
  2611     0313                     	;# 
  2612     0318                     	;# 
  2613     0318                     	;# 
  2614     0319                     	;# 
  2615     031A                     	;# 
  2616     0394                     	;# 
  2617     0395                     	;# 
  2618     0396                     	;# 
  2619     039A                     	;# 
  2620     039C                     	;# 
  2621     039D                     	;# 
  2622     039E                     	;# 
  2623     039F                     	;# 
  2624     0415                     	;# 
  2625     0416                     	;# 
  2626     0417                     	;# 
  2627     041C                     	;# 
  2628     041D                     	;# 
  2629     041E                     	;# 
  2630     0FE4                     	;# 
  2631     0FE5                     	;# 
  2632     0FE6                     	;# 
  2633     0FE7                     	;# 
  2634     0FE8                     	;# 
  2635     0FE9                     	;# 
  2636     0FEA                     	;# 
  2637     0FEB                     	;# 
  2638     0FED                     	;# 
  2639     0FEE                     	;# 
  2640     0FEF                     	;# 
  2641                           
  2642 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  2643     0000                     
  2644 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  2645     0000                     
  2646 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  2647     0000                     
  2648                           	psect	idataBANK0
  2649     0003                     __pidataBANK0:
  2650                           
  2651                           ;initializer for _first_read
  2652     0003  3401               	retlw	1
  2653                           
  2654                           	psect	idataBANK2
  2655     0C2D                     __pidataBANK2:
  2656                           
  2657                           ;initializer for _se
  2658     0C2D  34CD               	retlw	205
  2659     0C2E  344C               	retlw	76
  2660     0C2F  3442               	retlw	66
  2661     0C30  3443               	retlw	67
  2662                           
  2663                           ;initializer for _timecontrol
  2664     0C31  3404               	retlw	4
  2665     0C32  3400               	retlw	0
  2666     0C33  3400               	retlw	0
  2667                           
  2668                           ;initializer for _kdp
  2669     0C34  3405               	retlw	5
  2670     0C35  3400               	retlw	0
  2671     0C36  3400               	retlw	0
  2672                           
  2673                           ;initializer for _kip
  2674     0C37  3496               	retlw	150
  2675     0C38  3400               	retlw	0
  2676     0C39  3400               	retlw	0
  2677                           
  2678                           ;initializer for _kpp
  2679     0C3A  3436               	retlw	54
  2680     0C3B  3401               	retlw	1
  2681     0C3C  3400               	retlw	0
  2682                           
  2683                           ;initializer for _kif
  2684     0C3D  3446               	retlw	70
  2685     0C3E  3400               	retlw	0
  2686     0C3F  3400               	retlw	0
  2687                           
  2688                           ;initializer for _kpf
  2689     0C40  34C8               	retlw	200
  2690     0C41  3400               	retlw	0
  2691     0C42  3400               	retlw	0
  2692                           
  2693                           	psect	stringtext1
  2694     0455                     __pstringtext1:
  2695     0455                     _lookupTable:
  2696     0455  348D               	retlw	141
  2697     0456  34B3               	retlw	179
  2698     0457  3429               	retlw	41
  2699     0458  343D               	retlw	61
  2700     0459  343E               	retlw	62
  2701     045A  3403               	retlw	3
  2702     045B  342A               	retlw	42
  2703     045C  343D               	retlw	61
  2704     045D  34F0               	retlw	240
  2705     045E  3452               	retlw	82
  2706     045F  342A               	retlw	42
  2707     0460  343D               	retlw	61
  2708     0461  3494               	retlw	148
  2709     0462  34A1               	retlw	161
  2710     0463  342A               	retlw	42
  2711     0464  343D               	retlw	61
  2712     0465  3445               	retlw	69
  2713     0466  34F1               	retlw	241
  2714     0467  342A               	retlw	42
  2715     0468  343D               	retlw	61
  2716     0469  34EA               	retlw	234
  2717     046A  343F               	retlw	63
  2718     046B  342B               	retlw	43
  2719     046C  343D               	retlw	61
  2720     046D  348F               	retlw	143
  2721     046E  348E               	retlw	142
  2722     046F  342B               	retlw	43
  2723     0470  343D               	retlw	61
  2724     0471  3433               	retlw	51
  2725     0472  34DD               	retlw	221
  2726     0473  342B               	retlw	43
  2727     0474  343D               	retlw	61
  2728     0475  34D8               	retlw	216
  2729     0476  342B               	retlw	43
  2730     0477  342C               	retlw	44
  2731     0478  343D               	retlw	61
  2732     0479  3470               	retlw	112
  2733     047A  3479               	retlw	121
  2734     047B  342C               	retlw	44
  2735     047C  343D               	retlw	61
  2736     047D  3415               	retlw	21
  2737     047E  34C8               	retlw	200
  2738     047F  342C               	retlw	44
  2739     0480  343D               	retlw	61
  2740     0481  34AD               	retlw	173
  2741     0482  3415               	retlw	21
  2742     0483  342D               	retlw	45
  2743     0484  343D               	retlw	61
  2744     0485  3452               	retlw	82
  2745     0486  3464               	retlw	100
  2746     0487  342D               	retlw	45
  2747     0488  343D               	retlw	61
  2748     0489  34EA               	retlw	234
  2749     048A  34B1               	retlw	177
  2750     048B  342D               	retlw	45
  2751     048C  343D               	retlw	61
  2752     048D  3482               	retlw	130
  2753     048E  34FF               	retlw	255
  2754     048F  342D               	retlw	45
  2755     0490  343D               	retlw	61
  2756     0491  341A               	retlw	26
  2757     0492  344D               	retlw	77
  2758     0493  342E               	retlw	46
  2759     0494  343D               	retlw	61
  2760     0495  34A6               	retlw	166
  2761     0496  3499               	retlw	153
  2762     0497  342E               	retlw	46
  2763     0498  343D               	retlw	61
  2764     0499  343E               	retlw	62
  2765     049A  34E7               	retlw	231
  2766     049B  342E               	retlw	46
  2767     049C  343D               	retlw	61
  2768     049D  34D7               	retlw	215
  2769     049E  3434               	retlw	52
  2770     049F  342F               	retlw	47
  2771     04A0  343D               	retlw	61
  2772     04A1  3462               	retlw	98
  2773     04A2  3481               	retlw	129
  2774     04A3  342F               	retlw	47
  2775     04A4  343D               	retlw	61
  2776     04A5  34EE               	retlw	238
  2777     04A6  34CD               	retlw	205
  2778     04A7  342F               	retlw	47
  2779     04A8  343D               	retlw	61
  2780     04A9  347A               	retlw	122
  2781     04AA  341A               	retlw	26
  2782     04AB  3430               	retlw	48
  2783     04AC  343D               	retlw	61
  2784     04AD  3406               	retlw	6
  2785     04AE  3467               	retlw	103
  2786     04AF  3430               	retlw	48
  2787     04B0  343D               	retlw	61
  2788     04B1  3492               	retlw	146
  2789     04B2  34B3               	retlw	179
  2790     04B3  3430               	retlw	48
  2791     04B4  343D               	retlw	61
  2792     04B5  341D               	retlw	29
  2793     04B6  3400               	retlw	0
  2794     04B7  3431               	retlw	49
  2795     04B8  343D               	retlw	61
  2796     04B9  34A9               	retlw	169
  2797     04BA  344C               	retlw	76
  2798     04BB  3431               	retlw	49
  2799     04BC  343D               	retlw	61
  2800     04BD  3429               	retlw	41
  2801     04BE  3498               	retlw	152
  2802     04BF  3431               	retlw	49
  2803     04C0  343D               	retlw	61
  2804     04C1  34B4               	retlw	180
  2805     04C2  34E4               	retlw	228
  2806     04C3  3431               	retlw	49
  2807     04C4  343D               	retlw	61
  2808     04C5  3434               	retlw	52
  2809     04C6  3430               	retlw	48
  2810     04C7  3432               	retlw	50
  2811     04C8  343D               	retlw	61
  2812     04C9  34B3               	retlw	179
  2813     04CA  347B               	retlw	123
  2814     04CB  3432               	retlw	50
  2815     04CC  343D               	retlw	61
  2816     04CD  3432               	retlw	50
  2817     04CE  34C7               	retlw	199
  2818     04CF  3432               	retlw	50
  2819     04D0  343D               	retlw	61
  2820     04D1  34B2               	retlw	178
  2821     04D2  3412               	retlw	18
  2822     04D3  3433               	retlw	51
  2823     04D4  343D               	retlw	61
  2824     04D5  3431               	retlw	49
  2825     04D6  345E               	retlw	94
  2826     04D7  3433               	retlw	51
  2827     04D8  343D               	retlw	61
  2828     04D9  34B0               	retlw	176
  2829     04DA  34A9               	retlw	169
  2830     04DB  3433               	retlw	51
  2831     04DC  343D               	retlw	61
  2832     04DD  3423               	retlw	35
  2833     04DE  34F4               	retlw	244
  2834     04DF  3433               	retlw	51
  2835     04E0  343D               	retlw	61
  2836     04E1  34A3               	retlw	163
  2837     04E2  343F               	retlw	63
  2838     04E3  3434               	retlw	52
  2839     04E4  343D               	retlw	61
  2840     04E5  3416               	retlw	22
  2841     04E6  348A               	retlw	138
  2842     04E7  3434               	retlw	52
  2843     04E8  343D               	retlw	61
  2844     04E9  3489               	retlw	137
  2845     04EA  34D4               	retlw	212
  2846     04EB  3434               	retlw	52
  2847     04EC  343D               	retlw	61
  2848     04ED  34FB               	retlw	251
  2849     04EE  341E               	retlw	30
  2850     04EF  3435               	retlw	53
  2851     04F0  343D               	retlw	61
  2852     04F1  346E               	retlw	110
  2853     04F2  3469               	retlw	105
  2854     04F3  3435               	retlw	53
  2855     04F4  343D               	retlw	61
  2856     04F5  34E1               	retlw	225
  2857     04F6  34B3               	retlw	179
  2858     04F7  3435               	retlw	53
  2859     04F8  343D               	retlw	61
  2860     04F9  3454               	retlw	84
  2861     04FA  34FE               	retlw	254
  2862     04FB  3435               	retlw	53
  2863     04FC  343D               	retlw	61
  2864     04FD  34C7               	retlw	199
  2865     04FE  3448               	retlw	72
  2866     04FF  3436               	retlw	54
  2867     0500  343D               	retlw	61
  2868     0501  342E               	retlw	46
  2869     0502  3492               	retlw	146
  2870     0503  3436               	retlw	54
  2871     0504  343D               	retlw	61
  2872     0505  34A0               	retlw	160
  2873     0506  34DC               	retlw	220
  2874     0507  3436               	retlw	54
  2875     0508  343D               	retlw	61
  2876     0509  3407               	retlw	7
  2877     050A  3426               	retlw	38
  2878     050B  3437               	retlw	55
  2879     050C  343D               	retlw	61
  2880     050D  346D               	retlw	109
  2881     050E  346F               	retlw	111
  2882     050F  3437               	retlw	55
  2883     0510  343D               	retlw	61
  2884     0511  34D4               	retlw	212
  2885     0512  34B8               	retlw	184
  2886     0513  3437               	retlw	55
  2887     0514  343D               	retlw	61
  2888     0515  343A               	retlw	58
  2889     0516  3402               	retlw	2
  2890     0517  3438               	retlw	56
  2891     0518  343D               	retlw	61
  2892     0519  34A1               	retlw	161
  2893     051A  344B               	retlw	75
  2894     051B  3438               	retlw	56
  2895     051C  343D               	retlw	61
  2896     051D  3407               	retlw	7
  2897     051E  3495               	retlw	149
  2898     051F  3438               	retlw	56
  2899     0520  343D               	retlw	61
  2900     0521                     __end_of_lookupTable:
  2901                           
  2902                           	psect	nvBANK0
  2903     006D                     __pnvBANK0:
  2904     006D                     _TMR1_GateInterruptHandler:
  2905     006D                     	ds	2
  2906                           
  2907                           	psect	nvBANK2
  2908     0136                     __pnvBANK2:
  2909     0136                     _EUSART_ErrorHandler:
  2910     0136                     	ds	2
  2911     0138                     _EUSART_OverrunErrorHandler:
  2912     0138                     	ds	2
  2913     013A                     _EUSART_FramingErrorHandler:
  2914     013A                     	ds	2
  2915     0018                     _T1CONbits	set	24
  2916     0018                     _T1CON	set	24
  2917     0016                     _TMR1L	set	22
  2918     0017                     _TMR1H	set	23
  2919     0019                     _T1GCON	set	25
  2920     0015                     _TMR0	set	21
  2921     0013                     _PIR3bits	set	19
  2922     001C                     _T2CON	set	28
  2923     0011                     _PIR1bits	set	17
  2924     001A                     _TMR2	set	26
  2925     001B                     _PR2	set	27
  2926     000B                     _INTCONbits	set	11
  2927     009D                     _ADCON0bits	set	157
  2928     009D                     _ADCON0	set	157
  2929     009C                     _ADRESH	set	156
  2930     009B                     _ADRESL	set	155
  2931     009E                     _ADCON1	set	158
  2932     0095                     _OPTION_REG	set	149
  2933     0091                     _PIE1bits	set	145
  2934     0095                     _OPTION_REGbits	set	149
  2935     008D                     _TRISB	set	141
  2936     008C                     _TRISA	set	140
  2937     0097                     _WDTCON	set	151
  2938     0098                     _OSCTUNE	set	152
  2939     0099                     _OSCCON	set	153
  2940     010C                     _LATAbits	set	268
  2941     0115                     _CMOUTbits	set	277
  2942     0112                     _CM1CON1	set	274
  2943     0111                     _CM1CON0	set	273
  2944     0119                     _DACCON1	set	281
  2945     0118                     _DACCON0	set	280
  2946     0117                     _FVRCON	set	279
  2947     011E                     _APFCON1	set	286
  2948     011D                     _APFCON0	set	285
  2949     010D                     _LATB	set	269
  2950     010C                     _LATA	set	268
  2951     0116                     _BORCON	set	278
  2952     019A                     _TXREG	set	410
  2953     0199                     _RCREG	set	409
  2954     019D                     _RCSTAbits	set	413
  2955     019C                     _SPBRGH	set	412
  2956     019B                     _SPBRGL	set	411
  2957     019E                     _TXSTA	set	414
  2958     019D                     _RCSTA	set	413
  2959     019F                     _BAUDCON	set	415
  2960     018C                     _ANSELA	set	396
  2961     018D                     _ANSELB	set	397
  2962     020C                     _WPUA	set	524
  2963     020D                     _WPUB	set	525
  2964     029E                     _CCPTMRS0bits	set	670
  2965     0291                     _CCPR1L	set	657
  2966     0292                     _CCPR1H	set	658
  2967     0296                     _PSTR1CON	set	662
  2968     0294                     _PWM1CON	set	660
  2969     0295                     _ECCP1AS	set	661
  2970     0293                     _CCP1CON	set	659
  2971     041E                     _T6CON	set	1054
  2972     041C                     _TMR6	set	1052
  2973     041D                     _PR6	set	1053
  2974     0417                     _T4CONbits	set	1047
  2975     0417                     _T4CON	set	1047
  2976     0415                     _TMR4	set	1045
  2977     0416                     _PR4	set	1046
  2978                           
  2979                           	psect	cinit
  2980     001B                     start_initialization:	
  2981                           ; #config settings
  2982                           
  2983     001B                     __initialization:
  2984                           
  2985                           ; Initialize objects allocated to BANK0
  2986     001B  3180  2003  3180   	fcall	__pidataBANK0	;fetch initializer
  2987     001E  00EF               	movwf	__pdataBANK0& (0+127)
  2988                           
  2989                           ; Initialize objects allocated to BANK2
  2990     001F  302D               	movlw	low __pidataBANK2
  2991     0020  0084               	movwf	4
  2992     0021  308C               	movlw	(high __pidataBANK2)| (0+128)
  2993     0022  0085               	movwf	5
  2994     0023  3020               	movlw	low __pdataBANK2
  2995     0024  0086               	movwf	6
  2996     0025  3001               	movlw	high __pdataBANK2
  2997     0026  0087               	movwf	7
  2998     0027  3016               	movlw	22
  2999     0028  318B  237B  3180   	fcall	init_ram
  3000                           
  3001                           ; Clear objects allocated to BANK0
  3002     002B  3053               	movlw	low __pbssBANK0
  3003     002C  0084               	movwf	4
  3004     002D  3000               	movlw	high __pbssBANK0
  3005     002E  0085               	movwf	5
  3006     002F  301A               	movlw	26
  3007     0030  318B  2375  3180   	fcall	clear_ram0
  3008                           
  3009                           ; Clear objects allocated to BANK1
  3010     0033  30A0               	movlw	low __pbssBANK1
  3011     0034  0084               	movwf	4
  3012     0035  3000               	movlw	high __pbssBANK1
  3013     0036  0085               	movwf	5
  3014     0037  302D               	movlw	45
  3015     0038  318B  2375         	fcall	clear_ram0
  3016                           
  3017                           ; Clear objects allocated to BANK2
  3018     003A  0022               	movlb	2	; select bank2
  3019     003B  01BC               	clrf	__pbssBANK2& (0+127)
  3020     003C  01BD               	clrf	(__pbssBANK2+1)& (0+127)
  3021     003D  01BE               	clrf	(__pbssBANK2+2)& (0+127)
  3022     003E                     end_of_initialization:	
  3023                           ;End of C runtime variable initialization code
  3024                           
  3025     003E                     __end_of__initialization:
  3026     003E  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3027     003F  0020               	movlb	0
  3028     0040  3186  2EA6         	ljmp	_main	;jump to C main() function
  3029                           
  3030                           	psect	bssBANK0
  3031     0053                     __pbssBANK0:
  3032     0053                     _bufferRx:
  3033     0053                     	ds	8
  3034     005B                     _flux:
  3035     005B                     	ds	3
  3036     005E                     _errorp:
  3037     005E                     	ds	3
  3038     0061                     _sp_height:
  3039     0061                     	ds	2
  3040     0063                     _tempo_voo:
  3041     0063                     	ds	2
  3042     0065                     _avg_height:
  3043     0065                     	ds	2
  3044     0067                     _ADC_InterruptHandler:
  3045     0067                     	ds	2
  3046     0069                     _func_mode:
  3047     0069                     	ds	1
  3048     006A                     _pas:
  3049     006A                     	ds	1
  3050     006B                     _sentido:
  3051     006B                     	ds	1
  3052     006C                     _timer0ReloadVal:
  3053     006C                     	ds	1
  3054                           
  3055                           	psect	dataBANK0
  3056     006F                     __pdataBANK0:
  3057     006F                     _first_read:
  3058     006F                     	ds	1
  3059                           
  3060                           	psect	bssBANK1
  3061     00A0                     __pbssBANK1:
  3062     00A0                     _avg_tempo_voo:
  3063     00A0                     	ds	4
  3064     00A4                     _outpre:
  3065     00A4                     	ds	3
  3066     00A7                     _outputsum:
  3067     00A7                     	ds	3
  3068     00AA                     _ballset:
  3069     00AA                     	ds	3
  3070     00AD                     _balldist:
  3071     00AD                     	ds	3
  3072     00B0                     _error:
  3073     00B0                     	ds	3
  3074     00B3                     _dc:
  3075     00B3                     	ds	2
  3076     00B5                     _vRx:
  3077     00B5                     	ds	2
  3078     00B7                     _vTx:
  3079     00B7                     	ds	2
  3080     00B9                     _adc_temp:
  3081     00B9                     	ds	2
  3082     00BB                     _sp_position:
  3083     00BB                     	ds	2
  3084     00BD                     _position:
  3085     00BD                     	ds	2
  3086     00BF                     _height:
  3087     00BF                     	ds	2
  3088     00C1                     _output:
  3089     00C1                     	ds	2
  3090     00C3                     _timer1ReloadVal:
  3091     00C3                     	ds	2
  3092     00C5                     _nao_salva:
  3093     00C5                     	ds	1
  3094     00C6                     _count_Tx:
  3095     00C6                     	ds	1
  3096     00C7                     _countRx:
  3097     00C7                     	ds	1
  3098     00C8                     _passo_ctrl:
  3099     00C8                     	ds	1
  3100     00C9                     _fim_curso:
  3101     00C9                     	ds	1
  3102     00CA                     _passo:
  3103     00CA                     	ds	1
  3104     00CB                     _controlchoice:
  3105     00CB                     	ds	1
  3106     00CC                     _eusartRxLastError:
  3107     00CC                     	ds	1
  3108                           
  3109                           	psect	bssBANK2
  3110     013C                     __pbssBANK2:
  3111     013C                     _dinput:
  3112     013C                     	ds	3
  3113                           
  3114                           	psect	dataBANK2
  3115     0120                     __pdataBANK2:
  3116     0120                     _se:
  3117     0120                     	ds	4
  3118     0124                     _timecontrol:
  3119     0124                     	ds	3
  3120     0127                     _kdp:
  3121     0127                     	ds	3
  3122     012A                     _kip:
  3123     012A                     	ds	3
  3124     012D                     _kpp:
  3125     012D                     	ds	3
  3126     0130                     _kif:
  3127     0130                     	ds	3
  3128     0133                     _kpf:
  3129     0133                     	ds	3
  3130                           
  3131                           	psect	inittext
  3132     0B7B                     init_ram:
  3133     0B7B  00FE               	movwf	126
  3134     0B7C                     initloop:
  3135     0B7C  0012               	moviw fsr0++
  3136     0B7D  001E               	movwi fsr1++
  3137     0B7E  0BFE               	decfsz	126,f
  3138     0B7F  2B7C               	goto	initloop
  3139     0B80  3400               	retlw	0
  3140                           
  3141                           	psect	clrtext
  3142     0B75                     clear_ram0:	
  3143                           ;	Called with FSR0 containing the base address, and
  3144                           ;	WREG with the size to clear
  3145                           
  3146     0B75  0064               	clrwdt	;clear the watchdog before getting into this loop
  3147     0B76                     clrloop0:
  3148     0B76  0180               	clrf	0	;clear RAM location pointed to by FSR
  3149     0B77  3101               	addfsr 0,1
  3150     0B78  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3151     0B79  2B76               	goto	clrloop0	;have we reached the end yet?
  3152     0B7A  3400               	retlw	0	;all done for this memory range, return
  3153                           
  3154                           	psect	cstackBANK1
  3155     00CD                     __pcstackBANK1:
  3156     00CD                     ??_PIN_MANAGER_Initialize:
  3157     00CD                     ??_OSCILLATOR_Initialize:	
  3158                           ; 1 bytes @ 0x0
  3159                           
  3160     00CD                     ??_WDT_Initialize:	
  3161                           ; 1 bytes @ 0x0
  3162                           
  3163     00CD                     ??_DAC_Initialize:	
  3164                           ; 1 bytes @ 0x0
  3165                           
  3166     00CD                     ??_FVR_Initialize:	
  3167                           ; 1 bytes @ 0x0
  3168                           
  3169     00CD                     ??_TMR4_Initialize:	
  3170                           ; 1 bytes @ 0x0
  3171                           
  3172     00CD                     ??_TMR2_Initialize:	
  3173                           ; 1 bytes @ 0x0
  3174                           
  3175     00CD                     ??_TMR0_Initialize:	
  3176                           ; 1 bytes @ 0x0
  3177                           
  3178     00CD                     ??_TMR6_Initialize:	
  3179                           ; 1 bytes @ 0x0
  3180                           
  3181     00CD                     ??_CMP1_Initialize:	
  3182                           ; 1 bytes @ 0x0
  3183                           
  3184     00CD                     ??_ADC_Initialize:	
  3185                           ; 1 bytes @ 0x0
  3186                           
  3187     00CD                     ??_EPWM1_Initialize:	
  3188                           ; 1 bytes @ 0x0
  3189                           
  3190     00CD                     ?_EUSART_SetFramingErrorHandler:	
  3191                           ; 1 bytes @ 0x0
  3192                           
  3193     00CD                     ?_EUSART_SetOverrunErrorHandler:	
  3194                           ; 1 bytes @ 0x0
  3195                           
  3196     00CD                     ?_EUSART_SetErrorHandler:	
  3197                           ; 1 bytes @ 0x0
  3198                           
  3199     00CD                     ?_TMR1_SetGateInterruptHandler:	
  3200                           ; 1 bytes @ 0x0
  3201                           
  3202     00CD                     ??_TMR4_StartTimer:	
  3203                           ; 1 bytes @ 0x0
  3204                           
  3205     00CD                     ??_TMR4_StopTimer:	
  3206                           ; 1 bytes @ 0x0
  3207                           
  3208     00CD                     ?_EPWM1_LoadDutyValue:	
  3209                           ; 1 bytes @ 0x0
  3210                           
  3211     00CD                     ??_EUSART_is_rx_ready:	
  3212                           ; 1 bytes @ 0x0
  3213                           
  3214     00CD                     ??_EUSART_Read:	
  3215                           ; 1 bytes @ 0x0
  3216                           
  3217     00CD                     ??_EUSART_Write:	
  3218                           ; 1 bytes @ 0x0
  3219                           
  3220     00CD                     ??_TMR0_ReadTimer:	
  3221                           ; 1 bytes @ 0x0
  3222                           
  3223     00CD                     ??_CMP1_GetOutputStatus:	
  3224                           ; 1 bytes @ 0x0
  3225                           
  3226     00CD                     ??_TMR6_WriteTimer:	
  3227                           ; 1 bytes @ 0x0
  3228                           
  3229     00CD                     ??_TMR6_LoadPeriodRegister:	
  3230                           ; 1 bytes @ 0x0
  3231                           
  3232     00CD                     ?_definePassoMotor:	
  3233                           ; 1 bytes @ 0x0
  3234                           
  3235     00CD                     ?_ADC_GetConversion:	
  3236                           ; 1 bytes @ 0x0
  3237                           
  3238     00CD                     ?___tmul:	
  3239                           ; 2 bytes @ 0x0
  3240                           
  3241     00CD                     ?___fltol:	
  3242                           ; 3 bytes @ 0x0
  3243                           
  3244     00CD                     EUSART_Write@txData:	
  3245                           ; 4 bytes @ 0x0
  3246                           
  3247     00CD                     TMR0_ReadTimer@readVal:	
  3248                           ; 1 bytes @ 0x0
  3249                           
  3250     00CD                     TMR6_WriteTimer@timerVal:	
  3251                           ; 1 bytes @ 0x0
  3252                           
  3253     00CD                     TMR6_LoadPeriodRegister@periodVal:	
  3254                           ; 1 bytes @ 0x0
  3255                           
  3256     00CD                     definePassoMotor@sentido:	
  3257                           ; 1 bytes @ 0x0
  3258                           
  3259     00CD                     EPWM1_LoadDutyValue@dutyValue:	
  3260                           ; 1 bytes @ 0x0
  3261                           
  3262     00CD                     EUSART_SetFramingErrorHandler@interruptHandler:	
  3263                           ; 2 bytes @ 0x0
  3264                           
  3265     00CD                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  3266                           ; 2 bytes @ 0x0
  3267                           
  3268     00CD                     EUSART_SetErrorHandler@interruptHandler:	
  3269                           ; 2 bytes @ 0x0
  3270                           
  3271     00CD                     TMR1_SetGateInterruptHandler@InterruptHandler:	
  3272                           ; 2 bytes @ 0x0
  3273                           
  3274     00CD                     ___tmul@multiplier:	
  3275                           ; 2 bytes @ 0x0
  3276                           
  3277     00CD                     ___fltol@f1:	
  3278                           ; 3 bytes @ 0x0
  3279                           
  3280                           
  3281                           ; 4 bytes @ 0x0
  3282     00CD                     	ds	1
  3283     00CE                     ??_definePassoMotor:
  3284                           
  3285                           ; 1 bytes @ 0x1
  3286     00CE                     	ds	1
  3287     00CF                     ??_TMR1_Initialize:
  3288     00CF                     ??_EUSART_Initialize:	
  3289                           ; 1 bytes @ 0x2
  3290                           
  3291     00CF                     ??_EUSART_SetFramingErrorHandler:	
  3292                           ; 1 bytes @ 0x2
  3293                           
  3294     00CF                     ??_EUSART_SetOverrunErrorHandler:	
  3295                           ; 1 bytes @ 0x2
  3296                           
  3297     00CF                     ??_EUSART_SetErrorHandler:	
  3298                           ; 1 bytes @ 0x2
  3299                           
  3300     00CF                     ??_TMR1_SetGateInterruptHandler:	
  3301                           ; 1 bytes @ 0x2
  3302                           
  3303     00CF                     ??_SYSTEM_Initialize:	
  3304                           ; 1 bytes @ 0x2
  3305                           
  3306     00CF                     ??_EPWM1_LoadDutyValue:	
  3307                           ; 1 bytes @ 0x2
  3308                           
  3309     00CF                     ??_ADC_GetConversion:	
  3310                           ; 1 bytes @ 0x2
  3311                           
  3312     00CF                     definePassoMotor@passom:	
  3313                           ; 1 bytes @ 0x2
  3314                           
  3315                           
  3316                           ; 1 bytes @ 0x2
  3317     00CF                     	ds	1
  3318     00D0                     ??_daUmPasso:
  3319     00D0                     ADC_GetConversion@channel:	
  3320                           ; 1 bytes @ 0x3
  3321                           
  3322     00D0                     daUmPasso@sentido:	
  3323                           ; 1 bytes @ 0x3
  3324                           
  3325     00D0                     ___tmul@multiplicand:	
  3326                           ; 1 bytes @ 0x3
  3327                           
  3328                           
  3329                           ; 3 bytes @ 0x3
  3330     00D0                     	ds	1
  3331     00D1                     ??_fluxpos:
  3332     00D1                     ??_setaPorta:	
  3333                           ; 1 bytes @ 0x4
  3334                           
  3335     00D1                     ??_analisa_Rx:	
  3336                           ; 1 bytes @ 0x4
  3337                           
  3338     00D1                     ??___fltol:	
  3339                           ; 1 bytes @ 0x4
  3340                           
  3341                           
  3342                           ; 1 bytes @ 0x4
  3343     00D1                     	ds	2
  3344     00D3                     ??___tmul:
  3345     00D3                     ___tmul@product:	
  3346                           ; 1 bytes @ 0x6
  3347                           
  3348                           
  3349                           ; 3 bytes @ 0x6
  3350     00D3                     	ds	2
  3351     00D5                     ___fltol@sign1:
  3352                           
  3353                           ; 1 bytes @ 0x8
  3354     00D5                     	ds	1
  3355     00D6                     ?___atdiv:
  3356     00D6                     ___fltol@exp1:	
  3357                           ; 3 bytes @ 0x9
  3358                           
  3359     00D6                     ___atdiv@divisor:	
  3360                           ; 1 bytes @ 0x9
  3361                           
  3362                           
  3363                           ; 3 bytes @ 0x9
  3364     00D6                     	ds	1
  3365     00D7                     ??_envia_Tx:
  3366                           
  3367                           ; 1 bytes @ 0xA
  3368     00D7                     	ds	2
  3369     00D9                     ___atdiv@dividend:
  3370                           
  3371                           ; 3 bytes @ 0xC
  3372     00D9                     	ds	3
  3373     00DC                     ??___atdiv:
  3374                           
  3375                           ; 1 bytes @ 0xF
  3376     00DC                     	ds	1
  3377     00DD                     ___atdiv@counter:
  3378                           
  3379                           ; 1 bytes @ 0x10
  3380     00DD                     	ds	1
  3381     00DE                     ___atdiv@sign:
  3382                           
  3383                           ; 1 bytes @ 0x11
  3384     00DE                     	ds	1
  3385     00DF                     ___atdiv@quotient:
  3386                           
  3387                           ; 3 bytes @ 0x12
  3388     00DF                     	ds	3
  3389     00E2                     ??_fluxcontrol:
  3390     00E2                     ??_pwmcontrol:	
  3391                           ; 1 bytes @ 0x15
  3392                           
  3393                           
  3394                           ; 1 bytes @ 0x15
  3395     00E2                     	ds	12
  3396     00EE                     ??_controlchoose:
  3397     00EE                     ??_main:	
  3398                           ; 1 bytes @ 0x21
  3399                           
  3400                           
  3401                           ; 1 bytes @ 0x21
  3402     00EE                     	ds	1
  3403                           
  3404                           	psect	cstackCOMMON
  3405     0070                     __pcstackCOMMON:
  3406     0070                     ?_PIN_MANAGER_Initialize:
  3407     0070                     ?_OSCILLATOR_Initialize:	
  3408                           ; 1 bytes @ 0x0
  3409                           
  3410     0070                     ?_WDT_Initialize:	
  3411                           ; 1 bytes @ 0x0
  3412                           
  3413     0070                     ?_DAC_Initialize:	
  3414                           ; 1 bytes @ 0x0
  3415                           
  3416     0070                     ?_FVR_Initialize:	
  3417                           ; 1 bytes @ 0x0
  3418                           
  3419     0070                     ?_TMR4_Initialize:	
  3420                           ; 1 bytes @ 0x0
  3421                           
  3422     0070                     ?_TMR2_Initialize:	
  3423                           ; 1 bytes @ 0x0
  3424                           
  3425     0070                     ?_TMR0_Initialize:	
  3426                           ; 1 bytes @ 0x0
  3427                           
  3428     0070                     ?_TMR6_Initialize:	
  3429                           ; 1 bytes @ 0x0
  3430                           
  3431     0070                     ?_CMP1_Initialize:	
  3432                           ; 1 bytes @ 0x0
  3433                           
  3434     0070                     ?_ADC_Initialize:	
  3435                           ; 1 bytes @ 0x0
  3436                           
  3437     0070                     ?_EPWM1_Initialize:	
  3438                           ; 1 bytes @ 0x0
  3439                           
  3440     0070                     ?_TMR1_Initialize:	
  3441                           ; 1 bytes @ 0x0
  3442                           
  3443     0070                     ?_EUSART_Initialize:	
  3444                           ; 1 bytes @ 0x0
  3445                           
  3446     0070                     ?_TMR1_GATE_ISR:	
  3447                           ; 1 bytes @ 0x0
  3448                           
  3449     0070                     ?_TMR1_DefaultGateInterruptHandler:	
  3450                           ; 1 bytes @ 0x0
  3451                           
  3452     0070                     ??_TMR1_DefaultGateInterruptHandler:	
  3453                           ; 1 bytes @ 0x0
  3454                           
  3455     0070                     ?_daUmPasso:	
  3456                           ; 1 bytes @ 0x0
  3457                           
  3458     0070                     ?_SYSTEM_Initialize:	
  3459                           ; 1 bytes @ 0x0
  3460                           
  3461     0070                     ?_PIN_MANAGER_IOC:	
  3462                           ; 1 bytes @ 0x0
  3463                           
  3464     0070                     ??_PIN_MANAGER_IOC:	
  3465                           ; 1 bytes @ 0x0
  3466                           
  3467     0070                     ?_TMR4_StartTimer:	
  3468                           ; 1 bytes @ 0x0
  3469                           
  3470     0070                     ?_TMR4_StopTimer:	
  3471                           ; 1 bytes @ 0x0
  3472                           
  3473     0070                     ?_INTERRUPT_InterruptManager:	
  3474                           ; 1 bytes @ 0x0
  3475                           
  3476     0070                     ?_EUSART_is_rx_ready:	
  3477                           ; 1 bytes @ 0x0
  3478                           
  3479     0070                     ?_EUSART_Read:	
  3480                           ; 1 bytes @ 0x0
  3481                           
  3482     0070                     ?_EUSART_Write:	
  3483                           ; 1 bytes @ 0x0
  3484                           
  3485     0070                     ?_TMR0_ReadTimer:	
  3486                           ; 1 bytes @ 0x0
  3487                           
  3488     0070                     ?_CMP1_GetOutputStatus:	
  3489                           ; 1 bytes @ 0x0
  3490                           
  3491     0070                     ?_TMR6_WriteTimer:	
  3492                           ; 1 bytes @ 0x0
  3493                           
  3494     0070                     ?_TMR6_LoadPeriodRegister:	
  3495                           ; 1 bytes @ 0x0
  3496                           
  3497     0070                     ?_TMR1_WriteTimer:	
  3498                           ; 1 bytes @ 0x0
  3499                           
  3500     0070                     ?_TMR1_Reload:	
  3501                           ; 1 bytes @ 0x0
  3502                           
  3503     0070                     ?_fluxcontrol:	
  3504                           ; 1 bytes @ 0x0
  3505                           
  3506     0070                     ?_pwmcontrol:	
  3507                           ; 1 bytes @ 0x0
  3508                           
  3509     0070                     ?_fluxpos:	
  3510                           ; 1 bytes @ 0x0
  3511                           
  3512     0070                     ?_setaPorta:	
  3513                           ; 1 bytes @ 0x0
  3514                           
  3515     0070                     ?_controlchoose:	
  3516                           ; 1 bytes @ 0x0
  3517                           
  3518     0070                     ?_analisa_Rx:	
  3519                           ; 1 bytes @ 0x0
  3520                           
  3521     0070                     ?_envia_Tx:	
  3522                           ; 1 bytes @ 0x0
  3523                           
  3524     0070                     ?_mede_height:	
  3525                           ; 1 bytes @ 0x0
  3526                           
  3527     0070                     ?_main:	
  3528                           ; 1 bytes @ 0x0
  3529                           
  3530     0070                     ?__Umul8_16:	
  3531                           ; 1 bytes @ 0x0
  3532                           
  3533     0070                     ?_TMR1_ReadTimer:	
  3534                           ; 2 bytes @ 0x0
  3535                           
  3536     0070                     ?___lwdiv:	
  3537                           ; 2 bytes @ 0x0
  3538                           
  3539     0070                     __Umul8_16@multiplicand:	
  3540                           ; 2 bytes @ 0x0
  3541                           
  3542     0070                     TMR1_WriteTimer@timerVal:	
  3543                           ; 1 bytes @ 0x0
  3544                           
  3545     0070                     ___lwdiv@divisor:	
  3546                           ; 2 bytes @ 0x0
  3547                           
  3548                           
  3549                           ; 2 bytes @ 0x0
  3550     0070                     	ds	2
  3551     0072                     ??__Umul8_16:
  3552     0072                     ??_TMR1_ReadTimer:	
  3553                           ; 1 bytes @ 0x2
  3554                           
  3555     0072                     ??_TMR1_WriteTimer:	
  3556                           ; 1 bytes @ 0x2
  3557                           
  3558     0072                     ??_TMR1_Reload:	
  3559                           ; 1 bytes @ 0x2
  3560                           
  3561     0072                     ___lwdiv@dividend:	
  3562                           ; 1 bytes @ 0x2
  3563                           
  3564                           
  3565                           ; 2 bytes @ 0x2
  3566     0072                     	ds	2
  3567     0074                     ??___lwdiv:
  3568     0074                     __Umul8_16@product:	
  3569                           ; 1 bytes @ 0x4
  3570                           
  3571                           
  3572                           ; 2 bytes @ 0x4
  3573     0074                     	ds	1
  3574     0075                     ___lwdiv@quotient:
  3575                           
  3576                           ; 2 bytes @ 0x5
  3577     0075                     	ds	1
  3578     0076                     __Umul8_16@word_mpld:
  3579                           
  3580                           ; 2 bytes @ 0x6
  3581     0076                     	ds	1
  3582     0077                     ___lwdiv@counter:
  3583     0077                     TMR1_ReadTimer@readVal:	
  3584                           ; 1 bytes @ 0x7
  3585                           
  3586                           
  3587                           ; 2 bytes @ 0x7
  3588     0077                     	ds	1
  3589     0078                     __Umul8_16@multiplier:
  3590                           
  3591                           ; 1 bytes @ 0x8
  3592     0078                     	ds	1
  3593     0079                     ??___flmul:
  3594     0079                     TMR1_ReadTimer@readValHigh:	
  3595                           ; 1 bytes @ 0x9
  3596                           
  3597                           
  3598                           ; 1 bytes @ 0x9
  3599     0079                     	ds	1
  3600     007A                     TMR1_ReadTimer@readValLow:
  3601                           
  3602                           ; 1 bytes @ 0xA
  3603     007A                     	ds	4
  3604     007E                     ??_TMR1_GATE_ISR:
  3605     007E                     ??_INTERRUPT_InterruptManager:	
  3606                           ; 1 bytes @ 0xE
  3607                           
  3608                           
  3609                           	psect	cstackBANK0
  3610     0020                     __pcstackBANK0:	
  3611                           ; 1 bytes @ 0xE
  3612                           
  3613     0020                     ?___flmul:
  3614     0020                     ___flmul@b:	
  3615                           ; 4 bytes @ 0x0
  3616                           
  3617                           
  3618                           ; 4 bytes @ 0x0
  3619     0020                     	ds	4
  3620     0024                     ___flmul@a:
  3621                           
  3622                           ; 4 bytes @ 0x4
  3623     0024                     	ds	4
  3624     0028                     ___flmul@sign:
  3625                           
  3626                           ; 1 bytes @ 0x8
  3627     0028                     	ds	1
  3628     0029                     ___flmul@aexp:
  3629                           
  3630                           ; 1 bytes @ 0x9
  3631     0029                     	ds	1
  3632     002A                     ___flmul@grs:
  3633                           
  3634                           ; 4 bytes @ 0xA
  3635     002A                     	ds	4
  3636     002E                     ___flmul@bexp:
  3637                           
  3638                           ; 1 bytes @ 0xE
  3639     002E                     	ds	1
  3640     002F                     ___flmul@prod:
  3641                           
  3642                           ; 4 bytes @ 0xF
  3643     002F                     	ds	4
  3644     0033                     ___flmul@temp:
  3645                           
  3646                           ; 2 bytes @ 0x13
  3647     0033                     	ds	2
  3648     0035                     ?i1___fltol:
  3649     0035                     i1___fltol@f1:	
  3650                           ; 4 bytes @ 0x15
  3651                           
  3652                           
  3653                           ; 4 bytes @ 0x15
  3654     0035                     	ds	4
  3655     0039                     ??i1___fltol:
  3656                           
  3657                           ; 1 bytes @ 0x19
  3658     0039                     	ds	4
  3659     003D                     i1___fltol@sign1:
  3660                           
  3661                           ; 1 bytes @ 0x1D
  3662     003D                     	ds	1
  3663     003E                     i1___fltol@exp1:
  3664                           
  3665                           ; 1 bytes @ 0x1E
  3666     003E                     	ds	1
  3667     003F                     ?___xxtofl:
  3668     003F                     ___xxtofl@val:	
  3669                           ; 4 bytes @ 0x1F
  3670                           
  3671                           
  3672                           ; 4 bytes @ 0x1F
  3673     003F                     	ds	4
  3674     0043                     ??___xxtofl:
  3675                           
  3676                           ; 1 bytes @ 0x23
  3677     0043                     	ds	4
  3678     0047                     ___xxtofl@sign:
  3679                           
  3680                           ; 1 bytes @ 0x27
  3681     0047                     	ds	1
  3682     0048                     ___xxtofl@exp:
  3683                           
  3684                           ; 1 bytes @ 0x28
  3685     0048                     	ds	1
  3686     0049                     ___xxtofl@arg:
  3687                           
  3688                           ; 4 bytes @ 0x29
  3689     0049                     	ds	4
  3690     004D                     ??_mede_height:
  3691                           
  3692                           ; 1 bytes @ 0x2D
  3693     004D                     	ds	6
  3694                           
  3695                           	psect	maintext
  3696     06A6                     __pmaintext:	
  3697 ;;
  3698 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  3699 ;;
  3700 ;; *************** function _main *****************
  3701 ;; Defined at:
  3702 ;;		line 297 in file "main.c"
  3703 ;; Parameters:    Size  Location     Type
  3704 ;;		None
  3705 ;; Auto vars:     Size  Location     Type
  3706 ;;		None
  3707 ;; Return value:  Size  Location     Type
  3708 ;;                  1    wreg      void 
  3709 ;; Registers used:
  3710 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3711 ;; Tracked objects:
  3712 ;;		On entry : B1F/0
  3713 ;;		On exit  : 1E/0
  3714 ;;		Unchanged: 0/0
  3715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3716 ;;      Params:         0       0       0       0       0       0
  3717 ;;      Locals:         0       0       0       0       0       0
  3718 ;;      Temps:          0       0       1       0       0       0
  3719 ;;      Totals:         0       0       1       0       0       0
  3720 ;;Total ram usage:        1 bytes
  3721 ;; Hardware stack levels required when called: 8
  3722 ;; This function calls:
  3723 ;;		_ADC_GetConversion
  3724 ;;		_EUSART_Read
  3725 ;;		_EUSART_is_rx_ready
  3726 ;;		_SYSTEM_Initialize
  3727 ;;		_TMR0_ReadTimer
  3728 ;;		_TMR1_SetGateInterruptHandler
  3729 ;;		_TMR4_StopTimer
  3730 ;;		_TMR6_LoadPeriodRegister
  3731 ;;		_TMR6_WriteTimer
  3732 ;;		_analisa_Rx
  3733 ;;		_controlchoose
  3734 ;;		_envia_Tx
  3735 ;;		_fluxpos
  3736 ;;		_setaPorta
  3737 ;; This function is called by:
  3738 ;;		Startup code after reset
  3739 ;; This function uses a non-reentrant model
  3740 ;;
  3741                           
  3742     06A6                     _main:	
  3743                           ;psect for function _main
  3744                           
  3745                           
  3746                           ;main.c: 300:     SYSTEM_Initialize();
  3747                           
  3748                           ;incstack = 0
  3749                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3750     06A6  318D  253D  3186   	fcall	_SYSTEM_Initialize
  3751                           
  3752                           ;main.c: 301:     TMR1_SetGateInterruptHandler(mede_height);
  3753     06A9  30EC               	movlw	low _mede_height
  3754     06AA  00CD               	movwf	TMR1_SetGateInterruptHandler@InterruptHandler^(0+128)
  3755     06AB  3005               	movlw	high _mede_height
  3756     06AC  00CE               	movwf	(TMR1_SetGateInterruptHandler@InterruptHandler^(0+128)+1)
  3757     06AD  318B  23B0  3186   	fcall	_TMR1_SetGateInterruptHandler
  3758                           
  3759                           ;main.c: 306:     (INTCONbits.GIE = 1);
  3760     06B0  178B               	bsf	11,7	;volatile
  3761                           
  3762                           ;main.c: 309:     (INTCONbits.PEIE = 1);
  3763     06B1  170B               	bsf	11,6	;volatile
  3764                           
  3765                           ;main.c: 316:     setaPorta();
  3766     06B2  318C  24A5  3186   	fcall	_setaPorta
  3767     06B5                     l3058:
  3768                           
  3769                           ;main.c: 319:     {;main.c: 322:         if(PIR3bits.TMR4IF==1){
  3770     06B5  0020               	movlb	0	; select bank0
  3771     06B6  1C93               	btfss	19,1	;volatile
  3772     06B7  2EBF               	goto	l3066
  3773                           
  3774                           ;main.c: 323:             PIR3bits.TMR4IF=0;
  3775     06B8  1093               	bcf	19,1	;volatile
  3776                           
  3777                           ;main.c: 324:             TMR4_StopTimer();
  3778     06B9  318B  2347  3186   	fcall	_TMR4_StopTimer
  3779                           
  3780                           ;main.c: 325:             controlchoose();
  3781     06BC  318C  241B  3186   	fcall	_controlchoose
  3782     06BF                     l3066:
  3783                           
  3784                           ;main.c: 333:         if (EUSART_is_rx_ready()){
  3785     06BF  318B  2352  3186   	fcall	_EUSART_is_rx_ready
  3786     06C2  3A00               	xorlw	0
  3787     06C3  1903               	skipnz
  3788     06C4  2EFF               	goto	l3098
  3789                           
  3790                           ;main.c: 334:             TMR6_LoadPeriodRegister(0xF9);
  3791     06C5  30F9               	movlw	249
  3792     06C6  318B  2369  3186   	fcall	_TMR6_LoadPeriodRegister
  3793     06C9                     l3088:	
  3794                           ;main.c: 335:             while(countRx<8 -1){
  3795                           
  3796                           
  3797                           ;main.c: 335:             while(countRx<8 -1){
  3798     06C9  3007               	movlw	7
  3799     06CA  0021               	movlb	1	; select bank1
  3800     06CB  0247               	subwf	_countRx^(0+128),w
  3801     06CC  1803               	btfsc	3,0
  3802     06CD  2EF2               	goto	l3090
  3803                           
  3804                           ;main.c: 336:                 nao_salva = 0;
  3805     06CE  01C5               	clrf	_nao_salva^(0+128)
  3806                           
  3807                           ;main.c: 337:                 TMR6_WriteTimer(0);
  3808     06CF  3000               	movlw	0
  3809     06D0  318B  236F  3186   	fcall	_TMR6_WriteTimer
  3810                           
  3811                           ;main.c: 338:                 PIR3bits.TMR6IF = 0;
  3812     06D3  0020               	movlb	0	; select bank0
  3813     06D4  1193               	bcf	19,3	;volatile
  3814     06D5                     l3078:	
  3815                           ;main.c: 339:                 while(!EUSART_is_rx_ready()){
  3816                           
  3817                           
  3818                           ;main.c: 339:                 while(!EUSART_is_rx_ready()){
  3819     06D5  318B  2352  3186   	fcall	_EUSART_is_rx_ready
  3820     06D8  3A00               	xorlw	0
  3821     06D9  1D03               	btfss	3,2
  3822     06DA  2EE0               	goto	l3080
  3823                           
  3824                           ;main.c: 340:                     if(PIR3bits.TMR6IF){
  3825     06DB  1D93               	btfss	19,3	;volatile
  3826     06DC  2ED5               	goto	l3078
  3827                           
  3828                           ;main.c: 341:                         nao_salva = 1;
  3829     06DD  0021               	movlb	1	; select bank1
  3830     06DE  01C5               	clrf	_nao_salva^(0+128)
  3831     06DF  0AC5               	incf	_nao_salva^(0+128),f
  3832     06E0                     l3080:	
  3833                           ;main.c: 342:                         break;
  3834                           
  3835                           
  3836                           ;main.c: 345:                 if(nao_salva == 1){
  3837     06E0  0021               	movlb	1	; select bank1
  3838     06E1  0345               	decf	_nao_salva^(0+128),w
  3839     06E2  1903               	btfsc	3,2
  3840     06E3  2EF2               	goto	l3090
  3841                           
  3842                           ;main.c: 348:                 bufferRx[countRx] = EUSART_Read();
  3843     06E4  0847               	movf	_countRx^(0+128),w
  3844     06E5  3E53               	addlw	(low (_bufferRx| 0))& (0+255)
  3845     06E6  0086               	movwf	6
  3846     06E7  0187               	clrf	7
  3847     06E8  318B  23F2  3186   	fcall	_EUSART_Read
  3848     06EB  0081               	movwf	1
  3849                           
  3850                           ;main.c: 349:                 countRx++;
  3851     06EC  3001               	movlw	1
  3852     06ED  0021               	movlb	1	; select bank1
  3853     06EE  00EE               	movwf	??_main^(0+128)
  3854     06EF  086E               	movf	??_main^(0+128),w
  3855     06F0  07C7               	addwf	_countRx^(0+128),f
  3856     06F1  2EC9               	goto	l3088
  3857     06F2                     l3090:
  3858                           
  3859                           ;main.c: 351:             analisa_Rx();
  3860     06F2  3185  2521  3186   	fcall	_analisa_Rx
  3861                           
  3862                           ;main.c: 352:             TMR6_LoadPeriodRegister(0x4A);
  3863     06F5  304A               	movlw	74
  3864     06F6  318B  2369  3186   	fcall	_TMR6_LoadPeriodRegister
  3865                           
  3866                           ;main.c: 353:             TMR6_WriteTimer(0);
  3867     06F9  3000               	movlw	0
  3868     06FA  318B  236F  3186   	fcall	_TMR6_WriteTimer
  3869                           
  3870                           ;main.c: 354:             PIR3bits.TMR6IF = 0;
  3871     06FD  0020               	movlb	0	; select bank0
  3872     06FE  1193               	bcf	19,3	;volatile
  3873     06FF                     l3098:
  3874                           
  3875                           ;main.c: 356:         if(INTCONbits.TMR0IF == 1){
  3876     06FF  1D0B               	btfss	11,2	;volatile
  3877     0700  2F14               	goto	l3114
  3878                           
  3879                           ;main.c: 357:             INTCONbits.TMR0IF = 0;
  3880     0701  110B               	bcf	11,2	;volatile
  3881                           
  3882                           ;main.c: 358:             fluxpos();
  3883     0702  318F  2721  3186   	fcall	_fluxpos
  3884                           
  3885                           ;main.c: 359:             passo_ctrl = 0;
  3886     0705  0021               	movlb	1	; select bank1
  3887     0706  01C8               	clrf	_passo_ctrl^(0+128)
  3888                           
  3889                           ;main.c: 360:             count_Tx ++;
  3890     0707  3001               	movlw	1
  3891     0708  00EE               	movwf	??_main^(0+128)
  3892     0709  086E               	movf	??_main^(0+128),w
  3893     070A  07C6               	addwf	_count_Tx^(0+128),f
  3894                           
  3895                           ;main.c: 361:             if (count_Tx == 6){
  3896     070B  3006               	movlw	6
  3897     070C  0646               	xorwf	_count_Tx^(0+128),w
  3898     070D  1D03               	btfss	3,2
  3899     070E  2F14               	goto	l3114
  3900                           
  3901                           ;main.c: 362:                 envia_Tx ();
  3902     070F  318F  278C  3186   	fcall	_envia_Tx
  3903                           
  3904                           ;main.c: 363:                 count_Tx = 0;
  3905     0712  0021               	movlb	1	; select bank1
  3906     0713  01C6               	clrf	_count_Tx^(0+128)
  3907     0714                     l3114:
  3908                           
  3909                           ;main.c: 366:         if(PIR3bits.TMR6IF == 1){
  3910     0714  0020               	movlb	0	; select bank0
  3911     0715  1D93               	btfss	19,3	;volatile
  3912     0716  2F33               	goto	l3128
  3913                           
  3914                           ;main.c: 367:             PIR3bits.TMR6IF = 0;
  3915     0717  1193               	bcf	19,3	;volatile
  3916                           
  3917                           ;main.c: 368:             TMR6_WriteTimer(0);
  3918     0718  3000               	movlw	0
  3919     0719  318B  236F  3186   	fcall	_TMR6_WriteTimer
  3920                           
  3921                           ;main.c: 369:             adc_temp = ADC_GetConversion(channel_AN8);
  3922     071C  3008               	movlw	8
  3923     071D  318C  2472  3186   	fcall	_ADC_GetConversion
  3924     0720  084E               	movf	(?_ADC_GetConversion+1)^(0+128),w
  3925     0721  00BA               	movwf	(_adc_temp+1)^(0+128)
  3926     0722  084D               	movf	?_ADC_GetConversion^(0+128),w
  3927     0723  00B9               	movwf	_adc_temp^(0+128)
  3928     0724  0022               	movlb	2	; select bank2
  3929     0725  170C               	bsf	12,6	;volatile
  3930                           
  3931                           ;main.c: 371:             _delay((unsigned long)((15)*(16000000/4000000.0)));
  3932     0726  3014               	movlw	20
  3933     0727                     u2797:
  3934     0727  0B89               	decfsz	9,f
  3935     0728  2F27               	goto	u2797
  3936     0729  0022               	movlb	2	; select bank2
  3937     072A  130C               	bcf	12,6	;volatile
  3938                           
  3939                           ;main.c: 373:             se = 912.34;
  3940     072B  3044               	movlw	68
  3941     072C  00A3               	movwf	(_se+3)^(0+256)
  3942     072D  3064               	movlw	100
  3943     072E  00A2               	movwf	(_se+2)^(0+256)
  3944     072F  3015               	movlw	21
  3945     0730  00A1               	movwf	(_se+1)^(0+256)
  3946     0731  30C3               	movlw	195
  3947     0732  00A0               	movwf	_se^(0+256)
  3948     0733                     l3128:
  3949                           
  3950                           ;main.c: 375:         if(TMR0_ReadTimer() >= 0x7F && passo_ctrl == 0){
  3951     0733  318B  2363  3186   	fcall	_TMR0_ReadTimer
  3952     0736  00EE               	movwf	??_main^(0+128)
  3953     0737  307F               	movlw	127
  3954     0738  026E               	subwf	??_main^(0+128),w
  3955     0739  1C03               	skipc
  3956     073A  2EB5               	goto	l3058
  3957     073B  0848               	movf	_passo_ctrl^(0+128),w
  3958     073C  1D03               	btfss	3,2
  3959     073D  2EB5               	goto	l3058
  3960                           
  3961                           ;main.c: 376:             passo_ctrl = 1;
  3962     073E  01C8               	clrf	_passo_ctrl^(0+128)
  3963     073F  0AC8               	incf	_passo_ctrl^(0+128),f
  3964                           
  3965                           ;main.c: 377:             fluxpos();
  3966     0740  318F  2721  3186   	fcall	_fluxpos
  3967     0743  2EB5               	goto	l3058
  3968     0744                     __end_of_main:
  3969                           
  3970                           	psect	text1
  3971     0CA5                     __ptext1:	
  3972 ;; *************** function _setaPorta *****************
  3973 ;; Defined at:
  3974 ;;		line 95 in file "main.c"
  3975 ;; Parameters:    Size  Location     Type
  3976 ;;		None
  3977 ;; Auto vars:     Size  Location     Type
  3978 ;;		None
  3979 ;; Return value:  Size  Location     Type
  3980 ;;                  1    wreg      void 
  3981 ;; Registers used:
  3982 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3983 ;; Tracked objects:
  3984 ;;		On entry : 1F/0
  3985 ;;		On exit  : 1F/1
  3986 ;;		Unchanged: 0/0
  3987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3988 ;;      Params:         0       0       0       0       0       0
  3989 ;;      Locals:         0       0       0       0       0       0
  3990 ;;      Temps:          0       0       1       0       0       0
  3991 ;;      Totals:         0       0       1       0       0       0
  3992 ;;Total ram usage:        1 bytes
  3993 ;; Hardware stack levels used: 1
  3994 ;; Hardware stack levels required when called: 7
  3995 ;; This function calls:
  3996 ;;		_CMP1_GetOutputStatus
  3997 ;;		_daUmPasso
  3998 ;; This function is called by:
  3999 ;;		_main
  4000 ;; This function uses a non-reentrant model
  4001 ;;
  4002                           
  4003     0CA5                     _setaPorta:	
  4004                           ;psect for function _setaPorta
  4005                           
  4006     0CA5                     l2926:	
  4007                           ;main.c: 96:     while(!CMP1_GetOutputStatus()){
  4008                           
  4009                           ;incstack = 0
  4010                           ; Regs used in _setaPorta: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4011                           
  4012                           
  4013                           ;main.c: 96:     while(!CMP1_GetOutputStatus()){
  4014     0CA5  318B  234E  318C   	fcall	_CMP1_GetOutputStatus
  4015     0CA8  3A00               	xorlw	0
  4016     0CA9  1D03               	btfss	3,2
  4017     0CAA  2CB9               	goto	l621
  4018                           
  4019                           ;main.c: 97:         daUmPasso(1);
  4020     0CAB  3001               	movlw	1
  4021     0CAC  318C  24F9  318C   	fcall	_daUmPasso
  4022                           
  4023                           ;main.c: 98:         _delay((unsigned long)((6)*(16000000/4000.0)));
  4024     0CAF  3020               	movlw	32
  4025     0CB0  0021               	movlb	1	; select bank1
  4026     0CB1  00D1               	movwf	??_setaPorta^(0+128)
  4027     0CB2  3029               	movlw	41
  4028     0CB3                     u2807:
  4029     0CB3  0B89               	decfsz	9,f
  4030     0CB4  2CB3               	goto	u2807
  4031     0CB5  0BD1               	decfsz	??_setaPorta^(0+128),f
  4032     0CB6  2CB3               	goto	u2807
  4033     0CB7  3200               	nop2
  4034     0CB8  2CA5               	goto	l2926
  4035     0CB9                     l621:
  4036                           
  4037                           ;main.c: 100:     fim_curso = 1;
  4038     0CB9  0021               	movlb	1	; select bank1
  4039     0CBA  01C9               	clrf	_fim_curso^(0+128)
  4040     0CBB  0AC9               	incf	_fim_curso^(0+128),f
  4041                           
  4042                           ;main.c: 101:     position = 0;
  4043     0CBC  01BD               	clrf	_position^(0+128)
  4044     0CBD  01BE               	clrf	(_position+1)^(0+128)
  4045     0CBE  0008               	return
  4046     0CBF                     __end_of_setaPorta:
  4047                           
  4048                           	psect	text2
  4049     0B4E                     __ptext2:	
  4050 ;; *************** function _CMP1_GetOutputStatus *****************
  4051 ;; Defined at:
  4052 ;;		line 69 in file "mcc_generated_files/cmp1.c"
  4053 ;; Parameters:    Size  Location     Type
  4054 ;;		None
  4055 ;; Auto vars:     Size  Location     Type
  4056 ;;		None
  4057 ;; Return value:  Size  Location     Type
  4058 ;;                  1    wreg      _Bool 
  4059 ;; Registers used:
  4060 ;;		wreg, status,2, status,0
  4061 ;; Tracked objects:
  4062 ;;		On entry : 0/0
  4063 ;;		On exit  : 1F/2
  4064 ;;		Unchanged: 0/0
  4065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4066 ;;      Params:         0       0       0       0       0       0
  4067 ;;      Locals:         0       0       0       0       0       0
  4068 ;;      Temps:          0       0       0       0       0       0
  4069 ;;      Totals:         0       0       0       0       0       0
  4070 ;;Total ram usage:        0 bytes
  4071 ;; Hardware stack levels used: 1
  4072 ;; Hardware stack levels required when called: 5
  4073 ;; This function calls:
  4074 ;;		Nothing
  4075 ;; This function is called by:
  4076 ;;		_setaPorta
  4077 ;; This function uses a non-reentrant model
  4078 ;;
  4079                           
  4080     0B4E                     _CMP1_GetOutputStatus:	
  4081                           ;psect for function _CMP1_GetOutputStatus
  4082                           
  4083                           
  4084                           ;mcc_generated_files/cmp1.c: 71:  return (CMOUTbits.MC1OUT);
  4085                           
  4086                           ;incstack = 0
  4087                           ; Regs used in _CMP1_GetOutputStatus: [wreg+status,2+status,0]
  4088     0B4E  0022               	movlb	2	; select bank2
  4089     0B4F  0815               	movf	21,w	;volatile
  4090     0B50  3901               	andlw	1
  4091     0B51  0008               	return
  4092     0B52                     __end_of_CMP1_GetOutputStatus:
  4093                           
  4094                           	psect	text3
  4095     0F21                     __ptext3:	
  4096 ;; *************** function _fluxpos *****************
  4097 ;; Defined at:
  4098 ;;		line 83 in file "main.c"
  4099 ;; Parameters:    Size  Location     Type
  4100 ;;		None
  4101 ;; Auto vars:     Size  Location     Type
  4102 ;;		None
  4103 ;; Return value:  Size  Location     Type
  4104 ;;                  1    wreg      void 
  4105 ;; Registers used:
  4106 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4107 ;; Tracked objects:
  4108 ;;		On entry : 1E/0
  4109 ;;		On exit  : 1E/0
  4110 ;;		Unchanged: 0/0
  4111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4112 ;;      Params:         0       0       0       0       0       0
  4113 ;;      Locals:         0       0       0       0       0       0
  4114 ;;      Temps:          0       0       4       0       0       0
  4115 ;;      Totals:         0       0       4       0       0       0
  4116 ;;Total ram usage:        4 bytes
  4117 ;; Hardware stack levels used: 1
  4118 ;; Hardware stack levels required when called: 7
  4119 ;; This function calls:
  4120 ;;		_daUmPasso
  4121 ;; This function is called by:
  4122 ;;		_main
  4123 ;; This function uses a non-reentrant model
  4124 ;;
  4125                           
  4126     0F21                     _fluxpos:	
  4127                           ;psect for function _fluxpos
  4128                           
  4129                           
  4130                           ;main.c: 84:     if(controlchoice==2){
  4131                           
  4132                           ;incstack = 0
  4133                           ; Regs used in _fluxpos: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4134     0F21  3002               	movlw	2
  4135     0F22  0021               	movlb	1	; select bank1
  4136     0F23  064B               	xorwf	_controlchoice^(0+128),w
  4137     0F24  1D03               	btfss	3,2
  4138     0F25  2F74               	goto	l2912
  4139                           
  4140                           ;main.c: 85:         flux = output - position;
  4141     0F26  083D               	movf	_position^(0+128),w
  4142     0F27  0241               	subwf	_output^(0+128),w
  4143     0F28  00D1               	movwf	??_fluxpos^(0+128)
  4144     0F29  083E               	movf	(_position+1)^(0+128),w
  4145     0F2A  3B42               	subwfb	(_output+1)^(0+128),w
  4146     0F2B  00D2               	movwf	(??_fluxpos+1)^(0+128)
  4147     0F2C  0851               	movf	??_fluxpos^(0+128),w
  4148     0F2D  0020               	movlb	0	; select bank0
  4149     0F2E  00DB               	movwf	_flux
  4150     0F2F  0021               	movlb	1	; select bank1
  4151     0F30  0852               	movf	(??_fluxpos+1)^(0+128),w
  4152     0F31  0020               	movlb	0	; select bank0
  4153     0F32  00DC               	movwf	_flux+1
  4154     0F33  01DD               	clrf	_flux+2
  4155                           
  4156                           ;main.c: 86:         if(flux>position) daUmPasso(0);
  4157     0F34  0021               	movlb	1	; select bank1
  4158     0F35  083D               	movf	_position^(0+128),w
  4159     0F36  00D1               	movwf	??_fluxpos^(0+128)
  4160     0F37  083E               	movf	(_position+1)^(0+128),w
  4161     0F38  00D2               	movwf	(??_fluxpos^(0+128)+1)
  4162     0F39  01D3               	clrf	(??_fluxpos^(0+128)+2)
  4163     0F3A  0853               	movf	(??_fluxpos+2)^(0+128),w
  4164     0F3B  3A80               	xorlw	128
  4165     0F3C  00D4               	movwf	(??_fluxpos+3)^(0+128)
  4166     0F3D  0020               	movlb	0	; select bank0
  4167     0F3E  085D               	movf	_flux+2,w
  4168     0F3F  3A80               	xorlw	128
  4169     0F40  0021               	movlb	1	; select bank1
  4170     0F41  0254               	subwf	(??_fluxpos+3)^(0+128),w
  4171     0F42  1D03               	skipz
  4172     0F43  2F4E               	goto	u2513
  4173     0F44  0020               	movlb	0	; select bank0
  4174     0F45  085C               	movf	_flux+1,w
  4175     0F46  0021               	movlb	1	; select bank1
  4176     0F47  0252               	subwf	(??_fluxpos+1)^(0+128),w
  4177     0F48  1D03               	skipz
  4178     0F49  2F4E               	goto	u2513
  4179     0F4A  0020               	movlb	0	; select bank0
  4180     0F4B  085B               	movf	_flux,w
  4181     0F4C  0021               	movlb	1	; select bank1
  4182     0F4D  0251               	subwf	??_fluxpos^(0+128),w
  4183     0F4E                     u2513:
  4184     0F4E  1803               	skipnc
  4185     0F4F  2F54               	goto	l2908
  4186     0F50  3000               	movlw	0
  4187     0F51  318C  24F9         	fcall	_daUmPasso
  4188     0F53  0008               	return
  4189     0F54                     l2908:
  4190     0F54  083D               	movf	_position^(0+128),w
  4191     0F55  00D1               	movwf	??_fluxpos^(0+128)
  4192     0F56  083E               	movf	(_position+1)^(0+128),w
  4193     0F57  00D2               	movwf	(??_fluxpos^(0+128)+1)
  4194     0F58  01D3               	clrf	(??_fluxpos^(0+128)+2)
  4195     0F59  0020               	movlb	0	; select bank0
  4196     0F5A  085D               	movf	_flux+2,w
  4197     0F5B  3A80               	xorlw	128
  4198     0F5C  0021               	movlb	1	; select bank1
  4199     0F5D  00D4               	movwf	(??_fluxpos+3)^(0+128)
  4200     0F5E  0853               	movf	(??_fluxpos+2)^(0+128),w
  4201     0F5F  3A80               	xorlw	128
  4202     0F60  0254               	subwf	(??_fluxpos+3)^(0+128),w
  4203     0F61  0020               	movlb	0	; select bank0
  4204     0F62  1D03               	skipz
  4205     0F63  2F6E               	goto	u2523
  4206     0F64  0021               	movlb	1	; select bank1
  4207     0F65  0852               	movf	(??_fluxpos+1)^(0+128),w
  4208     0F66  0020               	movlb	0	; select bank0
  4209     0F67  025C               	subwf	_flux+1,w
  4210     0F68  1D03               	skipz
  4211     0F69  2F6E               	goto	u2523
  4212     0F6A  0021               	movlb	1	; select bank1
  4213     0F6B  0851               	movf	??_fluxpos^(0+128),w
  4214     0F6C  0020               	movlb	0	; select bank0
  4215     0F6D  025B               	subwf	_flux,w
  4216     0F6E                     u2523:
  4217     0F6E  1803               	skipnc
  4218     0F6F  0008               	return
  4219     0F70  3001               	movlw	1
  4220     0F71  318C  24F9         	fcall	_daUmPasso
  4221     0F73  0008               	return
  4222     0F74                     l2912:
  4223                           
  4224                           ;main.c: 90:         if(sp_position>position) daUmPasso(0);
  4225     0F74  083C               	movf	(_sp_position+1)^(0+128),w
  4226     0F75  023E               	subwf	(_position+1)^(0+128),w
  4227     0F76  1D03               	skipz
  4228     0F77  2F7A               	goto	u2535
  4229     0F78  083B               	movf	_sp_position^(0+128),w
  4230     0F79  023D               	subwf	_position^(0+128),w
  4231     0F7A                     u2535:
  4232     0F7A  1803               	skipnc
  4233     0F7B  2F80               	goto	l2916
  4234     0F7C  3000               	movlw	0
  4235     0F7D  318C  24F9         	fcall	_daUmPasso
  4236     0F7F  0008               	return
  4237     0F80                     l2916:
  4238     0F80  083E               	movf	(_position+1)^(0+128),w
  4239     0F81  023C               	subwf	(_sp_position+1)^(0+128),w
  4240     0F82  1D03               	skipz
  4241     0F83  2F86               	goto	u2545
  4242     0F84  083D               	movf	_position^(0+128),w
  4243     0F85  023B               	subwf	_sp_position^(0+128),w
  4244     0F86                     u2545:
  4245     0F86  1803               	skipnc
  4246     0F87  0008               	return
  4247     0F88  3001               	movlw	1
  4248     0F89  318C  24F9         	fcall	_daUmPasso
  4249     0F8B  0008               	return
  4250     0F8C                     __end_of_fluxpos:
  4251                           
  4252                           	psect	text4
  4253     0CF9                     __ptext4:	
  4254 ;; *************** function _daUmPasso *****************
  4255 ;; Defined at:
  4256 ;;		line 263 in file "main.c"
  4257 ;; Parameters:    Size  Location     Type
  4258 ;;  sentido         1    wreg     unsigned char 
  4259 ;; Auto vars:     Size  Location     Type
  4260 ;;  sentido         1    3[BANK1 ] unsigned char 
  4261 ;; Return value:  Size  Location     Type
  4262 ;;                  1    wreg      void 
  4263 ;; Registers used:
  4264 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4265 ;; Tracked objects:
  4266 ;;		On entry : 1C/2
  4267 ;;		On exit  : 1F/1
  4268 ;;		Unchanged: 0/0
  4269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4270 ;;      Params:         0       0       0       0       0       0
  4271 ;;      Locals:         0       0       1       0       0       0
  4272 ;;      Temps:          0       0       0       0       0       0
  4273 ;;      Totals:         0       0       1       0       0       0
  4274 ;;Total ram usage:        1 bytes
  4275 ;; Hardware stack levels used: 1
  4276 ;; Hardware stack levels required when called: 6
  4277 ;; This function calls:
  4278 ;;		_definePassoMotor
  4279 ;; This function is called by:
  4280 ;;		_fluxpos
  4281 ;;		_setaPorta
  4282 ;; This function uses a non-reentrant model
  4283 ;;
  4284                           
  4285     0CF9                     _daUmPasso:	
  4286                           ;psect for function _daUmPasso
  4287                           
  4288                           
  4289                           ;incstack = 0
  4290                           ; Regs used in _daUmPasso: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4291                           ;daUmPasso@sentido stored from wreg
  4292     0CF9  0021               	movlb	1	; select bank1
  4293     0CFA  00D0               	movwf	daUmPasso@sentido^(0+128)
  4294                           
  4295                           ;main.c: 265:     if (fim_curso) {
  4296     0CFB  0849               	movf	_fim_curso^(0+128),w
  4297     0CFC  1903               	btfsc	3,2
  4298     0CFD  2D13               	goto	l2800
  4299                           
  4300                           ;main.c: 267:         if(sentido == 1){
  4301     0CFE  0350               	decf	daUmPasso@sentido^(0+128),w
  4302     0CFF  1D03               	btfss	3,2
  4303     0D00  2D06               	goto	l2794
  4304                           
  4305                           ;main.c: 268:             position--;
  4306     0D01  3001               	movlw	1
  4307     0D02  02BD               	subwf	_position^(0+128),f
  4308     0D03  3000               	movlw	0
  4309     0D04  3BBE               	subwfb	(_position+1)^(0+128),f
  4310                           
  4311                           ;main.c: 269:         }
  4312     0D05  2D0D               	goto	l2798
  4313     0D06                     l2794:
  4314     0D06  0850               	movf	daUmPasso@sentido^(0+128),w
  4315     0D07  1D03               	btfss	3,2
  4316     0D08  2D0D               	goto	l2798
  4317                           
  4318                           ;main.c: 271:             position++;
  4319     0D09  3001               	movlw	1
  4320     0D0A  07BD               	addwf	_position^(0+128),f
  4321     0D0B  3000               	movlw	0
  4322     0D0C  3DBE               	addwfc	(_position+1)^(0+128),f
  4323     0D0D                     l2798:
  4324                           
  4325                           ;main.c: 273:         definePassoMotor(passo, sentido);
  4326     0D0D  0850               	movf	daUmPasso@sentido^(0+128),w
  4327     0D0E  00CD               	movwf	definePassoMotor@sentido^(0+128)
  4328     0D0F  084A               	movf	_passo^(0+128),w
  4329     0D10  318D  259B         	fcall	_definePassoMotor
  4330                           
  4331                           ;main.c: 274:     } else {
  4332     0D12  0008               	return
  4333     0D13                     l2800:
  4334                           
  4335                           ;main.c: 275:         definePassoMotor(passo, 1);
  4336     0D13  01CD               	clrf	definePassoMotor@sentido^(0+128)
  4337     0D14  0ACD               	incf	definePassoMotor@sentido^(0+128),f
  4338     0D15  084A               	movf	_passo^(0+128),w
  4339     0D16  318D  259B         	fcall	_definePassoMotor
  4340     0D18  0008               	return
  4341     0D19                     __end_of_daUmPasso:
  4342                           
  4343                           	psect	text5
  4344     0D9B                     __ptext5:	
  4345 ;; *************** function _definePassoMotor *****************
  4346 ;; Defined at:
  4347 ;;		line 201 in file "main.c"
  4348 ;; Parameters:    Size  Location     Type
  4349 ;;  passom          1    wreg     unsigned char 
  4350 ;;  sentido         1    0[BANK1 ] unsigned char 
  4351 ;; Auto vars:     Size  Location     Type
  4352 ;;  passom          1    2[BANK1 ] unsigned char 
  4353 ;; Return value:  Size  Location     Type
  4354 ;;                  1    wreg      void 
  4355 ;; Registers used:
  4356 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4357 ;; Tracked objects:
  4358 ;;		On entry : 1F/1
  4359 ;;		On exit  : 1F/1
  4360 ;;		Unchanged: 0/0
  4361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4362 ;;      Params:         0       0       1       0       0       0
  4363 ;;      Locals:         0       0       1       0       0       0
  4364 ;;      Temps:          0       0       1       0       0       0
  4365 ;;      Totals:         0       0       3       0       0       0
  4366 ;;Total ram usage:        3 bytes
  4367 ;; Hardware stack levels used: 1
  4368 ;; Hardware stack levels required when called: 5
  4369 ;; This function calls:
  4370 ;;		Nothing
  4371 ;; This function is called by:
  4372 ;;		_daUmPasso
  4373 ;; This function uses a non-reentrant model
  4374 ;;
  4375                           
  4376     0D9B                     _definePassoMotor:	
  4377                           ;psect for function _definePassoMotor
  4378                           
  4379                           
  4380                           ;incstack = 0
  4381                           ; Regs used in _definePassoMotor: [wreg-fsr0h+status,2+status,0]
  4382                           ;definePassoMotor@passom stored from wreg
  4383     0D9B  00CF               	movwf	definePassoMotor@passom^(0+128)
  4384                           
  4385                           ;main.c: 202:     if (sentido == 1) {
  4386     0D9C  034D               	decf	definePassoMotor@sentido^(0+128),w
  4387     0D9D  1903               	btfsc	3,2
  4388     0D9E  2DB6               	goto	l2302
  4389     0D9F  2DC4               	goto	l2304
  4390     0DA0                     l653:	
  4391                           ;main.c: 205:                 do { LATAbits.LATA1 = 1; } while(0);
  4392                           
  4393     0DA0  0022               	movlb	2	; select bank2
  4394     0DA1  148C               	bsf	12,1	;volatile
  4395                           
  4396                           ;main.c: 206:                 do { LATAbits.LATA2 = 1; } while(0);
  4397     0DA2  150C               	bsf	12,2	;volatile
  4398                           
  4399                           ;main.c: 207:                 do { LATAbits.LATA3 = 0; } while(0);
  4400     0DA3  118C               	bcf	12,3	;volatile
  4401     0DA4  2DA9               	goto	l669
  4402     0DA5                     l663:	
  4403                           ;main.c: 211:                 do { LATAbits.LATA1 = 0; } while(0);
  4404                           
  4405                           ;main.c: 208:                 do { LATAbits.LATA4 = 0; } while(0);
  4406                           
  4407     0DA5  0022               	movlb	2	; select bank2
  4408     0DA6  108C               	bcf	12,1	;volatile
  4409                           
  4410                           ;main.c: 212:                 do { LATAbits.LATA2 = 1; } while(0);
  4411     0DA7  150C               	bsf	12,2	;volatile
  4412                           
  4413                           ;main.c: 213:                 do { LATAbits.LATA3 = 1; } while(0);
  4414     0DA8  158C               	bsf	12,3	;volatile
  4415     0DA9                     l669:	
  4416                           ;main.c: 214:                 do { LATAbits.LATA4 = 0; } while(0);
  4417                           
  4418     0DA9  120C               	bcf	12,4	;volatile
  4419     0DAA  2DEC               	goto	l2312
  4420     0DAB                     l672:	
  4421                           ;main.c: 217:                 do { LATAbits.LATA1 = 0; } while(0);
  4422                           
  4423     0DAB  0022               	movlb	2	; select bank2
  4424     0DAC  108C               	bcf	12,1	;volatile
  4425                           
  4426                           ;main.c: 218:                 do { LATAbits.LATA2 = 0; } while(0);
  4427     0DAD  110C               	bcf	12,2	;volatile
  4428                           
  4429                           ;main.c: 219:                 do { LATAbits.LATA3 = 1; } while(0);
  4430     0DAE  158C               	bsf	12,3	;volatile
  4431     0DAF  2DB4               	goto	l687
  4432     0DB0                     l681:	
  4433                           ;main.c: 223:                 do { LATAbits.LATA1 = 1; } while(0);
  4434                           
  4435                           ;main.c: 220:                 do { LATAbits.LATA4 = 1; } while(0);
  4436                           
  4437     0DB0  0022               	movlb	2	; select bank2
  4438     0DB1  148C               	bsf	12,1	;volatile
  4439                           
  4440                           ;main.c: 224:                 do { LATAbits.LATA2 = 0; } while(0);
  4441     0DB2  110C               	bcf	12,2	;volatile
  4442                           
  4443                           ;main.c: 225:                 do { LATAbits.LATA3 = 0; } while(0);
  4444     0DB3  118C               	bcf	12,3	;volatile
  4445     0DB4                     l687:	
  4446                           ;main.c: 226:                 do { LATAbits.LATA4 = 1; } while(0);
  4447                           
  4448     0DB4  160C               	bsf	12,4	;volatile
  4449     0DB5  2DEC               	goto	l2312
  4450     0DB6                     l2302:
  4451     0DB6  084F               	movf	definePassoMotor@passom^(0+128),w
  4452                           
  4453                           ; Switch size 1, requested type "simple"
  4454                           ; Number of cases is 4, Range of values is 0 to 3
  4455                           ; switch strategies available:
  4456                           ; Name         Instructions Cycles
  4457                           ; simple_byte           13     7 (average)
  4458                           ; direct_byte           14     6 (fixed)
  4459                           ; jumptable            260     6 (fixed)
  4460                           ;	Chosen strategy is simple_byte
  4461     0DB7  3A00               	xorlw	0	; case 0
  4462     0DB8  1903               	skipnz
  4463     0DB9  2DA0               	goto	l653
  4464     0DBA  3A01               	xorlw	1	; case 1
  4465     0DBB  1903               	skipnz
  4466     0DBC  2DA5               	goto	l663
  4467     0DBD  3A03               	xorlw	3	; case 2
  4468     0DBE  1903               	skipnz
  4469     0DBF  2DAB               	goto	l672
  4470     0DC0  3A01               	xorlw	1	; case 3
  4471     0DC1  1903               	skipnz
  4472     0DC2  2DB0               	goto	l681
  4473     0DC3  2DEC               	goto	l2312
  4474     0DC4                     l2304:
  4475     0DC4  084D               	movf	definePassoMotor@sentido^(0+128),w
  4476     0DC5  1903               	btfsc	3,2
  4477     0DC6  2DDE               	goto	l2310
  4478     0DC7  2DEC               	goto	l2312
  4479     0DC8                     l693:	
  4480                           ;main.c: 233:                 do { LATAbits.LATA4 = 1; } while(0);
  4481                           
  4482     0DC8  0022               	movlb	2	; select bank2
  4483     0DC9  160C               	bsf	12,4	;volatile
  4484                           
  4485                           ;main.c: 234:                 do { LATAbits.LATA3 = 1; } while(0);
  4486     0DCA  158C               	bsf	12,3	;volatile
  4487                           
  4488                           ;main.c: 235:                 do { LATAbits.LATA2 = 0; } while(0);
  4489     0DCB  110C               	bcf	12,2	;volatile
  4490     0DCC  2DD1               	goto	l709
  4491     0DCD                     l703:	
  4492                           ;main.c: 239:                 do { LATAbits.LATA4 = 0; } while(0);
  4493                           
  4494                           ;main.c: 236:                 do { LATAbits.LATA1 = 0; } while(0);
  4495                           
  4496     0DCD  0022               	movlb	2	; select bank2
  4497     0DCE  120C               	bcf	12,4	;volatile
  4498                           
  4499                           ;main.c: 240:                 do { LATAbits.LATA3 = 1; } while(0);
  4500     0DCF  158C               	bsf	12,3	;volatile
  4501                           
  4502                           ;main.c: 241:                 do { LATAbits.LATA2 = 1; } while(0);
  4503     0DD0  150C               	bsf	12,2	;volatile
  4504     0DD1                     l709:	
  4505                           ;main.c: 242:                 do { LATAbits.LATA1 = 0; } while(0);
  4506                           
  4507     0DD1  108C               	bcf	12,1	;volatile
  4508     0DD2  2DEC               	goto	l2312
  4509     0DD3                     l712:	
  4510                           ;main.c: 245:                 do { LATAbits.LATA4 = 0; } while(0);
  4511                           
  4512     0DD3  0022               	movlb	2	; select bank2
  4513     0DD4  120C               	bcf	12,4	;volatile
  4514                           
  4515                           ;main.c: 246:                 do { LATAbits.LATA3 = 0; } while(0);
  4516     0DD5  118C               	bcf	12,3	;volatile
  4517                           
  4518                           ;main.c: 247:                 do { LATAbits.LATA2 = 1; } while(0);
  4519     0DD6  150C               	bsf	12,2	;volatile
  4520     0DD7  2DDC               	goto	L2
  4521     0DD8                     l721:	
  4522                           ;main.c: 251:                 do { LATAbits.LATA4 = 1; } while(0);
  4523                           
  4524                           ;main.c: 248:                 do { LATAbits.LATA1 = 1; } while(0);
  4525                           
  4526     0DD8  0022               	movlb	2	; select bank2
  4527     0DD9  160C               	bsf	12,4	;volatile
  4528                           
  4529                           ;main.c: 252:                 do { LATAbits.LATA3 = 0; } while(0);
  4530     0DDA  118C               	bcf	12,3	;volatile
  4531                           
  4532                           ;main.c: 253:                 do { LATAbits.LATA2 = 0; } while(0);
  4533     0DDB  110C               	bcf	12,2	;volatile
  4534     0DDC                     L2:
  4535                           
  4536                           ;main.c: 254:                 do { LATAbits.LATA1 = 1; } while(0);
  4537     0DDC  148C               	bsf	12,1	;volatile
  4538     0DDD  2DEC               	goto	l2312
  4539     0DDE                     l2310:
  4540     0DDE  084F               	movf	definePassoMotor@passom^(0+128),w
  4541                           
  4542                           ; Switch size 1, requested type "simple"
  4543                           ; Number of cases is 4, Range of values is 0 to 3
  4544                           ; switch strategies available:
  4545                           ; Name         Instructions Cycles
  4546                           ; simple_byte           13     7 (average)
  4547                           ; direct_byte           14     6 (fixed)
  4548                           ; jumptable            260     6 (fixed)
  4549                           ;	Chosen strategy is simple_byte
  4550     0DDF  3A00               	xorlw	0	; case 0
  4551     0DE0  1903               	skipnz
  4552     0DE1  2DC8               	goto	l693
  4553     0DE2  3A01               	xorlw	1	; case 1
  4554     0DE3  1903               	skipnz
  4555     0DE4  2DCD               	goto	l703
  4556     0DE5  3A03               	xorlw	3	; case 2
  4557     0DE6  1903               	skipnz
  4558     0DE7  2DD3               	goto	l712
  4559     0DE8  3A01               	xorlw	1	; case 3
  4560     0DE9  1903               	skipnz
  4561     0DEA  2DD8               	goto	l721
  4562     0DEB  2DEC               	goto	l2312
  4563     0DEC                     l2312:
  4564                           
  4565                           ;main.c: 259:     passo++;
  4566     0DEC  3001               	movlw	1
  4567     0DED  0021               	movlb	1	; select bank1
  4568     0DEE  00CE               	movwf	??_definePassoMotor^(0+128)
  4569     0DEF  084E               	movf	??_definePassoMotor^(0+128),w
  4570     0DF0  07CA               	addwf	_passo^(0+128),f
  4571                           
  4572                           ;main.c: 260:     passo = passo & 0x03;
  4573     0DF1  084A               	movf	_passo^(0+128),w
  4574     0DF2  3903               	andlw	3
  4575     0DF3  00CA               	movwf	_passo^(0+128)
  4576     0DF4  0008               	return
  4577     0DF5                     __end_of_definePassoMotor:
  4578                           
  4579                           	psect	text6
  4580     0F8C                     __ptext6:	
  4581 ;; *************** function _envia_Tx *****************
  4582 ;; Defined at:
  4583 ;;		line 174 in file "main.c"
  4584 ;; Parameters:    Size  Location     Type
  4585 ;;		None
  4586 ;; Auto vars:     Size  Location     Type
  4587 ;;		None
  4588 ;; Return value:  Size  Location     Type
  4589 ;;                  1    wreg      void 
  4590 ;; Registers used:
  4591 ;;		wreg, status,2, status,0, pclath, cstack
  4592 ;; Tracked objects:
  4593 ;;		On entry : 1F/1
  4594 ;;		On exit  : 1F/3
  4595 ;;		Unchanged: 0/0
  4596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4597 ;;      Params:         0       0       0       0       0       0
  4598 ;;      Locals:         0       0       0       0       0       0
  4599 ;;      Temps:          0       0       0       0       0       0
  4600 ;;      Totals:         0       0       0       0       0       0
  4601 ;;Total ram usage:        0 bytes
  4602 ;; Hardware stack levels used: 1
  4603 ;; Hardware stack levels required when called: 6
  4604 ;; This function calls:
  4605 ;;		_EUSART_Write
  4606 ;;		___fltol
  4607 ;; This function is called by:
  4608 ;;		_main
  4609 ;; This function uses a non-reentrant model
  4610 ;;
  4611                           
  4612     0F8C                     _envia_Tx:	
  4613                           ;psect for function _envia_Tx
  4614                           
  4615                           
  4616                           ;main.c: 175:     EUSART_Write(controlchoice);
  4617                           
  4618                           ;incstack = 0
  4619                           ; Regs used in _envia_Tx: [wreg+status,2+status,0+pclath+cstack]
  4620     0F8C  084B               	movf	_controlchoice^(0+128),w
  4621     0F8D  318B  23C0  318F   	fcall	_EUSART_Write
  4622                           
  4623                           ;main.c: 176:     vTx.v = sp_height;
  4624     0F90  0020               	movlb	0	; select bank0
  4625     0F91  0862               	movf	_sp_height+1,w
  4626     0F92  0021               	movlb	1	; select bank1
  4627     0F93  00B8               	movwf	(_vTx+1)^(0+128)
  4628     0F94  0020               	movlb	0	; select bank0
  4629     0F95  0861               	movf	_sp_height,w
  4630     0F96  0021               	movlb	1	; select bank1
  4631     0F97  00B7               	movwf	_vTx^(0+128)
  4632                           
  4633                           ;main.c: 177:     EUSART_Write(vTx.vH);
  4634     0F98  0838               	movf	(_vTx^(0+128)+1),w
  4635     0F99  318B  23C0  318F   	fcall	_EUSART_Write
  4636                           
  4637                           ;main.c: 178:     EUSART_Write(vTx.vL);
  4638     0F9C  0021               	movlb	1	; select bank1
  4639     0F9D  0837               	movf	_vTx^(0+128),w
  4640     0F9E  318B  23C0  318F   	fcall	_EUSART_Write
  4641                           
  4642                           ;main.c: 179:     vTx.v = height;
  4643     0FA1  0021               	movlb	1	; select bank1
  4644     0FA2  0840               	movf	(_height+1)^(0+128),w
  4645     0FA3  00B8               	movwf	(_vTx+1)^(0+128)
  4646     0FA4  083F               	movf	_height^(0+128),w
  4647     0FA5  00B7               	movwf	_vTx^(0+128)
  4648                           
  4649                           ;main.c: 180:     EUSART_Write(vTx.vH);
  4650     0FA6  0838               	movf	(_vTx^(0+128)+1),w
  4651     0FA7  318B  23C0  318F   	fcall	_EUSART_Write
  4652                           
  4653                           ;main.c: 181:     EUSART_Write(vTx.vL);
  4654     0FAA  0021               	movlb	1	; select bank1
  4655     0FAB  0837               	movf	_vTx^(0+128),w
  4656     0FAC  318B  23C0  318F   	fcall	_EUSART_Write
  4657                           
  4658                           ;main.c: 182:     vTx.v = avg_tempo_voo;
  4659     0FAF  0021               	movlb	1	; select bank1
  4660     0FB0  0823               	movf	(_avg_tempo_voo+3)^(0+128),w
  4661     0FB1  00D0               	movwf	(___fltol@f1+3)^(0+128)
  4662     0FB2  0822               	movf	(_avg_tempo_voo+2)^(0+128),w
  4663     0FB3  00CF               	movwf	(___fltol@f1+2)^(0+128)
  4664     0FB4  0821               	movf	(_avg_tempo_voo+1)^(0+128),w
  4665     0FB5  00CE               	movwf	(___fltol@f1+1)^(0+128)
  4666     0FB6  0820               	movf	_avg_tempo_voo^(0+128),w
  4667     0FB7  00CD               	movwf	___fltol@f1^(0+128)
  4668     0FB8  318E  2656  318F   	fcall	___fltol
  4669     0FBB  084E               	movf	(?___fltol+1)^(0+128),w
  4670     0FBC  00B8               	movwf	(_vTx+1)^(0+128)
  4671     0FBD  084D               	movf	?___fltol^(0+128),w
  4672     0FBE  00B7               	movwf	_vTx^(0+128)
  4673                           
  4674                           ;main.c: 183:     EUSART_Write(vTx.vH);
  4675     0FBF  0838               	movf	(_vTx^(0+128)+1),w
  4676     0FC0  318B  23C0  318F   	fcall	_EUSART_Write
  4677                           
  4678                           ;main.c: 184:     EUSART_Write(vTx.vL);
  4679     0FC3  0021               	movlb	1	; select bank1
  4680     0FC4  0837               	movf	_vTx^(0+128),w
  4681     0FC5  318B  23C0  318F   	fcall	_EUSART_Write
  4682                           
  4683                           ;main.c: 185:     vTx.v = adc_temp;
  4684     0FC8  0021               	movlb	1	; select bank1
  4685     0FC9  083A               	movf	(_adc_temp+1)^(0+128),w
  4686     0FCA  00B8               	movwf	(_vTx+1)^(0+128)
  4687     0FCB  0839               	movf	_adc_temp^(0+128),w
  4688     0FCC  00B7               	movwf	_vTx^(0+128)
  4689                           
  4690                           ;main.c: 186:     EUSART_Write(vTx.vH);
  4691     0FCD  0838               	movf	(_vTx^(0+128)+1),w
  4692     0FCE  318B  23C0  318F   	fcall	_EUSART_Write
  4693                           
  4694                           ;main.c: 187:     EUSART_Write(vTx.vL);
  4695     0FD1  0021               	movlb	1	; select bank1
  4696     0FD2  0837               	movf	_vTx^(0+128),w
  4697     0FD3  318B  23C0  318F   	fcall	_EUSART_Write
  4698                           
  4699                           ;main.c: 188:     vTx.v = sp_position;
  4700     0FD6  0021               	movlb	1	; select bank1
  4701     0FD7  083C               	movf	(_sp_position+1)^(0+128),w
  4702     0FD8  00B8               	movwf	(_vTx+1)^(0+128)
  4703     0FD9  083B               	movf	_sp_position^(0+128),w
  4704     0FDA  00B7               	movwf	_vTx^(0+128)
  4705                           
  4706                           ;main.c: 189:     EUSART_Write(vTx.vH);
  4707     0FDB  0838               	movf	(_vTx^(0+128)+1),w
  4708     0FDC  318B  23C0  318F   	fcall	_EUSART_Write
  4709                           
  4710                           ;main.c: 190:     EUSART_Write(vTx.vL);
  4711     0FDF  0021               	movlb	1	; select bank1
  4712     0FE0  0837               	movf	_vTx^(0+128),w
  4713     0FE1  318B  23C0  318F   	fcall	_EUSART_Write
  4714                           
  4715                           ;main.c: 191:     vTx.v = position;
  4716     0FE4  0021               	movlb	1	; select bank1
  4717     0FE5  083E               	movf	(_position+1)^(0+128),w
  4718     0FE6  00B8               	movwf	(_vTx+1)^(0+128)
  4719     0FE7  083D               	movf	_position^(0+128),w
  4720     0FE8  00B7               	movwf	_vTx^(0+128)
  4721                           
  4722                           ;main.c: 192:     EUSART_Write(vTx.vH);
  4723     0FE9  0838               	movf	(_vTx^(0+128)+1),w
  4724     0FEA  318B  23C0  318F   	fcall	_EUSART_Write
  4725                           
  4726                           ;main.c: 193:     EUSART_Write(vTx.vL);
  4727     0FED  0021               	movlb	1	; select bank1
  4728     0FEE  0837               	movf	_vTx^(0+128),w
  4729     0FEF  318B  23C0  318F   	fcall	_EUSART_Write
  4730                           
  4731                           ;main.c: 194:     vTx.v = dc;
  4732     0FF2  0021               	movlb	1	; select bank1
  4733     0FF3  0834               	movf	(_dc+1)^(0+128),w
  4734     0FF4  00B8               	movwf	(_vTx+1)^(0+128)
  4735     0FF5  0833               	movf	_dc^(0+128),w
  4736     0FF6  00B7               	movwf	_vTx^(0+128)
  4737                           
  4738                           ;main.c: 195:     EUSART_Write(vTx.vH);
  4739     0FF7  0838               	movf	(_vTx^(0+128)+1),w
  4740     0FF8  318B  23C0  318F   	fcall	_EUSART_Write
  4741                           
  4742                           ;main.c: 196:     EUSART_Write(vTx.vL);
  4743     0FFB  0021               	movlb	1	; select bank1
  4744     0FFC  0837               	movf	_vTx^(0+128),w
  4745     0FFD  318B  23C0         	fcall	_EUSART_Write
  4746     0FFF  0008               	return
  4747     1000                     __end_of_envia_Tx:
  4748                           
  4749                           	psect	text7
  4750     0E56                     __ptext7:	
  4751 ;; *************** function ___fltol *****************
  4752 ;; Defined at:
  4753 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\fltol.c"
  4754 ;; Parameters:    Size  Location     Type
  4755 ;;  f1              4    0[BANK1 ] void 
  4756 ;; Auto vars:     Size  Location     Type
  4757 ;;  exp1            1    9[BANK1 ] unsigned char 
  4758 ;;  sign1           1    8[BANK1 ] unsigned char 
  4759 ;; Return value:  Size  Location     Type
  4760 ;;                  4    0[BANK1 ] long 
  4761 ;; Registers used:
  4762 ;;		wreg, status,2, status,0
  4763 ;; Tracked objects:
  4764 ;;		On entry : 1F/1
  4765 ;;		On exit  : 1F/1
  4766 ;;		Unchanged: 0/0
  4767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4768 ;;      Params:         0       0       4       0       0       0
  4769 ;;      Locals:         0       0       2       0       0       0
  4770 ;;      Temps:          0       0       4       0       0       0
  4771 ;;      Totals:         0       0      10       0       0       0
  4772 ;;Total ram usage:       10 bytes
  4773 ;; Hardware stack levels used: 1
  4774 ;; Hardware stack levels required when called: 5
  4775 ;; This function calls:
  4776 ;;		Nothing
  4777 ;; This function is called by:
  4778 ;;		_envia_Tx
  4779 ;; This function uses a non-reentrant model
  4780 ;;
  4781                           
  4782     0E56                     ___fltol:	
  4783                           ;psect for function ___fltol
  4784                           
  4785                           
  4786                           ;incstack = 0
  4787                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  4788     0E56  1003               	clrc
  4789     0E57  0D4F               	rlf	(___fltol@f1+2)^(0+128),w
  4790     0E58  0D50               	rlf	(___fltol@f1+3)^(0+128),w
  4791     0E59  00D6               	movwf	___fltol@exp1^(0+128)
  4792     0E5A  0856               	movf	___fltol@exp1^(0+128),w
  4793     0E5B  1D03               	btfss	3,2
  4794     0E5C  2E66               	goto	l2824
  4795     0E5D                     l2820:
  4796     0E5D  3000               	movlw	0
  4797     0E5E  00D0               	movwf	(?___fltol+3)^(0+128)
  4798     0E5F  3000               	movlw	0
  4799     0E60  00CF               	movwf	(?___fltol+2)^(0+128)
  4800     0E61  3000               	movlw	0
  4801     0E62  00CE               	movwf	(?___fltol+1)^(0+128)
  4802     0E63  3000               	movlw	0
  4803     0E64  00CD               	movwf	?___fltol^(0+128)
  4804     0E65  0008               	return
  4805     0E66                     l2824:
  4806     0E66  084D               	movf	___fltol@f1^(0+128),w
  4807     0E67  00D1               	movwf	??___fltol^(0+128)
  4808     0E68  084E               	movf	(___fltol@f1+1)^(0+128),w
  4809     0E69  00D2               	movwf	(??___fltol^(0+128)+1)
  4810     0E6A  084F               	movf	(___fltol@f1+2)^(0+128),w
  4811     0E6B  00D3               	movwf	(??___fltol^(0+128)+2)
  4812     0E6C  0850               	movf	(___fltol@f1+3)^(0+128),w
  4813     0E6D  00D4               	movwf	(??___fltol^(0+128)+3)
  4814     0E6E  301F               	movlw	31
  4815     0E6F                     u2375:
  4816     0E6F  36D4               	lsrf	(??___fltol^(0+128)+3),f
  4817     0E70  0CD3               	rrf	(??___fltol^(0+128)+2),f
  4818     0E71  0CD2               	rrf	(??___fltol^(0+128)+1),f
  4819     0E72  0CD1               	rrf	??___fltol^(0+128),f
  4820     0E73  0B89               	decfsz	9,f
  4821     0E74  2E6F               	goto	u2375
  4822     0E75  0851               	movf	??___fltol^(0+128),w
  4823     0E76  00D5               	movwf	___fltol@sign1^(0+128)
  4824     0E77  17CF               	bsf	(___fltol@f1^(0+128)+2),7
  4825     0E78  30FF               	movlw	255
  4826     0E79  05CD               	andwf	___fltol@f1^(0+128),f
  4827     0E7A  30FF               	movlw	255
  4828     0E7B  05CE               	andwf	(___fltol@f1+1)^(0+128),f
  4829     0E7C  30FF               	movlw	255
  4830     0E7D  05CF               	andwf	(___fltol@f1+2)^(0+128),f
  4831     0E7E  3000               	movlw	0
  4832     0E7F  05D0               	andwf	(___fltol@f1+3)^(0+128),f
  4833     0E80  3096               	movlw	150
  4834     0E81  02D6               	subwf	___fltol@exp1^(0+128),f
  4835     0E82  1FD6               	btfss	___fltol@exp1^(0+128),7
  4836     0E83  2E97               	goto	l2842
  4837     0E84  0856               	movf	___fltol@exp1^(0+128),w
  4838     0E85  3A80               	xorlw	128
  4839     0E86  3E97               	addlw	151
  4840     0E87  1C03               	btfss	3,0
  4841     0E88  2E5D               	goto	l2820
  4842     0E89                     l2840:
  4843     0E89  3001               	movlw	1
  4844     0E8A                     u2405:
  4845     0E8A  36D0               	lsrf	(___fltol@f1+3)^(0+128),f
  4846     0E8B  0CCF               	rrf	(___fltol@f1+2)^(0+128),f
  4847     0E8C  0CCE               	rrf	(___fltol@f1+1)^(0+128),f
  4848     0E8D  0CCD               	rrf	___fltol@f1^(0+128),f
  4849     0E8E  0B89               	decfsz	9,f
  4850     0E8F  2E8A               	goto	u2405
  4851     0E90  3001               	movlw	1
  4852     0E91  00D1               	movwf	??___fltol^(0+128)
  4853     0E92  0851               	movf	??___fltol^(0+128),w
  4854     0E93  07D6               	addwf	___fltol@exp1^(0+128),f
  4855     0E94  1903               	btfsc	3,2
  4856     0E95  2EA8               	goto	l2850
  4857     0E96  2E89               	goto	l2840
  4858     0E97                     l2842:
  4859     0E97  3020               	movlw	32
  4860     0E98  0256               	subwf	___fltol@exp1^(0+128),w
  4861     0E99  1803               	btfsc	3,0
  4862     0E9A  2E5D               	goto	l2820
  4863     0E9B                     l1119:
  4864     0E9B  0856               	movf	___fltol@exp1^(0+128),w
  4865     0E9C  1903               	btfsc	3,2
  4866     0E9D  2EA8               	goto	l2850
  4867     0E9E  3001               	movlw	1
  4868     0E9F                     u2435:
  4869     0E9F  35CD               	lslf	___fltol@f1^(0+128),f
  4870     0EA0  0DCE               	rlf	(___fltol@f1+1)^(0+128),f
  4871     0EA1  0DCF               	rlf	(___fltol@f1+2)^(0+128),f
  4872     0EA2  0DD0               	rlf	(___fltol@f1+3)^(0+128),f
  4873     0EA3  0B89               	decfsz	9,f
  4874     0EA4  2E9F               	goto	u2435
  4875     0EA5  3001               	movlw	1
  4876     0EA6  02D6               	subwf	___fltol@exp1^(0+128),f
  4877     0EA7  2E9B               	goto	l1119
  4878     0EA8                     l2850:
  4879     0EA8  0855               	movf	___fltol@sign1^(0+128),w
  4880     0EA9  1903               	btfsc	3,2
  4881     0EAA  0008               	return
  4882     0EAB  09CD               	comf	___fltol@f1^(0+128),f
  4883     0EAC  09CE               	comf	(___fltol@f1+1)^(0+128),f
  4884     0EAD  09CF               	comf	(___fltol@f1+2)^(0+128),f
  4885     0EAE  09D0               	comf	(___fltol@f1+3)^(0+128),f
  4886     0EAF  0ACD               	incf	___fltol@f1^(0+128),f
  4887     0EB0  1903               	skipnz
  4888     0EB1  0ACE               	incf	(___fltol@f1+1)^(0+128),f
  4889     0EB2  1903               	skipnz
  4890     0EB3  0ACF               	incf	(___fltol@f1+2)^(0+128),f
  4891     0EB4  1903               	skipnz
  4892     0EB5  0AD0               	incf	(___fltol@f1+3)^(0+128),f
  4893     0EB6  0008               	return
  4894     0EB7                     __end_of___fltol:
  4895                           
  4896                           	psect	text8
  4897     0BC0                     __ptext8:	
  4898 ;; *************** function _EUSART_Write *****************
  4899 ;; Defined at:
  4900 ;;		line 132 in file "mcc_generated_files/eusart.c"
  4901 ;; Parameters:    Size  Location     Type
  4902 ;;  txData          1    wreg     unsigned char 
  4903 ;; Auto vars:     Size  Location     Type
  4904 ;;  txData          1    0[BANK1 ] unsigned char 
  4905 ;; Return value:  Size  Location     Type
  4906 ;;                  1    wreg      void 
  4907 ;; Registers used:
  4908 ;;		wreg
  4909 ;; Tracked objects:
  4910 ;;		On entry : 1F/1
  4911 ;;		On exit  : 1F/3
  4912 ;;		Unchanged: 0/0
  4913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4914 ;;      Params:         0       0       0       0       0       0
  4915 ;;      Locals:         0       0       1       0       0       0
  4916 ;;      Temps:          0       0       0       0       0       0
  4917 ;;      Totals:         0       0       1       0       0       0
  4918 ;;Total ram usage:        1 bytes
  4919 ;; Hardware stack levels used: 1
  4920 ;; Hardware stack levels required when called: 5
  4921 ;; This function calls:
  4922 ;;		Nothing
  4923 ;; This function is called by:
  4924 ;;		_envia_Tx
  4925 ;; This function uses a non-reentrant model
  4926 ;;
  4927                           
  4928     0BC0                     _EUSART_Write:	
  4929                           ;psect for function _EUSART_Write
  4930                           
  4931                           
  4932                           ;incstack = 0
  4933                           ; Regs used in _EUSART_Write: [wreg]
  4934                           ;EUSART_Write@txData stored from wreg
  4935     0BC0  00CD               	movwf	EUSART_Write@txData^(0+128)
  4936     0BC1                     l247:	
  4937                           ;mcc_generated_files/eusart.c: 135:     {;mcc_generated_files/eusart.c: 136:     }
  4938                           
  4939                           
  4940                           ;mcc_generated_files/eusart.c: 134:     while(0 == PIR1bits.TXIF)
  4941     0BC1  0020               	movlb	0	; select bank0
  4942     0BC2  1E11               	btfss	17,4	;volatile
  4943     0BC3  2BC1               	goto	l247
  4944                           
  4945                           ;mcc_generated_files/eusart.c: 138:     TXREG = txData;
  4946     0BC4  0021               	movlb	1	; select bank1
  4947     0BC5  084D               	movf	EUSART_Write@txData^(0+128),w
  4948     0BC6  0023               	movlb	3	; select bank3
  4949     0BC7  009A               	movwf	26	;volatile
  4950     0BC8  0008               	return
  4951     0BC9                     __end_of_EUSART_Write:
  4952                           
  4953                           	psect	text9
  4954     0C1B                     __ptext9:	
  4955 ;; *************** function _controlchoose *****************
  4956 ;; Defined at:
  4957 ;;		line 104 in file "main.c"
  4958 ;; Parameters:    Size  Location     Type
  4959 ;;		None
  4960 ;; Auto vars:     Size  Location     Type
  4961 ;;		None
  4962 ;; Return value:  Size  Location     Type
  4963 ;;                  1    wreg      void 
  4964 ;; Registers used:
  4965 ;;		wreg, status,2, status,0, pclath, cstack
  4966 ;; Tracked objects:
  4967 ;;		On entry : 1F/8
  4968 ;;		On exit  : 1F/8
  4969 ;;		Unchanged: 0/0
  4970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4971 ;;      Params:         0       0       0       0       0       0
  4972 ;;      Locals:         0       0       0       0       0       0
  4973 ;;      Temps:          0       0       0       0       0       0
  4974 ;;      Totals:         0       0       0       0       0       0
  4975 ;;Total ram usage:        0 bytes
  4976 ;; Hardware stack levels used: 1
  4977 ;; Hardware stack levels required when called: 7
  4978 ;; This function calls:
  4979 ;;		_TMR4_StartTimer
  4980 ;;		_fluxcontrol
  4981 ;;		_pwmcontrol
  4982 ;; This function is called by:
  4983 ;;		_main
  4984 ;; This function uses a non-reentrant model
  4985 ;;
  4986                           
  4987     0C1B                     _controlchoose:	
  4988                           ;psect for function _controlchoose
  4989                           
  4990                           
  4991                           ;main.c: 105:     if (controlchoice == 1){
  4992                           
  4993                           ;incstack = 0
  4994                           ; Regs used in _controlchoose: [wreg+status,2+status,0+pclath+cstack]
  4995     0C1B  0021               	movlb	1	; select bank1
  4996     0C1C  034B               	decf	_controlchoice^(0+128),w
  4997     0C1D  1D03               	btfss	3,2
  4998     0C1E  2C23               	goto	l2934
  4999                           
  5000                           ;main.c: 106:         pwmcontrol ();
  5001     0C1F  3182  223E  318C   	fcall	_pwmcontrol
  5002                           
  5003                           ;main.c: 107:     } else if(controlchoice == 2){
  5004     0C22  2C2A               	goto	l2938
  5005     0C23                     l2934:
  5006     0C23  3002               	movlw	2
  5007     0C24  064B               	xorwf	_controlchoice^(0+128),w
  5008     0C25  1D03               	btfss	3,2
  5009     0C26  2C2A               	goto	l2938
  5010                           
  5011                           ;main.c: 108:         fluxcontrol ();
  5012     0C27  3183  236D  318C   	fcall	_fluxcontrol
  5013     0C2A                     l2938:
  5014                           
  5015                           ;main.c: 110:     TMR4_StartTimer();
  5016     0C2A  3187  27FD         	fcall	_TMR4_StartTimer
  5017     0C2C  0008               	return
  5018     0C2D                     __end_of_controlchoose:
  5019                           
  5020                           	psect	text10
  5021     023E                     __ptext10:	
  5022 ;; *************** function _pwmcontrol *****************
  5023 ;; Defined at:
  5024 ;;		line 67 in file "main.c"
  5025 ;; Parameters:    Size  Location     Type
  5026 ;;		None
  5027 ;; Auto vars:     Size  Location     Type
  5028 ;;		None
  5029 ;; Return value:  Size  Location     Type
  5030 ;;                  1    wreg      void 
  5031 ;; Registers used:
  5032 ;;		wreg, status,2, status,0, pclath, cstack
  5033 ;; Tracked objects:
  5034 ;;		On entry : 1F/1
  5035 ;;		On exit  : 0/0
  5036 ;;		Unchanged: 0/0
  5037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5038 ;;      Params:         0       0       0       0       0       0
  5039 ;;      Locals:         0       0       0       0       0       0
  5040 ;;      Temps:          0       0      12       0       0       0
  5041 ;;      Totals:         0       0      12       0       0       0
  5042 ;;Total ram usage:       12 bytes
  5043 ;; Hardware stack levels used: 1
  5044 ;; Hardware stack levels required when called: 6
  5045 ;; This function calls:
  5046 ;;		_EPWM1_LoadDutyValue
  5047 ;;		___atdiv
  5048 ;;		___tmul
  5049 ;; This function is called by:
  5050 ;;		_controlchoose
  5051 ;; This function uses a non-reentrant model
  5052 ;;
  5053                           
  5054     023E                     _pwmcontrol:	
  5055                           ;psect for function _pwmcontrol
  5056                           
  5057                           
  5058                           ;main.c: 68:     error = (ballset-balldist)*10;
  5059                           
  5060                           ;incstack = 0
  5061                           ; Regs used in _pwmcontrol: [wreg+status,2+status,0+pclath+cstack]
  5062     023E  082D               	movf	_balldist^(0+128),w
  5063     023F  022A               	subwf	_ballset^(0+128),w
  5064     0240  00E2               	movwf	??_pwmcontrol^(0+128)
  5065     0241  082B               	movf	(_ballset+1)^(0+128),w
  5066     0242  00E3               	movwf	(??_pwmcontrol^(0+128)+1)
  5067     0243  082E               	movf	(_balldist+1)^(0+128),w
  5068     0244  1C03               	skipc
  5069     0245  0F2E               	incfsz	(_balldist+1)^(0+128),w
  5070     0246  2A48               	goto	u2251
  5071     0247  2A49               	goto	u2252
  5072     0248                     u2251:
  5073     0248  02E3               	subwf	(??_pwmcontrol^(0+128)+1),f
  5074     0249                     u2252:
  5075     0249  082C               	movf	(_ballset+2)^(0+128),w
  5076     024A  00E4               	movwf	(??_pwmcontrol^(0+128)+2)
  5077     024B  082F               	movf	(_balldist+2)^(0+128),w
  5078     024C  1C03               	skipc
  5079     024D  0F2F               	incfsz	(_balldist+2)^(0+128),w
  5080     024E  2A50               	goto	u2253
  5081     024F  2A51               	goto	u2254
  5082     0250                     u2253:
  5083     0250  02E4               	subwf	(??_pwmcontrol^(0+128)+2),f
  5084     0251                     u2254:
  5085     0251  0862               	movf	??_pwmcontrol^(0+128),w
  5086     0252  00CD               	movwf	___tmul@multiplier^(0+128)
  5087     0253  0863               	movf	(??_pwmcontrol+1)^(0+128),w
  5088     0254  00CE               	movwf	(___tmul@multiplier+1)^(0+128)
  5089     0255  0864               	movf	(??_pwmcontrol+2)^(0+128),w
  5090     0256  00CF               	movwf	(___tmul@multiplier+2)^(0+128)
  5091     0257  300A               	movlw	10
  5092     0258  00D0               	movwf	___tmul@multiplicand^(0+128)
  5093     0259  3000               	movlw	0
  5094     025A  00D1               	movwf	(___tmul@multiplicand+1)^(0+128)
  5095     025B  3000               	movlw	0
  5096     025C  00D2               	movwf	(___tmul@multiplicand+2)^(0+128)
  5097     025D  3187  27D7  3182   	fcall	___tmul
  5098     0260  084D               	movf	?___tmul^(0+128),w
  5099     0261  00B0               	movwf	_error^(0+128)
  5100     0262  084E               	movf	(?___tmul+1)^(0+128),w
  5101     0263  00B1               	movwf	(_error+1)^(0+128)
  5102     0264  084F               	movf	(?___tmul+2)^(0+128),w
  5103     0265  00B2               	movwf	(_error+2)^(0+128)
  5104                           
  5105                           ;main.c: 69:     if(error > 150 || error < 150){
  5106     0266  1BB2               	btfsc	(_error+2)^(0+128),7
  5107     0267  2A72               	goto	l2762
  5108     0268  0832               	movf	(_error+2)^(0+128),w
  5109     0269  1D03               	btfss	3,2
  5110     026A  2A7F               	goto	l2764
  5111     026B  0831               	movf	(_error+1)^(0+128),w
  5112     026C  1D03               	btfss	3,2
  5113     026D  2A7F               	goto	l2764
  5114     026E  3097               	movlw	151
  5115     026F  0230               	subwf	_error^(0+128),w
  5116     0270  1803               	btfsc	3,0
  5117     0271  2A7F               	goto	l2764
  5118     0272                     l2762:
  5119     0272  0021               	movlb	1	; select bank1
  5120     0273  1BB2               	btfsc	(_error+2)^(0+128),7
  5121     0274  2A7F               	goto	l2764
  5122     0275  0832               	movf	(_error+2)^(0+128),w
  5123     0276  1D03               	btfss	3,2
  5124     0277  0008               	return
  5125     0278  0831               	movf	(_error+1)^(0+128),w
  5126     0279  1D03               	btfss	3,2
  5127     027A  0008               	return
  5128     027B  3096               	movlw	150
  5129     027C  0230               	subwf	_error^(0+128),w
  5130     027D  1803               	btfsc	3,0
  5131     027E  0008               	return
  5132     027F                     l2764:
  5133     027F  0021               	movlb	1	; select bank1
  5134     0280  0830               	movf	_error^(0+128),w
  5135     0281  00CD               	movwf	___tmul@multiplier^(0+128)
  5136     0282  0831               	movf	(_error+1)^(0+128),w
  5137     0283  00CE               	movwf	(___tmul@multiplier+1)^(0+128)
  5138     0284  0832               	movf	(_error+2)^(0+128),w
  5139     0285  00CF               	movwf	(___tmul@multiplier+2)^(0+128)
  5140     0286  3058               	movlw	88
  5141     0287  00D0               	movwf	___tmul@multiplicand^(0+128)
  5142     0288  3002               	movlw	2
  5143     0289  00D1               	movwf	(___tmul@multiplicand+1)^(0+128)
  5144     028A  3000               	movlw	0
  5145     028B  00D2               	movwf	(___tmul@multiplicand+2)^(0+128)
  5146     028C  3187  27D7  3182   	fcall	___tmul
  5147     028F  084D               	movf	?___tmul^(0+128),w
  5148     0290  07A7               	addwf	_outputsum^(0+128),f
  5149     0291  084E               	movf	(?___tmul+1)^(0+128),w
  5150     0292  3DA8               	addwfc	(_outputsum+1)^(0+128),f
  5151     0293  084F               	movf	(?___tmul+2)^(0+128),w
  5152     0294  3DA9               	addwfc	(_outputsum+2)^(0+128),f
  5153                           
  5154                           ;main.c: 71:         if (outputsum > 1000) outputsum = 1000;
  5155     0295  1BA9               	btfsc	(_outputsum+2)^(0+128),7
  5156     0296  2AA7               	goto	l2770
  5157     0297  0829               	movf	(_outputsum+2)^(0+128),w
  5158     0298  1D03               	btfss	3,2
  5159     0299  2AA0               	goto	l2768
  5160     029A  30E9               	movlw	233
  5161     029B  0227               	subwf	_outputsum^(0+128),w
  5162     029C  3003               	movlw	3
  5163     029D  3B28               	subwfb	(_outputsum+1)^(0+128),w
  5164     029E  1C03               	btfss	3,0
  5165     029F  2AA7               	goto	l2770
  5166     02A0                     l2768:
  5167     02A0  30E8               	movlw	232
  5168     02A1  0021               	movlb	1	; select bank1
  5169     02A2  00A7               	movwf	_outputsum^(0+128)
  5170     02A3  3003               	movlw	3
  5171     02A4  00A8               	movwf	(_outputsum+1)^(0+128)
  5172     02A5  3000               	movlw	0
  5173     02A6  2AB8               	goto	L3
  5174     02A7                     l2770:
  5175     02A7  0021               	movlb	1	; select bank1
  5176     02A8  1FA9               	btfss	(_outputsum+2)^(0+128),7
  5177     02A9  2AB9               	goto	l2774
  5178     02AA  3018               	movlw	24
  5179     02AB  0227               	subwf	_outputsum^(0+128),w
  5180     02AC  30FC               	movlw	252
  5181     02AD  3B28               	subwfb	(_outputsum+1)^(0+128),w
  5182     02AE  30FF               	movlw	255
  5183     02AF  3B29               	subwfb	(_outputsum+2)^(0+128),w
  5184     02B0  1803               	btfsc	3,0
  5185     02B1  2AB9               	goto	l2774
  5186     02B2  3018               	movlw	24
  5187     02B3  0021               	movlb	1	; select bank1
  5188     02B4  00A7               	movwf	_outputsum^(0+128)
  5189     02B5  30FC               	movlw	252
  5190     02B6  00A8               	movwf	(_outputsum+1)^(0+128)
  5191     02B7  30FF               	movlw	255
  5192     02B8                     L3:
  5193     02B8  00A9               	movwf	(_outputsum+2)^(0+128)
  5194     02B9                     l2774:
  5195                           
  5196                           ;main.c: 73:         outpre = (kpp*error + outputsum + (kdp*(error-errorp)+outpre*10)/10
      +                          );
  5197     02B9  0021               	movlb	1	; select bank1
  5198     02BA  0827               	movf	_outputsum^(0+128),w
  5199     02BB  00E2               	movwf	??_pwmcontrol^(0+128)
  5200     02BC  0828               	movf	(_outputsum+1)^(0+128),w
  5201     02BD  00E3               	movwf	(??_pwmcontrol^(0+128)+1)
  5202     02BE  0829               	movf	(_outputsum+2)^(0+128),w
  5203     02BF  00E4               	movwf	(??_pwmcontrol^(0+128)+2)
  5204     02C0  300A               	movlw	10
  5205     02C1  00D6               	movwf	___atdiv@divisor^(0+128)
  5206     02C2  3000               	movlw	0
  5207     02C3  00D7               	movwf	(___atdiv@divisor+1)^(0+128)
  5208     02C4  3000               	movlw	0
  5209     02C5  00D8               	movwf	(___atdiv@divisor+2)^(0+128)
  5210     02C6  0020               	movlb	0	; select bank0
  5211     02C7  085E               	movf	_errorp,w
  5212     02C8  0021               	movlb	1	; select bank1
  5213     02C9  00CD               	movwf	___tmul@multiplier^(0+128)
  5214     02CA  0020               	movlb	0	; select bank0
  5215     02CB  085F               	movf	_errorp+1,w
  5216     02CC  0021               	movlb	1	; select bank1
  5217     02CD  00CE               	movwf	(___tmul@multiplier+1)^(0+128)
  5218     02CE  0020               	movlb	0	; select bank0
  5219     02CF  0860               	movf	_errorp+2,w
  5220     02D0  0021               	movlb	1	; select bank1
  5221     02D1  00CF               	movwf	(___tmul@multiplier+2)^(0+128)
  5222     02D2  30FB               	movlw	251
  5223     02D3  00D0               	movwf	___tmul@multiplicand^(0+128)
  5224     02D4  30FF               	movlw	255
  5225     02D5  00D1               	movwf	(___tmul@multiplicand+1)^(0+128)
  5226     02D6  30FF               	movlw	255
  5227     02D7  00D2               	movwf	(___tmul@multiplicand+2)^(0+128)
  5228     02D8  3187  27D7  3182   	fcall	___tmul
  5229     02DB  084D               	movf	?___tmul^(0+128),w
  5230     02DC  00E5               	movwf	(??_pwmcontrol+3)^(0+128)
  5231     02DD  084E               	movf	(?___tmul+1)^(0+128),w
  5232     02DE  00E6               	movwf	((??_pwmcontrol+3)^(0+128)+1)
  5233     02DF  084F               	movf	(?___tmul+2)^(0+128),w
  5234     02E0  00E7               	movwf	((??_pwmcontrol+3)^(0+128)+2)
  5235     02E1  0830               	movf	_error^(0+128),w
  5236     02E2  00CD               	movwf	___tmul@multiplier^(0+128)
  5237     02E3  0831               	movf	(_error+1)^(0+128),w
  5238     02E4  00CE               	movwf	(___tmul@multiplier+1)^(0+128)
  5239     02E5  0832               	movf	(_error+2)^(0+128),w
  5240     02E6  00CF               	movwf	(___tmul@multiplier+2)^(0+128)
  5241     02E7  3005               	movlw	5
  5242     02E8  00D0               	movwf	___tmul@multiplicand^(0+128)
  5243     02E9  3000               	movlw	0
  5244     02EA  00D1               	movwf	(___tmul@multiplicand+1)^(0+128)
  5245     02EB  3000               	movlw	0
  5246     02EC  00D2               	movwf	(___tmul@multiplicand+2)^(0+128)
  5247     02ED  3187  27D7  3182   	fcall	___tmul
  5248     02F0  084D               	movf	?___tmul^(0+128),w
  5249     02F1  00E8               	movwf	(??_pwmcontrol+6)^(0+128)
  5250     02F2  084E               	movf	(?___tmul+1)^(0+128),w
  5251     02F3  00E9               	movwf	((??_pwmcontrol+6)^(0+128)+1)
  5252     02F4  084F               	movf	(?___tmul+2)^(0+128),w
  5253     02F5  00EA               	movwf	((??_pwmcontrol+6)^(0+128)+2)
  5254     02F6  0824               	movf	_outpre^(0+128),w
  5255     02F7  00CD               	movwf	___tmul@multiplier^(0+128)
  5256     02F8  0825               	movf	(_outpre+1)^(0+128),w
  5257     02F9  00CE               	movwf	(___tmul@multiplier+1)^(0+128)
  5258     02FA  0826               	movf	(_outpre+2)^(0+128),w
  5259     02FB  00CF               	movwf	(___tmul@multiplier+2)^(0+128)
  5260     02FC  300A               	movlw	10
  5261     02FD  00D0               	movwf	___tmul@multiplicand^(0+128)
  5262     02FE  3000               	movlw	0
  5263     02FF  00D1               	movwf	(___tmul@multiplicand+1)^(0+128)
  5264     0300  3000               	movlw	0
  5265     0301  00D2               	movwf	(___tmul@multiplicand+2)^(0+128)
  5266     0302  3187  27D7  3182   	fcall	___tmul
  5267     0305  084D               	movf	?___tmul^(0+128),w
  5268     0306  07E8               	addwf	(??_pwmcontrol+6)^(0+128),f
  5269     0307  084E               	movf	(?___tmul+1)^(0+128),w
  5270     0308  3DE9               	addwfc	((??_pwmcontrol+6)^(0+128)+1),f
  5271     0309  084F               	movf	(?___tmul+2)^(0+128),w
  5272     030A  3DEA               	addwfc	((??_pwmcontrol+6)^(0+128)+2),f
  5273     030B  0868               	movf	(??_pwmcontrol+6)^(0+128),w
  5274     030C  07E5               	addwf	(??_pwmcontrol+3)^(0+128),f
  5275     030D  0869               	movf	(??_pwmcontrol+7)^(0+128),w
  5276     030E  3DE6               	addwfc	((??_pwmcontrol+3)^(0+128)+1),f
  5277     030F  086A               	movf	(??_pwmcontrol+8)^(0+128),w
  5278     0310  3DE7               	addwfc	((??_pwmcontrol+3)^(0+128)+2),f
  5279     0311  0865               	movf	(??_pwmcontrol+3)^(0+128),w
  5280     0312  00D9               	movwf	___atdiv@dividend^(0+128)
  5281     0313  0866               	movf	(??_pwmcontrol+4)^(0+128),w
  5282     0314  00DA               	movwf	(___atdiv@dividend+1)^(0+128)
  5283     0315  0867               	movf	(??_pwmcontrol+5)^(0+128),w
  5284     0316  00DB               	movwf	(___atdiv@dividend+2)^(0+128)
  5285     0317  318E  26B7  3182   	fcall	___atdiv
  5286     031A  0856               	movf	?___atdiv^(0+128),w
  5287     031B  00EB               	movwf	(??_pwmcontrol+9)^(0+128)
  5288     031C  0857               	movf	(?___atdiv+1)^(0+128),w
  5289     031D  00EC               	movwf	((??_pwmcontrol+9)^(0+128)+1)
  5290     031E  0858               	movf	(?___atdiv+2)^(0+128),w
  5291     031F  00ED               	movwf	((??_pwmcontrol+9)^(0+128)+2)
  5292     0320  0830               	movf	_error^(0+128),w
  5293     0321  00CD               	movwf	___tmul@multiplier^(0+128)
  5294     0322  0831               	movf	(_error+1)^(0+128),w
  5295     0323  00CE               	movwf	(___tmul@multiplier+1)^(0+128)
  5296     0324  0832               	movf	(_error+2)^(0+128),w
  5297     0325  00CF               	movwf	(___tmul@multiplier+2)^(0+128)
  5298     0326  3036               	movlw	54
  5299     0327  00D0               	movwf	___tmul@multiplicand^(0+128)
  5300     0328  3001               	movlw	1
  5301     0329  00D1               	movwf	(___tmul@multiplicand+1)^(0+128)
  5302     032A  3000               	movlw	0
  5303     032B  00D2               	movwf	(___tmul@multiplicand+2)^(0+128)
  5304     032C  3187  27D7  3182   	fcall	___tmul
  5305     032F  084D               	movf	?___tmul^(0+128),w
  5306     0330  07EB               	addwf	(??_pwmcontrol+9)^(0+128),f
  5307     0331  084E               	movf	(?___tmul+1)^(0+128),w
  5308     0332  3DEC               	addwfc	((??_pwmcontrol+9)^(0+128)+1),f
  5309     0333  084F               	movf	(?___tmul+2)^(0+128),w
  5310     0334  3DED               	addwfc	((??_pwmcontrol+9)^(0+128)+2),f
  5311     0335  086B               	movf	(??_pwmcontrol+9)^(0+128),w
  5312     0336  07E2               	addwf	??_pwmcontrol^(0+128),f
  5313     0337  086C               	movf	(??_pwmcontrol+10)^(0+128),w
  5314     0338  3DE3               	addwfc	(??_pwmcontrol^(0+128)+1),f
  5315     0339  086D               	movf	(??_pwmcontrol+11)^(0+128),w
  5316     033A  3DE4               	addwfc	(??_pwmcontrol^(0+128)+2),f
  5317     033B  0862               	movf	??_pwmcontrol^(0+128),w
  5318     033C  00A4               	movwf	_outpre^(0+128)
  5319     033D  0863               	movf	(??_pwmcontrol+1)^(0+128),w
  5320     033E  00A5               	movwf	(_outpre+1)^(0+128)
  5321     033F  0864               	movf	(??_pwmcontrol+2)^(0+128),w
  5322     0340  00A6               	movwf	(_outpre+2)^(0+128)
  5323                           
  5324                           ;main.c: 74:         if(outpre > 1023) output = 1023;
  5325     0341  1BA6               	btfsc	(_outpre+2)^(0+128),7
  5326     0342  2B50               	goto	l601
  5327     0343  0826               	movf	(_outpre+2)^(0+128),w
  5328     0344  1D03               	btfss	3,2
  5329     0345  2B4A               	goto	l2778
  5330     0346  3004               	movlw	4
  5331     0347  0225               	subwf	(_outpre+1)^(0+128),w
  5332     0348  1C03               	btfss	3,0
  5333     0349  2B50               	goto	l601
  5334     034A                     l2778:
  5335     034A  30FF               	movlw	255
  5336     034B  0021               	movlb	1	; select bank1
  5337     034C  00C1               	movwf	_output^(0+128)
  5338     034D  3003               	movlw	3
  5339     034E  00C2               	movwf	(_output^(0+128)+1)
  5340     034F  2B5A               	goto	l2784
  5341     0350                     l601:	
  5342                           ;main.c: 75:         else if(outpre <0) output= 0;
  5343                           
  5344     0350  0021               	movlb	1	; select bank1
  5345     0351  1FA6               	btfss	(_outpre+2)^(0+128),7
  5346     0352  2B56               	goto	l2782
  5347     0353  01C1               	clrf	_output^(0+128)
  5348     0354  01C2               	clrf	(_output+1)^(0+128)
  5349     0355  2B5A               	goto	l2784
  5350     0356                     l2782:
  5351     0356  0825               	movf	(_outpre+1)^(0+128),w
  5352     0357  00C2               	movwf	(_output+1)^(0+128)
  5353     0358  0824               	movf	_outpre^(0+128),w
  5354     0359  00C1               	movwf	_output^(0+128)
  5355     035A                     l2784:
  5356                           
  5357                           ;main.c: 77:         EPWM1_LoadDutyValue(output);
  5358     035A  0842               	movf	(_output+1)^(0+128),w
  5359     035B  00CE               	movwf	(EPWM1_LoadDutyValue@dutyValue+1)^(0+128)
  5360     035C  0841               	movf	_output^(0+128),w
  5361     035D  00CD               	movwf	EPWM1_LoadDutyValue@dutyValue^(0+128)
  5362     035E  318C  24BF         	fcall	_EPWM1_LoadDutyValue
  5363                           
  5364                           ;main.c: 78:         errorp = error;
  5365     0360  0021               	movlb	1	; select bank1
  5366     0361  0830               	movf	_error^(0+128),w
  5367     0362  0020               	movlb	0	; select bank0
  5368     0363  00DE               	movwf	_errorp
  5369     0364  0021               	movlb	1	; select bank1
  5370     0365  0831               	movf	(_error+1)^(0+128),w
  5371     0366  0020               	movlb	0	; select bank0
  5372     0367  00DF               	movwf	_errorp+1
  5373     0368  0021               	movlb	1	; select bank1
  5374     0369  0832               	movf	(_error+2)^(0+128),w
  5375     036A  0020               	movlb	0	; select bank0
  5376     036B  00E0               	movwf	_errorp+2
  5377     036C  0008               	return
  5378     036D                     __end_of_pwmcontrol:
  5379                           
  5380                           	psect	text11
  5381     036D                     __ptext11:	
  5382 ;; *************** function _fluxcontrol *****************
  5383 ;; Defined at:
  5384 ;;		line 52 in file "main.c"
  5385 ;; Parameters:    Size  Location     Type
  5386 ;;		None
  5387 ;; Auto vars:     Size  Location     Type
  5388 ;;		None
  5389 ;; Return value:  Size  Location     Type
  5390 ;;                  1    wreg      void 
  5391 ;; Registers used:
  5392 ;;		wreg, status,2, status,0, pclath, cstack
  5393 ;; Tracked objects:
  5394 ;;		On entry : 1F/1
  5395 ;;		On exit  : 0/0
  5396 ;;		Unchanged: 0/0
  5397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5398 ;;      Params:         0       0       0       0       0       0
  5399 ;;      Locals:         0       0       0       0       0       0
  5400 ;;      Temps:          0       0       6       0       0       0
  5401 ;;      Totals:         0       0       6       0       0       0
  5402 ;;Total ram usage:        6 bytes
  5403 ;; Hardware stack levels used: 1
  5404 ;; Hardware stack levels required when called: 6
  5405 ;; This function calls:
  5406 ;;		___atdiv
  5407 ;;		___tmul
  5408 ;; This function is called by:
  5409 ;;		_controlchoose
  5410 ;; This function uses a non-reentrant model
  5411 ;;
  5412                           
  5413     036D                     _fluxcontrol:	
  5414                           ;psect for function _fluxcontrol
  5415                           
  5416                           
  5417                           ;main.c: 53:     error = (ballset-balldist)*100;
  5418                           
  5419                           ;incstack = 0
  5420                           ; Regs used in _fluxcontrol: [wreg+status,2+status,0+pclath+cstack]
  5421     036D  082D               	movf	_balldist^(0+128),w
  5422     036E  022A               	subwf	_ballset^(0+128),w
  5423     036F  00E2               	movwf	??_fluxcontrol^(0+128)
  5424     0370  082B               	movf	(_ballset+1)^(0+128),w
  5425     0371  00E3               	movwf	(??_fluxcontrol^(0+128)+1)
  5426     0372  082E               	movf	(_balldist+1)^(0+128),w
  5427     0373  1C03               	skipc
  5428     0374  0F2E               	incfsz	(_balldist+1)^(0+128),w
  5429     0375  2B77               	goto	u2181
  5430     0376  2B78               	goto	u2182
  5431     0377                     u2181:
  5432     0377  02E3               	subwf	(??_fluxcontrol^(0+128)+1),f
  5433     0378                     u2182:
  5434     0378  082C               	movf	(_ballset+2)^(0+128),w
  5435     0379  00E4               	movwf	(??_fluxcontrol^(0+128)+2)
  5436     037A  082F               	movf	(_balldist+2)^(0+128),w
  5437     037B  1C03               	skipc
  5438     037C  0F2F               	incfsz	(_balldist+2)^(0+128),w
  5439     037D  2B7F               	goto	u2183
  5440     037E  2B80               	goto	u2184
  5441     037F                     u2183:
  5442     037F  02E4               	subwf	(??_fluxcontrol^(0+128)+2),f
  5443     0380                     u2184:
  5444     0380  0862               	movf	??_fluxcontrol^(0+128),w
  5445     0381  00CD               	movwf	___tmul@multiplier^(0+128)
  5446     0382  0863               	movf	(??_fluxcontrol+1)^(0+128),w
  5447     0383  00CE               	movwf	(___tmul@multiplier+1)^(0+128)
  5448     0384  0864               	movf	(??_fluxcontrol+2)^(0+128),w
  5449     0385  00CF               	movwf	(___tmul@multiplier+2)^(0+128)
  5450     0386  3064               	movlw	100
  5451     0387  00D0               	movwf	___tmul@multiplicand^(0+128)
  5452     0388  3000               	movlw	0
  5453     0389  00D1               	movwf	(___tmul@multiplicand+1)^(0+128)
  5454     038A  3000               	movlw	0
  5455     038B  00D2               	movwf	(___tmul@multiplicand+2)^(0+128)
  5456     038C  3187  27D7  3183   	fcall	___tmul
  5457     038F  084D               	movf	?___tmul^(0+128),w
  5458     0390  00B0               	movwf	_error^(0+128)
  5459     0391  084E               	movf	(?___tmul+1)^(0+128),w
  5460     0392  00B1               	movwf	(_error+1)^(0+128)
  5461     0393  084F               	movf	(?___tmul+2)^(0+128),w
  5462     0394  00B2               	movwf	(_error+2)^(0+128)
  5463                           
  5464                           ;main.c: 54:     if(error > 150 || error < 150){
  5465     0395  1BB2               	btfsc	(_error+2)^(0+128),7
  5466     0396  2BA1               	goto	l2736
  5467     0397  0832               	movf	(_error+2)^(0+128),w
  5468     0398  1D03               	btfss	3,2
  5469     0399  2BAE               	goto	l2738
  5470     039A  0831               	movf	(_error+1)^(0+128),w
  5471     039B  1D03               	btfss	3,2
  5472     039C  2BAE               	goto	l2738
  5473     039D  3097               	movlw	151
  5474     039E  0230               	subwf	_error^(0+128),w
  5475     039F  1803               	btfsc	3,0
  5476     03A0  2BAE               	goto	l2738
  5477     03A1                     l2736:
  5478     03A1  0021               	movlb	1	; select bank1
  5479     03A2  1BB2               	btfsc	(_error+2)^(0+128),7
  5480     03A3  2BAE               	goto	l2738
  5481     03A4  0832               	movf	(_error+2)^(0+128),w
  5482     03A5  1D03               	btfss	3,2
  5483     03A6  0008               	return
  5484     03A7  0831               	movf	(_error+1)^(0+128),w
  5485     03A8  1D03               	btfss	3,2
  5486     03A9  0008               	return
  5487     03AA  3096               	movlw	150
  5488     03AB  0230               	subwf	_error^(0+128),w
  5489     03AC  1803               	btfsc	3,0
  5490     03AD  0008               	return
  5491     03AE                     l2738:
  5492     03AE  3064               	movlw	100
  5493     03AF  0021               	movlb	1	; select bank1
  5494     03B0  00D6               	movwf	___atdiv@divisor^(0+128)
  5495     03B1  3000               	movlw	0
  5496     03B2  00D7               	movwf	(___atdiv@divisor+1)^(0+128)
  5497     03B3  3000               	movlw	0
  5498     03B4  00D8               	movwf	(___atdiv@divisor+2)^(0+128)
  5499     03B5  0830               	movf	_error^(0+128),w
  5500     03B6  00CD               	movwf	___tmul@multiplier^(0+128)
  5501     03B7  0831               	movf	(_error+1)^(0+128),w
  5502     03B8  00CE               	movwf	(___tmul@multiplier+1)^(0+128)
  5503     03B9  0832               	movf	(_error+2)^(0+128),w
  5504     03BA  00CF               	movwf	(___tmul@multiplier+2)^(0+128)
  5505     03BB  3018               	movlw	24
  5506     03BC  00D0               	movwf	___tmul@multiplicand^(0+128)
  5507     03BD  3001               	movlw	1
  5508     03BE  00D1               	movwf	(___tmul@multiplicand+1)^(0+128)
  5509     03BF  3000               	movlw	0
  5510     03C0  00D2               	movwf	(___tmul@multiplicand+2)^(0+128)
  5511     03C1  3187  27D7  3183   	fcall	___tmul
  5512     03C4  084D               	movf	?___tmul^(0+128),w
  5513     03C5  00D9               	movwf	___atdiv@dividend^(0+128)
  5514     03C6  084E               	movf	(?___tmul+1)^(0+128),w
  5515     03C7  00DA               	movwf	(___atdiv@dividend+1)^(0+128)
  5516     03C8  084F               	movf	(?___tmul+2)^(0+128),w
  5517     03C9  00DB               	movwf	(___atdiv@dividend+2)^(0+128)
  5518     03CA  318E  26B7  3183   	fcall	___atdiv
  5519     03CD  0856               	movf	?___atdiv^(0+128),w
  5520     03CE  07A7               	addwf	_outputsum^(0+128),f
  5521     03CF  0857               	movf	(?___atdiv+1)^(0+128),w
  5522     03D0  3DA8               	addwfc	(_outputsum+1)^(0+128),f
  5523     03D1  0858               	movf	(?___atdiv+2)^(0+128),w
  5524     03D2  3DA9               	addwfc	(_outputsum+2)^(0+128),f
  5525                           
  5526                           ;main.c: 56:         if (outputsum > 4500) outputsum = 4500;
  5527     03D3  1BA9               	btfsc	(_outputsum+2)^(0+128),7
  5528     03D4  2BE5               	goto	l2744
  5529     03D5  0829               	movf	(_outputsum+2)^(0+128),w
  5530     03D6  1D03               	btfss	3,2
  5531     03D7  2BDE               	goto	l2742
  5532     03D8  3095               	movlw	149
  5533     03D9  0227               	subwf	_outputsum^(0+128),w
  5534     03DA  3011               	movlw	17
  5535     03DB  3B28               	subwfb	(_outputsum+1)^(0+128),w
  5536     03DC  1C03               	btfss	3,0
  5537     03DD  2BE5               	goto	l2744
  5538     03DE                     l2742:
  5539     03DE  3094               	movlw	148
  5540     03DF  0021               	movlb	1	; select bank1
  5541     03E0  00A7               	movwf	_outputsum^(0+128)
  5542     03E1  3011               	movlw	17
  5543     03E2  00A8               	movwf	(_outputsum+1)^(0+128)
  5544     03E3  3000               	movlw	0
  5545     03E4  2BF6               	goto	L4
  5546     03E5                     l2744:
  5547     03E5  0021               	movlb	1	; select bank1
  5548     03E6  1FA9               	btfss	(_outputsum+2)^(0+128),7
  5549     03E7  2BF7               	goto	l2748
  5550     03E8  3018               	movlw	24
  5551     03E9  0227               	subwf	_outputsum^(0+128),w
  5552     03EA  30FC               	movlw	252
  5553     03EB  3B28               	subwfb	(_outputsum+1)^(0+128),w
  5554     03EC  30FF               	movlw	255
  5555     03ED  3B29               	subwfb	(_outputsum+2)^(0+128),w
  5556     03EE  1803               	btfsc	3,0
  5557     03EF  2BF7               	goto	l2748
  5558     03F0  3018               	movlw	24
  5559     03F1  0021               	movlb	1	; select bank1
  5560     03F2  00A7               	movwf	_outputsum^(0+128)
  5561     03F3  30FC               	movlw	252
  5562     03F4  00A8               	movwf	(_outputsum+1)^(0+128)
  5563     03F5  30FF               	movlw	255
  5564     03F6                     L4:
  5565     03F6  00A9               	movwf	(_outputsum+2)^(0+128)
  5566     03F7                     l2748:
  5567                           
  5568                           ;main.c: 58:         outpre = ((kpf*error + outputsum)/100)+outpre;
  5569     03F7  3064               	movlw	100
  5570     03F8  0021               	movlb	1	; select bank1
  5571     03F9  00D6               	movwf	___atdiv@divisor^(0+128)
  5572     03FA  3000               	movlw	0
  5573     03FB  00D7               	movwf	(___atdiv@divisor+1)^(0+128)
  5574     03FC  3000               	movlw	0
  5575     03FD  00D8               	movwf	(___atdiv@divisor+2)^(0+128)
  5576     03FE  0830               	movf	_error^(0+128),w
  5577     03FF  00CD               	movwf	___tmul@multiplier^(0+128)
  5578     0400  0831               	movf	(_error+1)^(0+128),w
  5579     0401  00CE               	movwf	(___tmul@multiplier+1)^(0+128)
  5580     0402  0832               	movf	(_error+2)^(0+128),w
  5581     0403  00CF               	movwf	(___tmul@multiplier+2)^(0+128)
  5582     0404  30C8               	movlw	200
  5583     0405  00D0               	movwf	___tmul@multiplicand^(0+128)
  5584     0406  3000               	movlw	0
  5585     0407  00D1               	movwf	(___tmul@multiplicand+1)^(0+128)
  5586     0408  3000               	movlw	0
  5587     0409  00D2               	movwf	(___tmul@multiplicand+2)^(0+128)
  5588     040A  3187  27D7  3183   	fcall	___tmul
  5589     040D  084D               	movf	?___tmul^(0+128),w
  5590     040E  0727               	addwf	_outputsum^(0+128),w
  5591     040F  00E2               	movwf	??_fluxcontrol^(0+128)
  5592     0410  084E               	movf	(?___tmul+1)^(0+128),w
  5593     0411  3D28               	addwfc	(_outputsum+1)^(0+128),w
  5594     0412  00E3               	movwf	(??_fluxcontrol^(0+128)+1)
  5595     0413  084F               	movf	(?___tmul+2)^(0+128),w
  5596     0414  3D29               	addwfc	(_outputsum+2)^(0+128),w
  5597     0415  00E4               	movwf	(??_fluxcontrol^(0+128)+2)
  5598     0416  0862               	movf	??_fluxcontrol^(0+128),w
  5599     0417  00D9               	movwf	___atdiv@dividend^(0+128)
  5600     0418  0863               	movf	(??_fluxcontrol+1)^(0+128),w
  5601     0419  00DA               	movwf	(___atdiv@dividend+1)^(0+128)
  5602     041A  0864               	movf	(??_fluxcontrol+2)^(0+128),w
  5603     041B  00DB               	movwf	(___atdiv@dividend+2)^(0+128)
  5604     041C  318E  26B7  3183   	fcall	___atdiv
  5605     041F  0856               	movf	?___atdiv^(0+128),w
  5606     0420  0724               	addwf	_outpre^(0+128),w
  5607     0421  00E5               	movwf	(??_fluxcontrol+3)^(0+128)
  5608     0422  0857               	movf	(?___atdiv+1)^(0+128),w
  5609     0423  3D25               	addwfc	(_outpre+1)^(0+128),w
  5610     0424  00E6               	movwf	((??_fluxcontrol+3)^(0+128)+1)
  5611     0425  0858               	movf	(?___atdiv+2)^(0+128),w
  5612     0426  3D26               	addwfc	(_outpre+2)^(0+128),w
  5613     0427  00E7               	movwf	((??_fluxcontrol+3)^(0+128)+2)
  5614     0428  0865               	movf	(??_fluxcontrol+3)^(0+128),w
  5615     0429  00A4               	movwf	_outpre^(0+128)
  5616     042A  0866               	movf	(??_fluxcontrol+4)^(0+128),w
  5617     042B  00A5               	movwf	(_outpre+1)^(0+128)
  5618     042C  0867               	movf	(??_fluxcontrol+5)^(0+128),w
  5619     042D  00A6               	movwf	(_outpre+2)^(0+128)
  5620                           
  5621                           ;main.c: 59:         if (outpre > 380) output = 380;
  5622     042E  1BA6               	btfsc	(_outpre+2)^(0+128),7
  5623     042F  2C3F               	goto	l588
  5624     0430  0826               	movf	(_outpre+2)^(0+128),w
  5625     0431  1D03               	btfss	3,2
  5626     0432  2C39               	goto	l2752
  5627     0433  307D               	movlw	125
  5628     0434  0224               	subwf	_outpre^(0+128),w
  5629     0435  3001               	movlw	1
  5630     0436  3B25               	subwfb	(_outpre+1)^(0+128),w
  5631     0437  1C03               	btfss	3,0
  5632     0438  2C3F               	goto	l588
  5633     0439                     l2752:
  5634     0439  307C               	movlw	124
  5635     043A  0021               	movlb	1	; select bank1
  5636     043B  00C1               	movwf	_output^(0+128)
  5637     043C  3001               	movlw	1
  5638     043D  00C2               	movwf	(_output^(0+128)+1)
  5639     043E  2C49               	goto	l589
  5640     043F                     l588:	
  5641                           ;main.c: 60:         else if(outpre <0 ) output = 0;
  5642                           
  5643     043F  0021               	movlb	1	; select bank1
  5644     0440  1FA6               	btfss	(_outpre+2)^(0+128),7
  5645     0441  2C45               	goto	l2756
  5646     0442  01C1               	clrf	_output^(0+128)
  5647     0443  01C2               	clrf	(_output+1)^(0+128)
  5648     0444  2C49               	goto	l589
  5649     0445                     l2756:
  5650     0445  0825               	movf	(_outpre+1)^(0+128),w
  5651     0446  00C2               	movwf	(_output+1)^(0+128)
  5652     0447  0824               	movf	_outpre^(0+128),w
  5653     0448  00C1               	movwf	_output^(0+128)
  5654     0449                     l589:
  5655                           
  5656                           ;main.c: 62:         errorp = error;
  5657     0449  0830               	movf	_error^(0+128),w
  5658     044A  0020               	movlb	0	; select bank0
  5659     044B  00DE               	movwf	_errorp
  5660     044C  0021               	movlb	1	; select bank1
  5661     044D  0831               	movf	(_error+1)^(0+128),w
  5662     044E  0020               	movlb	0	; select bank0
  5663     044F  00DF               	movwf	_errorp+1
  5664     0450  0021               	movlb	1	; select bank1
  5665     0451  0832               	movf	(_error+2)^(0+128),w
  5666     0452  0020               	movlb	0	; select bank0
  5667     0453  00E0               	movwf	_errorp+2
  5668     0454  0008               	return
  5669     0455                     __end_of_fluxcontrol:
  5670                           
  5671                           	psect	text12
  5672     07D7                     __ptext12:	
  5673 ;; *************** function ___tmul *****************
  5674 ;; Defined at:
  5675 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul24.c"
  5676 ;; Parameters:    Size  Location     Type
  5677 ;;  multiplier      3    0[BANK1 ] unsigned um
  5678 ;;  multiplicand    3    3[BANK1 ] unsigned um
  5679 ;; Auto vars:     Size  Location     Type
  5680 ;;  product         3    6[BANK1 ] unsigned um
  5681 ;; Return value:  Size  Location     Type
  5682 ;;                  3    0[BANK1 ] unsigned um
  5683 ;; Registers used:
  5684 ;;		wreg, status,2, status,0
  5685 ;; Tracked objects:
  5686 ;;		On entry : 1F/1
  5687 ;;		On exit  : 1F/1
  5688 ;;		Unchanged: 0/0
  5689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5690 ;;      Params:         0       0       6       0       0       0
  5691 ;;      Locals:         0       0       3       0       0       0
  5692 ;;      Temps:          0       0       0       0       0       0
  5693 ;;      Totals:         0       0       9       0       0       0
  5694 ;;Total ram usage:        9 bytes
  5695 ;; Hardware stack levels used: 1
  5696 ;; Hardware stack levels required when called: 5
  5697 ;; This function calls:
  5698 ;;		Nothing
  5699 ;; This function is called by:
  5700 ;;		_fluxcontrol
  5701 ;;		_pwmcontrol
  5702 ;; This function uses a non-reentrant model
  5703 ;;
  5704                           
  5705     07D7                     ___tmul:	
  5706                           ;psect for function ___tmul
  5707                           
  5708                           
  5709                           ;incstack = 0
  5710                           ; Regs used in ___tmul: [wreg+status,2+status,0]
  5711     07D7  3000               	movlw	0
  5712     07D8  00D3               	movwf	___tmul@product^(0+128)
  5713     07D9  3000               	movlw	0
  5714     07DA  00D4               	movwf	(___tmul@product+1)^(0+128)
  5715     07DB  3000               	movlw	0
  5716     07DC  00D5               	movwf	(___tmul@product+2)^(0+128)
  5717     07DD                     l2318:
  5718     07DD  1C4D               	btfss	___tmul@multiplier^(0+128),0
  5719     07DE  2FE5               	goto	l2322
  5720     07DF  0850               	movf	___tmul@multiplicand^(0+128),w
  5721     07E0  07D3               	addwf	___tmul@product^(0+128),f
  5722     07E1  0851               	movf	(___tmul@multiplicand+1)^(0+128),w
  5723     07E2  3DD4               	addwfc	(___tmul@product+1)^(0+128),f
  5724     07E3  0852               	movf	(___tmul@multiplicand+2)^(0+128),w
  5725     07E4  3DD5               	addwfc	(___tmul@product+2)^(0+128),f
  5726     07E5                     l2322:
  5727     07E5  3001               	movlw	1
  5728     07E6                     u1485:
  5729     07E6  35D0               	lslf	___tmul@multiplicand^(0+128),f
  5730     07E7  0DD1               	rlf	(___tmul@multiplicand+1)^(0+128),f
  5731     07E8  0DD2               	rlf	(___tmul@multiplicand+2)^(0+128),f
  5732     07E9  0B89               	decfsz	9,f
  5733     07EA  2FE6               	goto	u1485
  5734     07EB  3001               	movlw	1
  5735     07EC                     u1495:
  5736     07EC  36CF               	lsrf	(___tmul@multiplier+2)^(0+128),f
  5737     07ED  0CCE               	rrf	(___tmul@multiplier+1)^(0+128),f
  5738     07EE  0CCD               	rrf	___tmul@multiplier^(0+128),f
  5739     07EF  0B89               	decfsz	9,f
  5740     07F0  2FEC               	goto	u1495
  5741     07F1  084F               	movf	(___tmul@multiplier+2)^(0+128),w
  5742     07F2  044E               	iorwf	(___tmul@multiplier+1)^(0+128),w
  5743     07F3  044D               	iorwf	___tmul@multiplier^(0+128),w
  5744     07F4  1D03               	skipz
  5745     07F5  2FDD               	goto	l2318
  5746     07F6  0853               	movf	___tmul@product^(0+128),w
  5747     07F7  00CD               	movwf	?___tmul^(0+128)
  5748     07F8  0854               	movf	(___tmul@product+1)^(0+128),w
  5749     07F9  00CE               	movwf	(?___tmul+1)^(0+128)
  5750     07FA  0855               	movf	(___tmul@product+2)^(0+128),w
  5751     07FB  00CF               	movwf	(?___tmul+2)^(0+128)
  5752     07FC  0008               	return
  5753     07FD                     __end_of___tmul:
  5754                           
  5755                           	psect	text13
  5756     0EB7                     __ptext13:	
  5757 ;; *************** function ___atdiv *****************
  5758 ;; Defined at:
  5759 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\atdiv.c"
  5760 ;; Parameters:    Size  Location     Type
  5761 ;;  divisor         3    9[BANK1 ] m
  5762 ;;  dividend        3   12[BANK1 ] m
  5763 ;; Auto vars:     Size  Location     Type
  5764 ;;  quotient        3   18[BANK1 ] m
  5765 ;;  sign            1   17[BANK1 ] unsigned char 
  5766 ;;  counter         1   16[BANK1 ] unsigned char 
  5767 ;; Return value:  Size  Location     Type
  5768 ;;                  3    9[BANK1 ] m
  5769 ;; Registers used:
  5770 ;;		wreg, status,2, status,0
  5771 ;; Tracked objects:
  5772 ;;		On entry : 1F/1
  5773 ;;		On exit  : 1F/1
  5774 ;;		Unchanged: 0/0
  5775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5776 ;;      Params:         0       0       6       0       0       0
  5777 ;;      Locals:         0       0       5       0       0       0
  5778 ;;      Temps:          0       0       1       0       0       0
  5779 ;;      Totals:         0       0      12       0       0       0
  5780 ;;Total ram usage:       12 bytes
  5781 ;; Hardware stack levels used: 1
  5782 ;; Hardware stack levels required when called: 5
  5783 ;; This function calls:
  5784 ;;		Nothing
  5785 ;; This function is called by:
  5786 ;;		_fluxcontrol
  5787 ;;		_pwmcontrol
  5788 ;; This function uses a non-reentrant model
  5789 ;;
  5790                           
  5791     0EB7                     ___atdiv:	
  5792                           ;psect for function ___atdiv
  5793                           
  5794                           
  5795                           ;incstack = 0
  5796                           ; Regs used in ___atdiv: [wreg+status,2+status,0]
  5797     0EB7  01DE               	clrf	___atdiv@sign^(0+128)
  5798     0EB8  1FD8               	btfss	(___atdiv@divisor+2)^(0+128),7
  5799     0EB9  2EC4               	goto	l1035
  5800     0EBA  09D6               	comf	___atdiv@divisor^(0+128),f
  5801     0EBB  09D7               	comf	(___atdiv@divisor+1)^(0+128),f
  5802     0EBC  09D8               	comf	(___atdiv@divisor+2)^(0+128),f
  5803     0EBD  0AD6               	incf	___atdiv@divisor^(0+128),f
  5804     0EBE  1903               	skipnz
  5805     0EBF  0AD7               	incf	(___atdiv@divisor+1)^(0+128),f
  5806     0EC0  1903               	skipnz
  5807     0EC1  0AD8               	incf	(___atdiv@divisor+2)^(0+128),f
  5808     0EC2  01DE               	clrf	___atdiv@sign^(0+128)
  5809     0EC3  0ADE               	incf	___atdiv@sign^(0+128),f
  5810     0EC4                     l1035:
  5811     0EC4  1FDB               	btfss	(___atdiv@dividend+2)^(0+128),7
  5812     0EC5  2ED2               	goto	l2340
  5813     0EC6  09D9               	comf	___atdiv@dividend^(0+128),f
  5814     0EC7  09DA               	comf	(___atdiv@dividend+1)^(0+128),f
  5815     0EC8  09DB               	comf	(___atdiv@dividend+2)^(0+128),f
  5816     0EC9  0AD9               	incf	___atdiv@dividend^(0+128),f
  5817     0ECA  1903               	skipnz
  5818     0ECB  0ADA               	incf	(___atdiv@dividend+1)^(0+128),f
  5819     0ECC  1903               	skipnz
  5820     0ECD  0ADB               	incf	(___atdiv@dividend+2)^(0+128),f
  5821     0ECE  3001               	movlw	1
  5822     0ECF  00DC               	movwf	??___atdiv^(0+128)
  5823     0ED0  085C               	movf	??___atdiv^(0+128),w
  5824     0ED1  06DE               	xorwf	___atdiv@sign^(0+128),f
  5825     0ED2                     l2340:
  5826     0ED2  3000               	movlw	0
  5827     0ED3  00DF               	movwf	___atdiv@quotient^(0+128)
  5828     0ED4  3000               	movlw	0
  5829     0ED5  00E0               	movwf	(___atdiv@quotient+1)^(0+128)
  5830     0ED6  3000               	movlw	0
  5831     0ED7  00E1               	movwf	(___atdiv@quotient+2)^(0+128)
  5832     0ED8  0858               	movf	(___atdiv@divisor+2)^(0+128),w
  5833     0ED9  0457               	iorwf	(___atdiv@divisor+1)^(0+128),w
  5834     0EDA  0456               	iorwf	___atdiv@divisor^(0+128),w
  5835     0EDB  1903               	skipnz
  5836     0EDC  2F0F               	goto	l2362
  5837     0EDD  01DD               	clrf	___atdiv@counter^(0+128)
  5838     0EDE  0ADD               	incf	___atdiv@counter^(0+128),f
  5839     0EDF                     l2348:
  5840     0EDF  1BD8               	btfsc	(___atdiv@divisor+2)^(0+128),7
  5841     0EE0  2EEC               	goto	l2350
  5842     0EE1  3001               	movlw	1
  5843     0EE2                     u1545:
  5844     0EE2  35D6               	lslf	___atdiv@divisor^(0+128),f
  5845     0EE3  0DD7               	rlf	(___atdiv@divisor+1)^(0+128),f
  5846     0EE4  0DD8               	rlf	(___atdiv@divisor+2)^(0+128),f
  5847     0EE5  0B89               	decfsz	9,f
  5848     0EE6  2EE2               	goto	u1545
  5849     0EE7  3001               	movlw	1
  5850     0EE8  00DC               	movwf	??___atdiv^(0+128)
  5851     0EE9  085C               	movf	??___atdiv^(0+128),w
  5852     0EEA  07DD               	addwf	___atdiv@counter^(0+128),f
  5853     0EEB  2EDF               	goto	l2348
  5854     0EEC                     l2350:
  5855     0EEC  3001               	movlw	1
  5856     0EED                     u1565:
  5857     0EED  35DF               	lslf	___atdiv@quotient^(0+128),f
  5858     0EEE  0DE0               	rlf	(___atdiv@quotient+1)^(0+128),f
  5859     0EEF  0DE1               	rlf	(___atdiv@quotient+2)^(0+128),f
  5860     0EF0  0B89               	decfsz	9,f
  5861     0EF1  2EED               	goto	u1565
  5862     0EF2  0858               	movf	(___atdiv@divisor+2)^(0+128),w
  5863     0EF3  025B               	subwf	(___atdiv@dividend+2)^(0+128),w
  5864     0EF4  1D03               	skipz
  5865     0EF5  2EFC               	goto	u1575
  5866     0EF6  0857               	movf	(___atdiv@divisor+1)^(0+128),w
  5867     0EF7  025A               	subwf	(___atdiv@dividend+1)^(0+128),w
  5868     0EF8  1D03               	skipz
  5869     0EF9  2EFC               	goto	u1575
  5870     0EFA  0856               	movf	___atdiv@divisor^(0+128),w
  5871     0EFB  0259               	subwf	___atdiv@dividend^(0+128),w
  5872     0EFC                     u1575:
  5873     0EFC  1C03               	skipc
  5874     0EFD  2F05               	goto	l2358
  5875     0EFE  0856               	movf	___atdiv@divisor^(0+128),w
  5876     0EFF  02D9               	subwf	___atdiv@dividend^(0+128),f
  5877     0F00  0857               	movf	(___atdiv@divisor+1)^(0+128),w
  5878     0F01  3BDA               	subwfb	(___atdiv@dividend+1)^(0+128),f
  5879     0F02  0858               	movf	(___atdiv@divisor+2)^(0+128),w
  5880     0F03  3BDB               	subwfb	(___atdiv@dividend+2)^(0+128),f
  5881     0F04  145F               	bsf	___atdiv@quotient^(0+128),0
  5882     0F05                     l2358:
  5883     0F05  3001               	movlw	1
  5884     0F06                     u1585:
  5885     0F06  36D8               	lsrf	(___atdiv@divisor+2)^(0+128),f
  5886     0F07  0CD7               	rrf	(___atdiv@divisor+1)^(0+128),f
  5887     0F08  0CD6               	rrf	___atdiv@divisor^(0+128),f
  5888     0F09  0B89               	decfsz	9,f
  5889     0F0A  2F06               	goto	u1585
  5890     0F0B  3001               	movlw	1
  5891     0F0C  02DD               	subwf	___atdiv@counter^(0+128),f
  5892     0F0D  1D03               	btfss	3,2
  5893     0F0E  2EEC               	goto	l2350
  5894     0F0F                     l2362:
  5895     0F0F  085E               	movf	___atdiv@sign^(0+128),w
  5896     0F10  1903               	btfsc	3,2
  5897     0F11  2F1A               	goto	l2366
  5898     0F12  09DF               	comf	___atdiv@quotient^(0+128),f
  5899     0F13  09E0               	comf	(___atdiv@quotient+1)^(0+128),f
  5900     0F14  09E1               	comf	(___atdiv@quotient+2)^(0+128),f
  5901     0F15  0ADF               	incf	___atdiv@quotient^(0+128),f
  5902     0F16  1903               	skipnz
  5903     0F17  0AE0               	incf	(___atdiv@quotient+1)^(0+128),f
  5904     0F18  1903               	skipnz
  5905     0F19  0AE1               	incf	(___atdiv@quotient+2)^(0+128),f
  5906     0F1A                     l2366:
  5907     0F1A  085F               	movf	___atdiv@quotient^(0+128),w
  5908     0F1B  00D6               	movwf	?___atdiv^(0+128)
  5909     0F1C  0860               	movf	(___atdiv@quotient+1)^(0+128),w
  5910     0F1D  00D7               	movwf	(?___atdiv+1)^(0+128)
  5911     0F1E  0861               	movf	(___atdiv@quotient+2)^(0+128),w
  5912     0F1F  00D8               	movwf	(?___atdiv+2)^(0+128)
  5913     0F20  0008               	return
  5914     0F21                     __end_of___atdiv:
  5915                           
  5916                           	psect	text14
  5917     07FD                     __ptext14:	
  5918 ;; *************** function _TMR4_StartTimer *****************
  5919 ;; Defined at:
  5920 ;;		line 79 in file "mcc_generated_files/tmr4.c"
  5921 ;; Parameters:    Size  Location     Type
  5922 ;;		None
  5923 ;; Auto vars:     Size  Location     Type
  5924 ;;		None
  5925 ;; Return value:  Size  Location     Type
  5926 ;;                  1    wreg      void 
  5927 ;; Registers used:
  5928 ;;		None
  5929 ;; Tracked objects:
  5930 ;;		On entry : 0/1
  5931 ;;		On exit  : 1F/8
  5932 ;;		Unchanged: 0/0
  5933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5934 ;;      Params:         0       0       0       0       0       0
  5935 ;;      Locals:         0       0       0       0       0       0
  5936 ;;      Temps:          0       0       0       0       0       0
  5937 ;;      Totals:         0       0       0       0       0       0
  5938 ;;Total ram usage:        0 bytes
  5939 ;; Hardware stack levels used: 1
  5940 ;; Hardware stack levels required when called: 5
  5941 ;; This function calls:
  5942 ;;		Nothing
  5943 ;; This function is called by:
  5944 ;;		_controlchoose
  5945 ;; This function uses a non-reentrant model
  5946 ;;
  5947                           
  5948     07FD                     _TMR4_StartTimer:	
  5949                           ;psect for function _TMR4_StartTimer
  5950                           
  5951                           
  5952                           ;mcc_generated_files/tmr4.c: 82:     T4CONbits.TMR4ON = 1;
  5953                           
  5954                           ;incstack = 0
  5955                           ; Regs used in _TMR4_StartTimer: []
  5956     07FD  0028               	movlb	8	; select bank8
  5957     07FE  1517               	bsf	23,2	;volatile
  5958     07FF  0008               	return
  5959     0800                     __end_of_TMR4_StartTimer:
  5960                           
  5961                           	psect	text15
  5962     0521                     __ptext15:	
  5963 ;; *************** function _analisa_Rx *****************
  5964 ;; Defined at:
  5965 ;;		line 113 in file "main.c"
  5966 ;; Parameters:    Size  Location     Type
  5967 ;;		None
  5968 ;; Auto vars:     Size  Location     Type
  5969 ;;		None
  5970 ;; Return value:  Size  Location     Type
  5971 ;;                  1    wreg      void 
  5972 ;; Registers used:
  5973 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5974 ;; Tracked objects:
  5975 ;;		On entry : 1F/1
  5976 ;;		On exit  : 1F/1
  5977 ;;		Unchanged: 0/0
  5978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5979 ;;      Params:         0       0       0       0       0       0
  5980 ;;      Locals:         0       0       0       0       0       0
  5981 ;;      Temps:          0       0       2       0       0       0
  5982 ;;      Totals:         0       0       2       0       0       0
  5983 ;;Total ram usage:        2 bytes
  5984 ;; Hardware stack levels used: 1
  5985 ;; Hardware stack levels required when called: 6
  5986 ;; This function calls:
  5987 ;;		_EPWM1_LoadDutyValue
  5988 ;; This function is called by:
  5989 ;;		_main
  5990 ;; This function uses a non-reentrant model
  5991 ;;
  5992                           
  5993     0521                     _analisa_Rx:	
  5994                           ;psect for function _analisa_Rx
  5995                           
  5996                           
  5997                           ;main.c: 114:     switch(bufferRx[0]){
  5998                           
  5999                           ;incstack = 0
  6000                           ; Regs used in _analisa_Rx: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6001     0521  2DDC               	goto	l3010
  6002     0522                     l2942:
  6003                           
  6004                           ;main.c: 116:             if(countRx==7){
  6005     0522  3007               	movlw	7
  6006     0523  0021               	movlb	1	; select bank1
  6007     0524  0647               	xorwf	_countRx^(0+128),w
  6008     0525  1D03               	btfss	3,2
  6009     0526  2D54               	goto	l2958
  6010                           
  6011                           ;main.c: 117:                 controlchoice = bufferRx[0];
  6012     0527  0020               	movlb	0	; select bank0
  6013     0528  0853               	movf	_bufferRx,w
  6014     0529  0021               	movlb	1	; select bank1
  6015     052A  00CB               	movwf	_controlchoice^(0+128)
  6016                           
  6017                           ;main.c: 118:                 vRx.vH = bufferRx[3];
  6018     052B  0020               	movlb	0	; select bank0
  6019     052C  0856               	movf	_bufferRx+3,w
  6020     052D  0021               	movlb	1	; select bank1
  6021     052E  00B6               	movwf	(_vRx^(0+128)+1)
  6022                           
  6023                           ;main.c: 119:                 vRx.vL = bufferRx[4];
  6024     052F  0020               	movlb	0	; select bank0
  6025     0530  0857               	movf	_bufferRx+4,w
  6026     0531  0021               	movlb	1	; select bank1
  6027     0532  00B5               	movwf	_vRx^(0+128)
  6028                           
  6029                           ;main.c: 120:                 sp_position = vRx.v;
  6030     0533  0836               	movf	(_vRx+1)^(0+128),w
  6031     0534  00BC               	movwf	(_sp_position+1)^(0+128)
  6032     0535  0835               	movf	_vRx^(0+128),w
  6033     0536  00BB               	movwf	_sp_position^(0+128)
  6034                           
  6035                           ;main.c: 121:                 if(sp_position > 380 ) sp_position = 380;
  6036     0537  3001               	movlw	1
  6037     0538  023C               	subwf	(_sp_position+1)^(0+128),w
  6038     0539  307D               	movlw	125
  6039     053A  1903               	skipnz
  6040     053B  023B               	subwf	_sp_position^(0+128),w
  6041     053C  1C03               	skipc
  6042     053D  2D42               	goto	l2950
  6043     053E  307C               	movlw	124
  6044     053F  00BB               	movwf	_sp_position^(0+128)
  6045     0540  3001               	movlw	1
  6046     0541  00BC               	movwf	(_sp_position^(0+128)+1)
  6047     0542                     l2950:
  6048                           
  6049                           ;main.c: 123:                 vRx.vH = bufferRx[5];
  6050     0542  0020               	movlb	0	; select bank0
  6051     0543  0858               	movf	_bufferRx+5,w
  6052     0544  0021               	movlb	1	; select bank1
  6053     0545  00B6               	movwf	(_vRx^(0+128)+1)
  6054                           
  6055                           ;main.c: 124:                 vRx.vL = bufferRx[6];
  6056     0546  0020               	movlb	0	; select bank0
  6057     0547  0859               	movf	_bufferRx+6,w
  6058     0548  0021               	movlb	1	; select bank1
  6059     0549  00B5               	movwf	_vRx^(0+128)
  6060                           
  6061                           ;main.c: 125:                 dc = vRx.v;
  6062     054A  0836               	movf	(_vRx+1)^(0+128),w
  6063     054B  00B4               	movwf	(_dc+1)^(0+128)
  6064     054C  0835               	movf	_vRx^(0+128),w
  6065     054D  00B3               	movwf	_dc^(0+128)
  6066                           
  6067                           ;main.c: 126:                 EPWM1_LoadDutyValue(dc);
  6068     054E  0834               	movf	(_dc+1)^(0+128),w
  6069     054F  00CE               	movwf	(EPWM1_LoadDutyValue@dutyValue+1)^(0+128)
  6070     0550  0833               	movf	_dc^(0+128),w
  6071     0551  00CD               	movwf	EPWM1_LoadDutyValue@dutyValue^(0+128)
  6072     0552  318C  24BF         	fcall	_EPWM1_LoadDutyValue
  6073     0554                     l2958:
  6074                           
  6075                           ;main.c: 128:             countRx = 0;
  6076     0554  0021               	movlb	1	; select bank1
  6077     0555  01C7               	clrf	_countRx^(0+128)
  6078                           
  6079                           ;main.c: 129:             break;
  6080     0556  0008               	return
  6081     0557                     l2960:
  6082                           
  6083                           ;main.c: 131:             if(countRx==7){
  6084     0557  3007               	movlw	7
  6085     0558  0021               	movlb	1	; select bank1
  6086     0559  0647               	xorwf	_countRx^(0+128),w
  6087     055A  1D03               	btfss	3,2
  6088     055B  2D54               	goto	l2958
  6089                           
  6090                           ;main.c: 132:                 controlchoice = bufferRx[0];
  6091     055C  0020               	movlb	0	; select bank0
  6092     055D  0853               	movf	_bufferRx,w
  6093     055E  0021               	movlb	1	; select bank1
  6094     055F  00CB               	movwf	_controlchoice^(0+128)
  6095                           
  6096                           ;main.c: 133:                 vRx.vH = bufferRx[1];
  6097     0560  0020               	movlb	0	; select bank0
  6098     0561  0854               	movf	_bufferRx+1,w
  6099     0562  0021               	movlb	1	; select bank1
  6100     0563  00B6               	movwf	(_vRx^(0+128)+1)
  6101                           
  6102                           ;main.c: 134:                 vRx.vL = bufferRx[2];
  6103     0564  0020               	movlb	0	; select bank0
  6104     0565  0855               	movf	_bufferRx+2,w
  6105     0566  0021               	movlb	1	; select bank1
  6106     0567  00B5               	movwf	_vRx^(0+128)
  6107                           
  6108                           ;main.c: 135:                 sp_height = vRx.v;
  6109     0568  0836               	movf	(_vRx+1)^(0+128),w
  6110     0569  0020               	movlb	0	; select bank0
  6111     056A  00E2               	movwf	_sp_height+1
  6112     056B  0021               	movlb	1	; select bank1
  6113     056C  0835               	movf	_vRx^(0+128),w
  6114     056D  0020               	movlb	0	; select bank0
  6115     056E  00E1               	movwf	_sp_height
  6116                           
  6117                           ;main.c: 136:                 ballset = vRx.v / 2;
  6118     056F  0021               	movlb	1	; select bank1
  6119     0570  0836               	movf	(_vRx+1)^(0+128),w
  6120     0571  00D2               	movwf	(??_analisa_Rx^(0+128)+1)
  6121     0572  0835               	movf	_vRx^(0+128),w
  6122     0573  00D1               	movwf	??_analisa_Rx^(0+128)
  6123     0574  36D2               	lsrf	(??_analisa_Rx^(0+128)+1),f
  6124     0575  0CD1               	rrf	??_analisa_Rx^(0+128),f
  6125     0576  0851               	movf	??_analisa_Rx^(0+128),w
  6126     0577  00AA               	movwf	_ballset^(0+128)
  6127     0578  0852               	movf	(??_analisa_Rx+1)^(0+128),w
  6128     0579  00AB               	movwf	(_ballset+1)^(0+128)
  6129     057A  01AC               	clrf	(_ballset+2)^(0+128)
  6130                           
  6131                           ;main.c: 137:                 vRx.vH = bufferRx[3];
  6132     057B  0020               	movlb	0	; select bank0
  6133     057C  0856               	movf	_bufferRx+3,w
  6134     057D  0021               	movlb	1	; select bank1
  6135     057E  00B6               	movwf	(_vRx^(0+128)+1)
  6136                           
  6137                           ;main.c: 138:                 vRx.vL = bufferRx[4];
  6138     057F  0020               	movlb	0	; select bank0
  6139     0580  0857               	movf	_bufferRx+4,w
  6140     0581  0021               	movlb	1	; select bank1
  6141     0582  00B5               	movwf	_vRx^(0+128)
  6142                           
  6143                           ;main.c: 139:                 sp_position = vRx.v;
  6144     0583  0836               	movf	(_vRx+1)^(0+128),w
  6145     0584  00BC               	movwf	(_sp_position+1)^(0+128)
  6146     0585  0835               	movf	_vRx^(0+128),w
  6147     0586  00BB               	movwf	_sp_position^(0+128)
  6148     0587                     l2972:
  6149                           
  6150                           ;main.c: 140:                 outputsum = 0;
  6151     0587  3000               	movlw	0
  6152     0588  0021               	movlb	1	; select bank1
  6153     0589  00A7               	movwf	_outputsum^(0+128)
  6154     058A  3000               	movlw	0
  6155     058B  00A8               	movwf	(_outputsum+1)^(0+128)
  6156     058C  3000               	movlw	0
  6157     058D  00A9               	movwf	(_outputsum+2)^(0+128)
  6158                           
  6159                           ;main.c: 141:                 errorp=0;
  6160     058E  3000               	movlw	0
  6161     058F  0020               	movlb	0	; select bank0
  6162     0590  00DE               	movwf	_errorp
  6163     0591  3000               	movlw	0
  6164     0592  00DF               	movwf	_errorp+1
  6165     0593  3000               	movlw	0
  6166     0594  00E0               	movwf	_errorp+2
  6167                           
  6168                           ;main.c: 142:                 error =0;
  6169     0595  3000               	movlw	0
  6170     0596  0021               	movlb	1	; select bank1
  6171     0597  00B0               	movwf	_error^(0+128)
  6172     0598  3000               	movlw	0
  6173     0599  00B1               	movwf	(_error+1)^(0+128)
  6174     059A  3000               	movlw	0
  6175     059B  00B2               	movwf	(_error+2)^(0+128)
  6176     059C  2D54               	goto	l2958
  6177     059D                     l2980:
  6178                           
  6179                           ;main.c: 147:             if(countRx==7){
  6180     059D  3007               	movlw	7
  6181     059E  0021               	movlb	1	; select bank1
  6182     059F  0647               	xorwf	_countRx^(0+128),w
  6183     05A0  1D03               	btfss	3,2
  6184     05A1  2D54               	goto	l2958
  6185                           
  6186                           ;main.c: 148:                 controlchoice = bufferRx[0];
  6187     05A2  0020               	movlb	0	; select bank0
  6188     05A3  0853               	movf	_bufferRx,w
  6189     05A4  0021               	movlb	1	; select bank1
  6190     05A5  00CB               	movwf	_controlchoice^(0+128)
  6191                           
  6192                           ;main.c: 149:                 vRx.vH = bufferRx[1];
  6193     05A6  0020               	movlb	0	; select bank0
  6194     05A7  0854               	movf	_bufferRx+1,w
  6195     05A8  0021               	movlb	1	; select bank1
  6196     05A9  00B6               	movwf	(_vRx^(0+128)+1)
  6197                           
  6198                           ;main.c: 150:                 vRx.vL = bufferRx[2];
  6199     05AA  0020               	movlb	0	; select bank0
  6200     05AB  0855               	movf	_bufferRx+2,w
  6201     05AC  0021               	movlb	1	; select bank1
  6202     05AD  00B5               	movwf	_vRx^(0+128)
  6203                           
  6204                           ;main.c: 151:                 sp_height = vRx.v;
  6205     05AE  0836               	movf	(_vRx+1)^(0+128),w
  6206     05AF  0020               	movlb	0	; select bank0
  6207     05B0  00E2               	movwf	_sp_height+1
  6208     05B1  0021               	movlb	1	; select bank1
  6209     05B2  0835               	movf	_vRx^(0+128),w
  6210     05B3  0020               	movlb	0	; select bank0
  6211     05B4  00E1               	movwf	_sp_height
  6212                           
  6213                           ;main.c: 152:                 ballset = vRx.v / 2;
  6214     05B5  0021               	movlb	1	; select bank1
  6215     05B6  0836               	movf	(_vRx+1)^(0+128),w
  6216     05B7  00D2               	movwf	(??_analisa_Rx^(0+128)+1)
  6217     05B8  0835               	movf	_vRx^(0+128),w
  6218     05B9  00D1               	movwf	??_analisa_Rx^(0+128)
  6219     05BA  36D2               	lsrf	(??_analisa_Rx^(0+128)+1),f
  6220     05BB  0CD1               	rrf	??_analisa_Rx^(0+128),f
  6221     05BC  0851               	movf	??_analisa_Rx^(0+128),w
  6222     05BD  00AA               	movwf	_ballset^(0+128)
  6223     05BE  0852               	movf	(??_analisa_Rx+1)^(0+128),w
  6224     05BF  00AB               	movwf	(_ballset+1)^(0+128)
  6225     05C0  01AC               	clrf	(_ballset+2)^(0+128)
  6226                           
  6227                           ;main.c: 153:                 vRx.vH = bufferRx[5];
  6228     05C1  0020               	movlb	0	; select bank0
  6229     05C2  0858               	movf	_bufferRx+5,w
  6230     05C3  0021               	movlb	1	; select bank1
  6231     05C4  00B6               	movwf	(_vRx^(0+128)+1)
  6232                           
  6233                           ;main.c: 154:                 vRx.vL = bufferRx[6];
  6234     05C5  0020               	movlb	0	; select bank0
  6235     05C6  0859               	movf	_bufferRx+6,w
  6236     05C7  0021               	movlb	1	; select bank1
  6237     05C8  00B5               	movwf	_vRx^(0+128)
  6238                           
  6239                           ;main.c: 155:                 dc = vRx.v;
  6240     05C9  0836               	movf	(_vRx+1)^(0+128),w
  6241     05CA  00B4               	movwf	(_dc+1)^(0+128)
  6242     05CB  0835               	movf	_vRx^(0+128),w
  6243     05CC  00B3               	movwf	_dc^(0+128)
  6244                           
  6245                           ;main.c: 156:                 EPWM1_LoadDutyValue(dc);
  6246     05CD  0834               	movf	(_dc+1)^(0+128),w
  6247     05CE  00CE               	movwf	(EPWM1_LoadDutyValue@dutyValue+1)^(0+128)
  6248     05CF  0833               	movf	_dc^(0+128),w
  6249     05D0  00CD               	movwf	EPWM1_LoadDutyValue@dutyValue^(0+128)
  6250     05D1  318C  24BF  3185   	fcall	_EPWM1_LoadDutyValue
  6251     05D4  2D87               	goto	l2972
  6252     05D5                     l3002:
  6253                           
  6254                           ;main.c: 164:             if(countRx==7){
  6255     05D5  3007               	movlw	7
  6256     05D6  0021               	movlb	1	; select bank1
  6257     05D7  0647               	xorwf	_countRx^(0+128),w
  6258     05D8  1D03               	btfss	3,2
  6259     05D9  2D54               	goto	l2958
  6260     05DA  0001               	reset	;# 
  6261     05DB  2D54               	goto	l2958
  6262     05DC                     l3010:
  6263     05DC  0020               	movlb	0	; select bank0
  6264     05DD  0853               	movf	_bufferRx,w
  6265                           
  6266                           ; Switch size 1, requested type "simple"
  6267                           ; Number of cases is 4, Range of values is 0 to 3
  6268                           ; switch strategies available:
  6269                           ; Name         Instructions Cycles
  6270                           ; simple_byte           13     7 (average)
  6271                           ; direct_byte           14     6 (fixed)
  6272                           ; jumptable            260     6 (fixed)
  6273                           ;	Chosen strategy is simple_byte
  6274     05DE  3A00               	xorlw	0	; case 0
  6275     05DF  1903               	skipnz
  6276     05E0  2D22               	goto	l2942
  6277     05E1  3A01               	xorlw	1	; case 1
  6278     05E2  1903               	skipnz
  6279     05E3  2D57               	goto	l2960
  6280     05E4  3A03               	xorlw	3	; case 2
  6281     05E5  1903               	skipnz
  6282     05E6  2D9D               	goto	l2980
  6283     05E7  3A01               	xorlw	1	; case 3
  6284     05E8  1903               	skipnz
  6285     05E9  2DD5               	goto	l3002
  6286     05EA  2D54               	goto	l2958
  6287     05EB  0008               	return
  6288     05EC                     __end_of_analisa_Rx:
  6289                           
  6290                           	psect	text16
  6291     0CBF                     __ptext16:	
  6292 ;; *************** function _EPWM1_LoadDutyValue *****************
  6293 ;; Defined at:
  6294 ;;		line 90 in file "mcc_generated_files/epwm1.c"
  6295 ;; Parameters:    Size  Location     Type
  6296 ;;  dutyValue       2    0[BANK1 ] unsigned short 
  6297 ;; Auto vars:     Size  Location     Type
  6298 ;;		None
  6299 ;; Return value:  Size  Location     Type
  6300 ;;                  1    wreg      void 
  6301 ;; Registers used:
  6302 ;;		wreg, status,2, status,0
  6303 ;; Tracked objects:
  6304 ;;		On entry : 1F/1
  6305 ;;		On exit  : 1F/5
  6306 ;;		Unchanged: 0/0
  6307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6308 ;;      Params:         0       0       2       0       0       0
  6309 ;;      Locals:         0       0       0       0       0       0
  6310 ;;      Temps:          0       0       2       0       0       0
  6311 ;;      Totals:         0       0       4       0       0       0
  6312 ;;Total ram usage:        4 bytes
  6313 ;; Hardware stack levels used: 1
  6314 ;; Hardware stack levels required when called: 5
  6315 ;; This function calls:
  6316 ;;		Nothing
  6317 ;; This function is called by:
  6318 ;;		_pwmcontrol
  6319 ;;		_analisa_Rx
  6320 ;; This function uses a non-reentrant model
  6321 ;;
  6322                           
  6323     0CBF                     _EPWM1_LoadDutyValue:	
  6324                           ;psect for function _EPWM1_LoadDutyValue
  6325                           
  6326                           
  6327                           ;mcc_generated_files/epwm1.c: 90: void EPWM1_LoadDutyValue(uint16_t dutyValue);mcc_gener
      +                          ated_files/epwm1.c: 91: {;mcc_generated_files/epwm1.c: 93:     CCPR1L = ((dutyValue & 0x
      +                          03FC)>>2);
  6328                           
  6329                           ;incstack = 0
  6330                           ; Regs used in _EPWM1_LoadDutyValue: [wreg+status,2+status,0]
  6331     0CBF  084E               	movf	(EPWM1_LoadDutyValue@dutyValue+1)^(0+128),w
  6332     0CC0  00D0               	movwf	(??_EPWM1_LoadDutyValue^(0+128)+1)
  6333     0CC1  084D               	movf	EPWM1_LoadDutyValue@dutyValue^(0+128),w
  6334     0CC2  00CF               	movwf	??_EPWM1_LoadDutyValue^(0+128)
  6335     0CC3  36D0               	lsrf	(??_EPWM1_LoadDutyValue^(0+128)+1),f
  6336     0CC4  0CCF               	rrf	??_EPWM1_LoadDutyValue^(0+128),f
  6337     0CC5  36D0               	lsrf	(??_EPWM1_LoadDutyValue^(0+128)+1),f
  6338     0CC6  0CCF               	rrf	??_EPWM1_LoadDutyValue^(0+128),f
  6339     0CC7  084F               	movf	??_EPWM1_LoadDutyValue^(0+128),w
  6340     0CC8  0025               	movlb	5	; select bank5
  6341     0CC9  0091               	movwf	17	;volatile
  6342                           
  6343                           ;mcc_generated_files/epwm1.c: 96:     CCP1CON = ((uint8_t)(CCP1CON & 0xCF) | ((dutyValue
      +                           & 0x0003)<<4));
  6344     0CCA  0021               	movlb	1	; select bank1
  6345     0CCB  084D               	movf	EPWM1_LoadDutyValue@dutyValue^(0+128),w
  6346     0CCC  3903               	andlw	3
  6347     0CCD  00CF               	movwf	??_EPWM1_LoadDutyValue^(0+128)
  6348     0CCE  3004               	movlw	4
  6349     0CCF                     u1445:
  6350     0CCF  35CF               	lslf	??_EPWM1_LoadDutyValue^(0+128),f
  6351     0CD0  0B89               	decfsz	9,f
  6352     0CD1  2CCF               	goto	u1445
  6353     0CD2  0025               	movlb	5	; select bank5
  6354     0CD3  0813               	movf	19,w	;volatile
  6355     0CD4  39CF               	andlw	207
  6356     0CD5  0021               	movlb	1	; select bank1
  6357     0CD6  044F               	iorwf	??_EPWM1_LoadDutyValue^(0+128),w
  6358     0CD7  0025               	movlb	5	; select bank5
  6359     0CD8  0093               	movwf	19	;volatile
  6360     0CD9  0008               	return
  6361     0CDA                     __end_of_EPWM1_LoadDutyValue:
  6362                           
  6363                           	psect	text17
  6364     0B6F                     __ptext17:	
  6365 ;; *************** function _TMR6_WriteTimer *****************
  6366 ;; Defined at:
  6367 ;;		line 100 in file "mcc_generated_files/tmr6.c"
  6368 ;; Parameters:    Size  Location     Type
  6369 ;;  timerVal        1    wreg     unsigned char 
  6370 ;; Auto vars:     Size  Location     Type
  6371 ;;  timerVal        1    0[BANK1 ] unsigned char 
  6372 ;; Return value:  Size  Location     Type
  6373 ;;                  1    wreg      void 
  6374 ;; Registers used:
  6375 ;;		wreg
  6376 ;; Tracked objects:
  6377 ;;		On entry : 16/1
  6378 ;;		On exit  : 1F/8
  6379 ;;		Unchanged: 0/0
  6380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6381 ;;      Params:         0       0       0       0       0       0
  6382 ;;      Locals:         0       0       1       0       0       0
  6383 ;;      Temps:          0       0       0       0       0       0
  6384 ;;      Totals:         0       0       1       0       0       0
  6385 ;;Total ram usage:        1 bytes
  6386 ;; Hardware stack levels used: 1
  6387 ;; Hardware stack levels required when called: 5
  6388 ;; This function calls:
  6389 ;;		Nothing
  6390 ;; This function is called by:
  6391 ;;		_main
  6392 ;; This function uses a non-reentrant model
  6393 ;;
  6394                           
  6395     0B6F                     _TMR6_WriteTimer:	
  6396                           ;psect for function _TMR6_WriteTimer
  6397                           
  6398                           
  6399                           ;incstack = 0
  6400                           ; Regs used in _TMR6_WriteTimer: [wreg]
  6401                           ;TMR6_WriteTimer@timerVal stored from wreg
  6402     0B6F  0021               	movlb	1	; select bank1
  6403     0B70  00CD               	movwf	TMR6_WriteTimer@timerVal^(0+128)
  6404                           
  6405                           ;mcc_generated_files/tmr6.c: 100: void TMR6_WriteTimer(uint8_t timerVal);mcc_generated_f
      +                          iles/tmr6.c: 101: {;mcc_generated_files/tmr6.c: 103:     TMR6 = timerVal;
  6406     0B71  084D               	movf	TMR6_WriteTimer@timerVal^(0+128),w
  6407     0B72  0028               	movlb	8	; select bank8
  6408     0B73  009C               	movwf	28	;volatile
  6409     0B74  0008               	return
  6410     0B75                     __end_of_TMR6_WriteTimer:
  6411                           
  6412                           	psect	text18
  6413     0B69                     __ptext18:	
  6414 ;; *************** function _TMR6_LoadPeriodRegister *****************
  6415 ;; Defined at:
  6416 ;;		line 106 in file "mcc_generated_files/tmr6.c"
  6417 ;; Parameters:    Size  Location     Type
  6418 ;;  periodVal       1    wreg     unsigned char 
  6419 ;; Auto vars:     Size  Location     Type
  6420 ;;  periodVal       1    0[BANK1 ] unsigned char 
  6421 ;; Return value:  Size  Location     Type
  6422 ;;                  1    wreg      void 
  6423 ;; Registers used:
  6424 ;;		wreg
  6425 ;; Tracked objects:
  6426 ;;		On entry : 1E/0
  6427 ;;		On exit  : 1F/8
  6428 ;;		Unchanged: 0/0
  6429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6430 ;;      Params:         0       0       0       0       0       0
  6431 ;;      Locals:         0       0       1       0       0       0
  6432 ;;      Temps:          0       0       0       0       0       0
  6433 ;;      Totals:         0       0       1       0       0       0
  6434 ;;Total ram usage:        1 bytes
  6435 ;; Hardware stack levels used: 1
  6436 ;; Hardware stack levels required when called: 5
  6437 ;; This function calls:
  6438 ;;		Nothing
  6439 ;; This function is called by:
  6440 ;;		_main
  6441 ;; This function uses a non-reentrant model
  6442 ;;
  6443                           
  6444     0B69                     _TMR6_LoadPeriodRegister:	
  6445                           ;psect for function _TMR6_LoadPeriodRegister
  6446                           
  6447                           
  6448                           ;incstack = 0
  6449                           ; Regs used in _TMR6_LoadPeriodRegister: [wreg]
  6450                           ;TMR6_LoadPeriodRegister@periodVal stored from wreg
  6451     0B69  0021               	movlb	1	; select bank1
  6452     0B6A  00CD               	movwf	TMR6_LoadPeriodRegister@periodVal^(0+128)
  6453                           
  6454                           ;mcc_generated_files/tmr6.c: 106: void TMR6_LoadPeriodRegister(uint8_t periodVal);mcc_ge
      +                          nerated_files/tmr6.c: 107: {;mcc_generated_files/tmr6.c: 108:    PR6 = periodVal;
  6455     0B6B  084D               	movf	TMR6_LoadPeriodRegister@periodVal^(0+128),w
  6456     0B6C  0028               	movlb	8	; select bank8
  6457     0B6D  009D               	movwf	29	;volatile
  6458     0B6E  0008               	return
  6459     0B6F                     __end_of_TMR6_LoadPeriodRegister:
  6460                           
  6461                           	psect	text19
  6462     0B47                     __ptext19:	
  6463 ;; *************** function _TMR4_StopTimer *****************
  6464 ;; Defined at:
  6465 ;;		line 85 in file "mcc_generated_files/tmr4.c"
  6466 ;; Parameters:    Size  Location     Type
  6467 ;;		None
  6468 ;; Auto vars:     Size  Location     Type
  6469 ;;		None
  6470 ;; Return value:  Size  Location     Type
  6471 ;;                  1    wreg      void 
  6472 ;; Registers used:
  6473 ;;		None
  6474 ;; Tracked objects:
  6475 ;;		On entry : 1F/0
  6476 ;;		On exit  : 1F/8
  6477 ;;		Unchanged: 0/0
  6478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6479 ;;      Params:         0       0       0       0       0       0
  6480 ;;      Locals:         0       0       0       0       0       0
  6481 ;;      Temps:          0       0       0       0       0       0
  6482 ;;      Totals:         0       0       0       0       0       0
  6483 ;;Total ram usage:        0 bytes
  6484 ;; Hardware stack levels used: 1
  6485 ;; Hardware stack levels required when called: 5
  6486 ;; This function calls:
  6487 ;;		Nothing
  6488 ;; This function is called by:
  6489 ;;		_main
  6490 ;; This function uses a non-reentrant model
  6491 ;;
  6492                           
  6493     0B47                     _TMR4_StopTimer:	
  6494                           ;psect for function _TMR4_StopTimer
  6495                           
  6496                           
  6497                           ;mcc_generated_files/tmr4.c: 88:     T4CONbits.TMR4ON = 0;
  6498                           
  6499                           ;incstack = 0
  6500                           ; Regs used in _TMR4_StopTimer: []
  6501     0B47  0028               	movlb	8	; select bank8
  6502     0B48  1117               	bcf	23,2	;volatile
  6503     0B49  0008               	return
  6504     0B4A                     __end_of_TMR4_StopTimer:
  6505                           
  6506                           	psect	text20
  6507     0B63                     __ptext20:	
  6508 ;; *************** function _TMR0_ReadTimer *****************
  6509 ;; Defined at:
  6510 ;;		line 80 in file "mcc_generated_files/tmr0.c"
  6511 ;; Parameters:    Size  Location     Type
  6512 ;;		None
  6513 ;; Auto vars:     Size  Location     Type
  6514 ;;  readVal         1    0[BANK1 ] unsigned char 
  6515 ;; Return value:  Size  Location     Type
  6516 ;;                  1    wreg      unsigned char 
  6517 ;; Registers used:
  6518 ;;		wreg
  6519 ;; Tracked objects:
  6520 ;;		On entry : 1D/0
  6521 ;;		On exit  : 1F/1
  6522 ;;		Unchanged: 0/0
  6523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6524 ;;      Params:         0       0       0       0       0       0
  6525 ;;      Locals:         0       0       1       0       0       0
  6526 ;;      Temps:          0       0       0       0       0       0
  6527 ;;      Totals:         0       0       1       0       0       0
  6528 ;;Total ram usage:        1 bytes
  6529 ;; Hardware stack levels used: 1
  6530 ;; Hardware stack levels required when called: 5
  6531 ;; This function calls:
  6532 ;;		Nothing
  6533 ;; This function is called by:
  6534 ;;		_main
  6535 ;; This function uses a non-reentrant model
  6536 ;;
  6537                           
  6538     0B63                     _TMR0_ReadTimer:	
  6539                           ;psect for function _TMR0_ReadTimer
  6540                           
  6541                           
  6542                           ;mcc_generated_files/tmr0.c: 82:     uint8_t readVal;;mcc_generated_files/tmr0.c: 84:   
      +                            readVal = TMR0;
  6543                           
  6544                           ;incstack = 0
  6545                           ; Regs used in _TMR0_ReadTimer: [wreg]
  6546     0B63  0020               	movlb	0	; select bank0
  6547     0B64  0815               	movf	21,w	;volatile
  6548     0B65  0021               	movlb	1	; select bank1
  6549     0B66  00CD               	movwf	TMR0_ReadTimer@readVal^(0+128)
  6550                           
  6551                           ;mcc_generated_files/tmr0.c: 86:     return readVal;
  6552     0B67  084D               	movf	TMR0_ReadTimer@readVal^(0+128),w
  6553     0B68  0008               	return
  6554     0B69                     __end_of_TMR0_ReadTimer:
  6555                           
  6556                           	psect	text21
  6557     0D3D                     __ptext21:	
  6558 ;; *************** function _SYSTEM_Initialize *****************
  6559 ;; Defined at:
  6560 ;;		line 50 in file "mcc_generated_files/mcc.c"
  6561 ;; Parameters:    Size  Location     Type
  6562 ;;		None
  6563 ;; Auto vars:     Size  Location     Type
  6564 ;;		None
  6565 ;; Return value:  Size  Location     Type
  6566 ;;                  1    wreg      void 
  6567 ;; Registers used:
  6568 ;;		wreg, status,2, status,0, pclath, cstack
  6569 ;; Tracked objects:
  6570 ;;		On entry : B1F/0
  6571 ;;		On exit  : 1F/1
  6572 ;;		Unchanged: 0/0
  6573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6574 ;;      Params:         0       0       0       0       0       0
  6575 ;;      Locals:         0       0       0       0       0       0
  6576 ;;      Temps:          0       0       0       0       0       0
  6577 ;;      Totals:         0       0       0       0       0       0
  6578 ;;Total ram usage:        0 bytes
  6579 ;; Hardware stack levels used: 1
  6580 ;; Hardware stack levels required when called: 7
  6581 ;; This function calls:
  6582 ;;		_ADC_Initialize
  6583 ;;		_CMP1_Initialize
  6584 ;;		_DAC_Initialize
  6585 ;;		_EPWM1_Initialize
  6586 ;;		_EUSART_Initialize
  6587 ;;		_FVR_Initialize
  6588 ;;		_OSCILLATOR_Initialize
  6589 ;;		_PIN_MANAGER_Initialize
  6590 ;;		_TMR0_Initialize
  6591 ;;		_TMR1_Initialize
  6592 ;;		_TMR2_Initialize
  6593 ;;		_TMR4_Initialize
  6594 ;;		_TMR6_Initialize
  6595 ;;		_WDT_Initialize
  6596 ;; This function is called by:
  6597 ;;		_main
  6598 ;; This function uses a non-reentrant model
  6599 ;;
  6600                           
  6601     0D3D                     _SYSTEM_Initialize:	
  6602                           ;psect for function _SYSTEM_Initialize
  6603                           
  6604                           
  6605                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  6606                           
  6607                           ;incstack = 0
  6608                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6609     0D3D  318C  2443  318D   	fcall	_PIN_MANAGER_Initialize
  6610                           
  6611                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  6612     0D40  318B  2381  318D   	fcall	_OSCILLATOR_Initialize
  6613                           
  6614                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  6615     0D43  318B  234A  318D   	fcall	_WDT_Initialize
  6616                           
  6617                           ;mcc_generated_files/mcc.c: 56:     DAC_Initialize();
  6618     0D46  318B  235D  318D   	fcall	_DAC_Initialize
  6619                           
  6620                           ;mcc_generated_files/mcc.c: 57:     FVR_Initialize();
  6621     0D49  318B  2344  318D   	fcall	_FVR_Initialize
  6622                           
  6623                           ;mcc_generated_files/mcc.c: 58:     TMR4_Initialize();
  6624     0D4C  318B  23D3  318D   	fcall	_TMR4_Initialize
  6625                           
  6626                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
  6627     0D4F  318B  23B8  318D   	fcall	_TMR2_Initialize
  6628                           
  6629                           ;mcc_generated_files/mcc.c: 60:     TMR0_Initialize();
  6630     0D52  318B  23C9  318D   	fcall	_TMR0_Initialize
  6631                           
  6632                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
  6633     0D55  318B  23DD  318D   	fcall	_TMR6_Initialize
  6634                           
  6635                           ;mcc_generated_files/mcc.c: 62:     CMP1_Initialize();
  6636     0D58  318B  2357  318D   	fcall	_CMP1_Initialize
  6637                           
  6638                           ;mcc_generated_files/mcc.c: 63:     ADC_Initialize();
  6639     0D5B  318B  2390  318D   	fcall	_ADC_Initialize
  6640                           
  6641                           ;mcc_generated_files/mcc.c: 64:     EPWM1_Initialize();
  6642     0D5E  318B  23FE  318D   	fcall	_EPWM1_Initialize
  6643                           
  6644                           ;mcc_generated_files/mcc.c: 65:     TMR1_Initialize();
  6645     0D61  318C  248B  318D   	fcall	_TMR1_Initialize
  6646                           
  6647                           ;mcc_generated_files/mcc.c: 66:     EUSART_Initialize();
  6648     0D64  318D  2519         	fcall	_EUSART_Initialize
  6649     0D66  0008               	return
  6650     0D67                     __end_of_SYSTEM_Initialize:
  6651                           
  6652                           	psect	text22
  6653     0B4A                     __ptext22:	
  6654 ;; *************** function _WDT_Initialize *****************
  6655 ;; Defined at:
  6656 ;;		line 79 in file "mcc_generated_files/mcc.c"
  6657 ;; Parameters:    Size  Location     Type
  6658 ;;		None
  6659 ;; Auto vars:     Size  Location     Type
  6660 ;;		None
  6661 ;; Return value:  Size  Location     Type
  6662 ;;                  1    wreg      void 
  6663 ;; Registers used:
  6664 ;;		wreg
  6665 ;; Tracked objects:
  6666 ;;		On entry : B1F/2
  6667 ;;		On exit  : B1F/1
  6668 ;;		Unchanged: B00/0
  6669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6670 ;;      Params:         0       0       0       0       0       0
  6671 ;;      Locals:         0       0       0       0       0       0
  6672 ;;      Temps:          0       0       0       0       0       0
  6673 ;;      Totals:         0       0       0       0       0       0
  6674 ;;Total ram usage:        0 bytes
  6675 ;; Hardware stack levels used: 1
  6676 ;; Hardware stack levels required when called: 5
  6677 ;; This function calls:
  6678 ;;		Nothing
  6679 ;; This function is called by:
  6680 ;;		_SYSTEM_Initialize
  6681 ;; This function uses a non-reentrant model
  6682 ;;
  6683                           
  6684     0B4A                     _WDT_Initialize:	
  6685                           ;psect for function _WDT_Initialize
  6686                           
  6687                           
  6688                           ;mcc_generated_files/mcc.c: 82:     WDTCON = 0x16;
  6689                           
  6690                           ;incstack = 0
  6691                           ; Regs used in _WDT_Initialize: [wreg]
  6692     0B4A  3016               	movlw	22
  6693     0B4B  0021               	movlb	1	; select bank1
  6694     0B4C  0097               	movwf	23	;volatile
  6695     0B4D  0008               	return
  6696     0B4E                     __end_of_WDT_Initialize:
  6697                           
  6698                           	psect	text23
  6699     0BDD                     __ptext23:	
  6700 ;; *************** function _TMR6_Initialize *****************
  6701 ;; Defined at:
  6702 ;;		line 62 in file "mcc_generated_files/tmr6.c"
  6703 ;; Parameters:    Size  Location     Type
  6704 ;;		None
  6705 ;; Auto vars:     Size  Location     Type
  6706 ;;		None
  6707 ;; Return value:  Size  Location     Type
  6708 ;;                  1    wreg      void 
  6709 ;; Registers used:
  6710 ;;		wreg, status,2
  6711 ;; Tracked objects:
  6712 ;;		On entry : B1F/0
  6713 ;;		On exit  : B1F/8
  6714 ;;		Unchanged: B00/0
  6715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6716 ;;      Params:         0       0       0       0       0       0
  6717 ;;      Locals:         0       0       0       0       0       0
  6718 ;;      Temps:          0       0       0       0       0       0
  6719 ;;      Totals:         0       0       0       0       0       0
  6720 ;;Total ram usage:        0 bytes
  6721 ;; Hardware stack levels used: 1
  6722 ;; Hardware stack levels required when called: 5
  6723 ;; This function calls:
  6724 ;;		Nothing
  6725 ;; This function is called by:
  6726 ;;		_SYSTEM_Initialize
  6727 ;; This function uses a non-reentrant model
  6728 ;;
  6729                           
  6730     0BDD                     _TMR6_Initialize:	
  6731                           ;psect for function _TMR6_Initialize
  6732                           
  6733                           
  6734                           ;mcc_generated_files/tmr6.c: 67:     PR6 = 0x4A;
  6735                           
  6736                           ;incstack = 0
  6737                           ; Regs used in _TMR6_Initialize: [wreg+status,2]
  6738     0BDD  304A               	movlw	74
  6739     0BDE  0028               	movlb	8	; select bank8
  6740     0BDF  009D               	movwf	29	;volatile
  6741                           
  6742                           ;mcc_generated_files/tmr6.c: 70:     TMR6 = 0x00;
  6743     0BE0  019C               	clrf	28	;volatile
  6744                           
  6745                           ;mcc_generated_files/tmr6.c: 73:     PIR3bits.TMR6IF = 0;
  6746     0BE1  0020               	movlb	0	; select bank0
  6747     0BE2  1193               	bcf	19,3	;volatile
  6748                           
  6749                           ;mcc_generated_files/tmr6.c: 76:     T6CON = 0x4F;
  6750     0BE3  304F               	movlw	79
  6751     0BE4  0028               	movlb	8	; select bank8
  6752     0BE5  009E               	movwf	30	;volatile
  6753     0BE6  0008               	return
  6754     0BE7                     __end_of_TMR6_Initialize:
  6755                           
  6756                           	psect	text24
  6757     0BD3                     __ptext24:	
  6758 ;; *************** function _TMR4_Initialize *****************
  6759 ;; Defined at:
  6760 ;;		line 62 in file "mcc_generated_files/tmr4.c"
  6761 ;; Parameters:    Size  Location     Type
  6762 ;;		None
  6763 ;; Auto vars:     Size  Location     Type
  6764 ;;		None
  6765 ;; Return value:  Size  Location     Type
  6766 ;;                  1    wreg      void 
  6767 ;; Registers used:
  6768 ;;		wreg, status,2
  6769 ;; Tracked objects:
  6770 ;;		On entry : B1F/2
  6771 ;;		On exit  : B1F/8
  6772 ;;		Unchanged: B00/0
  6773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6774 ;;      Params:         0       0       0       0       0       0
  6775 ;;      Locals:         0       0       0       0       0       0
  6776 ;;      Temps:          0       0       0       0       0       0
  6777 ;;      Totals:         0       0       0       0       0       0
  6778 ;;Total ram usage:        0 bytes
  6779 ;; Hardware stack levels used: 1
  6780 ;; Hardware stack levels required when called: 5
  6781 ;; This function calls:
  6782 ;;		Nothing
  6783 ;; This function is called by:
  6784 ;;		_SYSTEM_Initialize
  6785 ;; This function uses a non-reentrant model
  6786 ;;
  6787                           
  6788     0BD3                     _TMR4_Initialize:	
  6789                           ;psect for function _TMR4_Initialize
  6790                           
  6791                           
  6792                           ;mcc_generated_files/tmr4.c: 67:     PR4 = 0xFF;
  6793                           
  6794                           ;incstack = 0
  6795                           ; Regs used in _TMR4_Initialize: [wreg+status,2]
  6796     0BD3  30FF               	movlw	255
  6797     0BD4  0028               	movlb	8	; select bank8
  6798     0BD5  0096               	movwf	22	;volatile
  6799                           
  6800                           ;mcc_generated_files/tmr4.c: 70:     TMR4 = 0x00;
  6801     0BD6  0195               	clrf	21	;volatile
  6802                           
  6803                           ;mcc_generated_files/tmr4.c: 73:     PIR3bits.TMR4IF = 0;
  6804     0BD7  0020               	movlb	0	; select bank0
  6805     0BD8  1093               	bcf	19,1	;volatile
  6806                           
  6807                           ;mcc_generated_files/tmr4.c: 76:     T4CON = 0x07;
  6808     0BD9  3007               	movlw	7
  6809     0BDA  0028               	movlb	8	; select bank8
  6810     0BDB  0097               	movwf	23	;volatile
  6811     0BDC  0008               	return
  6812     0BDD                     __end_of_TMR4_Initialize:
  6813                           
  6814                           	psect	text25
  6815     0BB8                     __ptext25:	
  6816 ;; *************** function _TMR2_Initialize *****************
  6817 ;; Defined at:
  6818 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  6819 ;; Parameters:    Size  Location     Type
  6820 ;;		None
  6821 ;; Auto vars:     Size  Location     Type
  6822 ;;		None
  6823 ;; Return value:  Size  Location     Type
  6824 ;;                  1    wreg      void 
  6825 ;; Registers used:
  6826 ;;		wreg, status,2
  6827 ;; Tracked objects:
  6828 ;;		On entry : B1F/8
  6829 ;;		On exit  : B1F/0
  6830 ;;		Unchanged: B00/0
  6831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6832 ;;      Params:         0       0       0       0       0       0
  6833 ;;      Locals:         0       0       0       0       0       0
  6834 ;;      Temps:          0       0       0       0       0       0
  6835 ;;      Totals:         0       0       0       0       0       0
  6836 ;;Total ram usage:        0 bytes
  6837 ;; Hardware stack levels used: 1
  6838 ;; Hardware stack levels required when called: 5
  6839 ;; This function calls:
  6840 ;;		Nothing
  6841 ;; This function is called by:
  6842 ;;		_SYSTEM_Initialize
  6843 ;; This function uses a non-reentrant model
  6844 ;;
  6845                           
  6846     0BB8                     _TMR2_Initialize:	
  6847                           ;psect for function _TMR2_Initialize
  6848                           
  6849                           
  6850                           ;mcc_generated_files/tmr2.c: 67:     PR2 = 0xFF;
  6851                           
  6852                           ;incstack = 0
  6853                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  6854     0BB8  30FF               	movlw	255
  6855     0BB9  0020               	movlb	0	; select bank0
  6856     0BBA  009B               	movwf	27	;volatile
  6857                           
  6858                           ;mcc_generated_files/tmr2.c: 70:     TMR2 = 0x00;
  6859     0BBB  019A               	clrf	26	;volatile
  6860                           
  6861                           ;mcc_generated_files/tmr2.c: 73:     PIR1bits.TMR2IF = 0;
  6862     0BBC  1091               	bcf	17,1	;volatile
  6863                           
  6864                           ;mcc_generated_files/tmr2.c: 76:     T2CON = 0x04;
  6865     0BBD  3004               	movlw	4
  6866     0BBE  009C               	movwf	28	;volatile
  6867     0BBF  0008               	return
  6868     0BC0                     __end_of_TMR2_Initialize:
  6869                           
  6870                           	psect	text26
  6871     0C8B                     __ptext26:	
  6872 ;; *************** function _TMR1_Initialize *****************
  6873 ;; Defined at:
  6874 ;;		line 65 in file "mcc_generated_files/tmr1.c"
  6875 ;; Parameters:    Size  Location     Type
  6876 ;;		None
  6877 ;; Auto vars:     Size  Location     Type
  6878 ;;		None
  6879 ;; Return value:  Size  Location     Type
  6880 ;;                  1    wreg      void 
  6881 ;; Registers used:
  6882 ;;		wreg, status,2, status,0, pclath, cstack
  6883 ;; Tracked objects:
  6884 ;;		On entry : 1F/5
  6885 ;;		On exit  : 1F/0
  6886 ;;		Unchanged: 0/0
  6887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6888 ;;      Params:         0       0       0       0       0       0
  6889 ;;      Locals:         0       0       0       0       0       0
  6890 ;;      Temps:          0       0       0       0       0       0
  6891 ;;      Totals:         0       0       0       0       0       0
  6892 ;;Total ram usage:        0 bytes
  6893 ;; Hardware stack levels used: 1
  6894 ;; Hardware stack levels required when called: 6
  6895 ;; This function calls:
  6896 ;;		_TMR1_SetGateInterruptHandler
  6897 ;; This function is called by:
  6898 ;;		_SYSTEM_Initialize
  6899 ;; This function uses a non-reentrant model
  6900 ;;
  6901                           
  6902     0C8B                     _TMR1_Initialize:	
  6903                           ;psect for function _TMR1_Initialize
  6904                           
  6905                           
  6906                           ;mcc_generated_files/tmr1.c: 70:     T1GCON = 0xC0;
  6907                           
  6908                           ;incstack = 0
  6909                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6910     0C8B  30C0               	movlw	192
  6911     0C8C  0020               	movlb	0	; select bank0
  6912     0C8D  0099               	movwf	25	;volatile
  6913                           
  6914                           ;mcc_generated_files/tmr1.c: 73:     TMR1H = 0x00;
  6915     0C8E  0197               	clrf	23	;volatile
  6916                           
  6917                           ;mcc_generated_files/tmr1.c: 76:     TMR1L = 0x00;
  6918     0C8F  0196               	clrf	22	;volatile
  6919                           
  6920                           ;mcc_generated_files/tmr1.c: 79:     PIR1bits.TMR1IF = 0;
  6921     0C90  1011               	bcf	17,0	;volatile
  6922                           
  6923                           ;mcc_generated_files/tmr1.c: 82:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  6924     0C91  0817               	movf	23,w	;volatile
  6925     0C92  0021               	movlb	1	; select bank1
  6926     0C93  00C4               	movwf	(_timer1ReloadVal+1)^(0+128)	;volatile
  6927     0C94  0020               	movlb	0	; select bank0
  6928     0C95  0816               	movf	22,w	;volatile
  6929     0C96  0021               	movlb	1	; select bank1
  6930     0C97  00C3               	movwf	_timer1ReloadVal^(0+128)	;volatile
  6931                           
  6932                           ;mcc_generated_files/tmr1.c: 85:     PIR1bits.TMR1GIF = 0;
  6933     0C98  0020               	movlb	0	; select bank0
  6934     0C99  1391               	bcf	17,7	;volatile
  6935                           
  6936                           ;mcc_generated_files/tmr1.c: 88:     PIE1bits.TMR1GIE = 1;
  6937     0C9A  0021               	movlb	1	; select bank1
  6938     0C9B  1791               	bsf	17,7	;volatile
  6939                           
  6940                           ;mcc_generated_files/tmr1.c: 91:     TMR1_SetGateInterruptHandler(TMR1_DefaultGateInterr
      +                          uptHandler);
  6941     0C9C  3002               	movlw	low _TMR1_DefaultGateInterruptHandler
  6942     0C9D  00CD               	movwf	TMR1_SetGateInterruptHandler@InterruptHandler^(0+128)
  6943     0C9E  3000               	movlw	high _TMR1_DefaultGateInterruptHandler
  6944     0C9F  00CE               	movwf	(TMR1_SetGateInterruptHandler@InterruptHandler^(0+128)+1)
  6945     0CA0  318B  23B0         	fcall	_TMR1_SetGateInterruptHandler
  6946                           
  6947                           ;mcc_generated_files/tmr1.c: 94:     T1CON = 0x01;
  6948     0CA2  3001               	movlw	1
  6949     0CA3  0098               	movwf	24	;volatile
  6950     0CA4  0008               	return
  6951     0CA5                     __end_of_TMR1_Initialize:
  6952                           
  6953                           	psect	text27
  6954     0BB0                     __ptext27:	
  6955 ;; *************** function _TMR1_SetGateInterruptHandler *****************
  6956 ;; Defined at:
  6957 ;;		line 177 in file "mcc_generated_files/tmr1.c"
  6958 ;; Parameters:    Size  Location     Type
  6959 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  6960 ;;		 -> mede_height(1), TMR1_DefaultGateInterruptHandler(1), 
  6961 ;; Auto vars:     Size  Location     Type
  6962 ;;		None
  6963 ;; Return value:  Size  Location     Type
  6964 ;;                  1    wreg      void 
  6965 ;; Registers used:
  6966 ;;		wreg
  6967 ;; Tracked objects:
  6968 ;;		On entry : 1F/1
  6969 ;;		On exit  : 1F/0
  6970 ;;		Unchanged: 0/0
  6971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6972 ;;      Params:         0       0       2       0       0       0
  6973 ;;      Locals:         0       0       0       0       0       0
  6974 ;;      Temps:          0       0       0       0       0       0
  6975 ;;      Totals:         0       0       2       0       0       0
  6976 ;;Total ram usage:        2 bytes
  6977 ;; Hardware stack levels used: 1
  6978 ;; Hardware stack levels required when called: 5
  6979 ;; This function calls:
  6980 ;;		Nothing
  6981 ;; This function is called by:
  6982 ;;		_TMR1_Initialize
  6983 ;;		_main
  6984 ;; This function uses a non-reentrant model
  6985 ;;
  6986                           
  6987     0BB0                     _TMR1_SetGateInterruptHandler:	
  6988                           ;psect for function _TMR1_SetGateInterruptHandler
  6989                           
  6990                           
  6991                           ;mcc_generated_files/tmr1.c: 178:     TMR1_GateInterruptHandler = InterruptHandler;
  6992                           
  6993                           ;incstack = 0
  6994                           ; Regs used in _TMR1_SetGateInterruptHandler: [wreg]
  6995     0BB0  084E               	movf	(TMR1_SetGateInterruptHandler@InterruptHandler+1)^(0+128),w
  6996     0BB1  0020               	movlb	0	; select bank0
  6997     0BB2  00EE               	movwf	_TMR1_GateInterruptHandler+1
  6998     0BB3  0021               	movlb	1	; select bank1
  6999     0BB4  084D               	movf	TMR1_SetGateInterruptHandler@InterruptHandler^(0+128),w
  7000     0BB5  0020               	movlb	0	; select bank0
  7001     0BB6  00ED               	movwf	_TMR1_GateInterruptHandler
  7002     0BB7  0008               	return
  7003     0BB8                     __end_of_TMR1_SetGateInterruptHandler:
  7004                           
  7005                           	psect	text28
  7006     0BC9                     __ptext28:	
  7007 ;; *************** function _TMR0_Initialize *****************
  7008 ;; Defined at:
  7009 ;;		line 63 in file "mcc_generated_files/tmr0.c"
  7010 ;; Parameters:    Size  Location     Type
  7011 ;;		None
  7012 ;; Auto vars:     Size  Location     Type
  7013 ;;		None
  7014 ;; Return value:  Size  Location     Type
  7015 ;;                  1    wreg      void 
  7016 ;; Registers used:
  7017 ;;		wreg, status,2
  7018 ;; Tracked objects:
  7019 ;;		On entry : B1F/0
  7020 ;;		On exit  : B1F/0
  7021 ;;		Unchanged: B00/0
  7022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7023 ;;      Params:         0       0       0       0       0       0
  7024 ;;      Locals:         0       0       0       0       0       0
  7025 ;;      Temps:          0       0       0       0       0       0
  7026 ;;      Totals:         0       0       0       0       0       0
  7027 ;;Total ram usage:        0 bytes
  7028 ;; Hardware stack levels used: 1
  7029 ;; Hardware stack levels required when called: 5
  7030 ;; This function calls:
  7031 ;;		Nothing
  7032 ;; This function is called by:
  7033 ;;		_SYSTEM_Initialize
  7034 ;; This function uses a non-reentrant model
  7035 ;;
  7036                           
  7037     0BC9                     _TMR0_Initialize:	
  7038                           ;psect for function _TMR0_Initialize
  7039                           
  7040                           
  7041                           ;mcc_generated_files/tmr0.c: 68:     OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | (0xD7 
      +                          & 0x3F));
  7042                           
  7043                           ;incstack = 0
  7044                           ; Regs used in _TMR0_Initialize: [wreg+status,2]
  7045     0BC9  0021               	movlb	1	; select bank1
  7046     0BCA  0815               	movf	21,w	;volatile
  7047     0BCB  39C0               	andlw	192
  7048     0BCC  3817               	iorlw	23
  7049     0BCD  0095               	movwf	21	;volatile
  7050                           
  7051                           ;mcc_generated_files/tmr0.c: 71:     TMR0 = 0x00;
  7052     0BCE  0020               	movlb	0	; select bank0
  7053     0BCF  0195               	clrf	21	;volatile
  7054                           
  7055                           ;mcc_generated_files/tmr0.c: 74:     timer0ReloadVal= 0;
  7056     0BD0  01EC               	clrf	_timer0ReloadVal	;volatile
  7057                           
  7058                           ;mcc_generated_files/tmr0.c: 77:     INTCONbits.TMR0IF = 0;
  7059     0BD1  110B               	bcf	11,2	;volatile
  7060     0BD2  0008               	return
  7061     0BD3                     __end_of_TMR0_Initialize:
  7062                           
  7063                           	psect	text29
  7064     0C43                     __ptext29:	
  7065 ;; *************** function _PIN_MANAGER_Initialize *****************
  7066 ;; Defined at:
  7067 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  7068 ;; Parameters:    Size  Location     Type
  7069 ;;		None
  7070 ;; Auto vars:     Size  Location     Type
  7071 ;;		None
  7072 ;; Return value:  Size  Location     Type
  7073 ;;                  1    wreg      void 
  7074 ;; Registers used:
  7075 ;;		wreg, status,2
  7076 ;; Tracked objects:
  7077 ;;		On entry : B1F/0
  7078 ;;		On exit  : B1F/2
  7079 ;;		Unchanged: B00/0
  7080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7081 ;;      Params:         0       0       0       0       0       0
  7082 ;;      Locals:         0       0       0       0       0       0
  7083 ;;      Temps:          0       0       0       0       0       0
  7084 ;;      Totals:         0       0       0       0       0       0
  7085 ;;Total ram usage:        0 bytes
  7086 ;; Hardware stack levels used: 1
  7087 ;; Hardware stack levels required when called: 5
  7088 ;; This function calls:
  7089 ;;		Nothing
  7090 ;; This function is called by:
  7091 ;;		_SYSTEM_Initialize
  7092 ;; This function uses a non-reentrant model
  7093 ;;
  7094                           
  7095     0C43                     _PIN_MANAGER_Initialize:	
  7096                           ;psect for function _PIN_MANAGER_Initialize
  7097                           
  7098                           
  7099                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  7100                           
  7101                           ;incstack = 0
  7102                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  7103     0C43  0022               	movlb	2	; select bank2
  7104     0C44  018C               	clrf	12	;volatile
  7105                           
  7106                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  7107     0C45  018D               	clrf	13	;volatile
  7108                           
  7109                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0xA1;
  7110     0C46  30A1               	movlw	161
  7111     0C47  0021               	movlb	1	; select bank1
  7112     0C48  008C               	movwf	12	;volatile
  7113                           
  7114                           ;mcc_generated_files/pin_manager.c: 67:     TRISB = 0xF7;
  7115     0C49  30F7               	movlw	247
  7116     0C4A  008D               	movwf	13	;volatile
  7117                           
  7118                           ;mcc_generated_files/pin_manager.c: 72:     ANSELB = 0xF0;
  7119     0C4B  30F0               	movlw	240
  7120     0C4C  0023               	movlb	3	; select bank3
  7121     0C4D  008D               	movwf	13	;volatile
  7122                           
  7123                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x01;
  7124     0C4E  3001               	movlw	1
  7125     0C4F  008C               	movwf	12	;volatile
  7126                           
  7127                           ;mcc_generated_files/pin_manager.c: 78:     WPUB = 0x00;
  7128     0C50  0024               	movlb	4	; select bank4
  7129     0C51  018D               	clrf	13	;volatile
  7130                           
  7131                           ;mcc_generated_files/pin_manager.c: 79:     WPUA = 0x00;
  7132     0C52  018C               	clrf	12	;volatile
  7133                           
  7134                           ;mcc_generated_files/pin_manager.c: 80:     OPTION_REGbits.nWPUEN = 1;
  7135     0C53  0021               	movlb	1	; select bank1
  7136     0C54  1795               	bsf	21,7	;volatile
  7137                           
  7138                           ;mcc_generated_files/pin_manager.c: 86:     APFCON0 = 0x00;
  7139     0C55  0022               	movlb	2	; select bank2
  7140     0C56  019D               	clrf	29	;volatile
  7141                           
  7142                           ;mcc_generated_files/pin_manager.c: 87:     APFCON1 = 0x00;
  7143     0C57  019E               	clrf	30	;volatile
  7144                           
  7145                           ;mcc_generated_files/pin_manager.c: 94:     INTCONbits.IOCIE = 1;
  7146     0C58  158B               	bsf	11,3	;volatile
  7147     0C59  0008               	return
  7148     0C5A                     __end_of_PIN_MANAGER_Initialize:
  7149                           
  7150                           	psect	text30
  7151     0B81                     __ptext30:	
  7152 ;; *************** function _OSCILLATOR_Initialize *****************
  7153 ;; Defined at:
  7154 ;;		line 69 in file "mcc_generated_files/mcc.c"
  7155 ;; Parameters:    Size  Location     Type
  7156 ;;		None
  7157 ;; Auto vars:     Size  Location     Type
  7158 ;;		None
  7159 ;; Return value:  Size  Location     Type
  7160 ;;                  1    wreg      void 
  7161 ;; Registers used:
  7162 ;;		wreg, status,2
  7163 ;; Tracked objects:
  7164 ;;		On entry : B1F/2
  7165 ;;		On exit  : B1F/2
  7166 ;;		Unchanged: B00/0
  7167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7168 ;;      Params:         0       0       0       0       0       0
  7169 ;;      Locals:         0       0       0       0       0       0
  7170 ;;      Temps:          0       0       0       0       0       0
  7171 ;;      Totals:         0       0       0       0       0       0
  7172 ;;Total ram usage:        0 bytes
  7173 ;; Hardware stack levels used: 1
  7174 ;; Hardware stack levels required when called: 5
  7175 ;; This function calls:
  7176 ;;		Nothing
  7177 ;; This function is called by:
  7178 ;;		_SYSTEM_Initialize
  7179 ;; This function uses a non-reentrant model
  7180 ;;
  7181                           
  7182     0B81                     _OSCILLATOR_Initialize:	
  7183                           ;psect for function _OSCILLATOR_Initialize
  7184                           
  7185                           
  7186                           ;mcc_generated_files/mcc.c: 72:     OSCCON = 0x78;
  7187                           
  7188                           ;incstack = 0
  7189                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  7190     0B81  3078               	movlw	120
  7191     0B82  0021               	movlb	1	; select bank1
  7192     0B83  0099               	movwf	25	;volatile
  7193                           
  7194                           ;mcc_generated_files/mcc.c: 74:     OSCTUNE = 0x00;
  7195     0B84  0198               	clrf	24	;volatile
  7196                           
  7197                           ;mcc_generated_files/mcc.c: 76:     BORCON = 0x00;
  7198     0B85  0022               	movlb	2	; select bank2
  7199     0B86  0196               	clrf	22	;volatile
  7200     0B87  0008               	return
  7201     0B88                     __end_of_OSCILLATOR_Initialize:
  7202                           
  7203                           	psect	text31
  7204     0B44                     __ptext31:	
  7205 ;; *************** function _FVR_Initialize *****************
  7206 ;; Defined at:
  7207 ;;		line 58 in file "mcc_generated_files/fvr.c"
  7208 ;; Parameters:    Size  Location     Type
  7209 ;;		None
  7210 ;; Auto vars:     Size  Location     Type
  7211 ;;		None
  7212 ;; Return value:  Size  Location     Type
  7213 ;;                  1    wreg      void 
  7214 ;; Registers used:
  7215 ;;		wreg
  7216 ;; Tracked objects:
  7217 ;;		On entry : B1F/2
  7218 ;;		On exit  : B1F/2
  7219 ;;		Unchanged: B00/0
  7220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7221 ;;      Params:         0       0       0       0       0       0
  7222 ;;      Locals:         0       0       0       0       0       0
  7223 ;;      Temps:          0       0       0       0       0       0
  7224 ;;      Totals:         0       0       0       0       0       0
  7225 ;;Total ram usage:        0 bytes
  7226 ;; Hardware stack levels used: 1
  7227 ;; Hardware stack levels required when called: 5
  7228 ;; This function calls:
  7229 ;;		Nothing
  7230 ;; This function is called by:
  7231 ;;		_SYSTEM_Initialize
  7232 ;; This function uses a non-reentrant model
  7233 ;;
  7234                           
  7235     0B44                     _FVR_Initialize:	
  7236                           ;psect for function _FVR_Initialize
  7237                           
  7238                           
  7239                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0x84;
  7240                           
  7241                           ;incstack = 0
  7242                           ; Regs used in _FVR_Initialize: [wreg]
  7243     0B44  3084               	movlw	132
  7244     0B45  0097               	movwf	23	;volatile
  7245     0B46  0008               	return
  7246     0B47                     __end_of_FVR_Initialize:
  7247                           
  7248                           	psect	text32
  7249     0D19                     __ptext32:	
  7250 ;; *************** function _EUSART_Initialize *****************
  7251 ;; Defined at:
  7252 ;;		line 66 in file "mcc_generated_files/eusart.c"
  7253 ;; Parameters:    Size  Location     Type
  7254 ;;		None
  7255 ;; Auto vars:     Size  Location     Type
  7256 ;;		None
  7257 ;; Return value:  Size  Location     Type
  7258 ;;                  1    wreg      void 
  7259 ;; Registers used:
  7260 ;;		wreg, status,2, status,0, pclath, cstack
  7261 ;; Tracked objects:
  7262 ;;		On entry : 1F/0
  7263 ;;		On exit  : 1F/1
  7264 ;;		Unchanged: 0/0
  7265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7266 ;;      Params:         0       0       0       0       0       0
  7267 ;;      Locals:         0       0       0       0       0       0
  7268 ;;      Temps:          0       0       0       0       0       0
  7269 ;;      Totals:         0       0       0       0       0       0
  7270 ;;Total ram usage:        0 bytes
  7271 ;; Hardware stack levels used: 1
  7272 ;; Hardware stack levels required when called: 6
  7273 ;; This function calls:
  7274 ;;		_EUSART_SetErrorHandler
  7275 ;;		_EUSART_SetFramingErrorHandler
  7276 ;;		_EUSART_SetOverrunErrorHandler
  7277 ;; This function is called by:
  7278 ;;		_SYSTEM_Initialize
  7279 ;; This function uses a non-reentrant model
  7280 ;;
  7281                           
  7282     0D19                     _EUSART_Initialize:	
  7283                           ;psect for function _EUSART_Initialize
  7284                           
  7285                           
  7286                           ;mcc_generated_files/eusart.c: 71:     BAUDCON = 0x08;
  7287                           
  7288                           ;incstack = 0
  7289                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7290     0D19  3008               	movlw	8
  7291     0D1A  0023               	movlb	3	; select bank3
  7292     0D1B  009F               	movwf	31	;volatile
  7293                           
  7294                           ;mcc_generated_files/eusart.c: 74:     RCSTA = 0x90;
  7295     0D1C  3090               	movlw	144
  7296     0D1D  009D               	movwf	29	;volatile
  7297                           
  7298                           ;mcc_generated_files/eusart.c: 77:     TXSTA = 0x24;
  7299     0D1E  3024               	movlw	36
  7300     0D1F  009E               	movwf	30	;volatile
  7301                           
  7302                           ;mcc_generated_files/eusart.c: 80:     SPBRGL = 0x22;
  7303     0D20  3022               	movlw	34
  7304     0D21  009B               	movwf	27	;volatile
  7305                           
  7306                           ;mcc_generated_files/eusart.c: 83:     SPBRGH = 0x00;
  7307     0D22  019C               	clrf	28	;volatile
  7308                           
  7309                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  7310     0D23  3000               	movlw	0
  7311     0D24  0021               	movlb	1	; select bank1
  7312     0D25  00CD               	movwf	EUSART_SetFramingErrorHandler@interruptHandler^(0+128)
  7313     0D26  3000               	movlw	0
  7314     0D27  00CE               	movwf	(EUSART_SetFramingErrorHandler@interruptHandler^(0+128)+1)
  7315     0D28  318B  23A0  318D   	fcall	_EUSART_SetFramingErrorHandler
  7316                           
  7317                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  7318     0D2B  3000               	movlw	0
  7319     0D2C  0021               	movlb	1	; select bank1
  7320     0D2D  00CD               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler^(0+128)
  7321     0D2E  3000               	movlw	0
  7322     0D2F  00CE               	movwf	(EUSART_SetOverrunErrorHandler@interruptHandler^(0+128)+1)
  7323     0D30  318B  23A8  318D   	fcall	_EUSART_SetOverrunErrorHandler
  7324                           
  7325                           ;mcc_generated_files/eusart.c: 88:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  7326     0D33  3000               	movlw	0
  7327     0D34  0021               	movlb	1	; select bank1
  7328     0D35  00CD               	movwf	EUSART_SetErrorHandler@interruptHandler^(0+128)
  7329     0D36  3000               	movlw	0
  7330     0D37  00CE               	movwf	(EUSART_SetErrorHandler@interruptHandler^(0+128)+1)
  7331     0D38  318B  2398         	fcall	_EUSART_SetErrorHandler
  7332                           
  7333                           ;mcc_generated_files/eusart.c: 90:     eusartRxLastError.status = 0;
  7334     0D3A  0021               	movlb	1	; select bank1
  7335     0D3B  01CC               	clrf	_eusartRxLastError^(0+128)	;volatile
  7336     0D3C  0008               	return
  7337     0D3D                     __end_of_EUSART_Initialize:
  7338                           
  7339                           	psect	text33
  7340     0BA8                     __ptext33:	
  7341 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  7342 ;; Defined at:
  7343 ;;		line 161 in file "mcc_generated_files/eusart.c"
  7344 ;; Parameters:    Size  Location     Type
  7345 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  7346 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  7347 ;; Auto vars:     Size  Location     Type
  7348 ;;		None
  7349 ;; Return value:  Size  Location     Type
  7350 ;;                  1    wreg      void 
  7351 ;; Registers used:
  7352 ;;		wreg
  7353 ;; Tracked objects:
  7354 ;;		On entry : 1F/1
  7355 ;;		On exit  : 1F/2
  7356 ;;		Unchanged: 0/0
  7357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7358 ;;      Params:         0       0       2       0       0       0
  7359 ;;      Locals:         0       0       0       0       0       0
  7360 ;;      Temps:          0       0       0       0       0       0
  7361 ;;      Totals:         0       0       2       0       0       0
  7362 ;;Total ram usage:        2 bytes
  7363 ;; Hardware stack levels used: 1
  7364 ;; Hardware stack levels required when called: 5
  7365 ;; This function calls:
  7366 ;;		Nothing
  7367 ;; This function is called by:
  7368 ;;		_EUSART_Initialize
  7369 ;; This function uses a non-reentrant model
  7370 ;;
  7371                           
  7372     0BA8                     _EUSART_SetOverrunErrorHandler:	
  7373                           ;psect for function _EUSART_SetOverrunErrorHandler
  7374                           
  7375                           
  7376                           ;mcc_generated_files/eusart.c: 162:     EUSART_OverrunErrorHandler = interruptHandler;
  7377                           
  7378                           ;incstack = 0
  7379                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  7380     0BA8  084E               	movf	(EUSART_SetOverrunErrorHandler@interruptHandler+1)^(0+128),w
  7381     0BA9  0022               	movlb	2	; select bank2
  7382     0BAA  00B9               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+256)
  7383     0BAB  0021               	movlb	1	; select bank1
  7384     0BAC  084D               	movf	EUSART_SetOverrunErrorHandler@interruptHandler^(0+128),w
  7385     0BAD  0022               	movlb	2	; select bank2
  7386     0BAE  00B8               	movwf	_EUSART_OverrunErrorHandler^(0+256)
  7387     0BAF  0008               	return
  7388     0BB0                     __end_of_EUSART_SetOverrunErrorHandler:
  7389                           
  7390                           	psect	text34
  7391     0BA0                     __ptext34:	
  7392 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  7393 ;; Defined at:
  7394 ;;		line 157 in file "mcc_generated_files/eusart.c"
  7395 ;; Parameters:    Size  Location     Type
  7396 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  7397 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  7398 ;; Auto vars:     Size  Location     Type
  7399 ;;		None
  7400 ;; Return value:  Size  Location     Type
  7401 ;;                  1    wreg      void 
  7402 ;; Registers used:
  7403 ;;		wreg
  7404 ;; Tracked objects:
  7405 ;;		On entry : 1F/1
  7406 ;;		On exit  : 1F/2
  7407 ;;		Unchanged: 0/0
  7408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7409 ;;      Params:         0       0       2       0       0       0
  7410 ;;      Locals:         0       0       0       0       0       0
  7411 ;;      Temps:          0       0       0       0       0       0
  7412 ;;      Totals:         0       0       2       0       0       0
  7413 ;;Total ram usage:        2 bytes
  7414 ;; Hardware stack levels used: 1
  7415 ;; Hardware stack levels required when called: 5
  7416 ;; This function calls:
  7417 ;;		Nothing
  7418 ;; This function is called by:
  7419 ;;		_EUSART_Initialize
  7420 ;; This function uses a non-reentrant model
  7421 ;;
  7422                           
  7423     0BA0                     _EUSART_SetFramingErrorHandler:	
  7424                           ;psect for function _EUSART_SetFramingErrorHandler
  7425                           
  7426                           
  7427                           ;mcc_generated_files/eusart.c: 158:     EUSART_FramingErrorHandler = interruptHandler;
  7428                           
  7429                           ;incstack = 0
  7430                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  7431     0BA0  084E               	movf	(EUSART_SetFramingErrorHandler@interruptHandler+1)^(0+128),w
  7432     0BA1  0022               	movlb	2	; select bank2
  7433     0BA2  00BB               	movwf	(_EUSART_FramingErrorHandler+1)^(0+256)
  7434     0BA3  0021               	movlb	1	; select bank1
  7435     0BA4  084D               	movf	EUSART_SetFramingErrorHandler@interruptHandler^(0+128),w
  7436     0BA5  0022               	movlb	2	; select bank2
  7437     0BA6  00BA               	movwf	_EUSART_FramingErrorHandler^(0+256)
  7438     0BA7  0008               	return
  7439     0BA8                     __end_of_EUSART_SetFramingErrorHandler:
  7440                           
  7441                           	psect	text35
  7442     0B98                     __ptext35:	
  7443 ;; *************** function _EUSART_SetErrorHandler *****************
  7444 ;; Defined at:
  7445 ;;		line 165 in file "mcc_generated_files/eusart.c"
  7446 ;; Parameters:    Size  Location     Type
  7447 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  7448 ;;		 -> EUSART_DefaultErrorHandler(1), 
  7449 ;; Auto vars:     Size  Location     Type
  7450 ;;		None
  7451 ;; Return value:  Size  Location     Type
  7452 ;;                  1    wreg      void 
  7453 ;; Registers used:
  7454 ;;		wreg
  7455 ;; Tracked objects:
  7456 ;;		On entry : 1F/1
  7457 ;;		On exit  : 1F/2
  7458 ;;		Unchanged: 0/0
  7459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7460 ;;      Params:         0       0       2       0       0       0
  7461 ;;      Locals:         0       0       0       0       0       0
  7462 ;;      Temps:          0       0       0       0       0       0
  7463 ;;      Totals:         0       0       2       0       0       0
  7464 ;;Total ram usage:        2 bytes
  7465 ;; Hardware stack levels used: 1
  7466 ;; Hardware stack levels required when called: 5
  7467 ;; This function calls:
  7468 ;;		Nothing
  7469 ;; This function is called by:
  7470 ;;		_EUSART_Initialize
  7471 ;; This function uses a non-reentrant model
  7472 ;;
  7473                           
  7474     0B98                     _EUSART_SetErrorHandler:	
  7475                           ;psect for function _EUSART_SetErrorHandler
  7476                           
  7477                           
  7478                           ;mcc_generated_files/eusart.c: 166:     EUSART_ErrorHandler = interruptHandler;
  7479                           
  7480                           ;incstack = 0
  7481                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  7482     0B98  084E               	movf	(EUSART_SetErrorHandler@interruptHandler+1)^(0+128),w
  7483     0B99  0022               	movlb	2	; select bank2
  7484     0B9A  00B7               	movwf	(_EUSART_ErrorHandler+1)^(0+256)
  7485     0B9B  0021               	movlb	1	; select bank1
  7486     0B9C  084D               	movf	EUSART_SetErrorHandler@interruptHandler^(0+128),w
  7487     0B9D  0022               	movlb	2	; select bank2
  7488     0B9E  00B6               	movwf	_EUSART_ErrorHandler^(0+256)
  7489     0B9F  0008               	return
  7490     0BA0                     __end_of_EUSART_SetErrorHandler:
  7491                           
  7492                           	psect	text36
  7493     0BFE                     __ptext36:	
  7494 ;; *************** function _EPWM1_Initialize *****************
  7495 ;; Defined at:
  7496 ;;		line 64 in file "mcc_generated_files/epwm1.c"
  7497 ;; Parameters:    Size  Location     Type
  7498 ;;		None
  7499 ;; Auto vars:     Size  Location     Type
  7500 ;;		None
  7501 ;; Return value:  Size  Location     Type
  7502 ;;                  1    wreg      void 
  7503 ;; Registers used:
  7504 ;;		wreg, status,2, status,0
  7505 ;; Tracked objects:
  7506 ;;		On entry : 1F/1
  7507 ;;		On exit  : 1F/5
  7508 ;;		Unchanged: 0/0
  7509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7510 ;;      Params:         0       0       0       0       0       0
  7511 ;;      Locals:         0       0       0       0       0       0
  7512 ;;      Temps:          0       0       0       0       0       0
  7513 ;;      Totals:         0       0       0       0       0       0
  7514 ;;Total ram usage:        0 bytes
  7515 ;; Hardware stack levels used: 1
  7516 ;; Hardware stack levels required when called: 5
  7517 ;; This function calls:
  7518 ;;		Nothing
  7519 ;; This function is called by:
  7520 ;;		_SYSTEM_Initialize
  7521 ;; This function uses a non-reentrant model
  7522 ;;
  7523                           
  7524     0BFE                     _EPWM1_Initialize:	
  7525                           ;psect for function _EPWM1_Initialize
  7526                           
  7527                           
  7528                           ;mcc_generated_files/epwm1.c: 69:  CCP1CON = 0x3C;
  7529                           
  7530                           ;incstack = 0
  7531                           ; Regs used in _EPWM1_Initialize: [wreg+status,2+status,0]
  7532     0BFE  303C               	movlw	60
  7533     0BFF  0025               	movlb	5	; select bank5
  7534     0C00  0093               	movwf	19	;volatile
  7535                           
  7536                           ;mcc_generated_files/epwm1.c: 72:  ECCP1AS = 0x00;
  7537     0C01  0195               	clrf	21	;volatile
  7538                           
  7539                           ;mcc_generated_files/epwm1.c: 75:  PWM1CON = 0x80;
  7540     0C02  3080               	movlw	128
  7541     0C03  0094               	movwf	20	;volatile
  7542                           
  7543                           ;mcc_generated_files/epwm1.c: 78:  PSTR1CON = 0x01;
  7544     0C04  3001               	movlw	1
  7545     0C05  0096               	movwf	22	;volatile
  7546                           
  7547                           ;mcc_generated_files/epwm1.c: 81:  CCPR1H = 0x00;
  7548     0C06  0192               	clrf	18	;volatile
  7549                           
  7550                           ;mcc_generated_files/epwm1.c: 84:  CCPR1L = 0x7F;
  7551     0C07  307F               	movlw	127
  7552     0C08  0091               	movwf	17	;volatile
  7553                           
  7554                           ;mcc_generated_files/epwm1.c: 87:  CCPTMRS0bits.C1TSEL = 0x0;
  7555     0C09  30FC               	movlw	-4
  7556     0C0A  059E               	andwf	30,f	;volatile
  7557     0C0B  0008               	return
  7558     0C0C                     __end_of_EPWM1_Initialize:
  7559                           
  7560                           	psect	text37
  7561     0B5D                     __ptext37:	
  7562 ;; *************** function _DAC_Initialize *****************
  7563 ;; Defined at:
  7564 ;;		line 58 in file "mcc_generated_files/dac.c"
  7565 ;; Parameters:    Size  Location     Type
  7566 ;;		None
  7567 ;; Auto vars:     Size  Location     Type
  7568 ;;		None
  7569 ;; Return value:  Size  Location     Type
  7570 ;;                  1    wreg      void 
  7571 ;; Registers used:
  7572 ;;		wreg
  7573 ;; Tracked objects:
  7574 ;;		On entry : B1F/1
  7575 ;;		On exit  : B1F/2
  7576 ;;		Unchanged: B00/0
  7577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7578 ;;      Params:         0       0       0       0       0       0
  7579 ;;      Locals:         0       0       0       0       0       0
  7580 ;;      Temps:          0       0       0       0       0       0
  7581 ;;      Totals:         0       0       0       0       0       0
  7582 ;;Total ram usage:        0 bytes
  7583 ;; Hardware stack levels used: 1
  7584 ;; Hardware stack levels required when called: 5
  7585 ;; This function calls:
  7586 ;;		Nothing
  7587 ;; This function is called by:
  7588 ;;		_SYSTEM_Initialize
  7589 ;; This function uses a non-reentrant model
  7590 ;;
  7591                           
  7592     0B5D                     _DAC_Initialize:	
  7593                           ;psect for function _DAC_Initialize
  7594                           
  7595                           
  7596                           ;mcc_generated_files/dac.c: 61:     DACCON0 = 0x80;
  7597                           
  7598                           ;incstack = 0
  7599                           ; Regs used in _DAC_Initialize: [wreg]
  7600     0B5D  3080               	movlw	128
  7601     0B5E  0022               	movlb	2	; select bank2
  7602     0B5F  0098               	movwf	24	;volatile
  7603                           
  7604                           ;mcc_generated_files/dac.c: 63:     DACCON1 = 0x06;
  7605     0B60  3006               	movlw	6
  7606     0B61  0099               	movwf	25	;volatile
  7607     0B62  0008               	return
  7608     0B63                     __end_of_DAC_Initialize:
  7609                           
  7610                           	psect	text38
  7611     0B57                     __ptext38:	
  7612 ;; *************** function _CMP1_Initialize *****************
  7613 ;; Defined at:
  7614 ;;		line 58 in file "mcc_generated_files/cmp1.c"
  7615 ;; Parameters:    Size  Location     Type
  7616 ;;		None
  7617 ;; Auto vars:     Size  Location     Type
  7618 ;;		None
  7619 ;; Return value:  Size  Location     Type
  7620 ;;                  1    wreg      void 
  7621 ;; Registers used:
  7622 ;;		wreg
  7623 ;; Tracked objects:
  7624 ;;		On entry : B1F/8
  7625 ;;		On exit  : B1F/2
  7626 ;;		Unchanged: B00/0
  7627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7628 ;;      Params:         0       0       0       0       0       0
  7629 ;;      Locals:         0       0       0       0       0       0
  7630 ;;      Temps:          0       0       0       0       0       0
  7631 ;;      Totals:         0       0       0       0       0       0
  7632 ;;Total ram usage:        0 bytes
  7633 ;; Hardware stack levels used: 1
  7634 ;; Hardware stack levels required when called: 5
  7635 ;; This function calls:
  7636 ;;		Nothing
  7637 ;; This function is called by:
  7638 ;;		_SYSTEM_Initialize
  7639 ;; This function uses a non-reentrant model
  7640 ;;
  7641                           
  7642     0B57                     _CMP1_Initialize:	
  7643                           ;psect for function _CMP1_Initialize
  7644                           
  7645                           
  7646                           ;mcc_generated_files/cmp1.c: 62:     CM1CON0 = 0x84;
  7647                           
  7648                           ;incstack = 0
  7649                           ; Regs used in _CMP1_Initialize: [wreg]
  7650     0B57  3084               	movlw	132
  7651     0B58  0022               	movlb	2	; select bank2
  7652     0B59  0091               	movwf	17	;volatile
  7653                           
  7654                           ;mcc_generated_files/cmp1.c: 65:     CM1CON1 = 0x10;
  7655     0B5A  3010               	movlw	16
  7656     0B5B  0092               	movwf	18	;volatile
  7657     0B5C  0008               	return
  7658     0B5D                     __end_of_CMP1_Initialize:
  7659                           
  7660                           	psect	text39
  7661     0B90                     __ptext39:	
  7662 ;; *************** function _ADC_Initialize *****************
  7663 ;; Defined at:
  7664 ;;		line 67 in file "mcc_generated_files/adc.c"
  7665 ;; Parameters:    Size  Location     Type
  7666 ;;		None
  7667 ;; Auto vars:     Size  Location     Type
  7668 ;;		None
  7669 ;; Return value:  Size  Location     Type
  7670 ;;                  1    wreg      void 
  7671 ;; Registers used:
  7672 ;;		wreg, status,2
  7673 ;; Tracked objects:
  7674 ;;		On entry : 1F/2
  7675 ;;		On exit  : 1F/1
  7676 ;;		Unchanged: 0/0
  7677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7678 ;;      Params:         0       0       0       0       0       0
  7679 ;;      Locals:         0       0       0       0       0       0
  7680 ;;      Temps:          0       0       0       0       0       0
  7681 ;;      Totals:         0       0       0       0       0       0
  7682 ;;Total ram usage:        0 bytes
  7683 ;; Hardware stack levels used: 1
  7684 ;; Hardware stack levels required when called: 5
  7685 ;; This function calls:
  7686 ;;		Nothing
  7687 ;; This function is called by:
  7688 ;;		_SYSTEM_Initialize
  7689 ;; This function uses a non-reentrant model
  7690 ;;
  7691                           
  7692     0B90                     _ADC_Initialize:	
  7693                           ;psect for function _ADC_Initialize
  7694                           
  7695                           
  7696                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0xD3;
  7697                           
  7698                           ;incstack = 0
  7699                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  7700     0B90  30D3               	movlw	211
  7701     0B91  0021               	movlb	1	; select bank1
  7702     0B92  009E               	movwf	30	;volatile
  7703                           
  7704                           ;mcc_generated_files/adc.c: 75:     ADRESL = 0x00;
  7705     0B93  019B               	clrf	27	;volatile
  7706                           
  7707                           ;mcc_generated_files/adc.c: 78:     ADRESH = 0x00;
  7708     0B94  019C               	clrf	28	;volatile
  7709                           
  7710                           ;mcc_generated_files/adc.c: 81:     ADCON0 = 0x01;
  7711     0B95  3001               	movlw	1
  7712     0B96  009D               	movwf	29	;volatile
  7713     0B97  0008               	return
  7714     0B98                     __end_of_ADC_Initialize:
  7715                           
  7716                           	psect	text40
  7717     0B52                     __ptext40:	
  7718 ;; *************** function _EUSART_is_rx_ready *****************
  7719 ;; Defined at:
  7720 ;;		line 99 in file "mcc_generated_files/eusart.c"
  7721 ;; Parameters:    Size  Location     Type
  7722 ;;		None
  7723 ;; Auto vars:     Size  Location     Type
  7724 ;;		None
  7725 ;; Return value:  Size  Location     Type
  7726 ;;                  1    wreg      _Bool 
  7727 ;; Registers used:
  7728 ;;		wreg, status,2, status,0
  7729 ;; Tracked objects:
  7730 ;;		On entry : 17/0
  7731 ;;		On exit  : 1F/0
  7732 ;;		Unchanged: 0/0
  7733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7734 ;;      Params:         0       0       0       0       0       0
  7735 ;;      Locals:         0       0       0       0       0       0
  7736 ;;      Temps:          0       0       0       0       0       0
  7737 ;;      Totals:         0       0       0       0       0       0
  7738 ;;Total ram usage:        0 bytes
  7739 ;; Hardware stack levels used: 1
  7740 ;; Hardware stack levels required when called: 5
  7741 ;; This function calls:
  7742 ;;		Nothing
  7743 ;; This function is called by:
  7744 ;;		_main
  7745 ;; This function uses a non-reentrant model
  7746 ;;
  7747                           
  7748     0B52                     _EUSART_is_rx_ready:	
  7749                           ;psect for function _EUSART_is_rx_ready
  7750                           
  7751                           
  7752                           ;mcc_generated_files/eusart.c: 101:     return (_Bool)(PIR1bits.RCIF);
  7753                           
  7754                           ;incstack = 0
  7755                           ; Regs used in _EUSART_is_rx_ready: [wreg+status,2+status,0]
  7756     0B52  0020               	movlb	0	; select bank0
  7757     0B53  0E11               	swapf	17,w	;volatile
  7758     0B54  0C89               	rrf	9,f
  7759     0B55  3901               	andlw	1
  7760     0B56  0008               	return
  7761     0B57                     __end_of_EUSART_is_rx_ready:
  7762                           
  7763                           	psect	text41
  7764     0BF2                     __ptext41:	
  7765 ;; *************** function _EUSART_Read *****************
  7766 ;; Defined at:
  7767 ;;		line 113 in file "mcc_generated_files/eusart.c"
  7768 ;; Parameters:    Size  Location     Type
  7769 ;;		None
  7770 ;; Auto vars:     Size  Location     Type
  7771 ;;		None
  7772 ;; Return value:  Size  Location     Type
  7773 ;;                  1    wreg      unsigned char 
  7774 ;; Registers used:
  7775 ;;		wreg, status,2
  7776 ;; Tracked objects:
  7777 ;;		On entry : 1F/1
  7778 ;;		On exit  : 1F/3
  7779 ;;		Unchanged: 0/0
  7780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7781 ;;      Params:         0       0       0       0       0       0
  7782 ;;      Locals:         0       0       0       0       0       0
  7783 ;;      Temps:          0       0       0       0       0       0
  7784 ;;      Totals:         0       0       0       0       0       0
  7785 ;;Total ram usage:        0 bytes
  7786 ;; Hardware stack levels used: 1
  7787 ;; Hardware stack levels required when called: 5
  7788 ;; This function calls:
  7789 ;;		Nothing
  7790 ;; This function is called by:
  7791 ;;		_main
  7792 ;; This function uses a non-reentrant model
  7793 ;;
  7794                           
  7795     0BF2                     _EUSART_Read:	
  7796                           ;psect for function _EUSART_Read
  7797                           
  7798     0BF2                     l240:	
  7799                           ;mcc_generated_files/eusart.c: 116:     {;mcc_generated_files/eusart.c: 117:     }
  7800                           
  7801                           ;incstack = 0
  7802                           ; Regs used in _EUSART_Read: [wreg+status,2]
  7803                           
  7804                           
  7805                           ;mcc_generated_files/eusart.c: 115:     while(!PIR1bits.RCIF)
  7806     0BF2  0020               	movlb	0	; select bank0
  7807     0BF3  1E91               	btfss	17,5	;volatile
  7808     0BF4  2BF2               	goto	l240
  7809                           
  7810                           ;mcc_generated_files/eusart.c: 119:     eusartRxLastError.status = 0;
  7811     0BF5  0021               	movlb	1	; select bank1
  7812     0BF6  01CC               	clrf	_eusartRxLastError^(0+128)	;volatile
  7813                           
  7814                           ;mcc_generated_files/eusart.c: 121:     if(1 == RCSTAbits.OERR)
  7815     0BF7  0023               	movlb	3	; select bank3
  7816     0BF8  1C9D               	btfss	29,1	;volatile
  7817     0BF9  2BFC               	goto	l2876
  7818                           
  7819                           ;mcc_generated_files/eusart.c: 122:     {;mcc_generated_files/eusart.c: 125:         RCS
      +                          TAbits.CREN = 0;
  7820     0BFA  121D               	bcf	29,4	;volatile
  7821                           
  7822                           ;mcc_generated_files/eusart.c: 126:         RCSTAbits.CREN = 1;
  7823     0BFB  161D               	bsf	29,4	;volatile
  7824     0BFC                     l2876:
  7825                           
  7826                           ;mcc_generated_files/eusart.c: 129:     return RCREG;
  7827     0BFC  0819               	movf	25,w	;volatile
  7828     0BFD  0008               	return
  7829     0BFE                     __end_of_EUSART_Read:
  7830                           
  7831                           	psect	text42
  7832     0C72                     __ptext42:	
  7833 ;; *************** function _ADC_GetConversion *****************
  7834 ;; Defined at:
  7835 ;;		line 112 in file "mcc_generated_files/adc.c"
  7836 ;; Parameters:    Size  Location     Type
  7837 ;;  channel         1    wreg     enum E2495
  7838 ;; Auto vars:     Size  Location     Type
  7839 ;;  channel         1    3[BANK1 ] enum E2495
  7840 ;; Return value:  Size  Location     Type
  7841 ;;                  2    0[BANK1 ] unsigned short 
  7842 ;; Registers used:
  7843 ;;		wreg, status,2, status,0
  7844 ;; Tracked objects:
  7845 ;;		On entry : 1F/8
  7846 ;;		On exit  : 1F/1
  7847 ;;		Unchanged: 0/0
  7848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7849 ;;      Params:         0       0       2       0       0       0
  7850 ;;      Locals:         0       0       1       0       0       0
  7851 ;;      Temps:          0       0       1       0       0       0
  7852 ;;      Totals:         0       0       4       0       0       0
  7853 ;;Total ram usage:        4 bytes
  7854 ;; Hardware stack levels used: 1
  7855 ;; Hardware stack levels required when called: 5
  7856 ;; This function calls:
  7857 ;;		Nothing
  7858 ;; This function is called by:
  7859 ;;		_main
  7860 ;; This function uses a non-reentrant model
  7861 ;;
  7862                           
  7863     0C72                     _ADC_GetConversion:	
  7864                           ;psect for function _ADC_GetConversion
  7865                           
  7866                           
  7867                           ;incstack = 0
  7868                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
  7869                           ;ADC_GetConversion@channel stored from wreg
  7870     0C72  0021               	movlb	1	; select bank1
  7871     0C73  00D0               	movwf	ADC_GetConversion@channel^(0+128)
  7872                           
  7873                           ;mcc_generated_files/adc.c: 112: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 113: {;mcc_generated_files/adc.c: 115:     ADCON0bits.CHS = ch
      +                          annel;
  7874     0C74  0850               	movf	ADC_GetConversion@channel^(0+128),w
  7875     0C75  00CF               	movwf	??_ADC_GetConversion^(0+128)
  7876     0C76  0DCF               	rlf	??_ADC_GetConversion^(0+128),f
  7877     0C77  0DCF               	rlf	??_ADC_GetConversion^(0+128),f
  7878     0C78  081D               	movf	29,w	;volatile
  7879     0C79  064F               	xorwf	??_ADC_GetConversion^(0+128),w
  7880     0C7A  3983               	andlw	-125
  7881     0C7B  064F               	xorwf	??_ADC_GetConversion^(0+128),w
  7882     0C7C  009D               	movwf	29	;volatile
  7883                           
  7884                           ;mcc_generated_files/adc.c: 118:     ADCON0bits.ADON = 1;
  7885     0C7D  141D               	bsf	29,0	;volatile
  7886                           
  7887                           ;mcc_generated_files/adc.c: 121:     _delay((unsigned long)((5)*(16000000/4000000.0)));
  7888     0C7E  3006               	movlw	6
  7889     0C7F                     u2817:
  7890     0C7F  0B89               	decfsz	9,f
  7891     0C80  2C7F               	goto	u2817
  7892     0C81  3200               	nop2
  7893                           
  7894                           ;mcc_generated_files/adc.c: 124:     ADCON0bits.GO_nDONE = 1;
  7895     0C82  0021               	movlb	1	; select bank1
  7896     0C83  149D               	bsf	29,1	;volatile
  7897     0C84                     l333:	
  7898                           ;mcc_generated_files/adc.c: 128:     {;mcc_generated_files/adc.c: 129:     }
  7899                           
  7900                           
  7901                           ;mcc_generated_files/adc.c: 127:     while (ADCON0bits.GO_nDONE)
  7902     0C84  189D               	btfsc	29,1	;volatile
  7903     0C85  2C84               	goto	l333
  7904                           
  7905                           ;mcc_generated_files/adc.c: 132:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  7906     0C86  081C               	movf	28,w	;volatile
  7907     0C87  00CE               	movwf	(?_ADC_GetConversion+1)^(0+128)
  7908     0C88  081B               	movf	27,w	;volatile
  7909     0C89  00CD               	movwf	?_ADC_GetConversion^(0+128)
  7910     0C8A  0008               	return
  7911     0C8B                     __end_of_ADC_GetConversion:
  7912                           
  7913                           	psect	intentry
  7914     0004                     __pintentry:	
  7915 ;; *************** function _INTERRUPT_InterruptManager *****************
  7916 ;; Defined at:
  7917 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  7918 ;; Parameters:    Size  Location     Type
  7919 ;;		None
  7920 ;; Auto vars:     Size  Location     Type
  7921 ;;		None
  7922 ;; Return value:  Size  Location     Type
  7923 ;;                  1    wreg      void 
  7924 ;; Registers used:
  7925 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7926 ;; Tracked objects:
  7927 ;;		On entry : 0/0
  7928 ;;		On exit  : 0/0
  7929 ;;		Unchanged: 0/0
  7930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7931 ;;      Params:         0       0       0       0       0       0
  7932 ;;      Locals:         0       0       0       0       0       0
  7933 ;;      Temps:          0       0       0       0       0       0
  7934 ;;      Totals:         0       0       0       0       0       0
  7935 ;;Total ram usage:        0 bytes
  7936 ;; Hardware stack levels used: 1
  7937 ;; Hardware stack levels required when called: 4
  7938 ;; This function calls:
  7939 ;;		_PIN_MANAGER_IOC
  7940 ;;		_TMR1_GATE_ISR
  7941 ;; This function is called by:
  7942 ;;		Interrupt level 1
  7943 ;; This function uses a non-reentrant model
  7944 ;;
  7945                           
  7946     0004                     _INTERRUPT_InterruptManager:
  7947                           
  7948                           ;incstack = 0
  7949     0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  7950                           
  7951                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7952     0005  3180               	pagesel	$
  7953                           
  7954                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.IOCIE == 1 && INTCONbits
      +                          .IOCIF == 1)
  7955     0006  198B               	btfsc	11,3	;volatile
  7956     0007  1C0B               	btfss	11,0	;volatile
  7957     0008  280D               	goto	i1l174
  7958                           
  7959                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         PIN_MANAGER_IOC();
  7960     0009  318B  2343  3180   	fcall	_PIN_MANAGER_IOC
  7961                           
  7962                           ;mcc_generated_files/interrupt_manager.c: 58:     }
  7963     000C  2817               	goto	i1l180
  7964     000D                     i1l174:	
  7965                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
  7966                           
  7967     000D  1F0B               	btfss	11,6	;volatile
  7968     000E  2817               	goto	i1l180
  7969                           
  7970                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE1bits.TMR1GIE == 1 && PIR1bits.TMR1GIF == 1)
  7971     000F  0021               	movlb	1	; select bank1
  7972     0010  1F91               	btfss	17,7	;volatile
  7973     0011  2817               	goto	i1l180
  7974     0012  0020               	movlb	0	; select bank0
  7975     0013  1F91               	btfss	17,7	;volatile
  7976     0014  2817               	goto	i1l180
  7977                           
  7978                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             TMR1_GATE_ISR();
  7979     0015  318B  23E7         	fcall	_TMR1_GATE_ISR
  7980     0017                     i1l180:	
  7981                           ;mcc_generated_files/interrupt_manager.c: 71:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 73:     }
  7982                           
  7983                           ;mcc_generated_files/interrupt_manager.c: 64:         }
  7984                           
  7985     0017  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  7986     0018  0009               	retfie
  7987     0019                     __end_of_INTERRUPT_InterruptManager:
  7988                           
  7989                           	psect	text44
  7990     0BE7                     __ptext44:	
  7991 ;; *************** function _TMR1_GATE_ISR *****************
  7992 ;; Defined at:
  7993 ;;		line 166 in file "mcc_generated_files/tmr1.c"
  7994 ;; Parameters:    Size  Location     Type
  7995 ;;		None
  7996 ;; Auto vars:     Size  Location     Type
  7997 ;;		None
  7998 ;; Return value:  Size  Location     Type
  7999 ;;                  1    wreg      void 
  8000 ;; Registers used:
  8001 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8002 ;; Tracked objects:
  8003 ;;		On entry : 1F/0
  8004 ;;		On exit  : 0/0
  8005 ;;		Unchanged: 0/0
  8006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8007 ;;      Params:         0       0       0       0       0       0
  8008 ;;      Locals:         0       0       0       0       0       0
  8009 ;;      Temps:          0       0       0       0       0       0
  8010 ;;      Totals:         0       0       0       0       0       0
  8011 ;;Total ram usage:        0 bytes
  8012 ;; Hardware stack levels used: 1
  8013 ;; Hardware stack levels required when called: 3
  8014 ;; This function calls:
  8015 ;;		NULL
  8016 ;;		_TMR1_DefaultGateInterruptHandler
  8017 ;;		_mede_height
  8018 ;; This function is called by:
  8019 ;;		_INTERRUPT_InterruptManager
  8020 ;; This function uses a non-reentrant model
  8021 ;;
  8022                           
  8023     0BE7                     _TMR1_GATE_ISR:	
  8024                           ;psect for function _TMR1_GATE_ISR
  8025                           
  8026                           
  8027                           ;mcc_generated_files/tmr1.c: 169:     PIR1bits.TMR1GIF = 0;
  8028                           
  8029                           ;incstack = 0
  8030                           ; Regs used in _TMR1_GATE_ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8031     0BE7  1391               	bcf	17,7	;volatile
  8032                           
  8033                           ;mcc_generated_files/tmr1.c: 171:     if(TMR1_GateInterruptHandler)
  8034     0BE8  086D               	movf	_TMR1_GateInterruptHandler,w
  8035     0BE9  046E               	iorwf	_TMR1_GateInterruptHandler+1,w
  8036     0BEA  1903               	btfsc	3,2
  8037     0BEB  0008               	return
  8038                           
  8039                           ;mcc_generated_files/tmr1.c: 172:     {;mcc_generated_files/tmr1.c: 173:         TMR1_Ga
      +                          teInterruptHandler();
  8040     0BEC  086E               	movf	_TMR1_GateInterruptHandler+1,w
  8041     0BED  008A               	movwf	10
  8042     0BEE  086D               	movf	_TMR1_GateInterruptHandler,w
  8043     0BEF  000A               	callw
  8044     0BF0  318B               	pagesel	$
  8045     0BF1  0008               	return
  8046     0BF2                     __end_of_TMR1_GATE_ISR:
  8047                           
  8048                           	psect	text45
  8049     0002                     __ptext45:	
  8050 ;; *************** function _TMR1_DefaultGateInterruptHandler *****************
  8051 ;; Defined at:
  8052 ;;		line 181 in file "mcc_generated_files/tmr1.c"
  8053 ;; Parameters:    Size  Location     Type
  8054 ;;		None
  8055 ;; Auto vars:     Size  Location     Type
  8056 ;;		None
  8057 ;; Return value:  Size  Location     Type
  8058 ;;                  1    wreg      void 
  8059 ;; Registers used:
  8060 ;;		None
  8061 ;; Tracked objects:
  8062 ;;		On entry : 1F/0
  8063 ;;		On exit  : 1F/0
  8064 ;;		Unchanged: 1F/0
  8065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8066 ;;      Params:         0       0       0       0       0       0
  8067 ;;      Locals:         0       0       0       0       0       0
  8068 ;;      Temps:          0       0       0       0       0       0
  8069 ;;      Totals:         0       0       0       0       0       0
  8070 ;;Total ram usage:        0 bytes
  8071 ;; Hardware stack levels used: 1
  8072 ;; This function calls:
  8073 ;;		Nothing
  8074 ;; This function is called by:
  8075 ;;		_TMR1_Initialize
  8076 ;;		_TMR1_GATE_ISR
  8077 ;; This function uses a non-reentrant model
  8078 ;;
  8079                           
  8080     0002                     _TMR1_DefaultGateInterruptHandler:	
  8081                           ;psect for function _TMR1_DefaultGateInterruptHandler
  8082                           
  8083                           
  8084                           ;incstack = 0
  8085                           ; Regs used in _TMR1_DefaultGateInterruptHandler: []
  8086     0002  0008               	return
  8087     0003                     __end_of_TMR1_DefaultGateInterruptHandler:
  8088                           
  8089                           	psect	text46
  8090     05EC                     __ptext46:	
  8091 ;; *************** function _mede_height *****************
  8092 ;; Defined at:
  8093 ;;		line 283 in file "main.c"
  8094 ;; Parameters:    Size  Location     Type
  8095 ;;		None
  8096 ;; Auto vars:     Size  Location     Type
  8097 ;;		None
  8098 ;; Return value:  Size  Location     Type
  8099 ;;                  1    wreg      void 
  8100 ;; Registers used:
  8101 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8102 ;; Tracked objects:
  8103 ;;		On entry : 1F/0
  8104 ;;		On exit  : 1F/1
  8105 ;;		Unchanged: 0/0
  8106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8107 ;;      Params:         0       0       0       0       0       0
  8108 ;;      Locals:         0       0       0       0       0       0
  8109 ;;      Temps:          0       6       0       0       0       0
  8110 ;;      Totals:         0       6       0       0       0       0
  8111 ;;Total ram usage:        6 bytes
  8112 ;; Hardware stack levels used: 1
  8113 ;; Hardware stack levels required when called: 2
  8114 ;; This function calls:
  8115 ;;		_TMR1_ReadTimer
  8116 ;;		_TMR1_Reload
  8117 ;;		___flmul
  8118 ;;		___lwdiv
  8119 ;;		___xxtofl
  8120 ;;		i1___fltol
  8121 ;; This function is called by:
  8122 ;;		_main
  8123 ;;		_TMR1_GATE_ISR
  8124 ;; This function uses a non-reentrant model
  8125 ;;
  8126                           
  8127     05EC                     _mede_height:	
  8128                           ;psect for function _mede_height
  8129                           
  8130                           
  8131                           ;main.c: 284:     tempo_voo = TMR1_ReadTimer();
  8132                           
  8133                           ;incstack = 0
  8134                           ; Regs used in _mede_height: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8135     05EC  318C  245A  3185   	fcall	_TMR1_ReadTimer
  8136     05EF  0871               	movf	?_TMR1_ReadTimer+1,w
  8137     05F0  00E4               	movwf	_tempo_voo+1
  8138     05F1  0870               	movf	?_TMR1_ReadTimer,w
  8139     05F2  00E3               	movwf	_tempo_voo
  8140                           
  8141                           ;main.c: 285:     TMR1_Reload();
  8142     05F3  318B  2388  3185   	fcall	_TMR1_Reload
  8143                           
  8144                           ;main.c: 286:     if (first_read == 1){
  8145     05F6  036F               	decf	_first_read,w
  8146     05F7  1D03               	btfss	3,2
  8147     05F8  2E15               	goto	i1l2812
  8148                           
  8149                           ;main.c: 287:         avg_tempo_voo = tempo_voo;
  8150     05F9  0863               	movf	_tempo_voo,w
  8151     05FA  00BF               	movwf	___xxtofl@val
  8152     05FB  0864               	movf	_tempo_voo+1,w
  8153     05FC  00C0               	movwf	___xxtofl@val+1
  8154     05FD  01C1               	clrf	___xxtofl@val+2
  8155     05FE  01C2               	clrf	___xxtofl@val+3
  8156     05FF  3000               	movlw	0
  8157     0600  3187  2744  3185   	fcall	___xxtofl
  8158     0603  0842               	movf	?___xxtofl+3,w
  8159     0604  0021               	movlb	1	; select bank1
  8160     0605  00A3               	movwf	(_avg_tempo_voo+3)^(0+128)
  8161     0606  0020               	movlb	0	; select bank0
  8162     0607  0841               	movf	?___xxtofl+2,w
  8163     0608  0021               	movlb	1	; select bank1
  8164     0609  00A2               	movwf	(_avg_tempo_voo+2)^(0+128)
  8165     060A  0020               	movlb	0	; select bank0
  8166     060B  0840               	movf	?___xxtofl+1,w
  8167     060C  0021               	movlb	1	; select bank1
  8168     060D  00A1               	movwf	(_avg_tempo_voo+1)^(0+128)
  8169     060E  0020               	movlb	0	; select bank0
  8170     060F  083F               	movf	?___xxtofl,w
  8171     0610  0021               	movlb	1	; select bank1
  8172     0611  00A0               	movwf	_avg_tempo_voo^(0+128)
  8173                           
  8174                           ;main.c: 288:         first_read = 0;
  8175     0612  0020               	movlb	0	; select bank0
  8176     0613  01EF               	clrf	_first_read
  8177                           
  8178                           ;main.c: 289:     }
  8179     0614  2E51               	goto	i1l2814
  8180     0615                     i1l2812:
  8181                           
  8182                           ;main.c: 291:         avg_tempo_voo = ((uint16_t)avg_tempo_voo + (tempo_voo))>>1;
  8183     0615  0021               	movlb	1	; select bank1
  8184     0616  0823               	movf	(_avg_tempo_voo+3)^(0+128),w
  8185     0617  0020               	movlb	0	; select bank0
  8186     0618  00B8               	movwf	i1___fltol@f1+3
  8187     0619  0021               	movlb	1	; select bank1
  8188     061A  0822               	movf	(_avg_tempo_voo+2)^(0+128),w
  8189     061B  0020               	movlb	0	; select bank0
  8190     061C  00B7               	movwf	i1___fltol@f1+2
  8191     061D  0021               	movlb	1	; select bank1
  8192     061E  0821               	movf	(_avg_tempo_voo+1)^(0+128),w
  8193     061F  0020               	movlb	0	; select bank0
  8194     0620  00B6               	movwf	i1___fltol@f1+1
  8195     0621  0021               	movlb	1	; select bank1
  8196     0622  0820               	movf	_avg_tempo_voo^(0+128),w
  8197     0623  0020               	movlb	0	; select bank0
  8198     0624  00B5               	movwf	i1___fltol@f1
  8199     0625  318D  25F5  3185   	fcall	i1___fltol
  8200     0628  0863               	movf	_tempo_voo,w
  8201     0629  0735               	addwf	?i1___fltol,w
  8202     062A  00CD               	movwf	??_mede_height
  8203     062B  0864               	movf	_tempo_voo+1,w
  8204     062C  3D36               	addwfc	?i1___fltol+1,w
  8205     062D  00CE               	movwf	??_mede_height+1
  8206     062E  36CE               	lsrf	??_mede_height+1,f
  8207     062F  0CCD               	rrf	??_mede_height,f
  8208     0630  084D               	movf	??_mede_height,w
  8209     0631  00CF               	movwf	??_mede_height+2
  8210     0632  084E               	movf	??_mede_height+1,w
  8211     0633  00D0               	movwf	??_mede_height+3
  8212     0634  01D1               	clrf	??_mede_height+4
  8213     0635  01D2               	clrf	??_mede_height+5
  8214     0636  0852               	movf	??_mede_height+5,w
  8215     0637  00C2               	movwf	___xxtofl@val+3
  8216     0638  0851               	movf	??_mede_height+4,w
  8217     0639  00C1               	movwf	___xxtofl@val+2
  8218     063A  0850               	movf	??_mede_height+3,w
  8219     063B  00C0               	movwf	___xxtofl@val+1
  8220     063C  084F               	movf	??_mede_height+2,w
  8221     063D  00BF               	movwf	___xxtofl@val
  8222     063E  3000               	movlw	0
  8223     063F  3187  2744  3185   	fcall	___xxtofl
  8224     0642  0842               	movf	?___xxtofl+3,w
  8225     0643  0021               	movlb	1	; select bank1
  8226     0644  00A3               	movwf	(_avg_tempo_voo+3)^(0+128)
  8227     0645  0020               	movlb	0	; select bank0
  8228     0646  0841               	movf	?___xxtofl+2,w
  8229     0647  0021               	movlb	1	; select bank1
  8230     0648  00A2               	movwf	(_avg_tempo_voo+2)^(0+128)
  8231     0649  0020               	movlb	0	; select bank0
  8232     064A  0840               	movf	?___xxtofl+1,w
  8233     064B  0021               	movlb	1	; select bank1
  8234     064C  00A1               	movwf	(_avg_tempo_voo+1)^(0+128)
  8235     064D  0020               	movlb	0	; select bank0
  8236     064E  083F               	movf	?___xxtofl,w
  8237     064F  0021               	movlb	1	; select bank1
  8238     0650  00A0               	movwf	_avg_tempo_voo^(0+128)
  8239     0651                     i1l2814:
  8240                           
  8241                           ;main.c: 293:     height = (uint16_t)(avg_tempo_voo*lookupTable[(int)(adc_temp/10)]);
  8242     0651  0021               	movlb	1	; select bank1
  8243     0652  083A               	movf	(_adc_temp+1)^(0+128),w
  8244     0653  00F3               	movwf	___lwdiv@dividend+1
  8245     0654  0839               	movf	_adc_temp^(0+128),w
  8246     0655  00F2               	movwf	___lwdiv@dividend
  8247     0656  300A               	movlw	10
  8248     0657  00F0               	movwf	___lwdiv@divisor
  8249     0658  3000               	movlw	0
  8250     0659  00F1               	movwf	___lwdiv@divisor+1
  8251     065A  318D  2567  3185   	fcall	___lwdiv
  8252     065D  0871               	movf	?___lwdiv+1,w
  8253     065E  0085               	movwf	5
  8254     065F  0870               	movf	?___lwdiv,w
  8255     0660  0084               	movwf	4
  8256     0661  3584               	lslf	4,f
  8257     0662  0D85               	rlf	5,f
  8258     0663  3584               	lslf	4,f
  8259     0664  0D85               	rlf	5,f
  8260     0665  3055               	movlw	low _lookupTable
  8261     0666  0784               	addwf	4,f
  8262     0667  3004               	movlw	high _lookupTable
  8263     0668  3D05               	addwfc	5,w
  8264     0669  3880               	iorlw	128
  8265     066A  0085               	movwf	5
  8266     066B  3F00               	moviw [0]fsr0
  8267     066C  0020               	movlb	0	; select bank0
  8268     066D  00CD               	movwf	??_mede_height
  8269     066E  3F01               	moviw [1]fsr0
  8270     066F  00CE               	movwf	??_mede_height+1
  8271     0670  3F02               	moviw [2]fsr0
  8272     0671  00CF               	movwf	??_mede_height+2
  8273     0672  3F03               	moviw [3]fsr0
  8274     0673  00D0               	movwf	??_mede_height+3
  8275     0674  0850               	movf	??_mede_height+3,w
  8276     0675  00A7               	movwf	___flmul@a+3
  8277     0676  084F               	movf	??_mede_height+2,w
  8278     0677  00A6               	movwf	___flmul@a+2
  8279     0678  084E               	movf	??_mede_height+1,w
  8280     0679  00A5               	movwf	___flmul@a+1
  8281     067A  084D               	movf	??_mede_height,w
  8282     067B  00A4               	movwf	___flmul@a
  8283     067C  0021               	movlb	1	; select bank1
  8284     067D  0823               	movf	(_avg_tempo_voo+3)^(0+128),w
  8285     067E  0020               	movlb	0	; select bank0
  8286     067F  00A3               	movwf	___flmul@b+3
  8287     0680  0021               	movlb	1	; select bank1
  8288     0681  0822               	movf	(_avg_tempo_voo+2)^(0+128),w
  8289     0682  0020               	movlb	0	; select bank0
  8290     0683  00A2               	movwf	___flmul@b+2
  8291     0684  0021               	movlb	1	; select bank1
  8292     0685  0821               	movf	(_avg_tempo_voo+1)^(0+128),w
  8293     0686  0020               	movlb	0	; select bank0
  8294     0687  00A1               	movwf	___flmul@b+1
  8295     0688  0021               	movlb	1	; select bank1
  8296     0689  0820               	movf	_avg_tempo_voo^(0+128),w
  8297     068A  0020               	movlb	0	; select bank0
  8298     068B  00A0               	movwf	___flmul@b
  8299     068C  3180  2042  3185   	fcall	___flmul
  8300     068F  0823               	movf	?___flmul+3,w
  8301     0690  00B8               	movwf	i1___fltol@f1+3
  8302     0691  0822               	movf	?___flmul+2,w
  8303     0692  00B7               	movwf	i1___fltol@f1+2
  8304     0693  0821               	movf	?___flmul+1,w
  8305     0694  00B6               	movwf	i1___fltol@f1+1
  8306     0695  0820               	movf	?___flmul,w
  8307     0696  00B5               	movwf	i1___fltol@f1
  8308     0697  318D  25F5         	fcall	i1___fltol
  8309     0699  0836               	movf	?i1___fltol+1,w
  8310     069A  0021               	movlb	1	; select bank1
  8311     069B  00C0               	movwf	(_height+1)^(0+128)
  8312     069C  0020               	movlb	0	; select bank0
  8313     069D  0835               	movf	?i1___fltol,w
  8314     069E  0021               	movlb	1	; select bank1
  8315     069F  00BF               	movwf	_height^(0+128)
  8316                           
  8317                           ;main.c: 294:     balldist = height;
  8318     06A0  083F               	movf	_height^(0+128),w
  8319     06A1  00AD               	movwf	_balldist^(0+128)
  8320     06A2  0840               	movf	(_height+1)^(0+128),w
  8321     06A3  00AE               	movwf	(_balldist+1)^(0+128)
  8322     06A4  01AF               	clrf	(_balldist+2)^(0+128)
  8323     06A5  0008               	return
  8324     06A6                     __end_of_mede_height:
  8325                           
  8326                           	psect	text47
  8327     0DF5                     __ptext47:	
  8328 ;; *************** function i1___fltol *****************
  8329 ;; Defined at:
  8330 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\fltol.c"
  8331 ;; Parameters:    Size  Location     Type
  8332 ;;  f1              4   21[BANK0 ] void 
  8333 ;; Auto vars:     Size  Location     Type
  8334 ;;  exp1            1   30[BANK0 ] unsigned char 
  8335 ;;  sign1           1   29[BANK0 ] unsigned char 
  8336 ;; Return value:  Size  Location     Type
  8337 ;;                  4   21[BANK0 ] long 
  8338 ;; Registers used:
  8339 ;;		wreg, status,2, status,0
  8340 ;; Tracked objects:
  8341 ;;		On entry : 1F/0
  8342 ;;		On exit  : 1F/0
  8343 ;;		Unchanged: 0/0
  8344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8345 ;;      Params:         0       4       0       0       0       0
  8346 ;;      Locals:         0       2       0       0       0       0
  8347 ;;      Temps:          0       4       0       0       0       0
  8348 ;;      Totals:         0      10       0       0       0       0
  8349 ;;Total ram usage:       10 bytes
  8350 ;; Hardware stack levels used: 1
  8351 ;; This function calls:
  8352 ;;		Nothing
  8353 ;; This function is called by:
  8354 ;;		_mede_height
  8355 ;; This function uses a non-reentrant model
  8356 ;;
  8357                           
  8358     0DF5                     i1___fltol:	
  8359                           ;psect for function i1___fltol
  8360                           
  8361                           
  8362                           ;incstack = 0
  8363                           ; Regs used in i1___fltol: [wreg+status,2+status,0]
  8364     0DF5  1003               	clrc
  8365     0DF6  0D37               	rlf	i1___fltol@f1+2,w
  8366     0DF7  0D38               	rlf	i1___fltol@f1+3,w
  8367     0DF8  00BE               	movwf	i1___fltol@exp1
  8368     0DF9  083E               	movf	i1___fltol@exp1,w
  8369     0DFA  1D03               	btfss	3,2
  8370     0DFB  2E05               	goto	i1l2586
  8371     0DFC                     i1l2582:
  8372     0DFC  3000               	movlw	0
  8373     0DFD  00B8               	movwf	?i1___fltol+3
  8374     0DFE  3000               	movlw	0
  8375     0DFF  00B7               	movwf	?i1___fltol+2
  8376     0E00  3000               	movlw	0
  8377     0E01  00B6               	movwf	?i1___fltol+1
  8378     0E02  3000               	movlw	0
  8379     0E03  00B5               	movwf	?i1___fltol
  8380     0E04  0008               	return
  8381     0E05                     i1l2586:
  8382     0E05  0835               	movf	i1___fltol@f1,w
  8383     0E06  00B9               	movwf	??i1___fltol
  8384     0E07  0836               	movf	i1___fltol@f1+1,w
  8385     0E08  00BA               	movwf	??i1___fltol+1
  8386     0E09  0837               	movf	i1___fltol@f1+2,w
  8387     0E0A  00BB               	movwf	??i1___fltol+2
  8388     0E0B  0838               	movf	i1___fltol@f1+3,w
  8389     0E0C  00BC               	movwf	??i1___fltol+3
  8390     0E0D  301F               	movlw	31
  8391     0E0E                     u208_25:
  8392     0E0E  36BC               	lsrf	??i1___fltol+3,f
  8393     0E0F  0CBB               	rrf	??i1___fltol+2,f
  8394     0E10  0CBA               	rrf	??i1___fltol+1,f
  8395     0E11  0CB9               	rrf	??i1___fltol,f
  8396     0E12  0B89               	decfsz	9,f
  8397     0E13  2E0E               	goto	u208_25
  8398     0E14  0839               	movf	??i1___fltol,w
  8399     0E15  00BD               	movwf	i1___fltol@sign1
  8400     0E16  17B7               	bsf	i1___fltol@f1+2,7
  8401     0E17  30FF               	movlw	255
  8402     0E18  05B5               	andwf	i1___fltol@f1,f
  8403     0E19  30FF               	movlw	255
  8404     0E1A  05B6               	andwf	i1___fltol@f1+1,f
  8405     0E1B  30FF               	movlw	255
  8406     0E1C  05B7               	andwf	i1___fltol@f1+2,f
  8407     0E1D  3000               	movlw	0
  8408     0E1E  05B8               	andwf	i1___fltol@f1+3,f
  8409     0E1F  3096               	movlw	150
  8410     0E20  02BE               	subwf	i1___fltol@exp1,f
  8411     0E21  1FBE               	btfss	i1___fltol@exp1,7
  8412     0E22  2E36               	goto	i1l2604
  8413     0E23  083E               	movf	i1___fltol@exp1,w
  8414     0E24  3A80               	xorlw	128
  8415     0E25  3E97               	addlw	151
  8416     0E26  1C03               	btfss	3,0
  8417     0E27  2DFC               	goto	i1l2582
  8418     0E28                     i1l2602:
  8419     0E28  3001               	movlw	1
  8420     0E29                     u211_25:
  8421     0E29  36B8               	lsrf	i1___fltol@f1+3,f
  8422     0E2A  0CB7               	rrf	i1___fltol@f1+2,f
  8423     0E2B  0CB6               	rrf	i1___fltol@f1+1,f
  8424     0E2C  0CB5               	rrf	i1___fltol@f1,f
  8425     0E2D  0B89               	decfsz	9,f
  8426     0E2E  2E29               	goto	u211_25
  8427     0E2F  3001               	movlw	1
  8428     0E30  00B9               	movwf	??i1___fltol
  8429     0E31  0839               	movf	??i1___fltol,w
  8430     0E32  07BE               	addwf	i1___fltol@exp1,f
  8431     0E33  1903               	btfsc	3,2
  8432     0E34  2E47               	goto	i1l2612
  8433     0E35  2E28               	goto	i1l2602
  8434     0E36                     i1l2604:
  8435     0E36  3020               	movlw	32
  8436     0E37  023E               	subwf	i1___fltol@exp1,w
  8437     0E38  1803               	btfsc	3,0
  8438     0E39  2DFC               	goto	i1l2582
  8439     0E3A                     i1l1119:
  8440     0E3A  083E               	movf	i1___fltol@exp1,w
  8441     0E3B  1903               	btfsc	3,2
  8442     0E3C  2E47               	goto	i1l2612
  8443     0E3D  3001               	movlw	1
  8444     0E3E                     u214_25:
  8445     0E3E  35B5               	lslf	i1___fltol@f1,f
  8446     0E3F  0DB6               	rlf	i1___fltol@f1+1,f
  8447     0E40  0DB7               	rlf	i1___fltol@f1+2,f
  8448     0E41  0DB8               	rlf	i1___fltol@f1+3,f
  8449     0E42  0B89               	decfsz	9,f
  8450     0E43  2E3E               	goto	u214_25
  8451     0E44  3001               	movlw	1
  8452     0E45  02BE               	subwf	i1___fltol@exp1,f
  8453     0E46  2E3A               	goto	i1l1119
  8454     0E47                     i1l2612:
  8455     0E47  083D               	movf	i1___fltol@sign1,w
  8456     0E48  1903               	btfsc	3,2
  8457     0E49  0008               	return
  8458     0E4A  09B5               	comf	i1___fltol@f1,f
  8459     0E4B  09B6               	comf	i1___fltol@f1+1,f
  8460     0E4C  09B7               	comf	i1___fltol@f1+2,f
  8461     0E4D  09B8               	comf	i1___fltol@f1+3,f
  8462     0E4E  0AB5               	incf	i1___fltol@f1,f
  8463     0E4F  1903               	skipnz
  8464     0E50  0AB6               	incf	i1___fltol@f1+1,f
  8465     0E51  1903               	skipnz
  8466     0E52  0AB7               	incf	i1___fltol@f1+2,f
  8467     0E53  1903               	skipnz
  8468     0E54  0AB8               	incf	i1___fltol@f1+3,f
  8469     0E55  0008               	return
  8470     0E56                     __end_ofi1___fltol:
  8471                           
  8472                           	psect	text48
  8473     0744                     __ptext48:	
  8474 ;; *************** function ___xxtofl *****************
  8475 ;; Defined at:
  8476 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\xxtofl.c"
  8477 ;; Parameters:    Size  Location     Type
  8478 ;;  sign            1    wreg     unsigned char 
  8479 ;;  val             4   31[BANK0 ] long 
  8480 ;; Auto vars:     Size  Location     Type
  8481 ;;  sign            1   39[BANK0 ] unsigned char 
  8482 ;;  arg             4   41[BANK0 ] unsigned long 
  8483 ;;  exp             1   40[BANK0 ] unsigned char 
  8484 ;; Return value:  Size  Location     Type
  8485 ;;                  4   31[BANK0 ] unsigned char 
  8486 ;; Registers used:
  8487 ;;		wreg, status,2, status,0
  8488 ;; Tracked objects:
  8489 ;;		On entry : 1F/0
  8490 ;;		On exit  : 1F/0
  8491 ;;		Unchanged: 0/0
  8492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8493 ;;      Params:         0       4       0       0       0       0
  8494 ;;      Locals:         0       6       0       0       0       0
  8495 ;;      Temps:          0       4       0       0       0       0
  8496 ;;      Totals:         0      14       0       0       0       0
  8497 ;;Total ram usage:       14 bytes
  8498 ;; Hardware stack levels used: 1
  8499 ;; This function calls:
  8500 ;;		Nothing
  8501 ;; This function is called by:
  8502 ;;		_mede_height
  8503 ;; This function uses a non-reentrant model
  8504 ;;
  8505                           
  8506     0744                     ___xxtofl:	
  8507                           ;psect for function ___xxtofl
  8508                           
  8509                           
  8510                           ;incstack = 0
  8511                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  8512                           ;___xxtofl@sign stored from wreg
  8513     0744  00C7               	movwf	___xxtofl@sign
  8514     0745  0847               	movf	___xxtofl@sign,w
  8515     0746  1D03               	btfss	3,2
  8516     0747  1FC2               	btfss	___xxtofl@val+3,7
  8517     0748  2F59               	goto	i1l2542
  8518     0749  093F               	comf	___xxtofl@val,w
  8519     074A  00C9               	movwf	___xxtofl@arg
  8520     074B  0940               	comf	___xxtofl@val+1,w
  8521     074C  00CA               	movwf	___xxtofl@arg+1
  8522     074D  0941               	comf	___xxtofl@val+2,w
  8523     074E  00CB               	movwf	___xxtofl@arg+2
  8524     074F  0942               	comf	___xxtofl@val+3,w
  8525     0750  00CC               	movwf	___xxtofl@arg+3
  8526     0751  0AC9               	incf	___xxtofl@arg,f
  8527     0752  1903               	skipnz
  8528     0753  0ACA               	incf	___xxtofl@arg+1,f
  8529     0754  1903               	skipnz
  8530     0755  0ACB               	incf	___xxtofl@arg+2,f
  8531     0756  1903               	skipnz
  8532     0757  0ACC               	incf	___xxtofl@arg+3,f
  8533     0758  2F61               	goto	i1l1359
  8534     0759                     i1l2542:
  8535     0759  0842               	movf	___xxtofl@val+3,w
  8536     075A  00CC               	movwf	___xxtofl@arg+3
  8537     075B  0841               	movf	___xxtofl@val+2,w
  8538     075C  00CB               	movwf	___xxtofl@arg+2
  8539     075D  0840               	movf	___xxtofl@val+1,w
  8540     075E  00CA               	movwf	___xxtofl@arg+1
  8541     075F  083F               	movf	___xxtofl@val,w
  8542     0760  00C9               	movwf	___xxtofl@arg
  8543     0761                     i1l1359:
  8544     0761  0842               	movf	___xxtofl@val+3,w
  8545     0762  0441               	iorwf	___xxtofl@val+2,w
  8546     0763  0440               	iorwf	___xxtofl@val+1,w
  8547     0764  043F               	iorwf	___xxtofl@val,w
  8548     0765  1D03               	skipz
  8549     0766  2F70               	goto	i1l2548
  8550     0767  3000               	movlw	0
  8551     0768  00C2               	movwf	?___xxtofl+3
  8552     0769  3000               	movlw	0
  8553     076A  00C1               	movwf	?___xxtofl+2
  8554     076B  3000               	movlw	0
  8555     076C  00C0               	movwf	?___xxtofl+1
  8556     076D  3000               	movlw	0
  8557     076E  00BF               	movwf	?___xxtofl
  8558     076F  0008               	return
  8559     0770                     i1l2548:
  8560     0770  3096               	movlw	150
  8561     0771  00C8               	movwf	___xxtofl@exp
  8562     0772                     i1l2552:
  8563     0772  30FE               	movlw	254
  8564     0773  054C               	andwf	___xxtofl@arg+3,w
  8565     0774  1903               	btfsc	3,2
  8566     0775  2F95               	goto	i1l1365
  8567     0776  3001               	movlw	1
  8568     0777  00C3               	movwf	??___xxtofl
  8569     0778  0843               	movf	??___xxtofl,w
  8570     0779  07C8               	addwf	___xxtofl@exp,f
  8571     077A  3001               	movlw	1
  8572     077B                     u196_25:
  8573     077B  36CC               	lsrf	___xxtofl@arg+3,f
  8574     077C  0CCB               	rrf	___xxtofl@arg+2,f
  8575     077D  0CCA               	rrf	___xxtofl@arg+1,f
  8576     077E  0CC9               	rrf	___xxtofl@arg,f
  8577     077F  0B89               	decfsz	9,f
  8578     0780  2F7B               	goto	u196_25
  8579     0781  2F72               	goto	i1l2552
  8580     0782                     i1l2554:
  8581     0782  3001               	movlw	1
  8582     0783  00C3               	movwf	??___xxtofl
  8583     0784  0843               	movf	??___xxtofl,w
  8584     0785  07C8               	addwf	___xxtofl@exp,f
  8585     0786  3001               	movlw	1
  8586     0787  07C9               	addwf	___xxtofl@arg,f
  8587     0788  3000               	movlw	0
  8588     0789  3DCA               	addwfc	___xxtofl@arg+1,f
  8589     078A  3000               	movlw	0
  8590     078B  3DCB               	addwfc	___xxtofl@arg+2,f
  8591     078C  3000               	movlw	0
  8592     078D  3DCC               	addwfc	___xxtofl@arg+3,f
  8593     078E  3001               	movlw	1
  8594     078F                     u198_25:
  8595     078F  36CC               	lsrf	___xxtofl@arg+3,f
  8596     0790  0CCB               	rrf	___xxtofl@arg+2,f
  8597     0791  0CCA               	rrf	___xxtofl@arg+1,f
  8598     0792  0CC9               	rrf	___xxtofl@arg,f
  8599     0793  0B89               	decfsz	9,f
  8600     0794  2F8F               	goto	u198_25
  8601     0795                     i1l1365:
  8602     0795  30FF               	movlw	255
  8603     0796  054C               	andwf	___xxtofl@arg+3,w
  8604     0797  1903               	btfsc	3,2
  8605     0798  2FA7               	goto	i1l2562
  8606     0799  2F82               	goto	i1l2554
  8607     079A                     i1l2564:
  8608     079A  3002               	movlw	2
  8609     079B  0248               	subwf	___xxtofl@exp,w
  8610     079C  1C03               	btfss	3,0
  8611     079D  2FA9               	goto	i1l1372
  8612     079E  3001               	movlw	1
  8613     079F  02C8               	subwf	___xxtofl@exp,f
  8614     07A0  3001               	movlw	1
  8615     07A1                     u200_25:
  8616     07A1  35C9               	lslf	___xxtofl@arg,f
  8617     07A2  0DCA               	rlf	___xxtofl@arg+1,f
  8618     07A3  0DCB               	rlf	___xxtofl@arg+2,f
  8619     07A4  0DCC               	rlf	___xxtofl@arg+3,f
  8620     07A5  0B89               	decfsz	9,f
  8621     07A6  2FA1               	goto	u200_25
  8622     07A7                     i1l2562:
  8623     07A7  1FCB               	btfss	___xxtofl@arg+2,7
  8624     07A8  2F9A               	goto	i1l2564
  8625     07A9                     i1l1372:
  8626     07A9  1848               	btfsc	___xxtofl@exp,0
  8627     07AA  2FB3               	goto	i1l1373
  8628     07AB  30FF               	movlw	255
  8629     07AC  05C9               	andwf	___xxtofl@arg,f
  8630     07AD  30FF               	movlw	255
  8631     07AE  05CA               	andwf	___xxtofl@arg+1,f
  8632     07AF  307F               	movlw	127
  8633     07B0  05CB               	andwf	___xxtofl@arg+2,f
  8634     07B1  30FF               	movlw	255
  8635     07B2  05CC               	andwf	___xxtofl@arg+3,f
  8636     07B3                     i1l1373:
  8637     07B3  1003               	clrc
  8638     07B4  0CC8               	rrf	___xxtofl@exp,f
  8639     07B5  0848               	movf	___xxtofl@exp,w
  8640     07B6  00C3               	movwf	??___xxtofl
  8641     07B7  01C4               	clrf	??___xxtofl+1
  8642     07B8  01C5               	clrf	??___xxtofl+2
  8643     07B9  01C6               	clrf	??___xxtofl+3
  8644     07BA  3018               	movlw	24
  8645     07BB                     u204_25:
  8646     07BB  35C3               	lslf	??___xxtofl,f
  8647     07BC  0DC4               	rlf	??___xxtofl+1,f
  8648     07BD  0DC5               	rlf	??___xxtofl+2,f
  8649     07BE  0DC6               	rlf	??___xxtofl+3,f
  8650     07BF  0B89               	decfsz	9,f
  8651     07C0  2FBB               	goto	u204_25
  8652     07C1  0843               	movf	??___xxtofl,w
  8653     07C2  04C9               	iorwf	___xxtofl@arg,f
  8654     07C3  0844               	movf	??___xxtofl+1,w
  8655     07C4  04CA               	iorwf	___xxtofl@arg+1,f
  8656     07C5  0845               	movf	??___xxtofl+2,w
  8657     07C6  04CB               	iorwf	___xxtofl@arg+2,f
  8658     07C7  0846               	movf	??___xxtofl+3,w
  8659     07C8  04CC               	iorwf	___xxtofl@arg+3,f
  8660     07C9  0847               	movf	___xxtofl@sign,w
  8661     07CA  1D03               	btfss	3,2
  8662     07CB  1FC2               	btfss	___xxtofl@val+3,7
  8663     07CC  2FCE               	goto	i1l2576
  8664     07CD  17CC               	bsf	___xxtofl@arg+3,7
  8665     07CE                     i1l2576:
  8666     07CE  084C               	movf	___xxtofl@arg+3,w
  8667     07CF  00C2               	movwf	?___xxtofl+3
  8668     07D0  084B               	movf	___xxtofl@arg+2,w
  8669     07D1  00C1               	movwf	?___xxtofl+2
  8670     07D2  084A               	movf	___xxtofl@arg+1,w
  8671     07D3  00C0               	movwf	?___xxtofl+1
  8672     07D4  0849               	movf	___xxtofl@arg,w
  8673     07D5  00BF               	movwf	?___xxtofl
  8674     07D6  0008               	return
  8675     07D7                     __end_of___xxtofl:
  8676                           
  8677                           	psect	text49
  8678     0D67                     __ptext49:	
  8679 ;; *************** function ___lwdiv *****************
  8680 ;; Defined at:
  8681 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lwdiv.c"
  8682 ;; Parameters:    Size  Location     Type
  8683 ;;  divisor         2    0[COMMON] unsigned int 
  8684 ;;  dividend        2    2[COMMON] unsigned int 
  8685 ;; Auto vars:     Size  Location     Type
  8686 ;;  quotient        2    5[COMMON] unsigned int 
  8687 ;;  counter         1    7[COMMON] unsigned char 
  8688 ;; Return value:  Size  Location     Type
  8689 ;;                  2    0[COMMON] unsigned int 
  8690 ;; Registers used:
  8691 ;;		wreg, status,2, status,0
  8692 ;; Tracked objects:
  8693 ;;		On entry : 1F/1
  8694 ;;		On exit  : 1F/1
  8695 ;;		Unchanged: 1F/0
  8696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8697 ;;      Params:         4       0       0       0       0       0
  8698 ;;      Locals:         3       0       0       0       0       0
  8699 ;;      Temps:          1       0       0       0       0       0
  8700 ;;      Totals:         8       0       0       0       0       0
  8701 ;;Total ram usage:        8 bytes
  8702 ;; Hardware stack levels used: 1
  8703 ;; This function calls:
  8704 ;;		Nothing
  8705 ;; This function is called by:
  8706 ;;		_mede_height
  8707 ;; This function uses a non-reentrant model
  8708 ;;
  8709                           
  8710     0D67                     ___lwdiv:	
  8711                           ;psect for function ___lwdiv
  8712                           
  8713                           
  8714                           ;incstack = 0
  8715                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  8716     0D67  01F5               	clrf	___lwdiv@quotient
  8717     0D68  01F6               	clrf	___lwdiv@quotient+1
  8718     0D69  0870               	movf	___lwdiv@divisor,w
  8719     0D6A  0471               	iorwf	___lwdiv@divisor+1,w
  8720     0D6B  1903               	btfsc	3,2
  8721     0D6C  2D96               	goto	i1l2392
  8722     0D6D  01F7               	clrf	___lwdiv@counter
  8723     0D6E  0AF7               	incf	___lwdiv@counter,f
  8724     0D6F                     i1l2380:
  8725     0D6F  1BF1               	btfsc	___lwdiv@divisor+1,7
  8726     0D70  2D7B               	goto	i1l2382
  8727     0D71  3001               	movlw	1
  8728     0D72                     u162_25:
  8729     0D72  35F0               	lslf	___lwdiv@divisor,f
  8730     0D73  0DF1               	rlf	___lwdiv@divisor+1,f
  8731     0D74  0B89               	decfsz	9,f
  8732     0D75  2D72               	goto	u162_25
  8733     0D76  3001               	movlw	1
  8734     0D77  00F4               	movwf	??___lwdiv
  8735     0D78  0874               	movf	??___lwdiv,w
  8736     0D79  07F7               	addwf	___lwdiv@counter,f
  8737     0D7A  2D6F               	goto	i1l2380
  8738     0D7B                     i1l2382:
  8739     0D7B  3001               	movlw	1
  8740     0D7C                     u164_25:
  8741     0D7C  35F5               	lslf	___lwdiv@quotient,f
  8742     0D7D  0DF6               	rlf	___lwdiv@quotient+1,f
  8743     0D7E  0B89               	decfsz	9,f
  8744     0D7F  2D7C               	goto	u164_25
  8745     0D80  0871               	movf	___lwdiv@divisor+1,w
  8746     0D81  0273               	subwf	___lwdiv@dividend+1,w
  8747     0D82  1D03               	skipz
  8748     0D83  2D86               	goto	u165_25
  8749     0D84  0870               	movf	___lwdiv@divisor,w
  8750     0D85  0272               	subwf	___lwdiv@dividend,w
  8751     0D86                     u165_25:
  8752     0D86  1C03               	skipc
  8753     0D87  2D8D               	goto	i1l2388
  8754     0D88  0870               	movf	___lwdiv@divisor,w
  8755     0D89  02F2               	subwf	___lwdiv@dividend,f
  8756     0D8A  0871               	movf	___lwdiv@divisor+1,w
  8757     0D8B  3BF3               	subwfb	___lwdiv@dividend+1,f
  8758     0D8C  1475               	bsf	___lwdiv@quotient,0
  8759     0D8D                     i1l2388:
  8760     0D8D  3001               	movlw	1
  8761     0D8E                     u166_25:
  8762     0D8E  36F1               	lsrf	___lwdiv@divisor+1,f
  8763     0D8F  0CF0               	rrf	___lwdiv@divisor,f
  8764     0D90  0B89               	decfsz	9,f
  8765     0D91  2D8E               	goto	u166_25
  8766     0D92  3001               	movlw	1
  8767     0D93  02F7               	subwf	___lwdiv@counter,f
  8768     0D94  1D03               	btfss	3,2
  8769     0D95  2D7B               	goto	i1l2382
  8770     0D96                     i1l2392:
  8771     0D96  0876               	movf	___lwdiv@quotient+1,w
  8772     0D97  00F1               	movwf	?___lwdiv+1
  8773     0D98  0875               	movf	___lwdiv@quotient,w
  8774     0D99  00F0               	movwf	?___lwdiv
  8775     0D9A  0008               	return
  8776     0D9B                     __end_of___lwdiv:
  8777                           
  8778                           	psect	text50
  8779     0042                     __ptext50:	
  8780 ;; *************** function ___flmul *****************
  8781 ;; Defined at:
  8782 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcmul.c"
  8783 ;; Parameters:    Size  Location     Type
  8784 ;;  b               4    0[BANK0 ] unsigned int 
  8785 ;;  a               4    4[BANK0 ] unsigned int 
  8786 ;; Auto vars:     Size  Location     Type
  8787 ;;  prod            4   15[BANK0 ] struct .
  8788 ;;  grs             4   10[BANK0 ] unsigned long 
  8789 ;;  temp            2   19[BANK0 ] struct .
  8790 ;;  bexp            1   14[BANK0 ] unsigned char 
  8791 ;;  aexp            1    9[BANK0 ] unsigned char 
  8792 ;;  sign            1    8[BANK0 ] unsigned char 
  8793 ;; Return value:  Size  Location     Type
  8794 ;;                  4    0[BANK0 ] unsigned char 
  8795 ;; Registers used:
  8796 ;;		wreg, status,2, status,0, pclath, cstack
  8797 ;; Tracked objects:
  8798 ;;		On entry : 1F/0
  8799 ;;		On exit  : 1F/0
  8800 ;;		Unchanged: 0/0
  8801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8802 ;;      Params:         0       8       0       0       0       0
  8803 ;;      Locals:         0      13       0       0       0       0
  8804 ;;      Temps:          5       0       0       0       0       0
  8805 ;;      Totals:         5      21       0       0       0       0
  8806 ;;Total ram usage:       26 bytes
  8807 ;; Hardware stack levels used: 1
  8808 ;; Hardware stack levels required when called: 1
  8809 ;; This function calls:
  8810 ;;		__Umul8_16
  8811 ;; This function is called by:
  8812 ;;		_mede_height
  8813 ;; This function uses a non-reentrant model
  8814 ;;
  8815                           
  8816     0042                     ___flmul:	
  8817                           ;psect for function ___flmul
  8818                           
  8819                           
  8820                           ;incstack = 0
  8821                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  8822     0042  0823               	movf	___flmul@b+3,w
  8823     0043  3980               	andlw	128
  8824     0044  00A8               	movwf	___flmul@sign
  8825     0045  3523               	lslf	___flmul@b+3,w
  8826     0046  00AE               	movwf	___flmul@bexp
  8827     0047  1BA2               	btfsc	___flmul@b+2,7
  8828     0048  142E               	bsf	___flmul@bexp,0
  8829     0049  082E               	movf	___flmul@bexp,w
  8830     004A  1903               	btfsc	3,2
  8831     004B  2859               	goto	i1l2412
  8832     004C  0A2E               	incf	___flmul@bexp,w
  8833     004D  1D03               	btfss	3,2
  8834     004E  2857               	goto	i1l2410
  8835     004F  3000               	movlw	0
  8836     0050  00A3               	movwf	___flmul@b+3
  8837     0051  3000               	movlw	0
  8838     0052  00A2               	movwf	___flmul@b+2
  8839     0053  3000               	movlw	0
  8840     0054  00A1               	movwf	___flmul@b+1
  8841     0055  3000               	movlw	0
  8842     0056  00A0               	movwf	___flmul@b
  8843     0057                     i1l2410:
  8844     0057  17A2               	bsf	___flmul@b+2,7
  8845     0058  2861               	goto	i1l2414
  8846     0059                     i1l2412:
  8847     0059  3000               	movlw	0
  8848     005A  00A3               	movwf	___flmul@b+3
  8849     005B  3000               	movlw	0
  8850     005C  00A2               	movwf	___flmul@b+2
  8851     005D  3000               	movlw	0
  8852     005E  00A1               	movwf	___flmul@b+1
  8853     005F  3000               	movlw	0
  8854     0060  00A0               	movwf	___flmul@b
  8855     0061                     i1l2414:
  8856     0061  0827               	movf	___flmul@a+3,w
  8857     0062  3980               	andlw	128
  8858     0063  00F9               	movwf	??___flmul
  8859     0064  0879               	movf	??___flmul,w
  8860     0065  06A8               	xorwf	___flmul@sign,f
  8861     0066  3527               	lslf	___flmul@a+3,w
  8862     0067  00A9               	movwf	___flmul@aexp
  8863     0068  1BA6               	btfsc	___flmul@a+2,7
  8864     0069  1429               	bsf	___flmul@aexp,0
  8865     006A  0829               	movf	___flmul@aexp,w
  8866     006B  1903               	btfsc	3,2
  8867     006C  287A               	goto	i1l2430
  8868     006D  0A29               	incf	___flmul@aexp,w
  8869     006E  1D03               	btfss	3,2
  8870     006F  2878               	goto	i1l2428
  8871     0070  3000               	movlw	0
  8872     0071  00A7               	movwf	___flmul@a+3
  8873     0072  3000               	movlw	0
  8874     0073  00A6               	movwf	___flmul@a+2
  8875     0074  3000               	movlw	0
  8876     0075  00A5               	movwf	___flmul@a+1
  8877     0076  3000               	movlw	0
  8878     0077  00A4               	movwf	___flmul@a
  8879     0078                     i1l2428:
  8880     0078  17A6               	bsf	___flmul@a+2,7
  8881     0079  2882               	goto	i1l2432
  8882     007A                     i1l2430:
  8883     007A  3000               	movlw	0
  8884     007B  00A7               	movwf	___flmul@a+3
  8885     007C  3000               	movlw	0
  8886     007D  00A6               	movwf	___flmul@a+2
  8887     007E  3000               	movlw	0
  8888     007F  00A5               	movwf	___flmul@a+1
  8889     0080  3000               	movlw	0
  8890     0081  00A4               	movwf	___flmul@a
  8891     0082                     i1l2432:
  8892     0082  0829               	movf	___flmul@aexp,w
  8893     0083  1D03               	btfss	3,2
  8894     0084  082E               	movf	___flmul@bexp,w
  8895     0085  1D03               	btfss	3,2
  8896     0086  2890               	goto	i1l2440
  8897     0087  3000               	movlw	0
  8898     0088  00A3               	movwf	?___flmul+3
  8899     0089  3000               	movlw	0
  8900     008A  00A2               	movwf	?___flmul+2
  8901     008B  3000               	movlw	0
  8902     008C  00A1               	movwf	?___flmul+1
  8903     008D  3000               	movlw	0
  8904     008E  00A0               	movwf	?___flmul
  8905     008F  0008               	return
  8906     0090                     i1l2440:
  8907     0090  0820               	movf	___flmul@b,w
  8908     0091  00F0               	movwf	__Umul8_16@multiplicand
  8909     0092  0826               	movf	___flmul@a+2,w
  8910     0093  318C  24DA  3180   	fcall	__Umul8_16
  8911     0096  0871               	movf	?__Umul8_16+1,w
  8912     0097  00B4               	movwf	___flmul@temp+1
  8913     0098  0870               	movf	?__Umul8_16,w
  8914     0099  00B3               	movwf	___flmul@temp
  8915     009A  0833               	movf	___flmul@temp,w
  8916     009B  00F9               	movwf	??___flmul
  8917     009C  01FA               	clrf	??___flmul+1
  8918     009D  01FB               	clrf	??___flmul+2
  8919     009E  01FC               	clrf	??___flmul+3
  8920     009F  087C               	movf	??___flmul+3,w
  8921     00A0  00AD               	movwf	___flmul@grs+3
  8922     00A1  087B               	movf	??___flmul+2,w
  8923     00A2  00AC               	movwf	___flmul@grs+2
  8924     00A3  087A               	movf	??___flmul+1,w
  8925     00A4  00AB               	movwf	___flmul@grs+1
  8926     00A5  0879               	movf	??___flmul,w
  8927     00A6  00AA               	movwf	___flmul@grs
  8928     00A7  0834               	movf	___flmul@temp+1,w
  8929     00A8  00F9               	movwf	??___flmul
  8930     00A9  01FA               	clrf	??___flmul+1
  8931     00AA  01FB               	clrf	??___flmul+2
  8932     00AB  01FC               	clrf	??___flmul+3
  8933     00AC  087C               	movf	??___flmul+3,w
  8934     00AD  00B2               	movwf	___flmul@prod+3
  8935     00AE  087B               	movf	??___flmul+2,w
  8936     00AF  00B1               	movwf	___flmul@prod+2
  8937     00B0  087A               	movf	??___flmul+1,w
  8938     00B1  00B0               	movwf	___flmul@prod+1
  8939     00B2  0879               	movf	??___flmul,w
  8940     00B3  00AF               	movwf	___flmul@prod
  8941     00B4  0821               	movf	___flmul@b+1,w
  8942     00B5  00F0               	movwf	__Umul8_16@multiplicand
  8943     00B6  0825               	movf	___flmul@a+1,w
  8944     00B7  318C  24DA  3180   	fcall	__Umul8_16
  8945     00BA  0871               	movf	?__Umul8_16+1,w
  8946     00BB  00B4               	movwf	___flmul@temp+1
  8947     00BC  0870               	movf	?__Umul8_16,w
  8948     00BD  00B3               	movwf	___flmul@temp
  8949     00BE  0833               	movf	___flmul@temp,w
  8950     00BF  00F9               	movwf	??___flmul
  8951     00C0  01FA               	clrf	??___flmul+1
  8952     00C1  01FB               	clrf	??___flmul+2
  8953     00C2  01FC               	clrf	??___flmul+3
  8954     00C3  0879               	movf	??___flmul,w
  8955     00C4  07AA               	addwf	___flmul@grs,f
  8956     00C5  087A               	movf	??___flmul+1,w
  8957     00C6  3DAB               	addwfc	___flmul@grs+1,f
  8958     00C7  087B               	movf	??___flmul+2,w
  8959     00C8  3DAC               	addwfc	___flmul@grs+2,f
  8960     00C9  087C               	movf	??___flmul+3,w
  8961     00CA  3DAD               	addwfc	___flmul@grs+3,f
  8962     00CB  0834               	movf	___flmul@temp+1,w
  8963     00CC  00F9               	movwf	??___flmul
  8964     00CD  01FA               	clrf	??___flmul+1
  8965     00CE  01FB               	clrf	??___flmul+2
  8966     00CF  01FC               	clrf	??___flmul+3
  8967     00D0  0879               	movf	??___flmul,w
  8968     00D1  07AF               	addwf	___flmul@prod,f
  8969     00D2  087A               	movf	??___flmul+1,w
  8970     00D3  3DB0               	addwfc	___flmul@prod+1,f
  8971     00D4  087B               	movf	??___flmul+2,w
  8972     00D5  3DB1               	addwfc	___flmul@prod+2,f
  8973     00D6  087C               	movf	??___flmul+3,w
  8974     00D7  3DB2               	addwfc	___flmul@prod+3,f
  8975     00D8  0822               	movf	___flmul@b+2,w
  8976     00D9  00F0               	movwf	__Umul8_16@multiplicand
  8977     00DA  0824               	movf	___flmul@a,w
  8978     00DB  318C  24DA  3180   	fcall	__Umul8_16
  8979     00DE  0871               	movf	?__Umul8_16+1,w
  8980     00DF  00B4               	movwf	___flmul@temp+1
  8981     00E0  0870               	movf	?__Umul8_16,w
  8982     00E1  00B3               	movwf	___flmul@temp
  8983     00E2  0833               	movf	___flmul@temp,w
  8984     00E3  00F9               	movwf	??___flmul
  8985     00E4  01FA               	clrf	??___flmul+1
  8986     00E5  01FB               	clrf	??___flmul+2
  8987     00E6  01FC               	clrf	??___flmul+3
  8988     00E7  0879               	movf	??___flmul,w
  8989     00E8  07AA               	addwf	___flmul@grs,f
  8990     00E9  087A               	movf	??___flmul+1,w
  8991     00EA  3DAB               	addwfc	___flmul@grs+1,f
  8992     00EB  087B               	movf	??___flmul+2,w
  8993     00EC  3DAC               	addwfc	___flmul@grs+2,f
  8994     00ED  087C               	movf	??___flmul+3,w
  8995     00EE  3DAD               	addwfc	___flmul@grs+3,f
  8996     00EF  0834               	movf	___flmul@temp+1,w
  8997     00F0  00F9               	movwf	??___flmul
  8998     00F1  01FA               	clrf	??___flmul+1
  8999     00F2  01FB               	clrf	??___flmul+2
  9000     00F3  01FC               	clrf	??___flmul+3
  9001     00F4  0879               	movf	??___flmul,w
  9002     00F5  07AF               	addwf	___flmul@prod,f
  9003     00F6  087A               	movf	??___flmul+1,w
  9004     00F7  3DB0               	addwfc	___flmul@prod+1,f
  9005     00F8  087B               	movf	??___flmul+2,w
  9006     00F9  3DB1               	addwfc	___flmul@prod+2,f
  9007     00FA  087C               	movf	??___flmul+3,w
  9008     00FB  3DB2               	addwfc	___flmul@prod+3,f
  9009     00FC  3008               	movlw	8
  9010     00FD                     u176_25:
  9011     00FD  35AA               	lslf	___flmul@grs,f
  9012     00FE  0DAB               	rlf	___flmul@grs+1,f
  9013     00FF  0DAC               	rlf	___flmul@grs+2,f
  9014     0100  0DAD               	rlf	___flmul@grs+3,f
  9015     0101  0B89               	decfsz	9,f
  9016     0102  28FD               	goto	u176_25
  9017     0103  0821               	movf	___flmul@b+1,w
  9018     0104  00F0               	movwf	__Umul8_16@multiplicand
  9019     0105  0824               	movf	___flmul@a,w
  9020     0106  318C  24DA  3180   	fcall	__Umul8_16
  9021     0109  0871               	movf	?__Umul8_16+1,w
  9022     010A  00B4               	movwf	___flmul@temp+1
  9023     010B  0870               	movf	?__Umul8_16,w
  9024     010C  00B3               	movwf	___flmul@temp
  9025     010D  0833               	movf	___flmul@temp,w
  9026     010E  07AA               	addwf	___flmul@grs,f
  9027     010F  0834               	movf	___flmul@temp+1,w
  9028     0110  3DAB               	addwfc	___flmul@grs+1,f
  9029     0111  3000               	movlw	0
  9030     0112  3DAC               	addwfc	___flmul@grs+2,f
  9031     0113  3DAD               	addwfc	___flmul@grs+3,f
  9032     0114  0820               	movf	___flmul@b,w
  9033     0115  00F0               	movwf	__Umul8_16@multiplicand
  9034     0116  0825               	movf	___flmul@a+1,w
  9035     0117  318C  24DA  3180   	fcall	__Umul8_16
  9036     011A  0871               	movf	?__Umul8_16+1,w
  9037     011B  00B4               	movwf	___flmul@temp+1
  9038     011C  0870               	movf	?__Umul8_16,w
  9039     011D  00B3               	movwf	___flmul@temp
  9040     011E  0833               	movf	___flmul@temp,w
  9041     011F  07AA               	addwf	___flmul@grs,f
  9042     0120  0834               	movf	___flmul@temp+1,w
  9043     0121  3DAB               	addwfc	___flmul@grs+1,f
  9044     0122  3000               	movlw	0
  9045     0123  3DAC               	addwfc	___flmul@grs+2,f
  9046     0124  3DAD               	addwfc	___flmul@grs+3,f
  9047     0125  3008               	movlw	8
  9048     0126                     u177_25:
  9049     0126  35AA               	lslf	___flmul@grs,f
  9050     0127  0DAB               	rlf	___flmul@grs+1,f
  9051     0128  0DAC               	rlf	___flmul@grs+2,f
  9052     0129  0DAD               	rlf	___flmul@grs+3,f
  9053     012A  0B89               	decfsz	9,f
  9054     012B  2926               	goto	u177_25
  9055     012C  0820               	movf	___flmul@b,w
  9056     012D  00F0               	movwf	__Umul8_16@multiplicand
  9057     012E  0824               	movf	___flmul@a,w
  9058     012F  318C  24DA  3180   	fcall	__Umul8_16
  9059     0132  0871               	movf	?__Umul8_16+1,w
  9060     0133  00B4               	movwf	___flmul@temp+1
  9061     0134  0870               	movf	?__Umul8_16,w
  9062     0135  00B3               	movwf	___flmul@temp
  9063     0136  0833               	movf	___flmul@temp,w
  9064     0137  07AA               	addwf	___flmul@grs,f
  9065     0138  0834               	movf	___flmul@temp+1,w
  9066     0139  3DAB               	addwfc	___flmul@grs+1,f
  9067     013A  3000               	movlw	0
  9068     013B  3DAC               	addwfc	___flmul@grs+2,f
  9069     013C  3DAD               	addwfc	___flmul@grs+3,f
  9070     013D  0821               	movf	___flmul@b+1,w
  9071     013E  00F0               	movwf	__Umul8_16@multiplicand
  9072     013F  0826               	movf	___flmul@a+2,w
  9073     0140  318C  24DA  3180   	fcall	__Umul8_16
  9074     0143  0871               	movf	?__Umul8_16+1,w
  9075     0144  00B4               	movwf	___flmul@temp+1
  9076     0145  0870               	movf	?__Umul8_16,w
  9077     0146  00B3               	movwf	___flmul@temp
  9078     0147  0833               	movf	___flmul@temp,w
  9079     0148  07AF               	addwf	___flmul@prod,f
  9080     0149  0834               	movf	___flmul@temp+1,w
  9081     014A  3DB0               	addwfc	___flmul@prod+1,f
  9082     014B  3000               	movlw	0
  9083     014C  3DB1               	addwfc	___flmul@prod+2,f
  9084     014D  3DB2               	addwfc	___flmul@prod+3,f
  9085     014E  0822               	movf	___flmul@b+2,w
  9086     014F  00F0               	movwf	__Umul8_16@multiplicand
  9087     0150  0825               	movf	___flmul@a+1,w
  9088     0151  318C  24DA  3180   	fcall	__Umul8_16
  9089     0154  0871               	movf	?__Umul8_16+1,w
  9090     0155  00B4               	movwf	___flmul@temp+1
  9091     0156  0870               	movf	?__Umul8_16,w
  9092     0157  00B3               	movwf	___flmul@temp
  9093     0158  0833               	movf	___flmul@temp,w
  9094     0159  07AF               	addwf	___flmul@prod,f
  9095     015A  0834               	movf	___flmul@temp+1,w
  9096     015B  3DB0               	addwfc	___flmul@prod+1,f
  9097     015C  3000               	movlw	0
  9098     015D  3DB1               	addwfc	___flmul@prod+2,f
  9099     015E  3DB2               	addwfc	___flmul@prod+3,f
  9100     015F  0822               	movf	___flmul@b+2,w
  9101     0160  00F0               	movwf	__Umul8_16@multiplicand
  9102     0161  0826               	movf	___flmul@a+2,w
  9103     0162  318C  24DA  3180   	fcall	__Umul8_16
  9104     0165  0871               	movf	?__Umul8_16+1,w
  9105     0166  00B4               	movwf	___flmul@temp+1
  9106     0167  0870               	movf	?__Umul8_16,w
  9107     0168  00B3               	movwf	___flmul@temp
  9108     0169  0833               	movf	___flmul@temp,w
  9109     016A  00F9               	movwf	??___flmul
  9110     016B  0834               	movf	___flmul@temp+1,w
  9111     016C  00FA               	movwf	??___flmul+1
  9112     016D  01FB               	clrf	??___flmul+2
  9113     016E  01FC               	clrf	??___flmul+3
  9114     016F  3008               	movlw	8
  9115     0170                     u178_25:
  9116     0170  35F9               	lslf	??___flmul,f
  9117     0171  0DFA               	rlf	??___flmul+1,f
  9118     0172  0DFB               	rlf	??___flmul+2,f
  9119     0173  0DFC               	rlf	??___flmul+3,f
  9120     0174  0B89               	decfsz	9,f
  9121     0175  2970               	goto	u178_25
  9122     0176  0879               	movf	??___flmul,w
  9123     0177  07AF               	addwf	___flmul@prod,f
  9124     0178  087A               	movf	??___flmul+1,w
  9125     0179  3DB0               	addwfc	___flmul@prod+1,f
  9126     017A  087B               	movf	??___flmul+2,w
  9127     017B  3DB1               	addwfc	___flmul@prod+2,f
  9128     017C  087C               	movf	??___flmul+3,w
  9129     017D  3DB2               	addwfc	___flmul@prod+3,f
  9130     017E  082D               	movf	___flmul@grs+3,w
  9131     017F  00F9               	movwf	??___flmul
  9132     0180  01FA               	clrf	??___flmul+1
  9133     0181  01FB               	clrf	??___flmul+2
  9134     0182  01FC               	clrf	??___flmul+3
  9135     0183  0879               	movf	??___flmul,w
  9136     0184  07AF               	addwf	___flmul@prod,f
  9137     0185  087A               	movf	??___flmul+1,w
  9138     0186  3DB0               	addwfc	___flmul@prod+1,f
  9139     0187  087B               	movf	??___flmul+2,w
  9140     0188  3DB1               	addwfc	___flmul@prod+2,f
  9141     0189  087C               	movf	??___flmul+3,w
  9142     018A  3DB2               	addwfc	___flmul@prod+3,f
  9143     018B  3008               	movlw	8
  9144     018C                     u179_25:
  9145     018C  35AA               	lslf	___flmul@grs,f
  9146     018D  0DAB               	rlf	___flmul@grs+1,f
  9147     018E  0DAC               	rlf	___flmul@grs+2,f
  9148     018F  0DAD               	rlf	___flmul@grs+3,f
  9149     0190  0B89               	decfsz	9,f
  9150     0191  298C               	goto	u179_25
  9151     0192  082E               	movf	___flmul@bexp,w
  9152     0193  0729               	addwf	___flmul@aexp,w
  9153     0194  00F9               	movwf	??___flmul
  9154     0195  01FA               	clrf	??___flmul+1
  9155     0196  0DFA               	rlf	??___flmul+1,f
  9156     0197  0879               	movf	??___flmul,w
  9157     0198  3E82               	addlw	130
  9158     0199  00B3               	movwf	___flmul@temp
  9159     019A  30FF               	movlw	255
  9160     019B  3D7A               	addwfc	??___flmul+1,w
  9161     019C  00B4               	movwf	___flmul@temp+1
  9162     019D                     i1l2492:
  9163     019D  1BB1               	btfsc	___flmul@prod+2,7
  9164     019E  29B4               	goto	i1l2494
  9165     019F  3001               	movlw	1
  9166     01A0                     u180_25:
  9167     01A0  35AF               	lslf	___flmul@prod,f
  9168     01A1  0DB0               	rlf	___flmul@prod+1,f
  9169     01A2  0DB1               	rlf	___flmul@prod+2,f
  9170     01A3  0DB2               	rlf	___flmul@prod+3,f
  9171     01A4  0B89               	decfsz	9,f
  9172     01A5  29A0               	goto	u180_25
  9173     01A6  1BAD               	btfsc	___flmul@grs+3,7
  9174     01A7  142F               	bsf	___flmul@prod,0
  9175     01A8  3001               	movlw	1
  9176     01A9                     u182_25:
  9177     01A9  35AA               	lslf	___flmul@grs,f
  9178     01AA  0DAB               	rlf	___flmul@grs+1,f
  9179     01AB  0DAC               	rlf	___flmul@grs+2,f
  9180     01AC  0DAD               	rlf	___flmul@grs+3,f
  9181     01AD  0B89               	decfsz	9,f
  9182     01AE  29A9               	goto	u182_25
  9183     01AF  30FF               	movlw	255
  9184     01B0  07B3               	addwf	___flmul@temp,f
  9185     01B1  30FF               	movlw	255
  9186     01B2  3DB4               	addwfc	___flmul@temp+1,f
  9187     01B3  299D               	goto	i1l2492
  9188     01B4                     i1l2494:
  9189     01B4  01A9               	clrf	___flmul@aexp
  9190     01B5  1FAD               	btfss	___flmul@grs+3,7
  9191     01B6  29CD               	goto	i1l2504
  9192     01B7  30FF               	movlw	255
  9193     01B8  052A               	andwf	___flmul@grs,w
  9194     01B9  00F9               	movwf	??___flmul
  9195     01BA  30FF               	movlw	255
  9196     01BB  052B               	andwf	___flmul@grs+1,w
  9197     01BC  00FA               	movwf	??___flmul+1
  9198     01BD  30FF               	movlw	255
  9199     01BE  052C               	andwf	___flmul@grs+2,w
  9200     01BF  00FB               	movwf	??___flmul+2
  9201     01C0  307F               	movlw	127
  9202     01C1  052D               	andwf	___flmul@grs+3,w
  9203     01C2  00FC               	movwf	??___flmul+3
  9204     01C3  087C               	movf	??___flmul+3,w
  9205     01C4  047B               	iorwf	??___flmul+2,w
  9206     01C5  047A               	iorwf	??___flmul+1,w
  9207     01C6  0479               	iorwf	??___flmul,w
  9208     01C7  1903               	skipnz
  9209     01C8  182F               	btfsc	___flmul@prod,0
  9210     01C9  29CB               	goto	i1l2500
  9211     01CA  29CD               	goto	i1l2504
  9212     01CB                     i1l2500:
  9213     01CB  01A9               	clrf	___flmul@aexp
  9214     01CC  0AA9               	incf	___flmul@aexp,f
  9215     01CD                     i1l2504:
  9216     01CD  0829               	movf	___flmul@aexp,w
  9217     01CE  1903               	btfsc	3,2
  9218     01CF  29F6               	goto	i1l2514
  9219     01D0  3001               	movlw	1
  9220     01D1  07AF               	addwf	___flmul@prod,f
  9221     01D2  3000               	movlw	0
  9222     01D3  3DB0               	addwfc	___flmul@prod+1,f
  9223     01D4  3000               	movlw	0
  9224     01D5  3DB1               	addwfc	___flmul@prod+2,f
  9225     01D6  3000               	movlw	0
  9226     01D7  3DB2               	addwfc	___flmul@prod+3,f
  9227     01D8  1C32               	btfss	___flmul@prod+3,0
  9228     01D9  29F6               	goto	i1l2514
  9229     01DA  082F               	movf	___flmul@prod,w
  9230     01DB  00F9               	movwf	??___flmul
  9231     01DC  0830               	movf	___flmul@prod+1,w
  9232     01DD  00FA               	movwf	??___flmul+1
  9233     01DE  0831               	movf	___flmul@prod+2,w
  9234     01DF  00FB               	movwf	??___flmul+2
  9235     01E0  0832               	movf	___flmul@prod+3,w
  9236     01E1  00FC               	movwf	??___flmul+3
  9237     01E2  3001               	movlw	1
  9238     01E3  00FD               	movwf	??___flmul+4
  9239     01E4                     u189_25:
  9240     01E4  37FC               	asrf	??___flmul+3,f
  9241     01E5  0CFB               	rrf	??___flmul+2,f
  9242     01E6  0CFA               	rrf	??___flmul+1,f
  9243     01E7  0CF9               	rrf	??___flmul,f
  9244     01E8  0BFD               	decfsz	??___flmul+4,f
  9245     01E9  29E4               	goto	u189_25
  9246     01EA  087C               	movf	??___flmul+3,w
  9247     01EB  00B2               	movwf	___flmul@prod+3
  9248     01EC  087B               	movf	??___flmul+2,w
  9249     01ED  00B1               	movwf	___flmul@prod+2
  9250     01EE  087A               	movf	??___flmul+1,w
  9251     01EF  00B0               	movwf	___flmul@prod+1
  9252     01F0  0879               	movf	??___flmul,w
  9253     01F1  00AF               	movwf	___flmul@prod
  9254     01F2  3001               	movlw	1
  9255     01F3  07B3               	addwf	___flmul@temp,f
  9256     01F4  3000               	movlw	0
  9257     01F5  3DB4               	addwfc	___flmul@temp+1,f
  9258     01F6                     i1l2514:
  9259     01F6  0834               	movf	___flmul@temp+1,w
  9260     01F7  3A80               	xorlw	128
  9261     01F8  00F9               	movwf	??___flmul
  9262     01F9  3080               	movlw	128
  9263     01FA  0279               	subwf	??___flmul,w
  9264     01FB  1D03               	skipz
  9265     01FC  29FF               	goto	u190_25
  9266     01FD  30FF               	movlw	255
  9267     01FE  0233               	subwf	___flmul@temp,w
  9268     01FF                     u190_25:
  9269     01FF  1C03               	skipc
  9270     0200  2A0B               	goto	i1l2518
  9271     0201  307F               	movlw	127
  9272     0202  0020               	movlb	0	; select bank0
  9273     0203  00B2               	movwf	___flmul@prod+3
  9274     0204  3080               	movlw	128
  9275     0205  00B1               	movwf	___flmul@prod+2
  9276     0206  3000               	movlw	0
  9277     0207  00B0               	movwf	___flmul@prod+1
  9278     0208  3000               	movlw	0
  9279     0209  00AF               	movwf	___flmul@prod
  9280     020A  2A31               	goto	i1l1327
  9281     020B                     i1l2518:
  9282     020B  0020               	movlb	0	; select bank0
  9283     020C  0834               	movf	___flmul@temp+1,w
  9284     020D  3A80               	xorlw	128
  9285     020E  00F9               	movwf	??___flmul
  9286     020F  3080               	movlw	128
  9287     0210  0279               	subwf	??___flmul,w
  9288     0211  1D03               	skipz
  9289     0212  2A15               	goto	u191_25
  9290     0213  3001               	movlw	1
  9291     0214  0233               	subwf	___flmul@temp,w
  9292     0215                     u191_25:
  9293     0215  1803               	skipnc
  9294     0216  2A22               	goto	i1l2524
  9295     0217  3000               	movlw	0
  9296     0218  0020               	movlb	0	; select bank0
  9297     0219  00B2               	movwf	___flmul@prod+3
  9298     021A  3000               	movlw	0
  9299     021B  00B1               	movwf	___flmul@prod+2
  9300     021C  3000               	movlw	0
  9301     021D  00B0               	movwf	___flmul@prod+1
  9302     021E  3000               	movlw	0
  9303     021F  00AF               	movwf	___flmul@prod
  9304     0220  01A8               	clrf	___flmul@sign
  9305     0221  2A31               	goto	i1l1327
  9306     0222                     i1l2524:
  9307     0222  0020               	movlb	0	; select bank0
  9308     0223  0833               	movf	___flmul@temp,w
  9309     0224  00AE               	movwf	___flmul@bexp
  9310     0225  30FF               	movlw	255
  9311     0226  05AF               	andwf	___flmul@prod,f
  9312     0227  30FF               	movlw	255
  9313     0228  05B0               	andwf	___flmul@prod+1,f
  9314     0229  307F               	movlw	127
  9315     022A  05B1               	andwf	___flmul@prod+2,f
  9316     022B  3000               	movlw	0
  9317     022C  05B2               	andwf	___flmul@prod+3,f
  9318     022D  182E               	btfsc	___flmul@bexp,0
  9319     022E  17B1               	bsf	___flmul@prod+2,7
  9320     022F  362E               	lsrf	___flmul@bexp,w
  9321     0230  00B2               	movwf	___flmul@prod+3
  9322     0231                     i1l1327:
  9323     0231  0828               	movf	___flmul@sign,w
  9324     0232  00F9               	movwf	??___flmul
  9325     0233  0879               	movf	??___flmul,w
  9326     0234  04B2               	iorwf	___flmul@prod+3,f
  9327     0235  0832               	movf	___flmul@prod+3,w
  9328     0236  00A3               	movwf	?___flmul+3
  9329     0237  0831               	movf	___flmul@prod+2,w
  9330     0238  00A2               	movwf	?___flmul+2
  9331     0239  0830               	movf	___flmul@prod+1,w
  9332     023A  00A1               	movwf	?___flmul+1
  9333     023B  082F               	movf	___flmul@prod,w
  9334     023C  00A0               	movwf	?___flmul
  9335     023D  0008               	return
  9336     023E                     __end_of___flmul:
  9337                           
  9338                           	psect	text51
  9339     0CDA                     __ptext51:	
  9340 ;; *************** function __Umul8_16 *****************
  9341 ;; Defined at:
  9342 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul8_16.c"
  9343 ;; Parameters:    Size  Location     Type
  9344 ;;  multiplier      1    wreg     unsigned char 
  9345 ;;  multiplicand    1    0[COMMON] unsigned char 
  9346 ;; Auto vars:     Size  Location     Type
  9347 ;;  multiplier      1    8[COMMON] unsigned char 
  9348 ;;  word_mpld       2    6[COMMON] unsigned short 
  9349 ;;  product         2    4[COMMON] unsigned short 
  9350 ;; Return value:  Size  Location     Type
  9351 ;;                  2    0[COMMON] unsigned int 
  9352 ;; Registers used:
  9353 ;;		wreg, status,2, status,0
  9354 ;; Tracked objects:
  9355 ;;		On entry : 1F/0
  9356 ;;		On exit  : 1F/0
  9357 ;;		Unchanged: 1F/0
  9358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9359 ;;      Params:         2       0       0       0       0       0
  9360 ;;      Locals:         5       0       0       0       0       0
  9361 ;;      Temps:          2       0       0       0       0       0
  9362 ;;      Totals:         9       0       0       0       0       0
  9363 ;;Total ram usage:        9 bytes
  9364 ;; Hardware stack levels used: 1
  9365 ;; This function calls:
  9366 ;;		Nothing
  9367 ;; This function is called by:
  9368 ;;		___flmul
  9369 ;; This function uses a non-reentrant model
  9370 ;;
  9371                           
  9372     0CDA                     __Umul8_16:	
  9373                           ;psect for function __Umul8_16
  9374                           
  9375                           
  9376                           ;incstack = 0
  9377                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  9378                           ;__Umul8_16@multiplier stored from wreg
  9379     0CDA  00F8               	movwf	__Umul8_16@multiplier
  9380     0CDB  01F4               	clrf	__Umul8_16@product
  9381     0CDC  01F5               	clrf	__Umul8_16@product+1
  9382     0CDD  0870               	movf	__Umul8_16@multiplicand,w
  9383     0CDE  00F2               	movwf	??__Umul8_16
  9384     0CDF  01F3               	clrf	??__Umul8_16+1
  9385     0CE0  0872               	movf	??__Umul8_16,w
  9386     0CE1  00F6               	movwf	__Umul8_16@word_mpld
  9387     0CE2  0873               	movf	??__Umul8_16+1,w
  9388     0CE3  00F7               	movwf	__Umul8_16@word_mpld+1
  9389     0CE4                     i1l2270:
  9390     0CE4  1C78               	btfss	__Umul8_16@multiplier,0
  9391     0CE5  2CEA               	goto	i1l1334
  9392     0CE6  0876               	movf	__Umul8_16@word_mpld,w
  9393     0CE7  07F4               	addwf	__Umul8_16@product,f
  9394     0CE8  0877               	movf	__Umul8_16@word_mpld+1,w
  9395     0CE9  3DF5               	addwfc	__Umul8_16@product+1,f
  9396     0CEA                     i1l1334:
  9397     0CEA  3001               	movlw	1
  9398     0CEB                     u142_25:
  9399     0CEB  35F6               	lslf	__Umul8_16@word_mpld,f
  9400     0CEC  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  9401     0CED  0B89               	decfsz	9,f
  9402     0CEE  2CEB               	goto	u142_25
  9403     0CEF  1003               	clrc
  9404     0CF0  0CF8               	rrf	__Umul8_16@multiplier,f
  9405     0CF1  0878               	movf	__Umul8_16@multiplier,w
  9406     0CF2  1D03               	btfss	3,2
  9407     0CF3  2CE4               	goto	i1l2270
  9408     0CF4  0875               	movf	__Umul8_16@product+1,w
  9409     0CF5  00F1               	movwf	?__Umul8_16+1
  9410     0CF6  0874               	movf	__Umul8_16@product,w
  9411     0CF7  00F0               	movwf	?__Umul8_16
  9412     0CF8  0008               	return
  9413     0CF9                     __end_of__Umul8_16:
  9414                           
  9415                           	psect	text52
  9416     0B88                     __ptext52:	
  9417 ;; *************** function _TMR1_Reload *****************
  9418 ;; Defined at:
  9419 ;;		line 146 in file "mcc_generated_files/tmr1.c"
  9420 ;; Parameters:    Size  Location     Type
  9421 ;;		None
  9422 ;; Auto vars:     Size  Location     Type
  9423 ;;		None
  9424 ;; Return value:  Size  Location     Type
  9425 ;;                  1    wreg      void 
  9426 ;; Registers used:
  9427 ;;		wreg, status,2, status,0, pclath, cstack
  9428 ;; Tracked objects:
  9429 ;;		On entry : 1F/0
  9430 ;;		On exit  : 1F/0
  9431 ;;		Unchanged: 0/0
  9432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9433 ;;      Params:         0       0       0       0       0       0
  9434 ;;      Locals:         0       0       0       0       0       0
  9435 ;;      Temps:          0       0       0       0       0       0
  9436 ;;      Totals:         0       0       0       0       0       0
  9437 ;;Total ram usage:        0 bytes
  9438 ;; Hardware stack levels used: 1
  9439 ;; Hardware stack levels required when called: 1
  9440 ;; This function calls:
  9441 ;;		_TMR1_WriteTimer
  9442 ;; This function is called by:
  9443 ;;		_mede_height
  9444 ;; This function uses a non-reentrant model
  9445 ;;
  9446                           
  9447     0B88                     _TMR1_Reload:	
  9448                           ;psect for function _TMR1_Reload
  9449                           
  9450                           
  9451                           ;mcc_generated_files/tmr1.c: 148:     TMR1_WriteTimer(timer1ReloadVal);
  9452                           
  9453                           ;incstack = 0
  9454                           ; Regs used in _TMR1_Reload: [wreg+status,2+status,0+pclath+cstack]
  9455     0B88  0021               	movlb	1	; select bank1
  9456     0B89  0844               	movf	(_timer1ReloadVal+1)^(0+128),w	;volatile
  9457     0B8A  00F1               	movwf	TMR1_WriteTimer@timerVal+1
  9458     0B8B  0843               	movf	_timer1ReloadVal^(0+128),w	;volatile
  9459     0B8C  00F0               	movwf	TMR1_WriteTimer@timerVal
  9460     0B8D  318C  240C         	fcall	_TMR1_WriteTimer
  9461     0B8F  0008               	return
  9462     0B90                     __end_of_TMR1_Reload:
  9463                           
  9464                           	psect	text53
  9465     0C0C                     __ptext53:	
  9466 ;; *************** function _TMR1_WriteTimer *****************
  9467 ;; Defined at:
  9468 ;;		line 124 in file "mcc_generated_files/tmr1.c"
  9469 ;; Parameters:    Size  Location     Type
  9470 ;;  timerVal        2    0[COMMON] unsigned short 
  9471 ;; Auto vars:     Size  Location     Type
  9472 ;;		None
  9473 ;; Return value:  Size  Location     Type
  9474 ;;                  1    wreg      void 
  9475 ;; Registers used:
  9476 ;;		wreg
  9477 ;; Tracked objects:
  9478 ;;		On entry : 1F/1
  9479 ;;		On exit  : 1F/0
  9480 ;;		Unchanged: 0/0
  9481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9482 ;;      Params:         2       0       0       0       0       0
  9483 ;;      Locals:         0       0       0       0       0       0
  9484 ;;      Temps:          0       0       0       0       0       0
  9485 ;;      Totals:         2       0       0       0       0       0
  9486 ;;Total ram usage:        2 bytes
  9487 ;; Hardware stack levels used: 1
  9488 ;; This function calls:
  9489 ;;		Nothing
  9490 ;; This function is called by:
  9491 ;;		_TMR1_Reload
  9492 ;; This function uses a non-reentrant model
  9493 ;;
  9494                           
  9495     0C0C                     _TMR1_WriteTimer:	
  9496                           ;psect for function _TMR1_WriteTimer
  9497                           
  9498                           
  9499                           ;mcc_generated_files/tmr1.c: 124: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 125: {;mcc_generated_files/tmr1.c: 126:     if (T1CONbits.nT1SYNC == 1)
  9500                           
  9501                           ;incstack = 0
  9502                           ; Regs used in _TMR1_WriteTimer: [wreg]
  9503     0C0C  0020               	movlb	0	; select bank0
  9504     0C0D  1D18               	btfss	24,2	;volatile
  9505     0C0E  2C16               	goto	i1l2264
  9506                           
  9507                           ;mcc_generated_files/tmr1.c: 127:     {;mcc_generated_files/tmr1.c: 129:         T1CONbi
      +                          ts.TMR1ON = 0;
  9508     0C0F  1018               	bcf	24,0	;volatile
  9509                           
  9510                           ;mcc_generated_files/tmr1.c: 132:         TMR1H = (uint8_t)(timerVal >> 8);
  9511     0C10  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  9512     0C11  0097               	movwf	23	;volatile
  9513                           
  9514                           ;mcc_generated_files/tmr1.c: 133:         TMR1L = (uint8_t)timerVal;
  9515     0C12  0870               	movf	TMR1_WriteTimer@timerVal,w
  9516     0C13  0096               	movwf	22	;volatile
  9517                           
  9518                           ;mcc_generated_files/tmr1.c: 136:         T1CONbits.TMR1ON =1;
  9519     0C14  1418               	bsf	24,0	;volatile
  9520                           
  9521                           ;mcc_generated_files/tmr1.c: 137:     }
  9522     0C15  0008               	return
  9523     0C16                     i1l2264:
  9524                           
  9525                           ;mcc_generated_files/tmr1.c: 139:     {;mcc_generated_files/tmr1.c: 141:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
  9526     0C16  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  9527     0C17  0097               	movwf	23	;volatile
  9528                           
  9529                           ;mcc_generated_files/tmr1.c: 142:         TMR1L = (uint8_t)timerVal;
  9530     0C18  0870               	movf	TMR1_WriteTimer@timerVal,w
  9531     0C19  0096               	movwf	22	;volatile
  9532     0C1A  0008               	return
  9533     0C1B                     __end_of_TMR1_WriteTimer:
  9534                           
  9535                           	psect	text54
  9536     0C5A                     __ptext54:	
  9537 ;; *************** function _TMR1_ReadTimer *****************
  9538 ;; Defined at:
  9539 ;;		line 109 in file "mcc_generated_files/tmr1.c"
  9540 ;; Parameters:    Size  Location     Type
  9541 ;;		None
  9542 ;; Auto vars:     Size  Location     Type
  9543 ;;  readVal         2    7[COMMON] unsigned short 
  9544 ;;  readValLow      1   10[COMMON] unsigned char 
  9545 ;;  readValHigh     1    9[COMMON] unsigned char 
  9546 ;; Return value:  Size  Location     Type
  9547 ;;                  2    0[COMMON] unsigned short 
  9548 ;; Registers used:
  9549 ;;		wreg
  9550 ;; Tracked objects:
  9551 ;;		On entry : 1F/0
  9552 ;;		On exit  : 1F/0
  9553 ;;		Unchanged: 0/0
  9554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9555 ;;      Params:         2       0       0       0       0       0
  9556 ;;      Locals:         4       0       0       0       0       0
  9557 ;;      Temps:          5       0       0       0       0       0
  9558 ;;      Totals:        11       0       0       0       0       0
  9559 ;;Total ram usage:       11 bytes
  9560 ;; Hardware stack levels used: 1
  9561 ;; This function calls:
  9562 ;;		Nothing
  9563 ;; This function is called by:
  9564 ;;		_mede_height
  9565 ;; This function uses a non-reentrant model
  9566 ;;
  9567                           
  9568     0C5A                     _TMR1_ReadTimer:	
  9569                           ;psect for function _TMR1_ReadTimer
  9570                           
  9571                           
  9572                           ;mcc_generated_files/tmr1.c: 111:     uint16_t readVal;;mcc_generated_files/tmr1.c: 112:
      +                               uint8_t readValHigh;;mcc_generated_files/tmr1.c: 113:     uint8_t readValLow;;mcc_g
      +                          enerated_files/tmr1.c: 116:     readValLow = TMR1L;
  9573                           
  9574                           ;incstack = 0
  9575                           ; Regs used in _TMR1_ReadTimer: [wreg]
  9576     0C5A  0816               	movf	22,w	;volatile
  9577     0C5B  00FA               	movwf	TMR1_ReadTimer@readValLow
  9578                           
  9579                           ;mcc_generated_files/tmr1.c: 117:     readValHigh = TMR1H;
  9580     0C5C  0817               	movf	23,w	;volatile
  9581     0C5D  00F9               	movwf	TMR1_ReadTimer@readValHigh
  9582                           
  9583                           ;mcc_generated_files/tmr1.c: 119:     readVal = ((uint16_t)readValHigh << 8) | readValLo
      +                          w;
  9584     0C5E  087A               	movf	TMR1_ReadTimer@readValLow,w
  9585     0C5F  00F2               	movwf	??_TMR1_ReadTimer
  9586     0C60  01F3               	clrf	??_TMR1_ReadTimer+1
  9587     0C61  0879               	movf	TMR1_ReadTimer@readValHigh,w
  9588     0C62  00F4               	movwf	??_TMR1_ReadTimer+2
  9589     0C63  01F5               	clrf	??_TMR1_ReadTimer+3
  9590     0C64  0874               	movf	??_TMR1_ReadTimer+2,w
  9591     0C65  00F5               	movwf	??_TMR1_ReadTimer+3
  9592     0C66  01F4               	clrf	??_TMR1_ReadTimer+2
  9593     0C67  0872               	movf	??_TMR1_ReadTimer,w
  9594     0C68  0474               	iorwf	??_TMR1_ReadTimer+2,w
  9595     0C69  00F7               	movwf	TMR1_ReadTimer@readVal
  9596     0C6A  0873               	movf	??_TMR1_ReadTimer+1,w
  9597     0C6B  0475               	iorwf	??_TMR1_ReadTimer+3,w
  9598     0C6C  00F8               	movwf	TMR1_ReadTimer@readVal+1
  9599                           
  9600                           ;mcc_generated_files/tmr1.c: 121:     return readVal;
  9601     0C6D  0878               	movf	TMR1_ReadTimer@readVal+1,w
  9602     0C6E  00F1               	movwf	?_TMR1_ReadTimer+1
  9603     0C6F  0877               	movf	TMR1_ReadTimer@readVal,w
  9604     0C70  00F0               	movwf	?_TMR1_ReadTimer
  9605     0C71  0008               	return
  9606     0C72                     __end_of_TMR1_ReadTimer:
  9607                           
  9608                           	psect	text55
  9609     0B43                     __ptext55:	
  9610 ;; *************** function _PIN_MANAGER_IOC *****************
  9611 ;; Defined at:
  9612 ;;		line 98 in file "mcc_generated_files/pin_manager.c"
  9613 ;; Parameters:    Size  Location     Type
  9614 ;;		None
  9615 ;; Auto vars:     Size  Location     Type
  9616 ;;		None
  9617 ;; Return value:  Size  Location     Type
  9618 ;;                  1    wreg      void 
  9619 ;; Registers used:
  9620 ;;		None
  9621 ;; Tracked objects:
  9622 ;;		On entry : 0/0
  9623 ;;		On exit  : 0/0
  9624 ;;		Unchanged: 0/0
  9625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9626 ;;      Params:         0       0       0       0       0       0
  9627 ;;      Locals:         0       0       0       0       0       0
  9628 ;;      Temps:          0       0       0       0       0       0
  9629 ;;      Totals:         0       0       0       0       0       0
  9630 ;;Total ram usage:        0 bytes
  9631 ;; Hardware stack levels used: 1
  9632 ;; This function calls:
  9633 ;;		Nothing
  9634 ;; This function is called by:
  9635 ;;		_INTERRUPT_InterruptManager
  9636 ;; This function uses a non-reentrant model
  9637 ;;
  9638                           
  9639     0B43                     _PIN_MANAGER_IOC:	
  9640                           ;psect for function _PIN_MANAGER_IOC
  9641                           
  9642                           
  9643                           ;incstack = 0
  9644                           ; Regs used in _PIN_MANAGER_IOC: []
  9645     0B43  0008               	return
  9646     0B44                     __end_of_PIN_MANAGER_IOC:
  9647     007E                     btemp	set	126	;btemp
  9648     007E                     int$flags	set	126
  9649     007E                     wtemp0	set	126
  9650                           
  9651                           	psect	config
  9652                           
  9653                           ;Config register CONFIG1 @ 0x8007
  9654                           ;	Oscillator Selection
  9655                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  9656                           ;	Watchdog Timer Enable
  9657                           ;	WDTE = OFF, WDT disabled
  9658                           ;	Power-up Timer Enable
  9659                           ;	PWRTE = OFF, PWRT disabled
  9660                           ;	MCLR Pin Function Select
  9661                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  9662                           ;	Flash Program Memory Code Protection
  9663                           ;	CP = OFF, Program memory code protection is disabled
  9664                           ;	Data Memory Code Protection
  9665                           ;	CPD = OFF, Data memory code protection is disabled
  9666                           ;	Brown-out Reset Enable
  9667                           ;	BOREN = ON, Brown-out Reset enabled
  9668                           ;	Clock Out Enable
  9669                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  9670                           ;	Internal/External Switchover
  9671                           ;	IESO = ON, Internal/External Switchover mode is enabled
  9672                           ;	Fail-Safe Clock Monitor Enable
  9673                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  9674     8007                     	org	32775
  9675     8007  3FE4               	dw	16356
  9676                           
  9677                           ;Config register CONFIG2 @ 0x8008
  9678                           ;	Flash Memory Self-Write Protection
  9679                           ;	WRT = OFF, Write protection off
  9680                           ;	PLL Enable
  9681                           ;	PLLEN = OFF, 4x PLL disabled
  9682                           ;	Stack Overflow/Underflow Reset Enable
  9683                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  9684                           ;	Brown-out Reset Voltage Selection
  9685                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  9686                           ;	In-Circuit Debugger Mode
  9687                           ;	DEBUG = 0x1, unprogrammed default
  9688                           ;	Low-Voltage Programming Enable
  9689                           ;	LVP = ON, Low-voltage programming enabled
  9690     8008                     	org	32776
  9691     8008  3EFF               	dw	16127

Data Sizes:
    Strings     0
    Constant    204
    Data        23
    BSS         74
    Persistent  40
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     51      80
    BANK1            80     34      79
    BANK2            80      0      31
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), NULL(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), NULL(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), NULL(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    TMR1_GateInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> mede_height(), TMR1_DefaultGateInterruptHandler(), NULL(), 

    TMR1_SetGateInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> mede_height(), TMR1_DefaultGateInterruptHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _mede_height->___flmul
    i1___fltol->___flmul
    ___flmul->__Umul8_16
    _TMR1_Reload->_TMR1_WriteTimer

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _TMR1_GATE_ISR->_mede_height
    _mede_height->___xxtofl
    i1___fltol->___flmul
    ___xxtofl->i1___fltol

Critical Paths under _main in BANK1

    _setaPorta->_daUmPasso
    _fluxpos->_daUmPasso
    _daUmPasso->_definePassoMotor
    _envia_Tx->___fltol
    _controlchoose->_pwmcontrol
    _pwmcontrol->___atdiv
    _fluxcontrol->___atdiv
    ___atdiv->___tmul
    _analisa_Rx->_EPWM1_LoadDutyValue
    _TMR1_Initialize->_TMR1_SetGateInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    7024
                                             33 BANK1      1     1      0
                  _ADC_GetConversion
                        _EUSART_Read
                 _EUSART_is_rx_ready
                  _SYSTEM_Initialize
                     _TMR0_ReadTimer
       _TMR1_SetGateInterruptHandler
                     _TMR4_StopTimer
            _TMR6_LoadPeriodRegister
                    _TMR6_WriteTimer
                         _analisa_Rx
                      _controlchoose
                           _envia_Tx
                            _fluxpos
                          _setaPorta
 ---------------------------------------------------------------------------------
 (1) _setaPorta                                            1     1      0     306
                                              4 BANK1      1     1      0
               _CMP1_GetOutputStatus
                          _daUmPasso
 ---------------------------------------------------------------------------------
 (2) _CMP1_GetOutputStatus                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _fluxpos                                              4     4      0     306
                                              4 BANK1      4     4      0
                          _daUmPasso
 ---------------------------------------------------------------------------------
 (2) _daUmPasso                                            1     1      0     306
                                              3 BANK1      1     1      0
                   _definePassoMotor
 ---------------------------------------------------------------------------------
 (3) _definePassoMotor                                     3     2      1     240
                                              0 BANK1      3     2      1
 ---------------------------------------------------------------------------------
 (1) _envia_Tx                                             0     0      0     427
                       _EUSART_Write
                            ___fltol
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     405
                                              0 BANK1     10     6      4
 ---------------------------------------------------------------------------------
 (2) _EUSART_Write                                         1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _controlchoose                                        0     0      0    4982
                    _TMR4_StartTimer
                        _fluxcontrol
                         _pwmcontrol
 ---------------------------------------------------------------------------------
 (2) _pwmcontrol                                          12    12      0    2627
                                             21 BANK1     12    12      0
                _EPWM1_LoadDutyValue
                            ___atdiv
                             ___tmul
 ---------------------------------------------------------------------------------
 (2) _fluxcontrol                                          6     6      0    2355
                                             21 BANK1      6     6      0
                            ___atdiv
                             ___tmul
 ---------------------------------------------------------------------------------
 (3) ___tmul                                               9     3      6    1596
                                              0 BANK1      9     3      6
 ---------------------------------------------------------------------------------
 (3) ___atdiv                                             12     6      6     756
                                              9 BANK1     12     6      6
                             ___tmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _TMR4_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _analisa_Rx                                           2     2      0     272
                                              4 BANK1      2     2      0
                _EPWM1_LoadDutyValue
 ---------------------------------------------------------------------------------
 (3) _EPWM1_LoadDutyValue                                  4     2      2     272
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (1) _TMR6_WriteTimer                                      1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _TMR6_LoadPeriodRegister                              1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _TMR4_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR0_ReadTimer                                       1     1      0      23
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     468
                     _ADC_Initialize
                    _CMP1_Initialize
                     _DAC_Initialize
                   _EPWM1_Initialize
                  _EUSART_Initialize
                     _FVR_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
                    _TMR6_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     174
       _TMR1_SetGateInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetGateInterruptHandler                         2     0      2     174
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     294
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _EPWM1_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DAC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CMP1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_is_rx_ready                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Read                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion                                    4     2      2      22
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0    3722
                    _PIN_MANAGER_IOC
                      _TMR1_GATE_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR1_GATE_ISR                                        0     0      0    3722
                                NULL *
   _TMR1_DefaultGateInterruptHandler *
                        _mede_height *
 ---------------------------------------------------------------------------------
 (6) _mede_height                                          6     6      0    3722
                                             45 BANK0      6     6      0
                     _TMR1_ReadTimer
                        _TMR1_Reload
                            ___flmul
                            ___lwdiv
                           ___xxtofl
                          i1___fltol
 ---------------------------------------------------------------------------------
 (7) i1___fltol                                           10     6      4     281
                                             21 BANK0     10     6      4
                            ___flmul (ARG)
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (7) ___xxtofl                                            14    10      4     474
                                             31 BANK0     14    10      4
                          i1___fltol (ARG)
 ---------------------------------------------------------------------------------
 (7) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (7) ___flmul                                             26    18      8    2418
                                              9 COMMON     5     5      0
                                              0 BANK0     21    13      8
                          __Umul8_16
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (8) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (7) _TMR1_Reload                                          0     0      0     166
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (8) _TMR1_WriteTimer                                      2     0      2     166
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (7) _TMR1_ReadTimer                                      11     9      2      69
                                              0 COMMON    11     9      2
 ---------------------------------------------------------------------------------
 (6) _TMR1_DefaultGateInterruptHandler                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _PIN_MANAGER_IOC                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion
   _EUSART_Read
   _EUSART_is_rx_ready
   _SYSTEM_Initialize
     _ADC_Initialize
     _CMP1_Initialize
     _DAC_Initialize
     _EPWM1_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _FVR_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
     _TMR1_Initialize
       _TMR1_SetGateInterruptHandler
     _TMR2_Initialize
     _TMR4_Initialize
     _TMR6_Initialize
     _WDT_Initialize
   _TMR0_ReadTimer
   _TMR1_SetGateInterruptHandler
   _TMR4_StopTimer
   _TMR6_LoadPeriodRegister
   _TMR6_WriteTimer
   _analisa_Rx
     _EPWM1_LoadDutyValue
   _controlchoose
     _TMR4_StartTimer
     _fluxcontrol
       ___atdiv
         ___tmul (ARG)
       ___tmul
     _pwmcontrol
       _EPWM1_LoadDutyValue
       ___atdiv
       ___tmul
   _envia_Tx
     _EUSART_Write
     ___fltol
   _fluxpos
     _daUmPasso
       _definePassoMotor
   _setaPorta
     _CMP1_GetOutputStatus
     _daUmPasso

 _INTERRUPT_InterruptManager (ROOT)
   _PIN_MANAGER_IOC
   _TMR1_GATE_ISR
     NULL(Fake) *
     _TMR1_DefaultGateInterruptHandler *
     _mede_height *
       _TMR1_ReadTimer
       _TMR1_Reload
         _TMR1_WriteTimer
       ___flmul
         __Umul8_16
         ___lwdiv (ARG)
       ___lwdiv
       ___xxtofl
         i1___fltol (ARG)
           ___flmul (ARG)
           ___lwdiv (ARG)
       i1___fltol

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      CC       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     33      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     22      4F       8       98.8%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      1F      10       38.8%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      CC      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Thu Sep 05 17:01:16 2024

                            ??_CMP1_Initialize 00CD                               ___atdiv@quotient 00DF  
                                           _dc 00B3                         __end_of_FVR_Initialize 0B47  
                                           _se 0120                                _timer0ReloadVal 006C  
                          __Umul8_16@word_mpld 0076                                            l240 0BF2  
                                          l333 0C84                                            l247 0BC1  
                                          l601 0350                                            l621 0CB9  
                                          l703 0DCD                                            l712 0DD3  
                                          l721 0DD8                                            l709 0DD1  
                                          l653 0DA0                                            l663 0DA5  
                                          l672 0DAB                                            l681 0DB0  
                                          l588 043F                                            l589 0449  
                                          l693 0DC8                                            l669 0DA9  
                                          l687 0DB4                                            _PR2 001B  
                                          _PR4 0416                                            _PR6 041D  
                              _timer1ReloadVal 00C3                                            _kif 0130  
                                          _kdp 0127                                            _kip 012A  
                                          _kpf 0133                                            _vRx 00B5  
                                          _pas 006A                                            _vTx 00B7  
                                          _kpp 012D                 ?_EUSART_SetFramingErrorHandler 00CD  
                                 i1___fltol@f1 0035                                   ?_mede_height 0070  
                              _TMR2_Initialize 0BB8                                            wreg 0009  
                                 ___flmul@aexp 0029                                   ___flmul@bexp 002E  
     __end_of_TMR1_DefaultGateInterruptHandler 0003             ??_TMR1_DefaultGateInterruptHandler 0070  
            ?_TMR1_DefaultGateInterruptHandler 0070               _TMR1_DefaultGateInterruptHandler 0002  
                                 ___flmul@sign 0028                                   ___flmul@temp 0033  
                                 ___flmul@prod 002F                                   ?_EUSART_Read 0070  
                                 ___fltol@exp1 00D6                                           l1035 0EC4  
                                         l1119 0E9B                                           l3002 05D5  
                                         l3010 05DC                                           l2310 0DDE  
                                         l2302 0DB6                                           l2312 0DEC  
                                         l2304 0DC4                                           l2322 07E5  
                                         l3114 0714                                           l2340 0ED2  
                                         l2350 0EEC                                           l2318 07DD  
                                         l3128 0733                                           l3080 06E0  
                                         l2362 0F0F                                           l3090 06F2  
                                         l3066 06BF                                           l3058 06B5  
                                         l2348 0EDF                                           l2366 0F1A  
                                         l2358 0F05                                           l3078 06D5  
                                         l2800 0D13                                           l3088 06C9  
                                         l3098 06FF                                           l2820 0E5D  
                                         l2742 03DE                                           l2752 0439  
                                         l2744 03E5                                           l2736 03A1  
                                         l2840 0E89                                           l2824 0E66  
                                         l2912 0F74                                           l2738 03AE  
                                         l2770 02A7                                           l2762 0272  
                                         l2850 0EA8                                           l2842 0E97  
                                         l2756 0445                                           l2748 03F7  
                                         l2764 027F                                           l2916 0F80  
                                         l2908 0F54                                           l2950 0542  
                                         l2942 0522                                           l2782 0356  
                                         l2774 02B9                                           l2934 0C23  
                                         l2926 0CA5                                           l2960 0557  
                                         l2784 035A                                           l2768 02A0  
                                         l2778 034A                                           l2938 0C2A  
                                         l2794 0D06                                           l2876 0BFC  
                                         l2980 059D                                           l2972 0587  
                                         l2958 0554                                           l2798 0D0D  
                                         _LATA 010C                                           _LATB 010D  
                                         u2251 0248                                           u2252 0249  
                                         u1445 0CCF                                           u2181 0377  
                                         u2253 0250                                           u2405 0E8A  
                                         u2182 0378                                           u2254 0251  
                                         u2183 037F                                           u2184 0380  
                                         u1545 0EE2                                           u2513 0F4E  
                                         u2435 0E9F                                           u2523 0F6E  
                                         u1565 0EED                                           u1485 07E6  
                                         u1575 0EFC                                           u1495 07EC  
                                         u2375 0E6F                                           u2535 0F7A  
                                         u1585 0F06                                           u2545 0F86  
                                         u2807 0CB3                                           u2817 0C7F  
                                         u2797 0727                                           _TMR0 0015  
                                         _TMR2 001A                                           _TMR4 0415  
                                         _TMR6 041C                                           _WPUA 020C  
                                         _WPUB 020D                              ??_TMR6_WriteTimer 00CD  
                ?_TMR1_SetGateInterruptHandler 00CD                                           _main 06A6  
                                         _flux 005B                                           fsr0h 0005  
                                         fsr1h 0007                                           indf0 0000  
                                         fsr0l 0004                                           indf1 0001  
                                         fsr1l 0006                                           btemp 007E  
                                         start 0019                          ??_EPWM1_LoadDutyValue 00CF  
                      __end_of_TMR0_Initialize 0BD3                                ?_FVR_Initialize 0070  
                                ?_EUSART_Write 0070                  __end_of_OSCILLATOR_Initialize 0B88  
                                ___fltol@sign1 00D5                                          ?_main 0070  
                              __end_of___atdiv 0F21                                __end_of___flmul 023E  
                              __end_of___fltol 0EB7                                          _T1CON 0018  
                                        _T2CON 001C                                          _T4CON 0417  
                                        _T6CON 041E                                __end_of___lwdiv 0D9B  
                                        i1l180 0017                                          i1l174 000D  
                                        _RCREG 0199                                          _RCSTA 019D  
                                        _TMR1H 0017                                          _TMR1L 0016  
                                        _TRISA 008C                                          _TRISB 008D  
                                 ?_fluxcontrol 0070                                          _TXREG 019A  
                                        _TXSTA 019E                                _TMR4_Initialize 0BD3  
                      __end_of_PIN_MANAGER_IOC 0B44                                 _WDT_Initialize 0B4A  
                                        _error 00B0                      ??_TMR6_LoadPeriodRegister 00CD  
                                        _passo 00CA                                __end_of_fluxpos 0F8C  
                                _controlchoice 00CB                                  _controlchoose 0C1B  
                      __end_of_TMR1_Initialize 0CA5                                          pclath 000A  
                               i1___fltol@exp1 003E                                          status 0003  
                                        wtemp0 007E                               daUmPasso@sentido 00D0  
                              _TMR1_WriteTimer 0C0C                               ??_DAC_Initialize 00CD  
                 __end_of_CMP1_GetOutputStatus 0B52                                __initialization 001B  
                                 __end_of_main 0744                                 ??_EUSART_Write 00CD  
                      __end_of_TMR2_Initialize 0BC0                    ?_INTERRUPT_InterruptManager 0070  
                                       ??_main 00EE                         __end_of_WDT_Initialize 0B4E  
                              _TMR6_Initialize 0BDD              _EUSART_DefaultFramingErrorHandler 0000  
                                       _ADCON0 009D                                         _ADCON1 009E  
                   _EUSART_OverrunErrorHandler 0138                                 ?_controlchoose 0070  
                                       _ADRESH 009C                                         _ADRESL 009B  
                                       _CCPR1H 0292                                         _CCPR1L 0291  
                                       _ANSELA 018C                                         _ANSELB 018D  
                   __end_of_EUSART_is_rx_ready 0B57                                         _BORCON 0116  
                                       _T1GCON 0019                        TMR1_WriteTimer@timerVal 0070  
                                       i1l1119 0E3A                                         i1l1334 0CEA  
                                       i1l1327 0231                                         i1l2410 0057  
                                       i1l2500 01CB                                         i1l2412 0059  
                                       i1l1372 07A9                                         i1l1373 07B3  
                                       u200_25 07A1                                         i1l1365 0795  
                                       i1l2270 0CE4                                         i1l2430 007A  
                                       i1l2414 0061                                         i1l1359 0761  
                                       i1l2264 0C16                                         i1l2504 01CD  
                                       i1l2440 0090                                         i1l2432 0082  
                                       i1l2514 01F6                                         i1l2602 0E28  
                                       i1l2524 0222                                         i1l2428 0078  
                                       i1l2380 0D6F                                         i1l2612 0E47  
                                       i1l2604 0E36                                         i1l2518 020B  
                                       i1l2382 0D7B                                         i1l2542 0759  
                                       i1l2392 0D96                                         i1l2552 0772  
                                       i1l2562 07A7                                         i1l2554 0782  
                                       i1l2492 019D                                         i1l2388 0D8D  
                                       i1l2564 079A                                         i1l2548 0770  
                                       i1l2812 0615                                         i1l2494 01B4  
                                       i1l2582 0DFC                                         i1l2814 0651  
                                       i1l2576 07CE                                         i1l2586 0E05  
                                       u211_25 0E29                                         u204_25 07BB  
                                       u142_25 0CEB                                         u214_25 0E3E  
                                       u208_25 0E0E                                         u162_25 0D72  
                                       _FVRCON 0117                                         u180_25 01A0  
                                       u164_25 0D7C                                         u165_25 0D86  
                                       u190_25 01FF                                         u182_25 01A9  
                                       u166_25 0D8E                                         u191_25 0215  
                                       u176_25 00FD                                         u177_25 0126  
                                       u178_25 0170                                         u179_25 018C  
                                       u196_25 077B                                         u189_25 01E4  
                                       u198_25 078F                                         _OSCCON 0099  
                                       _SPBRGH 019C                                         _SPBRGL 019B  
                                       _WDTCON 0097                               __end_of___xxtofl 07D7  
                              _TMR4_StartTimer 07FD                          __end_of_TMR1_GATE_ISR 0BF2  
               ??_TMR1_SetGateInterruptHandler 00CF                                   _CCPTMRS0bits 029E  
                                 ?_TMR1_Reload 0070                                         ___tmul 07D7  
                                    ??___atdiv 00DC                                      ??___flmul 0079  
                                    ??___fltol 00D1                               __end_of_envia_Tx 1000  
                                    ??___lwdiv 0074                                         _height 00BF  
                                       _dinput 013C                               ?_TMR0_Initialize 0070  
                                       _errorp 005E                        __end_of_TMR4_Initialize 0BDD  
                                       _outpre 00A4                                         _output 00C1  
                            __end_ofi1___fltol 0E56                                      ??_fluxpos 00D1  
                              ?_WDT_Initialize 0070                                i1___fltol@sign1 003D  
                     ADC_GetConversion@channel 00D0   TMR1_SetGateInterruptHandler@InterruptHandler 00CD  
                             ?_PIN_MANAGER_IOC 0070                        __end_of_TMR1_WriteTimer 0C1B  
                             ?_TMR1_Initialize 0070                                   ___xxtofl@arg 0049  
                                 ___xxtofl@exp 0048                              _SYSTEM_Initialize 0D3D  
                                 ___xxtofl@val 003F                        __end_of__initialization 003E  
                              _CMP1_Initialize 0B57                             ?_SYSTEM_Initialize 0070  
                                   ___fltol@f1 00CD                              ?_EPWM1_Initialize 0070  
                               __pcstackCOMMON 0070                                   __pidataBANK0 0003  
                                 __pidataBANK2 0C2D                            ??_SYSTEM_Initialize 00CF  
                           ??_EPWM1_Initialize 00CD                               ?_TMR2_Initialize 0070  
                      __end_of_TMR6_Initialize 0BE7                                 _OPTION_REGbits 0095  
                              _TMR6_WriteTimer 0B6F                                ??_controlchoose 00EE  
              ??_EUSART_SetOverrunErrorHandler 00CF                           _CMP1_GetOutputStatus 0B4E  
                      __end_of_TMR4_StartTimer 0800                      __end_of_SYSTEM_Initialize 0D67  
                                   __pbssBANK0 0053                                     __pbssBANK1 00A0  
                                   __pbssBANK2 013C                           __end_of_EUSART_Write 0BC9  
                                   _analisa_Rx 0521                              __end_of__Umul8_16 0CF9  
                             ??_FVR_Initialize 00CD                                     __pmaintext 06A6  
                                      ?___tmul 00CD                                     __pintentry 0004  
                                      _DACCON0 0118                                        _DACCON1 0119  
                                      _CM1CON0 0111                                        _CM1CON1 0112  
                                      _CCP1CON 0293                                        _ECCP1AS 0295  
                                      _BAUDCON 019F                               ?_TMR4_Initialize 0070  
                            __end_of_daUmPasso 0D19                                        _APFCON0 011D  
                                      _APFCON1 011E                                     _avg_height 0065  
                             _definePassoMotor 0D9B                                      ?___xxtofl 003F  
                        ?_CMP1_GetOutputStatus 0070                                        _OSCTUNE 0098  
                                      _PWM1CON 0294                        __end_of_CMP1_Initialize 0B5D  
                     ??_EUSART_SetErrorHandler 00CF                               ?_TMR1_WriteTimer 0070  
                       definePassoMotor@passom 00CF                                      ?_envia_Tx 0070  
                  __end_of_EPWM1_LoadDutyValue 0CDA                                     _first_read 006F  
                         _ADC_InterruptHandler 0067                                        ___atdiv 0EB7  
                                      ___flmul 0042                                        ___fltol 0E56  
                                      ___lwdiv 0D67                        __end_of_TMR6_WriteTimer 0B75  
                                      _ballset 00AA                               ?_TMR6_Initialize 0070  
                     TMR1_ReadTimer@readValLow 007A                                        __ptext1 0CA5  
                                      __ptext2 0B4E                                        __ptext3 0F21  
                                      __ptext4 0CF9                                        __ptext5 0D9B  
                                      __ptext6 0F8C                                        __ptext7 0E56  
                                      __ptext8 0BC0                                        __ptext9 0C1B  
                    TMR1_ReadTimer@readValHigh 0079                                      _T1CONbits 0018  
                                      _countRx 00C7                          _OSCILLATOR_Initialize 0B81  
                                      _fluxpos 0F21                                     ??___xxtofl 0043  
                                    _CMOUTbits 0115                                      _T4CONbits 0417  
                     ??_PIN_MANAGER_Initialize 00CD                                        _sentido 006B  
                                      clrloop0 0B76                               ?_TMR4_StartTimer 0070  
                                   _passo_ctrl 00C8                           end_of_initialization 003E  
                                   ??_envia_Tx 00D7          __end_of_EUSART_SetOverrunErrorHandler 0BB0  
                _EUSART_SetOverrunErrorHandler 0BA8                              __end_of_setaPorta 0CBF  
                                      init_ram 0B7B                                        initloop 0B7C  
                                  ?_analisa_Rx 0070                              _EUSART_Initialize 0D19  
                           ?_EUSART_Initialize 0070                          TMR0_ReadTimer@readVal 00CD  
                                    _RCSTAbits 019D                             _EUSART_is_rx_ready 0B52  
                               _TMR0_ReadTimer 0B63                            ??_EUSART_Initialize 00CF  
                             ??_WDT_Initialize 00CD                            ?_EUSART_is_rx_ready 0070  
                       ??_CMP1_GetOutputStatus 00CD                                 _TMR1_ReadTimer 0C5A  
                     ?_TMR6_LoadPeriodRegister 0070                                  ___xxtofl@sign 0047  
                                    i1___fltol 0DF5                               ?_CMP1_Initialize 0070  
                                   _pwmcontrol 023E                                    ___flmul@grs 002A  
                    __end_of_EUSART_Initialize 0D3D                           ??_EUSART_is_rx_ready 00CD  
                       __end_of_TMR0_ReadTimer 0B69                     _EUSART_DefaultErrorHandler 0000  
                             ?_TMR6_WriteTimer 0070                                 __end_of___tmul 07FD  
                                 _EUSART_Write 0BC0                                 _ADC_Initialize 0B90  
                       ?_OSCILLATOR_Initialize 0070                         __end_of_TMR1_ReadTimer 0C72  
                                ??_mede_height 004D                            start_initialization 001B  
                                ??_EUSART_Read 00CD                                     ?i1___fltol 0035  
                 EPWM1_LoadDutyValue@dutyValue 00CD                       __end_of_definePassoMotor 0DF5  
               ?_EUSART_SetOverrunErrorHandler 00CD                                 _TMR4_StopTimer 0B47  
                   _EUSART_FramingErrorHandler 013A                                ?_TMR0_ReadTimer 0070  
                                     ??___tmul 00D3                         _EUSART_SetErrorHandler 0B98  
                       __end_of_ADC_Initialize 0B98                                      __Umul8_16 0CDA  
                                  __pdataBANK0 006F                                    __pdataBANK2 0120  
              __end_of_TMR6_LoadPeriodRegister 0B6F                                 ___tmul@product 00D3  
                              ?_TMR1_ReadTimer 0070                                  ??_fluxcontrol 00E2  
                                    ___flmul@a 0024                                      _daUmPasso 0CF9  
                                    ___flmul@b 0020                                      ___latbits 0001  
                                __pcstackBANK0 0020                                  __pcstackBANK1 00CD  
                        __end_of_controlchoose 0C2D                            __end_of_mede_height 06A6  
                                  ?_pwmcontrol 0070                            __end_of_EUSART_Read 0BFE  
                                    __pnvBANK0 006D                                      __pnvBANK2 0136  
                       __end_of_TMR4_StopTimer 0B4A                               ___lwdiv@dividend 0072  
                       _PIN_MANAGER_Initialize 0C43                                  _TMR1_GATE_ISR 0BE7  
                                     ?___atdiv 00D6                                       ?___flmul 0020  
                                     ?___fltol 00CD                                     ?__Umul8_16 0070  
                                     ?___lwdiv 0070                                ?_ADC_Initialize 0070  
                                    _fim_curso 00C9                   ??_INTERRUPT_InterruptManager 007E  
                                     ?_fluxpos 0070                                     ?_daUmPasso 0070  
                                    _nao_salva 00C5                                    ??i1___fltol 0039  
                             ___lwdiv@quotient 0075                                      _func_mode 0069  
                          __end_of_fluxcontrol 0455                              ??_TMR0_Initialize 00CD  
                                     _LATAbits 010C         EUSART_SetErrorHandler@interruptHandler 00CD  
                                 ??_analisa_Rx 00D1                                      clear_ram0 0B75  
                                     _PIE1bits 0091                              _eusartRxLastError 00CC  
                              ?_TMR4_StopTimer 0070                                      _setaPorta 0CA5  
                               ?_TMR1_GATE_ISR 0070                                       _PIR1bits 0011  
              ??_EUSART_SetFramingErrorHandler 00CF                                       _PIR3bits 0013  
                                ??_TMR1_Reload 0072                                      _sp_height 0061  
                                    _tempo_voo 0063              _EUSART_DefaultOverrunErrorHandler 0000  
                                     _PSTR1CON 0296                              ??_PIN_MANAGER_IOC 0070  
                    _TMR1_GateInterruptHandler 006D                              ??_TMR1_Initialize 00CF  
                                   _ADCON0bits 009D                                 _DAC_Initialize 0B5D  
                                  _mede_height 05EC                               _EPWM1_Initialize 0BFE  
                      definePassoMotor@sentido 00CD                            ___tmul@multiplicand 00D0  
                                    _outputsum 00A7                             __end_of_analisa_Rx 05EC  
                                  _EUSART_Read 0BF2                              ??_TMR2_Initialize 00CD  
                          __end_of_lookupTable 0521                                     ?_setaPorta 0070  
                            _ADC_GetConversion 0C72                          TMR1_ReadTimer@readVal 0077  
                      ??_OSCILLATOR_Initialize 00CD                                    ??__Umul8_16 0072  
                          _EUSART_ErrorHandler 0136                             ?_ADC_GetConversion 00CD  
                       __end_of_DAC_Initialize 0B63                                       _adc_temp 00B9  
                          __end_of_TMR1_Reload 0B90                                       _balldist 00AD  
                          ??_ADC_GetConversion 00CF                                       ___xxtofl 0744  
                                  ??_daUmPasso 00D0                                    _fluxcontrol 036D  
                              ___lwdiv@divisor 0070                                ___lwdiv@counter 0077  
                                     __ptext10 023E                                       __ptext11 036D  
                                     __ptext20 0B63                                       __ptext12 07D7  
                                     __ptext21 0D3D                                       __ptext13 0EB7  
                                     __ptext30 0B81                                       __ptext22 0B4A  
                                     __ptext14 07FD                                       __ptext31 0B44  
                                     __ptext23 0BDD                                       __ptext15 0521  
                                     __ptext40 0B52                                       __ptext32 0D19  
                                     __ptext24 0BD3                                       __ptext16 0CBF  
                                     __ptext41 0BF2                                       __ptext33 0BA8  
                                     __ptext25 0BB8                                       __ptext17 0B6F  
                                     __ptext50 0042                                       __ptext42 0C72  
                                     __ptext34 0BA0                                       __ptext26 0C8B  
                                     __ptext18 0B69                                       __ptext51 0CDA  
                                     __ptext35 0B98                                       __ptext27 0BB0  
                                     __ptext19 0B47                                       __ptext52 0B88  
                                     __ptext44 0BE7                                       __ptext36 0BFE  
                                     __ptext28 0BC9                                       __ptext53 0C0C  
                                     __ptext45 0002                                       __ptext37 0B5D  
                                     __ptext29 0C43                                       __ptext54 0C5A  
                                     __ptext46 05EC                                       __ptext38 0B57  
                                     __ptext55 0B43                                       __ptext47 0DF5  
                                     __ptext39 0B90                                       __ptext48 0744  
                                     __ptext49 0D67                                       _bufferRx 0053  
                                     _envia_Tx 0F8C                                       _count_Tx 00C6  
                      TMR6_WriteTimer@timerVal 00CD               TMR6_LoadPeriodRegister@periodVal 00CD  
                            ??_TMR4_Initialize 00CD                               ??_TMR0_ReadTimer 00CD  
                              ??_TMR1_GATE_ISR 007E                      __end_of_ADC_GetConversion 0C8B  
                      ?_EUSART_SetErrorHandler 00CD                              ?_definePassoMotor 00CD  
EUSART_SetOverrunErrorHandler@interruptHandler 00CD                             ??_definePassoMotor 00CE  
                             ??_TMR1_ReadTimer 0072                                       int$flags 007E  
                                     _position 00BD             __end_of_INTERRUPT_InterruptManager 0019  
                   _INTERRUPT_InterruptManager 0004          __end_of_EUSART_SetFramingErrorHandler 0BA8  
                _EUSART_SetFramingErrorHandler 0BA0                                ?_DAC_Initialize 0070  
                            ??_TMR1_WriteTimer 0072                                     _INTCONbits 000B  
                                _avg_tempo_voo 00A0                                   ??_pwmcontrol 00E2  
                                  _lookupTable 0455                                       intlevel1 0000  
                      ?_PIN_MANAGER_Initialize 0070                              ??_TMR6_Initialize 00CD  
               __end_of_EUSART_SetErrorHandler 0BA0                                    ??_setaPorta 00D1  
                             ??_ADC_Initialize 00CD                                    _TMR1_Reload 0B88  
                            ___tmul@multiplier 00CD  EUSART_SetFramingErrorHandler@interruptHandler 00CD  
                            ??_TMR4_StartTimer 00CD                                  __pstringtext1 0455  
                           __end_of_pwmcontrol 036D                                 _FVR_Initialize 0B44  
                       __Umul8_16@multiplicand 0070                                     _OPTION_REG 0095  
                              _TMR0_Initialize 0BC9                                    _timecontrol 0124  
                          _EPWM1_LoadDutyValue 0CBF                               ___atdiv@dividend 00D9  
                           EUSART_Write@txData 00CD           __end_of_TMR1_SetGateInterruptHandler 0BB8  
                 _TMR1_SetGateInterruptHandler 0BB0                 __end_of_PIN_MANAGER_Initialize 0C5A  
                             ??_TMR4_StopTimer 00CD                        _TMR6_LoadPeriodRegister 0B69  
                                  _sp_position 00BB                                ___atdiv@divisor 00D6  
                              _PIN_MANAGER_IOC 0B43                           __Umul8_16@multiplier 0078  
                              ___atdiv@counter 00DD                                _TMR1_Initialize 0C8B  
                     __end_of_EPWM1_Initialize 0C0C                           ?_EPWM1_LoadDutyValue 00CD  
                            __Umul8_16@product 0074                                   ___atdiv@sign 00DE  
