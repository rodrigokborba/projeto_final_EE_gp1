

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Mon Sep 09 15:23:05 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og9 
     1                           	processor	16F1827
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     6                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,noexec
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    17                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    19                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    20                           	psect	text1,local,class=CODE,merge=1,delta=2
    21                           	psect	text2,local,class=CODE,merge=1,delta=2
    22                           	psect	text3,local,class=CODE,merge=1,delta=2
    23                           	psect	text4,local,class=CODE,merge=1,delta=2
    24                           	psect	text5,local,class=CODE,merge=1,delta=2
    25                           	psect	text6,local,class=CODE,merge=1,delta=2
    26                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text8,local,class=CODE,merge=1,delta=2
    28                           	psect	text9,local,class=CODE,merge=1,delta=2
    29                           	psect	text10,local,class=CODE,merge=1,delta=2
    30                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text13,local,class=CODE,merge=1,delta=2
    33                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text15,local,class=CODE,merge=1,delta=2
    35                           	psect	text16,local,class=CODE,merge=1,delta=2
    36                           	psect	text17,local,class=CODE,merge=1,delta=2
    37                           	psect	text18,local,class=CODE,merge=1,delta=2
    38                           	psect	text19,local,class=CODE,merge=1,delta=2
    39                           	psect	text20,local,class=CODE,merge=1,delta=2
    40                           	psect	text21,local,class=CODE,merge=1,delta=2
    41                           	psect	text22,local,class=CODE,merge=1,delta=2
    42                           	psect	text23,local,class=CODE,merge=1,delta=2
    43                           	psect	text24,local,class=CODE,merge=1,delta=2
    44                           	psect	text25,local,class=CODE,merge=1,delta=2
    45                           	psect	text26,local,class=CODE,merge=1,delta=2
    46                           	psect	text27,local,class=CODE,merge=1,delta=2
    47                           	psect	text28,local,class=CODE,merge=1,delta=2
    48                           	psect	text29,local,class=CODE,merge=1,delta=2
    49                           	psect	text30,local,class=CODE,merge=1,delta=2
    50                           	psect	text31,local,class=CODE,merge=1,delta=2
    51                           	psect	text32,local,class=CODE,merge=1,delta=2
    52                           	psect	text33,local,class=CODE,merge=1,delta=2
    53                           	psect	text34,local,class=CODE,merge=1,delta=2
    54                           	psect	text35,local,class=CODE,merge=1,delta=2
    55                           	psect	text36,local,class=CODE,merge=1,delta=2
    56                           	psect	text37,local,class=CODE,merge=1,delta=2
    57                           	psect	text38,local,class=CODE,merge=1,delta=2
    58                           	psect	text39,local,class=CODE,merge=1,delta=2
    59                           	psect	text40,local,class=CODE,merge=1,delta=2
    60                           	psect	text41,local,class=CODE,merge=1,delta=2
    61                           	psect	text42,local,class=CODE,merge=1,delta=2
    62                           	psect	text43,local,class=CODE,merge=1,delta=2
    63                           	psect	intentry,global,class=CODE,delta=2
    64                           	psect	text45,local,class=CODE,merge=1,delta=2
    65                           	psect	text46,local,class=CODE,merge=1,delta=2
    66                           	psect	text47,local,class=CODE,merge=1,delta=2
    67                           	psect	text48,local,class=CODE,merge=1,delta=2
    68                           	psect	text49,local,class=CODE,merge=1,delta=2
    69                           	psect	text50,local,class=CODE,merge=1,delta=2,group=1
    70                           	psect	text51,local,class=CODE,merge=1,delta=2,group=1
    71                           	psect	text52,local,class=CODE,merge=1,delta=2,group=1
    72                           	psect	text53,local,class=CODE,merge=1,delta=2
    73                           	psect	text54,local,class=CODE,merge=1,delta=2
    74                           	psect	text55,local,class=CODE,merge=1,delta=2
    75                           	psect	text56,local,class=CODE,merge=1,delta=2
    76                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    77                           	dabs	1,0x7E,2
    78     0000                     
    79                           ; Generated 07/09/2023 GMT
    80                           ; 
    81                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    82                           ; All rights reserved.
    83                           ; 
    84                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    85                           ; 
    86                           ; Redistribution and use in source and binary forms, with or without modification, are
    87                           ; permitted provided that the following conditions are met:
    88                           ; 
    89                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    90                           ;        conditions and the following disclaimer.
    91                           ; 
    92                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    93                           ;        of conditions and the following disclaimer in the documentation and/or other
    94                           ;        materials provided with the distribution. Publication is not required when
    95                           ;        this file is used in an embedded application.
    96                           ; 
    97                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    98                           ;        software without specific prior written permission.
    99                           ; 
   100                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   101                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   102                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   103                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   104                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   105                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   106                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   107                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   108                           ; 
   109                           ; 
   110                           ; Code-generator required, PIC16F1827 Definitions
   111                           ; 
   112                           ; SFR Addresses
   113     0000                     	;# 
   114     0001                     	;# 
   115     0002                     	;# 
   116     0003                     	;# 
   117     0004                     	;# 
   118     0005                     	;# 
   119     0006                     	;# 
   120     0007                     	;# 
   121     0008                     	;# 
   122     0009                     	;# 
   123     000A                     	;# 
   124     000B                     	;# 
   125     000C                     	;# 
   126     000D                     	;# 
   127     0011                     	;# 
   128     0012                     	;# 
   129     0013                     	;# 
   130     0014                     	;# 
   131     0015                     	;# 
   132     0016                     	;# 
   133     0016                     	;# 
   134     0017                     	;# 
   135     0018                     	;# 
   136     0019                     	;# 
   137     001A                     	;# 
   138     001B                     	;# 
   139     001C                     	;# 
   140     001E                     	;# 
   141     001F                     	;# 
   142     008C                     	;# 
   143     008D                     	;# 
   144     0091                     	;# 
   145     0092                     	;# 
   146     0093                     	;# 
   147     0094                     	;# 
   148     0095                     	;# 
   149     0096                     	;# 
   150     0097                     	;# 
   151     0098                     	;# 
   152     0099                     	;# 
   153     009A                     	;# 
   154     009B                     	;# 
   155     009B                     	;# 
   156     009C                     	;# 
   157     009D                     	;# 
   158     009E                     	;# 
   159     010C                     	;# 
   160     010D                     	;# 
   161     0111                     	;# 
   162     0112                     	;# 
   163     0113                     	;# 
   164     0114                     	;# 
   165     0115                     	;# 
   166     0116                     	;# 
   167     0117                     	;# 
   168     0118                     	;# 
   169     0119                     	;# 
   170     011A                     	;# 
   171     011B                     	;# 
   172     011D                     	;# 
   173     011E                     	;# 
   174     018C                     	;# 
   175     018D                     	;# 
   176     0191                     	;# 
   177     0191                     	;# 
   178     0192                     	;# 
   179     0193                     	;# 
   180     0193                     	;# 
   181     0193                     	;# 
   182     0194                     	;# 
   183     0195                     	;# 
   184     0196                     	;# 
   185     0199                     	;# 
   186     019A                     	;# 
   187     019B                     	;# 
   188     019B                     	;# 
   189     019B                     	;# 
   190     019B                     	;# 
   191     019C                     	;# 
   192     019C                     	;# 
   193     019D                     	;# 
   194     019E                     	;# 
   195     019F                     	;# 
   196     020C                     	;# 
   197     020D                     	;# 
   198     0211                     	;# 
   199     0211                     	;# 
   200     0212                     	;# 
   201     0212                     	;# 
   202     0213                     	;# 
   203     0213                     	;# 
   204     0214                     	;# 
   205     0214                     	;# 
   206     0215                     	;# 
   207     0215                     	;# 
   208     0215                     	;# 
   209     0216                     	;# 
   210     0216                     	;# 
   211     0217                     	;# 
   212     0217                     	;# 
   213     0219                     	;# 
   214     021A                     	;# 
   215     021B                     	;# 
   216     021C                     	;# 
   217     021D                     	;# 
   218     021E                     	;# 
   219     021F                     	;# 
   220     0291                     	;# 
   221     0291                     	;# 
   222     0292                     	;# 
   223     0293                     	;# 
   224     0294                     	;# 
   225     0295                     	;# 
   226     0295                     	;# 
   227     0296                     	;# 
   228     0298                     	;# 
   229     0298                     	;# 
   230     0299                     	;# 
   231     029A                     	;# 
   232     029B                     	;# 
   233     029C                     	;# 
   234     029C                     	;# 
   235     029D                     	;# 
   236     029E                     	;# 
   237     029E                     	;# 
   238     0311                     	;# 
   239     0311                     	;# 
   240     0312                     	;# 
   241     0313                     	;# 
   242     0318                     	;# 
   243     0318                     	;# 
   244     0319                     	;# 
   245     031A                     	;# 
   246     0394                     	;# 
   247     0395                     	;# 
   248     0396                     	;# 
   249     039A                     	;# 
   250     039C                     	;# 
   251     039D                     	;# 
   252     039E                     	;# 
   253     039F                     	;# 
   254     0415                     	;# 
   255     0416                     	;# 
   256     0417                     	;# 
   257     041C                     	;# 
   258     041D                     	;# 
   259     041E                     	;# 
   260     0FE4                     	;# 
   261     0FE5                     	;# 
   262     0FE6                     	;# 
   263     0FE7                     	;# 
   264     0FE8                     	;# 
   265     0FE9                     	;# 
   266     0FEA                     	;# 
   267     0FEB                     	;# 
   268     0FED                     	;# 
   269     0FEE                     	;# 
   270     0FEF                     	;# 
   271     0000                     	;# 
   272     0001                     	;# 
   273     0002                     	;# 
   274     0003                     	;# 
   275     0004                     	;# 
   276     0005                     	;# 
   277     0006                     	;# 
   278     0007                     	;# 
   279     0008                     	;# 
   280     0009                     	;# 
   281     000A                     	;# 
   282     000B                     	;# 
   283     000C                     	;# 
   284     000D                     	;# 
   285     0011                     	;# 
   286     0012                     	;# 
   287     0013                     	;# 
   288     0014                     	;# 
   289     0015                     	;# 
   290     0016                     	;# 
   291     0016                     	;# 
   292     0017                     	;# 
   293     0018                     	;# 
   294     0019                     	;# 
   295     001A                     	;# 
   296     001B                     	;# 
   297     001C                     	;# 
   298     001E                     	;# 
   299     001F                     	;# 
   300     008C                     	;# 
   301     008D                     	;# 
   302     0091                     	;# 
   303     0092                     	;# 
   304     0093                     	;# 
   305     0094                     	;# 
   306     0095                     	;# 
   307     0096                     	;# 
   308     0097                     	;# 
   309     0098                     	;# 
   310     0099                     	;# 
   311     009A                     	;# 
   312     009B                     	;# 
   313     009B                     	;# 
   314     009C                     	;# 
   315     009D                     	;# 
   316     009E                     	;# 
   317     010C                     	;# 
   318     010D                     	;# 
   319     0111                     	;# 
   320     0112                     	;# 
   321     0113                     	;# 
   322     0114                     	;# 
   323     0115                     	;# 
   324     0116                     	;# 
   325     0117                     	;# 
   326     0118                     	;# 
   327     0119                     	;# 
   328     011A                     	;# 
   329     011B                     	;# 
   330     011D                     	;# 
   331     011E                     	;# 
   332     018C                     	;# 
   333     018D                     	;# 
   334     0191                     	;# 
   335     0191                     	;# 
   336     0192                     	;# 
   337     0193                     	;# 
   338     0193                     	;# 
   339     0193                     	;# 
   340     0194                     	;# 
   341     0195                     	;# 
   342     0196                     	;# 
   343     0199                     	;# 
   344     019A                     	;# 
   345     019B                     	;# 
   346     019B                     	;# 
   347     019B                     	;# 
   348     019B                     	;# 
   349     019C                     	;# 
   350     019C                     	;# 
   351     019D                     	;# 
   352     019E                     	;# 
   353     019F                     	;# 
   354     020C                     	;# 
   355     020D                     	;# 
   356     0211                     	;# 
   357     0211                     	;# 
   358     0212                     	;# 
   359     0212                     	;# 
   360     0213                     	;# 
   361     0213                     	;# 
   362     0214                     	;# 
   363     0214                     	;# 
   364     0215                     	;# 
   365     0215                     	;# 
   366     0215                     	;# 
   367     0216                     	;# 
   368     0216                     	;# 
   369     0217                     	;# 
   370     0217                     	;# 
   371     0219                     	;# 
   372     021A                     	;# 
   373     021B                     	;# 
   374     021C                     	;# 
   375     021D                     	;# 
   376     021E                     	;# 
   377     021F                     	;# 
   378     0291                     	;# 
   379     0291                     	;# 
   380     0292                     	;# 
   381     0293                     	;# 
   382     0294                     	;# 
   383     0295                     	;# 
   384     0295                     	;# 
   385     0296                     	;# 
   386     0298                     	;# 
   387     0298                     	;# 
   388     0299                     	;# 
   389     029A                     	;# 
   390     029B                     	;# 
   391     029C                     	;# 
   392     029C                     	;# 
   393     029D                     	;# 
   394     029E                     	;# 
   395     029E                     	;# 
   396     0311                     	;# 
   397     0311                     	;# 
   398     0312                     	;# 
   399     0313                     	;# 
   400     0318                     	;# 
   401     0318                     	;# 
   402     0319                     	;# 
   403     031A                     	;# 
   404     0394                     	;# 
   405     0395                     	;# 
   406     0396                     	;# 
   407     039A                     	;# 
   408     039C                     	;# 
   409     039D                     	;# 
   410     039E                     	;# 
   411     039F                     	;# 
   412     0415                     	;# 
   413     0416                     	;# 
   414     0417                     	;# 
   415     041C                     	;# 
   416     041D                     	;# 
   417     041E                     	;# 
   418     0FE4                     	;# 
   419     0FE5                     	;# 
   420     0FE6                     	;# 
   421     0FE7                     	;# 
   422     0FE8                     	;# 
   423     0FE9                     	;# 
   424     0FEA                     	;# 
   425     0FEB                     	;# 
   426     0FED                     	;# 
   427     0FEE                     	;# 
   428     0FEF                     	;# 
   429     0000                     	;# 
   430     0001                     	;# 
   431     0002                     	;# 
   432     0003                     	;# 
   433     0004                     	;# 
   434     0005                     	;# 
   435     0006                     	;# 
   436     0007                     	;# 
   437     0008                     	;# 
   438     0009                     	;# 
   439     000A                     	;# 
   440     000B                     	;# 
   441     000C                     	;# 
   442     000D                     	;# 
   443     0011                     	;# 
   444     0012                     	;# 
   445     0013                     	;# 
   446     0014                     	;# 
   447     0015                     	;# 
   448     0016                     	;# 
   449     0016                     	;# 
   450     0017                     	;# 
   451     0018                     	;# 
   452     0019                     	;# 
   453     001A                     	;# 
   454     001B                     	;# 
   455     001C                     	;# 
   456     001E                     	;# 
   457     001F                     	;# 
   458     008C                     	;# 
   459     008D                     	;# 
   460     0091                     	;# 
   461     0092                     	;# 
   462     0093                     	;# 
   463     0094                     	;# 
   464     0095                     	;# 
   465     0096                     	;# 
   466     0097                     	;# 
   467     0098                     	;# 
   468     0099                     	;# 
   469     009A                     	;# 
   470     009B                     	;# 
   471     009B                     	;# 
   472     009C                     	;# 
   473     009D                     	;# 
   474     009E                     	;# 
   475     010C                     	;# 
   476     010D                     	;# 
   477     0111                     	;# 
   478     0112                     	;# 
   479     0113                     	;# 
   480     0114                     	;# 
   481     0115                     	;# 
   482     0116                     	;# 
   483     0117                     	;# 
   484     0118                     	;# 
   485     0119                     	;# 
   486     011A                     	;# 
   487     011B                     	;# 
   488     011D                     	;# 
   489     011E                     	;# 
   490     018C                     	;# 
   491     018D                     	;# 
   492     0191                     	;# 
   493     0191                     	;# 
   494     0192                     	;# 
   495     0193                     	;# 
   496     0193                     	;# 
   497     0193                     	;# 
   498     0194                     	;# 
   499     0195                     	;# 
   500     0196                     	;# 
   501     0199                     	;# 
   502     019A                     	;# 
   503     019B                     	;# 
   504     019B                     	;# 
   505     019B                     	;# 
   506     019B                     	;# 
   507     019C                     	;# 
   508     019C                     	;# 
   509     019D                     	;# 
   510     019E                     	;# 
   511     019F                     	;# 
   512     020C                     	;# 
   513     020D                     	;# 
   514     0211                     	;# 
   515     0211                     	;# 
   516     0212                     	;# 
   517     0212                     	;# 
   518     0213                     	;# 
   519     0213                     	;# 
   520     0214                     	;# 
   521     0214                     	;# 
   522     0215                     	;# 
   523     0215                     	;# 
   524     0215                     	;# 
   525     0216                     	;# 
   526     0216                     	;# 
   527     0217                     	;# 
   528     0217                     	;# 
   529     0219                     	;# 
   530     021A                     	;# 
   531     021B                     	;# 
   532     021C                     	;# 
   533     021D                     	;# 
   534     021E                     	;# 
   535     021F                     	;# 
   536     0291                     	;# 
   537     0291                     	;# 
   538     0292                     	;# 
   539     0293                     	;# 
   540     0294                     	;# 
   541     0295                     	;# 
   542     0295                     	;# 
   543     0296                     	;# 
   544     0298                     	;# 
   545     0298                     	;# 
   546     0299                     	;# 
   547     029A                     	;# 
   548     029B                     	;# 
   549     029C                     	;# 
   550     029C                     	;# 
   551     029D                     	;# 
   552     029E                     	;# 
   553     029E                     	;# 
   554     0311                     	;# 
   555     0311                     	;# 
   556     0312                     	;# 
   557     0313                     	;# 
   558     0318                     	;# 
   559     0318                     	;# 
   560     0319                     	;# 
   561     031A                     	;# 
   562     0394                     	;# 
   563     0395                     	;# 
   564     0396                     	;# 
   565     039A                     	;# 
   566     039C                     	;# 
   567     039D                     	;# 
   568     039E                     	;# 
   569     039F                     	;# 
   570     0415                     	;# 
   571     0416                     	;# 
   572     0417                     	;# 
   573     041C                     	;# 
   574     041D                     	;# 
   575     041E                     	;# 
   576     0FE4                     	;# 
   577     0FE5                     	;# 
   578     0FE6                     	;# 
   579     0FE7                     	;# 
   580     0FE8                     	;# 
   581     0FE9                     	;# 
   582     0FEA                     	;# 
   583     0FEB                     	;# 
   584     0FED                     	;# 
   585     0FEE                     	;# 
   586     0FEF                     	;# 
   587     0000                     	;# 
   588     0001                     	;# 
   589     0002                     	;# 
   590     0003                     	;# 
   591     0004                     	;# 
   592     0005                     	;# 
   593     0006                     	;# 
   594     0007                     	;# 
   595     0008                     	;# 
   596     0009                     	;# 
   597     000A                     	;# 
   598     000B                     	;# 
   599     000C                     	;# 
   600     000D                     	;# 
   601     0011                     	;# 
   602     0012                     	;# 
   603     0013                     	;# 
   604     0014                     	;# 
   605     0015                     	;# 
   606     0016                     	;# 
   607     0016                     	;# 
   608     0017                     	;# 
   609     0018                     	;# 
   610     0019                     	;# 
   611     001A                     	;# 
   612     001B                     	;# 
   613     001C                     	;# 
   614     001E                     	;# 
   615     001F                     	;# 
   616     008C                     	;# 
   617     008D                     	;# 
   618     0091                     	;# 
   619     0092                     	;# 
   620     0093                     	;# 
   621     0094                     	;# 
   622     0095                     	;# 
   623     0096                     	;# 
   624     0097                     	;# 
   625     0098                     	;# 
   626     0099                     	;# 
   627     009A                     	;# 
   628     009B                     	;# 
   629     009B                     	;# 
   630     009C                     	;# 
   631     009D                     	;# 
   632     009E                     	;# 
   633     010C                     	;# 
   634     010D                     	;# 
   635     0111                     	;# 
   636     0112                     	;# 
   637     0113                     	;# 
   638     0114                     	;# 
   639     0115                     	;# 
   640     0116                     	;# 
   641     0117                     	;# 
   642     0118                     	;# 
   643     0119                     	;# 
   644     011A                     	;# 
   645     011B                     	;# 
   646     011D                     	;# 
   647     011E                     	;# 
   648     018C                     	;# 
   649     018D                     	;# 
   650     0191                     	;# 
   651     0191                     	;# 
   652     0192                     	;# 
   653     0193                     	;# 
   654     0193                     	;# 
   655     0193                     	;# 
   656     0194                     	;# 
   657     0195                     	;# 
   658     0196                     	;# 
   659     0199                     	;# 
   660     019A                     	;# 
   661     019B                     	;# 
   662     019B                     	;# 
   663     019B                     	;# 
   664     019B                     	;# 
   665     019C                     	;# 
   666     019C                     	;# 
   667     019D                     	;# 
   668     019E                     	;# 
   669     019F                     	;# 
   670     020C                     	;# 
   671     020D                     	;# 
   672     0211                     	;# 
   673     0211                     	;# 
   674     0212                     	;# 
   675     0212                     	;# 
   676     0213                     	;# 
   677     0213                     	;# 
   678     0214                     	;# 
   679     0214                     	;# 
   680     0215                     	;# 
   681     0215                     	;# 
   682     0215                     	;# 
   683     0216                     	;# 
   684     0216                     	;# 
   685     0217                     	;# 
   686     0217                     	;# 
   687     0219                     	;# 
   688     021A                     	;# 
   689     021B                     	;# 
   690     021C                     	;# 
   691     021D                     	;# 
   692     021E                     	;# 
   693     021F                     	;# 
   694     0291                     	;# 
   695     0291                     	;# 
   696     0292                     	;# 
   697     0293                     	;# 
   698     0294                     	;# 
   699     0295                     	;# 
   700     0295                     	;# 
   701     0296                     	;# 
   702     0298                     	;# 
   703     0298                     	;# 
   704     0299                     	;# 
   705     029A                     	;# 
   706     029B                     	;# 
   707     029C                     	;# 
   708     029C                     	;# 
   709     029D                     	;# 
   710     029E                     	;# 
   711     029E                     	;# 
   712     0311                     	;# 
   713     0311                     	;# 
   714     0312                     	;# 
   715     0313                     	;# 
   716     0318                     	;# 
   717     0318                     	;# 
   718     0319                     	;# 
   719     031A                     	;# 
   720     0394                     	;# 
   721     0395                     	;# 
   722     0396                     	;# 
   723     039A                     	;# 
   724     039C                     	;# 
   725     039D                     	;# 
   726     039E                     	;# 
   727     039F                     	;# 
   728     0415                     	;# 
   729     0416                     	;# 
   730     0417                     	;# 
   731     041C                     	;# 
   732     041D                     	;# 
   733     041E                     	;# 
   734     0FE4                     	;# 
   735     0FE5                     	;# 
   736     0FE6                     	;# 
   737     0FE7                     	;# 
   738     0FE8                     	;# 
   739     0FE9                     	;# 
   740     0FEA                     	;# 
   741     0FEB                     	;# 
   742     0FED                     	;# 
   743     0FEE                     	;# 
   744     0FEF                     	;# 
   745     0000                     	;# 
   746     0001                     	;# 
   747     0002                     	;# 
   748     0003                     	;# 
   749     0004                     	;# 
   750     0005                     	;# 
   751     0006                     	;# 
   752     0007                     	;# 
   753     0008                     	;# 
   754     0009                     	;# 
   755     000A                     	;# 
   756     000B                     	;# 
   757     000C                     	;# 
   758     000D                     	;# 
   759     0011                     	;# 
   760     0012                     	;# 
   761     0013                     	;# 
   762     0014                     	;# 
   763     0015                     	;# 
   764     0016                     	;# 
   765     0016                     	;# 
   766     0017                     	;# 
   767     0018                     	;# 
   768     0019                     	;# 
   769     001A                     	;# 
   770     001B                     	;# 
   771     001C                     	;# 
   772     001E                     	;# 
   773     001F                     	;# 
   774     008C                     	;# 
   775     008D                     	;# 
   776     0091                     	;# 
   777     0092                     	;# 
   778     0093                     	;# 
   779     0094                     	;# 
   780     0095                     	;# 
   781     0096                     	;# 
   782     0097                     	;# 
   783     0098                     	;# 
   784     0099                     	;# 
   785     009A                     	;# 
   786     009B                     	;# 
   787     009B                     	;# 
   788     009C                     	;# 
   789     009D                     	;# 
   790     009E                     	;# 
   791     010C                     	;# 
   792     010D                     	;# 
   793     0111                     	;# 
   794     0112                     	;# 
   795     0113                     	;# 
   796     0114                     	;# 
   797     0115                     	;# 
   798     0116                     	;# 
   799     0117                     	;# 
   800     0118                     	;# 
   801     0119                     	;# 
   802     011A                     	;# 
   803     011B                     	;# 
   804     011D                     	;# 
   805     011E                     	;# 
   806     018C                     	;# 
   807     018D                     	;# 
   808     0191                     	;# 
   809     0191                     	;# 
   810     0192                     	;# 
   811     0193                     	;# 
   812     0193                     	;# 
   813     0193                     	;# 
   814     0194                     	;# 
   815     0195                     	;# 
   816     0196                     	;# 
   817     0199                     	;# 
   818     019A                     	;# 
   819     019B                     	;# 
   820     019B                     	;# 
   821     019B                     	;# 
   822     019B                     	;# 
   823     019C                     	;# 
   824     019C                     	;# 
   825     019D                     	;# 
   826     019E                     	;# 
   827     019F                     	;# 
   828     020C                     	;# 
   829     020D                     	;# 
   830     0211                     	;# 
   831     0211                     	;# 
   832     0212                     	;# 
   833     0212                     	;# 
   834     0213                     	;# 
   835     0213                     	;# 
   836     0214                     	;# 
   837     0214                     	;# 
   838     0215                     	;# 
   839     0215                     	;# 
   840     0215                     	;# 
   841     0216                     	;# 
   842     0216                     	;# 
   843     0217                     	;# 
   844     0217                     	;# 
   845     0219                     	;# 
   846     021A                     	;# 
   847     021B                     	;# 
   848     021C                     	;# 
   849     021D                     	;# 
   850     021E                     	;# 
   851     021F                     	;# 
   852     0291                     	;# 
   853     0291                     	;# 
   854     0292                     	;# 
   855     0293                     	;# 
   856     0294                     	;# 
   857     0295                     	;# 
   858     0295                     	;# 
   859     0296                     	;# 
   860     0298                     	;# 
   861     0298                     	;# 
   862     0299                     	;# 
   863     029A                     	;# 
   864     029B                     	;# 
   865     029C                     	;# 
   866     029C                     	;# 
   867     029D                     	;# 
   868     029E                     	;# 
   869     029E                     	;# 
   870     0311                     	;# 
   871     0311                     	;# 
   872     0312                     	;# 
   873     0313                     	;# 
   874     0318                     	;# 
   875     0318                     	;# 
   876     0319                     	;# 
   877     031A                     	;# 
   878     0394                     	;# 
   879     0395                     	;# 
   880     0396                     	;# 
   881     039A                     	;# 
   882     039C                     	;# 
   883     039D                     	;# 
   884     039E                     	;# 
   885     039F                     	;# 
   886     0415                     	;# 
   887     0416                     	;# 
   888     0417                     	;# 
   889     041C                     	;# 
   890     041D                     	;# 
   891     041E                     	;# 
   892     0FE4                     	;# 
   893     0FE5                     	;# 
   894     0FE6                     	;# 
   895     0FE7                     	;# 
   896     0FE8                     	;# 
   897     0FE9                     	;# 
   898     0FEA                     	;# 
   899     0FEB                     	;# 
   900     0FED                     	;# 
   901     0FEE                     	;# 
   902     0FEF                     	;# 
   903     0000                     	;# 
   904     0001                     	;# 
   905     0002                     	;# 
   906     0003                     	;# 
   907     0004                     	;# 
   908     0005                     	;# 
   909     0006                     	;# 
   910     0007                     	;# 
   911     0008                     	;# 
   912     0009                     	;# 
   913     000A                     	;# 
   914     000B                     	;# 
   915     000C                     	;# 
   916     000D                     	;# 
   917     0011                     	;# 
   918     0012                     	;# 
   919     0013                     	;# 
   920     0014                     	;# 
   921     0015                     	;# 
   922     0016                     	;# 
   923     0016                     	;# 
   924     0017                     	;# 
   925     0018                     	;# 
   926     0019                     	;# 
   927     001A                     	;# 
   928     001B                     	;# 
   929     001C                     	;# 
   930     001E                     	;# 
   931     001F                     	;# 
   932     008C                     	;# 
   933     008D                     	;# 
   934     0091                     	;# 
   935     0092                     	;# 
   936     0093                     	;# 
   937     0094                     	;# 
   938     0095                     	;# 
   939     0096                     	;# 
   940     0097                     	;# 
   941     0098                     	;# 
   942     0099                     	;# 
   943     009A                     	;# 
   944     009B                     	;# 
   945     009B                     	;# 
   946     009C                     	;# 
   947     009D                     	;# 
   948     009E                     	;# 
   949     010C                     	;# 
   950     010D                     	;# 
   951     0111                     	;# 
   952     0112                     	;# 
   953     0113                     	;# 
   954     0114                     	;# 
   955     0115                     	;# 
   956     0116                     	;# 
   957     0117                     	;# 
   958     0118                     	;# 
   959     0119                     	;# 
   960     011A                     	;# 
   961     011B                     	;# 
   962     011D                     	;# 
   963     011E                     	;# 
   964     018C                     	;# 
   965     018D                     	;# 
   966     0191                     	;# 
   967     0191                     	;# 
   968     0192                     	;# 
   969     0193                     	;# 
   970     0193                     	;# 
   971     0193                     	;# 
   972     0194                     	;# 
   973     0195                     	;# 
   974     0196                     	;# 
   975     0199                     	;# 
   976     019A                     	;# 
   977     019B                     	;# 
   978     019B                     	;# 
   979     019B                     	;# 
   980     019B                     	;# 
   981     019C                     	;# 
   982     019C                     	;# 
   983     019D                     	;# 
   984     019E                     	;# 
   985     019F                     	;# 
   986     020C                     	;# 
   987     020D                     	;# 
   988     0211                     	;# 
   989     0211                     	;# 
   990     0212                     	;# 
   991     0212                     	;# 
   992     0213                     	;# 
   993     0213                     	;# 
   994     0214                     	;# 
   995     0214                     	;# 
   996     0215                     	;# 
   997     0215                     	;# 
   998     0215                     	;# 
   999     0216                     	;# 
  1000     0216                     	;# 
  1001     0217                     	;# 
  1002     0217                     	;# 
  1003     0219                     	;# 
  1004     021A                     	;# 
  1005     021B                     	;# 
  1006     021C                     	;# 
  1007     021D                     	;# 
  1008     021E                     	;# 
  1009     021F                     	;# 
  1010     0291                     	;# 
  1011     0291                     	;# 
  1012     0292                     	;# 
  1013     0293                     	;# 
  1014     0294                     	;# 
  1015     0295                     	;# 
  1016     0295                     	;# 
  1017     0296                     	;# 
  1018     0298                     	;# 
  1019     0298                     	;# 
  1020     0299                     	;# 
  1021     029A                     	;# 
  1022     029B                     	;# 
  1023     029C                     	;# 
  1024     029C                     	;# 
  1025     029D                     	;# 
  1026     029E                     	;# 
  1027     029E                     	;# 
  1028     0311                     	;# 
  1029     0311                     	;# 
  1030     0312                     	;# 
  1031     0313                     	;# 
  1032     0318                     	;# 
  1033     0318                     	;# 
  1034     0319                     	;# 
  1035     031A                     	;# 
  1036     0394                     	;# 
  1037     0395                     	;# 
  1038     0396                     	;# 
  1039     039A                     	;# 
  1040     039C                     	;# 
  1041     039D                     	;# 
  1042     039E                     	;# 
  1043     039F                     	;# 
  1044     0415                     	;# 
  1045     0416                     	;# 
  1046     0417                     	;# 
  1047     041C                     	;# 
  1048     041D                     	;# 
  1049     041E                     	;# 
  1050     0FE4                     	;# 
  1051     0FE5                     	;# 
  1052     0FE6                     	;# 
  1053     0FE7                     	;# 
  1054     0FE8                     	;# 
  1055     0FE9                     	;# 
  1056     0FEA                     	;# 
  1057     0FEB                     	;# 
  1058     0FED                     	;# 
  1059     0FEE                     	;# 
  1060     0FEF                     	;# 
  1061     0000                     	;# 
  1062     0001                     	;# 
  1063     0002                     	;# 
  1064     0003                     	;# 
  1065     0004                     	;# 
  1066     0005                     	;# 
  1067     0006                     	;# 
  1068     0007                     	;# 
  1069     0008                     	;# 
  1070     0009                     	;# 
  1071     000A                     	;# 
  1072     000B                     	;# 
  1073     000C                     	;# 
  1074     000D                     	;# 
  1075     0011                     	;# 
  1076     0012                     	;# 
  1077     0013                     	;# 
  1078     0014                     	;# 
  1079     0015                     	;# 
  1080     0016                     	;# 
  1081     0016                     	;# 
  1082     0017                     	;# 
  1083     0018                     	;# 
  1084     0019                     	;# 
  1085     001A                     	;# 
  1086     001B                     	;# 
  1087     001C                     	;# 
  1088     001E                     	;# 
  1089     001F                     	;# 
  1090     008C                     	;# 
  1091     008D                     	;# 
  1092     0091                     	;# 
  1093     0092                     	;# 
  1094     0093                     	;# 
  1095     0094                     	;# 
  1096     0095                     	;# 
  1097     0096                     	;# 
  1098     0097                     	;# 
  1099     0098                     	;# 
  1100     0099                     	;# 
  1101     009A                     	;# 
  1102     009B                     	;# 
  1103     009B                     	;# 
  1104     009C                     	;# 
  1105     009D                     	;# 
  1106     009E                     	;# 
  1107     010C                     	;# 
  1108     010D                     	;# 
  1109     0111                     	;# 
  1110     0112                     	;# 
  1111     0113                     	;# 
  1112     0114                     	;# 
  1113     0115                     	;# 
  1114     0116                     	;# 
  1115     0117                     	;# 
  1116     0118                     	;# 
  1117     0119                     	;# 
  1118     011A                     	;# 
  1119     011B                     	;# 
  1120     011D                     	;# 
  1121     011E                     	;# 
  1122     018C                     	;# 
  1123     018D                     	;# 
  1124     0191                     	;# 
  1125     0191                     	;# 
  1126     0192                     	;# 
  1127     0193                     	;# 
  1128     0193                     	;# 
  1129     0193                     	;# 
  1130     0194                     	;# 
  1131     0195                     	;# 
  1132     0196                     	;# 
  1133     0199                     	;# 
  1134     019A                     	;# 
  1135     019B                     	;# 
  1136     019B                     	;# 
  1137     019B                     	;# 
  1138     019B                     	;# 
  1139     019C                     	;# 
  1140     019C                     	;# 
  1141     019D                     	;# 
  1142     019E                     	;# 
  1143     019F                     	;# 
  1144     020C                     	;# 
  1145     020D                     	;# 
  1146     0211                     	;# 
  1147     0211                     	;# 
  1148     0212                     	;# 
  1149     0212                     	;# 
  1150     0213                     	;# 
  1151     0213                     	;# 
  1152     0214                     	;# 
  1153     0214                     	;# 
  1154     0215                     	;# 
  1155     0215                     	;# 
  1156     0215                     	;# 
  1157     0216                     	;# 
  1158     0216                     	;# 
  1159     0217                     	;# 
  1160     0217                     	;# 
  1161     0219                     	;# 
  1162     021A                     	;# 
  1163     021B                     	;# 
  1164     021C                     	;# 
  1165     021D                     	;# 
  1166     021E                     	;# 
  1167     021F                     	;# 
  1168     0291                     	;# 
  1169     0291                     	;# 
  1170     0292                     	;# 
  1171     0293                     	;# 
  1172     0294                     	;# 
  1173     0295                     	;# 
  1174     0295                     	;# 
  1175     0296                     	;# 
  1176     0298                     	;# 
  1177     0298                     	;# 
  1178     0299                     	;# 
  1179     029A                     	;# 
  1180     029B                     	;# 
  1181     029C                     	;# 
  1182     029C                     	;# 
  1183     029D                     	;# 
  1184     029E                     	;# 
  1185     029E                     	;# 
  1186     0311                     	;# 
  1187     0311                     	;# 
  1188     0312                     	;# 
  1189     0313                     	;# 
  1190     0318                     	;# 
  1191     0318                     	;# 
  1192     0319                     	;# 
  1193     031A                     	;# 
  1194     0394                     	;# 
  1195     0395                     	;# 
  1196     0396                     	;# 
  1197     039A                     	;# 
  1198     039C                     	;# 
  1199     039D                     	;# 
  1200     039E                     	;# 
  1201     039F                     	;# 
  1202     0415                     	;# 
  1203     0416                     	;# 
  1204     0417                     	;# 
  1205     041C                     	;# 
  1206     041D                     	;# 
  1207     041E                     	;# 
  1208     0FE4                     	;# 
  1209     0FE5                     	;# 
  1210     0FE6                     	;# 
  1211     0FE7                     	;# 
  1212     0FE8                     	;# 
  1213     0FE9                     	;# 
  1214     0FEA                     	;# 
  1215     0FEB                     	;# 
  1216     0FED                     	;# 
  1217     0FEE                     	;# 
  1218     0FEF                     	;# 
  1219     0000                     	;# 
  1220     0001                     	;# 
  1221     0002                     	;# 
  1222     0003                     	;# 
  1223     0004                     	;# 
  1224     0005                     	;# 
  1225     0006                     	;# 
  1226     0007                     	;# 
  1227     0008                     	;# 
  1228     0009                     	;# 
  1229     000A                     	;# 
  1230     000B                     	;# 
  1231     000C                     	;# 
  1232     000D                     	;# 
  1233     0011                     	;# 
  1234     0012                     	;# 
  1235     0013                     	;# 
  1236     0014                     	;# 
  1237     0015                     	;# 
  1238     0016                     	;# 
  1239     0016                     	;# 
  1240     0017                     	;# 
  1241     0018                     	;# 
  1242     0019                     	;# 
  1243     001A                     	;# 
  1244     001B                     	;# 
  1245     001C                     	;# 
  1246     001E                     	;# 
  1247     001F                     	;# 
  1248     008C                     	;# 
  1249     008D                     	;# 
  1250     0091                     	;# 
  1251     0092                     	;# 
  1252     0093                     	;# 
  1253     0094                     	;# 
  1254     0095                     	;# 
  1255     0096                     	;# 
  1256     0097                     	;# 
  1257     0098                     	;# 
  1258     0099                     	;# 
  1259     009A                     	;# 
  1260     009B                     	;# 
  1261     009B                     	;# 
  1262     009C                     	;# 
  1263     009D                     	;# 
  1264     009E                     	;# 
  1265     010C                     	;# 
  1266     010D                     	;# 
  1267     0111                     	;# 
  1268     0112                     	;# 
  1269     0113                     	;# 
  1270     0114                     	;# 
  1271     0115                     	;# 
  1272     0116                     	;# 
  1273     0117                     	;# 
  1274     0118                     	;# 
  1275     0119                     	;# 
  1276     011A                     	;# 
  1277     011B                     	;# 
  1278     011D                     	;# 
  1279     011E                     	;# 
  1280     018C                     	;# 
  1281     018D                     	;# 
  1282     0191                     	;# 
  1283     0191                     	;# 
  1284     0192                     	;# 
  1285     0193                     	;# 
  1286     0193                     	;# 
  1287     0193                     	;# 
  1288     0194                     	;# 
  1289     0195                     	;# 
  1290     0196                     	;# 
  1291     0199                     	;# 
  1292     019A                     	;# 
  1293     019B                     	;# 
  1294     019B                     	;# 
  1295     019B                     	;# 
  1296     019B                     	;# 
  1297     019C                     	;# 
  1298     019C                     	;# 
  1299     019D                     	;# 
  1300     019E                     	;# 
  1301     019F                     	;# 
  1302     020C                     	;# 
  1303     020D                     	;# 
  1304     0211                     	;# 
  1305     0211                     	;# 
  1306     0212                     	;# 
  1307     0212                     	;# 
  1308     0213                     	;# 
  1309     0213                     	;# 
  1310     0214                     	;# 
  1311     0214                     	;# 
  1312     0215                     	;# 
  1313     0215                     	;# 
  1314     0215                     	;# 
  1315     0216                     	;# 
  1316     0216                     	;# 
  1317     0217                     	;# 
  1318     0217                     	;# 
  1319     0219                     	;# 
  1320     021A                     	;# 
  1321     021B                     	;# 
  1322     021C                     	;# 
  1323     021D                     	;# 
  1324     021E                     	;# 
  1325     021F                     	;# 
  1326     0291                     	;# 
  1327     0291                     	;# 
  1328     0292                     	;# 
  1329     0293                     	;# 
  1330     0294                     	;# 
  1331     0295                     	;# 
  1332     0295                     	;# 
  1333     0296                     	;# 
  1334     0298                     	;# 
  1335     0298                     	;# 
  1336     0299                     	;# 
  1337     029A                     	;# 
  1338     029B                     	;# 
  1339     029C                     	;# 
  1340     029C                     	;# 
  1341     029D                     	;# 
  1342     029E                     	;# 
  1343     029E                     	;# 
  1344     0311                     	;# 
  1345     0311                     	;# 
  1346     0312                     	;# 
  1347     0313                     	;# 
  1348     0318                     	;# 
  1349     0318                     	;# 
  1350     0319                     	;# 
  1351     031A                     	;# 
  1352     0394                     	;# 
  1353     0395                     	;# 
  1354     0396                     	;# 
  1355     039A                     	;# 
  1356     039C                     	;# 
  1357     039D                     	;# 
  1358     039E                     	;# 
  1359     039F                     	;# 
  1360     0415                     	;# 
  1361     0416                     	;# 
  1362     0417                     	;# 
  1363     041C                     	;# 
  1364     041D                     	;# 
  1365     041E                     	;# 
  1366     0FE4                     	;# 
  1367     0FE5                     	;# 
  1368     0FE6                     	;# 
  1369     0FE7                     	;# 
  1370     0FE8                     	;# 
  1371     0FE9                     	;# 
  1372     0FEA                     	;# 
  1373     0FEB                     	;# 
  1374     0FED                     	;# 
  1375     0FEE                     	;# 
  1376     0FEF                     	;# 
  1377     0000                     	;# 
  1378     0001                     	;# 
  1379     0002                     	;# 
  1380     0003                     	;# 
  1381     0004                     	;# 
  1382     0005                     	;# 
  1383     0006                     	;# 
  1384     0007                     	;# 
  1385     0008                     	;# 
  1386     0009                     	;# 
  1387     000A                     	;# 
  1388     000B                     	;# 
  1389     000C                     	;# 
  1390     000D                     	;# 
  1391     0011                     	;# 
  1392     0012                     	;# 
  1393     0013                     	;# 
  1394     0014                     	;# 
  1395     0015                     	;# 
  1396     0016                     	;# 
  1397     0016                     	;# 
  1398     0017                     	;# 
  1399     0018                     	;# 
  1400     0019                     	;# 
  1401     001A                     	;# 
  1402     001B                     	;# 
  1403     001C                     	;# 
  1404     001E                     	;# 
  1405     001F                     	;# 
  1406     008C                     	;# 
  1407     008D                     	;# 
  1408     0091                     	;# 
  1409     0092                     	;# 
  1410     0093                     	;# 
  1411     0094                     	;# 
  1412     0095                     	;# 
  1413     0096                     	;# 
  1414     0097                     	;# 
  1415     0098                     	;# 
  1416     0099                     	;# 
  1417     009A                     	;# 
  1418     009B                     	;# 
  1419     009B                     	;# 
  1420     009C                     	;# 
  1421     009D                     	;# 
  1422     009E                     	;# 
  1423     010C                     	;# 
  1424     010D                     	;# 
  1425     0111                     	;# 
  1426     0112                     	;# 
  1427     0113                     	;# 
  1428     0114                     	;# 
  1429     0115                     	;# 
  1430     0116                     	;# 
  1431     0117                     	;# 
  1432     0118                     	;# 
  1433     0119                     	;# 
  1434     011A                     	;# 
  1435     011B                     	;# 
  1436     011D                     	;# 
  1437     011E                     	;# 
  1438     018C                     	;# 
  1439     018D                     	;# 
  1440     0191                     	;# 
  1441     0191                     	;# 
  1442     0192                     	;# 
  1443     0193                     	;# 
  1444     0193                     	;# 
  1445     0193                     	;# 
  1446     0194                     	;# 
  1447     0195                     	;# 
  1448     0196                     	;# 
  1449     0199                     	;# 
  1450     019A                     	;# 
  1451     019B                     	;# 
  1452     019B                     	;# 
  1453     019B                     	;# 
  1454     019B                     	;# 
  1455     019C                     	;# 
  1456     019C                     	;# 
  1457     019D                     	;# 
  1458     019E                     	;# 
  1459     019F                     	;# 
  1460     020C                     	;# 
  1461     020D                     	;# 
  1462     0211                     	;# 
  1463     0211                     	;# 
  1464     0212                     	;# 
  1465     0212                     	;# 
  1466     0213                     	;# 
  1467     0213                     	;# 
  1468     0214                     	;# 
  1469     0214                     	;# 
  1470     0215                     	;# 
  1471     0215                     	;# 
  1472     0215                     	;# 
  1473     0216                     	;# 
  1474     0216                     	;# 
  1475     0217                     	;# 
  1476     0217                     	;# 
  1477     0219                     	;# 
  1478     021A                     	;# 
  1479     021B                     	;# 
  1480     021C                     	;# 
  1481     021D                     	;# 
  1482     021E                     	;# 
  1483     021F                     	;# 
  1484     0291                     	;# 
  1485     0291                     	;# 
  1486     0292                     	;# 
  1487     0293                     	;# 
  1488     0294                     	;# 
  1489     0295                     	;# 
  1490     0295                     	;# 
  1491     0296                     	;# 
  1492     0298                     	;# 
  1493     0298                     	;# 
  1494     0299                     	;# 
  1495     029A                     	;# 
  1496     029B                     	;# 
  1497     029C                     	;# 
  1498     029C                     	;# 
  1499     029D                     	;# 
  1500     029E                     	;# 
  1501     029E                     	;# 
  1502     0311                     	;# 
  1503     0311                     	;# 
  1504     0312                     	;# 
  1505     0313                     	;# 
  1506     0318                     	;# 
  1507     0318                     	;# 
  1508     0319                     	;# 
  1509     031A                     	;# 
  1510     0394                     	;# 
  1511     0395                     	;# 
  1512     0396                     	;# 
  1513     039A                     	;# 
  1514     039C                     	;# 
  1515     039D                     	;# 
  1516     039E                     	;# 
  1517     039F                     	;# 
  1518     0415                     	;# 
  1519     0416                     	;# 
  1520     0417                     	;# 
  1521     041C                     	;# 
  1522     041D                     	;# 
  1523     041E                     	;# 
  1524     0FE4                     	;# 
  1525     0FE5                     	;# 
  1526     0FE6                     	;# 
  1527     0FE7                     	;# 
  1528     0FE8                     	;# 
  1529     0FE9                     	;# 
  1530     0FEA                     	;# 
  1531     0FEB                     	;# 
  1532     0FED                     	;# 
  1533     0FEE                     	;# 
  1534     0FEF                     	;# 
  1535     0000                     	;# 
  1536     0001                     	;# 
  1537     0002                     	;# 
  1538     0003                     	;# 
  1539     0004                     	;# 
  1540     0005                     	;# 
  1541     0006                     	;# 
  1542     0007                     	;# 
  1543     0008                     	;# 
  1544     0009                     	;# 
  1545     000A                     	;# 
  1546     000B                     	;# 
  1547     000C                     	;# 
  1548     000D                     	;# 
  1549     0011                     	;# 
  1550     0012                     	;# 
  1551     0013                     	;# 
  1552     0014                     	;# 
  1553     0015                     	;# 
  1554     0016                     	;# 
  1555     0016                     	;# 
  1556     0017                     	;# 
  1557     0018                     	;# 
  1558     0019                     	;# 
  1559     001A                     	;# 
  1560     001B                     	;# 
  1561     001C                     	;# 
  1562     001E                     	;# 
  1563     001F                     	;# 
  1564     008C                     	;# 
  1565     008D                     	;# 
  1566     0091                     	;# 
  1567     0092                     	;# 
  1568     0093                     	;# 
  1569     0094                     	;# 
  1570     0095                     	;# 
  1571     0096                     	;# 
  1572     0097                     	;# 
  1573     0098                     	;# 
  1574     0099                     	;# 
  1575     009A                     	;# 
  1576     009B                     	;# 
  1577     009B                     	;# 
  1578     009C                     	;# 
  1579     009D                     	;# 
  1580     009E                     	;# 
  1581     010C                     	;# 
  1582     010D                     	;# 
  1583     0111                     	;# 
  1584     0112                     	;# 
  1585     0113                     	;# 
  1586     0114                     	;# 
  1587     0115                     	;# 
  1588     0116                     	;# 
  1589     0117                     	;# 
  1590     0118                     	;# 
  1591     0119                     	;# 
  1592     011A                     	;# 
  1593     011B                     	;# 
  1594     011D                     	;# 
  1595     011E                     	;# 
  1596     018C                     	;# 
  1597     018D                     	;# 
  1598     0191                     	;# 
  1599     0191                     	;# 
  1600     0192                     	;# 
  1601     0193                     	;# 
  1602     0193                     	;# 
  1603     0193                     	;# 
  1604     0194                     	;# 
  1605     0195                     	;# 
  1606     0196                     	;# 
  1607     0199                     	;# 
  1608     019A                     	;# 
  1609     019B                     	;# 
  1610     019B                     	;# 
  1611     019B                     	;# 
  1612     019B                     	;# 
  1613     019C                     	;# 
  1614     019C                     	;# 
  1615     019D                     	;# 
  1616     019E                     	;# 
  1617     019F                     	;# 
  1618     020C                     	;# 
  1619     020D                     	;# 
  1620     0211                     	;# 
  1621     0211                     	;# 
  1622     0212                     	;# 
  1623     0212                     	;# 
  1624     0213                     	;# 
  1625     0213                     	;# 
  1626     0214                     	;# 
  1627     0214                     	;# 
  1628     0215                     	;# 
  1629     0215                     	;# 
  1630     0215                     	;# 
  1631     0216                     	;# 
  1632     0216                     	;# 
  1633     0217                     	;# 
  1634     0217                     	;# 
  1635     0219                     	;# 
  1636     021A                     	;# 
  1637     021B                     	;# 
  1638     021C                     	;# 
  1639     021D                     	;# 
  1640     021E                     	;# 
  1641     021F                     	;# 
  1642     0291                     	;# 
  1643     0291                     	;# 
  1644     0292                     	;# 
  1645     0293                     	;# 
  1646     0294                     	;# 
  1647     0295                     	;# 
  1648     0295                     	;# 
  1649     0296                     	;# 
  1650     0298                     	;# 
  1651     0298                     	;# 
  1652     0299                     	;# 
  1653     029A                     	;# 
  1654     029B                     	;# 
  1655     029C                     	;# 
  1656     029C                     	;# 
  1657     029D                     	;# 
  1658     029E                     	;# 
  1659     029E                     	;# 
  1660     0311                     	;# 
  1661     0311                     	;# 
  1662     0312                     	;# 
  1663     0313                     	;# 
  1664     0318                     	;# 
  1665     0318                     	;# 
  1666     0319                     	;# 
  1667     031A                     	;# 
  1668     0394                     	;# 
  1669     0395                     	;# 
  1670     0396                     	;# 
  1671     039A                     	;# 
  1672     039C                     	;# 
  1673     039D                     	;# 
  1674     039E                     	;# 
  1675     039F                     	;# 
  1676     0415                     	;# 
  1677     0416                     	;# 
  1678     0417                     	;# 
  1679     041C                     	;# 
  1680     041D                     	;# 
  1681     041E                     	;# 
  1682     0FE4                     	;# 
  1683     0FE5                     	;# 
  1684     0FE6                     	;# 
  1685     0FE7                     	;# 
  1686     0FE8                     	;# 
  1687     0FE9                     	;# 
  1688     0FEA                     	;# 
  1689     0FEB                     	;# 
  1690     0FED                     	;# 
  1691     0FEE                     	;# 
  1692     0FEF                     	;# 
  1693     0000                     	;# 
  1694     0001                     	;# 
  1695     0002                     	;# 
  1696     0003                     	;# 
  1697     0004                     	;# 
  1698     0005                     	;# 
  1699     0006                     	;# 
  1700     0007                     	;# 
  1701     0008                     	;# 
  1702     0009                     	;# 
  1703     000A                     	;# 
  1704     000B                     	;# 
  1705     000C                     	;# 
  1706     000D                     	;# 
  1707     0011                     	;# 
  1708     0012                     	;# 
  1709     0013                     	;# 
  1710     0014                     	;# 
  1711     0015                     	;# 
  1712     0016                     	;# 
  1713     0016                     	;# 
  1714     0017                     	;# 
  1715     0018                     	;# 
  1716     0019                     	;# 
  1717     001A                     	;# 
  1718     001B                     	;# 
  1719     001C                     	;# 
  1720     001E                     	;# 
  1721     001F                     	;# 
  1722     008C                     	;# 
  1723     008D                     	;# 
  1724     0091                     	;# 
  1725     0092                     	;# 
  1726     0093                     	;# 
  1727     0094                     	;# 
  1728     0095                     	;# 
  1729     0096                     	;# 
  1730     0097                     	;# 
  1731     0098                     	;# 
  1732     0099                     	;# 
  1733     009A                     	;# 
  1734     009B                     	;# 
  1735     009B                     	;# 
  1736     009C                     	;# 
  1737     009D                     	;# 
  1738     009E                     	;# 
  1739     010C                     	;# 
  1740     010D                     	;# 
  1741     0111                     	;# 
  1742     0112                     	;# 
  1743     0113                     	;# 
  1744     0114                     	;# 
  1745     0115                     	;# 
  1746     0116                     	;# 
  1747     0117                     	;# 
  1748     0118                     	;# 
  1749     0119                     	;# 
  1750     011A                     	;# 
  1751     011B                     	;# 
  1752     011D                     	;# 
  1753     011E                     	;# 
  1754     018C                     	;# 
  1755     018D                     	;# 
  1756     0191                     	;# 
  1757     0191                     	;# 
  1758     0192                     	;# 
  1759     0193                     	;# 
  1760     0193                     	;# 
  1761     0193                     	;# 
  1762     0194                     	;# 
  1763     0195                     	;# 
  1764     0196                     	;# 
  1765     0199                     	;# 
  1766     019A                     	;# 
  1767     019B                     	;# 
  1768     019B                     	;# 
  1769     019B                     	;# 
  1770     019B                     	;# 
  1771     019C                     	;# 
  1772     019C                     	;# 
  1773     019D                     	;# 
  1774     019E                     	;# 
  1775     019F                     	;# 
  1776     020C                     	;# 
  1777     020D                     	;# 
  1778     0211                     	;# 
  1779     0211                     	;# 
  1780     0212                     	;# 
  1781     0212                     	;# 
  1782     0213                     	;# 
  1783     0213                     	;# 
  1784     0214                     	;# 
  1785     0214                     	;# 
  1786     0215                     	;# 
  1787     0215                     	;# 
  1788     0215                     	;# 
  1789     0216                     	;# 
  1790     0216                     	;# 
  1791     0217                     	;# 
  1792     0217                     	;# 
  1793     0219                     	;# 
  1794     021A                     	;# 
  1795     021B                     	;# 
  1796     021C                     	;# 
  1797     021D                     	;# 
  1798     021E                     	;# 
  1799     021F                     	;# 
  1800     0291                     	;# 
  1801     0291                     	;# 
  1802     0292                     	;# 
  1803     0293                     	;# 
  1804     0294                     	;# 
  1805     0295                     	;# 
  1806     0295                     	;# 
  1807     0296                     	;# 
  1808     0298                     	;# 
  1809     0298                     	;# 
  1810     0299                     	;# 
  1811     029A                     	;# 
  1812     029B                     	;# 
  1813     029C                     	;# 
  1814     029C                     	;# 
  1815     029D                     	;# 
  1816     029E                     	;# 
  1817     029E                     	;# 
  1818     0311                     	;# 
  1819     0311                     	;# 
  1820     0312                     	;# 
  1821     0313                     	;# 
  1822     0318                     	;# 
  1823     0318                     	;# 
  1824     0319                     	;# 
  1825     031A                     	;# 
  1826     0394                     	;# 
  1827     0395                     	;# 
  1828     0396                     	;# 
  1829     039A                     	;# 
  1830     039C                     	;# 
  1831     039D                     	;# 
  1832     039E                     	;# 
  1833     039F                     	;# 
  1834     0415                     	;# 
  1835     0416                     	;# 
  1836     0417                     	;# 
  1837     041C                     	;# 
  1838     041D                     	;# 
  1839     041E                     	;# 
  1840     0FE4                     	;# 
  1841     0FE5                     	;# 
  1842     0FE6                     	;# 
  1843     0FE7                     	;# 
  1844     0FE8                     	;# 
  1845     0FE9                     	;# 
  1846     0FEA                     	;# 
  1847     0FEB                     	;# 
  1848     0FED                     	;# 
  1849     0FEE                     	;# 
  1850     0FEF                     	;# 
  1851     0000                     	;# 
  1852     0001                     	;# 
  1853     0002                     	;# 
  1854     0003                     	;# 
  1855     0004                     	;# 
  1856     0005                     	;# 
  1857     0006                     	;# 
  1858     0007                     	;# 
  1859     0008                     	;# 
  1860     0009                     	;# 
  1861     000A                     	;# 
  1862     000B                     	;# 
  1863     000C                     	;# 
  1864     000D                     	;# 
  1865     0011                     	;# 
  1866     0012                     	;# 
  1867     0013                     	;# 
  1868     0014                     	;# 
  1869     0015                     	;# 
  1870     0016                     	;# 
  1871     0016                     	;# 
  1872     0017                     	;# 
  1873     0018                     	;# 
  1874     0019                     	;# 
  1875     001A                     	;# 
  1876     001B                     	;# 
  1877     001C                     	;# 
  1878     001E                     	;# 
  1879     001F                     	;# 
  1880     008C                     	;# 
  1881     008D                     	;# 
  1882     0091                     	;# 
  1883     0092                     	;# 
  1884     0093                     	;# 
  1885     0094                     	;# 
  1886     0095                     	;# 
  1887     0096                     	;# 
  1888     0097                     	;# 
  1889     0098                     	;# 
  1890     0099                     	;# 
  1891     009A                     	;# 
  1892     009B                     	;# 
  1893     009B                     	;# 
  1894     009C                     	;# 
  1895     009D                     	;# 
  1896     009E                     	;# 
  1897     010C                     	;# 
  1898     010D                     	;# 
  1899     0111                     	;# 
  1900     0112                     	;# 
  1901     0113                     	;# 
  1902     0114                     	;# 
  1903     0115                     	;# 
  1904     0116                     	;# 
  1905     0117                     	;# 
  1906     0118                     	;# 
  1907     0119                     	;# 
  1908     011A                     	;# 
  1909     011B                     	;# 
  1910     011D                     	;# 
  1911     011E                     	;# 
  1912     018C                     	;# 
  1913     018D                     	;# 
  1914     0191                     	;# 
  1915     0191                     	;# 
  1916     0192                     	;# 
  1917     0193                     	;# 
  1918     0193                     	;# 
  1919     0193                     	;# 
  1920     0194                     	;# 
  1921     0195                     	;# 
  1922     0196                     	;# 
  1923     0199                     	;# 
  1924     019A                     	;# 
  1925     019B                     	;# 
  1926     019B                     	;# 
  1927     019B                     	;# 
  1928     019B                     	;# 
  1929     019C                     	;# 
  1930     019C                     	;# 
  1931     019D                     	;# 
  1932     019E                     	;# 
  1933     019F                     	;# 
  1934     020C                     	;# 
  1935     020D                     	;# 
  1936     0211                     	;# 
  1937     0211                     	;# 
  1938     0212                     	;# 
  1939     0212                     	;# 
  1940     0213                     	;# 
  1941     0213                     	;# 
  1942     0214                     	;# 
  1943     0214                     	;# 
  1944     0215                     	;# 
  1945     0215                     	;# 
  1946     0215                     	;# 
  1947     0216                     	;# 
  1948     0216                     	;# 
  1949     0217                     	;# 
  1950     0217                     	;# 
  1951     0219                     	;# 
  1952     021A                     	;# 
  1953     021B                     	;# 
  1954     021C                     	;# 
  1955     021D                     	;# 
  1956     021E                     	;# 
  1957     021F                     	;# 
  1958     0291                     	;# 
  1959     0291                     	;# 
  1960     0292                     	;# 
  1961     0293                     	;# 
  1962     0294                     	;# 
  1963     0295                     	;# 
  1964     0295                     	;# 
  1965     0296                     	;# 
  1966     0298                     	;# 
  1967     0298                     	;# 
  1968     0299                     	;# 
  1969     029A                     	;# 
  1970     029B                     	;# 
  1971     029C                     	;# 
  1972     029C                     	;# 
  1973     029D                     	;# 
  1974     029E                     	;# 
  1975     029E                     	;# 
  1976     0311                     	;# 
  1977     0311                     	;# 
  1978     0312                     	;# 
  1979     0313                     	;# 
  1980     0318                     	;# 
  1981     0318                     	;# 
  1982     0319                     	;# 
  1983     031A                     	;# 
  1984     0394                     	;# 
  1985     0395                     	;# 
  1986     0396                     	;# 
  1987     039A                     	;# 
  1988     039C                     	;# 
  1989     039D                     	;# 
  1990     039E                     	;# 
  1991     039F                     	;# 
  1992     0415                     	;# 
  1993     0416                     	;# 
  1994     0417                     	;# 
  1995     041C                     	;# 
  1996     041D                     	;# 
  1997     041E                     	;# 
  1998     0FE4                     	;# 
  1999     0FE5                     	;# 
  2000     0FE6                     	;# 
  2001     0FE7                     	;# 
  2002     0FE8                     	;# 
  2003     0FE9                     	;# 
  2004     0FEA                     	;# 
  2005     0FEB                     	;# 
  2006     0FED                     	;# 
  2007     0FEE                     	;# 
  2008     0FEF                     	;# 
  2009     0000                     	;# 
  2010     0001                     	;# 
  2011     0002                     	;# 
  2012     0003                     	;# 
  2013     0004                     	;# 
  2014     0005                     	;# 
  2015     0006                     	;# 
  2016     0007                     	;# 
  2017     0008                     	;# 
  2018     0009                     	;# 
  2019     000A                     	;# 
  2020     000B                     	;# 
  2021     000C                     	;# 
  2022     000D                     	;# 
  2023     0011                     	;# 
  2024     0012                     	;# 
  2025     0013                     	;# 
  2026     0014                     	;# 
  2027     0015                     	;# 
  2028     0016                     	;# 
  2029     0016                     	;# 
  2030     0017                     	;# 
  2031     0018                     	;# 
  2032     0019                     	;# 
  2033     001A                     	;# 
  2034     001B                     	;# 
  2035     001C                     	;# 
  2036     001E                     	;# 
  2037     001F                     	;# 
  2038     008C                     	;# 
  2039     008D                     	;# 
  2040     0091                     	;# 
  2041     0092                     	;# 
  2042     0093                     	;# 
  2043     0094                     	;# 
  2044     0095                     	;# 
  2045     0096                     	;# 
  2046     0097                     	;# 
  2047     0098                     	;# 
  2048     0099                     	;# 
  2049     009A                     	;# 
  2050     009B                     	;# 
  2051     009B                     	;# 
  2052     009C                     	;# 
  2053     009D                     	;# 
  2054     009E                     	;# 
  2055     010C                     	;# 
  2056     010D                     	;# 
  2057     0111                     	;# 
  2058     0112                     	;# 
  2059     0113                     	;# 
  2060     0114                     	;# 
  2061     0115                     	;# 
  2062     0116                     	;# 
  2063     0117                     	;# 
  2064     0118                     	;# 
  2065     0119                     	;# 
  2066     011A                     	;# 
  2067     011B                     	;# 
  2068     011D                     	;# 
  2069     011E                     	;# 
  2070     018C                     	;# 
  2071     018D                     	;# 
  2072     0191                     	;# 
  2073     0191                     	;# 
  2074     0192                     	;# 
  2075     0193                     	;# 
  2076     0193                     	;# 
  2077     0193                     	;# 
  2078     0194                     	;# 
  2079     0195                     	;# 
  2080     0196                     	;# 
  2081     0199                     	;# 
  2082     019A                     	;# 
  2083     019B                     	;# 
  2084     019B                     	;# 
  2085     019B                     	;# 
  2086     019B                     	;# 
  2087     019C                     	;# 
  2088     019C                     	;# 
  2089     019D                     	;# 
  2090     019E                     	;# 
  2091     019F                     	;# 
  2092     020C                     	;# 
  2093     020D                     	;# 
  2094     0211                     	;# 
  2095     0211                     	;# 
  2096     0212                     	;# 
  2097     0212                     	;# 
  2098     0213                     	;# 
  2099     0213                     	;# 
  2100     0214                     	;# 
  2101     0214                     	;# 
  2102     0215                     	;# 
  2103     0215                     	;# 
  2104     0215                     	;# 
  2105     0216                     	;# 
  2106     0216                     	;# 
  2107     0217                     	;# 
  2108     0217                     	;# 
  2109     0219                     	;# 
  2110     021A                     	;# 
  2111     021B                     	;# 
  2112     021C                     	;# 
  2113     021D                     	;# 
  2114     021E                     	;# 
  2115     021F                     	;# 
  2116     0291                     	;# 
  2117     0291                     	;# 
  2118     0292                     	;# 
  2119     0293                     	;# 
  2120     0294                     	;# 
  2121     0295                     	;# 
  2122     0295                     	;# 
  2123     0296                     	;# 
  2124     0298                     	;# 
  2125     0298                     	;# 
  2126     0299                     	;# 
  2127     029A                     	;# 
  2128     029B                     	;# 
  2129     029C                     	;# 
  2130     029C                     	;# 
  2131     029D                     	;# 
  2132     029E                     	;# 
  2133     029E                     	;# 
  2134     0311                     	;# 
  2135     0311                     	;# 
  2136     0312                     	;# 
  2137     0313                     	;# 
  2138     0318                     	;# 
  2139     0318                     	;# 
  2140     0319                     	;# 
  2141     031A                     	;# 
  2142     0394                     	;# 
  2143     0395                     	;# 
  2144     0396                     	;# 
  2145     039A                     	;# 
  2146     039C                     	;# 
  2147     039D                     	;# 
  2148     039E                     	;# 
  2149     039F                     	;# 
  2150     0415                     	;# 
  2151     0416                     	;# 
  2152     0417                     	;# 
  2153     041C                     	;# 
  2154     041D                     	;# 
  2155     041E                     	;# 
  2156     0FE4                     	;# 
  2157     0FE5                     	;# 
  2158     0FE6                     	;# 
  2159     0FE7                     	;# 
  2160     0FE8                     	;# 
  2161     0FE9                     	;# 
  2162     0FEA                     	;# 
  2163     0FEB                     	;# 
  2164     0FED                     	;# 
  2165     0FEE                     	;# 
  2166     0FEF                     	;# 
  2167     0000                     	;# 
  2168     0001                     	;# 
  2169     0002                     	;# 
  2170     0003                     	;# 
  2171     0004                     	;# 
  2172     0005                     	;# 
  2173     0006                     	;# 
  2174     0007                     	;# 
  2175     0008                     	;# 
  2176     0009                     	;# 
  2177     000A                     	;# 
  2178     000B                     	;# 
  2179     000C                     	;# 
  2180     000D                     	;# 
  2181     0011                     	;# 
  2182     0012                     	;# 
  2183     0013                     	;# 
  2184     0014                     	;# 
  2185     0015                     	;# 
  2186     0016                     	;# 
  2187     0016                     	;# 
  2188     0017                     	;# 
  2189     0018                     	;# 
  2190     0019                     	;# 
  2191     001A                     	;# 
  2192     001B                     	;# 
  2193     001C                     	;# 
  2194     001E                     	;# 
  2195     001F                     	;# 
  2196     008C                     	;# 
  2197     008D                     	;# 
  2198     0091                     	;# 
  2199     0092                     	;# 
  2200     0093                     	;# 
  2201     0094                     	;# 
  2202     0095                     	;# 
  2203     0096                     	;# 
  2204     0097                     	;# 
  2205     0098                     	;# 
  2206     0099                     	;# 
  2207     009A                     	;# 
  2208     009B                     	;# 
  2209     009B                     	;# 
  2210     009C                     	;# 
  2211     009D                     	;# 
  2212     009E                     	;# 
  2213     010C                     	;# 
  2214     010D                     	;# 
  2215     0111                     	;# 
  2216     0112                     	;# 
  2217     0113                     	;# 
  2218     0114                     	;# 
  2219     0115                     	;# 
  2220     0116                     	;# 
  2221     0117                     	;# 
  2222     0118                     	;# 
  2223     0119                     	;# 
  2224     011A                     	;# 
  2225     011B                     	;# 
  2226     011D                     	;# 
  2227     011E                     	;# 
  2228     018C                     	;# 
  2229     018D                     	;# 
  2230     0191                     	;# 
  2231     0191                     	;# 
  2232     0192                     	;# 
  2233     0193                     	;# 
  2234     0193                     	;# 
  2235     0193                     	;# 
  2236     0194                     	;# 
  2237     0195                     	;# 
  2238     0196                     	;# 
  2239     0199                     	;# 
  2240     019A                     	;# 
  2241     019B                     	;# 
  2242     019B                     	;# 
  2243     019B                     	;# 
  2244     019B                     	;# 
  2245     019C                     	;# 
  2246     019C                     	;# 
  2247     019D                     	;# 
  2248     019E                     	;# 
  2249     019F                     	;# 
  2250     020C                     	;# 
  2251     020D                     	;# 
  2252     0211                     	;# 
  2253     0211                     	;# 
  2254     0212                     	;# 
  2255     0212                     	;# 
  2256     0213                     	;# 
  2257     0213                     	;# 
  2258     0214                     	;# 
  2259     0214                     	;# 
  2260     0215                     	;# 
  2261     0215                     	;# 
  2262     0215                     	;# 
  2263     0216                     	;# 
  2264     0216                     	;# 
  2265     0217                     	;# 
  2266     0217                     	;# 
  2267     0219                     	;# 
  2268     021A                     	;# 
  2269     021B                     	;# 
  2270     021C                     	;# 
  2271     021D                     	;# 
  2272     021E                     	;# 
  2273     021F                     	;# 
  2274     0291                     	;# 
  2275     0291                     	;# 
  2276     0292                     	;# 
  2277     0293                     	;# 
  2278     0294                     	;# 
  2279     0295                     	;# 
  2280     0295                     	;# 
  2281     0296                     	;# 
  2282     0298                     	;# 
  2283     0298                     	;# 
  2284     0299                     	;# 
  2285     029A                     	;# 
  2286     029B                     	;# 
  2287     029C                     	;# 
  2288     029C                     	;# 
  2289     029D                     	;# 
  2290     029E                     	;# 
  2291     029E                     	;# 
  2292     0311                     	;# 
  2293     0311                     	;# 
  2294     0312                     	;# 
  2295     0313                     	;# 
  2296     0318                     	;# 
  2297     0318                     	;# 
  2298     0319                     	;# 
  2299     031A                     	;# 
  2300     0394                     	;# 
  2301     0395                     	;# 
  2302     0396                     	;# 
  2303     039A                     	;# 
  2304     039C                     	;# 
  2305     039D                     	;# 
  2306     039E                     	;# 
  2307     039F                     	;# 
  2308     0415                     	;# 
  2309     0416                     	;# 
  2310     0417                     	;# 
  2311     041C                     	;# 
  2312     041D                     	;# 
  2313     041E                     	;# 
  2314     0FE4                     	;# 
  2315     0FE5                     	;# 
  2316     0FE6                     	;# 
  2317     0FE7                     	;# 
  2318     0FE8                     	;# 
  2319     0FE9                     	;# 
  2320     0FEA                     	;# 
  2321     0FEB                     	;# 
  2322     0FED                     	;# 
  2323     0FEE                     	;# 
  2324     0FEF                     	;# 
  2325     0000                     	;# 
  2326     0001                     	;# 
  2327     0002                     	;# 
  2328     0003                     	;# 
  2329     0004                     	;# 
  2330     0005                     	;# 
  2331     0006                     	;# 
  2332     0007                     	;# 
  2333     0008                     	;# 
  2334     0009                     	;# 
  2335     000A                     	;# 
  2336     000B                     	;# 
  2337     000C                     	;# 
  2338     000D                     	;# 
  2339     0011                     	;# 
  2340     0012                     	;# 
  2341     0013                     	;# 
  2342     0014                     	;# 
  2343     0015                     	;# 
  2344     0016                     	;# 
  2345     0016                     	;# 
  2346     0017                     	;# 
  2347     0018                     	;# 
  2348     0019                     	;# 
  2349     001A                     	;# 
  2350     001B                     	;# 
  2351     001C                     	;# 
  2352     001E                     	;# 
  2353     001F                     	;# 
  2354     008C                     	;# 
  2355     008D                     	;# 
  2356     0091                     	;# 
  2357     0092                     	;# 
  2358     0093                     	;# 
  2359     0094                     	;# 
  2360     0095                     	;# 
  2361     0096                     	;# 
  2362     0097                     	;# 
  2363     0098                     	;# 
  2364     0099                     	;# 
  2365     009A                     	;# 
  2366     009B                     	;# 
  2367     009B                     	;# 
  2368     009C                     	;# 
  2369     009D                     	;# 
  2370     009E                     	;# 
  2371     010C                     	;# 
  2372     010D                     	;# 
  2373     0111                     	;# 
  2374     0112                     	;# 
  2375     0113                     	;# 
  2376     0114                     	;# 
  2377     0115                     	;# 
  2378     0116                     	;# 
  2379     0117                     	;# 
  2380     0118                     	;# 
  2381     0119                     	;# 
  2382     011A                     	;# 
  2383     011B                     	;# 
  2384     011D                     	;# 
  2385     011E                     	;# 
  2386     018C                     	;# 
  2387     018D                     	;# 
  2388     0191                     	;# 
  2389     0191                     	;# 
  2390     0192                     	;# 
  2391     0193                     	;# 
  2392     0193                     	;# 
  2393     0193                     	;# 
  2394     0194                     	;# 
  2395     0195                     	;# 
  2396     0196                     	;# 
  2397     0199                     	;# 
  2398     019A                     	;# 
  2399     019B                     	;# 
  2400     019B                     	;# 
  2401     019B                     	;# 
  2402     019B                     	;# 
  2403     019C                     	;# 
  2404     019C                     	;# 
  2405     019D                     	;# 
  2406     019E                     	;# 
  2407     019F                     	;# 
  2408     020C                     	;# 
  2409     020D                     	;# 
  2410     0211                     	;# 
  2411     0211                     	;# 
  2412     0212                     	;# 
  2413     0212                     	;# 
  2414     0213                     	;# 
  2415     0213                     	;# 
  2416     0214                     	;# 
  2417     0214                     	;# 
  2418     0215                     	;# 
  2419     0215                     	;# 
  2420     0215                     	;# 
  2421     0216                     	;# 
  2422     0216                     	;# 
  2423     0217                     	;# 
  2424     0217                     	;# 
  2425     0219                     	;# 
  2426     021A                     	;# 
  2427     021B                     	;# 
  2428     021C                     	;# 
  2429     021D                     	;# 
  2430     021E                     	;# 
  2431     021F                     	;# 
  2432     0291                     	;# 
  2433     0291                     	;# 
  2434     0292                     	;# 
  2435     0293                     	;# 
  2436     0294                     	;# 
  2437     0295                     	;# 
  2438     0295                     	;# 
  2439     0296                     	;# 
  2440     0298                     	;# 
  2441     0298                     	;# 
  2442     0299                     	;# 
  2443     029A                     	;# 
  2444     029B                     	;# 
  2445     029C                     	;# 
  2446     029C                     	;# 
  2447     029D                     	;# 
  2448     029E                     	;# 
  2449     029E                     	;# 
  2450     0311                     	;# 
  2451     0311                     	;# 
  2452     0312                     	;# 
  2453     0313                     	;# 
  2454     0318                     	;# 
  2455     0318                     	;# 
  2456     0319                     	;# 
  2457     031A                     	;# 
  2458     0394                     	;# 
  2459     0395                     	;# 
  2460     0396                     	;# 
  2461     039A                     	;# 
  2462     039C                     	;# 
  2463     039D                     	;# 
  2464     039E                     	;# 
  2465     039F                     	;# 
  2466     0415                     	;# 
  2467     0416                     	;# 
  2468     0417                     	;# 
  2469     041C                     	;# 
  2470     041D                     	;# 
  2471     041E                     	;# 
  2472     0FE4                     	;# 
  2473     0FE5                     	;# 
  2474     0FE6                     	;# 
  2475     0FE7                     	;# 
  2476     0FE8                     	;# 
  2477     0FE9                     	;# 
  2478     0FEA                     	;# 
  2479     0FEB                     	;# 
  2480     0FED                     	;# 
  2481     0FEE                     	;# 
  2482     0FEF                     	;# 
  2483     0000                     	;# 
  2484     0001                     	;# 
  2485     0002                     	;# 
  2486     0003                     	;# 
  2487     0004                     	;# 
  2488     0005                     	;# 
  2489     0006                     	;# 
  2490     0007                     	;# 
  2491     0008                     	;# 
  2492     0009                     	;# 
  2493     000A                     	;# 
  2494     000B                     	;# 
  2495     000C                     	;# 
  2496     000D                     	;# 
  2497     0011                     	;# 
  2498     0012                     	;# 
  2499     0013                     	;# 
  2500     0014                     	;# 
  2501     0015                     	;# 
  2502     0016                     	;# 
  2503     0016                     	;# 
  2504     0017                     	;# 
  2505     0018                     	;# 
  2506     0019                     	;# 
  2507     001A                     	;# 
  2508     001B                     	;# 
  2509     001C                     	;# 
  2510     001E                     	;# 
  2511     001F                     	;# 
  2512     008C                     	;# 
  2513     008D                     	;# 
  2514     0091                     	;# 
  2515     0092                     	;# 
  2516     0093                     	;# 
  2517     0094                     	;# 
  2518     0095                     	;# 
  2519     0096                     	;# 
  2520     0097                     	;# 
  2521     0098                     	;# 
  2522     0099                     	;# 
  2523     009A                     	;# 
  2524     009B                     	;# 
  2525     009B                     	;# 
  2526     009C                     	;# 
  2527     009D                     	;# 
  2528     009E                     	;# 
  2529     010C                     	;# 
  2530     010D                     	;# 
  2531     0111                     	;# 
  2532     0112                     	;# 
  2533     0113                     	;# 
  2534     0114                     	;# 
  2535     0115                     	;# 
  2536     0116                     	;# 
  2537     0117                     	;# 
  2538     0118                     	;# 
  2539     0119                     	;# 
  2540     011A                     	;# 
  2541     011B                     	;# 
  2542     011D                     	;# 
  2543     011E                     	;# 
  2544     018C                     	;# 
  2545     018D                     	;# 
  2546     0191                     	;# 
  2547     0191                     	;# 
  2548     0192                     	;# 
  2549     0193                     	;# 
  2550     0193                     	;# 
  2551     0193                     	;# 
  2552     0194                     	;# 
  2553     0195                     	;# 
  2554     0196                     	;# 
  2555     0199                     	;# 
  2556     019A                     	;# 
  2557     019B                     	;# 
  2558     019B                     	;# 
  2559     019B                     	;# 
  2560     019B                     	;# 
  2561     019C                     	;# 
  2562     019C                     	;# 
  2563     019D                     	;# 
  2564     019E                     	;# 
  2565     019F                     	;# 
  2566     020C                     	;# 
  2567     020D                     	;# 
  2568     0211                     	;# 
  2569     0211                     	;# 
  2570     0212                     	;# 
  2571     0212                     	;# 
  2572     0213                     	;# 
  2573     0213                     	;# 
  2574     0214                     	;# 
  2575     0214                     	;# 
  2576     0215                     	;# 
  2577     0215                     	;# 
  2578     0215                     	;# 
  2579     0216                     	;# 
  2580     0216                     	;# 
  2581     0217                     	;# 
  2582     0217                     	;# 
  2583     0219                     	;# 
  2584     021A                     	;# 
  2585     021B                     	;# 
  2586     021C                     	;# 
  2587     021D                     	;# 
  2588     021E                     	;# 
  2589     021F                     	;# 
  2590     0291                     	;# 
  2591     0291                     	;# 
  2592     0292                     	;# 
  2593     0293                     	;# 
  2594     0294                     	;# 
  2595     0295                     	;# 
  2596     0295                     	;# 
  2597     0296                     	;# 
  2598     0298                     	;# 
  2599     0298                     	;# 
  2600     0299                     	;# 
  2601     029A                     	;# 
  2602     029B                     	;# 
  2603     029C                     	;# 
  2604     029C                     	;# 
  2605     029D                     	;# 
  2606     029E                     	;# 
  2607     029E                     	;# 
  2608     0311                     	;# 
  2609     0311                     	;# 
  2610     0312                     	;# 
  2611     0313                     	;# 
  2612     0318                     	;# 
  2613     0318                     	;# 
  2614     0319                     	;# 
  2615     031A                     	;# 
  2616     0394                     	;# 
  2617     0395                     	;# 
  2618     0396                     	;# 
  2619     039A                     	;# 
  2620     039C                     	;# 
  2621     039D                     	;# 
  2622     039E                     	;# 
  2623     039F                     	;# 
  2624     0415                     	;# 
  2625     0416                     	;# 
  2626     0417                     	;# 
  2627     041C                     	;# 
  2628     041D                     	;# 
  2629     041E                     	;# 
  2630     0FE4                     	;# 
  2631     0FE5                     	;# 
  2632     0FE6                     	;# 
  2633     0FE7                     	;# 
  2634     0FE8                     	;# 
  2635     0FE9                     	;# 
  2636     0FEA                     	;# 
  2637     0FEB                     	;# 
  2638     0FED                     	;# 
  2639     0FEE                     	;# 
  2640     0FEF                     	;# 
  2641                           
  2642 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  2643     0000                     
  2644 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  2645     0000                     
  2646 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  2647     0000                     
  2648                           	psect	idataBANK0
  2649     0B59                     __pidataBANK0:
  2650                           
  2651                           ;initializer for _kpf
  2652     0B59  3415               	retlw	21
  2653     0B5A  3400               	retlw	0
  2654     0B5B  3400               	retlw	0
  2655                           
  2656                           ;initializer for _first_read
  2657     0B5C  3401               	retlw	1
  2658                           
  2659                           	psect	idataBANK2
  2660     0C37                     __pidataBANK2:
  2661                           
  2662                           ;initializer for _timecontrol
  2663     0C37  3404               	retlw	4
  2664     0C38  3400               	retlw	0
  2665     0C39  3400               	retlw	0
  2666                           
  2667                           ;initializer for _kdp
  2668     0C3A  340F               	retlw	15
  2669     0C3B  3400               	retlw	0
  2670     0C3C  3400               	retlw	0
  2671                           
  2672                           ;initializer for _kip
  2673     0C3D  3411               	retlw	17
  2674     0C3E  3400               	retlw	0
  2675     0C3F  3400               	retlw	0
  2676                           
  2677                           ;initializer for _kpp
  2678     0C40  3420               	retlw	32
  2679     0C41  3400               	retlw	0
  2680     0C42  3400               	retlw	0
  2681                           
  2682                           ;initializer for _kdf
  2683     0C43  346D               	retlw	109
  2684     0C44  3400               	retlw	0
  2685     0C45  3400               	retlw	0
  2686                           
  2687                           ;initializer for _kif
  2688     0C46  3402               	retlw	2
  2689     0C47  3400               	retlw	0
  2690     0C48  3400               	retlw	0
  2691                           
  2692                           	psect	stringtext1
  2693     045B                     __pstringtext1:
  2694     045B                     _lookupTable:
  2695     045B  348D               	retlw	141
  2696     045C  34B3               	retlw	179
  2697     045D  3429               	retlw	41
  2698     045E  343D               	retlw	61
  2699     045F  343E               	retlw	62
  2700     0460  3403               	retlw	3
  2701     0461  342A               	retlw	42
  2702     0462  343D               	retlw	61
  2703     0463  34F0               	retlw	240
  2704     0464  3452               	retlw	82
  2705     0465  342A               	retlw	42
  2706     0466  343D               	retlw	61
  2707     0467  3494               	retlw	148
  2708     0468  34A1               	retlw	161
  2709     0469  342A               	retlw	42
  2710     046A  343D               	retlw	61
  2711     046B  3445               	retlw	69
  2712     046C  34F1               	retlw	241
  2713     046D  342A               	retlw	42
  2714     046E  343D               	retlw	61
  2715     046F  34EA               	retlw	234
  2716     0470  343F               	retlw	63
  2717     0471  342B               	retlw	43
  2718     0472  343D               	retlw	61
  2719     0473  348F               	retlw	143
  2720     0474  348E               	retlw	142
  2721     0475  342B               	retlw	43
  2722     0476  343D               	retlw	61
  2723     0477  3433               	retlw	51
  2724     0478  34DD               	retlw	221
  2725     0479  342B               	retlw	43
  2726     047A  343D               	retlw	61
  2727     047B  34D8               	retlw	216
  2728     047C  342B               	retlw	43
  2729     047D  342C               	retlw	44
  2730     047E  343D               	retlw	61
  2731     047F  3470               	retlw	112
  2732     0480  3479               	retlw	121
  2733     0481  342C               	retlw	44
  2734     0482  343D               	retlw	61
  2735     0483  3415               	retlw	21
  2736     0484  34C8               	retlw	200
  2737     0485  342C               	retlw	44
  2738     0486  343D               	retlw	61
  2739     0487  34AD               	retlw	173
  2740     0488  3415               	retlw	21
  2741     0489  342D               	retlw	45
  2742     048A  343D               	retlw	61
  2743     048B  3452               	retlw	82
  2744     048C  3464               	retlw	100
  2745     048D  342D               	retlw	45
  2746     048E  343D               	retlw	61
  2747     048F  34EA               	retlw	234
  2748     0490  34B1               	retlw	177
  2749     0491  342D               	retlw	45
  2750     0492  343D               	retlw	61
  2751     0493  3482               	retlw	130
  2752     0494  34FF               	retlw	255
  2753     0495  342D               	retlw	45
  2754     0496  343D               	retlw	61
  2755     0497  341A               	retlw	26
  2756     0498  344D               	retlw	77
  2757     0499  342E               	retlw	46
  2758     049A  343D               	retlw	61
  2759     049B  34A6               	retlw	166
  2760     049C  3499               	retlw	153
  2761     049D  342E               	retlw	46
  2762     049E  343D               	retlw	61
  2763     049F  343E               	retlw	62
  2764     04A0  34E7               	retlw	231
  2765     04A1  342E               	retlw	46
  2766     04A2  343D               	retlw	61
  2767     04A3  34D7               	retlw	215
  2768     04A4  3434               	retlw	52
  2769     04A5  342F               	retlw	47
  2770     04A6  343D               	retlw	61
  2771     04A7  3462               	retlw	98
  2772     04A8  3481               	retlw	129
  2773     04A9  342F               	retlw	47
  2774     04AA  343D               	retlw	61
  2775     04AB  34EE               	retlw	238
  2776     04AC  34CD               	retlw	205
  2777     04AD  342F               	retlw	47
  2778     04AE  343D               	retlw	61
  2779     04AF  347A               	retlw	122
  2780     04B0  341A               	retlw	26
  2781     04B1  3430               	retlw	48
  2782     04B2  343D               	retlw	61
  2783     04B3  3406               	retlw	6
  2784     04B4  3467               	retlw	103
  2785     04B5  3430               	retlw	48
  2786     04B6  343D               	retlw	61
  2787     04B7  3492               	retlw	146
  2788     04B8  34B3               	retlw	179
  2789     04B9  3430               	retlw	48
  2790     04BA  343D               	retlw	61
  2791     04BB  341D               	retlw	29
  2792     04BC  3400               	retlw	0
  2793     04BD  3431               	retlw	49
  2794     04BE  343D               	retlw	61
  2795     04BF  34A9               	retlw	169
  2796     04C0  344C               	retlw	76
  2797     04C1  3431               	retlw	49
  2798     04C2  343D               	retlw	61
  2799     04C3  3429               	retlw	41
  2800     04C4  3498               	retlw	152
  2801     04C5  3431               	retlw	49
  2802     04C6  343D               	retlw	61
  2803     04C7  34B4               	retlw	180
  2804     04C8  34E4               	retlw	228
  2805     04C9  3431               	retlw	49
  2806     04CA  343D               	retlw	61
  2807     04CB  3434               	retlw	52
  2808     04CC  3430               	retlw	48
  2809     04CD  3432               	retlw	50
  2810     04CE  343D               	retlw	61
  2811     04CF  34B3               	retlw	179
  2812     04D0  347B               	retlw	123
  2813     04D1  3432               	retlw	50
  2814     04D2  343D               	retlw	61
  2815     04D3  3432               	retlw	50
  2816     04D4  34C7               	retlw	199
  2817     04D5  3432               	retlw	50
  2818     04D6  343D               	retlw	61
  2819     04D7  34B2               	retlw	178
  2820     04D8  3412               	retlw	18
  2821     04D9  3433               	retlw	51
  2822     04DA  343D               	retlw	61
  2823     04DB  3431               	retlw	49
  2824     04DC  345E               	retlw	94
  2825     04DD  3433               	retlw	51
  2826     04DE  343D               	retlw	61
  2827     04DF  34B0               	retlw	176
  2828     04E0  34A9               	retlw	169
  2829     04E1  3433               	retlw	51
  2830     04E2  343D               	retlw	61
  2831     04E3  3423               	retlw	35
  2832     04E4  34F4               	retlw	244
  2833     04E5  3433               	retlw	51
  2834     04E6  343D               	retlw	61
  2835     04E7  34A3               	retlw	163
  2836     04E8  343F               	retlw	63
  2837     04E9  3434               	retlw	52
  2838     04EA  343D               	retlw	61
  2839     04EB  3416               	retlw	22
  2840     04EC  348A               	retlw	138
  2841     04ED  3434               	retlw	52
  2842     04EE  343D               	retlw	61
  2843     04EF  3489               	retlw	137
  2844     04F0  34D4               	retlw	212
  2845     04F1  3434               	retlw	52
  2846     04F2  343D               	retlw	61
  2847     04F3  34FB               	retlw	251
  2848     04F4  341E               	retlw	30
  2849     04F5  3435               	retlw	53
  2850     04F6  343D               	retlw	61
  2851     04F7  346E               	retlw	110
  2852     04F8  3469               	retlw	105
  2853     04F9  3435               	retlw	53
  2854     04FA  343D               	retlw	61
  2855     04FB  34E1               	retlw	225
  2856     04FC  34B3               	retlw	179
  2857     04FD  3435               	retlw	53
  2858     04FE  343D               	retlw	61
  2859     04FF  3454               	retlw	84
  2860     0500  34FE               	retlw	254
  2861     0501  3435               	retlw	53
  2862     0502  343D               	retlw	61
  2863     0503  34C7               	retlw	199
  2864     0504  3448               	retlw	72
  2865     0505  3436               	retlw	54
  2866     0506  343D               	retlw	61
  2867     0507  342E               	retlw	46
  2868     0508  3492               	retlw	146
  2869     0509  3436               	retlw	54
  2870     050A  343D               	retlw	61
  2871     050B  34A0               	retlw	160
  2872     050C  34DC               	retlw	220
  2873     050D  3436               	retlw	54
  2874     050E  343D               	retlw	61
  2875     050F  3407               	retlw	7
  2876     0510  3426               	retlw	38
  2877     0511  3437               	retlw	55
  2878     0512  343D               	retlw	61
  2879     0513  346D               	retlw	109
  2880     0514  346F               	retlw	111
  2881     0515  3437               	retlw	55
  2882     0516  343D               	retlw	61
  2883     0517  34D4               	retlw	212
  2884     0518  34B8               	retlw	184
  2885     0519  3437               	retlw	55
  2886     051A  343D               	retlw	61
  2887     051B  343A               	retlw	58
  2888     051C  3402               	retlw	2
  2889     051D  3438               	retlw	56
  2890     051E  343D               	retlw	61
  2891     051F  34A1               	retlw	161
  2892     0520  344B               	retlw	75
  2893     0521  3438               	retlw	56
  2894     0522  343D               	retlw	61
  2895     0523  3407               	retlw	7
  2896     0524  3495               	retlw	149
  2897     0525  3438               	retlw	56
  2898     0526  343D               	retlw	61
  2899     0527                     __end_of_lookupTable:
  2900                           
  2901                           	psect	nvBANK0
  2902     006E                     __pnvBANK0:
  2903     006E                     _TMR1_GateInterruptHandler:
  2904     006E                     	ds	2
  2905                           
  2906                           	psect	nvBANK2
  2907     0132                     __pnvBANK2:
  2908     0132                     _EUSART_ErrorHandler:
  2909     0132                     	ds	2
  2910     0134                     _EUSART_OverrunErrorHandler:
  2911     0134                     	ds	2
  2912     0136                     _EUSART_FramingErrorHandler:
  2913     0136                     	ds	2
  2914     0018                     _T1CONbits	set	24
  2915     0018                     _T1CON	set	24
  2916     0016                     _TMR1L	set	22
  2917     0017                     _TMR1H	set	23
  2918     0019                     _T1GCON	set	25
  2919     0015                     _TMR0	set	21
  2920     0013                     _PIR3bits	set	19
  2921     001C                     _T2CON	set	28
  2922     0011                     _PIR1bits	set	17
  2923     001A                     _TMR2	set	26
  2924     001B                     _PR2	set	27
  2925     000B                     _INTCONbits	set	11
  2926     009D                     _ADCON0bits	set	157
  2927     009D                     _ADCON0	set	157
  2928     009C                     _ADRESH	set	156
  2929     009B                     _ADRESL	set	155
  2930     009E                     _ADCON1	set	158
  2931     0095                     _OPTION_REG	set	149
  2932     0091                     _PIE1bits	set	145
  2933     0095                     _OPTION_REGbits	set	149
  2934     008D                     _TRISB	set	141
  2935     008C                     _TRISA	set	140
  2936     0097                     _WDTCON	set	151
  2937     0098                     _OSCTUNE	set	152
  2938     0099                     _OSCCON	set	153
  2939     010C                     _LATAbits	set	268
  2940     0115                     _CMOUTbits	set	277
  2941     0112                     _CM1CON1	set	274
  2942     0111                     _CM1CON0	set	273
  2943     0119                     _DACCON1	set	281
  2944     0118                     _DACCON0	set	280
  2945     0117                     _FVRCON	set	279
  2946     011E                     _APFCON1	set	286
  2947     011D                     _APFCON0	set	285
  2948     010D                     _LATB	set	269
  2949     010C                     _LATA	set	268
  2950     0116                     _BORCON	set	278
  2951     019A                     _TXREG	set	410
  2952     0199                     _RCREG	set	409
  2953     019D                     _RCSTAbits	set	413
  2954     019C                     _SPBRGH	set	412
  2955     019B                     _SPBRGL	set	411
  2956     019E                     _TXSTA	set	414
  2957     019D                     _RCSTA	set	413
  2958     019F                     _BAUDCON	set	415
  2959     018C                     _ANSELA	set	396
  2960     018D                     _ANSELB	set	397
  2961     020C                     _WPUA	set	524
  2962     020D                     _WPUB	set	525
  2963     029E                     _CCPTMRS0bits	set	670
  2964     0291                     _CCPR1L	set	657
  2965     0292                     _CCPR1H	set	658
  2966     0296                     _PSTR1CON	set	662
  2967     0294                     _PWM1CON	set	660
  2968     0295                     _ECCP1AS	set	661
  2969     0293                     _CCP1CON	set	659
  2970     041E                     _T6CON	set	1054
  2971     041C                     _TMR6	set	1052
  2972     041D                     _PR6	set	1053
  2973     0417                     _T4CONbits	set	1047
  2974     0417                     _T4CON	set	1047
  2975     0415                     _TMR4	set	1045
  2976     0416                     _PR4	set	1046
  2977                           
  2978                           	psect	cinit
  2979     001B                     start_initialization:	
  2980                           ; #config settings
  2981                           
  2982     001B                     __initialization:
  2983                           
  2984                           ; Initialize objects allocated to BANK0
  2985     001B  3059               	movlw	low __pidataBANK0
  2986     001C  0084               	movwf	4
  2987     001D  308B               	movlw	(high __pidataBANK0)| (0+128)
  2988     001E  0085               	movwf	5
  2989     001F  306A               	movlw	low __pdataBANK0
  2990     0020  0086               	movwf	6
  2991     0021  3000               	movlw	high __pdataBANK0
  2992     0022  0087               	movwf	7
  2993     0023  3004               	movlw	4
  2994     0024  318B  2385  3180   	fcall	init_ram
  2995                           
  2996                           ; Initialize objects allocated to BANK2
  2997     0027  3037               	movlw	low __pidataBANK2
  2998     0028  0084               	movwf	4
  2999     0029  308C               	movlw	(high __pidataBANK2)| (0+128)
  3000     002A  0085               	movwf	5
  3001     002B  3020               	movlw	low __pdataBANK2
  3002     002C  0086               	movwf	6
  3003     002D  3001               	movlw	high __pdataBANK2
  3004     002E  0087               	movwf	7
  3005     002F  3012               	movlw	18
  3006     0030  318B  2385  3180   	fcall	init_ram
  3007                           
  3008                           ; Clear objects allocated to BANK0
  3009     0033  3053               	movlw	low __pbssBANK0
  3010     0034  0084               	movwf	4
  3011     0035  3000               	movlw	high __pbssBANK0
  3012     0036  0085               	movwf	5
  3013     0037  3017               	movlw	23
  3014     0038  318B  237F  3180   	fcall	clear_ram0
  3015                           
  3016                           ; Clear objects allocated to BANK1
  3017     003B  30A0               	movlw	low __pbssBANK1
  3018     003C  0084               	movwf	4
  3019     003D  3000               	movlw	high __pbssBANK1
  3020     003E  0085               	movwf	5
  3021     003F  302D               	movlw	45
  3022     0040  318B  237F         	fcall	clear_ram0
  3023     0042                     end_of_initialization:	
  3024                           ;End of C runtime variable initialization code
  3025                           
  3026     0042                     __end_of__initialization:
  3027     0042  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3028     0043  0020               	movlb	0
  3029     0044  3186  2EA3         	ljmp	_main	;jump to C main() function
  3030                           
  3031                           	psect	bssBANK0
  3032     0053                     __pbssBANK0:
  3033     0053                     _bufferRx:
  3034     0053                     	ds	8
  3035     005B                     _flux:
  3036     005B                     	ds	3
  3037     005E                     _ballset:
  3038     005E                     	ds	3
  3039     0061                     _tempo_voo:
  3040     0061                     	ds	2
  3041     0063                     _sp_height:
  3042     0063                     	ds	2
  3043     0065                     _ADC_InterruptHandler:
  3044     0065                     	ds	2
  3045     0067                     _func_mode:
  3046     0067                     	ds	1
  3047     0068                     _sentido:
  3048     0068                     	ds	1
  3049     0069                     _timer0ReloadVal:
  3050     0069                     	ds	1
  3051                           
  3052                           	psect	dataBANK0
  3053     006A                     __pdataBANK0:
  3054     006A                     _kpf:
  3055     006A                     	ds	3
  3056     006D                     _first_read:
  3057     006D                     	ds	1
  3058                           
  3059                           	psect	bssBANK1
  3060     00A0                     __pbssBANK1:
  3061     00A0                     _avg_tempo_voo:
  3062     00A0                     	ds	4
  3063     00A4                     _outpre:
  3064     00A4                     	ds	3
  3065     00A7                     _outputsum:
  3066     00A7                     	ds	3
  3067     00AA                     _balldist:
  3068     00AA                     	ds	3
  3069     00AD                     _errorp:
  3070     00AD                     	ds	3
  3071     00B0                     _error:
  3072     00B0                     	ds	3
  3073     00B3                     _height:
  3074     00B3                     	ds	2
  3075     00B5                     _adc_temp:
  3076     00B5                     	ds	2
  3077     00B7                     _sp_position:
  3078     00B7                     	ds	2
  3079     00B9                     _position:
  3080     00B9                     	ds	2
  3081     00BB                     _dc:
  3082     00BB                     	ds	2
  3083     00BD                     _vRx:
  3084     00BD                     	ds	2
  3085     00BF                     _vTx:
  3086     00BF                     	ds	2
  3087     00C1                     _output:
  3088     00C1                     	ds	2
  3089     00C3                     _timer1ReloadVal:
  3090     00C3                     	ds	2
  3091     00C5                     _passo_ctrl:
  3092     00C5                     	ds	1
  3093     00C6                     _fim_curso:
  3094     00C6                     	ds	1
  3095     00C7                     _passo:
  3096     00C7                     	ds	1
  3097     00C8                     _nao_salva:
  3098     00C8                     	ds	1
  3099     00C9                     _count_Tx:
  3100     00C9                     	ds	1
  3101     00CA                     _countRx:
  3102     00CA                     	ds	1
  3103     00CB                     _controlchoice:
  3104     00CB                     	ds	1
  3105     00CC                     _eusartRxLastError:
  3106     00CC                     	ds	1
  3107                           
  3108                           	psect	dataBANK2
  3109     0120                     __pdataBANK2:
  3110     0120                     _timecontrol:
  3111     0120                     	ds	3
  3112     0123                     _kdp:
  3113     0123                     	ds	3
  3114     0126                     _kip:
  3115     0126                     	ds	3
  3116     0129                     _kpp:
  3117     0129                     	ds	3
  3118     012C                     _kdf:
  3119     012C                     	ds	3
  3120     012F                     _kif:
  3121     012F                     	ds	3
  3122                           
  3123                           	psect	inittext
  3124     0B85                     init_ram:
  3125     0B85  00FE               	movwf	126
  3126     0B86                     initloop:
  3127     0B86  0012               	moviw fsr0++
  3128     0B87  001E               	movwi fsr1++
  3129     0B88  0BFE               	decfsz	126,f
  3130     0B89  2B86               	goto	initloop
  3131     0B8A  3400               	retlw	0
  3132                           
  3133                           	psect	clrtext
  3134     0B7F                     clear_ram0:	
  3135                           ;	Called with FSR0 containing the base address, and
  3136                           ;	WREG with the size to clear
  3137                           
  3138     0B7F  0064               	clrwdt	;clear the watchdog before getting into this loop
  3139     0B80                     clrloop0:
  3140     0B80  0180               	clrf	0	;clear RAM location pointed to by FSR
  3141     0B81  3101               	addfsr 0,1
  3142     0B82  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3143     0B83  2B80               	goto	clrloop0	;have we reached the end yet?
  3144     0B84  3400               	retlw	0	;all done for this memory range, return
  3145                           
  3146                           	psect	cstackBANK1
  3147     00CD                     __pcstackBANK1:
  3148     00CD                     ??_PIN_MANAGER_Initialize:
  3149     00CD                     ??_OSCILLATOR_Initialize:	
  3150                           ; 1 bytes @ 0x0
  3151                           
  3152     00CD                     ??_WDT_Initialize:	
  3153                           ; 1 bytes @ 0x0
  3154                           
  3155     00CD                     ??_FVR_Initialize:	
  3156                           ; 1 bytes @ 0x0
  3157                           
  3158     00CD                     ??_DAC_Initialize:	
  3159                           ; 1 bytes @ 0x0
  3160                           
  3161     00CD                     ??_TMR4_Initialize:	
  3162                           ; 1 bytes @ 0x0
  3163                           
  3164     00CD                     ??_TMR2_Initialize:	
  3165                           ; 1 bytes @ 0x0
  3166                           
  3167     00CD                     ??_TMR0_Initialize:	
  3168                           ; 1 bytes @ 0x0
  3169                           
  3170     00CD                     ??_TMR6_Initialize:	
  3171                           ; 1 bytes @ 0x0
  3172                           
  3173     00CD                     ??_CMP1_Initialize:	
  3174                           ; 1 bytes @ 0x0
  3175                           
  3176     00CD                     ??_ADC_Initialize:	
  3177                           ; 1 bytes @ 0x0
  3178                           
  3179     00CD                     ??_EPWM1_Initialize:	
  3180                           ; 1 bytes @ 0x0
  3181                           
  3182     00CD                     ?_EUSART_SetFramingErrorHandler:	
  3183                           ; 1 bytes @ 0x0
  3184                           
  3185     00CD                     ?_EUSART_SetOverrunErrorHandler:	
  3186                           ; 1 bytes @ 0x0
  3187                           
  3188     00CD                     ?_EUSART_SetErrorHandler:	
  3189                           ; 1 bytes @ 0x0
  3190                           
  3191     00CD                     ?_TMR1_SetGateInterruptHandler:	
  3192                           ; 1 bytes @ 0x0
  3193                           
  3194     00CD                     ??_TMR4_StartTimer:	
  3195                           ; 1 bytes @ 0x0
  3196                           
  3197     00CD                     ??_TMR4_StopTimer:	
  3198                           ; 1 bytes @ 0x0
  3199                           
  3200     00CD                     ?_EPWM1_LoadDutyValue:	
  3201                           ; 1 bytes @ 0x0
  3202                           
  3203     00CD                     ??_EUSART_is_rx_ready:	
  3204                           ; 1 bytes @ 0x0
  3205                           
  3206     00CD                     ??_EUSART_Read:	
  3207                           ; 1 bytes @ 0x0
  3208                           
  3209     00CD                     ??_EUSART_Write:	
  3210                           ; 1 bytes @ 0x0
  3211                           
  3212     00CD                     ??_TMR0_ReadTimer:	
  3213                           ; 1 bytes @ 0x0
  3214                           
  3215     00CD                     ??_CMP1_GetOutputStatus:	
  3216                           ; 1 bytes @ 0x0
  3217                           
  3218     00CD                     ??_TMR6_WriteTimer:	
  3219                           ; 1 bytes @ 0x0
  3220                           
  3221     00CD                     ??_TMR6_LoadPeriodRegister:	
  3222                           ; 1 bytes @ 0x0
  3223                           
  3224     00CD                     ?_definePassoMotor:	
  3225                           ; 1 bytes @ 0x0
  3226                           
  3227     00CD                     ?_ADC_GetConversion:	
  3228                           ; 1 bytes @ 0x0
  3229                           
  3230     00CD                     ?___lwdiv:	
  3231                           ; 2 bytes @ 0x0
  3232                           
  3233     00CD                     ?___tmul:	
  3234                           ; 2 bytes @ 0x0
  3235                           
  3236     00CD                     ?___fltol:	
  3237                           ; 3 bytes @ 0x0
  3238                           
  3239     00CD                     EUSART_Write@txData:	
  3240                           ; 4 bytes @ 0x0
  3241                           
  3242     00CD                     TMR0_ReadTimer@readVal:	
  3243                           ; 1 bytes @ 0x0
  3244                           
  3245     00CD                     TMR6_WriteTimer@timerVal:	
  3246                           ; 1 bytes @ 0x0
  3247                           
  3248     00CD                     TMR6_LoadPeriodRegister@periodVal:	
  3249                           ; 1 bytes @ 0x0
  3250                           
  3251     00CD                     definePassoMotor@sentido:	
  3252                           ; 1 bytes @ 0x0
  3253                           
  3254     00CD                     EPWM1_LoadDutyValue@dutyValue:	
  3255                           ; 1 bytes @ 0x0
  3256                           
  3257     00CD                     EUSART_SetFramingErrorHandler@interruptHandler:	
  3258                           ; 2 bytes @ 0x0
  3259                           
  3260     00CD                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  3261                           ; 2 bytes @ 0x0
  3262                           
  3263     00CD                     EUSART_SetErrorHandler@interruptHandler:	
  3264                           ; 2 bytes @ 0x0
  3265                           
  3266     00CD                     TMR1_SetGateInterruptHandler@InterruptHandler:	
  3267                           ; 2 bytes @ 0x0
  3268                           
  3269     00CD                     ___lwdiv@divisor:	
  3270                           ; 2 bytes @ 0x0
  3271                           
  3272     00CD                     ___tmul@multiplier:	
  3273                           ; 2 bytes @ 0x0
  3274                           
  3275     00CD                     ___fltol@f1:	
  3276                           ; 3 bytes @ 0x0
  3277                           
  3278                           
  3279                           ; 4 bytes @ 0x0
  3280     00CD                     	ds	1
  3281     00CE                     ??_definePassoMotor:
  3282                           
  3283                           ; 1 bytes @ 0x1
  3284     00CE                     	ds	1
  3285     00CF                     ??_TMR1_Initialize:
  3286     00CF                     ??_EUSART_Initialize:	
  3287                           ; 1 bytes @ 0x2
  3288                           
  3289     00CF                     ??_EUSART_SetFramingErrorHandler:	
  3290                           ; 1 bytes @ 0x2
  3291                           
  3292     00CF                     ??_EUSART_SetOverrunErrorHandler:	
  3293                           ; 1 bytes @ 0x2
  3294                           
  3295     00CF                     ??_EUSART_SetErrorHandler:	
  3296                           ; 1 bytes @ 0x2
  3297                           
  3298     00CF                     ??_TMR1_SetGateInterruptHandler:	
  3299                           ; 1 bytes @ 0x2
  3300                           
  3301     00CF                     ??_SYSTEM_Initialize:	
  3302                           ; 1 bytes @ 0x2
  3303                           
  3304     00CF                     ??_EPWM1_LoadDutyValue:	
  3305                           ; 1 bytes @ 0x2
  3306                           
  3307     00CF                     ??_ADC_GetConversion:	
  3308                           ; 1 bytes @ 0x2
  3309                           
  3310     00CF                     definePassoMotor@passom:	
  3311                           ; 1 bytes @ 0x2
  3312                           
  3313     00CF                     ___lwdiv@dividend:	
  3314                           ; 1 bytes @ 0x2
  3315                           
  3316                           
  3317                           ; 2 bytes @ 0x2
  3318     00CF                     	ds	1
  3319     00D0                     ??_daUmPasso:
  3320     00D0                     ADC_GetConversion@channel:	
  3321                           ; 1 bytes @ 0x3
  3322                           
  3323     00D0                     daUmPasso@sentido:	
  3324                           ; 1 bytes @ 0x3
  3325                           
  3326     00D0                     ___tmul@multiplicand:	
  3327                           ; 1 bytes @ 0x3
  3328                           
  3329                           
  3330                           ; 3 bytes @ 0x3
  3331     00D0                     	ds	1
  3332     00D1                     ??_fluxpos:
  3333     00D1                     ??_setaPorta:	
  3334                           ; 1 bytes @ 0x4
  3335                           
  3336     00D1                     ??_analisa_Rx:	
  3337                           ; 1 bytes @ 0x4
  3338                           
  3339     00D1                     ??___fltol:	
  3340                           ; 1 bytes @ 0x4
  3341                           
  3342     00D1                     ??___lwdiv:	
  3343                           ; 1 bytes @ 0x4
  3344                           
  3345                           
  3346                           ; 1 bytes @ 0x4
  3347     00D1                     	ds	1
  3348     00D2                     ___lwdiv@quotient:
  3349                           
  3350                           ; 2 bytes @ 0x5
  3351     00D2                     	ds	1
  3352     00D3                     ??___tmul:
  3353     00D3                     ___tmul@product:	
  3354                           ; 1 bytes @ 0x6
  3355                           
  3356                           
  3357                           ; 3 bytes @ 0x6
  3358     00D3                     	ds	1
  3359     00D4                     ___lwdiv@counter:
  3360                           
  3361                           ; 1 bytes @ 0x7
  3362     00D4                     	ds	1
  3363     00D5                     ___fltol@sign1:
  3364                           
  3365                           ; 1 bytes @ 0x8
  3366     00D5                     	ds	1
  3367     00D6                     ??_fluxcontrol:
  3368     00D6                     ?___atdiv:	
  3369                           ; 1 bytes @ 0x9
  3370                           
  3371     00D6                     ___fltol@exp1:	
  3372                           ; 3 bytes @ 0x9
  3373                           
  3374     00D6                     ___atdiv@divisor:	
  3375                           ; 1 bytes @ 0x9
  3376                           
  3377                           
  3378                           ; 3 bytes @ 0x9
  3379     00D6                     	ds	1
  3380     00D7                     ??_envia_Tx:
  3381                           
  3382                           ; 1 bytes @ 0xA
  3383     00D7                     	ds	2
  3384     00D9                     ___atdiv@dividend:
  3385                           
  3386                           ; 3 bytes @ 0xC
  3387     00D9                     	ds	3
  3388     00DC                     ??___atdiv:
  3389                           
  3390                           ; 1 bytes @ 0xF
  3391     00DC                     	ds	1
  3392     00DD                     ___atdiv@counter:
  3393                           
  3394                           ; 1 bytes @ 0x10
  3395     00DD                     	ds	1
  3396     00DE                     ___atdiv@sign:
  3397                           
  3398                           ; 1 bytes @ 0x11
  3399     00DE                     	ds	1
  3400     00DF                     ___atdiv@quotient:
  3401                           
  3402                           ; 3 bytes @ 0x12
  3403     00DF                     	ds	3
  3404     00E2                     ??_pwmcontrol:
  3405                           
  3406                           ; 1 bytes @ 0x15
  3407     00E2                     	ds	12
  3408     00EE                     ??_controlchoose:
  3409     00EE                     ??_main:	
  3410                           ; 1 bytes @ 0x21
  3411                           
  3412                           
  3413                           ; 1 bytes @ 0x21
  3414     00EE                     	ds	1
  3415                           
  3416                           	psect	cstackCOMMON
  3417     0070                     __pcstackCOMMON:
  3418     0070                     ?_PIN_MANAGER_Initialize:
  3419     0070                     ?_OSCILLATOR_Initialize:	
  3420                           ; 1 bytes @ 0x0
  3421                           
  3422     0070                     ?_WDT_Initialize:	
  3423                           ; 1 bytes @ 0x0
  3424                           
  3425     0070                     ?_FVR_Initialize:	
  3426                           ; 1 bytes @ 0x0
  3427                           
  3428     0070                     ?_DAC_Initialize:	
  3429                           ; 1 bytes @ 0x0
  3430                           
  3431     0070                     ?_TMR4_Initialize:	
  3432                           ; 1 bytes @ 0x0
  3433                           
  3434     0070                     ?_TMR2_Initialize:	
  3435                           ; 1 bytes @ 0x0
  3436                           
  3437     0070                     ?_TMR0_Initialize:	
  3438                           ; 1 bytes @ 0x0
  3439                           
  3440     0070                     ?_TMR6_Initialize:	
  3441                           ; 1 bytes @ 0x0
  3442                           
  3443     0070                     ?_CMP1_Initialize:	
  3444                           ; 1 bytes @ 0x0
  3445                           
  3446     0070                     ?_ADC_Initialize:	
  3447                           ; 1 bytes @ 0x0
  3448                           
  3449     0070                     ?_EPWM1_Initialize:	
  3450                           ; 1 bytes @ 0x0
  3451                           
  3452     0070                     ?_TMR1_Initialize:	
  3453                           ; 1 bytes @ 0x0
  3454                           
  3455     0070                     ?_EUSART_Initialize:	
  3456                           ; 1 bytes @ 0x0
  3457                           
  3458     0070                     ?_TMR1_GATE_ISR:	
  3459                           ; 1 bytes @ 0x0
  3460                           
  3461     0070                     ?_TMR1_DefaultGateInterruptHandler:	
  3462                           ; 1 bytes @ 0x0
  3463                           
  3464     0070                     ??_TMR1_DefaultGateInterruptHandler:	
  3465                           ; 1 bytes @ 0x0
  3466                           
  3467     0070                     ?_daUmPasso:	
  3468                           ; 1 bytes @ 0x0
  3469                           
  3470     0070                     ?_SYSTEM_Initialize:	
  3471                           ; 1 bytes @ 0x0
  3472                           
  3473     0070                     ?_PIN_MANAGER_IOC:	
  3474                           ; 1 bytes @ 0x0
  3475                           
  3476     0070                     ??_PIN_MANAGER_IOC:	
  3477                           ; 1 bytes @ 0x0
  3478                           
  3479     0070                     ?_TMR4_StartTimer:	
  3480                           ; 1 bytes @ 0x0
  3481                           
  3482     0070                     ?_TMR4_StopTimer:	
  3483                           ; 1 bytes @ 0x0
  3484                           
  3485     0070                     ?_INTERRUPT_InterruptManager:	
  3486                           ; 1 bytes @ 0x0
  3487                           
  3488     0070                     ?_EUSART_is_rx_ready:	
  3489                           ; 1 bytes @ 0x0
  3490                           
  3491     0070                     ?_EUSART_Read:	
  3492                           ; 1 bytes @ 0x0
  3493                           
  3494     0070                     ?_EUSART_Write:	
  3495                           ; 1 bytes @ 0x0
  3496                           
  3497     0070                     ?_TMR0_ReadTimer:	
  3498                           ; 1 bytes @ 0x0
  3499                           
  3500     0070                     ?_CMP1_GetOutputStatus:	
  3501                           ; 1 bytes @ 0x0
  3502                           
  3503     0070                     ?_TMR6_WriteTimer:	
  3504                           ; 1 bytes @ 0x0
  3505                           
  3506     0070                     ?_TMR6_LoadPeriodRegister:	
  3507                           ; 1 bytes @ 0x0
  3508                           
  3509     0070                     ?_TMR1_WriteTimer:	
  3510                           ; 1 bytes @ 0x0
  3511                           
  3512     0070                     ?_TMR1_Reload:	
  3513                           ; 1 bytes @ 0x0
  3514                           
  3515     0070                     ?_fluxcontrol:	
  3516                           ; 1 bytes @ 0x0
  3517                           
  3518     0070                     ?_pwmcontrol:	
  3519                           ; 1 bytes @ 0x0
  3520                           
  3521     0070                     ?_fluxpos:	
  3522                           ; 1 bytes @ 0x0
  3523                           
  3524     0070                     ?_setaPorta:	
  3525                           ; 1 bytes @ 0x0
  3526                           
  3527     0070                     ?_controlchoose:	
  3528                           ; 1 bytes @ 0x0
  3529                           
  3530     0070                     ?_analisa_Rx:	
  3531                           ; 1 bytes @ 0x0
  3532                           
  3533     0070                     ?_envia_Tx:	
  3534                           ; 1 bytes @ 0x0
  3535                           
  3536     0070                     ?_mede_height:	
  3537                           ; 1 bytes @ 0x0
  3538                           
  3539     0070                     ?_main:	
  3540                           ; 1 bytes @ 0x0
  3541                           
  3542     0070                     ?__Umul8_16:	
  3543                           ; 1 bytes @ 0x0
  3544                           
  3545     0070                     ?_TMR1_ReadTimer:	
  3546                           ; 2 bytes @ 0x0
  3547                           
  3548     0070                     ?i1___lwdiv:	
  3549                           ; 2 bytes @ 0x0
  3550                           
  3551     0070                     __Umul8_16@multiplicand:	
  3552                           ; 2 bytes @ 0x0
  3553                           
  3554     0070                     TMR1_WriteTimer@timerVal:	
  3555                           ; 1 bytes @ 0x0
  3556                           
  3557     0070                     i1___lwdiv@divisor:	
  3558                           ; 2 bytes @ 0x0
  3559                           
  3560                           
  3561                           ; 2 bytes @ 0x0
  3562     0070                     	ds	2
  3563     0072                     ??__Umul8_16:
  3564     0072                     ??_TMR1_ReadTimer:	
  3565                           ; 1 bytes @ 0x2
  3566                           
  3567     0072                     ??_TMR1_WriteTimer:	
  3568                           ; 1 bytes @ 0x2
  3569                           
  3570     0072                     ??_TMR1_Reload:	
  3571                           ; 1 bytes @ 0x2
  3572                           
  3573     0072                     i1___lwdiv@dividend:	
  3574                           ; 1 bytes @ 0x2
  3575                           
  3576                           
  3577                           ; 2 bytes @ 0x2
  3578     0072                     	ds	2
  3579     0074                     ??i1___lwdiv:
  3580     0074                     __Umul8_16@product:	
  3581                           ; 1 bytes @ 0x4
  3582                           
  3583                           
  3584                           ; 2 bytes @ 0x4
  3585     0074                     	ds	1
  3586     0075                     i1___lwdiv@quotient:
  3587                           
  3588                           ; 2 bytes @ 0x5
  3589     0075                     	ds	1
  3590     0076                     __Umul8_16@word_mpld:
  3591                           
  3592                           ; 2 bytes @ 0x6
  3593     0076                     	ds	1
  3594     0077                     i1___lwdiv@counter:
  3595     0077                     TMR1_ReadTimer@readVal:	
  3596                           ; 1 bytes @ 0x7
  3597                           
  3598                           
  3599                           ; 2 bytes @ 0x7
  3600     0077                     	ds	1
  3601     0078                     __Umul8_16@multiplier:
  3602                           
  3603                           ; 1 bytes @ 0x8
  3604     0078                     	ds	1
  3605     0079                     ??___flmul:
  3606     0079                     TMR1_ReadTimer@readValHigh:	
  3607                           ; 1 bytes @ 0x9
  3608                           
  3609                           
  3610                           ; 1 bytes @ 0x9
  3611     0079                     	ds	1
  3612     007A                     TMR1_ReadTimer@readValLow:
  3613                           
  3614                           ; 1 bytes @ 0xA
  3615     007A                     	ds	4
  3616     007E                     ??_TMR1_GATE_ISR:
  3617     007E                     ??_INTERRUPT_InterruptManager:	
  3618                           ; 1 bytes @ 0xE
  3619                           
  3620                           
  3621                           	psect	cstackBANK0
  3622     0020                     __pcstackBANK0:	
  3623                           ; 1 bytes @ 0xE
  3624                           
  3625     0020                     ?___flmul:
  3626     0020                     ___flmul@b:	
  3627                           ; 4 bytes @ 0x0
  3628                           
  3629                           
  3630                           ; 4 bytes @ 0x0
  3631     0020                     	ds	4
  3632     0024                     ___flmul@a:
  3633                           
  3634                           ; 4 bytes @ 0x4
  3635     0024                     	ds	4
  3636     0028                     ___flmul@sign:
  3637                           
  3638                           ; 1 bytes @ 0x8
  3639     0028                     	ds	1
  3640     0029                     ___flmul@aexp:
  3641                           
  3642                           ; 1 bytes @ 0x9
  3643     0029                     	ds	1
  3644     002A                     ___flmul@grs:
  3645                           
  3646                           ; 4 bytes @ 0xA
  3647     002A                     	ds	4
  3648     002E                     ___flmul@bexp:
  3649                           
  3650                           ; 1 bytes @ 0xE
  3651     002E                     	ds	1
  3652     002F                     ___flmul@prod:
  3653                           
  3654                           ; 4 bytes @ 0xF
  3655     002F                     	ds	4
  3656     0033                     ___flmul@temp:
  3657                           
  3658                           ; 2 bytes @ 0x13
  3659     0033                     	ds	2
  3660     0035                     ?i1___fltol:
  3661     0035                     i1___fltol@f1:	
  3662                           ; 4 bytes @ 0x15
  3663                           
  3664                           
  3665                           ; 4 bytes @ 0x15
  3666     0035                     	ds	4
  3667     0039                     ??i1___fltol:
  3668                           
  3669                           ; 1 bytes @ 0x19
  3670     0039                     	ds	4
  3671     003D                     i1___fltol@sign1:
  3672                           
  3673                           ; 1 bytes @ 0x1D
  3674     003D                     	ds	1
  3675     003E                     i1___fltol@exp1:
  3676                           
  3677                           ; 1 bytes @ 0x1E
  3678     003E                     	ds	1
  3679     003F                     ?___xxtofl:
  3680     003F                     ___xxtofl@val:	
  3681                           ; 4 bytes @ 0x1F
  3682                           
  3683                           
  3684                           ; 4 bytes @ 0x1F
  3685     003F                     	ds	4
  3686     0043                     ??___xxtofl:
  3687                           
  3688                           ; 1 bytes @ 0x23
  3689     0043                     	ds	4
  3690     0047                     ___xxtofl@sign:
  3691                           
  3692                           ; 1 bytes @ 0x27
  3693     0047                     	ds	1
  3694     0048                     ___xxtofl@exp:
  3695                           
  3696                           ; 1 bytes @ 0x28
  3697     0048                     	ds	1
  3698     0049                     ___xxtofl@arg:
  3699                           
  3700                           ; 4 bytes @ 0x29
  3701     0049                     	ds	4
  3702     004D                     ??_mede_height:
  3703                           
  3704                           ; 1 bytes @ 0x2D
  3705     004D                     	ds	6
  3706                           
  3707                           	psect	maintext
  3708     06A3                     __pmaintext:	
  3709 ;;
  3710 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  3711 ;;
  3712 ;; *************** function _main *****************
  3713 ;; Defined at:
  3714 ;;		line 309 in file "main.c"
  3715 ;; Parameters:    Size  Location     Type
  3716 ;;		None
  3717 ;; Auto vars:     Size  Location     Type
  3718 ;;		None
  3719 ;; Return value:  Size  Location     Type
  3720 ;;                  1    wreg      void 
  3721 ;; Registers used:
  3722 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3723 ;; Tracked objects:
  3724 ;;		On entry : B1F/0
  3725 ;;		On exit  : 1F/2
  3726 ;;		Unchanged: 0/0
  3727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3728 ;;      Params:         0       0       0       0       0       0
  3729 ;;      Locals:         0       0       0       0       0       0
  3730 ;;      Temps:          0       0       1       0       0       0
  3731 ;;      Totals:         0       0       1       0       0       0
  3732 ;;Total ram usage:        1 bytes
  3733 ;; Hardware stack levels required when called: 8
  3734 ;; This function calls:
  3735 ;;		_ADC_GetConversion
  3736 ;;		_EUSART_Read
  3737 ;;		_EUSART_is_rx_ready
  3738 ;;		_SYSTEM_Initialize
  3739 ;;		_TMR0_ReadTimer
  3740 ;;		_TMR1_SetGateInterruptHandler
  3741 ;;		_TMR4_StopTimer
  3742 ;;		_TMR6_LoadPeriodRegister
  3743 ;;		_TMR6_WriteTimer
  3744 ;;		_analisa_Rx
  3745 ;;		_controlchoose
  3746 ;;		_envia_Tx
  3747 ;;		_fluxpos
  3748 ;;		_setaPorta
  3749 ;; This function is called by:
  3750 ;;		Startup code after reset
  3751 ;; This function uses a non-reentrant model
  3752 ;;
  3753                           
  3754     06A3                     _main:	
  3755                           ;psect for function _main
  3756                           
  3757                           
  3758                           ;main.c: 312:     SYSTEM_Initialize();
  3759                           
  3760                           ;incstack = 0
  3761                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3762     06A3  3187  27D5  3186   	fcall	_SYSTEM_Initialize
  3763                           
  3764                           ;main.c: 313:     TMR1_SetGateInterruptHandler(mede_height);
  3765     06A6  30E9               	movlw	low _mede_height
  3766     06A7  00CD               	movwf	TMR1_SetGateInterruptHandler@InterruptHandler^(0+128)
  3767     06A8  3005               	movlw	high _mede_height
  3768     06A9  00CE               	movwf	(TMR1_SetGateInterruptHandler@InterruptHandler^(0+128)+1)
  3769     06AA  318B  23BA  3186   	fcall	_TMR1_SetGateInterruptHandler
  3770                           
  3771                           ;main.c: 318:     (INTCONbits.GIE = 1);
  3772     06AD  178B               	bsf	11,7	;volatile
  3773                           
  3774                           ;main.c: 321:     (INTCONbits.PEIE = 1);
  3775     06AE  170B               	bsf	11,6	;volatile
  3776                           
  3777                           ;main.c: 328:     setaPorta();
  3778     06AF  318C  24AB  3186   	fcall	_setaPorta
  3779                           
  3780                           ;main.c: 329:     LATAbits.LATA7=CMOUTbits.MC1OUT;
  3781     06B2  0022               	movlb	2	; select bank2
  3782     06B3  1815               	btfsc	21,0	;volatile
  3783     06B4  2F3F               	goto	L1
  3784     06B5                     u2960:
  3785     06B5  0022               	movlb	2	; select bank2
  3786     06B6  138C               	bcf	12,7	;volatile
  3787     06B7                     l3100:
  3788                           
  3789                           ;main.c: 332:     {;main.c: 333:         if(PIR3bits.TMR4IF==1){
  3790     06B7  0020               	movlb	0	; select bank0
  3791     06B8  1C93               	btfss	19,1	;volatile
  3792     06B9  2EC1               	goto	l3108
  3793                           
  3794                           ;main.c: 334:             PIR3bits.TMR4IF=0;
  3795     06BA  1093               	bcf	19,1	;volatile
  3796                           
  3797                           ;main.c: 335:             TMR4_StopTimer();
  3798     06BB  318B  2347  3186   	fcall	_TMR4_StopTimer
  3799                           
  3800                           ;main.c: 336:             controlchoose();
  3801     06BE  318C  2425  3186   	fcall	_controlchoose
  3802     06C1                     l3108:
  3803                           
  3804                           ;main.c: 338:         if (EUSART_is_rx_ready()){
  3805     06C1  318B  235D  3186   	fcall	_EUSART_is_rx_ready
  3806     06C4  3A00               	xorlw	0
  3807     06C5  1903               	skipnz
  3808     06C6  2F01               	goto	l3140
  3809                           
  3810                           ;main.c: 339:             TMR6_LoadPeriodRegister(0xF9);
  3811     06C7  30F9               	movlw	249
  3812     06C8  318B  2373  3186   	fcall	_TMR6_LoadPeriodRegister
  3813                           
  3814                           ;main.c: 340:             nao_salva = 0;
  3815     06CB  0021               	movlb	1	; select bank1
  3816     06CC  01C8               	clrf	_nao_salva^(0+128)
  3817     06CD                     l3130:	
  3818                           ;main.c: 341:             while(countRx<8 -1){
  3819                           
  3820                           
  3821                           ;main.c: 341:             while(countRx<8 -1){
  3822     06CD  3007               	movlw	7
  3823     06CE  024A               	subwf	_countRx^(0+128),w
  3824     06CF  1803               	btfsc	3,0
  3825     06D0  2EF4               	goto	l3132
  3826                           
  3827                           ;main.c: 342:                 TMR6_WriteTimer(0);
  3828     06D1  3000               	movlw	0
  3829     06D2  318B  2379  3186   	fcall	_TMR6_WriteTimer
  3830                           
  3831                           ;main.c: 343:                 PIR3bits.TMR6IF = 0;
  3832     06D5  0020               	movlb	0	; select bank0
  3833     06D6  1193               	bcf	19,3	;volatile
  3834     06D7                     l3120:	
  3835                           ;main.c: 344:                 while(!EUSART_is_rx_ready()){
  3836                           
  3837                           
  3838                           ;main.c: 344:                 while(!EUSART_is_rx_ready()){
  3839     06D7  318B  235D  3186   	fcall	_EUSART_is_rx_ready
  3840     06DA  3A00               	xorlw	0
  3841     06DB  1D03               	btfss	3,2
  3842     06DC  2EE2               	goto	l3122
  3843                           
  3844                           ;main.c: 345:                     if(PIR3bits.TMR6IF){
  3845     06DD  1D93               	btfss	19,3	;volatile
  3846     06DE  2ED7               	goto	l3120
  3847                           
  3848                           ;main.c: 346:                         nao_salva = 1;
  3849     06DF  0021               	movlb	1	; select bank1
  3850     06E0  01C8               	clrf	_nao_salva^(0+128)
  3851     06E1  0AC8               	incf	_nao_salva^(0+128),f
  3852     06E2                     l3122:	
  3853                           ;main.c: 347:                         break;
  3854                           
  3855                           
  3856                           ;main.c: 350:                 if(nao_salva == 1){
  3857     06E2  0021               	movlb	1	; select bank1
  3858     06E3  0348               	decf	_nao_salva^(0+128),w
  3859     06E4  1903               	btfsc	3,2
  3860     06E5  2EF4               	goto	l3132
  3861                           
  3862                           ;main.c: 353:                 bufferRx[countRx] = EUSART_Read();
  3863     06E6  084A               	movf	_countRx^(0+128),w
  3864     06E7  3E53               	addlw	(low (_bufferRx| 0))& (0+255)
  3865     06E8  0086               	movwf	6
  3866     06E9  0187               	clrf	7
  3867     06EA  318B  23FC  3186   	fcall	_EUSART_Read
  3868     06ED  0081               	movwf	1
  3869                           
  3870                           ;main.c: 354:                 countRx++;
  3871     06EE  3001               	movlw	1
  3872     06EF  0021               	movlb	1	; select bank1
  3873     06F0  00EE               	movwf	??_main^(0+128)
  3874     06F1  086E               	movf	??_main^(0+128),w
  3875     06F2  07CA               	addwf	_countRx^(0+128),f
  3876     06F3  2ECD               	goto	l3130
  3877     06F4                     l3132:
  3878                           
  3879                           ;main.c: 356:             analisa_Rx();
  3880     06F4  3185  2527  3186   	fcall	_analisa_Rx
  3881                           
  3882                           ;main.c: 357:             TMR6_LoadPeriodRegister(0x4A);
  3883     06F7  304A               	movlw	74
  3884     06F8  318B  2373  3186   	fcall	_TMR6_LoadPeriodRegister
  3885                           
  3886                           ;main.c: 358:             TMR6_WriteTimer(0);
  3887     06FB  3000               	movlw	0
  3888     06FC  318B  2379  3186   	fcall	_TMR6_WriteTimer
  3889                           
  3890                           ;main.c: 359:             PIR3bits.TMR6IF = 0;
  3891     06FF  0020               	movlb	0	; select bank0
  3892     0700  1193               	bcf	19,3	;volatile
  3893     0701                     l3140:
  3894                           
  3895                           ;main.c: 361:         if(INTCONbits.TMR0IF == 1){
  3896     0701  1D0B               	btfss	11,2	;volatile
  3897     0702  2F15               	goto	l3156
  3898                           
  3899                           ;main.c: 362:             INTCONbits.TMR0IF = 0;
  3900     0703  110B               	bcf	11,2	;volatile
  3901                           
  3902                           ;main.c: 363:             fluxpos();
  3903     0704  318D  25D1  3186   	fcall	_fluxpos
  3904                           
  3905                           ;main.c: 364:             passo_ctrl = 0;
  3906     0707  01C5               	clrf	_passo_ctrl^(0+128)
  3907                           
  3908                           ;main.c: 365:             count_Tx ++;
  3909     0708  3001               	movlw	1
  3910     0709  00EE               	movwf	??_main^(0+128)
  3911     070A  086E               	movf	??_main^(0+128),w
  3912     070B  07C9               	addwf	_count_Tx^(0+128),f
  3913                           
  3914                           ;main.c: 366:             if (count_Tx == 6){
  3915     070C  3006               	movlw	6
  3916     070D  0649               	xorwf	_count_Tx^(0+128),w
  3917     070E  1D03               	btfss	3,2
  3918     070F  2F15               	goto	l3156
  3919                           
  3920                           ;main.c: 367:                 envia_Tx ();
  3921     0710  318F  278C  3186   	fcall	_envia_Tx
  3922                           
  3923                           ;main.c: 368:                 count_Tx = 0;
  3924     0713  0021               	movlb	1	; select bank1
  3925     0714  01C9               	clrf	_count_Tx^(0+128)
  3926     0715                     l3156:
  3927                           
  3928                           ;main.c: 371:         if(PIR3bits.TMR6IF == 1){
  3929     0715  0020               	movlb	0	; select bank0
  3930     0716  1D93               	btfss	19,3	;volatile
  3931     0717  2F2C               	goto	l3168
  3932                           
  3933                           ;main.c: 372:             PIR3bits.TMR6IF = 0;
  3934     0718  1193               	bcf	19,3	;volatile
  3935                           
  3936                           ;main.c: 373:             TMR6_WriteTimer(0);
  3937     0719  3000               	movlw	0
  3938     071A  318B  2379  3186   	fcall	_TMR6_WriteTimer
  3939                           
  3940                           ;main.c: 374:             adc_temp = ADC_GetConversion(channel_AN8);
  3941     071D  3008               	movlw	8
  3942     071E  318C  2478  3186   	fcall	_ADC_GetConversion
  3943     0721  084E               	movf	(?_ADC_GetConversion+1)^(0+128),w
  3944     0722  00B6               	movwf	(_adc_temp+1)^(0+128)
  3945     0723  084D               	movf	?_ADC_GetConversion^(0+128),w
  3946     0724  00B5               	movwf	_adc_temp^(0+128)
  3947     0725  0022               	movlb	2	; select bank2
  3948     0726  170C               	bsf	12,6	;volatile
  3949                           
  3950                           ;main.c: 376:             _delay((unsigned long)((15)*(16000000/4000000.0)));
  3951     0727  3014               	movlw	20
  3952     0728                     u3117:
  3953     0728  0B89               	decfsz	9,f
  3954     0729  2F28               	goto	u3117
  3955     072A  0022               	movlb	2	; select bank2
  3956     072B  130C               	bcf	12,6	;volatile
  3957     072C                     l3168:
  3958                           
  3959                           ;main.c: 379:         if(TMR0_ReadTimer() >= 0x7F && passo_ctrl == 0){
  3960     072C  318B  236D  3186   	fcall	_TMR0_ReadTimer
  3961     072F  00EE               	movwf	??_main^(0+128)
  3962     0730  307F               	movlw	127
  3963     0731  026E               	subwf	??_main^(0+128),w
  3964     0732  1C03               	skipc
  3965     0733  2F3C               	goto	l3176
  3966     0734  0845               	movf	_passo_ctrl^(0+128),w
  3967     0735  1D03               	btfss	3,2
  3968     0736  2F3C               	goto	l3176
  3969                           
  3970                           ;main.c: 380:             passo_ctrl = 1;
  3971     0737  01C5               	clrf	_passo_ctrl^(0+128)
  3972     0738  0AC5               	incf	_passo_ctrl^(0+128),f
  3973                           
  3974                           ;main.c: 381:             fluxpos();
  3975     0739  318D  25D1  3186   	fcall	_fluxpos
  3976     073C                     l3176:
  3977                           
  3978                           ;main.c: 383:         LATAbits.LATA7=CMOUTbits.MC1OUT;
  3979     073C  0022               	movlb	2	; select bank2
  3980     073D  1C15               	btfss	21,0	;volatile
  3981     073E  2EB5               	goto	u2960
  3982     073F                     L1:
  3983     073F  0022               	movlb	2	; select bank2
  3984     0740  178C               	bsf	12,7	;volatile
  3985     0741  2EB7               	goto	l3100
  3986     0742                     __end_of_main:
  3987                           
  3988                           	psect	text1
  3989     0CAB                     __ptext1:	
  3990 ;; *************** function _setaPorta *****************
  3991 ;; Defined at:
  3992 ;;		line 112 in file "main.c"
  3993 ;; Parameters:    Size  Location     Type
  3994 ;;		None
  3995 ;; Auto vars:     Size  Location     Type
  3996 ;;		None
  3997 ;; Return value:  Size  Location     Type
  3998 ;;                  1    wreg      void 
  3999 ;; Registers used:
  4000 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4001 ;; Tracked objects:
  4002 ;;		On entry : 1F/0
  4003 ;;		On exit  : 1F/1
  4004 ;;		Unchanged: 0/0
  4005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4006 ;;      Params:         0       0       0       0       0       0
  4007 ;;      Locals:         0       0       0       0       0       0
  4008 ;;      Temps:          0       0       1       0       0       0
  4009 ;;      Totals:         0       0       1       0       0       0
  4010 ;;Total ram usage:        1 bytes
  4011 ;; Hardware stack levels used: 1
  4012 ;; Hardware stack levels required when called: 7
  4013 ;; This function calls:
  4014 ;;		_CMP1_GetOutputStatus
  4015 ;;		_daUmPasso
  4016 ;; This function is called by:
  4017 ;;		_main
  4018 ;; This function uses a non-reentrant model
  4019 ;;
  4020                           
  4021     0CAB                     _setaPorta:	
  4022                           ;psect for function _setaPorta
  4023                           
  4024     0CAB                     l2988:	
  4025                           ;main.c: 113:     while(!CMP1_GetOutputStatus()){
  4026                           
  4027                           ;incstack = 0
  4028                           ; Regs used in _setaPorta: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4029                           
  4030                           
  4031                           ;main.c: 113:     while(!CMP1_GetOutputStatus()){
  4032     0CAB  318B  2355  318C   	fcall	_CMP1_GetOutputStatus
  4033     0CAE  3A00               	xorlw	0
  4034     0CAF  1D03               	btfss	3,2
  4035     0CB0  2CBF               	goto	l623
  4036                           
  4037                           ;main.c: 114:         daUmPasso(1);
  4038     0CB1  3001               	movlw	1
  4039     0CB2  318C  24FF  318C   	fcall	_daUmPasso
  4040                           
  4041                           ;main.c: 115:         _delay((unsigned long)((6)*(16000000/4000.0)));
  4042     0CB5  3020               	movlw	32
  4043     0CB6  0021               	movlb	1	; select bank1
  4044     0CB7  00D1               	movwf	??_setaPorta^(0+128)
  4045     0CB8  3029               	movlw	41
  4046     0CB9                     u3127:
  4047     0CB9  0B89               	decfsz	9,f
  4048     0CBA  2CB9               	goto	u3127
  4049     0CBB  0BD1               	decfsz	??_setaPorta^(0+128),f
  4050     0CBC  2CB9               	goto	u3127
  4051     0CBD  3200               	nop2
  4052     0CBE  2CAB               	goto	l2988
  4053     0CBF                     l623:
  4054                           
  4055                           ;main.c: 118:     fim_curso = 1;
  4056     0CBF  0021               	movlb	1	; select bank1
  4057     0CC0  01C6               	clrf	_fim_curso^(0+128)
  4058     0CC1  0AC6               	incf	_fim_curso^(0+128),f
  4059                           
  4060                           ;main.c: 119:     position = 0;
  4061     0CC2  01B9               	clrf	_position^(0+128)
  4062     0CC3  01BA               	clrf	(_position+1)^(0+128)
  4063     0CC4  0008               	return
  4064     0CC5                     __end_of_setaPorta:
  4065                           
  4066                           	psect	text2
  4067     0B55                     __ptext2:	
  4068 ;; *************** function _CMP1_GetOutputStatus *****************
  4069 ;; Defined at:
  4070 ;;		line 69 in file "mcc_generated_files/cmp1.c"
  4071 ;; Parameters:    Size  Location     Type
  4072 ;;		None
  4073 ;; Auto vars:     Size  Location     Type
  4074 ;;		None
  4075 ;; Return value:  Size  Location     Type
  4076 ;;                  1    wreg      _Bool 
  4077 ;; Registers used:
  4078 ;;		wreg, status,2, status,0
  4079 ;; Tracked objects:
  4080 ;;		On entry : 0/0
  4081 ;;		On exit  : 1F/2
  4082 ;;		Unchanged: 0/0
  4083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4084 ;;      Params:         0       0       0       0       0       0
  4085 ;;      Locals:         0       0       0       0       0       0
  4086 ;;      Temps:          0       0       0       0       0       0
  4087 ;;      Totals:         0       0       0       0       0       0
  4088 ;;Total ram usage:        0 bytes
  4089 ;; Hardware stack levels used: 1
  4090 ;; Hardware stack levels required when called: 5
  4091 ;; This function calls:
  4092 ;;		Nothing
  4093 ;; This function is called by:
  4094 ;;		_setaPorta
  4095 ;; This function uses a non-reentrant model
  4096 ;;
  4097                           
  4098     0B55                     _CMP1_GetOutputStatus:	
  4099                           ;psect for function _CMP1_GetOutputStatus
  4100                           
  4101                           
  4102                           ;mcc_generated_files/cmp1.c: 71:  return (CMOUTbits.MC1OUT);
  4103                           
  4104                           ;incstack = 0
  4105                           ; Regs used in _CMP1_GetOutputStatus: [wreg+status,2+status,0]
  4106     0B55  0022               	movlb	2	; select bank2
  4107     0B56  0815               	movf	21,w	;volatile
  4108     0B57  3901               	andlw	1
  4109     0B58  0008               	return
  4110     0B59                     __end_of_CMP1_GetOutputStatus:
  4111                           
  4112                           	psect	text3
  4113     0DD1                     __ptext3:	
  4114 ;; *************** function _fluxpos *****************
  4115 ;; Defined at:
  4116 ;;		line 101 in file "main.c"
  4117 ;; Parameters:    Size  Location     Type
  4118 ;;		None
  4119 ;; Auto vars:     Size  Location     Type
  4120 ;;		None
  4121 ;; Return value:  Size  Location     Type
  4122 ;;                  1    wreg      void 
  4123 ;; Registers used:
  4124 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4125 ;; Tracked objects:
  4126 ;;		On entry : 1E/0
  4127 ;;		On exit  : 1F/1
  4128 ;;		Unchanged: 0/0
  4129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4130 ;;      Params:         0       0       0       0       0       0
  4131 ;;      Locals:         0       0       0       0       0       0
  4132 ;;      Temps:          0       0       0       0       0       0
  4133 ;;      Totals:         0       0       0       0       0       0
  4134 ;;Total ram usage:        0 bytes
  4135 ;; Hardware stack levels used: 1
  4136 ;; Hardware stack levels required when called: 7
  4137 ;; This function calls:
  4138 ;;		_daUmPasso
  4139 ;; This function is called by:
  4140 ;;		_main
  4141 ;; This function uses a non-reentrant model
  4142 ;;
  4143                           
  4144     0DD1                     _fluxpos:	
  4145                           ;psect for function _fluxpos
  4146                           
  4147                           
  4148                           ;main.c: 102:     if(controlchoice==2){
  4149                           
  4150                           ;incstack = 0
  4151                           ; Regs used in _fluxpos: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4152     0DD1  3002               	movlw	2
  4153     0DD2  0021               	movlb	1	; select bank1
  4154     0DD3  064B               	xorwf	_controlchoice^(0+128),w
  4155     0DD4  1D03               	btfss	3,2
  4156     0DD5  2DEE               	goto	l2974
  4157                           
  4158                           ;main.c: 103:         if(output>position) daUmPasso(0);
  4159     0DD6  0842               	movf	(_output+1)^(0+128),w
  4160     0DD7  023A               	subwf	(_position+1)^(0+128),w
  4161     0DD8  1D03               	skipz
  4162     0DD9  2DDC               	goto	u2795
  4163     0DDA  0841               	movf	_output^(0+128),w
  4164     0DDB  0239               	subwf	_position^(0+128),w
  4165     0DDC                     u2795:
  4166     0DDC  1803               	skipnc
  4167     0DDD  2DE2               	goto	l2970
  4168     0DDE  3000               	movlw	0
  4169     0DDF  318C  24FF         	fcall	_daUmPasso
  4170     0DE1  0008               	return
  4171     0DE2                     l2970:
  4172     0DE2  083A               	movf	(_position+1)^(0+128),w
  4173     0DE3  0242               	subwf	(_output+1)^(0+128),w
  4174     0DE4  1D03               	skipz
  4175     0DE5  2DE8               	goto	u2805
  4176     0DE6  0839               	movf	_position^(0+128),w
  4177     0DE7  0241               	subwf	_output^(0+128),w
  4178     0DE8                     u2805:
  4179     0DE8  1803               	skipnc
  4180     0DE9  0008               	return
  4181     0DEA  3001               	movlw	1
  4182     0DEB  318C  24FF         	fcall	_daUmPasso
  4183     0DED  0008               	return
  4184     0DEE                     l2974:
  4185                           
  4186                           ;main.c: 107:         if(sp_position>position) daUmPasso(0);
  4187     0DEE  0838               	movf	(_sp_position+1)^(0+128),w
  4188     0DEF  023A               	subwf	(_position+1)^(0+128),w
  4189     0DF0  1D03               	skipz
  4190     0DF1  2DF4               	goto	u2815
  4191     0DF2  0837               	movf	_sp_position^(0+128),w
  4192     0DF3  0239               	subwf	_position^(0+128),w
  4193     0DF4                     u2815:
  4194     0DF4  1803               	skipnc
  4195     0DF5  2DFA               	goto	l2978
  4196     0DF6  3000               	movlw	0
  4197     0DF7  318C  24FF         	fcall	_daUmPasso
  4198     0DF9  0008               	return
  4199     0DFA                     l2978:
  4200     0DFA  083A               	movf	(_position+1)^(0+128),w
  4201     0DFB  0238               	subwf	(_sp_position+1)^(0+128),w
  4202     0DFC  1D03               	skipz
  4203     0DFD  2E00               	goto	u2825
  4204     0DFE  0839               	movf	_position^(0+128),w
  4205     0DFF  0237               	subwf	_sp_position^(0+128),w
  4206     0E00                     u2825:
  4207     0E00  1803               	skipnc
  4208     0E01  0008               	return
  4209     0E02  3001               	movlw	1
  4210     0E03  318C  24FF         	fcall	_daUmPasso
  4211     0E05  0008               	return
  4212     0E06                     __end_of_fluxpos:
  4213                           
  4214                           	psect	text4
  4215     0CFF                     __ptext4:	
  4216 ;; *************** function _daUmPasso *****************
  4217 ;; Defined at:
  4218 ;;		line 281 in file "main.c"
  4219 ;; Parameters:    Size  Location     Type
  4220 ;;  sentido         1    wreg     unsigned char 
  4221 ;; Auto vars:     Size  Location     Type
  4222 ;;  sentido         1    3[BANK1 ] unsigned char 
  4223 ;; Return value:  Size  Location     Type
  4224 ;;                  1    wreg      void 
  4225 ;; Registers used:
  4226 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4227 ;; Tracked objects:
  4228 ;;		On entry : 1C/2
  4229 ;;		On exit  : 1F/1
  4230 ;;		Unchanged: 0/0
  4231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4232 ;;      Params:         0       0       0       0       0       0
  4233 ;;      Locals:         0       0       1       0       0       0
  4234 ;;      Temps:          0       0       0       0       0       0
  4235 ;;      Totals:         0       0       1       0       0       0
  4236 ;;Total ram usage:        1 bytes
  4237 ;; Hardware stack levels used: 1
  4238 ;; Hardware stack levels required when called: 6
  4239 ;; This function calls:
  4240 ;;		_definePassoMotor
  4241 ;; This function is called by:
  4242 ;;		_fluxpos
  4243 ;;		_setaPorta
  4244 ;; This function uses a non-reentrant model
  4245 ;;
  4246                           
  4247     0CFF                     _daUmPasso:	
  4248                           ;psect for function _daUmPasso
  4249                           
  4250                           
  4251                           ;incstack = 0
  4252                           ; Regs used in _daUmPasso: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4253                           ;daUmPasso@sentido stored from wreg
  4254     0CFF  0021               	movlb	1	; select bank1
  4255     0D00  00D0               	movwf	daUmPasso@sentido^(0+128)
  4256                           
  4257                           ;main.c: 282:     if (fim_curso) {
  4258     0D01  0846               	movf	_fim_curso^(0+128),w
  4259     0D02  1903               	btfsc	3,2
  4260     0D03  2D19               	goto	l2864
  4261                           
  4262                           ;main.c: 283:         if(sentido == 1){
  4263     0D04  0350               	decf	daUmPasso@sentido^(0+128),w
  4264     0D05  1D03               	btfss	3,2
  4265     0D06  2D0C               	goto	l2858
  4266                           
  4267                           ;main.c: 284:             position--;
  4268     0D07  3001               	movlw	1
  4269     0D08  02B9               	subwf	_position^(0+128),f
  4270     0D09  3000               	movlw	0
  4271     0D0A  3BBA               	subwfb	(_position+1)^(0+128),f
  4272                           
  4273                           ;main.c: 285:         }
  4274     0D0B  2D13               	goto	l2862
  4275     0D0C                     l2858:
  4276     0D0C  0850               	movf	daUmPasso@sentido^(0+128),w
  4277     0D0D  1D03               	btfss	3,2
  4278     0D0E  2D13               	goto	l2862
  4279                           
  4280                           ;main.c: 287:             position++;
  4281     0D0F  3001               	movlw	1
  4282     0D10  07B9               	addwf	_position^(0+128),f
  4283     0D11  3000               	movlw	0
  4284     0D12  3DBA               	addwfc	(_position+1)^(0+128),f
  4285     0D13                     l2862:
  4286                           
  4287                           ;main.c: 289:         definePassoMotor(passo, sentido);
  4288     0D13  0850               	movf	daUmPasso@sentido^(0+128),w
  4289     0D14  00CD               	movwf	definePassoMotor@sentido^(0+128)
  4290     0D15  0847               	movf	_passo^(0+128),w
  4291     0D16  318E  2606         	fcall	_definePassoMotor
  4292                           
  4293                           ;main.c: 290:     } else {
  4294     0D18  0008               	return
  4295     0D19                     l2864:
  4296                           
  4297                           ;main.c: 291:         definePassoMotor(passo, 1);
  4298     0D19  01CD               	clrf	definePassoMotor@sentido^(0+128)
  4299     0D1A  0ACD               	incf	definePassoMotor@sentido^(0+128),f
  4300     0D1B  0847               	movf	_passo^(0+128),w
  4301     0D1C  318E  2606         	fcall	_definePassoMotor
  4302     0D1E  0008               	return
  4303     0D1F                     __end_of_daUmPasso:
  4304                           
  4305                           	psect	text5
  4306     0E06                     __ptext5:	
  4307 ;; *************** function _definePassoMotor *****************
  4308 ;; Defined at:
  4309 ;;		line 219 in file "main.c"
  4310 ;; Parameters:    Size  Location     Type
  4311 ;;  passom          1    wreg     unsigned char 
  4312 ;;  sentido         1    0[BANK1 ] unsigned char 
  4313 ;; Auto vars:     Size  Location     Type
  4314 ;;  passom          1    2[BANK1 ] unsigned char 
  4315 ;; Return value:  Size  Location     Type
  4316 ;;                  1    wreg      void 
  4317 ;; Registers used:
  4318 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4319 ;; Tracked objects:
  4320 ;;		On entry : 1F/1
  4321 ;;		On exit  : 1F/1
  4322 ;;		Unchanged: 0/0
  4323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4324 ;;      Params:         0       0       1       0       0       0
  4325 ;;      Locals:         0       0       1       0       0       0
  4326 ;;      Temps:          0       0       1       0       0       0
  4327 ;;      Totals:         0       0       3       0       0       0
  4328 ;;Total ram usage:        3 bytes
  4329 ;; Hardware stack levels used: 1
  4330 ;; Hardware stack levels required when called: 5
  4331 ;; This function calls:
  4332 ;;		Nothing
  4333 ;; This function is called by:
  4334 ;;		_daUmPasso
  4335 ;; This function uses a non-reentrant model
  4336 ;;
  4337                           
  4338     0E06                     _definePassoMotor:	
  4339                           ;psect for function _definePassoMotor
  4340                           
  4341                           
  4342                           ;incstack = 0
  4343                           ; Regs used in _definePassoMotor: [wreg-fsr0h+status,2+status,0]
  4344                           ;definePassoMotor@passom stored from wreg
  4345     0E06  00CF               	movwf	definePassoMotor@passom^(0+128)
  4346                           
  4347                           ;main.c: 220:     if (sentido == 1) {
  4348     0E07  034D               	decf	definePassoMotor@sentido^(0+128),w
  4349     0E08  1903               	btfsc	3,2
  4350     0E09  2E21               	goto	l2324
  4351     0E0A  2E2F               	goto	l2326
  4352     0E0B                     l655:	
  4353                           ;main.c: 223:                 do { LATAbits.LATA1 = 1; } while(0);
  4354                           
  4355     0E0B  0022               	movlb	2	; select bank2
  4356     0E0C  148C               	bsf	12,1	;volatile
  4357                           
  4358                           ;main.c: 224:                 do { LATAbits.LATA2 = 1; } while(0);
  4359     0E0D  150C               	bsf	12,2	;volatile
  4360                           
  4361                           ;main.c: 225:                 do { LATAbits.LATA3 = 0; } while(0);
  4362     0E0E  118C               	bcf	12,3	;volatile
  4363     0E0F  2E14               	goto	l671
  4364     0E10                     l665:	
  4365                           ;main.c: 229:                 do { LATAbits.LATA1 = 0; } while(0);
  4366                           
  4367                           ;main.c: 226:                 do { LATAbits.LATA4 = 0; } while(0);
  4368                           
  4369     0E10  0022               	movlb	2	; select bank2
  4370     0E11  108C               	bcf	12,1	;volatile
  4371                           
  4372                           ;main.c: 230:                 do { LATAbits.LATA2 = 1; } while(0);
  4373     0E12  150C               	bsf	12,2	;volatile
  4374                           
  4375                           ;main.c: 231:                 do { LATAbits.LATA3 = 1; } while(0);
  4376     0E13  158C               	bsf	12,3	;volatile
  4377     0E14                     l671:	
  4378                           ;main.c: 232:                 do { LATAbits.LATA4 = 0; } while(0);
  4379                           
  4380     0E14  120C               	bcf	12,4	;volatile
  4381     0E15  2E57               	goto	l2334
  4382     0E16                     l674:	
  4383                           ;main.c: 235:                 do { LATAbits.LATA1 = 0; } while(0);
  4384                           
  4385     0E16  0022               	movlb	2	; select bank2
  4386     0E17  108C               	bcf	12,1	;volatile
  4387                           
  4388                           ;main.c: 236:                 do { LATAbits.LATA2 = 0; } while(0);
  4389     0E18  110C               	bcf	12,2	;volatile
  4390                           
  4391                           ;main.c: 237:                 do { LATAbits.LATA3 = 1; } while(0);
  4392     0E19  158C               	bsf	12,3	;volatile
  4393     0E1A  2E1F               	goto	l689
  4394     0E1B                     l683:	
  4395                           ;main.c: 241:                 do { LATAbits.LATA1 = 1; } while(0);
  4396                           
  4397                           ;main.c: 238:                 do { LATAbits.LATA4 = 1; } while(0);
  4398                           
  4399     0E1B  0022               	movlb	2	; select bank2
  4400     0E1C  148C               	bsf	12,1	;volatile
  4401                           
  4402                           ;main.c: 242:                 do { LATAbits.LATA2 = 0; } while(0);
  4403     0E1D  110C               	bcf	12,2	;volatile
  4404                           
  4405                           ;main.c: 243:                 do { LATAbits.LATA3 = 0; } while(0);
  4406     0E1E  118C               	bcf	12,3	;volatile
  4407     0E1F                     l689:	
  4408                           ;main.c: 244:                 do { LATAbits.LATA4 = 1; } while(0);
  4409                           
  4410     0E1F  160C               	bsf	12,4	;volatile
  4411     0E20  2E57               	goto	l2334
  4412     0E21                     l2324:
  4413     0E21  084F               	movf	definePassoMotor@passom^(0+128),w
  4414                           
  4415                           ; Switch size 1, requested type "simple"
  4416                           ; Number of cases is 4, Range of values is 0 to 3
  4417                           ; switch strategies available:
  4418                           ; Name         Instructions Cycles
  4419                           ; simple_byte           13     7 (average)
  4420                           ; direct_byte           14     6 (fixed)
  4421                           ; jumptable            260     6 (fixed)
  4422                           ;	Chosen strategy is simple_byte
  4423     0E22  3A00               	xorlw	0	; case 0
  4424     0E23  1903               	skipnz
  4425     0E24  2E0B               	goto	l655
  4426     0E25  3A01               	xorlw	1	; case 1
  4427     0E26  1903               	skipnz
  4428     0E27  2E10               	goto	l665
  4429     0E28  3A03               	xorlw	3	; case 2
  4430     0E29  1903               	skipnz
  4431     0E2A  2E16               	goto	l674
  4432     0E2B  3A01               	xorlw	1	; case 3
  4433     0E2C  1903               	skipnz
  4434     0E2D  2E1B               	goto	l683
  4435     0E2E  2E57               	goto	l2334
  4436     0E2F                     l2326:
  4437     0E2F  084D               	movf	definePassoMotor@sentido^(0+128),w
  4438     0E30  1903               	btfsc	3,2
  4439     0E31  2E49               	goto	l2332
  4440     0E32  2E57               	goto	l2334
  4441     0E33                     l695:	
  4442                           ;main.c: 251:                 do { LATAbits.LATA4 = 1; } while(0);
  4443                           
  4444     0E33  0022               	movlb	2	; select bank2
  4445     0E34  160C               	bsf	12,4	;volatile
  4446                           
  4447                           ;main.c: 252:                 do { LATAbits.LATA3 = 1; } while(0);
  4448     0E35  158C               	bsf	12,3	;volatile
  4449                           
  4450                           ;main.c: 253:                 do { LATAbits.LATA2 = 0; } while(0);
  4451     0E36  110C               	bcf	12,2	;volatile
  4452     0E37  2E3C               	goto	l711
  4453     0E38                     l705:	
  4454                           ;main.c: 257:                 do { LATAbits.LATA4 = 0; } while(0);
  4455                           
  4456                           ;main.c: 254:                 do { LATAbits.LATA1 = 0; } while(0);
  4457                           
  4458     0E38  0022               	movlb	2	; select bank2
  4459     0E39  120C               	bcf	12,4	;volatile
  4460                           
  4461                           ;main.c: 258:                 do { LATAbits.LATA3 = 1; } while(0);
  4462     0E3A  158C               	bsf	12,3	;volatile
  4463                           
  4464                           ;main.c: 259:                 do { LATAbits.LATA2 = 1; } while(0);
  4465     0E3B  150C               	bsf	12,2	;volatile
  4466     0E3C                     l711:	
  4467                           ;main.c: 260:                 do { LATAbits.LATA1 = 0; } while(0);
  4468                           
  4469     0E3C  108C               	bcf	12,1	;volatile
  4470     0E3D  2E57               	goto	l2334
  4471     0E3E                     l714:	
  4472                           ;main.c: 263:                 do { LATAbits.LATA4 = 0; } while(0);
  4473                           
  4474     0E3E  0022               	movlb	2	; select bank2
  4475     0E3F  120C               	bcf	12,4	;volatile
  4476                           
  4477                           ;main.c: 264:                 do { LATAbits.LATA3 = 0; } while(0);
  4478     0E40  118C               	bcf	12,3	;volatile
  4479                           
  4480                           ;main.c: 265:                 do { LATAbits.LATA2 = 1; } while(0);
  4481     0E41  150C               	bsf	12,2	;volatile
  4482     0E42  2E47               	goto	L3
  4483     0E43                     l723:	
  4484                           ;main.c: 269:                 do { LATAbits.LATA4 = 1; } while(0);
  4485                           
  4486                           ;main.c: 266:                 do { LATAbits.LATA1 = 1; } while(0);
  4487                           
  4488     0E43  0022               	movlb	2	; select bank2
  4489     0E44  160C               	bsf	12,4	;volatile
  4490                           
  4491                           ;main.c: 270:                 do { LATAbits.LATA3 = 0; } while(0);
  4492     0E45  118C               	bcf	12,3	;volatile
  4493                           
  4494                           ;main.c: 271:                 do { LATAbits.LATA2 = 0; } while(0);
  4495     0E46  110C               	bcf	12,2	;volatile
  4496     0E47                     L3:
  4497                           
  4498                           ;main.c: 272:                 do { LATAbits.LATA1 = 1; } while(0);
  4499     0E47  148C               	bsf	12,1	;volatile
  4500     0E48  2E57               	goto	l2334
  4501     0E49                     l2332:
  4502     0E49  084F               	movf	definePassoMotor@passom^(0+128),w
  4503                           
  4504                           ; Switch size 1, requested type "simple"
  4505                           ; Number of cases is 4, Range of values is 0 to 3
  4506                           ; switch strategies available:
  4507                           ; Name         Instructions Cycles
  4508                           ; simple_byte           13     7 (average)
  4509                           ; direct_byte           14     6 (fixed)
  4510                           ; jumptable            260     6 (fixed)
  4511                           ;	Chosen strategy is simple_byte
  4512     0E4A  3A00               	xorlw	0	; case 0
  4513     0E4B  1903               	skipnz
  4514     0E4C  2E33               	goto	l695
  4515     0E4D  3A01               	xorlw	1	; case 1
  4516     0E4E  1903               	skipnz
  4517     0E4F  2E38               	goto	l705
  4518     0E50  3A03               	xorlw	3	; case 2
  4519     0E51  1903               	skipnz
  4520     0E52  2E3E               	goto	l714
  4521     0E53  3A01               	xorlw	1	; case 3
  4522     0E54  1903               	skipnz
  4523     0E55  2E43               	goto	l723
  4524     0E56  2E57               	goto	l2334
  4525     0E57                     l2334:
  4526                           
  4527                           ;main.c: 277:     passo++;
  4528     0E57  3001               	movlw	1
  4529     0E58  0021               	movlb	1	; select bank1
  4530     0E59  00CE               	movwf	??_definePassoMotor^(0+128)
  4531     0E5A  084E               	movf	??_definePassoMotor^(0+128),w
  4532     0E5B  07C7               	addwf	_passo^(0+128),f
  4533                           
  4534                           ;main.c: 278:     passo = passo & 0x03;
  4535     0E5C  0847               	movf	_passo^(0+128),w
  4536     0E5D  3903               	andlw	3
  4537     0E5E  00C7               	movwf	_passo^(0+128)
  4538     0E5F  0008               	return
  4539     0E60                     __end_of_definePassoMotor:
  4540                           
  4541                           	psect	text6
  4542     0F8C                     __ptext6:	
  4543 ;; *************** function _envia_Tx *****************
  4544 ;; Defined at:
  4545 ;;		line 192 in file "main.c"
  4546 ;; Parameters:    Size  Location     Type
  4547 ;;		None
  4548 ;; Auto vars:     Size  Location     Type
  4549 ;;		None
  4550 ;; Return value:  Size  Location     Type
  4551 ;;                  1    wreg      void 
  4552 ;; Registers used:
  4553 ;;		wreg, status,2, status,0, pclath, cstack
  4554 ;; Tracked objects:
  4555 ;;		On entry : 1F/1
  4556 ;;		On exit  : 1F/3
  4557 ;;		Unchanged: 0/0
  4558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4559 ;;      Params:         0       0       0       0       0       0
  4560 ;;      Locals:         0       0       0       0       0       0
  4561 ;;      Temps:          0       0       0       0       0       0
  4562 ;;      Totals:         0       0       0       0       0       0
  4563 ;;Total ram usage:        0 bytes
  4564 ;; Hardware stack levels used: 1
  4565 ;; Hardware stack levels required when called: 6
  4566 ;; This function calls:
  4567 ;;		_EUSART_Write
  4568 ;;		___fltol
  4569 ;; This function is called by:
  4570 ;;		_main
  4571 ;; This function uses a non-reentrant model
  4572 ;;
  4573                           
  4574     0F8C                     _envia_Tx:	
  4575                           ;psect for function _envia_Tx
  4576                           
  4577                           
  4578                           ;main.c: 193:     EUSART_Write(controlchoice);
  4579                           
  4580                           ;incstack = 0
  4581                           ; Regs used in _envia_Tx: [wreg+status,2+status,0+pclath+cstack]
  4582     0F8C  084B               	movf	_controlchoice^(0+128),w
  4583     0F8D  318B  23CA  318F   	fcall	_EUSART_Write
  4584                           
  4585                           ;main.c: 194:     vTx.v = sp_height;
  4586     0F90  0020               	movlb	0	; select bank0
  4587     0F91  0864               	movf	_sp_height+1,w
  4588     0F92  0021               	movlb	1	; select bank1
  4589     0F93  00C0               	movwf	(_vTx+1)^(0+128)
  4590     0F94  0020               	movlb	0	; select bank0
  4591     0F95  0863               	movf	_sp_height,w
  4592     0F96  0021               	movlb	1	; select bank1
  4593     0F97  00BF               	movwf	_vTx^(0+128)
  4594                           
  4595                           ;main.c: 195:     EUSART_Write(vTx.vH);
  4596     0F98  0840               	movf	(_vTx^(0+128)+1),w
  4597     0F99  318B  23CA  318F   	fcall	_EUSART_Write
  4598                           
  4599                           ;main.c: 196:     EUSART_Write(vTx.vL);
  4600     0F9C  0021               	movlb	1	; select bank1
  4601     0F9D  083F               	movf	_vTx^(0+128),w
  4602     0F9E  318B  23CA  318F   	fcall	_EUSART_Write
  4603                           
  4604                           ;main.c: 197:     vTx.v = height;
  4605     0FA1  0021               	movlb	1	; select bank1
  4606     0FA2  0834               	movf	(_height+1)^(0+128),w
  4607     0FA3  00C0               	movwf	(_vTx+1)^(0+128)
  4608     0FA4  0833               	movf	_height^(0+128),w
  4609     0FA5  00BF               	movwf	_vTx^(0+128)
  4610                           
  4611                           ;main.c: 198:     EUSART_Write(vTx.vH);
  4612     0FA6  0840               	movf	(_vTx^(0+128)+1),w
  4613     0FA7  318B  23CA  318F   	fcall	_EUSART_Write
  4614                           
  4615                           ;main.c: 199:     EUSART_Write(vTx.vL);
  4616     0FAA  0021               	movlb	1	; select bank1
  4617     0FAB  083F               	movf	_vTx^(0+128),w
  4618     0FAC  318B  23CA  318F   	fcall	_EUSART_Write
  4619                           
  4620                           ;main.c: 200:     vTx.v = avg_tempo_voo;
  4621     0FAF  0021               	movlb	1	; select bank1
  4622     0FB0  0823               	movf	(_avg_tempo_voo+3)^(0+128),w
  4623     0FB1  00D0               	movwf	(___fltol@f1+3)^(0+128)
  4624     0FB2  0822               	movf	(_avg_tempo_voo+2)^(0+128),w
  4625     0FB3  00CF               	movwf	(___fltol@f1+2)^(0+128)
  4626     0FB4  0821               	movf	(_avg_tempo_voo+1)^(0+128),w
  4627     0FB5  00CE               	movwf	(___fltol@f1+1)^(0+128)
  4628     0FB6  0820               	movf	_avg_tempo_voo^(0+128),w
  4629     0FB7  00CD               	movwf	___fltol@f1^(0+128)
  4630     0FB8  318E  26C1  318F   	fcall	___fltol
  4631     0FBB  084E               	movf	(?___fltol+1)^(0+128),w
  4632     0FBC  00C0               	movwf	(_vTx+1)^(0+128)
  4633     0FBD  084D               	movf	?___fltol^(0+128),w
  4634     0FBE  00BF               	movwf	_vTx^(0+128)
  4635                           
  4636                           ;main.c: 201:     EUSART_Write(vTx.vH);
  4637     0FBF  0840               	movf	(_vTx^(0+128)+1),w
  4638     0FC0  318B  23CA  318F   	fcall	_EUSART_Write
  4639                           
  4640                           ;main.c: 202:     EUSART_Write(vTx.vL);
  4641     0FC3  0021               	movlb	1	; select bank1
  4642     0FC4  083F               	movf	_vTx^(0+128),w
  4643     0FC5  318B  23CA  318F   	fcall	_EUSART_Write
  4644                           
  4645                           ;main.c: 203:     vTx.v = adc_temp;
  4646     0FC8  0021               	movlb	1	; select bank1
  4647     0FC9  0836               	movf	(_adc_temp+1)^(0+128),w
  4648     0FCA  00C0               	movwf	(_vTx+1)^(0+128)
  4649     0FCB  0835               	movf	_adc_temp^(0+128),w
  4650     0FCC  00BF               	movwf	_vTx^(0+128)
  4651                           
  4652                           ;main.c: 204:     EUSART_Write(vTx.vH);
  4653     0FCD  0840               	movf	(_vTx^(0+128)+1),w
  4654     0FCE  318B  23CA  318F   	fcall	_EUSART_Write
  4655                           
  4656                           ;main.c: 205:     EUSART_Write(vTx.vL);
  4657     0FD1  0021               	movlb	1	; select bank1
  4658     0FD2  083F               	movf	_vTx^(0+128),w
  4659     0FD3  318B  23CA  318F   	fcall	_EUSART_Write
  4660                           
  4661                           ;main.c: 206:     vTx.v = sp_position;
  4662     0FD6  0021               	movlb	1	; select bank1
  4663     0FD7  0838               	movf	(_sp_position+1)^(0+128),w
  4664     0FD8  00C0               	movwf	(_vTx+1)^(0+128)
  4665     0FD9  0837               	movf	_sp_position^(0+128),w
  4666     0FDA  00BF               	movwf	_vTx^(0+128)
  4667                           
  4668                           ;main.c: 207:     EUSART_Write(vTx.vH);
  4669     0FDB  0840               	movf	(_vTx^(0+128)+1),w
  4670     0FDC  318B  23CA  318F   	fcall	_EUSART_Write
  4671                           
  4672                           ;main.c: 208:     EUSART_Write(vTx.vL);
  4673     0FDF  0021               	movlb	1	; select bank1
  4674     0FE0  083F               	movf	_vTx^(0+128),w
  4675     0FE1  318B  23CA  318F   	fcall	_EUSART_Write
  4676                           
  4677                           ;main.c: 209:     vTx.v = position;
  4678     0FE4  0021               	movlb	1	; select bank1
  4679     0FE5  083A               	movf	(_position+1)^(0+128),w
  4680     0FE6  00C0               	movwf	(_vTx+1)^(0+128)
  4681     0FE7  0839               	movf	_position^(0+128),w
  4682     0FE8  00BF               	movwf	_vTx^(0+128)
  4683                           
  4684                           ;main.c: 210:     EUSART_Write(vTx.vH);
  4685     0FE9  0840               	movf	(_vTx^(0+128)+1),w
  4686     0FEA  318B  23CA  318F   	fcall	_EUSART_Write
  4687                           
  4688                           ;main.c: 211:     EUSART_Write(vTx.vL);
  4689     0FED  0021               	movlb	1	; select bank1
  4690     0FEE  083F               	movf	_vTx^(0+128),w
  4691     0FEF  318B  23CA  318F   	fcall	_EUSART_Write
  4692                           
  4693                           ;main.c: 212:     vTx.v = dc;
  4694     0FF2  0021               	movlb	1	; select bank1
  4695     0FF3  083C               	movf	(_dc+1)^(0+128),w
  4696     0FF4  00C0               	movwf	(_vTx+1)^(0+128)
  4697     0FF5  083B               	movf	_dc^(0+128),w
  4698     0FF6  00BF               	movwf	_vTx^(0+128)
  4699                           
  4700                           ;main.c: 213:     EUSART_Write(vTx.vH);
  4701     0FF7  0840               	movf	(_vTx^(0+128)+1),w
  4702     0FF8  318B  23CA  318F   	fcall	_EUSART_Write
  4703                           
  4704                           ;main.c: 214:     EUSART_Write(vTx.vL);
  4705     0FFB  0021               	movlb	1	; select bank1
  4706     0FFC  083F               	movf	_vTx^(0+128),w
  4707     0FFD  318B  23CA         	fcall	_EUSART_Write
  4708     0FFF  0008               	return
  4709     1000                     __end_of_envia_Tx:
  4710                           
  4711                           	psect	text7
  4712     0EC1                     __ptext7:	
  4713 ;; *************** function ___fltol *****************
  4714 ;; Defined at:
  4715 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\fltol.c"
  4716 ;; Parameters:    Size  Location     Type
  4717 ;;  f1              4    0[BANK1 ] void 
  4718 ;; Auto vars:     Size  Location     Type
  4719 ;;  exp1            1    9[BANK1 ] unsigned char 
  4720 ;;  sign1           1    8[BANK1 ] unsigned char 
  4721 ;; Return value:  Size  Location     Type
  4722 ;;                  4    0[BANK1 ] long 
  4723 ;; Registers used:
  4724 ;;		wreg, status,2, status,0
  4725 ;; Tracked objects:
  4726 ;;		On entry : 1F/1
  4727 ;;		On exit  : 1F/1
  4728 ;;		Unchanged: 0/0
  4729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4730 ;;      Params:         0       0       4       0       0       0
  4731 ;;      Locals:         0       0       2       0       0       0
  4732 ;;      Temps:          0       0       4       0       0       0
  4733 ;;      Totals:         0       0      10       0       0       0
  4734 ;;Total ram usage:       10 bytes
  4735 ;; Hardware stack levels used: 1
  4736 ;; Hardware stack levels required when called: 5
  4737 ;; This function calls:
  4738 ;;		Nothing
  4739 ;; This function is called by:
  4740 ;;		_envia_Tx
  4741 ;; This function uses a non-reentrant model
  4742 ;;
  4743                           
  4744     0EC1                     ___fltol:	
  4745                           ;psect for function ___fltol
  4746                           
  4747                           
  4748                           ;incstack = 0
  4749                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  4750     0EC1  1003               	clrc
  4751     0EC2  0D4F               	rlf	(___fltol@f1+2)^(0+128),w
  4752     0EC3  0D50               	rlf	(___fltol@f1+3)^(0+128),w
  4753     0EC4  00D6               	movwf	___fltol@exp1^(0+128)
  4754     0EC5  0856               	movf	___fltol@exp1^(0+128),w
  4755     0EC6  1D03               	btfss	3,2
  4756     0EC7  2ED1               	goto	l2888
  4757     0EC8                     l2884:
  4758     0EC8  3000               	movlw	0
  4759     0EC9  00D0               	movwf	(?___fltol+3)^(0+128)
  4760     0ECA  3000               	movlw	0
  4761     0ECB  00CF               	movwf	(?___fltol+2)^(0+128)
  4762     0ECC  3000               	movlw	0
  4763     0ECD  00CE               	movwf	(?___fltol+1)^(0+128)
  4764     0ECE  3000               	movlw	0
  4765     0ECF  00CD               	movwf	?___fltol^(0+128)
  4766     0ED0  0008               	return
  4767     0ED1                     l2888:
  4768     0ED1  084D               	movf	___fltol@f1^(0+128),w
  4769     0ED2  00D1               	movwf	??___fltol^(0+128)
  4770     0ED3  084E               	movf	(___fltol@f1+1)^(0+128),w
  4771     0ED4  00D2               	movwf	(??___fltol^(0+128)+1)
  4772     0ED5  084F               	movf	(___fltol@f1+2)^(0+128),w
  4773     0ED6  00D3               	movwf	(??___fltol^(0+128)+2)
  4774     0ED7  0850               	movf	(___fltol@f1+3)^(0+128),w
  4775     0ED8  00D4               	movwf	(??___fltol^(0+128)+3)
  4776     0ED9  301F               	movlw	31
  4777     0EDA                     u2655:
  4778     0EDA  36D4               	lsrf	(??___fltol^(0+128)+3),f
  4779     0EDB  0CD3               	rrf	(??___fltol^(0+128)+2),f
  4780     0EDC  0CD2               	rrf	(??___fltol^(0+128)+1),f
  4781     0EDD  0CD1               	rrf	??___fltol^(0+128),f
  4782     0EDE  0B89               	decfsz	9,f
  4783     0EDF  2EDA               	goto	u2655
  4784     0EE0  0851               	movf	??___fltol^(0+128),w
  4785     0EE1  00D5               	movwf	___fltol@sign1^(0+128)
  4786     0EE2  17CF               	bsf	(___fltol@f1^(0+128)+2),7
  4787     0EE3  30FF               	movlw	255
  4788     0EE4  05CD               	andwf	___fltol@f1^(0+128),f
  4789     0EE5  30FF               	movlw	255
  4790     0EE6  05CE               	andwf	(___fltol@f1+1)^(0+128),f
  4791     0EE7  30FF               	movlw	255
  4792     0EE8  05CF               	andwf	(___fltol@f1+2)^(0+128),f
  4793     0EE9  3000               	movlw	0
  4794     0EEA  05D0               	andwf	(___fltol@f1+3)^(0+128),f
  4795     0EEB  3096               	movlw	150
  4796     0EEC  02D6               	subwf	___fltol@exp1^(0+128),f
  4797     0EED  1FD6               	btfss	___fltol@exp1^(0+128),7
  4798     0EEE  2F02               	goto	l2906
  4799     0EEF  0856               	movf	___fltol@exp1^(0+128),w
  4800     0EF0  3A80               	xorlw	128
  4801     0EF1  3E97               	addlw	151
  4802     0EF2  1C03               	btfss	3,0
  4803     0EF3  2EC8               	goto	l2884
  4804     0EF4                     l2904:
  4805     0EF4  3001               	movlw	1
  4806     0EF5                     u2685:
  4807     0EF5  36D0               	lsrf	(___fltol@f1+3)^(0+128),f
  4808     0EF6  0CCF               	rrf	(___fltol@f1+2)^(0+128),f
  4809     0EF7  0CCE               	rrf	(___fltol@f1+1)^(0+128),f
  4810     0EF8  0CCD               	rrf	___fltol@f1^(0+128),f
  4811     0EF9  0B89               	decfsz	9,f
  4812     0EFA  2EF5               	goto	u2685
  4813     0EFB  3001               	movlw	1
  4814     0EFC  00D1               	movwf	??___fltol^(0+128)
  4815     0EFD  0851               	movf	??___fltol^(0+128),w
  4816     0EFE  07D6               	addwf	___fltol@exp1^(0+128),f
  4817     0EFF  1903               	btfsc	3,2
  4818     0F00  2F13               	goto	l2914
  4819     0F01  2EF4               	goto	l2904
  4820     0F02                     l2906:
  4821     0F02  3020               	movlw	32
  4822     0F03  0256               	subwf	___fltol@exp1^(0+128),w
  4823     0F04  1803               	btfsc	3,0
  4824     0F05  2EC8               	goto	l2884
  4825     0F06                     l1121:
  4826     0F06  0856               	movf	___fltol@exp1^(0+128),w
  4827     0F07  1903               	btfsc	3,2
  4828     0F08  2F13               	goto	l2914
  4829     0F09  3001               	movlw	1
  4830     0F0A                     u2715:
  4831     0F0A  35CD               	lslf	___fltol@f1^(0+128),f
  4832     0F0B  0DCE               	rlf	(___fltol@f1+1)^(0+128),f
  4833     0F0C  0DCF               	rlf	(___fltol@f1+2)^(0+128),f
  4834     0F0D  0DD0               	rlf	(___fltol@f1+3)^(0+128),f
  4835     0F0E  0B89               	decfsz	9,f
  4836     0F0F  2F0A               	goto	u2715
  4837     0F10  3001               	movlw	1
  4838     0F11  02D6               	subwf	___fltol@exp1^(0+128),f
  4839     0F12  2F06               	goto	l1121
  4840     0F13                     l2914:
  4841     0F13  0855               	movf	___fltol@sign1^(0+128),w
  4842     0F14  1903               	btfsc	3,2
  4843     0F15  0008               	return
  4844     0F16  09CD               	comf	___fltol@f1^(0+128),f
  4845     0F17  09CE               	comf	(___fltol@f1+1)^(0+128),f
  4846     0F18  09CF               	comf	(___fltol@f1+2)^(0+128),f
  4847     0F19  09D0               	comf	(___fltol@f1+3)^(0+128),f
  4848     0F1A  0ACD               	incf	___fltol@f1^(0+128),f
  4849     0F1B  1903               	skipnz
  4850     0F1C  0ACE               	incf	(___fltol@f1+1)^(0+128),f
  4851     0F1D  1903               	skipnz
  4852     0F1E  0ACF               	incf	(___fltol@f1+2)^(0+128),f
  4853     0F1F  1903               	skipnz
  4854     0F20  0AD0               	incf	(___fltol@f1+3)^(0+128),f
  4855     0F21  0008               	return
  4856     0F22                     __end_of___fltol:
  4857                           
  4858                           	psect	text8
  4859     0BCA                     __ptext8:	
  4860 ;; *************** function _EUSART_Write *****************
  4861 ;; Defined at:
  4862 ;;		line 132 in file "mcc_generated_files/eusart.c"
  4863 ;; Parameters:    Size  Location     Type
  4864 ;;  txData          1    wreg     unsigned char 
  4865 ;; Auto vars:     Size  Location     Type
  4866 ;;  txData          1    0[BANK1 ] unsigned char 
  4867 ;; Return value:  Size  Location     Type
  4868 ;;                  1    wreg      void 
  4869 ;; Registers used:
  4870 ;;		wreg
  4871 ;; Tracked objects:
  4872 ;;		On entry : 1F/1
  4873 ;;		On exit  : 1F/3
  4874 ;;		Unchanged: 0/0
  4875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4876 ;;      Params:         0       0       0       0       0       0
  4877 ;;      Locals:         0       0       1       0       0       0
  4878 ;;      Temps:          0       0       0       0       0       0
  4879 ;;      Totals:         0       0       1       0       0       0
  4880 ;;Total ram usage:        1 bytes
  4881 ;; Hardware stack levels used: 1
  4882 ;; Hardware stack levels required when called: 5
  4883 ;; This function calls:
  4884 ;;		Nothing
  4885 ;; This function is called by:
  4886 ;;		_envia_Tx
  4887 ;; This function uses a non-reentrant model
  4888 ;;
  4889                           
  4890     0BCA                     _EUSART_Write:	
  4891                           ;psect for function _EUSART_Write
  4892                           
  4893                           
  4894                           ;incstack = 0
  4895                           ; Regs used in _EUSART_Write: [wreg]
  4896                           ;EUSART_Write@txData stored from wreg
  4897     0BCA  00CD               	movwf	EUSART_Write@txData^(0+128)
  4898     0BCB                     l247:	
  4899                           ;mcc_generated_files/eusart.c: 135:     {;mcc_generated_files/eusart.c: 136:     }
  4900                           
  4901                           
  4902                           ;mcc_generated_files/eusart.c: 134:     while(0 == PIR1bits.TXIF)
  4903     0BCB  0020               	movlb	0	; select bank0
  4904     0BCC  1E11               	btfss	17,4	;volatile
  4905     0BCD  2BCB               	goto	l247
  4906                           
  4907                           ;mcc_generated_files/eusart.c: 138:     TXREG = txData;
  4908     0BCE  0021               	movlb	1	; select bank1
  4909     0BCF  084D               	movf	EUSART_Write@txData^(0+128),w
  4910     0BD0  0023               	movlb	3	; select bank3
  4911     0BD1  009A               	movwf	26	;volatile
  4912     0BD2  0008               	return
  4913     0BD3                     __end_of_EUSART_Write:
  4914                           
  4915                           	psect	text9
  4916     0C25                     __ptext9:	
  4917 ;; *************** function _controlchoose *****************
  4918 ;; Defined at:
  4919 ;;		line 122 in file "main.c"
  4920 ;; Parameters:    Size  Location     Type
  4921 ;;		None
  4922 ;; Auto vars:     Size  Location     Type
  4923 ;;		None
  4924 ;; Return value:  Size  Location     Type
  4925 ;;                  1    wreg      void 
  4926 ;; Registers used:
  4927 ;;		wreg, status,2, status,0, pclath, cstack
  4928 ;; Tracked objects:
  4929 ;;		On entry : 1F/8
  4930 ;;		On exit  : 1F/8
  4931 ;;		Unchanged: 0/0
  4932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4933 ;;      Params:         0       0       0       0       0       0
  4934 ;;      Locals:         0       0       0       0       0       0
  4935 ;;      Temps:          0       0       0       0       0       0
  4936 ;;      Totals:         0       0       0       0       0       0
  4937 ;;Total ram usage:        0 bytes
  4938 ;; Hardware stack levels used: 1
  4939 ;; Hardware stack levels required when called: 7
  4940 ;; This function calls:
  4941 ;;		_TMR4_StartTimer
  4942 ;;		_fluxcontrol
  4943 ;;		_pwmcontrol
  4944 ;; This function is called by:
  4945 ;;		_main
  4946 ;; This function uses a non-reentrant model
  4947 ;;
  4948                           
  4949     0C25                     _controlchoose:	
  4950                           ;psect for function _controlchoose
  4951                           
  4952                           
  4953                           ;main.c: 123:     if (controlchoice == 1){
  4954                           
  4955                           ;incstack = 0
  4956                           ; Regs used in _controlchoose: [wreg+status,2+status,0+pclath+cstack]
  4957     0C25  0021               	movlb	1	; select bank1
  4958     0C26  034B               	decf	_controlchoice^(0+128),w
  4959     0C27  1D03               	btfss	3,2
  4960     0C28  2C2D               	goto	l2996
  4961                           
  4962                           ;main.c: 124:         pwmcontrol ();
  4963     0C29  3182  2242  318C   	fcall	_pwmcontrol
  4964                           
  4965                           ;main.c: 125:     } else if(controlchoice == 2){
  4966     0C2C  2C34               	goto	l3000
  4967     0C2D                     l2996:
  4968     0C2D  3002               	movlw	2
  4969     0C2E  064B               	xorwf	_controlchoice^(0+128),w
  4970     0C2F  1D03               	btfss	3,2
  4971     0C30  2C34               	goto	l3000
  4972                           
  4973                           ;main.c: 126:         fluxcontrol ();
  4974     0C31  3183  238D  318C   	fcall	_fluxcontrol
  4975     0C34                     l3000:
  4976                           
  4977                           ;main.c: 128:     TMR4_StartTimer();
  4978     0C34  318B  234A         	fcall	_TMR4_StartTimer
  4979     0C36  0008               	return
  4980     0C37                     __end_of_controlchoose:
  4981                           
  4982                           	psect	text10
  4983     0242                     __ptext10:	
  4984 ;; *************** function _pwmcontrol *****************
  4985 ;; Defined at:
  4986 ;;		line 73 in file "main.c"
  4987 ;; Parameters:    Size  Location     Type
  4988 ;;		None
  4989 ;; Auto vars:     Size  Location     Type
  4990 ;;		None
  4991 ;; Return value:  Size  Location     Type
  4992 ;;                  1    wreg      void 
  4993 ;; Registers used:
  4994 ;;		wreg, status,2, status,0, pclath, cstack
  4995 ;; Tracked objects:
  4996 ;;		On entry : 1F/1
  4997 ;;		On exit  : 0/0
  4998 ;;		Unchanged: 0/0
  4999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5000 ;;      Params:         0       0       0       0       0       0
  5001 ;;      Locals:         0       0       0       0       0       0
  5002 ;;      Temps:          0       0      12       0       0       0
  5003 ;;      Totals:         0       0      12       0       0       0
  5004 ;;Total ram usage:       12 bytes
  5005 ;; Hardware stack levels used: 1
  5006 ;; Hardware stack levels required when called: 6
  5007 ;; This function calls:
  5008 ;;		_EPWM1_LoadDutyValue
  5009 ;;		___atdiv
  5010 ;;		___lwdiv
  5011 ;;		___tmul
  5012 ;; This function is called by:
  5013 ;;		_controlchoose
  5014 ;; This function uses a non-reentrant model
  5015 ;;
  5016                           
  5017     0242                     _pwmcontrol:	
  5018                           ;psect for function _pwmcontrol
  5019                           
  5020                           
  5021                           ;main.c: 74:     error = (ballset-balldist);
  5022                           
  5023                           ;incstack = 0
  5024                           ; Regs used in _pwmcontrol: [wreg+status,2+status,0+pclath+cstack]
  5025     0242  082A               	movf	_balldist^(0+128),w
  5026     0243  0020               	movlb	0	; select bank0
  5027     0244  025E               	subwf	_ballset,w
  5028     0245  0021               	movlb	1	; select bank1
  5029     0246  00E2               	movwf	??_pwmcontrol^(0+128)
  5030     0247  0020               	movlb	0	; select bank0
  5031     0248  085F               	movf	_ballset+1,w
  5032     0249  0021               	movlb	1	; select bank1
  5033     024A  00E3               	movwf	(??_pwmcontrol^(0+128)+1)
  5034     024B  082B               	movf	(_balldist+1)^(0+128),w
  5035     024C  1C03               	skipc
  5036     024D  0F2B               	incfsz	(_balldist+1)^(0+128),w
  5037     024E  2A50               	goto	u2481
  5038     024F  2A51               	goto	u2482
  5039     0250                     u2481:
  5040     0250  02E3               	subwf	(??_pwmcontrol^(0+128)+1),f
  5041     0251                     u2482:
  5042     0251  0020               	movlb	0	; select bank0
  5043     0252  0860               	movf	_ballset+2,w
  5044     0253  0021               	movlb	1	; select bank1
  5045     0254  00E4               	movwf	(??_pwmcontrol^(0+128)+2)
  5046     0255  082C               	movf	(_balldist+2)^(0+128),w
  5047     0256  1C03               	skipc
  5048     0257  0F2C               	incfsz	(_balldist+2)^(0+128),w
  5049     0258  2A5A               	goto	u2483
  5050     0259  2A5B               	goto	u2484
  5051     025A                     u2483:
  5052     025A  02E4               	subwf	(??_pwmcontrol^(0+128)+2),f
  5053     025B                     u2484:
  5054     025B  0862               	movf	??_pwmcontrol^(0+128),w
  5055     025C  00B0               	movwf	_error^(0+128)
  5056     025D  0863               	movf	(??_pwmcontrol+1)^(0+128),w
  5057     025E  00B1               	movwf	(_error+1)^(0+128)
  5058     025F  0864               	movf	(??_pwmcontrol+2)^(0+128),w
  5059     0260  00B2               	movwf	(_error+2)^(0+128)
  5060                           
  5061                           ;main.c: 75:     if(error > 15 || error < -15){
  5062     0261  1BB2               	btfsc	(_error+2)^(0+128),7
  5063     0262  2A6D               	goto	l2810
  5064     0263  0832               	movf	(_error+2)^(0+128),w
  5065     0264  1D03               	btfss	3,2
  5066     0265  2A78               	goto	l2812
  5067     0266  0831               	movf	(_error+1)^(0+128),w
  5068     0267  1D03               	btfss	3,2
  5069     0268  2A78               	goto	l2812
  5070     0269  3010               	movlw	16
  5071     026A  0230               	subwf	_error^(0+128),w
  5072     026B  1803               	btfsc	3,0
  5073     026C  2A78               	goto	l2812
  5074     026D                     l2810:
  5075     026D  0021               	movlb	1	; select bank1
  5076     026E  1FB2               	btfss	(_error+2)^(0+128),7
  5077     026F  0008               	return
  5078     0270  30F1               	movlw	241
  5079     0271  0230               	subwf	_error^(0+128),w
  5080     0272  30FF               	movlw	255
  5081     0273  3B31               	subwfb	(_error+1)^(0+128),w
  5082     0274  30FF               	movlw	255
  5083     0275  3B32               	subwfb	(_error+2)^(0+128),w
  5084     0276  1803               	btfsc	3,0
  5085     0277  0008               	return
  5086     0278                     l2812:
  5087     0278  300A               	movlw	10
  5088     0279  0021               	movlb	1	; select bank1
  5089     027A  00D6               	movwf	___atdiv@divisor^(0+128)
  5090     027B  3000               	movlw	0
  5091     027C  00D7               	movwf	(___atdiv@divisor+1)^(0+128)
  5092     027D  3000               	movlw	0
  5093     027E  00D8               	movwf	(___atdiv@divisor+2)^(0+128)
  5094     027F  0830               	movf	_error^(0+128),w
  5095     0280  00CD               	movwf	___tmul@multiplier^(0+128)
  5096     0281  0831               	movf	(_error+1)^(0+128),w
  5097     0282  00CE               	movwf	(___tmul@multiplier+1)^(0+128)
  5098     0283  0832               	movf	(_error+2)^(0+128),w
  5099     0284  00CF               	movwf	(___tmul@multiplier+2)^(0+128)
  5100     0285  3044               	movlw	68
  5101     0286  00D0               	movwf	___tmul@multiplicand^(0+128)
  5102     0287  3000               	movlw	0
  5103     0288  00D1               	movwf	(___tmul@multiplicand+1)^(0+128)
  5104     0289  3000               	movlw	0
  5105     028A  00D2               	movwf	(___tmul@multiplicand+2)^(0+128)
  5106     028B  318D  2543  3182   	fcall	___tmul
  5107     028E  084D               	movf	?___tmul^(0+128),w
  5108     028F  00D9               	movwf	___atdiv@dividend^(0+128)
  5109     0290  084E               	movf	(?___tmul+1)^(0+128),w
  5110     0291  00DA               	movwf	(___atdiv@dividend+1)^(0+128)
  5111     0292  084F               	movf	(?___tmul+2)^(0+128),w
  5112     0293  00DB               	movwf	(___atdiv@dividend+2)^(0+128)
  5113     0294  318F  2722  3182   	fcall	___atdiv
  5114     0297  0856               	movf	?___atdiv^(0+128),w
  5115     0298  07A7               	addwf	_outputsum^(0+128),f
  5116     0299  0857               	movf	(?___atdiv+1)^(0+128),w
  5117     029A  3DA8               	addwfc	(_outputsum+1)^(0+128),f
  5118     029B  0858               	movf	(?___atdiv+2)^(0+128),w
  5119     029C  3DA9               	addwfc	(_outputsum+2)^(0+128),f
  5120                           
  5121                           ;main.c: 77:         if (outputsum > 100) outputsum = 100;
  5122     029D  1BA9               	btfsc	(_outputsum+2)^(0+128),7
  5123     029E  2AB0               	goto	l2818
  5124     029F  0829               	movf	(_outputsum+2)^(0+128),w
  5125     02A0  1D03               	btfss	3,2
  5126     02A1  2AA9               	goto	l2816
  5127     02A2  0828               	movf	(_outputsum+1)^(0+128),w
  5128     02A3  1D03               	btfss	3,2
  5129     02A4  2AA9               	goto	l2816
  5130     02A5  3065               	movlw	101
  5131     02A6  0227               	subwf	_outputsum^(0+128),w
  5132     02A7  1C03               	btfss	3,0
  5133     02A8  2AB0               	goto	l2818
  5134     02A9                     l2816:
  5135     02A9  3064               	movlw	100
  5136     02AA  0021               	movlb	1	; select bank1
  5137     02AB  00A7               	movwf	_outputsum^(0+128)
  5138     02AC  3000               	movlw	0
  5139     02AD  00A8               	movwf	(_outputsum+1)^(0+128)
  5140     02AE  3000               	movlw	0
  5141     02AF  2AC1               	goto	L4
  5142     02B0                     l2818:
  5143     02B0  0021               	movlb	1	; select bank1
  5144     02B1  1FA9               	btfss	(_outputsum+2)^(0+128),7
  5145     02B2  2AC2               	goto	l2822
  5146     02B3  30F6               	movlw	246
  5147     02B4  0227               	subwf	_outputsum^(0+128),w
  5148     02B5  30FF               	movlw	255
  5149     02B6  3B28               	subwfb	(_outputsum+1)^(0+128),w
  5150     02B7  30FF               	movlw	255
  5151     02B8  3B29               	subwfb	(_outputsum+2)^(0+128),w
  5152     02B9  1803               	btfsc	3,0
  5153     02BA  2AC2               	goto	l2822
  5154     02BB  30F6               	movlw	246
  5155     02BC  0021               	movlb	1	; select bank1
  5156     02BD  00A7               	movwf	_outputsum^(0+128)
  5157     02BE  30FF               	movlw	255
  5158     02BF  00A8               	movwf	(_outputsum+1)^(0+128)
  5159     02C0  30FF               	movlw	255
  5160     02C1                     L4:
  5161     02C1  00A9               	movwf	(_outputsum+2)^(0+128)
  5162     02C2                     l2822:
  5163     02C2  0021               	movlb	1	; select bank1
  5164     02C3  0824               	movf	_outpre^(0+128),w
  5165     02C4  00E2               	movwf	??_pwmcontrol^(0+128)
  5166     02C5  0825               	movf	(_outpre+1)^(0+128),w
  5167     02C6  00E3               	movwf	(??_pwmcontrol^(0+128)+1)
  5168     02C7  0826               	movf	(_outpre+2)^(0+128),w
  5169     02C8  00E4               	movwf	(??_pwmcontrol^(0+128)+2)
  5170     02C9  0827               	movf	_outputsum^(0+128),w
  5171     02CA  00E5               	movwf	(??_pwmcontrol+3)^(0+128)
  5172     02CB  0828               	movf	(_outputsum+1)^(0+128),w
  5173     02CC  00E6               	movwf	((??_pwmcontrol+3)^(0+128)+1)
  5174     02CD  0829               	movf	(_outputsum+2)^(0+128),w
  5175     02CE  00E7               	movwf	((??_pwmcontrol+3)^(0+128)+2)
  5176     02CF  082D               	movf	_errorp^(0+128),w
  5177     02D0  00CD               	movwf	___tmul@multiplier^(0+128)
  5178     02D1  082E               	movf	(_errorp+1)^(0+128),w
  5179     02D2  00CE               	movwf	(___tmul@multiplier+1)^(0+128)
  5180     02D3  082F               	movf	(_errorp+2)^(0+128),w
  5181     02D4  00CF               	movwf	(___tmul@multiplier+2)^(0+128)
  5182     02D5  30F1               	movlw	241
  5183     02D6  00D0               	movwf	___tmul@multiplicand^(0+128)
  5184     02D7  30FF               	movlw	255
  5185     02D8  00D1               	movwf	(___tmul@multiplicand+1)^(0+128)
  5186     02D9  30FF               	movlw	255
  5187     02DA  00D2               	movwf	(___tmul@multiplicand+2)^(0+128)
  5188     02DB  318D  2543  3182   	fcall	___tmul
  5189     02DE  084D               	movf	?___tmul^(0+128),w
  5190     02DF  00E8               	movwf	(??_pwmcontrol+6)^(0+128)
  5191     02E0  084E               	movf	(?___tmul+1)^(0+128),w
  5192     02E1  00E9               	movwf	((??_pwmcontrol+6)^(0+128)+1)
  5193     02E2  084F               	movf	(?___tmul+2)^(0+128),w
  5194     02E3  00EA               	movwf	((??_pwmcontrol+6)^(0+128)+2)
  5195     02E4  0830               	movf	_error^(0+128),w
  5196     02E5  00EB               	movwf	(??_pwmcontrol+9)^(0+128)
  5197     02E6  0831               	movf	(_error+1)^(0+128),w
  5198     02E7  00EC               	movwf	((??_pwmcontrol+9)^(0+128)+1)
  5199     02E8  0832               	movf	(_error+2)^(0+128),w
  5200     02E9  00ED               	movwf	((??_pwmcontrol+9)^(0+128)+2)
  5201     02EA  3005               	movlw	5
  5202     02EB                     u2535:
  5203     02EB  35EB               	lslf	(??_pwmcontrol+9)^(0+128),f
  5204     02EC  0DEC               	rlf	((??_pwmcontrol+9)^(0+128)+1),f
  5205     02ED  0DED               	rlf	((??_pwmcontrol+9)^(0+128)+2),f
  5206     02EE  0B89               	decfsz	9,f
  5207     02EF  2AEB               	goto	u2535
  5208     02F0  0830               	movf	_error^(0+128),w
  5209     02F1  00CD               	movwf	___tmul@multiplier^(0+128)
  5210     02F2  0831               	movf	(_error+1)^(0+128),w
  5211     02F3  00CE               	movwf	(___tmul@multiplier+1)^(0+128)
  5212     02F4  0832               	movf	(_error+2)^(0+128),w
  5213     02F5  00CF               	movwf	(___tmul@multiplier+2)^(0+128)
  5214     02F6  300F               	movlw	15
  5215     02F7  00D0               	movwf	___tmul@multiplicand^(0+128)
  5216     02F8  3000               	movlw	0
  5217     02F9  00D1               	movwf	(___tmul@multiplicand+1)^(0+128)
  5218     02FA  3000               	movlw	0
  5219     02FB  00D2               	movwf	(___tmul@multiplicand+2)^(0+128)
  5220     02FC  318D  2543  3182   	fcall	___tmul
  5221     02FF  084D               	movf	?___tmul^(0+128),w
  5222     0300  07EB               	addwf	(??_pwmcontrol+9)^(0+128),f
  5223     0301  084E               	movf	(?___tmul+1)^(0+128),w
  5224     0302  3DEC               	addwfc	((??_pwmcontrol+9)^(0+128)+1),f
  5225     0303  084F               	movf	(?___tmul+2)^(0+128),w
  5226     0304  3DED               	addwfc	((??_pwmcontrol+9)^(0+128)+2),f
  5227     0305  086B               	movf	(??_pwmcontrol+9)^(0+128),w
  5228     0306  07E8               	addwf	(??_pwmcontrol+6)^(0+128),f
  5229     0307  086C               	movf	(??_pwmcontrol+10)^(0+128),w
  5230     0308  3DE9               	addwfc	((??_pwmcontrol+6)^(0+128)+1),f
  5231     0309  086D               	movf	(??_pwmcontrol+11)^(0+128),w
  5232     030A  3DEA               	addwfc	((??_pwmcontrol+6)^(0+128)+2),f
  5233     030B  0868               	movf	(??_pwmcontrol+6)^(0+128),w
  5234     030C  07E5               	addwf	(??_pwmcontrol+3)^(0+128),f
  5235     030D  0869               	movf	(??_pwmcontrol+7)^(0+128),w
  5236     030E  3DE6               	addwfc	((??_pwmcontrol+3)^(0+128)+1),f
  5237     030F  086A               	movf	(??_pwmcontrol+8)^(0+128),w
  5238     0310  3DE7               	addwfc	((??_pwmcontrol+3)^(0+128)+2),f
  5239     0311  0865               	movf	(??_pwmcontrol+3)^(0+128),w
  5240     0312  07E2               	addwf	??_pwmcontrol^(0+128),f
  5241     0313  0866               	movf	(??_pwmcontrol+4)^(0+128),w
  5242     0314  3DE3               	addwfc	(??_pwmcontrol^(0+128)+1),f
  5243     0315  0867               	movf	(??_pwmcontrol+5)^(0+128),w
  5244     0316  3DE4               	addwfc	(??_pwmcontrol^(0+128)+2),f
  5245     0317  0862               	movf	??_pwmcontrol^(0+128),w
  5246     0318  00A4               	movwf	_outpre^(0+128)
  5247     0319  0863               	movf	(??_pwmcontrol+1)^(0+128),w
  5248     031A  00A5               	movwf	(_outpre+1)^(0+128)
  5249     031B  0864               	movf	(??_pwmcontrol+2)^(0+128),w
  5250     031C  00A6               	movwf	(_outpre+2)^(0+128)
  5251                           
  5252                           ;main.c: 80:         if(outpre > 2230){
  5253     031D  1BA6               	btfsc	(_outpre+2)^(0+128),7
  5254     031E  2B2A               	goto	l2828
  5255     031F  0826               	movf	(_outpre+2)^(0+128),w
  5256     0320  1D03               	btfss	3,2
  5257     0321  2B28               	goto	l2826
  5258     0322  30B7               	movlw	183
  5259     0323  0224               	subwf	_outpre^(0+128),w
  5260     0324  3008               	movlw	8
  5261     0325  3B25               	subwfb	(_outpre+1)^(0+128),w
  5262     0326  1C03               	btfss	3,0
  5263     0327  2B2A               	goto	l2828
  5264     0328                     l2826:
  5265                           
  5266                           ;main.c: 81:             output = 1023;
  5267     0328  30FF               	movlw	255
  5268     0329  2B38               	goto	L5
  5269     032A                     l2828:	
  5270                           ;main.c: 82:         }
  5271                           
  5272     032A  0021               	movlb	1	; select bank1
  5273     032B  1BA6               	btfsc	(_outpre+2)^(0+128),7
  5274     032C  2B37               	goto	l2830
  5275     032D  0826               	movf	(_outpre+2)^(0+128),w
  5276     032E  1D03               	btfss	3,2
  5277     032F  2B3D               	goto	l2832
  5278     0330  0825               	movf	(_outpre+1)^(0+128),w
  5279     0331  1D03               	btfss	3,2
  5280     0332  2B3D               	goto	l2832
  5281     0333  3001               	movlw	1
  5282     0334  0224               	subwf	_outpre^(0+128),w
  5283     0335  1803               	btfsc	3,0
  5284     0336  2B3D               	goto	l2832
  5285     0337                     l2830:
  5286                           
  5287                           ;main.c: 84:             output= 0+800;
  5288     0337  3020               	movlw	32
  5289     0338                     L5:
  5290     0338  0021               	movlb	1	; select bank1
  5291     0339  00C1               	movwf	_output^(0+128)
  5292     033A  3003               	movlw	3
  5293     033B  00C2               	movwf	(_output^(0+128)+1)
  5294                           
  5295                           ;main.c: 85:         } else {
  5296     033C  2B5A               	goto	l2840
  5297     033D                     l2832:
  5298                           
  5299                           ;main.c: 86:             output = ((uint16_t)outpre/10) + 800;
  5300     033D  300A               	movlw	10
  5301     033E  0021               	movlb	1	; select bank1
  5302     033F  00CD               	movwf	___lwdiv@divisor^(0+128)
  5303     0340  3000               	movlw	0
  5304     0341  00CE               	movwf	(___lwdiv@divisor^(0+128)+1)
  5305     0342  0825               	movf	(_outpre+1)^(0+128),w
  5306     0343  00D0               	movwf	(___lwdiv@dividend+1)^(0+128)
  5307     0344  0824               	movf	_outpre^(0+128),w
  5308     0345  00CF               	movwf	___lwdiv@dividend^(0+128)
  5309     0346  318D  259D  3182   	fcall	___lwdiv
  5310     0349  084D               	movf	?___lwdiv^(0+128),w
  5311     034A  3E20               	addlw	32
  5312     034B  00C1               	movwf	_output^(0+128)
  5313     034C  3003               	movlw	3
  5314     034D  3D4E               	addwfc	(?___lwdiv+1)^(0+128),w
  5315     034E  00C2               	movwf	(_output+1)^(0+128)
  5316                           
  5317                           ;main.c: 87:             if (output>1023 || output == 0 || output < 0)output = 1023;
  5318     034F  3004               	movlw	4
  5319     0350  0242               	subwf	(_output+1)^(0+128),w
  5320     0351  3000               	movlw	0
  5321     0352  1903               	skipnz
  5322     0353  0241               	subwf	_output^(0+128),w
  5323     0354  1803               	skipnc
  5324     0355  2B28               	goto	l2826
  5325     0356  0841               	movf	_output^(0+128),w
  5326     0357  0442               	iorwf	(_output+1)^(0+128),w
  5327     0358  1903               	btfsc	3,2
  5328     0359  2B28               	goto	l2826
  5329     035A                     l2840:
  5330                           
  5331                           ;main.c: 89:         if (outpre>2230){
  5332     035A  1BA6               	btfsc	(_outpre+2)^(0+128),7
  5333     035B  2B6C               	goto	l2844
  5334     035C  0826               	movf	(_outpre+2)^(0+128),w
  5335     035D  1D03               	btfss	3,2
  5336     035E  2B65               	goto	l2842
  5337     035F  30B7               	movlw	183
  5338     0360  0224               	subwf	_outpre^(0+128),w
  5339     0361  3008               	movlw	8
  5340     0362  3B25               	subwfb	(_outpre+1)^(0+128),w
  5341     0363  1C03               	btfss	3,0
  5342     0364  2B6C               	goto	l2844
  5343     0365                     l2842:
  5344                           
  5345                           ;main.c: 90:             outpre = 2230;
  5346     0365  30B6               	movlw	182
  5347     0366  0021               	movlb	1	; select bank1
  5348     0367  00A4               	movwf	_outpre^(0+128)
  5349     0368  3008               	movlw	8
  5350     0369  00A5               	movwf	(_outpre+1)^(0+128)
  5351     036A  3000               	movlw	0
  5352     036B  2B7D               	goto	L6
  5353     036C                     l2844:	
  5354                           ;main.c: 91:         } else if (outpre < -800){
  5355                           
  5356     036C  0021               	movlb	1	; select bank1
  5357     036D  1FA6               	btfss	(_outpre+2)^(0+128),7
  5358     036E  2B7E               	goto	l2848
  5359     036F  30E0               	movlw	224
  5360     0370  0224               	subwf	_outpre^(0+128),w
  5361     0371  30FC               	movlw	252
  5362     0372  3B25               	subwfb	(_outpre+1)^(0+128),w
  5363     0373  30FF               	movlw	255
  5364     0374  3B26               	subwfb	(_outpre+2)^(0+128),w
  5365     0375  1803               	btfsc	3,0
  5366     0376  2B7E               	goto	l2848
  5367                           
  5368                           ;main.c: 92:             outpre = -800;
  5369     0377  30E0               	movlw	224
  5370     0378  0021               	movlb	1	; select bank1
  5371     0379  00A4               	movwf	_outpre^(0+128)
  5372     037A  30FC               	movlw	252
  5373     037B  00A5               	movwf	(_outpre+1)^(0+128)
  5374     037C  30FF               	movlw	255
  5375     037D                     L6:
  5376     037D  00A6               	movwf	(_outpre+2)^(0+128)
  5377     037E                     l2848:
  5378                           
  5379                           ;main.c: 95:         EPWM1_LoadDutyValue(output);
  5380     037E  0021               	movlb	1	; select bank1
  5381     037F  0842               	movf	(_output+1)^(0+128),w
  5382     0380  00CE               	movwf	(EPWM1_LoadDutyValue@dutyValue+1)^(0+128)
  5383     0381  0841               	movf	_output^(0+128),w
  5384     0382  00CD               	movwf	EPWM1_LoadDutyValue@dutyValue^(0+128)
  5385     0383  318C  24C5         	fcall	_EPWM1_LoadDutyValue
  5386                           
  5387                           ;main.c: 96:         errorp = error;
  5388     0385  0021               	movlb	1	; select bank1
  5389     0386  0830               	movf	_error^(0+128),w
  5390     0387  00AD               	movwf	_errorp^(0+128)
  5391     0388  0831               	movf	(_error+1)^(0+128),w
  5392     0389  00AE               	movwf	(_errorp+1)^(0+128)
  5393     038A  0832               	movf	(_error+2)^(0+128),w
  5394     038B  00AF               	movwf	(_errorp+2)^(0+128)
  5395     038C  0008               	return
  5396     038D                     __end_of_pwmcontrol:
  5397                           
  5398                           	psect	text11
  5399     0D9D                     __ptext11:	
  5400 ;; *************** function ___lwdiv *****************
  5401 ;; Defined at:
  5402 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lwdiv.c"
  5403 ;; Parameters:    Size  Location     Type
  5404 ;;  divisor         2    0[BANK1 ] unsigned int 
  5405 ;;  dividend        2    2[BANK1 ] unsigned int 
  5406 ;; Auto vars:     Size  Location     Type
  5407 ;;  quotient        2    5[BANK1 ] unsigned int 
  5408 ;;  counter         1    7[BANK1 ] unsigned char 
  5409 ;; Return value:  Size  Location     Type
  5410 ;;                  2    0[BANK1 ] unsigned int 
  5411 ;; Registers used:
  5412 ;;		wreg, status,2, status,0
  5413 ;; Tracked objects:
  5414 ;;		On entry : 1F/1
  5415 ;;		On exit  : 1F/1
  5416 ;;		Unchanged: 0/0
  5417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5418 ;;      Params:         0       0       4       0       0       0
  5419 ;;      Locals:         0       0       3       0       0       0
  5420 ;;      Temps:          0       0       1       0       0       0
  5421 ;;      Totals:         0       0       8       0       0       0
  5422 ;;Total ram usage:        8 bytes
  5423 ;; Hardware stack levels used: 1
  5424 ;; Hardware stack levels required when called: 5
  5425 ;; This function calls:
  5426 ;;		Nothing
  5427 ;; This function is called by:
  5428 ;;		_pwmcontrol
  5429 ;; This function uses a non-reentrant model
  5430 ;;
  5431                           
  5432     0D9D                     ___lwdiv:	
  5433                           ;psect for function ___lwdiv
  5434                           
  5435                           
  5436                           ;incstack = 0
  5437                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5438     0D9D  01D2               	clrf	___lwdiv@quotient^(0+128)
  5439     0D9E  01D3               	clrf	(___lwdiv@quotient+1)^(0+128)
  5440     0D9F  084D               	movf	___lwdiv@divisor^(0+128),w
  5441     0DA0  044E               	iorwf	(___lwdiv@divisor+1)^(0+128),w
  5442     0DA1  1903               	btfsc	3,2
  5443     0DA2  2DCC               	goto	l2414
  5444     0DA3  01D4               	clrf	___lwdiv@counter^(0+128)
  5445     0DA4  0AD4               	incf	___lwdiv@counter^(0+128),f
  5446     0DA5                     l2402:
  5447     0DA5  1BCE               	btfsc	(___lwdiv@divisor+1)^(0+128),7
  5448     0DA6  2DB1               	goto	l2404
  5449     0DA7  3001               	movlw	1
  5450     0DA8                     u1785:
  5451     0DA8  35CD               	lslf	___lwdiv@divisor^(0+128),f
  5452     0DA9  0DCE               	rlf	(___lwdiv@divisor+1)^(0+128),f
  5453     0DAA  0B89               	decfsz	9,f
  5454     0DAB  2DA8               	goto	u1785
  5455     0DAC  3001               	movlw	1
  5456     0DAD  00D1               	movwf	??___lwdiv^(0+128)
  5457     0DAE  0851               	movf	??___lwdiv^(0+128),w
  5458     0DAF  07D4               	addwf	___lwdiv@counter^(0+128),f
  5459     0DB0  2DA5               	goto	l2402
  5460     0DB1                     l2404:
  5461     0DB1  3001               	movlw	1
  5462     0DB2                     u1805:
  5463     0DB2  35D2               	lslf	___lwdiv@quotient^(0+128),f
  5464     0DB3  0DD3               	rlf	(___lwdiv@quotient+1)^(0+128),f
  5465     0DB4  0B89               	decfsz	9,f
  5466     0DB5  2DB2               	goto	u1805
  5467     0DB6  084E               	movf	(___lwdiv@divisor+1)^(0+128),w
  5468     0DB7  0250               	subwf	(___lwdiv@dividend+1)^(0+128),w
  5469     0DB8  1D03               	skipz
  5470     0DB9  2DBC               	goto	u1815
  5471     0DBA  084D               	movf	___lwdiv@divisor^(0+128),w
  5472     0DBB  024F               	subwf	___lwdiv@dividend^(0+128),w
  5473     0DBC                     u1815:
  5474     0DBC  1C03               	skipc
  5475     0DBD  2DC3               	goto	l2410
  5476     0DBE  084D               	movf	___lwdiv@divisor^(0+128),w
  5477     0DBF  02CF               	subwf	___lwdiv@dividend^(0+128),f
  5478     0DC0  084E               	movf	(___lwdiv@divisor+1)^(0+128),w
  5479     0DC1  3BD0               	subwfb	(___lwdiv@dividend+1)^(0+128),f
  5480     0DC2  1452               	bsf	___lwdiv@quotient^(0+128),0
  5481     0DC3                     l2410:
  5482     0DC3  3001               	movlw	1
  5483     0DC4                     u1825:
  5484     0DC4  36CE               	lsrf	(___lwdiv@divisor+1)^(0+128),f
  5485     0DC5  0CCD               	rrf	___lwdiv@divisor^(0+128),f
  5486     0DC6  0B89               	decfsz	9,f
  5487     0DC7  2DC4               	goto	u1825
  5488     0DC8  3001               	movlw	1
  5489     0DC9  02D4               	subwf	___lwdiv@counter^(0+128),f
  5490     0DCA  1D03               	btfss	3,2
  5491     0DCB  2DB1               	goto	l2404
  5492     0DCC                     l2414:
  5493     0DCC  0853               	movf	(___lwdiv@quotient+1)^(0+128),w
  5494     0DCD  00CE               	movwf	(?___lwdiv+1)^(0+128)
  5495     0DCE  0852               	movf	___lwdiv@quotient^(0+128),w
  5496     0DCF  00CD               	movwf	?___lwdiv^(0+128)
  5497     0DD0  0008               	return
  5498     0DD1                     __end_of___lwdiv:
  5499                           
  5500                           	psect	text12
  5501     0F22                     __ptext12:	
  5502 ;; *************** function ___atdiv *****************
  5503 ;; Defined at:
  5504 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\atdiv.c"
  5505 ;; Parameters:    Size  Location     Type
  5506 ;;  divisor         3    9[BANK1 ] m
  5507 ;;  dividend        3   12[BANK1 ] m
  5508 ;; Auto vars:     Size  Location     Type
  5509 ;;  quotient        3   18[BANK1 ] m
  5510 ;;  sign            1   17[BANK1 ] unsigned char 
  5511 ;;  counter         1   16[BANK1 ] unsigned char 
  5512 ;; Return value:  Size  Location     Type
  5513 ;;                  3    9[BANK1 ] m
  5514 ;; Registers used:
  5515 ;;		wreg, status,2, status,0
  5516 ;; Tracked objects:
  5517 ;;		On entry : 1F/1
  5518 ;;		On exit  : 1F/1
  5519 ;;		Unchanged: 0/0
  5520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5521 ;;      Params:         0       0       6       0       0       0
  5522 ;;      Locals:         0       0       5       0       0       0
  5523 ;;      Temps:          0       0       1       0       0       0
  5524 ;;      Totals:         0       0      12       0       0       0
  5525 ;;Total ram usage:       12 bytes
  5526 ;; Hardware stack levels used: 1
  5527 ;; Hardware stack levels required when called: 5
  5528 ;; This function calls:
  5529 ;;		Nothing
  5530 ;; This function is called by:
  5531 ;;		_pwmcontrol
  5532 ;; This function uses a non-reentrant model
  5533 ;;
  5534                           
  5535     0F22                     ___atdiv:	
  5536                           ;psect for function ___atdiv
  5537                           
  5538                           
  5539                           ;incstack = 0
  5540                           ; Regs used in ___atdiv: [wreg+status,2+status,0]
  5541     0F22  01DE               	clrf	___atdiv@sign^(0+128)
  5542     0F23  1FD8               	btfss	(___atdiv@divisor+2)^(0+128),7
  5543     0F24  2F2F               	goto	l1037
  5544     0F25  09D6               	comf	___atdiv@divisor^(0+128),f
  5545     0F26  09D7               	comf	(___atdiv@divisor+1)^(0+128),f
  5546     0F27  09D8               	comf	(___atdiv@divisor+2)^(0+128),f
  5547     0F28  0AD6               	incf	___atdiv@divisor^(0+128),f
  5548     0F29  1903               	skipnz
  5549     0F2A  0AD7               	incf	(___atdiv@divisor+1)^(0+128),f
  5550     0F2B  1903               	skipnz
  5551     0F2C  0AD8               	incf	(___atdiv@divisor+2)^(0+128),f
  5552     0F2D  01DE               	clrf	___atdiv@sign^(0+128)
  5553     0F2E  0ADE               	incf	___atdiv@sign^(0+128),f
  5554     0F2F                     l1037:
  5555     0F2F  1FDB               	btfss	(___atdiv@dividend+2)^(0+128),7
  5556     0F30  2F3D               	goto	l2362
  5557     0F31  09D9               	comf	___atdiv@dividend^(0+128),f
  5558     0F32  09DA               	comf	(___atdiv@dividend+1)^(0+128),f
  5559     0F33  09DB               	comf	(___atdiv@dividend+2)^(0+128),f
  5560     0F34  0AD9               	incf	___atdiv@dividend^(0+128),f
  5561     0F35  1903               	skipnz
  5562     0F36  0ADA               	incf	(___atdiv@dividend+1)^(0+128),f
  5563     0F37  1903               	skipnz
  5564     0F38  0ADB               	incf	(___atdiv@dividend+2)^(0+128),f
  5565     0F39  3001               	movlw	1
  5566     0F3A  00DC               	movwf	??___atdiv^(0+128)
  5567     0F3B  085C               	movf	??___atdiv^(0+128),w
  5568     0F3C  06DE               	xorwf	___atdiv@sign^(0+128),f
  5569     0F3D                     l2362:
  5570     0F3D  3000               	movlw	0
  5571     0F3E  00DF               	movwf	___atdiv@quotient^(0+128)
  5572     0F3F  3000               	movlw	0
  5573     0F40  00E0               	movwf	(___atdiv@quotient+1)^(0+128)
  5574     0F41  3000               	movlw	0
  5575     0F42  00E1               	movwf	(___atdiv@quotient+2)^(0+128)
  5576     0F43  0858               	movf	(___atdiv@divisor+2)^(0+128),w
  5577     0F44  0457               	iorwf	(___atdiv@divisor+1)^(0+128),w
  5578     0F45  0456               	iorwf	___atdiv@divisor^(0+128),w
  5579     0F46  1903               	skipnz
  5580     0F47  2F7A               	goto	l2384
  5581     0F48  01DD               	clrf	___atdiv@counter^(0+128)
  5582     0F49  0ADD               	incf	___atdiv@counter^(0+128),f
  5583     0F4A                     l2370:
  5584     0F4A  1BD8               	btfsc	(___atdiv@divisor+2)^(0+128),7
  5585     0F4B  2F57               	goto	l2372
  5586     0F4C  3001               	movlw	1
  5587     0F4D                     u1705:
  5588     0F4D  35D6               	lslf	___atdiv@divisor^(0+128),f
  5589     0F4E  0DD7               	rlf	(___atdiv@divisor+1)^(0+128),f
  5590     0F4F  0DD8               	rlf	(___atdiv@divisor+2)^(0+128),f
  5591     0F50  0B89               	decfsz	9,f
  5592     0F51  2F4D               	goto	u1705
  5593     0F52  3001               	movlw	1
  5594     0F53  00DC               	movwf	??___atdiv^(0+128)
  5595     0F54  085C               	movf	??___atdiv^(0+128),w
  5596     0F55  07DD               	addwf	___atdiv@counter^(0+128),f
  5597     0F56  2F4A               	goto	l2370
  5598     0F57                     l2372:
  5599     0F57  3001               	movlw	1
  5600     0F58                     u1725:
  5601     0F58  35DF               	lslf	___atdiv@quotient^(0+128),f
  5602     0F59  0DE0               	rlf	(___atdiv@quotient+1)^(0+128),f
  5603     0F5A  0DE1               	rlf	(___atdiv@quotient+2)^(0+128),f
  5604     0F5B  0B89               	decfsz	9,f
  5605     0F5C  2F58               	goto	u1725
  5606     0F5D  0858               	movf	(___atdiv@divisor+2)^(0+128),w
  5607     0F5E  025B               	subwf	(___atdiv@dividend+2)^(0+128),w
  5608     0F5F  1D03               	skipz
  5609     0F60  2F67               	goto	u1735
  5610     0F61  0857               	movf	(___atdiv@divisor+1)^(0+128),w
  5611     0F62  025A               	subwf	(___atdiv@dividend+1)^(0+128),w
  5612     0F63  1D03               	skipz
  5613     0F64  2F67               	goto	u1735
  5614     0F65  0856               	movf	___atdiv@divisor^(0+128),w
  5615     0F66  0259               	subwf	___atdiv@dividend^(0+128),w
  5616     0F67                     u1735:
  5617     0F67  1C03               	skipc
  5618     0F68  2F70               	goto	l2380
  5619     0F69  0856               	movf	___atdiv@divisor^(0+128),w
  5620     0F6A  02D9               	subwf	___atdiv@dividend^(0+128),f
  5621     0F6B  0857               	movf	(___atdiv@divisor+1)^(0+128),w
  5622     0F6C  3BDA               	subwfb	(___atdiv@dividend+1)^(0+128),f
  5623     0F6D  0858               	movf	(___atdiv@divisor+2)^(0+128),w
  5624     0F6E  3BDB               	subwfb	(___atdiv@dividend+2)^(0+128),f
  5625     0F6F  145F               	bsf	___atdiv@quotient^(0+128),0
  5626     0F70                     l2380:
  5627     0F70  3001               	movlw	1
  5628     0F71                     u1745:
  5629     0F71  36D8               	lsrf	(___atdiv@divisor+2)^(0+128),f
  5630     0F72  0CD7               	rrf	(___atdiv@divisor+1)^(0+128),f
  5631     0F73  0CD6               	rrf	___atdiv@divisor^(0+128),f
  5632     0F74  0B89               	decfsz	9,f
  5633     0F75  2F71               	goto	u1745
  5634     0F76  3001               	movlw	1
  5635     0F77  02DD               	subwf	___atdiv@counter^(0+128),f
  5636     0F78  1D03               	btfss	3,2
  5637     0F79  2F57               	goto	l2372
  5638     0F7A                     l2384:
  5639     0F7A  085E               	movf	___atdiv@sign^(0+128),w
  5640     0F7B  1903               	btfsc	3,2
  5641     0F7C  2F85               	goto	l2388
  5642     0F7D  09DF               	comf	___atdiv@quotient^(0+128),f
  5643     0F7E  09E0               	comf	(___atdiv@quotient+1)^(0+128),f
  5644     0F7F  09E1               	comf	(___atdiv@quotient+2)^(0+128),f
  5645     0F80  0ADF               	incf	___atdiv@quotient^(0+128),f
  5646     0F81  1903               	skipnz
  5647     0F82  0AE0               	incf	(___atdiv@quotient+1)^(0+128),f
  5648     0F83  1903               	skipnz
  5649     0F84  0AE1               	incf	(___atdiv@quotient+2)^(0+128),f
  5650     0F85                     l2388:
  5651     0F85  085F               	movf	___atdiv@quotient^(0+128),w
  5652     0F86  00D6               	movwf	?___atdiv^(0+128)
  5653     0F87  0860               	movf	(___atdiv@quotient+1)^(0+128),w
  5654     0F88  00D7               	movwf	(?___atdiv+1)^(0+128)
  5655     0F89  0861               	movf	(___atdiv@quotient+2)^(0+128),w
  5656     0F8A  00D8               	movwf	(?___atdiv+2)^(0+128)
  5657     0F8B  0008               	return
  5658     0F8C                     __end_of___atdiv:
  5659                           
  5660                           	psect	text13
  5661     038D                     __ptext13:	
  5662 ;; *************** function _fluxcontrol *****************
  5663 ;; Defined at:
  5664 ;;		line 51 in file "main.c"
  5665 ;; Parameters:    Size  Location     Type
  5666 ;;		None
  5667 ;; Auto vars:     Size  Location     Type
  5668 ;;		None
  5669 ;; Return value:  Size  Location     Type
  5670 ;;                  1    wreg      void 
  5671 ;; Registers used:
  5672 ;;		wreg, status,2, status,0, pclath, cstack
  5673 ;; Tracked objects:
  5674 ;;		On entry : 1F/1
  5675 ;;		On exit  : 0/0
  5676 ;;		Unchanged: 0/0
  5677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5678 ;;      Params:         0       0       0       0       0       0
  5679 ;;      Locals:         0       0       0       0       0       0
  5680 ;;      Temps:          0       0       6       0       0       0
  5681 ;;      Totals:         0       0       6       0       0       0
  5682 ;;Total ram usage:        6 bytes
  5683 ;; Hardware stack levels used: 1
  5684 ;; Hardware stack levels required when called: 6
  5685 ;; This function calls:
  5686 ;;		___tmul
  5687 ;; This function is called by:
  5688 ;;		_controlchoose
  5689 ;; This function uses a non-reentrant model
  5690 ;;
  5691                           
  5692     038D                     _fluxcontrol:	
  5693                           ;psect for function _fluxcontrol
  5694                           
  5695                           
  5696                           ;main.c: 52:     error = (ballset-balldist)*100;
  5697                           
  5698                           ;incstack = 0
  5699                           ; Regs used in _fluxcontrol: [wreg+status,2+status,0+pclath+cstack]
  5700     038D  082A               	movf	_balldist^(0+128),w
  5701     038E  0020               	movlb	0	; select bank0
  5702     038F  025E               	subwf	_ballset,w
  5703     0390  0021               	movlb	1	; select bank1
  5704     0391  00D6               	movwf	??_fluxcontrol^(0+128)
  5705     0392  0020               	movlb	0	; select bank0
  5706     0393  085F               	movf	_ballset+1,w
  5707     0394  0021               	movlb	1	; select bank1
  5708     0395  00D7               	movwf	(??_fluxcontrol^(0+128)+1)
  5709     0396  082B               	movf	(_balldist+1)^(0+128),w
  5710     0397  1C03               	skipc
  5711     0398  0F2B               	incfsz	(_balldist+1)^(0+128),w
  5712     0399  2B9B               	goto	u2411
  5713     039A  2B9C               	goto	u2412
  5714     039B                     u2411:
  5715     039B  02D7               	subwf	(??_fluxcontrol^(0+128)+1),f
  5716     039C                     u2412:
  5717     039C  0020               	movlb	0	; select bank0
  5718     039D  0860               	movf	_ballset+2,w
  5719     039E  0021               	movlb	1	; select bank1
  5720     039F  00D8               	movwf	(??_fluxcontrol^(0+128)+2)
  5721     03A0  082C               	movf	(_balldist+2)^(0+128),w
  5722     03A1  1C03               	skipc
  5723     03A2  0F2C               	incfsz	(_balldist+2)^(0+128),w
  5724     03A3  2BA5               	goto	u2413
  5725     03A4  2BA6               	goto	u2414
  5726     03A5                     u2413:
  5727     03A5  02D8               	subwf	(??_fluxcontrol^(0+128)+2),f
  5728     03A6                     u2414:
  5729     03A6  0856               	movf	??_fluxcontrol^(0+128),w
  5730     03A7  00CD               	movwf	___tmul@multiplier^(0+128)
  5731     03A8  0857               	movf	(??_fluxcontrol+1)^(0+128),w
  5732     03A9  00CE               	movwf	(___tmul@multiplier+1)^(0+128)
  5733     03AA  0858               	movf	(??_fluxcontrol+2)^(0+128),w
  5734     03AB  00CF               	movwf	(___tmul@multiplier+2)^(0+128)
  5735     03AC  3064               	movlw	100
  5736     03AD  00D0               	movwf	___tmul@multiplicand^(0+128)
  5737     03AE  3000               	movlw	0
  5738     03AF  00D1               	movwf	(___tmul@multiplicand+1)^(0+128)
  5739     03B0  3000               	movlw	0
  5740     03B1  00D2               	movwf	(___tmul@multiplicand+2)^(0+128)
  5741     03B2  318D  2543  3183   	fcall	___tmul
  5742     03B5  084D               	movf	?___tmul^(0+128),w
  5743     03B6  00B0               	movwf	_error^(0+128)
  5744     03B7  084E               	movf	(?___tmul+1)^(0+128),w
  5745     03B8  00B1               	movwf	(_error+1)^(0+128)
  5746     03B9  084F               	movf	(?___tmul+2)^(0+128),w
  5747     03BA  00B2               	movwf	(_error+2)^(0+128)
  5748                           
  5749                           ;main.c: 53:     if(error > 150 || error < -150){
  5750     03BB  1BB2               	btfsc	(_error+2)^(0+128),7
  5751     03BC  2BC7               	goto	l2784
  5752     03BD  0832               	movf	(_error+2)^(0+128),w
  5753     03BE  1D03               	btfss	3,2
  5754     03BF  2BD2               	goto	l2786
  5755     03C0  0831               	movf	(_error+1)^(0+128),w
  5756     03C1  1D03               	btfss	3,2
  5757     03C2  2BD2               	goto	l2786
  5758     03C3  3097               	movlw	151
  5759     03C4  0230               	subwf	_error^(0+128),w
  5760     03C5  1803               	btfsc	3,0
  5761     03C6  2BD2               	goto	l2786
  5762     03C7                     l2784:
  5763     03C7  0021               	movlb	1	; select bank1
  5764     03C8  1FB2               	btfss	(_error+2)^(0+128),7
  5765     03C9  0008               	return
  5766     03CA  306A               	movlw	106
  5767     03CB  0230               	subwf	_error^(0+128),w
  5768     03CC  30FF               	movlw	255
  5769     03CD  3B31               	subwfb	(_error+1)^(0+128),w
  5770     03CE  30FF               	movlw	255
  5771     03CF  3B32               	subwfb	(_error+2)^(0+128),w
  5772     03D0  1803               	btfsc	3,0
  5773     03D1  0008               	return
  5774     03D2                     l2786:
  5775                           
  5776                           ;main.c: 59:         outpre = (((kpf*error +kdf*(error-errorp)))+outpre);
  5777     03D2  0021               	movlb	1	; select bank1
  5778     03D3  0824               	movf	_outpre^(0+128),w
  5779     03D4  00D6               	movwf	??_fluxcontrol^(0+128)
  5780     03D5  0825               	movf	(_outpre+1)^(0+128),w
  5781     03D6  00D7               	movwf	(??_fluxcontrol^(0+128)+1)
  5782     03D7  0826               	movf	(_outpre+2)^(0+128),w
  5783     03D8  00D8               	movwf	(??_fluxcontrol^(0+128)+2)
  5784     03D9  082D               	movf	_errorp^(0+128),w
  5785     03DA  00CD               	movwf	___tmul@multiplier^(0+128)
  5786     03DB  082E               	movf	(_errorp+1)^(0+128),w
  5787     03DC  00CE               	movwf	(___tmul@multiplier+1)^(0+128)
  5788     03DD  082F               	movf	(_errorp+2)^(0+128),w
  5789     03DE  00CF               	movwf	(___tmul@multiplier+2)^(0+128)
  5790     03DF  3093               	movlw	147
  5791     03E0  00D0               	movwf	___tmul@multiplicand^(0+128)
  5792     03E1  30FF               	movlw	255
  5793     03E2  00D1               	movwf	(___tmul@multiplicand+1)^(0+128)
  5794     03E3  30FF               	movlw	255
  5795     03E4  00D2               	movwf	(___tmul@multiplicand+2)^(0+128)
  5796     03E5  318D  2543  3183   	fcall	___tmul
  5797     03E8  084D               	movf	?___tmul^(0+128),w
  5798     03E9  00D9               	movwf	(??_fluxcontrol+3)^(0+128)
  5799     03EA  084E               	movf	(?___tmul+1)^(0+128),w
  5800     03EB  00DA               	movwf	((??_fluxcontrol+3)^(0+128)+1)
  5801     03EC  084F               	movf	(?___tmul+2)^(0+128),w
  5802     03ED  00DB               	movwf	((??_fluxcontrol+3)^(0+128)+2)
  5803     03EE  0830               	movf	_error^(0+128),w
  5804     03EF  00CD               	movwf	___tmul@multiplier^(0+128)
  5805     03F0  0831               	movf	(_error+1)^(0+128),w
  5806     03F1  00CE               	movwf	(___tmul@multiplier+1)^(0+128)
  5807     03F2  0832               	movf	(_error+2)^(0+128),w
  5808     03F3  00CF               	movwf	(___tmul@multiplier+2)^(0+128)
  5809     03F4  3082               	movlw	130
  5810     03F5  00D0               	movwf	___tmul@multiplicand^(0+128)
  5811     03F6  3000               	movlw	0
  5812     03F7  00D1               	movwf	(___tmul@multiplicand+1)^(0+128)
  5813     03F8  3000               	movlw	0
  5814     03F9  00D2               	movwf	(___tmul@multiplicand+2)^(0+128)
  5815     03FA  318D  2543  3183   	fcall	___tmul
  5816     03FD  084D               	movf	?___tmul^(0+128),w
  5817     03FE  07D9               	addwf	(??_fluxcontrol+3)^(0+128),f
  5818     03FF  084E               	movf	(?___tmul+1)^(0+128),w
  5819     0400  3DDA               	addwfc	((??_fluxcontrol+3)^(0+128)+1),f
  5820     0401  084F               	movf	(?___tmul+2)^(0+128),w
  5821     0402  3DDB               	addwfc	((??_fluxcontrol+3)^(0+128)+2),f
  5822     0403  0859               	movf	(??_fluxcontrol+3)^(0+128),w
  5823     0404  07D6               	addwf	??_fluxcontrol^(0+128),f
  5824     0405  085A               	movf	(??_fluxcontrol+4)^(0+128),w
  5825     0406  3DD7               	addwfc	(??_fluxcontrol^(0+128)+1),f
  5826     0407  085B               	movf	(??_fluxcontrol+5)^(0+128),w
  5827     0408  3DD8               	addwfc	(??_fluxcontrol^(0+128)+2),f
  5828     0409  0856               	movf	??_fluxcontrol^(0+128),w
  5829     040A  00A4               	movwf	_outpre^(0+128)
  5830     040B  0857               	movf	(??_fluxcontrol+1)^(0+128),w
  5831     040C  00A5               	movwf	(_outpre+1)^(0+128)
  5832     040D  0858               	movf	(??_fluxcontrol+2)^(0+128),w
  5833     040E  00A6               	movwf	(_outpre+2)^(0+128)
  5834                           
  5835                           ;main.c: 60:         if (outpre > 0) output = 0;
  5836     040F  1BA6               	btfsc	(_outpre+2)^(0+128),7
  5837     0410  2C1F               	goto	l2792
  5838     0411  0826               	movf	(_outpre+2)^(0+128),w
  5839     0412  1D03               	btfss	3,2
  5840     0413  2C1B               	goto	l2790
  5841     0414  0825               	movf	(_outpre+1)^(0+128),w
  5842     0415  1D03               	btfss	3,2
  5843     0416  2C1B               	goto	l2790
  5844     0417  3001               	movlw	1
  5845     0418  0224               	subwf	_outpre^(0+128),w
  5846     0419  1C03               	btfss	3,0
  5847     041A  2C1F               	goto	l2792
  5848     041B                     l2790:
  5849     041B  0021               	movlb	1	; select bank1
  5850     041C  01C1               	clrf	_output^(0+128)
  5851     041D  01C2               	clrf	(_output+1)^(0+128)
  5852     041E  2C2F               	goto	l2798
  5853     041F                     l2792:
  5854     041F  0021               	movlb	1	; select bank1
  5855     0420  1FA6               	btfss	(_outpre+2)^(0+128),7
  5856     0421  2C1B               	goto	l2790
  5857     0422  30C0               	movlw	192
  5858     0423  0224               	subwf	_outpre^(0+128),w
  5859     0424  3063               	movlw	99
  5860     0425  3B25               	subwfb	(_outpre+1)^(0+128),w
  5861     0426  30FF               	movlw	255
  5862     0427  3B26               	subwfb	(_outpre+2)^(0+128),w
  5863     0428  1803               	btfsc	3,0
  5864     0429  2C1B               	goto	l2790
  5865     042A  3090               	movlw	144
  5866     042B  0021               	movlb	1	; select bank1
  5867     042C  00C1               	movwf	_output^(0+128)
  5868     042D  3001               	movlw	1
  5869     042E  00C2               	movwf	(_output^(0+128)+1)
  5870     042F                     l2798:
  5871                           
  5872                           ;main.c: 63:         if (outpre>800){
  5873     042F  1BA6               	btfsc	(_outpre+2)^(0+128),7
  5874     0430  2C41               	goto	l2802
  5875     0431  0826               	movf	(_outpre+2)^(0+128),w
  5876     0432  1D03               	btfss	3,2
  5877     0433  2C3A               	goto	l2800
  5878     0434  3021               	movlw	33
  5879     0435  0224               	subwf	_outpre^(0+128),w
  5880     0436  3003               	movlw	3
  5881     0437  3B25               	subwfb	(_outpre+1)^(0+128),w
  5882     0438  1C03               	btfss	3,0
  5883     0439  2C41               	goto	l2802
  5884     043A                     l2800:
  5885                           
  5886                           ;main.c: 64:             outpre = 800;
  5887     043A  3020               	movlw	32
  5888     043B  0021               	movlb	1	; select bank1
  5889     043C  00A4               	movwf	_outpre^(0+128)
  5890     043D  3003               	movlw	3
  5891     043E  00A5               	movwf	(_outpre+1)^(0+128)
  5892     043F  3000               	movlw	0
  5893     0440  2C52               	goto	L7
  5894     0441                     l2802:	
  5895                           ;main.c: 65:         } else if (outpre < -45000){
  5896                           
  5897     0441  0021               	movlb	1	; select bank1
  5898     0442  1FA6               	btfss	(_outpre+2)^(0+128),7
  5899     0443  2C53               	goto	l586
  5900     0444  3038               	movlw	56
  5901     0445  0224               	subwf	_outpre^(0+128),w
  5902     0446  3050               	movlw	80
  5903     0447  3B25               	subwfb	(_outpre+1)^(0+128),w
  5904     0448  30FF               	movlw	255
  5905     0449  3B26               	subwfb	(_outpre+2)^(0+128),w
  5906     044A  1803               	btfsc	3,0
  5907     044B  2C53               	goto	l586
  5908                           
  5909                           ;main.c: 66:             outpre = -45000;
  5910     044C  3038               	movlw	56
  5911     044D  0021               	movlb	1	; select bank1
  5912     044E  00A4               	movwf	_outpre^(0+128)
  5913     044F  3050               	movlw	80
  5914     0450  00A5               	movwf	(_outpre+1)^(0+128)
  5915     0451  30FF               	movlw	255
  5916     0452                     L7:
  5917     0452  00A6               	movwf	(_outpre+2)^(0+128)
  5918     0453                     l586:
  5919                           
  5920                           ;main.c: 68:         errorp = error;
  5921     0453  0021               	movlb	1	; select bank1
  5922     0454  0830               	movf	_error^(0+128),w
  5923     0455  00AD               	movwf	_errorp^(0+128)
  5924     0456  0831               	movf	(_error+1)^(0+128),w
  5925     0457  00AE               	movwf	(_errorp+1)^(0+128)
  5926     0458  0832               	movf	(_error+2)^(0+128),w
  5927     0459  00AF               	movwf	(_errorp+2)^(0+128)
  5928     045A  0008               	return
  5929     045B                     __end_of_fluxcontrol:
  5930                           
  5931                           	psect	text14
  5932     0D43                     __ptext14:	
  5933 ;; *************** function ___tmul *****************
  5934 ;; Defined at:
  5935 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul24.c"
  5936 ;; Parameters:    Size  Location     Type
  5937 ;;  multiplier      3    0[BANK1 ] unsigned um
  5938 ;;  multiplicand    3    3[BANK1 ] unsigned um
  5939 ;; Auto vars:     Size  Location     Type
  5940 ;;  product         3    6[BANK1 ] unsigned um
  5941 ;; Return value:  Size  Location     Type
  5942 ;;                  3    0[BANK1 ] unsigned um
  5943 ;; Registers used:
  5944 ;;		wreg, status,2, status,0
  5945 ;; Tracked objects:
  5946 ;;		On entry : 1F/1
  5947 ;;		On exit  : 1F/1
  5948 ;;		Unchanged: 0/0
  5949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5950 ;;      Params:         0       0       6       0       0       0
  5951 ;;      Locals:         0       0       3       0       0       0
  5952 ;;      Temps:          0       0       0       0       0       0
  5953 ;;      Totals:         0       0       9       0       0       0
  5954 ;;Total ram usage:        9 bytes
  5955 ;; Hardware stack levels used: 1
  5956 ;; Hardware stack levels required when called: 5
  5957 ;; This function calls:
  5958 ;;		Nothing
  5959 ;; This function is called by:
  5960 ;;		_fluxcontrol
  5961 ;;		_pwmcontrol
  5962 ;; This function uses a non-reentrant model
  5963 ;;
  5964                           
  5965     0D43                     ___tmul:	
  5966                           ;psect for function ___tmul
  5967                           
  5968                           
  5969                           ;incstack = 0
  5970                           ; Regs used in ___tmul: [wreg+status,2+status,0]
  5971     0D43  3000               	movlw	0
  5972     0D44  00D3               	movwf	___tmul@product^(0+128)
  5973     0D45  3000               	movlw	0
  5974     0D46  00D4               	movwf	(___tmul@product+1)^(0+128)
  5975     0D47  3000               	movlw	0
  5976     0D48  00D5               	movwf	(___tmul@product+2)^(0+128)
  5977     0D49                     l2340:
  5978     0D49  1C4D               	btfss	___tmul@multiplier^(0+128),0
  5979     0D4A  2D51               	goto	l2344
  5980     0D4B  0850               	movf	___tmul@multiplicand^(0+128),w
  5981     0D4C  07D3               	addwf	___tmul@product^(0+128),f
  5982     0D4D  0851               	movf	(___tmul@multiplicand+1)^(0+128),w
  5983     0D4E  3DD4               	addwfc	(___tmul@product+1)^(0+128),f
  5984     0D4F  0852               	movf	(___tmul@multiplicand+2)^(0+128),w
  5985     0D50  3DD5               	addwfc	(___tmul@product+2)^(0+128),f
  5986     0D51                     l2344:
  5987     0D51  3001               	movlw	1
  5988     0D52                     u1645:
  5989     0D52  35D0               	lslf	___tmul@multiplicand^(0+128),f
  5990     0D53  0DD1               	rlf	(___tmul@multiplicand+1)^(0+128),f
  5991     0D54  0DD2               	rlf	(___tmul@multiplicand+2)^(0+128),f
  5992     0D55  0B89               	decfsz	9,f
  5993     0D56  2D52               	goto	u1645
  5994     0D57  3001               	movlw	1
  5995     0D58                     u1655:
  5996     0D58  36CF               	lsrf	(___tmul@multiplier+2)^(0+128),f
  5997     0D59  0CCE               	rrf	(___tmul@multiplier+1)^(0+128),f
  5998     0D5A  0CCD               	rrf	___tmul@multiplier^(0+128),f
  5999     0D5B  0B89               	decfsz	9,f
  6000     0D5C  2D58               	goto	u1655
  6001     0D5D  084F               	movf	(___tmul@multiplier+2)^(0+128),w
  6002     0D5E  044E               	iorwf	(___tmul@multiplier+1)^(0+128),w
  6003     0D5F  044D               	iorwf	___tmul@multiplier^(0+128),w
  6004     0D60  1D03               	skipz
  6005     0D61  2D49               	goto	l2340
  6006     0D62  0853               	movf	___tmul@product^(0+128),w
  6007     0D63  00CD               	movwf	?___tmul^(0+128)
  6008     0D64  0854               	movf	(___tmul@product+1)^(0+128),w
  6009     0D65  00CE               	movwf	(?___tmul+1)^(0+128)
  6010     0D66  0855               	movf	(___tmul@product+2)^(0+128),w
  6011     0D67  00CF               	movwf	(?___tmul+2)^(0+128)
  6012     0D68  0008               	return
  6013     0D69                     __end_of___tmul:
  6014                           
  6015                           	psect	text15
  6016     0B4A                     __ptext15:	
  6017 ;; *************** function _TMR4_StartTimer *****************
  6018 ;; Defined at:
  6019 ;;		line 79 in file "mcc_generated_files/tmr4.c"
  6020 ;; Parameters:    Size  Location     Type
  6021 ;;		None
  6022 ;; Auto vars:     Size  Location     Type
  6023 ;;		None
  6024 ;; Return value:  Size  Location     Type
  6025 ;;                  1    wreg      void 
  6026 ;; Registers used:
  6027 ;;		None
  6028 ;; Tracked objects:
  6029 ;;		On entry : 0/1
  6030 ;;		On exit  : 1F/8
  6031 ;;		Unchanged: 0/0
  6032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6033 ;;      Params:         0       0       0       0       0       0
  6034 ;;      Locals:         0       0       0       0       0       0
  6035 ;;      Temps:          0       0       0       0       0       0
  6036 ;;      Totals:         0       0       0       0       0       0
  6037 ;;Total ram usage:        0 bytes
  6038 ;; Hardware stack levels used: 1
  6039 ;; Hardware stack levels required when called: 5
  6040 ;; This function calls:
  6041 ;;		Nothing
  6042 ;; This function is called by:
  6043 ;;		_controlchoose
  6044 ;; This function uses a non-reentrant model
  6045 ;;
  6046                           
  6047     0B4A                     _TMR4_StartTimer:	
  6048                           ;psect for function _TMR4_StartTimer
  6049                           
  6050                           
  6051                           ;mcc_generated_files/tmr4.c: 82:     T4CONbits.TMR4ON = 1;
  6052                           
  6053                           ;incstack = 0
  6054                           ; Regs used in _TMR4_StartTimer: []
  6055     0B4A  0028               	movlb	8	; select bank8
  6056     0B4B  1517               	bsf	23,2	;volatile
  6057     0B4C  0008               	return
  6058     0B4D                     __end_of_TMR4_StartTimer:
  6059                           
  6060                           	psect	text16
  6061     0527                     __ptext16:	
  6062 ;; *************** function _analisa_Rx *****************
  6063 ;; Defined at:
  6064 ;;		line 131 in file "main.c"
  6065 ;; Parameters:    Size  Location     Type
  6066 ;;		None
  6067 ;; Auto vars:     Size  Location     Type
  6068 ;;		None
  6069 ;; Return value:  Size  Location     Type
  6070 ;;                  1    wreg      void 
  6071 ;; Registers used:
  6072 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6073 ;; Tracked objects:
  6074 ;;		On entry : 1F/1
  6075 ;;		On exit  : 1F/1
  6076 ;;		Unchanged: 0/0
  6077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6078 ;;      Params:         0       0       0       0       0       0
  6079 ;;      Locals:         0       0       0       0       0       0
  6080 ;;      Temps:          0       0       0       0       0       0
  6081 ;;      Totals:         0       0       0       0       0       0
  6082 ;;Total ram usage:        0 bytes
  6083 ;; Hardware stack levels used: 1
  6084 ;; Hardware stack levels required when called: 6
  6085 ;; This function calls:
  6086 ;;		_EPWM1_LoadDutyValue
  6087 ;; This function is called by:
  6088 ;;		_main
  6089 ;; This function uses a non-reentrant model
  6090 ;;
  6091                           
  6092     0527                     _analisa_Rx:	
  6093                           ;psect for function _analisa_Rx
  6094                           
  6095                           
  6096                           ;main.c: 132:     switch(bufferRx[0]){
  6097                           
  6098                           ;incstack = 0
  6099                           ; Regs used in _analisa_Rx: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6100     0527  2DD9               	goto	l3050
  6101     0528                     l3004:
  6102                           
  6103                           ;main.c: 134:             if(countRx==7){
  6104     0528  3007               	movlw	7
  6105     0529  0021               	movlb	1	; select bank1
  6106     052A  064A               	xorwf	_countRx^(0+128),w
  6107     052B  1D03               	btfss	3,2
  6108     052C  2D5A               	goto	l3020
  6109                           
  6110                           ;main.c: 135:                 controlchoice = bufferRx[0];
  6111     052D  0020               	movlb	0	; select bank0
  6112     052E  0853               	movf	_bufferRx,w
  6113     052F  0021               	movlb	1	; select bank1
  6114     0530  00CB               	movwf	_controlchoice^(0+128)
  6115                           
  6116                           ;main.c: 136:                 vRx.vH = bufferRx[3];
  6117     0531  0020               	movlb	0	; select bank0
  6118     0532  0856               	movf	_bufferRx+3,w
  6119     0533  0021               	movlb	1	; select bank1
  6120     0534  00BE               	movwf	(_vRx^(0+128)+1)
  6121                           
  6122                           ;main.c: 137:                 vRx.vL = bufferRx[4];
  6123     0535  0020               	movlb	0	; select bank0
  6124     0536  0857               	movf	_bufferRx+4,w
  6125     0537  0021               	movlb	1	; select bank1
  6126     0538  00BD               	movwf	_vRx^(0+128)
  6127                           
  6128                           ;main.c: 138:                 sp_position = vRx.v;
  6129     0539  083E               	movf	(_vRx+1)^(0+128),w
  6130     053A  00B8               	movwf	(_sp_position+1)^(0+128)
  6131     053B  083D               	movf	_vRx^(0+128),w
  6132     053C  00B7               	movwf	_sp_position^(0+128)
  6133                           
  6134                           ;main.c: 139:                 if(sp_position > 400 ) sp_position = 400;
  6135     053D  3001               	movlw	1
  6136     053E  0238               	subwf	(_sp_position+1)^(0+128),w
  6137     053F  3091               	movlw	145
  6138     0540  1903               	skipnz
  6139     0541  0237               	subwf	_sp_position^(0+128),w
  6140     0542  1C03               	skipc
  6141     0543  2D48               	goto	l3012
  6142     0544  3090               	movlw	144
  6143     0545  00B7               	movwf	_sp_position^(0+128)
  6144     0546  3001               	movlw	1
  6145     0547  00B8               	movwf	(_sp_position^(0+128)+1)
  6146     0548                     l3012:
  6147                           
  6148                           ;main.c: 141:                 vRx.vH = bufferRx[5];
  6149     0548  0020               	movlb	0	; select bank0
  6150     0549  0858               	movf	_bufferRx+5,w
  6151     054A  0021               	movlb	1	; select bank1
  6152     054B  00BE               	movwf	(_vRx^(0+128)+1)
  6153                           
  6154                           ;main.c: 142:                 vRx.vL = bufferRx[6];
  6155     054C  0020               	movlb	0	; select bank0
  6156     054D  0859               	movf	_bufferRx+6,w
  6157     054E  0021               	movlb	1	; select bank1
  6158     054F  00BD               	movwf	_vRx^(0+128)
  6159                           
  6160                           ;main.c: 143:                 dc = vRx.v;
  6161     0550  083E               	movf	(_vRx+1)^(0+128),w
  6162     0551  00BC               	movwf	(_dc+1)^(0+128)
  6163     0552  083D               	movf	_vRx^(0+128),w
  6164     0553  00BB               	movwf	_dc^(0+128)
  6165                           
  6166                           ;main.c: 144:                 EPWM1_LoadDutyValue(dc);
  6167     0554  083C               	movf	(_dc+1)^(0+128),w
  6168     0555  00CE               	movwf	(EPWM1_LoadDutyValue@dutyValue+1)^(0+128)
  6169     0556  083B               	movf	_dc^(0+128),w
  6170     0557  00CD               	movwf	EPWM1_LoadDutyValue@dutyValue^(0+128)
  6171     0558  318C  24C5         	fcall	_EPWM1_LoadDutyValue
  6172     055A                     l3020:
  6173                           
  6174                           ;main.c: 146:             countRx = 0;
  6175     055A  0021               	movlb	1	; select bank1
  6176     055B  01CA               	clrf	_countRx^(0+128)
  6177                           
  6178                           ;main.c: 147:             break;
  6179     055C  0008               	return
  6180     055D                     l3022:
  6181                           
  6182                           ;main.c: 149:             if(countRx==7){
  6183     055D  3007               	movlw	7
  6184     055E  0021               	movlb	1	; select bank1
  6185     055F  064A               	xorwf	_countRx^(0+128),w
  6186     0560  1D03               	btfss	3,2
  6187     0561  2D5A               	goto	l3020
  6188                           
  6189                           ;main.c: 150:                 controlchoice = bufferRx[0];
  6190     0562  0020               	movlb	0	; select bank0
  6191     0563  0853               	movf	_bufferRx,w
  6192     0564  0021               	movlb	1	; select bank1
  6193     0565  00CB               	movwf	_controlchoice^(0+128)
  6194                           
  6195                           ;main.c: 151:                 vRx.vH = bufferRx[1];
  6196     0566  0020               	movlb	0	; select bank0
  6197     0567  0854               	movf	_bufferRx+1,w
  6198     0568  0021               	movlb	1	; select bank1
  6199     0569  00BE               	movwf	(_vRx^(0+128)+1)
  6200                           
  6201                           ;main.c: 152:                 vRx.vL = bufferRx[2];
  6202     056A  0020               	movlb	0	; select bank0
  6203     056B  0855               	movf	_bufferRx+2,w
  6204     056C  0021               	movlb	1	; select bank1
  6205     056D  00BD               	movwf	_vRx^(0+128)
  6206                           
  6207                           ;main.c: 153:                 sp_height = vRx.v;
  6208     056E  083E               	movf	(_vRx+1)^(0+128),w
  6209     056F  0020               	movlb	0	; select bank0
  6210     0570  00E4               	movwf	_sp_height+1
  6211     0571  0021               	movlb	1	; select bank1
  6212     0572  083D               	movf	_vRx^(0+128),w
  6213     0573  0020               	movlb	0	; select bank0
  6214     0574  00E3               	movwf	_sp_height
  6215                           
  6216                           ;main.c: 154:                 ballset = vRx.v ;
  6217     0575  0021               	movlb	1	; select bank1
  6218     0576  083D               	movf	_vRx^(0+128),w
  6219     0577  0020               	movlb	0	; select bank0
  6220     0578  00DE               	movwf	_ballset
  6221     0579  0021               	movlb	1	; select bank1
  6222     057A  083E               	movf	(_vRx+1)^(0+128),w
  6223     057B  0020               	movlb	0	; select bank0
  6224     057C  00DF               	movwf	_ballset+1
  6225     057D  01E0               	clrf	_ballset+2
  6226                           
  6227                           ;main.c: 155:                 vRx.vH = bufferRx[3];
  6228     057E  0856               	movf	_bufferRx+3,w
  6229     057F  0021               	movlb	1	; select bank1
  6230     0580  00BE               	movwf	(_vRx^(0+128)+1)
  6231                           
  6232                           ;main.c: 156:                 vRx.vL = bufferRx[4];
  6233     0581  0020               	movlb	0	; select bank0
  6234     0582  0857               	movf	_bufferRx+4,w
  6235     0583  0021               	movlb	1	; select bank1
  6236     0584  00BD               	movwf	_vRx^(0+128)
  6237                           
  6238                           ;main.c: 157:                 sp_position = vRx.v;
  6239     0585  083E               	movf	(_vRx+1)^(0+128),w
  6240     0586  00B8               	movwf	(_sp_position+1)^(0+128)
  6241     0587  083D               	movf	_vRx^(0+128),w
  6242     0588  00B7               	movwf	_sp_position^(0+128)
  6243                           
  6244                           ;main.c: 158:                 outputsum = 0;
  6245     0589  3000               	movlw	0
  6246     058A  2DC0               	goto	L8
  6247     058B                     l3028:	
  6248                           ;main.c: 160:                 error =0;
  6249                           
  6250                           ;main.c: 159:                 errorp=0;
  6251                           
  6252                           
  6253                           ;main.c: 165:             if(countRx==7){
  6254     058B  3007               	movlw	7
  6255     058C  0021               	movlb	1	; select bank1
  6256     058D  064A               	xorwf	_countRx^(0+128),w
  6257     058E  1D03               	btfss	3,2
  6258     058F  2D5A               	goto	l3020
  6259                           
  6260                           ;main.c: 166:                 controlchoice = bufferRx[0];
  6261     0590  0020               	movlb	0	; select bank0
  6262     0591  0853               	movf	_bufferRx,w
  6263     0592  0021               	movlb	1	; select bank1
  6264     0593  00CB               	movwf	_controlchoice^(0+128)
  6265                           
  6266                           ;main.c: 167:                 vRx.vH = bufferRx[1];
  6267     0594  0020               	movlb	0	; select bank0
  6268     0595  0854               	movf	_bufferRx+1,w
  6269     0596  0021               	movlb	1	; select bank1
  6270     0597  00BE               	movwf	(_vRx^(0+128)+1)
  6271                           
  6272                           ;main.c: 168:                 vRx.vL = bufferRx[2];
  6273     0598  0020               	movlb	0	; select bank0
  6274     0599  0855               	movf	_bufferRx+2,w
  6275     059A  0021               	movlb	1	; select bank1
  6276     059B  00BD               	movwf	_vRx^(0+128)
  6277                           
  6278                           ;main.c: 169:                 sp_height = vRx.v;
  6279     059C  083E               	movf	(_vRx+1)^(0+128),w
  6280     059D  0020               	movlb	0	; select bank0
  6281     059E  00E4               	movwf	_sp_height+1
  6282     059F  0021               	movlb	1	; select bank1
  6283     05A0  083D               	movf	_vRx^(0+128),w
  6284     05A1  0020               	movlb	0	; select bank0
  6285     05A2  00E3               	movwf	_sp_height
  6286                           
  6287                           ;main.c: 170:                 ballset = vRx.v;
  6288     05A3  0021               	movlb	1	; select bank1
  6289     05A4  083D               	movf	_vRx^(0+128),w
  6290     05A5  0020               	movlb	0	; select bank0
  6291     05A6  00DE               	movwf	_ballset
  6292     05A7  0021               	movlb	1	; select bank1
  6293     05A8  083E               	movf	(_vRx+1)^(0+128),w
  6294     05A9  0020               	movlb	0	; select bank0
  6295     05AA  00DF               	movwf	_ballset+1
  6296     05AB  01E0               	clrf	_ballset+2
  6297                           
  6298                           ;main.c: 171:                 vRx.vH = bufferRx[5];
  6299     05AC  0858               	movf	_bufferRx+5,w
  6300     05AD  0021               	movlb	1	; select bank1
  6301     05AE  00BE               	movwf	(_vRx^(0+128)+1)
  6302                           
  6303                           ;main.c: 172:                 vRx.vL = bufferRx[6];
  6304     05AF  0020               	movlb	0	; select bank0
  6305     05B0  0859               	movf	_bufferRx+6,w
  6306     05B1  0021               	movlb	1	; select bank1
  6307     05B2  00BD               	movwf	_vRx^(0+128)
  6308                           
  6309                           ;main.c: 173:                 dc = vRx.v;
  6310     05B3  083E               	movf	(_vRx+1)^(0+128),w
  6311     05B4  00BC               	movwf	(_dc+1)^(0+128)
  6312     05B5  083D               	movf	_vRx^(0+128),w
  6313     05B6  00BB               	movwf	_dc^(0+128)
  6314                           
  6315                           ;main.c: 174:                 EPWM1_LoadDutyValue(dc);
  6316     05B7  083C               	movf	(_dc+1)^(0+128),w
  6317     05B8  00CE               	movwf	(EPWM1_LoadDutyValue@dutyValue+1)^(0+128)
  6318     05B9  083B               	movf	_dc^(0+128),w
  6319     05BA  00CD               	movwf	EPWM1_LoadDutyValue@dutyValue^(0+128)
  6320     05BB  318C  24C5  3185   	fcall	_EPWM1_LoadDutyValue
  6321                           
  6322                           ;main.c: 175:                 outputsum = 0;
  6323     05BE  3000               	movlw	0
  6324     05BF  0021               	movlb	1	; select bank1
  6325     05C0                     L8:
  6326     05C0  00A7               	movwf	_outputsum^(0+128)
  6327     05C1  3000               	movlw	0
  6328     05C2  00A8               	movwf	(_outputsum+1)^(0+128)
  6329     05C3  3000               	movlw	0
  6330     05C4  00A9               	movwf	(_outputsum+2)^(0+128)
  6331                           
  6332                           ;main.c: 176:                 errorp=0;
  6333     05C5  3000               	movlw	0
  6334     05C6  00AD               	movwf	_errorp^(0+128)
  6335     05C7  3000               	movlw	0
  6336     05C8  00AE               	movwf	(_errorp+1)^(0+128)
  6337     05C9  3000               	movlw	0
  6338     05CA  00AF               	movwf	(_errorp+2)^(0+128)
  6339                           
  6340                           ;main.c: 177:                 error =0;
  6341     05CB  3000               	movlw	0
  6342     05CC  00B0               	movwf	_error^(0+128)
  6343     05CD  3000               	movlw	0
  6344     05CE  00B1               	movwf	(_error+1)^(0+128)
  6345     05CF  3000               	movlw	0
  6346     05D0  00B2               	movwf	(_error+2)^(0+128)
  6347     05D1  2D5A               	goto	l3020
  6348     05D2                     l3042:
  6349                           
  6350                           ;main.c: 182:             if(countRx==7){
  6351     05D2  3007               	movlw	7
  6352     05D3  0021               	movlb	1	; select bank1
  6353     05D4  064A               	xorwf	_countRx^(0+128),w
  6354     05D5  1D03               	btfss	3,2
  6355     05D6  2D5A               	goto	l3020
  6356     05D7  0001               	reset	;# 
  6357     05D8  2D5A               	goto	l3020
  6358     05D9                     l3050:
  6359     05D9  0020               	movlb	0	; select bank0
  6360     05DA  0853               	movf	_bufferRx,w
  6361                           
  6362                           ; Switch size 1, requested type "simple"
  6363                           ; Number of cases is 4, Range of values is 0 to 3
  6364                           ; switch strategies available:
  6365                           ; Name         Instructions Cycles
  6366                           ; simple_byte           13     7 (average)
  6367                           ; direct_byte           14     6 (fixed)
  6368                           ; jumptable            260     6 (fixed)
  6369                           ;	Chosen strategy is simple_byte
  6370     05DB  3A00               	xorlw	0	; case 0
  6371     05DC  1903               	skipnz
  6372     05DD  2D28               	goto	l3004
  6373     05DE  3A01               	xorlw	1	; case 1
  6374     05DF  1903               	skipnz
  6375     05E0  2D5D               	goto	l3022
  6376     05E1  3A03               	xorlw	3	; case 2
  6377     05E2  1903               	skipnz
  6378     05E3  2D8B               	goto	l3028
  6379     05E4  3A01               	xorlw	1	; case 3
  6380     05E5  1903               	skipnz
  6381     05E6  2DD2               	goto	l3042
  6382     05E7  2D5A               	goto	l3020
  6383     05E8  0008               	return
  6384     05E9                     __end_of_analisa_Rx:
  6385                           
  6386                           	psect	text17
  6387     0CC5                     __ptext17:	
  6388 ;; *************** function _EPWM1_LoadDutyValue *****************
  6389 ;; Defined at:
  6390 ;;		line 90 in file "mcc_generated_files/epwm1.c"
  6391 ;; Parameters:    Size  Location     Type
  6392 ;;  dutyValue       2    0[BANK1 ] unsigned short 
  6393 ;; Auto vars:     Size  Location     Type
  6394 ;;		None
  6395 ;; Return value:  Size  Location     Type
  6396 ;;                  1    wreg      void 
  6397 ;; Registers used:
  6398 ;;		wreg, status,2, status,0
  6399 ;; Tracked objects:
  6400 ;;		On entry : 1F/1
  6401 ;;		On exit  : 1F/5
  6402 ;;		Unchanged: 0/0
  6403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6404 ;;      Params:         0       0       2       0       0       0
  6405 ;;      Locals:         0       0       0       0       0       0
  6406 ;;      Temps:          0       0       2       0       0       0
  6407 ;;      Totals:         0       0       4       0       0       0
  6408 ;;Total ram usage:        4 bytes
  6409 ;; Hardware stack levels used: 1
  6410 ;; Hardware stack levels required when called: 5
  6411 ;; This function calls:
  6412 ;;		Nothing
  6413 ;; This function is called by:
  6414 ;;		_pwmcontrol
  6415 ;;		_analisa_Rx
  6416 ;; This function uses a non-reentrant model
  6417 ;;
  6418                           
  6419     0CC5                     _EPWM1_LoadDutyValue:	
  6420                           ;psect for function _EPWM1_LoadDutyValue
  6421                           
  6422                           
  6423                           ;mcc_generated_files/epwm1.c: 90: void EPWM1_LoadDutyValue(uint16_t dutyValue);mcc_gener
      +                          ated_files/epwm1.c: 91: {;mcc_generated_files/epwm1.c: 93:     CCPR1L = ((dutyValue & 0x
      +                          03FC)>>2);
  6424                           
  6425                           ;incstack = 0
  6426                           ; Regs used in _EPWM1_LoadDutyValue: [wreg+status,2+status,0]
  6427     0CC5  084E               	movf	(EPWM1_LoadDutyValue@dutyValue+1)^(0+128),w
  6428     0CC6  00D0               	movwf	(??_EPWM1_LoadDutyValue^(0+128)+1)
  6429     0CC7  084D               	movf	EPWM1_LoadDutyValue@dutyValue^(0+128),w
  6430     0CC8  00CF               	movwf	??_EPWM1_LoadDutyValue^(0+128)
  6431     0CC9  36D0               	lsrf	(??_EPWM1_LoadDutyValue^(0+128)+1),f
  6432     0CCA  0CCF               	rrf	??_EPWM1_LoadDutyValue^(0+128),f
  6433     0CCB  36D0               	lsrf	(??_EPWM1_LoadDutyValue^(0+128)+1),f
  6434     0CCC  0CCF               	rrf	??_EPWM1_LoadDutyValue^(0+128),f
  6435     0CCD  084F               	movf	??_EPWM1_LoadDutyValue^(0+128),w
  6436     0CCE  0025               	movlb	5	; select bank5
  6437     0CCF  0091               	movwf	17	;volatile
  6438                           
  6439                           ;mcc_generated_files/epwm1.c: 96:     CCP1CON = ((uint8_t)(CCP1CON & 0xCF) | ((dutyValue
      +                           & 0x0003)<<4));
  6440     0CD0  0021               	movlb	1	; select bank1
  6441     0CD1  084D               	movf	EPWM1_LoadDutyValue@dutyValue^(0+128),w
  6442     0CD2  3903               	andlw	3
  6443     0CD3  00CF               	movwf	??_EPWM1_LoadDutyValue^(0+128)
  6444     0CD4  3004               	movlw	4
  6445     0CD5                     u1605:
  6446     0CD5  35CF               	lslf	??_EPWM1_LoadDutyValue^(0+128),f
  6447     0CD6  0B89               	decfsz	9,f
  6448     0CD7  2CD5               	goto	u1605
  6449     0CD8  0025               	movlb	5	; select bank5
  6450     0CD9  0813               	movf	19,w	;volatile
  6451     0CDA  39CF               	andlw	207
  6452     0CDB  0021               	movlb	1	; select bank1
  6453     0CDC  044F               	iorwf	??_EPWM1_LoadDutyValue^(0+128),w
  6454     0CDD  0025               	movlb	5	; select bank5
  6455     0CDE  0093               	movwf	19	;volatile
  6456     0CDF  0008               	return
  6457     0CE0                     __end_of_EPWM1_LoadDutyValue:
  6458                           
  6459                           	psect	text18
  6460     0B79                     __ptext18:	
  6461 ;; *************** function _TMR6_WriteTimer *****************
  6462 ;; Defined at:
  6463 ;;		line 100 in file "mcc_generated_files/tmr6.c"
  6464 ;; Parameters:    Size  Location     Type
  6465 ;;  timerVal        1    wreg     unsigned char 
  6466 ;; Auto vars:     Size  Location     Type
  6467 ;;  timerVal        1    0[BANK1 ] unsigned char 
  6468 ;; Return value:  Size  Location     Type
  6469 ;;                  1    wreg      void 
  6470 ;; Registers used:
  6471 ;;		wreg
  6472 ;; Tracked objects:
  6473 ;;		On entry : 16/1
  6474 ;;		On exit  : 1F/8
  6475 ;;		Unchanged: 0/0
  6476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6477 ;;      Params:         0       0       0       0       0       0
  6478 ;;      Locals:         0       0       1       0       0       0
  6479 ;;      Temps:          0       0       0       0       0       0
  6480 ;;      Totals:         0       0       1       0       0       0
  6481 ;;Total ram usage:        1 bytes
  6482 ;; Hardware stack levels used: 1
  6483 ;; Hardware stack levels required when called: 5
  6484 ;; This function calls:
  6485 ;;		Nothing
  6486 ;; This function is called by:
  6487 ;;		_main
  6488 ;; This function uses a non-reentrant model
  6489 ;;
  6490                           
  6491     0B79                     _TMR6_WriteTimer:	
  6492                           ;psect for function _TMR6_WriteTimer
  6493                           
  6494                           
  6495                           ;incstack = 0
  6496                           ; Regs used in _TMR6_WriteTimer: [wreg]
  6497                           ;TMR6_WriteTimer@timerVal stored from wreg
  6498     0B79  0021               	movlb	1	; select bank1
  6499     0B7A  00CD               	movwf	TMR6_WriteTimer@timerVal^(0+128)
  6500                           
  6501                           ;mcc_generated_files/tmr6.c: 100: void TMR6_WriteTimer(uint8_t timerVal);mcc_generated_f
      +                          iles/tmr6.c: 101: {;mcc_generated_files/tmr6.c: 103:     TMR6 = timerVal;
  6502     0B7B  084D               	movf	TMR6_WriteTimer@timerVal^(0+128),w
  6503     0B7C  0028               	movlb	8	; select bank8
  6504     0B7D  009C               	movwf	28	;volatile
  6505     0B7E  0008               	return
  6506     0B7F                     __end_of_TMR6_WriteTimer:
  6507                           
  6508                           	psect	text19
  6509     0B73                     __ptext19:	
  6510 ;; *************** function _TMR6_LoadPeriodRegister *****************
  6511 ;; Defined at:
  6512 ;;		line 106 in file "mcc_generated_files/tmr6.c"
  6513 ;; Parameters:    Size  Location     Type
  6514 ;;  periodVal       1    wreg     unsigned char 
  6515 ;; Auto vars:     Size  Location     Type
  6516 ;;  periodVal       1    0[BANK1 ] unsigned char 
  6517 ;; Return value:  Size  Location     Type
  6518 ;;                  1    wreg      void 
  6519 ;; Registers used:
  6520 ;;		wreg
  6521 ;; Tracked objects:
  6522 ;;		On entry : 1E/0
  6523 ;;		On exit  : 1F/8
  6524 ;;		Unchanged: 0/0
  6525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6526 ;;      Params:         0       0       0       0       0       0
  6527 ;;      Locals:         0       0       1       0       0       0
  6528 ;;      Temps:          0       0       0       0       0       0
  6529 ;;      Totals:         0       0       1       0       0       0
  6530 ;;Total ram usage:        1 bytes
  6531 ;; Hardware stack levels used: 1
  6532 ;; Hardware stack levels required when called: 5
  6533 ;; This function calls:
  6534 ;;		Nothing
  6535 ;; This function is called by:
  6536 ;;		_main
  6537 ;; This function uses a non-reentrant model
  6538 ;;
  6539                           
  6540     0B73                     _TMR6_LoadPeriodRegister:	
  6541                           ;psect for function _TMR6_LoadPeriodRegister
  6542                           
  6543                           
  6544                           ;incstack = 0
  6545                           ; Regs used in _TMR6_LoadPeriodRegister: [wreg]
  6546                           ;TMR6_LoadPeriodRegister@periodVal stored from wreg
  6547     0B73  0021               	movlb	1	; select bank1
  6548     0B74  00CD               	movwf	TMR6_LoadPeriodRegister@periodVal^(0+128)
  6549                           
  6550                           ;mcc_generated_files/tmr6.c: 106: void TMR6_LoadPeriodRegister(uint8_t periodVal);mcc_ge
      +                          nerated_files/tmr6.c: 107: {;mcc_generated_files/tmr6.c: 108:    PR6 = periodVal;
  6551     0B75  084D               	movf	TMR6_LoadPeriodRegister@periodVal^(0+128),w
  6552     0B76  0028               	movlb	8	; select bank8
  6553     0B77  009D               	movwf	29	;volatile
  6554     0B78  0008               	return
  6555     0B79                     __end_of_TMR6_LoadPeriodRegister:
  6556                           
  6557                           	psect	text20
  6558     0B47                     __ptext20:	
  6559 ;; *************** function _TMR4_StopTimer *****************
  6560 ;; Defined at:
  6561 ;;		line 85 in file "mcc_generated_files/tmr4.c"
  6562 ;; Parameters:    Size  Location     Type
  6563 ;;		None
  6564 ;; Auto vars:     Size  Location     Type
  6565 ;;		None
  6566 ;; Return value:  Size  Location     Type
  6567 ;;                  1    wreg      void 
  6568 ;; Registers used:
  6569 ;;		None
  6570 ;; Tracked objects:
  6571 ;;		On entry : 1F/0
  6572 ;;		On exit  : 1F/8
  6573 ;;		Unchanged: 0/0
  6574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6575 ;;      Params:         0       0       0       0       0       0
  6576 ;;      Locals:         0       0       0       0       0       0
  6577 ;;      Temps:          0       0       0       0       0       0
  6578 ;;      Totals:         0       0       0       0       0       0
  6579 ;;Total ram usage:        0 bytes
  6580 ;; Hardware stack levels used: 1
  6581 ;; Hardware stack levels required when called: 5
  6582 ;; This function calls:
  6583 ;;		Nothing
  6584 ;; This function is called by:
  6585 ;;		_main
  6586 ;; This function uses a non-reentrant model
  6587 ;;
  6588                           
  6589     0B47                     _TMR4_StopTimer:	
  6590                           ;psect for function _TMR4_StopTimer
  6591                           
  6592                           
  6593                           ;mcc_generated_files/tmr4.c: 88:     T4CONbits.TMR4ON = 0;
  6594                           
  6595                           ;incstack = 0
  6596                           ; Regs used in _TMR4_StopTimer: []
  6597     0B47  0028               	movlb	8	; select bank8
  6598     0B48  1117               	bcf	23,2	;volatile
  6599     0B49  0008               	return
  6600     0B4A                     __end_of_TMR4_StopTimer:
  6601                           
  6602                           	psect	text21
  6603     0B6D                     __ptext21:	
  6604 ;; *************** function _TMR0_ReadTimer *****************
  6605 ;; Defined at:
  6606 ;;		line 80 in file "mcc_generated_files/tmr0.c"
  6607 ;; Parameters:    Size  Location     Type
  6608 ;;		None
  6609 ;; Auto vars:     Size  Location     Type
  6610 ;;  readVal         1    0[BANK1 ] unsigned char 
  6611 ;; Return value:  Size  Location     Type
  6612 ;;                  1    wreg      unsigned char 
  6613 ;; Registers used:
  6614 ;;		wreg
  6615 ;; Tracked objects:
  6616 ;;		On entry : 1D/0
  6617 ;;		On exit  : 1F/1
  6618 ;;		Unchanged: 0/0
  6619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6620 ;;      Params:         0       0       0       0       0       0
  6621 ;;      Locals:         0       0       1       0       0       0
  6622 ;;      Temps:          0       0       0       0       0       0
  6623 ;;      Totals:         0       0       1       0       0       0
  6624 ;;Total ram usage:        1 bytes
  6625 ;; Hardware stack levels used: 1
  6626 ;; Hardware stack levels required when called: 5
  6627 ;; This function calls:
  6628 ;;		Nothing
  6629 ;; This function is called by:
  6630 ;;		_main
  6631 ;; This function uses a non-reentrant model
  6632 ;;
  6633                           
  6634     0B6D                     _TMR0_ReadTimer:	
  6635                           ;psect for function _TMR0_ReadTimer
  6636                           
  6637                           
  6638                           ;mcc_generated_files/tmr0.c: 82:     uint8_t readVal;;mcc_generated_files/tmr0.c: 84:   
      +                            readVal = TMR0;
  6639                           
  6640                           ;incstack = 0
  6641                           ; Regs used in _TMR0_ReadTimer: [wreg]
  6642     0B6D  0020               	movlb	0	; select bank0
  6643     0B6E  0815               	movf	21,w	;volatile
  6644     0B6F  0021               	movlb	1	; select bank1
  6645     0B70  00CD               	movwf	TMR0_ReadTimer@readVal^(0+128)
  6646                           
  6647                           ;mcc_generated_files/tmr0.c: 86:     return readVal;
  6648     0B71  084D               	movf	TMR0_ReadTimer@readVal^(0+128),w
  6649     0B72  0008               	return
  6650     0B73                     __end_of_TMR0_ReadTimer:
  6651                           
  6652                           	psect	text22
  6653     07D5                     __ptext22:	
  6654 ;; *************** function _SYSTEM_Initialize *****************
  6655 ;; Defined at:
  6656 ;;		line 50 in file "mcc_generated_files/mcc.c"
  6657 ;; Parameters:    Size  Location     Type
  6658 ;;		None
  6659 ;; Auto vars:     Size  Location     Type
  6660 ;;		None
  6661 ;; Return value:  Size  Location     Type
  6662 ;;                  1    wreg      void 
  6663 ;; Registers used:
  6664 ;;		wreg, status,2, status,0, pclath, cstack
  6665 ;; Tracked objects:
  6666 ;;		On entry : B1F/0
  6667 ;;		On exit  : 1F/1
  6668 ;;		Unchanged: 0/0
  6669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6670 ;;      Params:         0       0       0       0       0       0
  6671 ;;      Locals:         0       0       0       0       0       0
  6672 ;;      Temps:          0       0       0       0       0       0
  6673 ;;      Totals:         0       0       0       0       0       0
  6674 ;;Total ram usage:        0 bytes
  6675 ;; Hardware stack levels used: 1
  6676 ;; Hardware stack levels required when called: 7
  6677 ;; This function calls:
  6678 ;;		_ADC_Initialize
  6679 ;;		_CMP1_Initialize
  6680 ;;		_DAC_Initialize
  6681 ;;		_EPWM1_Initialize
  6682 ;;		_EUSART_Initialize
  6683 ;;		_FVR_Initialize
  6684 ;;		_OSCILLATOR_Initialize
  6685 ;;		_PIN_MANAGER_Initialize
  6686 ;;		_TMR0_Initialize
  6687 ;;		_TMR1_Initialize
  6688 ;;		_TMR2_Initialize
  6689 ;;		_TMR4_Initialize
  6690 ;;		_TMR6_Initialize
  6691 ;;		_WDT_Initialize
  6692 ;; This function is called by:
  6693 ;;		_main
  6694 ;; This function uses a non-reentrant model
  6695 ;;
  6696                           
  6697     07D5                     _SYSTEM_Initialize:	
  6698                           ;psect for function _SYSTEM_Initialize
  6699                           
  6700                           
  6701                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  6702                           
  6703                           ;incstack = 0
  6704                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6705     07D5  318C  2449  3187   	fcall	_PIN_MANAGER_Initialize
  6706                           
  6707                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  6708     07D8  318B  238B  3187   	fcall	_OSCILLATOR_Initialize
  6709                           
  6710                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  6711     07DB  318B  2351  3187   	fcall	_WDT_Initialize
  6712                           
  6713                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
  6714     07DE  318B  234D  3187   	fcall	_FVR_Initialize
  6715                           
  6716                           ;mcc_generated_files/mcc.c: 57:     DAC_Initialize();
  6717     07E1  318B  2362  3187   	fcall	_DAC_Initialize
  6718                           
  6719                           ;mcc_generated_files/mcc.c: 58:     TMR4_Initialize();
  6720     07E4  318B  23DD  3187   	fcall	_TMR4_Initialize
  6721                           
  6722                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
  6723     07E7  318B  23C2  3187   	fcall	_TMR2_Initialize
  6724                           
  6725                           ;mcc_generated_files/mcc.c: 60:     TMR0_Initialize();
  6726     07EA  318B  23D3  3187   	fcall	_TMR0_Initialize
  6727                           
  6728                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
  6729     07ED  318B  23E7  3187   	fcall	_TMR6_Initialize
  6730                           
  6731                           ;mcc_generated_files/mcc.c: 62:     CMP1_Initialize();
  6732     07F0  318B  2367  3187   	fcall	_CMP1_Initialize
  6733                           
  6734                           ;mcc_generated_files/mcc.c: 63:     ADC_Initialize();
  6735     07F3  318B  239A  3187   	fcall	_ADC_Initialize
  6736                           
  6737                           ;mcc_generated_files/mcc.c: 64:     EPWM1_Initialize();
  6738     07F6  318C  2408  3187   	fcall	_EPWM1_Initialize
  6739                           
  6740                           ;mcc_generated_files/mcc.c: 65:     TMR1_Initialize();
  6741     07F9  318C  2491  3187   	fcall	_TMR1_Initialize
  6742                           
  6743                           ;mcc_generated_files/mcc.c: 66:     EUSART_Initialize();
  6744     07FC  318D  251F         	fcall	_EUSART_Initialize
  6745     07FE  0008               	return
  6746     07FF                     __end_of_SYSTEM_Initialize:
  6747                           
  6748                           	psect	text23
  6749     0B51                     __ptext23:	
  6750 ;; *************** function _WDT_Initialize *****************
  6751 ;; Defined at:
  6752 ;;		line 79 in file "mcc_generated_files/mcc.c"
  6753 ;; Parameters:    Size  Location     Type
  6754 ;;		None
  6755 ;; Auto vars:     Size  Location     Type
  6756 ;;		None
  6757 ;; Return value:  Size  Location     Type
  6758 ;;                  1    wreg      void 
  6759 ;; Registers used:
  6760 ;;		wreg
  6761 ;; Tracked objects:
  6762 ;;		On entry : B1F/2
  6763 ;;		On exit  : B1F/1
  6764 ;;		Unchanged: B00/0
  6765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6766 ;;      Params:         0       0       0       0       0       0
  6767 ;;      Locals:         0       0       0       0       0       0
  6768 ;;      Temps:          0       0       0       0       0       0
  6769 ;;      Totals:         0       0       0       0       0       0
  6770 ;;Total ram usage:        0 bytes
  6771 ;; Hardware stack levels used: 1
  6772 ;; Hardware stack levels required when called: 5
  6773 ;; This function calls:
  6774 ;;		Nothing
  6775 ;; This function is called by:
  6776 ;;		_SYSTEM_Initialize
  6777 ;; This function uses a non-reentrant model
  6778 ;;
  6779                           
  6780     0B51                     _WDT_Initialize:	
  6781                           ;psect for function _WDT_Initialize
  6782                           
  6783                           
  6784                           ;mcc_generated_files/mcc.c: 82:     WDTCON = 0x16;
  6785                           
  6786                           ;incstack = 0
  6787                           ; Regs used in _WDT_Initialize: [wreg]
  6788     0B51  3016               	movlw	22
  6789     0B52  0021               	movlb	1	; select bank1
  6790     0B53  0097               	movwf	23	;volatile
  6791     0B54  0008               	return
  6792     0B55                     __end_of_WDT_Initialize:
  6793                           
  6794                           	psect	text24
  6795     0BE7                     __ptext24:	
  6796 ;; *************** function _TMR6_Initialize *****************
  6797 ;; Defined at:
  6798 ;;		line 62 in file "mcc_generated_files/tmr6.c"
  6799 ;; Parameters:    Size  Location     Type
  6800 ;;		None
  6801 ;; Auto vars:     Size  Location     Type
  6802 ;;		None
  6803 ;; Return value:  Size  Location     Type
  6804 ;;                  1    wreg      void 
  6805 ;; Registers used:
  6806 ;;		wreg, status,2
  6807 ;; Tracked objects:
  6808 ;;		On entry : B1F/0
  6809 ;;		On exit  : B1F/8
  6810 ;;		Unchanged: B00/0
  6811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6812 ;;      Params:         0       0       0       0       0       0
  6813 ;;      Locals:         0       0       0       0       0       0
  6814 ;;      Temps:          0       0       0       0       0       0
  6815 ;;      Totals:         0       0       0       0       0       0
  6816 ;;Total ram usage:        0 bytes
  6817 ;; Hardware stack levels used: 1
  6818 ;; Hardware stack levels required when called: 5
  6819 ;; This function calls:
  6820 ;;		Nothing
  6821 ;; This function is called by:
  6822 ;;		_SYSTEM_Initialize
  6823 ;; This function uses a non-reentrant model
  6824 ;;
  6825                           
  6826     0BE7                     _TMR6_Initialize:	
  6827                           ;psect for function _TMR6_Initialize
  6828                           
  6829                           
  6830                           ;mcc_generated_files/tmr6.c: 67:     PR6 = 0x4A;
  6831                           
  6832                           ;incstack = 0
  6833                           ; Regs used in _TMR6_Initialize: [wreg+status,2]
  6834     0BE7  304A               	movlw	74
  6835     0BE8  0028               	movlb	8	; select bank8
  6836     0BE9  009D               	movwf	29	;volatile
  6837                           
  6838                           ;mcc_generated_files/tmr6.c: 70:     TMR6 = 0x00;
  6839     0BEA  019C               	clrf	28	;volatile
  6840                           
  6841                           ;mcc_generated_files/tmr6.c: 73:     PIR3bits.TMR6IF = 0;
  6842     0BEB  0020               	movlb	0	; select bank0
  6843     0BEC  1193               	bcf	19,3	;volatile
  6844                           
  6845                           ;mcc_generated_files/tmr6.c: 76:     T6CON = 0x4F;
  6846     0BED  304F               	movlw	79
  6847     0BEE  0028               	movlb	8	; select bank8
  6848     0BEF  009E               	movwf	30	;volatile
  6849     0BF0  0008               	return
  6850     0BF1                     __end_of_TMR6_Initialize:
  6851                           
  6852                           	psect	text25
  6853     0BDD                     __ptext25:	
  6854 ;; *************** function _TMR4_Initialize *****************
  6855 ;; Defined at:
  6856 ;;		line 62 in file "mcc_generated_files/tmr4.c"
  6857 ;; Parameters:    Size  Location     Type
  6858 ;;		None
  6859 ;; Auto vars:     Size  Location     Type
  6860 ;;		None
  6861 ;; Return value:  Size  Location     Type
  6862 ;;                  1    wreg      void 
  6863 ;; Registers used:
  6864 ;;		wreg, status,2
  6865 ;; Tracked objects:
  6866 ;;		On entry : B1F/2
  6867 ;;		On exit  : B1F/8
  6868 ;;		Unchanged: B00/0
  6869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6870 ;;      Params:         0       0       0       0       0       0
  6871 ;;      Locals:         0       0       0       0       0       0
  6872 ;;      Temps:          0       0       0       0       0       0
  6873 ;;      Totals:         0       0       0       0       0       0
  6874 ;;Total ram usage:        0 bytes
  6875 ;; Hardware stack levels used: 1
  6876 ;; Hardware stack levels required when called: 5
  6877 ;; This function calls:
  6878 ;;		Nothing
  6879 ;; This function is called by:
  6880 ;;		_SYSTEM_Initialize
  6881 ;; This function uses a non-reentrant model
  6882 ;;
  6883                           
  6884     0BDD                     _TMR4_Initialize:	
  6885                           ;psect for function _TMR4_Initialize
  6886                           
  6887                           
  6888                           ;mcc_generated_files/tmr4.c: 67:     PR4 = 0xF9;
  6889                           
  6890                           ;incstack = 0
  6891                           ; Regs used in _TMR4_Initialize: [wreg+status,2]
  6892     0BDD  30F9               	movlw	249
  6893     0BDE  0028               	movlb	8	; select bank8
  6894     0BDF  0096               	movwf	22	;volatile
  6895                           
  6896                           ;mcc_generated_files/tmr4.c: 70:     TMR4 = 0x00;
  6897     0BE0  0195               	clrf	21	;volatile
  6898                           
  6899                           ;mcc_generated_files/tmr4.c: 73:     PIR3bits.TMR4IF = 0;
  6900     0BE1  0020               	movlb	0	; select bank0
  6901     0BE2  1093               	bcf	19,1	;volatile
  6902                           
  6903                           ;mcc_generated_files/tmr4.c: 76:     T4CON = 0x4F;
  6904     0BE3  304F               	movlw	79
  6905     0BE4  0028               	movlb	8	; select bank8
  6906     0BE5  0097               	movwf	23	;volatile
  6907     0BE6  0008               	return
  6908     0BE7                     __end_of_TMR4_Initialize:
  6909                           
  6910                           	psect	text26
  6911     0BC2                     __ptext26:	
  6912 ;; *************** function _TMR2_Initialize *****************
  6913 ;; Defined at:
  6914 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  6915 ;; Parameters:    Size  Location     Type
  6916 ;;		None
  6917 ;; Auto vars:     Size  Location     Type
  6918 ;;		None
  6919 ;; Return value:  Size  Location     Type
  6920 ;;                  1    wreg      void 
  6921 ;; Registers used:
  6922 ;;		wreg, status,2
  6923 ;; Tracked objects:
  6924 ;;		On entry : B1F/8
  6925 ;;		On exit  : B1F/0
  6926 ;;		Unchanged: B00/0
  6927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6928 ;;      Params:         0       0       0       0       0       0
  6929 ;;      Locals:         0       0       0       0       0       0
  6930 ;;      Temps:          0       0       0       0       0       0
  6931 ;;      Totals:         0       0       0       0       0       0
  6932 ;;Total ram usage:        0 bytes
  6933 ;; Hardware stack levels used: 1
  6934 ;; Hardware stack levels required when called: 5
  6935 ;; This function calls:
  6936 ;;		Nothing
  6937 ;; This function is called by:
  6938 ;;		_SYSTEM_Initialize
  6939 ;; This function uses a non-reentrant model
  6940 ;;
  6941                           
  6942     0BC2                     _TMR2_Initialize:	
  6943                           ;psect for function _TMR2_Initialize
  6944                           
  6945                           
  6946                           ;mcc_generated_files/tmr2.c: 67:     PR2 = 0xFF;
  6947                           
  6948                           ;incstack = 0
  6949                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  6950     0BC2  30FF               	movlw	255
  6951     0BC3  0020               	movlb	0	; select bank0
  6952     0BC4  009B               	movwf	27	;volatile
  6953                           
  6954                           ;mcc_generated_files/tmr2.c: 70:     TMR2 = 0x00;
  6955     0BC5  019A               	clrf	26	;volatile
  6956                           
  6957                           ;mcc_generated_files/tmr2.c: 73:     PIR1bits.TMR2IF = 0;
  6958     0BC6  1091               	bcf	17,1	;volatile
  6959                           
  6960                           ;mcc_generated_files/tmr2.c: 76:     T2CON = 0x04;
  6961     0BC7  3004               	movlw	4
  6962     0BC8  009C               	movwf	28	;volatile
  6963     0BC9  0008               	return
  6964     0BCA                     __end_of_TMR2_Initialize:
  6965                           
  6966                           	psect	text27
  6967     0C91                     __ptext27:	
  6968 ;; *************** function _TMR1_Initialize *****************
  6969 ;; Defined at:
  6970 ;;		line 65 in file "mcc_generated_files/tmr1.c"
  6971 ;; Parameters:    Size  Location     Type
  6972 ;;		None
  6973 ;; Auto vars:     Size  Location     Type
  6974 ;;		None
  6975 ;; Return value:  Size  Location     Type
  6976 ;;                  1    wreg      void 
  6977 ;; Registers used:
  6978 ;;		wreg, status,2, status,0, pclath, cstack
  6979 ;; Tracked objects:
  6980 ;;		On entry : 1F/5
  6981 ;;		On exit  : 1F/0
  6982 ;;		Unchanged: 0/0
  6983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6984 ;;      Params:         0       0       0       0       0       0
  6985 ;;      Locals:         0       0       0       0       0       0
  6986 ;;      Temps:          0       0       0       0       0       0
  6987 ;;      Totals:         0       0       0       0       0       0
  6988 ;;Total ram usage:        0 bytes
  6989 ;; Hardware stack levels used: 1
  6990 ;; Hardware stack levels required when called: 6
  6991 ;; This function calls:
  6992 ;;		_TMR1_SetGateInterruptHandler
  6993 ;; This function is called by:
  6994 ;;		_SYSTEM_Initialize
  6995 ;; This function uses a non-reentrant model
  6996 ;;
  6997                           
  6998     0C91                     _TMR1_Initialize:	
  6999                           ;psect for function _TMR1_Initialize
  7000                           
  7001                           
  7002                           ;mcc_generated_files/tmr1.c: 70:     T1GCON = 0xC0;
  7003                           
  7004                           ;incstack = 0
  7005                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7006     0C91  30C0               	movlw	192
  7007     0C92  0020               	movlb	0	; select bank0
  7008     0C93  0099               	movwf	25	;volatile
  7009                           
  7010                           ;mcc_generated_files/tmr1.c: 73:     TMR1H = 0x00;
  7011     0C94  0197               	clrf	23	;volatile
  7012                           
  7013                           ;mcc_generated_files/tmr1.c: 76:     TMR1L = 0x00;
  7014     0C95  0196               	clrf	22	;volatile
  7015                           
  7016                           ;mcc_generated_files/tmr1.c: 79:     PIR1bits.TMR1IF = 0;
  7017     0C96  1011               	bcf	17,0	;volatile
  7018                           
  7019                           ;mcc_generated_files/tmr1.c: 82:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  7020     0C97  0817               	movf	23,w	;volatile
  7021     0C98  0021               	movlb	1	; select bank1
  7022     0C99  00C4               	movwf	(_timer1ReloadVal+1)^(0+128)	;volatile
  7023     0C9A  0020               	movlb	0	; select bank0
  7024     0C9B  0816               	movf	22,w	;volatile
  7025     0C9C  0021               	movlb	1	; select bank1
  7026     0C9D  00C3               	movwf	_timer1ReloadVal^(0+128)	;volatile
  7027                           
  7028                           ;mcc_generated_files/tmr1.c: 85:     PIR1bits.TMR1GIF = 0;
  7029     0C9E  0020               	movlb	0	; select bank0
  7030     0C9F  1391               	bcf	17,7	;volatile
  7031                           
  7032                           ;mcc_generated_files/tmr1.c: 88:     PIE1bits.TMR1GIE = 1;
  7033     0CA0  0021               	movlb	1	; select bank1
  7034     0CA1  1791               	bsf	17,7	;volatile
  7035                           
  7036                           ;mcc_generated_files/tmr1.c: 91:     TMR1_SetGateInterruptHandler(TMR1_DefaultGateInterr
      +                          uptHandler);
  7037     0CA2  30FF               	movlw	low _TMR1_DefaultGateInterruptHandler
  7038     0CA3  00CD               	movwf	TMR1_SetGateInterruptHandler@InterruptHandler^(0+128)
  7039     0CA4  3007               	movlw	high _TMR1_DefaultGateInterruptHandler
  7040     0CA5  00CE               	movwf	(TMR1_SetGateInterruptHandler@InterruptHandler^(0+128)+1)
  7041     0CA6  318B  23BA         	fcall	_TMR1_SetGateInterruptHandler
  7042                           
  7043                           ;mcc_generated_files/tmr1.c: 94:     T1CON = 0x01;
  7044     0CA8  3001               	movlw	1
  7045     0CA9  0098               	movwf	24	;volatile
  7046     0CAA  0008               	return
  7047     0CAB                     __end_of_TMR1_Initialize:
  7048                           
  7049                           	psect	text28
  7050     0BBA                     __ptext28:	
  7051 ;; *************** function _TMR1_SetGateInterruptHandler *****************
  7052 ;; Defined at:
  7053 ;;		line 177 in file "mcc_generated_files/tmr1.c"
  7054 ;; Parameters:    Size  Location     Type
  7055 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  7056 ;;		 -> mede_height(1), TMR1_DefaultGateInterruptHandler(1), 
  7057 ;; Auto vars:     Size  Location     Type
  7058 ;;		None
  7059 ;; Return value:  Size  Location     Type
  7060 ;;                  1    wreg      void 
  7061 ;; Registers used:
  7062 ;;		wreg
  7063 ;; Tracked objects:
  7064 ;;		On entry : 1F/1
  7065 ;;		On exit  : 1F/0
  7066 ;;		Unchanged: 0/0
  7067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7068 ;;      Params:         0       0       2       0       0       0
  7069 ;;      Locals:         0       0       0       0       0       0
  7070 ;;      Temps:          0       0       0       0       0       0
  7071 ;;      Totals:         0       0       2       0       0       0
  7072 ;;Total ram usage:        2 bytes
  7073 ;; Hardware stack levels used: 1
  7074 ;; Hardware stack levels required when called: 5
  7075 ;; This function calls:
  7076 ;;		Nothing
  7077 ;; This function is called by:
  7078 ;;		_TMR1_Initialize
  7079 ;;		_main
  7080 ;; This function uses a non-reentrant model
  7081 ;;
  7082                           
  7083     0BBA                     _TMR1_SetGateInterruptHandler:	
  7084                           ;psect for function _TMR1_SetGateInterruptHandler
  7085                           
  7086                           
  7087                           ;mcc_generated_files/tmr1.c: 178:     TMR1_GateInterruptHandler = InterruptHandler;
  7088                           
  7089                           ;incstack = 0
  7090                           ; Regs used in _TMR1_SetGateInterruptHandler: [wreg]
  7091     0BBA  084E               	movf	(TMR1_SetGateInterruptHandler@InterruptHandler+1)^(0+128),w
  7092     0BBB  0020               	movlb	0	; select bank0
  7093     0BBC  00EF               	movwf	_TMR1_GateInterruptHandler+1
  7094     0BBD  0021               	movlb	1	; select bank1
  7095     0BBE  084D               	movf	TMR1_SetGateInterruptHandler@InterruptHandler^(0+128),w
  7096     0BBF  0020               	movlb	0	; select bank0
  7097     0BC0  00EE               	movwf	_TMR1_GateInterruptHandler
  7098     0BC1  0008               	return
  7099     0BC2                     __end_of_TMR1_SetGateInterruptHandler:
  7100                           
  7101                           	psect	text29
  7102     0BD3                     __ptext29:	
  7103 ;; *************** function _TMR0_Initialize *****************
  7104 ;; Defined at:
  7105 ;;		line 63 in file "mcc_generated_files/tmr0.c"
  7106 ;; Parameters:    Size  Location     Type
  7107 ;;		None
  7108 ;; Auto vars:     Size  Location     Type
  7109 ;;		None
  7110 ;; Return value:  Size  Location     Type
  7111 ;;                  1    wreg      void 
  7112 ;; Registers used:
  7113 ;;		wreg, status,2
  7114 ;; Tracked objects:
  7115 ;;		On entry : B1F/0
  7116 ;;		On exit  : B1F/0
  7117 ;;		Unchanged: B00/0
  7118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7119 ;;      Params:         0       0       0       0       0       0
  7120 ;;      Locals:         0       0       0       0       0       0
  7121 ;;      Temps:          0       0       0       0       0       0
  7122 ;;      Totals:         0       0       0       0       0       0
  7123 ;;Total ram usage:        0 bytes
  7124 ;; Hardware stack levels used: 1
  7125 ;; Hardware stack levels required when called: 5
  7126 ;; This function calls:
  7127 ;;		Nothing
  7128 ;; This function is called by:
  7129 ;;		_SYSTEM_Initialize
  7130 ;; This function uses a non-reentrant model
  7131 ;;
  7132                           
  7133     0BD3                     _TMR0_Initialize:	
  7134                           ;psect for function _TMR0_Initialize
  7135                           
  7136                           
  7137                           ;mcc_generated_files/tmr0.c: 68:     OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | (0xD7 
      +                          & 0x3F));
  7138                           
  7139                           ;incstack = 0
  7140                           ; Regs used in _TMR0_Initialize: [wreg+status,2]
  7141     0BD3  0021               	movlb	1	; select bank1
  7142     0BD4  0815               	movf	21,w	;volatile
  7143     0BD5  39C0               	andlw	192
  7144     0BD6  3817               	iorlw	23
  7145     0BD7  0095               	movwf	21	;volatile
  7146                           
  7147                           ;mcc_generated_files/tmr0.c: 71:     TMR0 = 0x00;
  7148     0BD8  0020               	movlb	0	; select bank0
  7149     0BD9  0195               	clrf	21	;volatile
  7150                           
  7151                           ;mcc_generated_files/tmr0.c: 74:     timer0ReloadVal= 0;
  7152     0BDA  01E9               	clrf	_timer0ReloadVal	;volatile
  7153                           
  7154                           ;mcc_generated_files/tmr0.c: 77:     INTCONbits.TMR0IF = 0;
  7155     0BDB  110B               	bcf	11,2	;volatile
  7156     0BDC  0008               	return
  7157     0BDD                     __end_of_TMR0_Initialize:
  7158                           
  7159                           	psect	text30
  7160     0C49                     __ptext30:	
  7161 ;; *************** function _PIN_MANAGER_Initialize *****************
  7162 ;; Defined at:
  7163 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  7164 ;; Parameters:    Size  Location     Type
  7165 ;;		None
  7166 ;; Auto vars:     Size  Location     Type
  7167 ;;		None
  7168 ;; Return value:  Size  Location     Type
  7169 ;;                  1    wreg      void 
  7170 ;; Registers used:
  7171 ;;		wreg, status,2
  7172 ;; Tracked objects:
  7173 ;;		On entry : B1F/0
  7174 ;;		On exit  : B1F/2
  7175 ;;		Unchanged: B00/0
  7176 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7177 ;;      Params:         0       0       0       0       0       0
  7178 ;;      Locals:         0       0       0       0       0       0
  7179 ;;      Temps:          0       0       0       0       0       0
  7180 ;;      Totals:         0       0       0       0       0       0
  7181 ;;Total ram usage:        0 bytes
  7182 ;; Hardware stack levels used: 1
  7183 ;; Hardware stack levels required when called: 5
  7184 ;; This function calls:
  7185 ;;		Nothing
  7186 ;; This function is called by:
  7187 ;;		_SYSTEM_Initialize
  7188 ;; This function uses a non-reentrant model
  7189 ;;
  7190                           
  7191     0C49                     _PIN_MANAGER_Initialize:	
  7192                           ;psect for function _PIN_MANAGER_Initialize
  7193                           
  7194                           
  7195                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  7196                           
  7197                           ;incstack = 0
  7198                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  7199     0C49  0022               	movlb	2	; select bank2
  7200     0C4A  018C               	clrf	12	;volatile
  7201                           
  7202                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  7203     0C4B  018D               	clrf	13	;volatile
  7204                           
  7205                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0x21;
  7206     0C4C  3021               	movlw	33
  7207     0C4D  0021               	movlb	1	; select bank1
  7208     0C4E  008C               	movwf	12	;volatile
  7209                           
  7210                           ;mcc_generated_files/pin_manager.c: 67:     TRISB = 0xF7;
  7211     0C4F  30F7               	movlw	247
  7212     0C50  008D               	movwf	13	;volatile
  7213                           
  7214                           ;mcc_generated_files/pin_manager.c: 72:     ANSELB = 0xF0;
  7215     0C51  30F0               	movlw	240
  7216     0C52  0023               	movlb	3	; select bank3
  7217     0C53  008D               	movwf	13	;volatile
  7218                           
  7219                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x01;
  7220     0C54  3001               	movlw	1
  7221     0C55  008C               	movwf	12	;volatile
  7222                           
  7223                           ;mcc_generated_files/pin_manager.c: 78:     WPUB = 0x00;
  7224     0C56  0024               	movlb	4	; select bank4
  7225     0C57  018D               	clrf	13	;volatile
  7226                           
  7227                           ;mcc_generated_files/pin_manager.c: 79:     WPUA = 0x00;
  7228     0C58  018C               	clrf	12	;volatile
  7229                           
  7230                           ;mcc_generated_files/pin_manager.c: 80:     OPTION_REGbits.nWPUEN = 1;
  7231     0C59  0021               	movlb	1	; select bank1
  7232     0C5A  1795               	bsf	21,7	;volatile
  7233                           
  7234                           ;mcc_generated_files/pin_manager.c: 86:     APFCON0 = 0x00;
  7235     0C5B  0022               	movlb	2	; select bank2
  7236     0C5C  019D               	clrf	29	;volatile
  7237                           
  7238                           ;mcc_generated_files/pin_manager.c: 87:     APFCON1 = 0x00;
  7239     0C5D  019E               	clrf	30	;volatile
  7240                           
  7241                           ;mcc_generated_files/pin_manager.c: 94:     INTCONbits.IOCIE = 1;
  7242     0C5E  158B               	bsf	11,3	;volatile
  7243     0C5F  0008               	return
  7244     0C60                     __end_of_PIN_MANAGER_Initialize:
  7245                           
  7246                           	psect	text31
  7247     0B8B                     __ptext31:	
  7248 ;; *************** function _OSCILLATOR_Initialize *****************
  7249 ;; Defined at:
  7250 ;;		line 69 in file "mcc_generated_files/mcc.c"
  7251 ;; Parameters:    Size  Location     Type
  7252 ;;		None
  7253 ;; Auto vars:     Size  Location     Type
  7254 ;;		None
  7255 ;; Return value:  Size  Location     Type
  7256 ;;                  1    wreg      void 
  7257 ;; Registers used:
  7258 ;;		wreg, status,2
  7259 ;; Tracked objects:
  7260 ;;		On entry : B1F/2
  7261 ;;		On exit  : B1F/2
  7262 ;;		Unchanged: B00/0
  7263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7264 ;;      Params:         0       0       0       0       0       0
  7265 ;;      Locals:         0       0       0       0       0       0
  7266 ;;      Temps:          0       0       0       0       0       0
  7267 ;;      Totals:         0       0       0       0       0       0
  7268 ;;Total ram usage:        0 bytes
  7269 ;; Hardware stack levels used: 1
  7270 ;; Hardware stack levels required when called: 5
  7271 ;; This function calls:
  7272 ;;		Nothing
  7273 ;; This function is called by:
  7274 ;;		_SYSTEM_Initialize
  7275 ;; This function uses a non-reentrant model
  7276 ;;
  7277                           
  7278     0B8B                     _OSCILLATOR_Initialize:	
  7279                           ;psect for function _OSCILLATOR_Initialize
  7280                           
  7281                           
  7282                           ;mcc_generated_files/mcc.c: 72:     OSCCON = 0x78;
  7283                           
  7284                           ;incstack = 0
  7285                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  7286     0B8B  3078               	movlw	120
  7287     0B8C  0021               	movlb	1	; select bank1
  7288     0B8D  0099               	movwf	25	;volatile
  7289                           
  7290                           ;mcc_generated_files/mcc.c: 74:     OSCTUNE = 0x00;
  7291     0B8E  0198               	clrf	24	;volatile
  7292                           
  7293                           ;mcc_generated_files/mcc.c: 76:     BORCON = 0x00;
  7294     0B8F  0022               	movlb	2	; select bank2
  7295     0B90  0196               	clrf	22	;volatile
  7296     0B91  0008               	return
  7297     0B92                     __end_of_OSCILLATOR_Initialize:
  7298                           
  7299                           	psect	text32
  7300     0B4D                     __ptext32:	
  7301 ;; *************** function _FVR_Initialize *****************
  7302 ;; Defined at:
  7303 ;;		line 58 in file "mcc_generated_files/fvr.c"
  7304 ;; Parameters:    Size  Location     Type
  7305 ;;		None
  7306 ;; Auto vars:     Size  Location     Type
  7307 ;;		None
  7308 ;; Return value:  Size  Location     Type
  7309 ;;                  1    wreg      void 
  7310 ;; Registers used:
  7311 ;;		wreg
  7312 ;; Tracked objects:
  7313 ;;		On entry : B1F/1
  7314 ;;		On exit  : B1F/2
  7315 ;;		Unchanged: B00/0
  7316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7317 ;;      Params:         0       0       0       0       0       0
  7318 ;;      Locals:         0       0       0       0       0       0
  7319 ;;      Temps:          0       0       0       0       0       0
  7320 ;;      Totals:         0       0       0       0       0       0
  7321 ;;Total ram usage:        0 bytes
  7322 ;; Hardware stack levels used: 1
  7323 ;; Hardware stack levels required when called: 5
  7324 ;; This function calls:
  7325 ;;		Nothing
  7326 ;; This function is called by:
  7327 ;;		_SYSTEM_Initialize
  7328 ;; This function uses a non-reentrant model
  7329 ;;
  7330                           
  7331     0B4D                     _FVR_Initialize:	
  7332                           ;psect for function _FVR_Initialize
  7333                           
  7334                           
  7335                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0x85;
  7336                           
  7337                           ;incstack = 0
  7338                           ; Regs used in _FVR_Initialize: [wreg]
  7339     0B4D  3085               	movlw	133
  7340     0B4E  0022               	movlb	2	; select bank2
  7341     0B4F  0097               	movwf	23	;volatile
  7342     0B50  0008               	return
  7343     0B51                     __end_of_FVR_Initialize:
  7344                           
  7345                           	psect	text33
  7346     0D1F                     __ptext33:	
  7347 ;; *************** function _EUSART_Initialize *****************
  7348 ;; Defined at:
  7349 ;;		line 66 in file "mcc_generated_files/eusart.c"
  7350 ;; Parameters:    Size  Location     Type
  7351 ;;		None
  7352 ;; Auto vars:     Size  Location     Type
  7353 ;;		None
  7354 ;; Return value:  Size  Location     Type
  7355 ;;                  1    wreg      void 
  7356 ;; Registers used:
  7357 ;;		wreg, status,2, status,0, pclath, cstack
  7358 ;; Tracked objects:
  7359 ;;		On entry : 1F/0
  7360 ;;		On exit  : 1F/1
  7361 ;;		Unchanged: 0/0
  7362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7363 ;;      Params:         0       0       0       0       0       0
  7364 ;;      Locals:         0       0       0       0       0       0
  7365 ;;      Temps:          0       0       0       0       0       0
  7366 ;;      Totals:         0       0       0       0       0       0
  7367 ;;Total ram usage:        0 bytes
  7368 ;; Hardware stack levels used: 1
  7369 ;; Hardware stack levels required when called: 6
  7370 ;; This function calls:
  7371 ;;		_EUSART_SetErrorHandler
  7372 ;;		_EUSART_SetFramingErrorHandler
  7373 ;;		_EUSART_SetOverrunErrorHandler
  7374 ;; This function is called by:
  7375 ;;		_SYSTEM_Initialize
  7376 ;; This function uses a non-reentrant model
  7377 ;;
  7378                           
  7379     0D1F                     _EUSART_Initialize:	
  7380                           ;psect for function _EUSART_Initialize
  7381                           
  7382                           
  7383                           ;mcc_generated_files/eusart.c: 71:     BAUDCON = 0x08;
  7384                           
  7385                           ;incstack = 0
  7386                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7387     0D1F  3008               	movlw	8
  7388     0D20  0023               	movlb	3	; select bank3
  7389     0D21  009F               	movwf	31	;volatile
  7390                           
  7391                           ;mcc_generated_files/eusart.c: 74:     RCSTA = 0x90;
  7392     0D22  3090               	movlw	144
  7393     0D23  009D               	movwf	29	;volatile
  7394                           
  7395                           ;mcc_generated_files/eusart.c: 77:     TXSTA = 0x24;
  7396     0D24  3024               	movlw	36
  7397     0D25  009E               	movwf	30	;volatile
  7398                           
  7399                           ;mcc_generated_files/eusart.c: 80:     SPBRGL = 0x22;
  7400     0D26  3022               	movlw	34
  7401     0D27  009B               	movwf	27	;volatile
  7402                           
  7403                           ;mcc_generated_files/eusart.c: 83:     SPBRGH = 0x00;
  7404     0D28  019C               	clrf	28	;volatile
  7405                           
  7406                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  7407     0D29  3000               	movlw	0
  7408     0D2A  0021               	movlb	1	; select bank1
  7409     0D2B  00CD               	movwf	EUSART_SetFramingErrorHandler@interruptHandler^(0+128)
  7410     0D2C  3000               	movlw	0
  7411     0D2D  00CE               	movwf	(EUSART_SetFramingErrorHandler@interruptHandler^(0+128)+1)
  7412     0D2E  318B  23AA  318D   	fcall	_EUSART_SetFramingErrorHandler
  7413                           
  7414                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  7415     0D31  3000               	movlw	0
  7416     0D32  0021               	movlb	1	; select bank1
  7417     0D33  00CD               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler^(0+128)
  7418     0D34  3000               	movlw	0
  7419     0D35  00CE               	movwf	(EUSART_SetOverrunErrorHandler@interruptHandler^(0+128)+1)
  7420     0D36  318B  23B2  318D   	fcall	_EUSART_SetOverrunErrorHandler
  7421                           
  7422                           ;mcc_generated_files/eusart.c: 88:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  7423     0D39  3000               	movlw	0
  7424     0D3A  0021               	movlb	1	; select bank1
  7425     0D3B  00CD               	movwf	EUSART_SetErrorHandler@interruptHandler^(0+128)
  7426     0D3C  3000               	movlw	0
  7427     0D3D  00CE               	movwf	(EUSART_SetErrorHandler@interruptHandler^(0+128)+1)
  7428     0D3E  318B  23A2         	fcall	_EUSART_SetErrorHandler
  7429                           
  7430                           ;mcc_generated_files/eusart.c: 90:     eusartRxLastError.status = 0;
  7431     0D40  0021               	movlb	1	; select bank1
  7432     0D41  01CC               	clrf	_eusartRxLastError^(0+128)	;volatile
  7433     0D42  0008               	return
  7434     0D43                     __end_of_EUSART_Initialize:
  7435                           
  7436                           	psect	text34
  7437     0BB2                     __ptext34:	
  7438 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  7439 ;; Defined at:
  7440 ;;		line 161 in file "mcc_generated_files/eusart.c"
  7441 ;; Parameters:    Size  Location     Type
  7442 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  7443 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  7444 ;; Auto vars:     Size  Location     Type
  7445 ;;		None
  7446 ;; Return value:  Size  Location     Type
  7447 ;;                  1    wreg      void 
  7448 ;; Registers used:
  7449 ;;		wreg
  7450 ;; Tracked objects:
  7451 ;;		On entry : 1F/1
  7452 ;;		On exit  : 1F/2
  7453 ;;		Unchanged: 0/0
  7454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7455 ;;      Params:         0       0       2       0       0       0
  7456 ;;      Locals:         0       0       0       0       0       0
  7457 ;;      Temps:          0       0       0       0       0       0
  7458 ;;      Totals:         0       0       2       0       0       0
  7459 ;;Total ram usage:        2 bytes
  7460 ;; Hardware stack levels used: 1
  7461 ;; Hardware stack levels required when called: 5
  7462 ;; This function calls:
  7463 ;;		Nothing
  7464 ;; This function is called by:
  7465 ;;		_EUSART_Initialize
  7466 ;; This function uses a non-reentrant model
  7467 ;;
  7468                           
  7469     0BB2                     _EUSART_SetOverrunErrorHandler:	
  7470                           ;psect for function _EUSART_SetOverrunErrorHandler
  7471                           
  7472                           
  7473                           ;mcc_generated_files/eusart.c: 162:     EUSART_OverrunErrorHandler = interruptHandler;
  7474                           
  7475                           ;incstack = 0
  7476                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  7477     0BB2  084E               	movf	(EUSART_SetOverrunErrorHandler@interruptHandler+1)^(0+128),w
  7478     0BB3  0022               	movlb	2	; select bank2
  7479     0BB4  00B5               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+256)
  7480     0BB5  0021               	movlb	1	; select bank1
  7481     0BB6  084D               	movf	EUSART_SetOverrunErrorHandler@interruptHandler^(0+128),w
  7482     0BB7  0022               	movlb	2	; select bank2
  7483     0BB8  00B4               	movwf	_EUSART_OverrunErrorHandler^(0+256)
  7484     0BB9  0008               	return
  7485     0BBA                     __end_of_EUSART_SetOverrunErrorHandler:
  7486                           
  7487                           	psect	text35
  7488     0BAA                     __ptext35:	
  7489 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  7490 ;; Defined at:
  7491 ;;		line 157 in file "mcc_generated_files/eusart.c"
  7492 ;; Parameters:    Size  Location     Type
  7493 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  7494 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  7495 ;; Auto vars:     Size  Location     Type
  7496 ;;		None
  7497 ;; Return value:  Size  Location     Type
  7498 ;;                  1    wreg      void 
  7499 ;; Registers used:
  7500 ;;		wreg
  7501 ;; Tracked objects:
  7502 ;;		On entry : 1F/1
  7503 ;;		On exit  : 1F/2
  7504 ;;		Unchanged: 0/0
  7505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7506 ;;      Params:         0       0       2       0       0       0
  7507 ;;      Locals:         0       0       0       0       0       0
  7508 ;;      Temps:          0       0       0       0       0       0
  7509 ;;      Totals:         0       0       2       0       0       0
  7510 ;;Total ram usage:        2 bytes
  7511 ;; Hardware stack levels used: 1
  7512 ;; Hardware stack levels required when called: 5
  7513 ;; This function calls:
  7514 ;;		Nothing
  7515 ;; This function is called by:
  7516 ;;		_EUSART_Initialize
  7517 ;; This function uses a non-reentrant model
  7518 ;;
  7519                           
  7520     0BAA                     _EUSART_SetFramingErrorHandler:	
  7521                           ;psect for function _EUSART_SetFramingErrorHandler
  7522                           
  7523                           
  7524                           ;mcc_generated_files/eusart.c: 158:     EUSART_FramingErrorHandler = interruptHandler;
  7525                           
  7526                           ;incstack = 0
  7527                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  7528     0BAA  084E               	movf	(EUSART_SetFramingErrorHandler@interruptHandler+1)^(0+128),w
  7529     0BAB  0022               	movlb	2	; select bank2
  7530     0BAC  00B7               	movwf	(_EUSART_FramingErrorHandler+1)^(0+256)
  7531     0BAD  0021               	movlb	1	; select bank1
  7532     0BAE  084D               	movf	EUSART_SetFramingErrorHandler@interruptHandler^(0+128),w
  7533     0BAF  0022               	movlb	2	; select bank2
  7534     0BB0  00B6               	movwf	_EUSART_FramingErrorHandler^(0+256)
  7535     0BB1  0008               	return
  7536     0BB2                     __end_of_EUSART_SetFramingErrorHandler:
  7537                           
  7538                           	psect	text36
  7539     0BA2                     __ptext36:	
  7540 ;; *************** function _EUSART_SetErrorHandler *****************
  7541 ;; Defined at:
  7542 ;;		line 165 in file "mcc_generated_files/eusart.c"
  7543 ;; Parameters:    Size  Location     Type
  7544 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  7545 ;;		 -> EUSART_DefaultErrorHandler(1), 
  7546 ;; Auto vars:     Size  Location     Type
  7547 ;;		None
  7548 ;; Return value:  Size  Location     Type
  7549 ;;                  1    wreg      void 
  7550 ;; Registers used:
  7551 ;;		wreg
  7552 ;; Tracked objects:
  7553 ;;		On entry : 1F/1
  7554 ;;		On exit  : 1F/2
  7555 ;;		Unchanged: 0/0
  7556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7557 ;;      Params:         0       0       2       0       0       0
  7558 ;;      Locals:         0       0       0       0       0       0
  7559 ;;      Temps:          0       0       0       0       0       0
  7560 ;;      Totals:         0       0       2       0       0       0
  7561 ;;Total ram usage:        2 bytes
  7562 ;; Hardware stack levels used: 1
  7563 ;; Hardware stack levels required when called: 5
  7564 ;; This function calls:
  7565 ;;		Nothing
  7566 ;; This function is called by:
  7567 ;;		_EUSART_Initialize
  7568 ;; This function uses a non-reentrant model
  7569 ;;
  7570                           
  7571     0BA2                     _EUSART_SetErrorHandler:	
  7572                           ;psect for function _EUSART_SetErrorHandler
  7573                           
  7574                           
  7575                           ;mcc_generated_files/eusart.c: 166:     EUSART_ErrorHandler = interruptHandler;
  7576                           
  7577                           ;incstack = 0
  7578                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  7579     0BA2  084E               	movf	(EUSART_SetErrorHandler@interruptHandler+1)^(0+128),w
  7580     0BA3  0022               	movlb	2	; select bank2
  7581     0BA4  00B3               	movwf	(_EUSART_ErrorHandler+1)^(0+256)
  7582     0BA5  0021               	movlb	1	; select bank1
  7583     0BA6  084D               	movf	EUSART_SetErrorHandler@interruptHandler^(0+128),w
  7584     0BA7  0022               	movlb	2	; select bank2
  7585     0BA8  00B2               	movwf	_EUSART_ErrorHandler^(0+256)
  7586     0BA9  0008               	return
  7587     0BAA                     __end_of_EUSART_SetErrorHandler:
  7588                           
  7589                           	psect	text37
  7590     0C08                     __ptext37:	
  7591 ;; *************** function _EPWM1_Initialize *****************
  7592 ;; Defined at:
  7593 ;;		line 64 in file "mcc_generated_files/epwm1.c"
  7594 ;; Parameters:    Size  Location     Type
  7595 ;;		None
  7596 ;; Auto vars:     Size  Location     Type
  7597 ;;		None
  7598 ;; Return value:  Size  Location     Type
  7599 ;;                  1    wreg      void 
  7600 ;; Registers used:
  7601 ;;		wreg, status,2, status,0
  7602 ;; Tracked objects:
  7603 ;;		On entry : 1F/1
  7604 ;;		On exit  : 1F/5
  7605 ;;		Unchanged: 0/0
  7606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7607 ;;      Params:         0       0       0       0       0       0
  7608 ;;      Locals:         0       0       0       0       0       0
  7609 ;;      Temps:          0       0       0       0       0       0
  7610 ;;      Totals:         0       0       0       0       0       0
  7611 ;;Total ram usage:        0 bytes
  7612 ;; Hardware stack levels used: 1
  7613 ;; Hardware stack levels required when called: 5
  7614 ;; This function calls:
  7615 ;;		Nothing
  7616 ;; This function is called by:
  7617 ;;		_SYSTEM_Initialize
  7618 ;; This function uses a non-reentrant model
  7619 ;;
  7620                           
  7621     0C08                     _EPWM1_Initialize:	
  7622                           ;psect for function _EPWM1_Initialize
  7623                           
  7624                           
  7625                           ;mcc_generated_files/epwm1.c: 69:  CCP1CON = 0x3C;
  7626                           
  7627                           ;incstack = 0
  7628                           ; Regs used in _EPWM1_Initialize: [wreg+status,2+status,0]
  7629     0C08  303C               	movlw	60
  7630     0C09  0025               	movlb	5	; select bank5
  7631     0C0A  0093               	movwf	19	;volatile
  7632                           
  7633                           ;mcc_generated_files/epwm1.c: 72:  ECCP1AS = 0x00;
  7634     0C0B  0195               	clrf	21	;volatile
  7635                           
  7636                           ;mcc_generated_files/epwm1.c: 75:  PWM1CON = 0x80;
  7637     0C0C  3080               	movlw	128
  7638     0C0D  0094               	movwf	20	;volatile
  7639                           
  7640                           ;mcc_generated_files/epwm1.c: 78:  PSTR1CON = 0x01;
  7641     0C0E  3001               	movlw	1
  7642     0C0F  0096               	movwf	22	;volatile
  7643                           
  7644                           ;mcc_generated_files/epwm1.c: 81:  CCPR1H = 0x00;
  7645     0C10  0192               	clrf	18	;volatile
  7646                           
  7647                           ;mcc_generated_files/epwm1.c: 84:  CCPR1L = 0x7F;
  7648     0C11  307F               	movlw	127
  7649     0C12  0091               	movwf	17	;volatile
  7650                           
  7651                           ;mcc_generated_files/epwm1.c: 87:  CCPTMRS0bits.C1TSEL = 0x0;
  7652     0C13  30FC               	movlw	-4
  7653     0C14  059E               	andwf	30,f	;volatile
  7654     0C15  0008               	return
  7655     0C16                     __end_of_EPWM1_Initialize:
  7656                           
  7657                           	psect	text38
  7658     0B62                     __ptext38:	
  7659 ;; *************** function _DAC_Initialize *****************
  7660 ;; Defined at:
  7661 ;;		line 58 in file "mcc_generated_files/dac.c"
  7662 ;; Parameters:    Size  Location     Type
  7663 ;;		None
  7664 ;; Auto vars:     Size  Location     Type
  7665 ;;		None
  7666 ;; Return value:  Size  Location     Type
  7667 ;;                  1    wreg      void 
  7668 ;; Registers used:
  7669 ;;		wreg
  7670 ;; Tracked objects:
  7671 ;;		On entry : B1F/2
  7672 ;;		On exit  : B1F/2
  7673 ;;		Unchanged: B00/0
  7674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7675 ;;      Params:         0       0       0       0       0       0
  7676 ;;      Locals:         0       0       0       0       0       0
  7677 ;;      Temps:          0       0       0       0       0       0
  7678 ;;      Totals:         0       0       0       0       0       0
  7679 ;;Total ram usage:        0 bytes
  7680 ;; Hardware stack levels used: 1
  7681 ;; Hardware stack levels required when called: 5
  7682 ;; This function calls:
  7683 ;;		Nothing
  7684 ;; This function is called by:
  7685 ;;		_SYSTEM_Initialize
  7686 ;; This function uses a non-reentrant model
  7687 ;;
  7688                           
  7689     0B62                     _DAC_Initialize:	
  7690                           ;psect for function _DAC_Initialize
  7691                           
  7692                           
  7693                           ;mcc_generated_files/dac.c: 61:     DACCON0 = 0x80;
  7694                           
  7695                           ;incstack = 0
  7696                           ; Regs used in _DAC_Initialize: [wreg]
  7697     0B62  3080               	movlw	128
  7698     0B63  0098               	movwf	24	;volatile
  7699                           
  7700                           ;mcc_generated_files/dac.c: 63:     DACCON1 = 0x06;
  7701     0B64  3006               	movlw	6
  7702     0B65  0099               	movwf	25	;volatile
  7703     0B66  0008               	return
  7704     0B67                     __end_of_DAC_Initialize:
  7705                           
  7706                           	psect	text39
  7707     0B67                     __ptext39:	
  7708 ;; *************** function _CMP1_Initialize *****************
  7709 ;; Defined at:
  7710 ;;		line 58 in file "mcc_generated_files/cmp1.c"
  7711 ;; Parameters:    Size  Location     Type
  7712 ;;		None
  7713 ;; Auto vars:     Size  Location     Type
  7714 ;;		None
  7715 ;; Return value:  Size  Location     Type
  7716 ;;                  1    wreg      void 
  7717 ;; Registers used:
  7718 ;;		wreg
  7719 ;; Tracked objects:
  7720 ;;		On entry : B1F/8
  7721 ;;		On exit  : B1F/2
  7722 ;;		Unchanged: B00/0
  7723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7724 ;;      Params:         0       0       0       0       0       0
  7725 ;;      Locals:         0       0       0       0       0       0
  7726 ;;      Temps:          0       0       0       0       0       0
  7727 ;;      Totals:         0       0       0       0       0       0
  7728 ;;Total ram usage:        0 bytes
  7729 ;; Hardware stack levels used: 1
  7730 ;; Hardware stack levels required when called: 5
  7731 ;; This function calls:
  7732 ;;		Nothing
  7733 ;; This function is called by:
  7734 ;;		_SYSTEM_Initialize
  7735 ;; This function uses a non-reentrant model
  7736 ;;
  7737                           
  7738     0B67                     _CMP1_Initialize:	
  7739                           ;psect for function _CMP1_Initialize
  7740                           
  7741                           
  7742                           ;mcc_generated_files/cmp1.c: 62:     CM1CON0 = 0x84;
  7743                           
  7744                           ;incstack = 0
  7745                           ; Regs used in _CMP1_Initialize: [wreg]
  7746     0B67  3084               	movlw	132
  7747     0B68  0022               	movlb	2	; select bank2
  7748     0B69  0091               	movwf	17	;volatile
  7749                           
  7750                           ;mcc_generated_files/cmp1.c: 65:     CM1CON1 = 0x10;
  7751     0B6A  3010               	movlw	16
  7752     0B6B  0092               	movwf	18	;volatile
  7753     0B6C  0008               	return
  7754     0B6D                     __end_of_CMP1_Initialize:
  7755                           
  7756                           	psect	text40
  7757     0B9A                     __ptext40:	
  7758 ;; *************** function _ADC_Initialize *****************
  7759 ;; Defined at:
  7760 ;;		line 67 in file "mcc_generated_files/adc.c"
  7761 ;; Parameters:    Size  Location     Type
  7762 ;;		None
  7763 ;; Auto vars:     Size  Location     Type
  7764 ;;		None
  7765 ;; Return value:  Size  Location     Type
  7766 ;;                  1    wreg      void 
  7767 ;; Registers used:
  7768 ;;		wreg, status,2
  7769 ;; Tracked objects:
  7770 ;;		On entry : 1F/2
  7771 ;;		On exit  : 1F/1
  7772 ;;		Unchanged: 0/0
  7773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7774 ;;      Params:         0       0       0       0       0       0
  7775 ;;      Locals:         0       0       0       0       0       0
  7776 ;;      Temps:          0       0       0       0       0       0
  7777 ;;      Totals:         0       0       0       0       0       0
  7778 ;;Total ram usage:        0 bytes
  7779 ;; Hardware stack levels used: 1
  7780 ;; Hardware stack levels required when called: 5
  7781 ;; This function calls:
  7782 ;;		Nothing
  7783 ;; This function is called by:
  7784 ;;		_SYSTEM_Initialize
  7785 ;; This function uses a non-reentrant model
  7786 ;;
  7787                           
  7788     0B9A                     _ADC_Initialize:	
  7789                           ;psect for function _ADC_Initialize
  7790                           
  7791                           
  7792                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0xD3;
  7793                           
  7794                           ;incstack = 0
  7795                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  7796     0B9A  30D3               	movlw	211
  7797     0B9B  0021               	movlb	1	; select bank1
  7798     0B9C  009E               	movwf	30	;volatile
  7799                           
  7800                           ;mcc_generated_files/adc.c: 75:     ADRESL = 0x00;
  7801     0B9D  019B               	clrf	27	;volatile
  7802                           
  7803                           ;mcc_generated_files/adc.c: 78:     ADRESH = 0x00;
  7804     0B9E  019C               	clrf	28	;volatile
  7805                           
  7806                           ;mcc_generated_files/adc.c: 81:     ADCON0 = 0x01;
  7807     0B9F  3001               	movlw	1
  7808     0BA0  009D               	movwf	29	;volatile
  7809     0BA1  0008               	return
  7810     0BA2                     __end_of_ADC_Initialize:
  7811                           
  7812                           	psect	text41
  7813     0B5D                     __ptext41:	
  7814 ;; *************** function _EUSART_is_rx_ready *****************
  7815 ;; Defined at:
  7816 ;;		line 99 in file "mcc_generated_files/eusart.c"
  7817 ;; Parameters:    Size  Location     Type
  7818 ;;		None
  7819 ;; Auto vars:     Size  Location     Type
  7820 ;;		None
  7821 ;; Return value:  Size  Location     Type
  7822 ;;                  1    wreg      _Bool 
  7823 ;; Registers used:
  7824 ;;		wreg, status,2, status,0
  7825 ;; Tracked objects:
  7826 ;;		On entry : 17/0
  7827 ;;		On exit  : 1F/0
  7828 ;;		Unchanged: 0/0
  7829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7830 ;;      Params:         0       0       0       0       0       0
  7831 ;;      Locals:         0       0       0       0       0       0
  7832 ;;      Temps:          0       0       0       0       0       0
  7833 ;;      Totals:         0       0       0       0       0       0
  7834 ;;Total ram usage:        0 bytes
  7835 ;; Hardware stack levels used: 1
  7836 ;; Hardware stack levels required when called: 5
  7837 ;; This function calls:
  7838 ;;		Nothing
  7839 ;; This function is called by:
  7840 ;;		_main
  7841 ;; This function uses a non-reentrant model
  7842 ;;
  7843                           
  7844     0B5D                     _EUSART_is_rx_ready:	
  7845                           ;psect for function _EUSART_is_rx_ready
  7846                           
  7847                           
  7848                           ;mcc_generated_files/eusart.c: 101:     return (_Bool)(PIR1bits.RCIF);
  7849                           
  7850                           ;incstack = 0
  7851                           ; Regs used in _EUSART_is_rx_ready: [wreg+status,2+status,0]
  7852     0B5D  0020               	movlb	0	; select bank0
  7853     0B5E  0E11               	swapf	17,w	;volatile
  7854     0B5F  0C89               	rrf	9,f
  7855     0B60  3901               	andlw	1
  7856     0B61  0008               	return
  7857     0B62                     __end_of_EUSART_is_rx_ready:
  7858                           
  7859                           	psect	text42
  7860     0BFC                     __ptext42:	
  7861 ;; *************** function _EUSART_Read *****************
  7862 ;; Defined at:
  7863 ;;		line 113 in file "mcc_generated_files/eusart.c"
  7864 ;; Parameters:    Size  Location     Type
  7865 ;;		None
  7866 ;; Auto vars:     Size  Location     Type
  7867 ;;		None
  7868 ;; Return value:  Size  Location     Type
  7869 ;;                  1    wreg      unsigned char 
  7870 ;; Registers used:
  7871 ;;		wreg, status,2
  7872 ;; Tracked objects:
  7873 ;;		On entry : 1F/1
  7874 ;;		On exit  : 1F/3
  7875 ;;		Unchanged: 0/0
  7876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7877 ;;      Params:         0       0       0       0       0       0
  7878 ;;      Locals:         0       0       0       0       0       0
  7879 ;;      Temps:          0       0       0       0       0       0
  7880 ;;      Totals:         0       0       0       0       0       0
  7881 ;;Total ram usage:        0 bytes
  7882 ;; Hardware stack levels used: 1
  7883 ;; Hardware stack levels required when called: 5
  7884 ;; This function calls:
  7885 ;;		Nothing
  7886 ;; This function is called by:
  7887 ;;		_main
  7888 ;; This function uses a non-reentrant model
  7889 ;;
  7890                           
  7891     0BFC                     _EUSART_Read:	
  7892                           ;psect for function _EUSART_Read
  7893                           
  7894     0BFC                     l240:	
  7895                           ;mcc_generated_files/eusart.c: 116:     {;mcc_generated_files/eusart.c: 117:     }
  7896                           
  7897                           ;incstack = 0
  7898                           ; Regs used in _EUSART_Read: [wreg+status,2]
  7899                           
  7900                           
  7901                           ;mcc_generated_files/eusart.c: 115:     while(!PIR1bits.RCIF)
  7902     0BFC  0020               	movlb	0	; select bank0
  7903     0BFD  1E91               	btfss	17,5	;volatile
  7904     0BFE  2BFC               	goto	l240
  7905                           
  7906                           ;mcc_generated_files/eusart.c: 119:     eusartRxLastError.status = 0;
  7907     0BFF  0021               	movlb	1	; select bank1
  7908     0C00  01CC               	clrf	_eusartRxLastError^(0+128)	;volatile
  7909                           
  7910                           ;mcc_generated_files/eusart.c: 121:     if(1 == RCSTAbits.OERR)
  7911     0C01  0023               	movlb	3	; select bank3
  7912     0C02  1C9D               	btfss	29,1	;volatile
  7913     0C03  2C06               	goto	l2940
  7914                           
  7915                           ;mcc_generated_files/eusart.c: 122:     {;mcc_generated_files/eusart.c: 125:         RCS
      +                          TAbits.CREN = 0;
  7916     0C04  121D               	bcf	29,4	;volatile
  7917                           
  7918                           ;mcc_generated_files/eusart.c: 126:         RCSTAbits.CREN = 1;
  7919     0C05  161D               	bsf	29,4	;volatile
  7920     0C06                     l2940:
  7921                           
  7922                           ;mcc_generated_files/eusart.c: 129:     return RCREG;
  7923     0C06  0819               	movf	25,w	;volatile
  7924     0C07  0008               	return
  7925     0C08                     __end_of_EUSART_Read:
  7926                           
  7927                           	psect	text43
  7928     0C78                     __ptext43:	
  7929 ;; *************** function _ADC_GetConversion *****************
  7930 ;; Defined at:
  7931 ;;		line 112 in file "mcc_generated_files/adc.c"
  7932 ;; Parameters:    Size  Location     Type
  7933 ;;  channel         1    wreg     enum E2495
  7934 ;; Auto vars:     Size  Location     Type
  7935 ;;  channel         1    3[BANK1 ] enum E2495
  7936 ;; Return value:  Size  Location     Type
  7937 ;;                  2    0[BANK1 ] unsigned short 
  7938 ;; Registers used:
  7939 ;;		wreg, status,2, status,0
  7940 ;; Tracked objects:
  7941 ;;		On entry : 1F/8
  7942 ;;		On exit  : 1F/1
  7943 ;;		Unchanged: 0/0
  7944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7945 ;;      Params:         0       0       2       0       0       0
  7946 ;;      Locals:         0       0       1       0       0       0
  7947 ;;      Temps:          0       0       1       0       0       0
  7948 ;;      Totals:         0       0       4       0       0       0
  7949 ;;Total ram usage:        4 bytes
  7950 ;; Hardware stack levels used: 1
  7951 ;; Hardware stack levels required when called: 5
  7952 ;; This function calls:
  7953 ;;		Nothing
  7954 ;; This function is called by:
  7955 ;;		_main
  7956 ;; This function uses a non-reentrant model
  7957 ;;
  7958                           
  7959     0C78                     _ADC_GetConversion:	
  7960                           ;psect for function _ADC_GetConversion
  7961                           
  7962                           
  7963                           ;incstack = 0
  7964                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
  7965                           ;ADC_GetConversion@channel stored from wreg
  7966     0C78  0021               	movlb	1	; select bank1
  7967     0C79  00D0               	movwf	ADC_GetConversion@channel^(0+128)
  7968                           
  7969                           ;mcc_generated_files/adc.c: 112: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 113: {;mcc_generated_files/adc.c: 115:     ADCON0bits.CHS = ch
      +                          annel;
  7970     0C7A  0850               	movf	ADC_GetConversion@channel^(0+128),w
  7971     0C7B  00CF               	movwf	??_ADC_GetConversion^(0+128)
  7972     0C7C  0DCF               	rlf	??_ADC_GetConversion^(0+128),f
  7973     0C7D  0DCF               	rlf	??_ADC_GetConversion^(0+128),f
  7974     0C7E  081D               	movf	29,w	;volatile
  7975     0C7F  064F               	xorwf	??_ADC_GetConversion^(0+128),w
  7976     0C80  3983               	andlw	-125
  7977     0C81  064F               	xorwf	??_ADC_GetConversion^(0+128),w
  7978     0C82  009D               	movwf	29	;volatile
  7979                           
  7980                           ;mcc_generated_files/adc.c: 118:     ADCON0bits.ADON = 1;
  7981     0C83  141D               	bsf	29,0	;volatile
  7982                           
  7983                           ;mcc_generated_files/adc.c: 121:     _delay((unsigned long)((5)*(16000000/4000000.0)));
  7984     0C84  3006               	movlw	6
  7985     0C85                     u3137:
  7986     0C85  0B89               	decfsz	9,f
  7987     0C86  2C85               	goto	u3137
  7988     0C87  3200               	nop2
  7989                           
  7990                           ;mcc_generated_files/adc.c: 124:     ADCON0bits.GO_nDONE = 1;
  7991     0C88  0021               	movlb	1	; select bank1
  7992     0C89  149D               	bsf	29,1	;volatile
  7993     0C8A                     l333:	
  7994                           ;mcc_generated_files/adc.c: 128:     {;mcc_generated_files/adc.c: 129:     }
  7995                           
  7996                           
  7997                           ;mcc_generated_files/adc.c: 127:     while (ADCON0bits.GO_nDONE)
  7998     0C8A  189D               	btfsc	29,1	;volatile
  7999     0C8B  2C8A               	goto	l333
  8000                           
  8001                           ;mcc_generated_files/adc.c: 132:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  8002     0C8C  081C               	movf	28,w	;volatile
  8003     0C8D  00CE               	movwf	(?_ADC_GetConversion+1)^(0+128)
  8004     0C8E  081B               	movf	27,w	;volatile
  8005     0C8F  00CD               	movwf	?_ADC_GetConversion^(0+128)
  8006     0C90  0008               	return
  8007     0C91                     __end_of_ADC_GetConversion:
  8008                           
  8009                           	psect	intentry
  8010     0004                     __pintentry:	
  8011 ;; *************** function _INTERRUPT_InterruptManager *****************
  8012 ;; Defined at:
  8013 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  8014 ;; Parameters:    Size  Location     Type
  8015 ;;		None
  8016 ;; Auto vars:     Size  Location     Type
  8017 ;;		None
  8018 ;; Return value:  Size  Location     Type
  8019 ;;                  1    wreg      void 
  8020 ;; Registers used:
  8021 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8022 ;; Tracked objects:
  8023 ;;		On entry : 0/0
  8024 ;;		On exit  : 0/0
  8025 ;;		Unchanged: 0/0
  8026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8027 ;;      Params:         0       0       0       0       0       0
  8028 ;;      Locals:         0       0       0       0       0       0
  8029 ;;      Temps:          0       0       0       0       0       0
  8030 ;;      Totals:         0       0       0       0       0       0
  8031 ;;Total ram usage:        0 bytes
  8032 ;; Hardware stack levels used: 1
  8033 ;; Hardware stack levels required when called: 4
  8034 ;; This function calls:
  8035 ;;		_PIN_MANAGER_IOC
  8036 ;;		_TMR1_GATE_ISR
  8037 ;; This function is called by:
  8038 ;;		Interrupt level 1
  8039 ;; This function uses a non-reentrant model
  8040 ;;
  8041                           
  8042     0004                     _INTERRUPT_InterruptManager:
  8043                           
  8044                           ;incstack = 0
  8045     0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  8046                           
  8047                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8048     0005  3180               	pagesel	$
  8049                           
  8050                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.IOCIE == 1 && INTCONbits
      +                          .IOCIF == 1)
  8051     0006  198B               	btfsc	11,3	;volatile
  8052     0007  1C0B               	btfss	11,0	;volatile
  8053     0008  280D               	goto	i1l174
  8054                           
  8055                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         PIN_MANAGER_IOC();
  8056     0009  3180  2003  3180   	fcall	_PIN_MANAGER_IOC
  8057                           
  8058                           ;mcc_generated_files/interrupt_manager.c: 58:     }
  8059     000C  2817               	goto	i1l180
  8060     000D                     i1l174:	
  8061                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
  8062                           
  8063     000D  1F0B               	btfss	11,6	;volatile
  8064     000E  2817               	goto	i1l180
  8065                           
  8066                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE1bits.TMR1GIE == 1 && PIR1bits.TMR1GIF == 1)
  8067     000F  0021               	movlb	1	; select bank1
  8068     0010  1F91               	btfss	17,7	;volatile
  8069     0011  2817               	goto	i1l180
  8070     0012  0020               	movlb	0	; select bank0
  8071     0013  1F91               	btfss	17,7	;volatile
  8072     0014  2817               	goto	i1l180
  8073                           
  8074                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             TMR1_GATE_ISR();
  8075     0015  318B  23F1         	fcall	_TMR1_GATE_ISR
  8076     0017                     i1l180:	
  8077                           ;mcc_generated_files/interrupt_manager.c: 71:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 73:     }
  8078                           
  8079                           ;mcc_generated_files/interrupt_manager.c: 64:         }
  8080                           
  8081     0017  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  8082     0018  0009               	retfie
  8083     0019                     __end_of_INTERRUPT_InterruptManager:
  8084                           
  8085                           	psect	text45
  8086     0BF1                     __ptext45:	
  8087 ;; *************** function _TMR1_GATE_ISR *****************
  8088 ;; Defined at:
  8089 ;;		line 166 in file "mcc_generated_files/tmr1.c"
  8090 ;; Parameters:    Size  Location     Type
  8091 ;;		None
  8092 ;; Auto vars:     Size  Location     Type
  8093 ;;		None
  8094 ;; Return value:  Size  Location     Type
  8095 ;;                  1    wreg      void 
  8096 ;; Registers used:
  8097 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8098 ;; Tracked objects:
  8099 ;;		On entry : 1F/0
  8100 ;;		On exit  : 0/0
  8101 ;;		Unchanged: 0/0
  8102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8103 ;;      Params:         0       0       0       0       0       0
  8104 ;;      Locals:         0       0       0       0       0       0
  8105 ;;      Temps:          0       0       0       0       0       0
  8106 ;;      Totals:         0       0       0       0       0       0
  8107 ;;Total ram usage:        0 bytes
  8108 ;; Hardware stack levels used: 1
  8109 ;; Hardware stack levels required when called: 3
  8110 ;; This function calls:
  8111 ;;		NULL
  8112 ;;		_TMR1_DefaultGateInterruptHandler
  8113 ;;		_mede_height
  8114 ;; This function is called by:
  8115 ;;		_INTERRUPT_InterruptManager
  8116 ;; This function uses a non-reentrant model
  8117 ;;
  8118                           
  8119     0BF1                     _TMR1_GATE_ISR:	
  8120                           ;psect for function _TMR1_GATE_ISR
  8121                           
  8122                           
  8123                           ;mcc_generated_files/tmr1.c: 169:     PIR1bits.TMR1GIF = 0;
  8124                           
  8125                           ;incstack = 0
  8126                           ; Regs used in _TMR1_GATE_ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8127     0BF1  1391               	bcf	17,7	;volatile
  8128                           
  8129                           ;mcc_generated_files/tmr1.c: 171:     if(TMR1_GateInterruptHandler)
  8130     0BF2  086E               	movf	_TMR1_GateInterruptHandler,w
  8131     0BF3  046F               	iorwf	_TMR1_GateInterruptHandler+1,w
  8132     0BF4  1903               	btfsc	3,2
  8133     0BF5  0008               	return
  8134                           
  8135                           ;mcc_generated_files/tmr1.c: 172:     {;mcc_generated_files/tmr1.c: 173:         TMR1_Ga
      +                          teInterruptHandler();
  8136     0BF6  086F               	movf	_TMR1_GateInterruptHandler+1,w
  8137     0BF7  008A               	movwf	10
  8138     0BF8  086E               	movf	_TMR1_GateInterruptHandler,w
  8139     0BF9  000A               	callw
  8140     0BFA  318B               	pagesel	$
  8141     0BFB  0008               	return
  8142     0BFC                     __end_of_TMR1_GATE_ISR:
  8143                           
  8144                           	psect	text46
  8145     07FF                     __ptext46:	
  8146 ;; *************** function _TMR1_DefaultGateInterruptHandler *****************
  8147 ;; Defined at:
  8148 ;;		line 181 in file "mcc_generated_files/tmr1.c"
  8149 ;; Parameters:    Size  Location     Type
  8150 ;;		None
  8151 ;; Auto vars:     Size  Location     Type
  8152 ;;		None
  8153 ;; Return value:  Size  Location     Type
  8154 ;;                  1    wreg      void 
  8155 ;; Registers used:
  8156 ;;		None
  8157 ;; Tracked objects:
  8158 ;;		On entry : 1F/0
  8159 ;;		On exit  : 1F/0
  8160 ;;		Unchanged: 1F/0
  8161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8162 ;;      Params:         0       0       0       0       0       0
  8163 ;;      Locals:         0       0       0       0       0       0
  8164 ;;      Temps:          0       0       0       0       0       0
  8165 ;;      Totals:         0       0       0       0       0       0
  8166 ;;Total ram usage:        0 bytes
  8167 ;; Hardware stack levels used: 1
  8168 ;; This function calls:
  8169 ;;		Nothing
  8170 ;; This function is called by:
  8171 ;;		_TMR1_Initialize
  8172 ;;		_TMR1_GATE_ISR
  8173 ;; This function uses a non-reentrant model
  8174 ;;
  8175                           
  8176     07FF                     _TMR1_DefaultGateInterruptHandler:	
  8177                           ;psect for function _TMR1_DefaultGateInterruptHandler
  8178                           
  8179                           
  8180                           ;incstack = 0
  8181                           ; Regs used in _TMR1_DefaultGateInterruptHandler: []
  8182     07FF  0008               	return
  8183     0800                     __end_of_TMR1_DefaultGateInterruptHandler:
  8184                           
  8185                           	psect	text47
  8186     05E9                     __ptext47:	
  8187 ;; *************** function _mede_height *****************
  8188 ;; Defined at:
  8189 ;;		line 295 in file "main.c"
  8190 ;; Parameters:    Size  Location     Type
  8191 ;;		None
  8192 ;; Auto vars:     Size  Location     Type
  8193 ;;		None
  8194 ;; Return value:  Size  Location     Type
  8195 ;;                  1    wreg      void 
  8196 ;; Registers used:
  8197 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8198 ;; Tracked objects:
  8199 ;;		On entry : 1F/0
  8200 ;;		On exit  : 1F/1
  8201 ;;		Unchanged: 0/0
  8202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8203 ;;      Params:         0       0       0       0       0       0
  8204 ;;      Locals:         0       0       0       0       0       0
  8205 ;;      Temps:          0       6       0       0       0       0
  8206 ;;      Totals:         0       6       0       0       0       0
  8207 ;;Total ram usage:        6 bytes
  8208 ;; Hardware stack levels used: 1
  8209 ;; Hardware stack levels required when called: 2
  8210 ;; This function calls:
  8211 ;;		_TMR1_ReadTimer
  8212 ;;		_TMR1_Reload
  8213 ;;		___flmul
  8214 ;;		___xxtofl
  8215 ;;		i1___fltol
  8216 ;;		i1___lwdiv
  8217 ;; This function is called by:
  8218 ;;		_main
  8219 ;;		_TMR1_GATE_ISR
  8220 ;; This function uses a non-reentrant model
  8221 ;;
  8222                           
  8223     05E9                     _mede_height:	
  8224                           ;psect for function _mede_height
  8225                           
  8226                           
  8227                           ;main.c: 296:     tempo_voo = TMR1_ReadTimer();
  8228                           
  8229                           ;incstack = 0
  8230                           ; Regs used in _mede_height: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8231     05E9  318C  2460  3185   	fcall	_TMR1_ReadTimer
  8232     05EC  0871               	movf	?_TMR1_ReadTimer+1,w
  8233     05ED  00E2               	movwf	_tempo_voo+1
  8234     05EE  0870               	movf	?_TMR1_ReadTimer,w
  8235     05EF  00E1               	movwf	_tempo_voo
  8236                           
  8237                           ;main.c: 297:     TMR1_Reload();
  8238     05F0  318B  2392  3185   	fcall	_TMR1_Reload
  8239                           
  8240                           ;main.c: 298:     if (first_read == 1){
  8241     05F3  036D               	decf	_first_read,w
  8242     05F4  1D03               	btfss	3,2
  8243     05F5  2E12               	goto	i1l2876
  8244                           
  8245                           ;main.c: 299:         avg_tempo_voo = tempo_voo;
  8246     05F6  0861               	movf	_tempo_voo,w
  8247     05F7  00BF               	movwf	___xxtofl@val
  8248     05F8  0862               	movf	_tempo_voo+1,w
  8249     05F9  00C0               	movwf	___xxtofl@val+1
  8250     05FA  01C1               	clrf	___xxtofl@val+2
  8251     05FB  01C2               	clrf	___xxtofl@val+3
  8252     05FC  3000               	movlw	0
  8253     05FD  3187  2742  3185   	fcall	___xxtofl
  8254     0600  0842               	movf	?___xxtofl+3,w
  8255     0601  0021               	movlb	1	; select bank1
  8256     0602  00A3               	movwf	(_avg_tempo_voo+3)^(0+128)
  8257     0603  0020               	movlb	0	; select bank0
  8258     0604  0841               	movf	?___xxtofl+2,w
  8259     0605  0021               	movlb	1	; select bank1
  8260     0606  00A2               	movwf	(_avg_tempo_voo+2)^(0+128)
  8261     0607  0020               	movlb	0	; select bank0
  8262     0608  0840               	movf	?___xxtofl+1,w
  8263     0609  0021               	movlb	1	; select bank1
  8264     060A  00A1               	movwf	(_avg_tempo_voo+1)^(0+128)
  8265     060B  0020               	movlb	0	; select bank0
  8266     060C  083F               	movf	?___xxtofl,w
  8267     060D  0021               	movlb	1	; select bank1
  8268     060E  00A0               	movwf	_avg_tempo_voo^(0+128)
  8269                           
  8270                           ;main.c: 300:         first_read = 0;
  8271     060F  0020               	movlb	0	; select bank0
  8272     0610  01ED               	clrf	_first_read
  8273                           
  8274                           ;main.c: 301:     }
  8275     0611  2E4E               	goto	i1l2878
  8276     0612                     i1l2876:
  8277                           
  8278                           ;main.c: 303:         avg_tempo_voo = ((uint16_t)avg_tempo_voo + (tempo_voo))>>1;
  8279     0612  0021               	movlb	1	; select bank1
  8280     0613  0823               	movf	(_avg_tempo_voo+3)^(0+128),w
  8281     0614  0020               	movlb	0	; select bank0
  8282     0615  00B8               	movwf	i1___fltol@f1+3
  8283     0616  0021               	movlb	1	; select bank1
  8284     0617  0822               	movf	(_avg_tempo_voo+2)^(0+128),w
  8285     0618  0020               	movlb	0	; select bank0
  8286     0619  00B7               	movwf	i1___fltol@f1+2
  8287     061A  0021               	movlb	1	; select bank1
  8288     061B  0821               	movf	(_avg_tempo_voo+1)^(0+128),w
  8289     061C  0020               	movlb	0	; select bank0
  8290     061D  00B6               	movwf	i1___fltol@f1+1
  8291     061E  0021               	movlb	1	; select bank1
  8292     061F  0820               	movf	_avg_tempo_voo^(0+128),w
  8293     0620  0020               	movlb	0	; select bank0
  8294     0621  00B5               	movwf	i1___fltol@f1
  8295     0622  318E  2660  3185   	fcall	i1___fltol
  8296     0625  0861               	movf	_tempo_voo,w
  8297     0626  0735               	addwf	?i1___fltol,w
  8298     0627  00CD               	movwf	??_mede_height
  8299     0628  0862               	movf	_tempo_voo+1,w
  8300     0629  3D36               	addwfc	?i1___fltol+1,w
  8301     062A  00CE               	movwf	??_mede_height+1
  8302     062B  36CE               	lsrf	??_mede_height+1,f
  8303     062C  0CCD               	rrf	??_mede_height,f
  8304     062D  084D               	movf	??_mede_height,w
  8305     062E  00CF               	movwf	??_mede_height+2
  8306     062F  084E               	movf	??_mede_height+1,w
  8307     0630  00D0               	movwf	??_mede_height+3
  8308     0631  01D1               	clrf	??_mede_height+4
  8309     0632  01D2               	clrf	??_mede_height+5
  8310     0633  0852               	movf	??_mede_height+5,w
  8311     0634  00C2               	movwf	___xxtofl@val+3
  8312     0635  0851               	movf	??_mede_height+4,w
  8313     0636  00C1               	movwf	___xxtofl@val+2
  8314     0637  0850               	movf	??_mede_height+3,w
  8315     0638  00C0               	movwf	___xxtofl@val+1
  8316     0639  084F               	movf	??_mede_height+2,w
  8317     063A  00BF               	movwf	___xxtofl@val
  8318     063B  3000               	movlw	0
  8319     063C  3187  2742  3185   	fcall	___xxtofl
  8320     063F  0842               	movf	?___xxtofl+3,w
  8321     0640  0021               	movlb	1	; select bank1
  8322     0641  00A3               	movwf	(_avg_tempo_voo+3)^(0+128)
  8323     0642  0020               	movlb	0	; select bank0
  8324     0643  0841               	movf	?___xxtofl+2,w
  8325     0644  0021               	movlb	1	; select bank1
  8326     0645  00A2               	movwf	(_avg_tempo_voo+2)^(0+128)
  8327     0646  0020               	movlb	0	; select bank0
  8328     0647  0840               	movf	?___xxtofl+1,w
  8329     0648  0021               	movlb	1	; select bank1
  8330     0649  00A1               	movwf	(_avg_tempo_voo+1)^(0+128)
  8331     064A  0020               	movlb	0	; select bank0
  8332     064B  083F               	movf	?___xxtofl,w
  8333     064C  0021               	movlb	1	; select bank1
  8334     064D  00A0               	movwf	_avg_tempo_voo^(0+128)
  8335     064E                     i1l2878:
  8336                           
  8337                           ;main.c: 305:     height = (uint16_t)(avg_tempo_voo*lookupTable[(int)(adc_temp/10)]);
  8338     064E  0021               	movlb	1	; select bank1
  8339     064F  0836               	movf	(_adc_temp+1)^(0+128),w
  8340     0650  00F3               	movwf	i1___lwdiv@dividend+1
  8341     0651  0835               	movf	_adc_temp^(0+128),w
  8342     0652  00F2               	movwf	i1___lwdiv@dividend
  8343     0653  300A               	movlw	10
  8344     0654  00F0               	movwf	i1___lwdiv@divisor
  8345     0655  3000               	movlw	0
  8346     0656  00F1               	movwf	i1___lwdiv@divisor+1
  8347     0657  318D  2569  3185   	fcall	i1___lwdiv
  8348     065A  0871               	movf	?i1___lwdiv+1,w
  8349     065B  0085               	movwf	5
  8350     065C  0870               	movf	?i1___lwdiv,w
  8351     065D  0084               	movwf	4
  8352     065E  3584               	lslf	4,f
  8353     065F  0D85               	rlf	5,f
  8354     0660  3584               	lslf	4,f
  8355     0661  0D85               	rlf	5,f
  8356     0662  305B               	movlw	low _lookupTable
  8357     0663  0784               	addwf	4,f
  8358     0664  3004               	movlw	high _lookupTable
  8359     0665  3D05               	addwfc	5,w
  8360     0666  3880               	iorlw	128
  8361     0667  0085               	movwf	5
  8362     0668  3F00               	moviw [0]fsr0
  8363     0669  0020               	movlb	0	; select bank0
  8364     066A  00CD               	movwf	??_mede_height
  8365     066B  3F01               	moviw [1]fsr0
  8366     066C  00CE               	movwf	??_mede_height+1
  8367     066D  3F02               	moviw [2]fsr0
  8368     066E  00CF               	movwf	??_mede_height+2
  8369     066F  3F03               	moviw [3]fsr0
  8370     0670  00D0               	movwf	??_mede_height+3
  8371     0671  0850               	movf	??_mede_height+3,w
  8372     0672  00A7               	movwf	___flmul@a+3
  8373     0673  084F               	movf	??_mede_height+2,w
  8374     0674  00A6               	movwf	___flmul@a+2
  8375     0675  084E               	movf	??_mede_height+1,w
  8376     0676  00A5               	movwf	___flmul@a+1
  8377     0677  084D               	movf	??_mede_height,w
  8378     0678  00A4               	movwf	___flmul@a
  8379     0679  0021               	movlb	1	; select bank1
  8380     067A  0823               	movf	(_avg_tempo_voo+3)^(0+128),w
  8381     067B  0020               	movlb	0	; select bank0
  8382     067C  00A3               	movwf	___flmul@b+3
  8383     067D  0021               	movlb	1	; select bank1
  8384     067E  0822               	movf	(_avg_tempo_voo+2)^(0+128),w
  8385     067F  0020               	movlb	0	; select bank0
  8386     0680  00A2               	movwf	___flmul@b+2
  8387     0681  0021               	movlb	1	; select bank1
  8388     0682  0821               	movf	(_avg_tempo_voo+1)^(0+128),w
  8389     0683  0020               	movlb	0	; select bank0
  8390     0684  00A1               	movwf	___flmul@b+1
  8391     0685  0021               	movlb	1	; select bank1
  8392     0686  0820               	movf	_avg_tempo_voo^(0+128),w
  8393     0687  0020               	movlb	0	; select bank0
  8394     0688  00A0               	movwf	___flmul@b
  8395     0689  3180  2046  3185   	fcall	___flmul
  8396     068C  0823               	movf	?___flmul+3,w
  8397     068D  00B8               	movwf	i1___fltol@f1+3
  8398     068E  0822               	movf	?___flmul+2,w
  8399     068F  00B7               	movwf	i1___fltol@f1+2
  8400     0690  0821               	movf	?___flmul+1,w
  8401     0691  00B6               	movwf	i1___fltol@f1+1
  8402     0692  0820               	movf	?___flmul,w
  8403     0693  00B5               	movwf	i1___fltol@f1
  8404     0694  318E  2660         	fcall	i1___fltol
  8405     0696  0836               	movf	?i1___fltol+1,w
  8406     0697  0021               	movlb	1	; select bank1
  8407     0698  00B4               	movwf	(_height+1)^(0+128)
  8408     0699  0020               	movlb	0	; select bank0
  8409     069A  0835               	movf	?i1___fltol,w
  8410     069B  0021               	movlb	1	; select bank1
  8411     069C  00B3               	movwf	_height^(0+128)
  8412                           
  8413                           ;main.c: 306:     balldist = height;
  8414     069D  0833               	movf	_height^(0+128),w
  8415     069E  00AA               	movwf	_balldist^(0+128)
  8416     069F  0834               	movf	(_height+1)^(0+128),w
  8417     06A0  00AB               	movwf	(_balldist+1)^(0+128)
  8418     06A1  01AC               	clrf	(_balldist+2)^(0+128)
  8419     06A2  0008               	return
  8420     06A3                     __end_of_mede_height:
  8421                           
  8422                           	psect	text48
  8423     0D69                     __ptext48:	
  8424 ;; *************** function i1___lwdiv *****************
  8425 ;; Defined at:
  8426 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lwdiv.c"
  8427 ;; Parameters:    Size  Location     Type
  8428 ;;  divisor         2    0[COMMON] unsigned int 
  8429 ;;  dividend        2    2[COMMON] unsigned int 
  8430 ;; Auto vars:     Size  Location     Type
  8431 ;;  quotient        2    5[COMMON] unsigned int 
  8432 ;;  counter         1    7[COMMON] unsigned char 
  8433 ;; Return value:  Size  Location     Type
  8434 ;;                  2    0[COMMON] unsigned int 
  8435 ;; Registers used:
  8436 ;;		wreg, status,2, status,0
  8437 ;; Tracked objects:
  8438 ;;		On entry : 1F/1
  8439 ;;		On exit  : 1F/1
  8440 ;;		Unchanged: 1F/0
  8441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8442 ;;      Params:         4       0       0       0       0       0
  8443 ;;      Locals:         3       0       0       0       0       0
  8444 ;;      Temps:          1       0       0       0       0       0
  8445 ;;      Totals:         8       0       0       0       0       0
  8446 ;;Total ram usage:        8 bytes
  8447 ;; Hardware stack levels used: 1
  8448 ;; This function calls:
  8449 ;;		Nothing
  8450 ;; This function is called by:
  8451 ;;		_mede_height
  8452 ;; This function uses a non-reentrant model
  8453 ;;
  8454                           
  8455     0D69                     i1___lwdiv:	
  8456                           ;psect for function i1___lwdiv
  8457                           
  8458                           
  8459                           ;incstack = 0
  8460                           ; Regs used in i1___lwdiv: [wreg+status,2+status,0]
  8461     0D69  01F5               	clrf	i1___lwdiv@quotient
  8462     0D6A  01F6               	clrf	i1___lwdiv@quotient+1
  8463     0D6B  0870               	movf	i1___lwdiv@divisor,w
  8464     0D6C  0471               	iorwf	i1___lwdiv@divisor+1,w
  8465     0D6D  1903               	btfsc	3,2
  8466     0D6E  2D98               	goto	i1l2660
  8467     0D6F  01F7               	clrf	i1___lwdiv@counter
  8468     0D70  0AF7               	incf	i1___lwdiv@counter,f
  8469     0D71                     i1l2648:
  8470     0D71  1BF1               	btfsc	i1___lwdiv@divisor+1,7
  8471     0D72  2D7D               	goto	i1l2650
  8472     0D73  3001               	movlw	1
  8473     0D74                     u234_25:
  8474     0D74  35F0               	lslf	i1___lwdiv@divisor,f
  8475     0D75  0DF1               	rlf	i1___lwdiv@divisor+1,f
  8476     0D76  0B89               	decfsz	9,f
  8477     0D77  2D74               	goto	u234_25
  8478     0D78  3001               	movlw	1
  8479     0D79  00F4               	movwf	??i1___lwdiv
  8480     0D7A  0874               	movf	??i1___lwdiv,w
  8481     0D7B  07F7               	addwf	i1___lwdiv@counter,f
  8482     0D7C  2D71               	goto	i1l2648
  8483     0D7D                     i1l2650:
  8484     0D7D  3001               	movlw	1
  8485     0D7E                     u236_25:
  8486     0D7E  35F5               	lslf	i1___lwdiv@quotient,f
  8487     0D7F  0DF6               	rlf	i1___lwdiv@quotient+1,f
  8488     0D80  0B89               	decfsz	9,f
  8489     0D81  2D7E               	goto	u236_25
  8490     0D82  0871               	movf	i1___lwdiv@divisor+1,w
  8491     0D83  0273               	subwf	i1___lwdiv@dividend+1,w
  8492     0D84  1D03               	skipz
  8493     0D85  2D88               	goto	u237_25
  8494     0D86  0870               	movf	i1___lwdiv@divisor,w
  8495     0D87  0272               	subwf	i1___lwdiv@dividend,w
  8496     0D88                     u237_25:
  8497     0D88  1C03               	skipc
  8498     0D89  2D8F               	goto	i1l2656
  8499     0D8A  0870               	movf	i1___lwdiv@divisor,w
  8500     0D8B  02F2               	subwf	i1___lwdiv@dividend,f
  8501     0D8C  0871               	movf	i1___lwdiv@divisor+1,w
  8502     0D8D  3BF3               	subwfb	i1___lwdiv@dividend+1,f
  8503     0D8E  1475               	bsf	i1___lwdiv@quotient,0
  8504     0D8F                     i1l2656:
  8505     0D8F  3001               	movlw	1
  8506     0D90                     u238_25:
  8507     0D90  36F1               	lsrf	i1___lwdiv@divisor+1,f
  8508     0D91  0CF0               	rrf	i1___lwdiv@divisor,f
  8509     0D92  0B89               	decfsz	9,f
  8510     0D93  2D90               	goto	u238_25
  8511     0D94  3001               	movlw	1
  8512     0D95  02F7               	subwf	i1___lwdiv@counter,f
  8513     0D96  1D03               	btfss	3,2
  8514     0D97  2D7D               	goto	i1l2650
  8515     0D98                     i1l2660:
  8516     0D98  0876               	movf	i1___lwdiv@quotient+1,w
  8517     0D99  00F1               	movwf	?i1___lwdiv+1
  8518     0D9A  0875               	movf	i1___lwdiv@quotient,w
  8519     0D9B  00F0               	movwf	?i1___lwdiv
  8520     0D9C  0008               	return
  8521     0D9D                     __end_ofi1___lwdiv:
  8522                           
  8523                           	psect	text49
  8524     0E60                     __ptext49:	
  8525 ;; *************** function i1___fltol *****************
  8526 ;; Defined at:
  8527 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\fltol.c"
  8528 ;; Parameters:    Size  Location     Type
  8529 ;;  f1              4   21[BANK0 ] unsigned int 
  8530 ;; Auto vars:     Size  Location     Type
  8531 ;;  exp1            1   30[BANK0 ] unsigned char 
  8532 ;;  sign1           1   29[BANK0 ] unsigned char 
  8533 ;; Return value:  Size  Location     Type
  8534 ;;                  4   21[BANK0 ] long 
  8535 ;; Registers used:
  8536 ;;		wreg, status,2, status,0
  8537 ;; Tracked objects:
  8538 ;;		On entry : 1F/0
  8539 ;;		On exit  : 1F/0
  8540 ;;		Unchanged: 0/0
  8541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8542 ;;      Params:         0       4       0       0       0       0
  8543 ;;      Locals:         0       2       0       0       0       0
  8544 ;;      Temps:          0       4       0       0       0       0
  8545 ;;      Totals:         0      10       0       0       0       0
  8546 ;;Total ram usage:       10 bytes
  8547 ;; Hardware stack levels used: 1
  8548 ;; This function calls:
  8549 ;;		Nothing
  8550 ;; This function is called by:
  8551 ;;		_mede_height
  8552 ;; This function uses a non-reentrant model
  8553 ;;
  8554                           
  8555     0E60                     i1___fltol:	
  8556                           ;psect for function i1___fltol
  8557                           
  8558                           
  8559                           ;incstack = 0
  8560                           ; Regs used in i1___fltol: [wreg+status,2+status,0]
  8561     0E60  1003               	clrc
  8562     0E61  0D37               	rlf	i1___fltol@f1+2,w
  8563     0E62  0D38               	rlf	i1___fltol@f1+3,w
  8564     0E63  00BE               	movwf	i1___fltol@exp1
  8565     0E64  083E               	movf	i1___fltol@exp1,w
  8566     0E65  1D03               	btfss	3,2
  8567     0E66  2E70               	goto	i1l2608
  8568     0E67                     i1l2604:
  8569     0E67  3000               	movlw	0
  8570     0E68  00B8               	movwf	?i1___fltol+3
  8571     0E69  3000               	movlw	0
  8572     0E6A  00B7               	movwf	?i1___fltol+2
  8573     0E6B  3000               	movlw	0
  8574     0E6C  00B6               	movwf	?i1___fltol+1
  8575     0E6D  3000               	movlw	0
  8576     0E6E  00B5               	movwf	?i1___fltol
  8577     0E6F  0008               	return
  8578     0E70                     i1l2608:
  8579     0E70  0835               	movf	i1___fltol@f1,w
  8580     0E71  00B9               	movwf	??i1___fltol
  8581     0E72  0836               	movf	i1___fltol@f1+1,w
  8582     0E73  00BA               	movwf	??i1___fltol+1
  8583     0E74  0837               	movf	i1___fltol@f1+2,w
  8584     0E75  00BB               	movwf	??i1___fltol+2
  8585     0E76  0838               	movf	i1___fltol@f1+3,w
  8586     0E77  00BC               	movwf	??i1___fltol+3
  8587     0E78  301F               	movlw	31
  8588     0E79                     u224_25:
  8589     0E79  36BC               	lsrf	??i1___fltol+3,f
  8590     0E7A  0CBB               	rrf	??i1___fltol+2,f
  8591     0E7B  0CBA               	rrf	??i1___fltol+1,f
  8592     0E7C  0CB9               	rrf	??i1___fltol,f
  8593     0E7D  0B89               	decfsz	9,f
  8594     0E7E  2E79               	goto	u224_25
  8595     0E7F  0839               	movf	??i1___fltol,w
  8596     0E80  00BD               	movwf	i1___fltol@sign1
  8597     0E81  17B7               	bsf	i1___fltol@f1+2,7
  8598     0E82  30FF               	movlw	255
  8599     0E83  05B5               	andwf	i1___fltol@f1,f
  8600     0E84  30FF               	movlw	255
  8601     0E85  05B6               	andwf	i1___fltol@f1+1,f
  8602     0E86  30FF               	movlw	255
  8603     0E87  05B7               	andwf	i1___fltol@f1+2,f
  8604     0E88  3000               	movlw	0
  8605     0E89  05B8               	andwf	i1___fltol@f1+3,f
  8606     0E8A  3096               	movlw	150
  8607     0E8B  02BE               	subwf	i1___fltol@exp1,f
  8608     0E8C  1FBE               	btfss	i1___fltol@exp1,7
  8609     0E8D  2EA1               	goto	i1l2626
  8610     0E8E  083E               	movf	i1___fltol@exp1,w
  8611     0E8F  3A80               	xorlw	128
  8612     0E90  3E97               	addlw	151
  8613     0E91  1C03               	btfss	3,0
  8614     0E92  2E67               	goto	i1l2604
  8615     0E93                     i1l2624:
  8616     0E93  3001               	movlw	1
  8617     0E94                     u227_25:
  8618     0E94  36B8               	lsrf	i1___fltol@f1+3,f
  8619     0E95  0CB7               	rrf	i1___fltol@f1+2,f
  8620     0E96  0CB6               	rrf	i1___fltol@f1+1,f
  8621     0E97  0CB5               	rrf	i1___fltol@f1,f
  8622     0E98  0B89               	decfsz	9,f
  8623     0E99  2E94               	goto	u227_25
  8624     0E9A  3001               	movlw	1
  8625     0E9B  00B9               	movwf	??i1___fltol
  8626     0E9C  0839               	movf	??i1___fltol,w
  8627     0E9D  07BE               	addwf	i1___fltol@exp1,f
  8628     0E9E  1903               	btfsc	3,2
  8629     0E9F  2EB2               	goto	i1l2634
  8630     0EA0  2E93               	goto	i1l2624
  8631     0EA1                     i1l2626:
  8632     0EA1  3020               	movlw	32
  8633     0EA2  023E               	subwf	i1___fltol@exp1,w
  8634     0EA3  1803               	btfsc	3,0
  8635     0EA4  2E67               	goto	i1l2604
  8636     0EA5                     i1l1121:
  8637     0EA5  083E               	movf	i1___fltol@exp1,w
  8638     0EA6  1903               	btfsc	3,2
  8639     0EA7  2EB2               	goto	i1l2634
  8640     0EA8  3001               	movlw	1
  8641     0EA9                     u230_25:
  8642     0EA9  35B5               	lslf	i1___fltol@f1,f
  8643     0EAA  0DB6               	rlf	i1___fltol@f1+1,f
  8644     0EAB  0DB7               	rlf	i1___fltol@f1+2,f
  8645     0EAC  0DB8               	rlf	i1___fltol@f1+3,f
  8646     0EAD  0B89               	decfsz	9,f
  8647     0EAE  2EA9               	goto	u230_25
  8648     0EAF  3001               	movlw	1
  8649     0EB0  02BE               	subwf	i1___fltol@exp1,f
  8650     0EB1  2EA5               	goto	i1l1121
  8651     0EB2                     i1l2634:
  8652     0EB2  083D               	movf	i1___fltol@sign1,w
  8653     0EB3  1903               	btfsc	3,2
  8654     0EB4  0008               	return
  8655     0EB5  09B5               	comf	i1___fltol@f1,f
  8656     0EB6  09B6               	comf	i1___fltol@f1+1,f
  8657     0EB7  09B7               	comf	i1___fltol@f1+2,f
  8658     0EB8  09B8               	comf	i1___fltol@f1+3,f
  8659     0EB9  0AB5               	incf	i1___fltol@f1,f
  8660     0EBA  1903               	skipnz
  8661     0EBB  0AB6               	incf	i1___fltol@f1+1,f
  8662     0EBC  1903               	skipnz
  8663     0EBD  0AB7               	incf	i1___fltol@f1+2,f
  8664     0EBE  1903               	skipnz
  8665     0EBF  0AB8               	incf	i1___fltol@f1+3,f
  8666     0EC0  0008               	return
  8667     0EC1                     __end_ofi1___fltol:
  8668                           
  8669                           	psect	text50
  8670     0742                     __ptext50:	
  8671 ;; *************** function ___xxtofl *****************
  8672 ;; Defined at:
  8673 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\xxtofl.c"
  8674 ;; Parameters:    Size  Location     Type
  8675 ;;  sign            1    wreg     unsigned char 
  8676 ;;  val             4   31[BANK0 ] long 
  8677 ;; Auto vars:     Size  Location     Type
  8678 ;;  sign            1   39[BANK0 ] unsigned char 
  8679 ;;  arg             4   41[BANK0 ] unsigned long 
  8680 ;;  exp             1   40[BANK0 ] unsigned char 
  8681 ;; Return value:  Size  Location     Type
  8682 ;;                  4   31[BANK0 ] unsigned char 
  8683 ;; Registers used:
  8684 ;;		wreg, status,2, status,0
  8685 ;; Tracked objects:
  8686 ;;		On entry : 1F/0
  8687 ;;		On exit  : 1F/0
  8688 ;;		Unchanged: 0/0
  8689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8690 ;;      Params:         0       4       0       0       0       0
  8691 ;;      Locals:         0       6       0       0       0       0
  8692 ;;      Temps:          0       4       0       0       0       0
  8693 ;;      Totals:         0      14       0       0       0       0
  8694 ;;Total ram usage:       14 bytes
  8695 ;; Hardware stack levels used: 1
  8696 ;; This function calls:
  8697 ;;		Nothing
  8698 ;; This function is called by:
  8699 ;;		_mede_height
  8700 ;; This function uses a non-reentrant model
  8701 ;;
  8702                           
  8703     0742                     ___xxtofl:	
  8704                           ;psect for function ___xxtofl
  8705                           
  8706                           
  8707                           ;incstack = 0
  8708                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  8709                           ;___xxtofl@sign stored from wreg
  8710     0742  00C7               	movwf	___xxtofl@sign
  8711     0743  0847               	movf	___xxtofl@sign,w
  8712     0744  1D03               	btfss	3,2
  8713     0745  1FC2               	btfss	___xxtofl@val+3,7
  8714     0746  2F57               	goto	i1l2564
  8715     0747  093F               	comf	___xxtofl@val,w
  8716     0748  00C9               	movwf	___xxtofl@arg
  8717     0749  0940               	comf	___xxtofl@val+1,w
  8718     074A  00CA               	movwf	___xxtofl@arg+1
  8719     074B  0941               	comf	___xxtofl@val+2,w
  8720     074C  00CB               	movwf	___xxtofl@arg+2
  8721     074D  0942               	comf	___xxtofl@val+3,w
  8722     074E  00CC               	movwf	___xxtofl@arg+3
  8723     074F  0AC9               	incf	___xxtofl@arg,f
  8724     0750  1903               	skipnz
  8725     0751  0ACA               	incf	___xxtofl@arg+1,f
  8726     0752  1903               	skipnz
  8727     0753  0ACB               	incf	___xxtofl@arg+2,f
  8728     0754  1903               	skipnz
  8729     0755  0ACC               	incf	___xxtofl@arg+3,f
  8730     0756  2F5F               	goto	i1l1361
  8731     0757                     i1l2564:
  8732     0757  0842               	movf	___xxtofl@val+3,w
  8733     0758  00CC               	movwf	___xxtofl@arg+3
  8734     0759  0841               	movf	___xxtofl@val+2,w
  8735     075A  00CB               	movwf	___xxtofl@arg+2
  8736     075B  0840               	movf	___xxtofl@val+1,w
  8737     075C  00CA               	movwf	___xxtofl@arg+1
  8738     075D  083F               	movf	___xxtofl@val,w
  8739     075E  00C9               	movwf	___xxtofl@arg
  8740     075F                     i1l1361:
  8741     075F  0842               	movf	___xxtofl@val+3,w
  8742     0760  0441               	iorwf	___xxtofl@val+2,w
  8743     0761  0440               	iorwf	___xxtofl@val+1,w
  8744     0762  043F               	iorwf	___xxtofl@val,w
  8745     0763  1D03               	skipz
  8746     0764  2F6E               	goto	i1l2570
  8747     0765  3000               	movlw	0
  8748     0766  00C2               	movwf	?___xxtofl+3
  8749     0767  3000               	movlw	0
  8750     0768  00C1               	movwf	?___xxtofl+2
  8751     0769  3000               	movlw	0
  8752     076A  00C0               	movwf	?___xxtofl+1
  8753     076B  3000               	movlw	0
  8754     076C  00BF               	movwf	?___xxtofl
  8755     076D  0008               	return
  8756     076E                     i1l2570:
  8757     076E  3096               	movlw	150
  8758     076F  00C8               	movwf	___xxtofl@exp
  8759     0770                     i1l2574:
  8760     0770  30FE               	movlw	254
  8761     0771  054C               	andwf	___xxtofl@arg+3,w
  8762     0772  1903               	btfsc	3,2
  8763     0773  2F93               	goto	i1l1367
  8764     0774  3001               	movlw	1
  8765     0775  00C3               	movwf	??___xxtofl
  8766     0776  0843               	movf	??___xxtofl,w
  8767     0777  07C8               	addwf	___xxtofl@exp,f
  8768     0778  3001               	movlw	1
  8769     0779                     u212_25:
  8770     0779  36CC               	lsrf	___xxtofl@arg+3,f
  8771     077A  0CCB               	rrf	___xxtofl@arg+2,f
  8772     077B  0CCA               	rrf	___xxtofl@arg+1,f
  8773     077C  0CC9               	rrf	___xxtofl@arg,f
  8774     077D  0B89               	decfsz	9,f
  8775     077E  2F79               	goto	u212_25
  8776     077F  2F70               	goto	i1l2574
  8777     0780                     i1l2576:
  8778     0780  3001               	movlw	1
  8779     0781  00C3               	movwf	??___xxtofl
  8780     0782  0843               	movf	??___xxtofl,w
  8781     0783  07C8               	addwf	___xxtofl@exp,f
  8782     0784  3001               	movlw	1
  8783     0785  07C9               	addwf	___xxtofl@arg,f
  8784     0786  3000               	movlw	0
  8785     0787  3DCA               	addwfc	___xxtofl@arg+1,f
  8786     0788  3000               	movlw	0
  8787     0789  3DCB               	addwfc	___xxtofl@arg+2,f
  8788     078A  3000               	movlw	0
  8789     078B  3DCC               	addwfc	___xxtofl@arg+3,f
  8790     078C  3001               	movlw	1
  8791     078D                     u214_25:
  8792     078D  36CC               	lsrf	___xxtofl@arg+3,f
  8793     078E  0CCB               	rrf	___xxtofl@arg+2,f
  8794     078F  0CCA               	rrf	___xxtofl@arg+1,f
  8795     0790  0CC9               	rrf	___xxtofl@arg,f
  8796     0791  0B89               	decfsz	9,f
  8797     0792  2F8D               	goto	u214_25
  8798     0793                     i1l1367:
  8799     0793  30FF               	movlw	255
  8800     0794  054C               	andwf	___xxtofl@arg+3,w
  8801     0795  1903               	btfsc	3,2
  8802     0796  2FA5               	goto	i1l2584
  8803     0797  2F80               	goto	i1l2576
  8804     0798                     i1l2586:
  8805     0798  3002               	movlw	2
  8806     0799  0248               	subwf	___xxtofl@exp,w
  8807     079A  1C03               	btfss	3,0
  8808     079B  2FA7               	goto	i1l1374
  8809     079C  3001               	movlw	1
  8810     079D  02C8               	subwf	___xxtofl@exp,f
  8811     079E  3001               	movlw	1
  8812     079F                     u216_25:
  8813     079F  35C9               	lslf	___xxtofl@arg,f
  8814     07A0  0DCA               	rlf	___xxtofl@arg+1,f
  8815     07A1  0DCB               	rlf	___xxtofl@arg+2,f
  8816     07A2  0DCC               	rlf	___xxtofl@arg+3,f
  8817     07A3  0B89               	decfsz	9,f
  8818     07A4  2F9F               	goto	u216_25
  8819     07A5                     i1l2584:
  8820     07A5  1FCB               	btfss	___xxtofl@arg+2,7
  8821     07A6  2F98               	goto	i1l2586
  8822     07A7                     i1l1374:
  8823     07A7  1848               	btfsc	___xxtofl@exp,0
  8824     07A8  2FB1               	goto	i1l1375
  8825     07A9  30FF               	movlw	255
  8826     07AA  05C9               	andwf	___xxtofl@arg,f
  8827     07AB  30FF               	movlw	255
  8828     07AC  05CA               	andwf	___xxtofl@arg+1,f
  8829     07AD  307F               	movlw	127
  8830     07AE  05CB               	andwf	___xxtofl@arg+2,f
  8831     07AF  30FF               	movlw	255
  8832     07B0  05CC               	andwf	___xxtofl@arg+3,f
  8833     07B1                     i1l1375:
  8834     07B1  1003               	clrc
  8835     07B2  0CC8               	rrf	___xxtofl@exp,f
  8836     07B3  0848               	movf	___xxtofl@exp,w
  8837     07B4  00C3               	movwf	??___xxtofl
  8838     07B5  01C4               	clrf	??___xxtofl+1
  8839     07B6  01C5               	clrf	??___xxtofl+2
  8840     07B7  01C6               	clrf	??___xxtofl+3
  8841     07B8  3018               	movlw	24
  8842     07B9                     u220_25:
  8843     07B9  35C3               	lslf	??___xxtofl,f
  8844     07BA  0DC4               	rlf	??___xxtofl+1,f
  8845     07BB  0DC5               	rlf	??___xxtofl+2,f
  8846     07BC  0DC6               	rlf	??___xxtofl+3,f
  8847     07BD  0B89               	decfsz	9,f
  8848     07BE  2FB9               	goto	u220_25
  8849     07BF  0843               	movf	??___xxtofl,w
  8850     07C0  04C9               	iorwf	___xxtofl@arg,f
  8851     07C1  0844               	movf	??___xxtofl+1,w
  8852     07C2  04CA               	iorwf	___xxtofl@arg+1,f
  8853     07C3  0845               	movf	??___xxtofl+2,w
  8854     07C4  04CB               	iorwf	___xxtofl@arg+2,f
  8855     07C5  0846               	movf	??___xxtofl+3,w
  8856     07C6  04CC               	iorwf	___xxtofl@arg+3,f
  8857     07C7  0847               	movf	___xxtofl@sign,w
  8858     07C8  1D03               	btfss	3,2
  8859     07C9  1FC2               	btfss	___xxtofl@val+3,7
  8860     07CA  2FCC               	goto	i1l2598
  8861     07CB  17CC               	bsf	___xxtofl@arg+3,7
  8862     07CC                     i1l2598:
  8863     07CC  084C               	movf	___xxtofl@arg+3,w
  8864     07CD  00C2               	movwf	?___xxtofl+3
  8865     07CE  084B               	movf	___xxtofl@arg+2,w
  8866     07CF  00C1               	movwf	?___xxtofl+2
  8867     07D0  084A               	movf	___xxtofl@arg+1,w
  8868     07D1  00C0               	movwf	?___xxtofl+1
  8869     07D2  0849               	movf	___xxtofl@arg,w
  8870     07D3  00BF               	movwf	?___xxtofl
  8871     07D4  0008               	return
  8872     07D5                     __end_of___xxtofl:
  8873                           
  8874                           	psect	text51
  8875     0046                     __ptext51:	
  8876 ;; *************** function ___flmul *****************
  8877 ;; Defined at:
  8878 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcmul.c"
  8879 ;; Parameters:    Size  Location     Type
  8880 ;;  b               4    0[BANK0 ] unsigned char 
  8881 ;;  a               4    4[BANK0 ] unsigned char 
  8882 ;; Auto vars:     Size  Location     Type
  8883 ;;  prod            4   15[BANK0 ] struct .
  8884 ;;  grs             4   10[BANK0 ] unsigned long 
  8885 ;;  temp            2   19[BANK0 ] struct .
  8886 ;;  bexp            1   14[BANK0 ] unsigned char 
  8887 ;;  aexp            1    9[BANK0 ] unsigned char 
  8888 ;;  sign            1    8[BANK0 ] unsigned char 
  8889 ;; Return value:  Size  Location     Type
  8890 ;;                  4    0[BANK0 ] unsigned char 
  8891 ;; Registers used:
  8892 ;;		wreg, status,2, status,0, pclath, cstack
  8893 ;; Tracked objects:
  8894 ;;		On entry : 1F/0
  8895 ;;		On exit  : 1F/0
  8896 ;;		Unchanged: 0/0
  8897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8898 ;;      Params:         0       8       0       0       0       0
  8899 ;;      Locals:         0      13       0       0       0       0
  8900 ;;      Temps:          5       0       0       0       0       0
  8901 ;;      Totals:         5      21       0       0       0       0
  8902 ;;Total ram usage:       26 bytes
  8903 ;; Hardware stack levels used: 1
  8904 ;; Hardware stack levels required when called: 1
  8905 ;; This function calls:
  8906 ;;		__Umul8_16
  8907 ;; This function is called by:
  8908 ;;		_mede_height
  8909 ;; This function uses a non-reentrant model
  8910 ;;
  8911                           
  8912     0046                     ___flmul:	
  8913                           ;psect for function ___flmul
  8914                           
  8915                           
  8916                           ;incstack = 0
  8917                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  8918     0046  0823               	movf	___flmul@b+3,w
  8919     0047  3980               	andlw	128
  8920     0048  00A8               	movwf	___flmul@sign
  8921     0049  3523               	lslf	___flmul@b+3,w
  8922     004A  00AE               	movwf	___flmul@bexp
  8923     004B  1BA2               	btfsc	___flmul@b+2,7
  8924     004C  142E               	bsf	___flmul@bexp,0
  8925     004D  082E               	movf	___flmul@bexp,w
  8926     004E  1903               	btfsc	3,2
  8927     004F  285D               	goto	i1l2434
  8928     0050  0A2E               	incf	___flmul@bexp,w
  8929     0051  1D03               	btfss	3,2
  8930     0052  285B               	goto	i1l2432
  8931     0053  3000               	movlw	0
  8932     0054  00A3               	movwf	___flmul@b+3
  8933     0055  3000               	movlw	0
  8934     0056  00A2               	movwf	___flmul@b+2
  8935     0057  3000               	movlw	0
  8936     0058  00A1               	movwf	___flmul@b+1
  8937     0059  3000               	movlw	0
  8938     005A  00A0               	movwf	___flmul@b
  8939     005B                     i1l2432:
  8940     005B  17A2               	bsf	___flmul@b+2,7
  8941     005C  2865               	goto	i1l2436
  8942     005D                     i1l2434:
  8943     005D  3000               	movlw	0
  8944     005E  00A3               	movwf	___flmul@b+3
  8945     005F  3000               	movlw	0
  8946     0060  00A2               	movwf	___flmul@b+2
  8947     0061  3000               	movlw	0
  8948     0062  00A1               	movwf	___flmul@b+1
  8949     0063  3000               	movlw	0
  8950     0064  00A0               	movwf	___flmul@b
  8951     0065                     i1l2436:
  8952     0065  0827               	movf	___flmul@a+3,w
  8953     0066  3980               	andlw	128
  8954     0067  00F9               	movwf	??___flmul
  8955     0068  0879               	movf	??___flmul,w
  8956     0069  06A8               	xorwf	___flmul@sign,f
  8957     006A  3527               	lslf	___flmul@a+3,w
  8958     006B  00A9               	movwf	___flmul@aexp
  8959     006C  1BA6               	btfsc	___flmul@a+2,7
  8960     006D  1429               	bsf	___flmul@aexp,0
  8961     006E  0829               	movf	___flmul@aexp,w
  8962     006F  1903               	btfsc	3,2
  8963     0070  287E               	goto	i1l2452
  8964     0071  0A29               	incf	___flmul@aexp,w
  8965     0072  1D03               	btfss	3,2
  8966     0073  287C               	goto	i1l2450
  8967     0074  3000               	movlw	0
  8968     0075  00A7               	movwf	___flmul@a+3
  8969     0076  3000               	movlw	0
  8970     0077  00A6               	movwf	___flmul@a+2
  8971     0078  3000               	movlw	0
  8972     0079  00A5               	movwf	___flmul@a+1
  8973     007A  3000               	movlw	0
  8974     007B  00A4               	movwf	___flmul@a
  8975     007C                     i1l2450:
  8976     007C  17A6               	bsf	___flmul@a+2,7
  8977     007D  2886               	goto	i1l2454
  8978     007E                     i1l2452:
  8979     007E  3000               	movlw	0
  8980     007F  00A7               	movwf	___flmul@a+3
  8981     0080  3000               	movlw	0
  8982     0081  00A6               	movwf	___flmul@a+2
  8983     0082  3000               	movlw	0
  8984     0083  00A5               	movwf	___flmul@a+1
  8985     0084  3000               	movlw	0
  8986     0085  00A4               	movwf	___flmul@a
  8987     0086                     i1l2454:
  8988     0086  0829               	movf	___flmul@aexp,w
  8989     0087  1D03               	btfss	3,2
  8990     0088  082E               	movf	___flmul@bexp,w
  8991     0089  1D03               	btfss	3,2
  8992     008A  2894               	goto	i1l2462
  8993     008B  3000               	movlw	0
  8994     008C  00A3               	movwf	?___flmul+3
  8995     008D  3000               	movlw	0
  8996     008E  00A2               	movwf	?___flmul+2
  8997     008F  3000               	movlw	0
  8998     0090  00A1               	movwf	?___flmul+1
  8999     0091  3000               	movlw	0
  9000     0092  00A0               	movwf	?___flmul
  9001     0093  0008               	return
  9002     0094                     i1l2462:
  9003     0094  0820               	movf	___flmul@b,w
  9004     0095  00F0               	movwf	__Umul8_16@multiplicand
  9005     0096  0826               	movf	___flmul@a+2,w
  9006     0097  318C  24E0  3180   	fcall	__Umul8_16
  9007     009A  0871               	movf	?__Umul8_16+1,w
  9008     009B  00B4               	movwf	___flmul@temp+1
  9009     009C  0870               	movf	?__Umul8_16,w
  9010     009D  00B3               	movwf	___flmul@temp
  9011     009E  0833               	movf	___flmul@temp,w
  9012     009F  00F9               	movwf	??___flmul
  9013     00A0  01FA               	clrf	??___flmul+1
  9014     00A1  01FB               	clrf	??___flmul+2
  9015     00A2  01FC               	clrf	??___flmul+3
  9016     00A3  087C               	movf	??___flmul+3,w
  9017     00A4  00AD               	movwf	___flmul@grs+3
  9018     00A5  087B               	movf	??___flmul+2,w
  9019     00A6  00AC               	movwf	___flmul@grs+2
  9020     00A7  087A               	movf	??___flmul+1,w
  9021     00A8  00AB               	movwf	___flmul@grs+1
  9022     00A9  0879               	movf	??___flmul,w
  9023     00AA  00AA               	movwf	___flmul@grs
  9024     00AB  0834               	movf	___flmul@temp+1,w
  9025     00AC  00F9               	movwf	??___flmul
  9026     00AD  01FA               	clrf	??___flmul+1
  9027     00AE  01FB               	clrf	??___flmul+2
  9028     00AF  01FC               	clrf	??___flmul+3
  9029     00B0  087C               	movf	??___flmul+3,w
  9030     00B1  00B2               	movwf	___flmul@prod+3
  9031     00B2  087B               	movf	??___flmul+2,w
  9032     00B3  00B1               	movwf	___flmul@prod+2
  9033     00B4  087A               	movf	??___flmul+1,w
  9034     00B5  00B0               	movwf	___flmul@prod+1
  9035     00B6  0879               	movf	??___flmul,w
  9036     00B7  00AF               	movwf	___flmul@prod
  9037     00B8  0821               	movf	___flmul@b+1,w
  9038     00B9  00F0               	movwf	__Umul8_16@multiplicand
  9039     00BA  0825               	movf	___flmul@a+1,w
  9040     00BB  318C  24E0  3180   	fcall	__Umul8_16
  9041     00BE  0871               	movf	?__Umul8_16+1,w
  9042     00BF  00B4               	movwf	___flmul@temp+1
  9043     00C0  0870               	movf	?__Umul8_16,w
  9044     00C1  00B3               	movwf	___flmul@temp
  9045     00C2  0833               	movf	___flmul@temp,w
  9046     00C3  00F9               	movwf	??___flmul
  9047     00C4  01FA               	clrf	??___flmul+1
  9048     00C5  01FB               	clrf	??___flmul+2
  9049     00C6  01FC               	clrf	??___flmul+3
  9050     00C7  0879               	movf	??___flmul,w
  9051     00C8  07AA               	addwf	___flmul@grs,f
  9052     00C9  087A               	movf	??___flmul+1,w
  9053     00CA  3DAB               	addwfc	___flmul@grs+1,f
  9054     00CB  087B               	movf	??___flmul+2,w
  9055     00CC  3DAC               	addwfc	___flmul@grs+2,f
  9056     00CD  087C               	movf	??___flmul+3,w
  9057     00CE  3DAD               	addwfc	___flmul@grs+3,f
  9058     00CF  0834               	movf	___flmul@temp+1,w
  9059     00D0  00F9               	movwf	??___flmul
  9060     00D1  01FA               	clrf	??___flmul+1
  9061     00D2  01FB               	clrf	??___flmul+2
  9062     00D3  01FC               	clrf	??___flmul+3
  9063     00D4  0879               	movf	??___flmul,w
  9064     00D5  07AF               	addwf	___flmul@prod,f
  9065     00D6  087A               	movf	??___flmul+1,w
  9066     00D7  3DB0               	addwfc	___flmul@prod+1,f
  9067     00D8  087B               	movf	??___flmul+2,w
  9068     00D9  3DB1               	addwfc	___flmul@prod+2,f
  9069     00DA  087C               	movf	??___flmul+3,w
  9070     00DB  3DB2               	addwfc	___flmul@prod+3,f
  9071     00DC  0822               	movf	___flmul@b+2,w
  9072     00DD  00F0               	movwf	__Umul8_16@multiplicand
  9073     00DE  0824               	movf	___flmul@a,w
  9074     00DF  318C  24E0  3180   	fcall	__Umul8_16
  9075     00E2  0871               	movf	?__Umul8_16+1,w
  9076     00E3  00B4               	movwf	___flmul@temp+1
  9077     00E4  0870               	movf	?__Umul8_16,w
  9078     00E5  00B3               	movwf	___flmul@temp
  9079     00E6  0833               	movf	___flmul@temp,w
  9080     00E7  00F9               	movwf	??___flmul
  9081     00E8  01FA               	clrf	??___flmul+1
  9082     00E9  01FB               	clrf	??___flmul+2
  9083     00EA  01FC               	clrf	??___flmul+3
  9084     00EB  0879               	movf	??___flmul,w
  9085     00EC  07AA               	addwf	___flmul@grs,f
  9086     00ED  087A               	movf	??___flmul+1,w
  9087     00EE  3DAB               	addwfc	___flmul@grs+1,f
  9088     00EF  087B               	movf	??___flmul+2,w
  9089     00F0  3DAC               	addwfc	___flmul@grs+2,f
  9090     00F1  087C               	movf	??___flmul+3,w
  9091     00F2  3DAD               	addwfc	___flmul@grs+3,f
  9092     00F3  0834               	movf	___flmul@temp+1,w
  9093     00F4  00F9               	movwf	??___flmul
  9094     00F5  01FA               	clrf	??___flmul+1
  9095     00F6  01FB               	clrf	??___flmul+2
  9096     00F7  01FC               	clrf	??___flmul+3
  9097     00F8  0879               	movf	??___flmul,w
  9098     00F9  07AF               	addwf	___flmul@prod,f
  9099     00FA  087A               	movf	??___flmul+1,w
  9100     00FB  3DB0               	addwfc	___flmul@prod+1,f
  9101     00FC  087B               	movf	??___flmul+2,w
  9102     00FD  3DB1               	addwfc	___flmul@prod+2,f
  9103     00FE  087C               	movf	??___flmul+3,w
  9104     00FF  3DB2               	addwfc	___flmul@prod+3,f
  9105     0100  3008               	movlw	8
  9106     0101                     u192_25:
  9107     0101  35AA               	lslf	___flmul@grs,f
  9108     0102  0DAB               	rlf	___flmul@grs+1,f
  9109     0103  0DAC               	rlf	___flmul@grs+2,f
  9110     0104  0DAD               	rlf	___flmul@grs+3,f
  9111     0105  0B89               	decfsz	9,f
  9112     0106  2901               	goto	u192_25
  9113     0107  0821               	movf	___flmul@b+1,w
  9114     0108  00F0               	movwf	__Umul8_16@multiplicand
  9115     0109  0824               	movf	___flmul@a,w
  9116     010A  318C  24E0  3180   	fcall	__Umul8_16
  9117     010D  0871               	movf	?__Umul8_16+1,w
  9118     010E  00B4               	movwf	___flmul@temp+1
  9119     010F  0870               	movf	?__Umul8_16,w
  9120     0110  00B3               	movwf	___flmul@temp
  9121     0111  0833               	movf	___flmul@temp,w
  9122     0112  07AA               	addwf	___flmul@grs,f
  9123     0113  0834               	movf	___flmul@temp+1,w
  9124     0114  3DAB               	addwfc	___flmul@grs+1,f
  9125     0115  3000               	movlw	0
  9126     0116  3DAC               	addwfc	___flmul@grs+2,f
  9127     0117  3DAD               	addwfc	___flmul@grs+3,f
  9128     0118  0820               	movf	___flmul@b,w
  9129     0119  00F0               	movwf	__Umul8_16@multiplicand
  9130     011A  0825               	movf	___flmul@a+1,w
  9131     011B  318C  24E0  3180   	fcall	__Umul8_16
  9132     011E  0871               	movf	?__Umul8_16+1,w
  9133     011F  00B4               	movwf	___flmul@temp+1
  9134     0120  0870               	movf	?__Umul8_16,w
  9135     0121  00B3               	movwf	___flmul@temp
  9136     0122  0833               	movf	___flmul@temp,w
  9137     0123  07AA               	addwf	___flmul@grs,f
  9138     0124  0834               	movf	___flmul@temp+1,w
  9139     0125  3DAB               	addwfc	___flmul@grs+1,f
  9140     0126  3000               	movlw	0
  9141     0127  3DAC               	addwfc	___flmul@grs+2,f
  9142     0128  3DAD               	addwfc	___flmul@grs+3,f
  9143     0129  3008               	movlw	8
  9144     012A                     u193_25:
  9145     012A  35AA               	lslf	___flmul@grs,f
  9146     012B  0DAB               	rlf	___flmul@grs+1,f
  9147     012C  0DAC               	rlf	___flmul@grs+2,f
  9148     012D  0DAD               	rlf	___flmul@grs+3,f
  9149     012E  0B89               	decfsz	9,f
  9150     012F  292A               	goto	u193_25
  9151     0130  0820               	movf	___flmul@b,w
  9152     0131  00F0               	movwf	__Umul8_16@multiplicand
  9153     0132  0824               	movf	___flmul@a,w
  9154     0133  318C  24E0  3180   	fcall	__Umul8_16
  9155     0136  0871               	movf	?__Umul8_16+1,w
  9156     0137  00B4               	movwf	___flmul@temp+1
  9157     0138  0870               	movf	?__Umul8_16,w
  9158     0139  00B3               	movwf	___flmul@temp
  9159     013A  0833               	movf	___flmul@temp,w
  9160     013B  07AA               	addwf	___flmul@grs,f
  9161     013C  0834               	movf	___flmul@temp+1,w
  9162     013D  3DAB               	addwfc	___flmul@grs+1,f
  9163     013E  3000               	movlw	0
  9164     013F  3DAC               	addwfc	___flmul@grs+2,f
  9165     0140  3DAD               	addwfc	___flmul@grs+3,f
  9166     0141  0821               	movf	___flmul@b+1,w
  9167     0142  00F0               	movwf	__Umul8_16@multiplicand
  9168     0143  0826               	movf	___flmul@a+2,w
  9169     0144  318C  24E0  3180   	fcall	__Umul8_16
  9170     0147  0871               	movf	?__Umul8_16+1,w
  9171     0148  00B4               	movwf	___flmul@temp+1
  9172     0149  0870               	movf	?__Umul8_16,w
  9173     014A  00B3               	movwf	___flmul@temp
  9174     014B  0833               	movf	___flmul@temp,w
  9175     014C  07AF               	addwf	___flmul@prod,f
  9176     014D  0834               	movf	___flmul@temp+1,w
  9177     014E  3DB0               	addwfc	___flmul@prod+1,f
  9178     014F  3000               	movlw	0
  9179     0150  3DB1               	addwfc	___flmul@prod+2,f
  9180     0151  3DB2               	addwfc	___flmul@prod+3,f
  9181     0152  0822               	movf	___flmul@b+2,w
  9182     0153  00F0               	movwf	__Umul8_16@multiplicand
  9183     0154  0825               	movf	___flmul@a+1,w
  9184     0155  318C  24E0  3180   	fcall	__Umul8_16
  9185     0158  0871               	movf	?__Umul8_16+1,w
  9186     0159  00B4               	movwf	___flmul@temp+1
  9187     015A  0870               	movf	?__Umul8_16,w
  9188     015B  00B3               	movwf	___flmul@temp
  9189     015C  0833               	movf	___flmul@temp,w
  9190     015D  07AF               	addwf	___flmul@prod,f
  9191     015E  0834               	movf	___flmul@temp+1,w
  9192     015F  3DB0               	addwfc	___flmul@prod+1,f
  9193     0160  3000               	movlw	0
  9194     0161  3DB1               	addwfc	___flmul@prod+2,f
  9195     0162  3DB2               	addwfc	___flmul@prod+3,f
  9196     0163  0822               	movf	___flmul@b+2,w
  9197     0164  00F0               	movwf	__Umul8_16@multiplicand
  9198     0165  0826               	movf	___flmul@a+2,w
  9199     0166  318C  24E0  3180   	fcall	__Umul8_16
  9200     0169  0871               	movf	?__Umul8_16+1,w
  9201     016A  00B4               	movwf	___flmul@temp+1
  9202     016B  0870               	movf	?__Umul8_16,w
  9203     016C  00B3               	movwf	___flmul@temp
  9204     016D  0833               	movf	___flmul@temp,w
  9205     016E  00F9               	movwf	??___flmul
  9206     016F  0834               	movf	___flmul@temp+1,w
  9207     0170  00FA               	movwf	??___flmul+1
  9208     0171  01FB               	clrf	??___flmul+2
  9209     0172  01FC               	clrf	??___flmul+3
  9210     0173  3008               	movlw	8
  9211     0174                     u194_25:
  9212     0174  35F9               	lslf	??___flmul,f
  9213     0175  0DFA               	rlf	??___flmul+1,f
  9214     0176  0DFB               	rlf	??___flmul+2,f
  9215     0177  0DFC               	rlf	??___flmul+3,f
  9216     0178  0B89               	decfsz	9,f
  9217     0179  2974               	goto	u194_25
  9218     017A  0879               	movf	??___flmul,w
  9219     017B  07AF               	addwf	___flmul@prod,f
  9220     017C  087A               	movf	??___flmul+1,w
  9221     017D  3DB0               	addwfc	___flmul@prod+1,f
  9222     017E  087B               	movf	??___flmul+2,w
  9223     017F  3DB1               	addwfc	___flmul@prod+2,f
  9224     0180  087C               	movf	??___flmul+3,w
  9225     0181  3DB2               	addwfc	___flmul@prod+3,f
  9226     0182  082D               	movf	___flmul@grs+3,w
  9227     0183  00F9               	movwf	??___flmul
  9228     0184  01FA               	clrf	??___flmul+1
  9229     0185  01FB               	clrf	??___flmul+2
  9230     0186  01FC               	clrf	??___flmul+3
  9231     0187  0879               	movf	??___flmul,w
  9232     0188  07AF               	addwf	___flmul@prod,f
  9233     0189  087A               	movf	??___flmul+1,w
  9234     018A  3DB0               	addwfc	___flmul@prod+1,f
  9235     018B  087B               	movf	??___flmul+2,w
  9236     018C  3DB1               	addwfc	___flmul@prod+2,f
  9237     018D  087C               	movf	??___flmul+3,w
  9238     018E  3DB2               	addwfc	___flmul@prod+3,f
  9239     018F  3008               	movlw	8
  9240     0190                     u195_25:
  9241     0190  35AA               	lslf	___flmul@grs,f
  9242     0191  0DAB               	rlf	___flmul@grs+1,f
  9243     0192  0DAC               	rlf	___flmul@grs+2,f
  9244     0193  0DAD               	rlf	___flmul@grs+3,f
  9245     0194  0B89               	decfsz	9,f
  9246     0195  2990               	goto	u195_25
  9247     0196  082E               	movf	___flmul@bexp,w
  9248     0197  0729               	addwf	___flmul@aexp,w
  9249     0198  00F9               	movwf	??___flmul
  9250     0199  01FA               	clrf	??___flmul+1
  9251     019A  0DFA               	rlf	??___flmul+1,f
  9252     019B  0879               	movf	??___flmul,w
  9253     019C  3E82               	addlw	130
  9254     019D  00B3               	movwf	___flmul@temp
  9255     019E  30FF               	movlw	255
  9256     019F  3D7A               	addwfc	??___flmul+1,w
  9257     01A0  00B4               	movwf	___flmul@temp+1
  9258     01A1                     i1l2514:
  9259     01A1  1BB1               	btfsc	___flmul@prod+2,7
  9260     01A2  29B8               	goto	i1l2516
  9261     01A3  3001               	movlw	1
  9262     01A4                     u196_25:
  9263     01A4  35AF               	lslf	___flmul@prod,f
  9264     01A5  0DB0               	rlf	___flmul@prod+1,f
  9265     01A6  0DB1               	rlf	___flmul@prod+2,f
  9266     01A7  0DB2               	rlf	___flmul@prod+3,f
  9267     01A8  0B89               	decfsz	9,f
  9268     01A9  29A4               	goto	u196_25
  9269     01AA  1BAD               	btfsc	___flmul@grs+3,7
  9270     01AB  142F               	bsf	___flmul@prod,0
  9271     01AC  3001               	movlw	1
  9272     01AD                     u198_25:
  9273     01AD  35AA               	lslf	___flmul@grs,f
  9274     01AE  0DAB               	rlf	___flmul@grs+1,f
  9275     01AF  0DAC               	rlf	___flmul@grs+2,f
  9276     01B0  0DAD               	rlf	___flmul@grs+3,f
  9277     01B1  0B89               	decfsz	9,f
  9278     01B2  29AD               	goto	u198_25
  9279     01B3  30FF               	movlw	255
  9280     01B4  07B3               	addwf	___flmul@temp,f
  9281     01B5  30FF               	movlw	255
  9282     01B6  3DB4               	addwfc	___flmul@temp+1,f
  9283     01B7  29A1               	goto	i1l2514
  9284     01B8                     i1l2516:
  9285     01B8  01A9               	clrf	___flmul@aexp
  9286     01B9  1FAD               	btfss	___flmul@grs+3,7
  9287     01BA  29D1               	goto	i1l2526
  9288     01BB  30FF               	movlw	255
  9289     01BC  052A               	andwf	___flmul@grs,w
  9290     01BD  00F9               	movwf	??___flmul
  9291     01BE  30FF               	movlw	255
  9292     01BF  052B               	andwf	___flmul@grs+1,w
  9293     01C0  00FA               	movwf	??___flmul+1
  9294     01C1  30FF               	movlw	255
  9295     01C2  052C               	andwf	___flmul@grs+2,w
  9296     01C3  00FB               	movwf	??___flmul+2
  9297     01C4  307F               	movlw	127
  9298     01C5  052D               	andwf	___flmul@grs+3,w
  9299     01C6  00FC               	movwf	??___flmul+3
  9300     01C7  087C               	movf	??___flmul+3,w
  9301     01C8  047B               	iorwf	??___flmul+2,w
  9302     01C9  047A               	iorwf	??___flmul+1,w
  9303     01CA  0479               	iorwf	??___flmul,w
  9304     01CB  1903               	skipnz
  9305     01CC  182F               	btfsc	___flmul@prod,0
  9306     01CD  29CF               	goto	i1l2522
  9307     01CE  29D1               	goto	i1l2526
  9308     01CF                     i1l2522:
  9309     01CF  01A9               	clrf	___flmul@aexp
  9310     01D0  0AA9               	incf	___flmul@aexp,f
  9311     01D1                     i1l2526:
  9312     01D1  0829               	movf	___flmul@aexp,w
  9313     01D2  1903               	btfsc	3,2
  9314     01D3  29FA               	goto	i1l2536
  9315     01D4  3001               	movlw	1
  9316     01D5  07AF               	addwf	___flmul@prod,f
  9317     01D6  3000               	movlw	0
  9318     01D7  3DB0               	addwfc	___flmul@prod+1,f
  9319     01D8  3000               	movlw	0
  9320     01D9  3DB1               	addwfc	___flmul@prod+2,f
  9321     01DA  3000               	movlw	0
  9322     01DB  3DB2               	addwfc	___flmul@prod+3,f
  9323     01DC  1C32               	btfss	___flmul@prod+3,0
  9324     01DD  29FA               	goto	i1l2536
  9325     01DE  082F               	movf	___flmul@prod,w
  9326     01DF  00F9               	movwf	??___flmul
  9327     01E0  0830               	movf	___flmul@prod+1,w
  9328     01E1  00FA               	movwf	??___flmul+1
  9329     01E2  0831               	movf	___flmul@prod+2,w
  9330     01E3  00FB               	movwf	??___flmul+2
  9331     01E4  0832               	movf	___flmul@prod+3,w
  9332     01E5  00FC               	movwf	??___flmul+3
  9333     01E6  3001               	movlw	1
  9334     01E7  00FD               	movwf	??___flmul+4
  9335     01E8                     u205_25:
  9336     01E8  37FC               	asrf	??___flmul+3,f
  9337     01E9  0CFB               	rrf	??___flmul+2,f
  9338     01EA  0CFA               	rrf	??___flmul+1,f
  9339     01EB  0CF9               	rrf	??___flmul,f
  9340     01EC  0BFD               	decfsz	??___flmul+4,f
  9341     01ED  29E8               	goto	u205_25
  9342     01EE  087C               	movf	??___flmul+3,w
  9343     01EF  00B2               	movwf	___flmul@prod+3
  9344     01F0  087B               	movf	??___flmul+2,w
  9345     01F1  00B1               	movwf	___flmul@prod+2
  9346     01F2  087A               	movf	??___flmul+1,w
  9347     01F3  00B0               	movwf	___flmul@prod+1
  9348     01F4  0879               	movf	??___flmul,w
  9349     01F5  00AF               	movwf	___flmul@prod
  9350     01F6  3001               	movlw	1
  9351     01F7  07B3               	addwf	___flmul@temp,f
  9352     01F8  3000               	movlw	0
  9353     01F9  3DB4               	addwfc	___flmul@temp+1,f
  9354     01FA                     i1l2536:
  9355     01FA  0834               	movf	___flmul@temp+1,w
  9356     01FB  3A80               	xorlw	128
  9357     01FC  00F9               	movwf	??___flmul
  9358     01FD  3080               	movlw	128
  9359     01FE  0279               	subwf	??___flmul,w
  9360     01FF  1D03               	skipz
  9361     0200  2A03               	goto	u206_25
  9362     0201  30FF               	movlw	255
  9363     0202  0233               	subwf	___flmul@temp,w
  9364     0203                     u206_25:
  9365     0203  1C03               	skipc
  9366     0204  2A0F               	goto	i1l2540
  9367     0205  307F               	movlw	127
  9368     0206  0020               	movlb	0	; select bank0
  9369     0207  00B2               	movwf	___flmul@prod+3
  9370     0208  3080               	movlw	128
  9371     0209  00B1               	movwf	___flmul@prod+2
  9372     020A  3000               	movlw	0
  9373     020B  00B0               	movwf	___flmul@prod+1
  9374     020C  3000               	movlw	0
  9375     020D  00AF               	movwf	___flmul@prod
  9376     020E  2A35               	goto	i1l1329
  9377     020F                     i1l2540:
  9378     020F  0020               	movlb	0	; select bank0
  9379     0210  0834               	movf	___flmul@temp+1,w
  9380     0211  3A80               	xorlw	128
  9381     0212  00F9               	movwf	??___flmul
  9382     0213  3080               	movlw	128
  9383     0214  0279               	subwf	??___flmul,w
  9384     0215  1D03               	skipz
  9385     0216  2A19               	goto	u207_25
  9386     0217  3001               	movlw	1
  9387     0218  0233               	subwf	___flmul@temp,w
  9388     0219                     u207_25:
  9389     0219  1803               	skipnc
  9390     021A  2A26               	goto	i1l2546
  9391     021B  3000               	movlw	0
  9392     021C  0020               	movlb	0	; select bank0
  9393     021D  00B2               	movwf	___flmul@prod+3
  9394     021E  3000               	movlw	0
  9395     021F  00B1               	movwf	___flmul@prod+2
  9396     0220  3000               	movlw	0
  9397     0221  00B0               	movwf	___flmul@prod+1
  9398     0222  3000               	movlw	0
  9399     0223  00AF               	movwf	___flmul@prod
  9400     0224  01A8               	clrf	___flmul@sign
  9401     0225  2A35               	goto	i1l1329
  9402     0226                     i1l2546:
  9403     0226  0020               	movlb	0	; select bank0
  9404     0227  0833               	movf	___flmul@temp,w
  9405     0228  00AE               	movwf	___flmul@bexp
  9406     0229  30FF               	movlw	255
  9407     022A  05AF               	andwf	___flmul@prod,f
  9408     022B  30FF               	movlw	255
  9409     022C  05B0               	andwf	___flmul@prod+1,f
  9410     022D  307F               	movlw	127
  9411     022E  05B1               	andwf	___flmul@prod+2,f
  9412     022F  3000               	movlw	0
  9413     0230  05B2               	andwf	___flmul@prod+3,f
  9414     0231  182E               	btfsc	___flmul@bexp,0
  9415     0232  17B1               	bsf	___flmul@prod+2,7
  9416     0233  362E               	lsrf	___flmul@bexp,w
  9417     0234  00B2               	movwf	___flmul@prod+3
  9418     0235                     i1l1329:
  9419     0235  0828               	movf	___flmul@sign,w
  9420     0236  00F9               	movwf	??___flmul
  9421     0237  0879               	movf	??___flmul,w
  9422     0238  04B2               	iorwf	___flmul@prod+3,f
  9423     0239  0832               	movf	___flmul@prod+3,w
  9424     023A  00A3               	movwf	?___flmul+3
  9425     023B  0831               	movf	___flmul@prod+2,w
  9426     023C  00A2               	movwf	?___flmul+2
  9427     023D  0830               	movf	___flmul@prod+1,w
  9428     023E  00A1               	movwf	?___flmul+1
  9429     023F  082F               	movf	___flmul@prod,w
  9430     0240  00A0               	movwf	?___flmul
  9431     0241  0008               	return
  9432     0242                     __end_of___flmul:
  9433                           
  9434                           	psect	text52
  9435     0CE0                     __ptext52:	
  9436 ;; *************** function __Umul8_16 *****************
  9437 ;; Defined at:
  9438 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul8_16.c"
  9439 ;; Parameters:    Size  Location     Type
  9440 ;;  multiplier      1    wreg     unsigned char 
  9441 ;;  multiplicand    1    0[COMMON] unsigned char 
  9442 ;; Auto vars:     Size  Location     Type
  9443 ;;  multiplier      1    8[COMMON] unsigned char 
  9444 ;;  word_mpld       2    6[COMMON] unsigned short 
  9445 ;;  product         2    4[COMMON] unsigned short 
  9446 ;; Return value:  Size  Location     Type
  9447 ;;                  2    0[COMMON] unsigned int 
  9448 ;; Registers used:
  9449 ;;		wreg, status,2, status,0
  9450 ;; Tracked objects:
  9451 ;;		On entry : 1F/0
  9452 ;;		On exit  : 1F/0
  9453 ;;		Unchanged: 1F/0
  9454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9455 ;;      Params:         2       0       0       0       0       0
  9456 ;;      Locals:         5       0       0       0       0       0
  9457 ;;      Temps:          2       0       0       0       0       0
  9458 ;;      Totals:         9       0       0       0       0       0
  9459 ;;Total ram usage:        9 bytes
  9460 ;; Hardware stack levels used: 1
  9461 ;; This function calls:
  9462 ;;		Nothing
  9463 ;; This function is called by:
  9464 ;;		___flmul
  9465 ;; This function uses a non-reentrant model
  9466 ;;
  9467                           
  9468     0CE0                     __Umul8_16:	
  9469                           ;psect for function __Umul8_16
  9470                           
  9471                           
  9472                           ;incstack = 0
  9473                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  9474                           ;__Umul8_16@multiplier stored from wreg
  9475     0CE0  00F8               	movwf	__Umul8_16@multiplier
  9476     0CE1  01F4               	clrf	__Umul8_16@product
  9477     0CE2  01F5               	clrf	__Umul8_16@product+1
  9478     0CE3  0870               	movf	__Umul8_16@multiplicand,w
  9479     0CE4  00F2               	movwf	??__Umul8_16
  9480     0CE5  01F3               	clrf	??__Umul8_16+1
  9481     0CE6  0872               	movf	??__Umul8_16,w
  9482     0CE7  00F6               	movwf	__Umul8_16@word_mpld
  9483     0CE8  0873               	movf	??__Umul8_16+1,w
  9484     0CE9  00F7               	movwf	__Umul8_16@word_mpld+1
  9485     0CEA                     i1l2292:
  9486     0CEA  1C78               	btfss	__Umul8_16@multiplier,0
  9487     0CEB  2CF0               	goto	i1l1336
  9488     0CEC  0876               	movf	__Umul8_16@word_mpld,w
  9489     0CED  07F4               	addwf	__Umul8_16@product,f
  9490     0CEE  0877               	movf	__Umul8_16@word_mpld+1,w
  9491     0CEF  3DF5               	addwfc	__Umul8_16@product+1,f
  9492     0CF0                     i1l1336:
  9493     0CF0  3001               	movlw	1
  9494     0CF1                     u158_25:
  9495     0CF1  35F6               	lslf	__Umul8_16@word_mpld,f
  9496     0CF2  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  9497     0CF3  0B89               	decfsz	9,f
  9498     0CF4  2CF1               	goto	u158_25
  9499     0CF5  1003               	clrc
  9500     0CF6  0CF8               	rrf	__Umul8_16@multiplier,f
  9501     0CF7  0878               	movf	__Umul8_16@multiplier,w
  9502     0CF8  1D03               	btfss	3,2
  9503     0CF9  2CEA               	goto	i1l2292
  9504     0CFA  0875               	movf	__Umul8_16@product+1,w
  9505     0CFB  00F1               	movwf	?__Umul8_16+1
  9506     0CFC  0874               	movf	__Umul8_16@product,w
  9507     0CFD  00F0               	movwf	?__Umul8_16
  9508     0CFE  0008               	return
  9509     0CFF                     __end_of__Umul8_16:
  9510                           
  9511                           	psect	text53
  9512     0B92                     __ptext53:	
  9513 ;; *************** function _TMR1_Reload *****************
  9514 ;; Defined at:
  9515 ;;		line 146 in file "mcc_generated_files/tmr1.c"
  9516 ;; Parameters:    Size  Location     Type
  9517 ;;		None
  9518 ;; Auto vars:     Size  Location     Type
  9519 ;;		None
  9520 ;; Return value:  Size  Location     Type
  9521 ;;                  1    wreg      void 
  9522 ;; Registers used:
  9523 ;;		wreg, status,2, status,0, pclath, cstack
  9524 ;; Tracked objects:
  9525 ;;		On entry : 1F/0
  9526 ;;		On exit  : 1F/0
  9527 ;;		Unchanged: 0/0
  9528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9529 ;;      Params:         0       0       0       0       0       0
  9530 ;;      Locals:         0       0       0       0       0       0
  9531 ;;      Temps:          0       0       0       0       0       0
  9532 ;;      Totals:         0       0       0       0       0       0
  9533 ;;Total ram usage:        0 bytes
  9534 ;; Hardware stack levels used: 1
  9535 ;; Hardware stack levels required when called: 1
  9536 ;; This function calls:
  9537 ;;		_TMR1_WriteTimer
  9538 ;; This function is called by:
  9539 ;;		_mede_height
  9540 ;; This function uses a non-reentrant model
  9541 ;;
  9542                           
  9543     0B92                     _TMR1_Reload:	
  9544                           ;psect for function _TMR1_Reload
  9545                           
  9546                           
  9547                           ;mcc_generated_files/tmr1.c: 148:     TMR1_WriteTimer(timer1ReloadVal);
  9548                           
  9549                           ;incstack = 0
  9550                           ; Regs used in _TMR1_Reload: [wreg+status,2+status,0+pclath+cstack]
  9551     0B92  0021               	movlb	1	; select bank1
  9552     0B93  0844               	movf	(_timer1ReloadVal+1)^(0+128),w	;volatile
  9553     0B94  00F1               	movwf	TMR1_WriteTimer@timerVal+1
  9554     0B95  0843               	movf	_timer1ReloadVal^(0+128),w	;volatile
  9555     0B96  00F0               	movwf	TMR1_WriteTimer@timerVal
  9556     0B97  318C  2416         	fcall	_TMR1_WriteTimer
  9557     0B99  0008               	return
  9558     0B9A                     __end_of_TMR1_Reload:
  9559                           
  9560                           	psect	text54
  9561     0C16                     __ptext54:	
  9562 ;; *************** function _TMR1_WriteTimer *****************
  9563 ;; Defined at:
  9564 ;;		line 124 in file "mcc_generated_files/tmr1.c"
  9565 ;; Parameters:    Size  Location     Type
  9566 ;;  timerVal        2    0[COMMON] unsigned short 
  9567 ;; Auto vars:     Size  Location     Type
  9568 ;;		None
  9569 ;; Return value:  Size  Location     Type
  9570 ;;                  1    wreg      void 
  9571 ;; Registers used:
  9572 ;;		wreg
  9573 ;; Tracked objects:
  9574 ;;		On entry : 1F/1
  9575 ;;		On exit  : 1F/0
  9576 ;;		Unchanged: 0/0
  9577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9578 ;;      Params:         2       0       0       0       0       0
  9579 ;;      Locals:         0       0       0       0       0       0
  9580 ;;      Temps:          0       0       0       0       0       0
  9581 ;;      Totals:         2       0       0       0       0       0
  9582 ;;Total ram usage:        2 bytes
  9583 ;; Hardware stack levels used: 1
  9584 ;; This function calls:
  9585 ;;		Nothing
  9586 ;; This function is called by:
  9587 ;;		_TMR1_Reload
  9588 ;; This function uses a non-reentrant model
  9589 ;;
  9590                           
  9591     0C16                     _TMR1_WriteTimer:	
  9592                           ;psect for function _TMR1_WriteTimer
  9593                           
  9594                           
  9595                           ;mcc_generated_files/tmr1.c: 124: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 125: {;mcc_generated_files/tmr1.c: 126:     if (T1CONbits.nT1SYNC == 1)
  9596                           
  9597                           ;incstack = 0
  9598                           ; Regs used in _TMR1_WriteTimer: [wreg]
  9599     0C16  0020               	movlb	0	; select bank0
  9600     0C17  1D18               	btfss	24,2	;volatile
  9601     0C18  2C20               	goto	i1l2286
  9602                           
  9603                           ;mcc_generated_files/tmr1.c: 127:     {;mcc_generated_files/tmr1.c: 129:         T1CONbi
      +                          ts.TMR1ON = 0;
  9604     0C19  1018               	bcf	24,0	;volatile
  9605                           
  9606                           ;mcc_generated_files/tmr1.c: 132:         TMR1H = (uint8_t)(timerVal >> 8);
  9607     0C1A  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  9608     0C1B  0097               	movwf	23	;volatile
  9609                           
  9610                           ;mcc_generated_files/tmr1.c: 133:         TMR1L = (uint8_t)timerVal;
  9611     0C1C  0870               	movf	TMR1_WriteTimer@timerVal,w
  9612     0C1D  0096               	movwf	22	;volatile
  9613                           
  9614                           ;mcc_generated_files/tmr1.c: 136:         T1CONbits.TMR1ON =1;
  9615     0C1E  1418               	bsf	24,0	;volatile
  9616                           
  9617                           ;mcc_generated_files/tmr1.c: 137:     }
  9618     0C1F  0008               	return
  9619     0C20                     i1l2286:
  9620                           
  9621                           ;mcc_generated_files/tmr1.c: 139:     {;mcc_generated_files/tmr1.c: 141:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
  9622     0C20  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  9623     0C21  0097               	movwf	23	;volatile
  9624                           
  9625                           ;mcc_generated_files/tmr1.c: 142:         TMR1L = (uint8_t)timerVal;
  9626     0C22  0870               	movf	TMR1_WriteTimer@timerVal,w
  9627     0C23  0096               	movwf	22	;volatile
  9628     0C24  0008               	return
  9629     0C25                     __end_of_TMR1_WriteTimer:
  9630                           
  9631                           	psect	text55
  9632     0C60                     __ptext55:	
  9633 ;; *************** function _TMR1_ReadTimer *****************
  9634 ;; Defined at:
  9635 ;;		line 109 in file "mcc_generated_files/tmr1.c"
  9636 ;; Parameters:    Size  Location     Type
  9637 ;;		None
  9638 ;; Auto vars:     Size  Location     Type
  9639 ;;  readVal         2    7[COMMON] unsigned short 
  9640 ;;  readValLow      1   10[COMMON] unsigned char 
  9641 ;;  readValHigh     1    9[COMMON] unsigned char 
  9642 ;; Return value:  Size  Location     Type
  9643 ;;                  2    0[COMMON] unsigned short 
  9644 ;; Registers used:
  9645 ;;		wreg
  9646 ;; Tracked objects:
  9647 ;;		On entry : 1F/0
  9648 ;;		On exit  : 1F/0
  9649 ;;		Unchanged: 0/0
  9650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9651 ;;      Params:         2       0       0       0       0       0
  9652 ;;      Locals:         4       0       0       0       0       0
  9653 ;;      Temps:          5       0       0       0       0       0
  9654 ;;      Totals:        11       0       0       0       0       0
  9655 ;;Total ram usage:       11 bytes
  9656 ;; Hardware stack levels used: 1
  9657 ;; This function calls:
  9658 ;;		Nothing
  9659 ;; This function is called by:
  9660 ;;		_mede_height
  9661 ;; This function uses a non-reentrant model
  9662 ;;
  9663                           
  9664     0C60                     _TMR1_ReadTimer:	
  9665                           ;psect for function _TMR1_ReadTimer
  9666                           
  9667                           
  9668                           ;mcc_generated_files/tmr1.c: 111:     uint16_t readVal;;mcc_generated_files/tmr1.c: 112:
      +                               uint8_t readValHigh;;mcc_generated_files/tmr1.c: 113:     uint8_t readValLow;;mcc_g
      +                          enerated_files/tmr1.c: 116:     readValLow = TMR1L;
  9669                           
  9670                           ;incstack = 0
  9671                           ; Regs used in _TMR1_ReadTimer: [wreg]
  9672     0C60  0816               	movf	22,w	;volatile
  9673     0C61  00FA               	movwf	TMR1_ReadTimer@readValLow
  9674                           
  9675                           ;mcc_generated_files/tmr1.c: 117:     readValHigh = TMR1H;
  9676     0C62  0817               	movf	23,w	;volatile
  9677     0C63  00F9               	movwf	TMR1_ReadTimer@readValHigh
  9678                           
  9679                           ;mcc_generated_files/tmr1.c: 119:     readVal = ((uint16_t)readValHigh << 8) | readValLo
      +                          w;
  9680     0C64  087A               	movf	TMR1_ReadTimer@readValLow,w
  9681     0C65  00F2               	movwf	??_TMR1_ReadTimer
  9682     0C66  01F3               	clrf	??_TMR1_ReadTimer+1
  9683     0C67  0879               	movf	TMR1_ReadTimer@readValHigh,w
  9684     0C68  00F4               	movwf	??_TMR1_ReadTimer+2
  9685     0C69  01F5               	clrf	??_TMR1_ReadTimer+3
  9686     0C6A  0874               	movf	??_TMR1_ReadTimer+2,w
  9687     0C6B  00F5               	movwf	??_TMR1_ReadTimer+3
  9688     0C6C  01F4               	clrf	??_TMR1_ReadTimer+2
  9689     0C6D  0872               	movf	??_TMR1_ReadTimer,w
  9690     0C6E  0474               	iorwf	??_TMR1_ReadTimer+2,w
  9691     0C6F  00F7               	movwf	TMR1_ReadTimer@readVal
  9692     0C70  0873               	movf	??_TMR1_ReadTimer+1,w
  9693     0C71  0475               	iorwf	??_TMR1_ReadTimer+3,w
  9694     0C72  00F8               	movwf	TMR1_ReadTimer@readVal+1
  9695                           
  9696                           ;mcc_generated_files/tmr1.c: 121:     return readVal;
  9697     0C73  0878               	movf	TMR1_ReadTimer@readVal+1,w
  9698     0C74  00F1               	movwf	?_TMR1_ReadTimer+1
  9699     0C75  0877               	movf	TMR1_ReadTimer@readVal,w
  9700     0C76  00F0               	movwf	?_TMR1_ReadTimer
  9701     0C77  0008               	return
  9702     0C78                     __end_of_TMR1_ReadTimer:
  9703                           
  9704                           	psect	text56
  9705     0003                     __ptext56:	
  9706 ;; *************** function _PIN_MANAGER_IOC *****************
  9707 ;; Defined at:
  9708 ;;		line 98 in file "mcc_generated_files/pin_manager.c"
  9709 ;; Parameters:    Size  Location     Type
  9710 ;;		None
  9711 ;; Auto vars:     Size  Location     Type
  9712 ;;		None
  9713 ;; Return value:  Size  Location     Type
  9714 ;;                  1    wreg      void 
  9715 ;; Registers used:
  9716 ;;		None
  9717 ;; Tracked objects:
  9718 ;;		On entry : 0/0
  9719 ;;		On exit  : 0/0
  9720 ;;		Unchanged: 0/0
  9721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9722 ;;      Params:         0       0       0       0       0       0
  9723 ;;      Locals:         0       0       0       0       0       0
  9724 ;;      Temps:          0       0       0       0       0       0
  9725 ;;      Totals:         0       0       0       0       0       0
  9726 ;;Total ram usage:        0 bytes
  9727 ;; Hardware stack levels used: 1
  9728 ;; This function calls:
  9729 ;;		Nothing
  9730 ;; This function is called by:
  9731 ;;		_INTERRUPT_InterruptManager
  9732 ;; This function uses a non-reentrant model
  9733 ;;
  9734                           
  9735     0003                     _PIN_MANAGER_IOC:	
  9736                           ;psect for function _PIN_MANAGER_IOC
  9737                           
  9738                           
  9739                           ;incstack = 0
  9740                           ; Regs used in _PIN_MANAGER_IOC: []
  9741     0003  0008               	return
  9742     0004                     __end_of_PIN_MANAGER_IOC:
  9743     007E                     btemp	set	126	;btemp
  9744     007E                     int$flags	set	126
  9745     007E                     wtemp0	set	126
  9746                           
  9747                           	psect	config
  9748                           
  9749                           ;Config register CONFIG1 @ 0x8007
  9750                           ;	Oscillator Selection
  9751                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  9752                           ;	Watchdog Timer Enable
  9753                           ;	WDTE = OFF, WDT disabled
  9754                           ;	Power-up Timer Enable
  9755                           ;	PWRTE = OFF, PWRT disabled
  9756                           ;	MCLR Pin Function Select
  9757                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  9758                           ;	Flash Program Memory Code Protection
  9759                           ;	CP = OFF, Program memory code protection is disabled
  9760                           ;	Data Memory Code Protection
  9761                           ;	CPD = OFF, Data memory code protection is disabled
  9762                           ;	Brown-out Reset Enable
  9763                           ;	BOREN = ON, Brown-out Reset enabled
  9764                           ;	Clock Out Enable
  9765                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  9766                           ;	Internal/External Switchover
  9767                           ;	IESO = ON, Internal/External Switchover mode is enabled
  9768                           ;	Fail-Safe Clock Monitor Enable
  9769                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  9770     8007                     	org	32775
  9771     8007  3FE4               	dw	16356
  9772                           
  9773                           ;Config register CONFIG2 @ 0x8008
  9774                           ;	Flash Memory Self-Write Protection
  9775                           ;	WRT = OFF, Write protection off
  9776                           ;	PLL Enable
  9777                           ;	PLLEN = OFF, 4x PLL disabled
  9778                           ;	Stack Overflow/Underflow Reset Enable
  9779                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  9780                           ;	Brown-out Reset Voltage Selection
  9781                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  9782                           ;	In-Circuit Debugger Mode
  9783                           ;	DEBUG = 0x1, unprogrammed default
  9784                           ;	Low-Voltage Programming Enable
  9785                           ;	LVP = ON, Low-voltage programming enabled
  9786     8008                     	org	32776
  9787     8008  3EFF               	dw	16127

Data Sizes:
    Strings     0
    Constant    204
    Data        22
    BSS         68
    Persistent  40
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     51      80
    BANK1            80     34      79
    BANK2            80      0      24
    BANK3            80      0       0
    BANK4            32      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), NULL(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), NULL(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), NULL(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    TMR1_GateInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> mede_height(), TMR1_DefaultGateInterruptHandler(), NULL(), 

    TMR1_SetGateInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> mede_height(), TMR1_DefaultGateInterruptHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _mede_height->___flmul
    i1___fltol->___flmul
    ___flmul->__Umul8_16
    _TMR1_Reload->_TMR1_WriteTimer

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _TMR1_GATE_ISR->_mede_height
    _mede_height->___xxtofl
    i1___fltol->___flmul
    ___xxtofl->i1___fltol

Critical Paths under _main in BANK1

    _setaPorta->_daUmPasso
    _fluxpos->_daUmPasso
    _daUmPasso->_definePassoMotor
    _envia_Tx->___fltol
    _controlchoose->_pwmcontrol
    _pwmcontrol->___atdiv
    ___atdiv->___tmul
    _fluxcontrol->___tmul
    _analisa_Rx->_EPWM1_LoadDutyValue
    _TMR1_Initialize->_TMR1_SetGateInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    5463
                                             33 BANK1      1     1      0
                  _ADC_GetConversion
                        _EUSART_Read
                 _EUSART_is_rx_ready
                  _SYSTEM_Initialize
                     _TMR0_ReadTimer
       _TMR1_SetGateInterruptHandler
                     _TMR4_StopTimer
            _TMR6_LoadPeriodRegister
                    _TMR6_WriteTimer
                         _analisa_Rx
                      _controlchoose
                           _envia_Tx
                            _fluxpos
                          _setaPorta
 ---------------------------------------------------------------------------------
 (1) _setaPorta                                            1     1      0     306
                                              4 BANK1      1     1      0
               _CMP1_GetOutputStatus
                          _daUmPasso
 ---------------------------------------------------------------------------------
 (2) _CMP1_GetOutputStatus                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _fluxpos                                              0     0      0     306
                          _daUmPasso
 ---------------------------------------------------------------------------------
 (2) _daUmPasso                                            1     1      0     306
                                              3 BANK1      1     1      0
                   _definePassoMotor
 ---------------------------------------------------------------------------------
 (3) _definePassoMotor                                     3     2      1     240
                                              0 BANK1      3     2      1
 ---------------------------------------------------------------------------------
 (1) _envia_Tx                                             0     0      0     427
                       _EUSART_Write
                            ___fltol
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     405
                                              0 BANK1     10     6      4
 ---------------------------------------------------------------------------------
 (2) _EUSART_Write                                         1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _controlchoose                                        0     0      0    3421
                    _TMR4_StartTimer
                        _fluxcontrol
                         _pwmcontrol
 ---------------------------------------------------------------------------------
 (2) _pwmcontrol                                          12    12      0    2281
                                             21 BANK1     12    12      0
                _EPWM1_LoadDutyValue
                            ___atdiv
                            ___lwdiv
                             ___tmul
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     414
                                              0 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (3) ___atdiv                                             12     6      6     452
                                              9 BANK1     12     6      6
                             ___tmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _fluxcontrol                                          6     6      0    1140
                                              9 BANK1      6     6      0
                             ___tmul
 ---------------------------------------------------------------------------------
 (3) ___tmul                                               9     3      6    1140
                                              0 BANK1      9     3      6
 ---------------------------------------------------------------------------------
 (2) _TMR4_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _analisa_Rx                                           0     0      0     272
                _EPWM1_LoadDutyValue
 ---------------------------------------------------------------------------------
 (3) _EPWM1_LoadDutyValue                                  4     2      2     272
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (1) _TMR6_WriteTimer                                      1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _TMR6_LoadPeriodRegister                              1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _TMR4_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR0_ReadTimer                                       1     1      0      23
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     468
                     _ADC_Initialize
                    _CMP1_Initialize
                     _DAC_Initialize
                   _EPWM1_Initialize
                  _EUSART_Initialize
                     _FVR_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
                    _TMR6_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     174
       _TMR1_SetGateInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetGateInterruptHandler                         2     0      2     174
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     294
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _EPWM1_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DAC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CMP1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_is_rx_ready                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Read                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion                                    4     2      2      22
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0    3622
                    _PIN_MANAGER_IOC
                      _TMR1_GATE_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR1_GATE_ISR                                        0     0      0    3622
                                NULL *
   _TMR1_DefaultGateInterruptHandler *
                        _mede_height *
 ---------------------------------------------------------------------------------
 (6) _mede_height                                          6     6      0    3622
                                             45 BANK0      6     6      0
                     _TMR1_ReadTimer
                        _TMR1_Reload
                            ___flmul
                           ___xxtofl
                          i1___fltol
                          i1___lwdiv
 ---------------------------------------------------------------------------------
 (7) i1___lwdiv                                            8     4      4     214
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (7) i1___fltol                                           10     6      4     281
                                             21 BANK0     10     6      4
                            ___flmul (ARG)
                          i1___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (7) ___xxtofl                                            14    10      4     474
                                             31 BANK0     14    10      4
                          i1___fltol (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flmul                                             26    18      8    2418
                                              9 COMMON     5     5      0
                                              0 BANK0     21    13      8
                          __Umul8_16
                          i1___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (8) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (7) _TMR1_Reload                                          0     0      0     166
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (8) _TMR1_WriteTimer                                      2     0      2     166
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (7) _TMR1_ReadTimer                                      11     9      2      69
                                              0 COMMON    11     9      2
 ---------------------------------------------------------------------------------
 (6) _TMR1_DefaultGateInterruptHandler                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _PIN_MANAGER_IOC                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion
   _EUSART_Read
   _EUSART_is_rx_ready
   _SYSTEM_Initialize
     _ADC_Initialize
     _CMP1_Initialize
     _DAC_Initialize
     _EPWM1_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _FVR_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
     _TMR1_Initialize
       _TMR1_SetGateInterruptHandler
     _TMR2_Initialize
     _TMR4_Initialize
     _TMR6_Initialize
     _WDT_Initialize
   _TMR0_ReadTimer
   _TMR1_SetGateInterruptHandler
   _TMR4_StopTimer
   _TMR6_LoadPeriodRegister
   _TMR6_WriteTimer
   _analisa_Rx
     _EPWM1_LoadDutyValue
   _controlchoose
     _TMR4_StartTimer
     _fluxcontrol
       ___tmul
     _pwmcontrol
       _EPWM1_LoadDutyValue
       ___atdiv
         ___tmul (ARG)
       ___lwdiv
       ___tmul
   _envia_Tx
     _EUSART_Write
     ___fltol
   _fluxpos
     _daUmPasso
       _definePassoMotor
   _setaPorta
     _CMP1_GetOutputStatus
     _daUmPasso

 _INTERRUPT_InterruptManager (ROOT)
   _PIN_MANAGER_IOC
   _TMR1_GATE_ISR
     NULL(Fake) *
     _TMR1_DefaultGateInterruptHandler *
     _mede_height *
       _TMR1_ReadTimer
       _TMR1_Reload
         _TMR1_WriteTimer
       ___flmul
         __Umul8_16
         i1___lwdiv (ARG)
       ___xxtofl
         i1___fltol (ARG)
           ___flmul (ARG)
           i1___lwdiv (ARG)
       i1___fltol
       i1___lwdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             160      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      C5       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     33      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     22      4F       8       98.8%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      18      10       30.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            20      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               20      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      C5      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Mon Sep 09 15:23:05 2024

                            ??_CMP1_Initialize 00CD                               ___atdiv@quotient 00DF  
                                           _dc 00BB                         __end_of_FVR_Initialize 0B51  
                              _timer0ReloadVal 0069                            __Umul8_16@word_mpld 0076  
                                          l240 0BFC                                            l333 0C8A  
                                          l247 0BCB                                            l711 0E3C  
                                          l623 0CBF                                            l705 0E38  
                                          l714 0E3E                                            l723 0E43  
                                          l671 0E14                                            l655 0E0B  
                                          l665 0E10                                            l586 0453  
                                          l674 0E16                                            l683 0E1B  
                                          l695 0E33                                            l689 0E1F  
                                          _PR2 001B                                            _PR4 0416  
                                          _PR6 041D                                _timer1ReloadVal 00C3  
                                          _kdf 012C                                            _kif 012F  
                                          _kdp 0123                                            _kip 0126  
                                          _kpf 006A                                            _vRx 00BD  
                                          _vTx 00BF                                            _kpp 0129  
               ?_EUSART_SetFramingErrorHandler 00CD                                   i1___fltol@f1 0035  
                                 ?_mede_height 0070                                _TMR2_Initialize 0BC2  
                                          wreg 0009                                   ___flmul@aexp 0029  
                                 ___flmul@bexp 002E       __end_of_TMR1_DefaultGateInterruptHandler 0800  
           ??_TMR1_DefaultGateInterruptHandler 0070              ?_TMR1_DefaultGateInterruptHandler 0070  
             _TMR1_DefaultGateInterruptHandler 07FF                                   ___flmul@sign 0028  
                                 ___flmul@temp 0033                                   ___flmul@prod 002F  
                                 ?_EUSART_Read 0070                                   ___fltol@exp1 00D6  
                                         l1121 0F06                                           l1037 0F2F  
                                         l3000 0C34                                           l3012 0548  
                                         l3020 055A                                           l3004 0528  
                                         l3100 06B7                                           l3022 055D  
                                         l3120 06D7                                           l3042 05D2  
                                         l3050 05D9                                           l2410 0DC3  
                                         l2402 0DA5                                           l3122 06E2  
                                         l3130 06CD                                           l3028 058B  
                                         l2340 0D49                                           l2404 0DB1  
                                         l2332 0E49                                           l2324 0E21  
                                         l3132 06F4                                           l3140 0701  
                                         l3108 06C1                                           l2414 0DCC  
                                         l2334 0E57                                           l2326 0E2F  
                                         l2344 0D51                                           l2370 0F4A  
                                         l2362 0F3D                                           l2380 0F70  
                                         l2372 0F57                                           l3156 0715  
                                         l2800 043A                                           l2384 0F7A  
                                         l3176 073C                                           l3168 072C  
                                         l2802 0441                                           l2810 026D  
                                         l2388 0F85                                           l2812 0278  
                                         l2830 0337                                           l2822 02C2  
                                         l2832 033D                                           l2840 035A  
                                         l2816 02A9                                           l2904 0EF4  
                                         l2842 0365                                           l2826 0328  
                                         l2818 02B0                                           l2914 0F13  
                                         l2906 0F02                                           l2940 0C06  
                                         l2844 036C                                           l2828 032A  
                                         l2790 041B                                           l2862 0D13  
                                         l2792 041F                                           l2784 03C7  
                                         l2848 037E                                           l2864 0D19  
                                         l2786 03D2                                           l2858 0D0C  
                                         l2970 0DE2                                           l2884 0EC8  
                                         l2798 042F                                           l2974 0DEE  
                                         l2888 0ED1                                           l2978 0DFA  
                                         l2996 0C2D                                           l2988 0CAB  
                                         _LATA 010C                                           _LATB 010D  
                                         u2411 039B                                           u2412 039C  
                                         u1605 0CD5                                           u2413 03A5  
                                         u3117 0728                                           u2414 03A6  
                                         u3127 0CB9                                           u3137 0C85  
                                         u1705 0F4D                                           u1645 0D52  
                                         u1725 0F58                                           u1805 0DB2  
                                         u1655 0D58                                           u1735 0F67  
                                         u1815 0DBC                                           u2535 02EB  
                                         u1745 0F71                                           u1825 0DC4  
                                         u2481 0250                                           u2482 0251  
                                         u2483 025A                                           u2715 0F0A  
                                         u2484 025B                                           u2805 0DE8  
                                         u2655 0EDA                                           u2815 0DF4  
                                         u1785 0DA8                                           u2825 0E00  
                                         u2685 0EF5                                           u2960 06B5  
                                         u2795 0DDC                                           _TMR0 0015  
                                         _TMR2 001A                                           _TMR4 0415  
                                         _TMR6 041C                                           _WPUA 020C  
                                         _WPUB 020D                              ??_TMR6_WriteTimer 00CD  
                ?_TMR1_SetGateInterruptHandler 00CD                                           _main 06A3  
                                         _flux 005B                                           fsr0h 0005  
                                         fsr1h 0007                                           indf0 0000  
                                         fsr0l 0004                                           indf1 0001  
                                         fsr1l 0006                                           btemp 007E  
                                         start 0019                          ??_EPWM1_LoadDutyValue 00CF  
                      __end_of_TMR0_Initialize 0BDD                                ?_FVR_Initialize 0070  
                                ?_EUSART_Write 0070                  __end_of_OSCILLATOR_Initialize 0B92  
                                ___fltol@sign1 00D5                                          ?_main 0070  
                              __end_of___atdiv 0F8C                                __end_of___flmul 0242  
                              __end_of___fltol 0F22                                          _T1CON 0018  
                                        _T2CON 001C                                          _T4CON 0417  
                                        _T6CON 041E                                __end_of___lwdiv 0DD1  
                                        i1l180 0017                                          i1l174 000D  
                                        _RCREG 0199                                          _RCSTA 019D  
                                        _TMR1H 0017                                          _TMR1L 0016  
                                        _TRISA 008C                                          _TRISB 008D  
                                 ?_fluxcontrol 0070                                          _TXREG 019A  
                                        _TXSTA 019E                                _TMR4_Initialize 0BDD  
                      __end_of_PIN_MANAGER_IOC 0004                                 _WDT_Initialize 0B51  
                                        _error 00B0                      ??_TMR6_LoadPeriodRegister 00CD  
                                        _passo 00C7                                __end_of_fluxpos 0E06  
                                _controlchoice 00CB                                  _controlchoose 0C25  
                      __end_of_TMR1_Initialize 0CAB                                          pclath 000A  
                               i1___fltol@exp1 003E                                          status 0003  
                                        wtemp0 007E                               daUmPasso@sentido 00D0  
                              _TMR1_WriteTimer 0C16                               ??_DAC_Initialize 00CD  
                 __end_of_CMP1_GetOutputStatus 0B59                                __initialization 001B  
                                 __end_of_main 0742                                 ??_EUSART_Write 00CD  
                      __end_of_TMR2_Initialize 0BCA                    ?_INTERRUPT_InterruptManager 0070  
                                       ??_main 00EE                         __end_of_WDT_Initialize 0B55  
                              _TMR6_Initialize 0BE7              _EUSART_DefaultFramingErrorHandler 0000  
                                       _ADCON0 009D                                         _ADCON1 009E  
                   _EUSART_OverrunErrorHandler 0134                                 ?_controlchoose 0070  
                                       _ADRESH 009C                                         _ADRESL 009B  
                                       _CCPR1H 0292                                         _CCPR1L 0291  
                                       _ANSELA 018C                                         _ANSELB 018D  
                   __end_of_EUSART_is_rx_ready 0B62                                         _BORCON 0116  
                                       _T1GCON 0019                                         i1l1121 0EA5  
                      TMR1_WriteTimer@timerVal 0070                                         i1l1336 0CF0  
                                       i1l1329 0235                                         i1l1361 075F  
                                       i1l1374 07A7                                         i1l1375 07B1  
                                       i1l1367 0793                                         i1l2432 005B  
                                       i1l2522 01CF                                         i1l2514 01A1  
                                       i1l2450 007C                                         i1l2434 005D  
                                       i1l2292 0CEA                                         i1l2540 020F  
                                       i1l2516 01B8                                         i1l2452 007E  
                                       i1l2436 0065                                         i1l2604 0E67  
                                       i1l2286 0C20                                         i1l2526 01D1  
                                       i1l2462 0094                                         i1l2454 0086  
                                       i1l2536 01FA                                         i1l2624 0E93  
                                       i1l2608 0E70                                         i1l2546 0226  
                                       i1l2570 076E                                         i1l2634 0EB2  
                                       i1l2626 0EA1                                         i1l2650 0D7D  
                                       i1l2564 0757                                         i1l2660 0D98  
                                       i1l2574 0770                                         i1l2584 07A5  
                                       i1l2576 0780                                         i1l2656 0D8F  
                                       i1l2648 0D71                                         i1l2586 0798  
                                       i1l2598 07CC                                         i1l2876 0612  
                                       u220_25 07B9                                         u212_25 0779  
                                       i1l2878 064E                                         u205_25 01E8  
                                       u206_25 0203                                         u214_25 078D  
                                       u230_25 0EA9                                         u207_25 0219  
                                       u216_25 079F                                         u224_25 0E79  
                                       u234_25 0D74                                         _FVRCON 0117  
                                       u227_25 0E94                                         u236_25 0D7E  
                                       u237_25 0D88                                         u158_25 0CF1  
                                       u238_25 0D90                                         u192_25 0101  
                                       u193_25 012A                                         u194_25 0174  
                                       u195_25 0190                                         u196_25 01A4  
                                       u198_25 01AD                                         _OSCCON 0099  
                                       _SPBRGH 019C                                         _SPBRGL 019B  
                                       _WDTCON 0097                               __end_of___xxtofl 07D5  
                              _TMR4_StartTimer 0B4A                          __end_of_TMR1_GATE_ISR 0BFC  
               ??_TMR1_SetGateInterruptHandler 00CF                                   _CCPTMRS0bits 029E  
                                 ?_TMR1_Reload 0070                                         ___tmul 0D43  
                                    ??___atdiv 00DC                                      ??___flmul 0079  
                                    ??___fltol 00D1                               __end_of_envia_Tx 1000  
                                    ??___lwdiv 00D1                                         _height 00B3  
                             ?_TMR0_Initialize 0070                                         _errorp 00AD  
                      __end_of_TMR4_Initialize 0BE7                                         _outpre 00A4  
                                       _output 00C1                              __end_ofi1___fltol 0EC1  
                            __end_ofi1___lwdiv 0D9D                                      ??_fluxpos 00D1  
                              ?_WDT_Initialize 0070                                i1___fltol@sign1 003D  
                     ADC_GetConversion@channel 00D0   TMR1_SetGateInterruptHandler@InterruptHandler 00CD  
                             ?_PIN_MANAGER_IOC 0070                        __end_of_TMR1_WriteTimer 0C25  
                             ?_TMR1_Initialize 0070                                   ___xxtofl@arg 0049  
                                 ___xxtofl@exp 0048                              _SYSTEM_Initialize 07D5  
                                 ___xxtofl@val 003F                        __end_of__initialization 0042  
                              _CMP1_Initialize 0B67                             ?_SYSTEM_Initialize 0070  
                                   ___fltol@f1 00CD                              ?_EPWM1_Initialize 0070  
                               __pcstackCOMMON 0070                                   __pidataBANK0 0B59  
                                 __pidataBANK2 0C37                            ??_SYSTEM_Initialize 00CF  
                           ??_EPWM1_Initialize 00CD                               ?_TMR2_Initialize 0070  
                      __end_of_TMR6_Initialize 0BF1                                 _OPTION_REGbits 0095  
                              _TMR6_WriteTimer 0B79                                ??_controlchoose 00EE  
              ??_EUSART_SetOverrunErrorHandler 00CF                           _CMP1_GetOutputStatus 0B55  
                      __end_of_TMR4_StartTimer 0B4D                      __end_of_SYSTEM_Initialize 07FF  
                                   __pbssBANK0 0053                                     __pbssBANK1 00A0  
                         __end_of_EUSART_Write 0BD3                                     _analisa_Rx 0527  
                            __end_of__Umul8_16 0CFF                               ??_FVR_Initialize 00CD  
                                   __pmaintext 06A3                                        ?___tmul 00CD  
                                   __pintentry 0004                                        _DACCON0 0118  
                                      _DACCON1 0119                                        _CM1CON0 0111  
                                      _CM1CON1 0112                                        _CCP1CON 0293  
                                      _ECCP1AS 0295                                        _BAUDCON 019F  
                             ?_TMR4_Initialize 0070                              __end_of_daUmPasso 0D1F  
                                      _APFCON0 011D                                        _APFCON1 011E  
                             _definePassoMotor 0E06                                      ?___xxtofl 003F  
                        ?_CMP1_GetOutputStatus 0070                                        _OSCTUNE 0098  
                                      _PWM1CON 0294                        __end_of_CMP1_Initialize 0B6D  
                     ??_EUSART_SetErrorHandler 00CF                               ?_TMR1_WriteTimer 0070  
                       definePassoMotor@passom 00CF                                      ?_envia_Tx 0070  
                  __end_of_EPWM1_LoadDutyValue 0CE0                                     _first_read 006D  
                         _ADC_InterruptHandler 0065                                        ___atdiv 0F22  
                                      ___flmul 0046                                        ___fltol 0EC1  
                                      ___lwdiv 0D9D                        __end_of_TMR6_WriteTimer 0B7F  
                                      _ballset 005E                               ?_TMR6_Initialize 0070  
                     TMR1_ReadTimer@readValLow 007A                                        __ptext1 0CAB  
                                      __ptext2 0B55                                        __ptext3 0DD1  
                                      __ptext4 0CFF                                        __ptext5 0E06  
                                      __ptext6 0F8C                                        __ptext7 0EC1  
                                      __ptext8 0BCA                                        __ptext9 0C25  
                    TMR1_ReadTimer@readValHigh 0079                                      _T1CONbits 0018  
                                      _countRx 00CA                              i1___lwdiv@divisor 0070  
                        _OSCILLATOR_Initialize 0B8B                              i1___lwdiv@counter 0077  
                                      _fluxpos 0DD1                                     ??___xxtofl 0043  
                                    _CMOUTbits 0115                                      _T4CONbits 0417  
                     ??_PIN_MANAGER_Initialize 00CD                                        _sentido 0068  
                                      clrloop0 0B80                               ?_TMR4_StartTimer 0070  
                                   _passo_ctrl 00C5                           end_of_initialization 0042  
                                   ??_envia_Tx 00D7          __end_of_EUSART_SetOverrunErrorHandler 0BBA  
                _EUSART_SetOverrunErrorHandler 0BB2                              __end_of_setaPorta 0CC5  
                                      init_ram 0B85                                        initloop 0B86  
                                  ?_analisa_Rx 0070                              _EUSART_Initialize 0D1F  
                           ?_EUSART_Initialize 0070                          TMR0_ReadTimer@readVal 00CD  
                                    _RCSTAbits 019D                             _EUSART_is_rx_ready 0B5D  
                               _TMR0_ReadTimer 0B6D                            ??_EUSART_Initialize 00CF  
                             ??_WDT_Initialize 00CD                            ?_EUSART_is_rx_ready 0070  
                       ??_CMP1_GetOutputStatus 00CD                                 _TMR1_ReadTimer 0C60  
                     ?_TMR6_LoadPeriodRegister 0070                                  ___xxtofl@sign 0047  
                                    i1___fltol 0E60                                      i1___lwdiv 0D69  
                             ?_CMP1_Initialize 0070                                     _pwmcontrol 0242  
                                  ___flmul@grs 002A                      __end_of_EUSART_Initialize 0D43  
                         ??_EUSART_is_rx_ready 00CD                         __end_of_TMR0_ReadTimer 0B73  
                   _EUSART_DefaultErrorHandler 0000                               ?_TMR6_WriteTimer 0070  
                               __end_of___tmul 0D69                                   _EUSART_Write 0BCA  
                               _ADC_Initialize 0B9A                         ?_OSCILLATOR_Initialize 0070  
                       __end_of_TMR1_ReadTimer 0C78                                  ??_mede_height 004D  
                          start_initialization 001B                                  ??_EUSART_Read 00CD  
                                   ?i1___fltol 0035                                     ?i1___lwdiv 0070  
                 EPWM1_LoadDutyValue@dutyValue 00CD                       __end_of_definePassoMotor 0E60  
               ?_EUSART_SetOverrunErrorHandler 00CD                                 _TMR4_StopTimer 0B47  
                   _EUSART_FramingErrorHandler 0136                                ?_TMR0_ReadTimer 0070  
                                     ??___tmul 00D3                         _EUSART_SetErrorHandler 0BA2  
                       __end_of_ADC_Initialize 0BA2                                      __Umul8_16 0CE0  
                                  __pdataBANK0 006A                                    __pdataBANK2 0120  
              __end_of_TMR6_LoadPeriodRegister 0B79                                 ___tmul@product 00D3  
                              ?_TMR1_ReadTimer 0070                                  ??_fluxcontrol 00D6  
                                    ___flmul@a 0024                                      _daUmPasso 0CFF  
                                    ___flmul@b 0020                                      ___latbits 0001  
                                __pcstackBANK0 0020                                  __pcstackBANK1 00CD  
                        __end_of_controlchoose 0C37                            __end_of_mede_height 06A3  
                                  ?_pwmcontrol 0070                            __end_of_EUSART_Read 0C08  
                                    __pnvBANK0 006E                                      __pnvBANK2 0132  
                       __end_of_TMR4_StopTimer 0B4A                               ___lwdiv@dividend 00CF  
                       _PIN_MANAGER_Initialize 0C49                                  _TMR1_GATE_ISR 0BF1  
                                     ?___atdiv 00D6                                       ?___flmul 0020  
                                     ?___fltol 00CD                                     ?__Umul8_16 0070  
                                     ?___lwdiv 00CD                                ?_ADC_Initialize 0070  
                                    _fim_curso 00C6                   ??_INTERRUPT_InterruptManager 007E  
                                     ?_fluxpos 0070                                     ?_daUmPasso 0070  
                                    _nao_salva 00C8                                    ??i1___fltol 0039  
                             ___lwdiv@quotient 00D2                                    ??i1___lwdiv 0074  
                                    _func_mode 0067                            __end_of_fluxcontrol 045B  
                            ??_TMR0_Initialize 00CD                                       _LATAbits 010C  
       EUSART_SetErrorHandler@interruptHandler 00CD                                   ??_analisa_Rx 00D1  
                                    clear_ram0 0B7F                                       _PIE1bits 0091  
                            _eusartRxLastError 00CC                                ?_TMR4_StopTimer 0070  
                                    _setaPorta 0CAB                                 ?_TMR1_GATE_ISR 0070  
                                     _PIR1bits 0011                ??_EUSART_SetFramingErrorHandler 00CF  
                                     _PIR3bits 0013                                  ??_TMR1_Reload 0072  
                                    _sp_height 0063                                      _tempo_voo 0061  
            _EUSART_DefaultOverrunErrorHandler 0000                                       _PSTR1CON 0296  
                            ??_PIN_MANAGER_IOC 0070                      _TMR1_GateInterruptHandler 006E  
                            ??_TMR1_Initialize 00CF                                     _ADCON0bits 009D  
                               _DAC_Initialize 0B62                                    _mede_height 05E9  
                             _EPWM1_Initialize 0C08                        definePassoMotor@sentido 00CD  
                          ___tmul@multiplicand 00D0                                      _outputsum 00A7  
                           __end_of_analisa_Rx 05E9                                    _EUSART_Read 0BFC  
                            ??_TMR2_Initialize 00CD                            __end_of_lookupTable 0527  
                                   ?_setaPorta 0070                              _ADC_GetConversion 0C78  
                        TMR1_ReadTimer@readVal 0077                        ??_OSCILLATOR_Initialize 00CD  
                                  ??__Umul8_16 0072                            _EUSART_ErrorHandler 0132  
                           ?_ADC_GetConversion 00CD                         __end_of_DAC_Initialize 0B67  
                                     _adc_temp 00B5                            __end_of_TMR1_Reload 0B9A  
                                     _balldist 00AA                            ??_ADC_GetConversion 00CF  
                                     ___xxtofl 0742                                    ??_daUmPasso 00D0  
                                  _fluxcontrol 038D                                ___lwdiv@divisor 00CD  
                              ___lwdiv@counter 00D4                                       __ptext10 0242  
                                     __ptext11 0D9D                                       __ptext20 0B47  
                                     __ptext12 0F22                                       __ptext21 0B6D  
                                     __ptext13 038D                                       __ptext30 0C49  
                                     __ptext22 07D5                                       __ptext14 0D43  
                                     __ptext31 0B8B                                       __ptext23 0B51  
                                     __ptext15 0B4A                                       __ptext40 0B9A  
                                     __ptext32 0B4D                                       __ptext24 0BE7  
                                     __ptext16 0527                                       __ptext41 0B5D  
                                     __ptext33 0D1F                                       __ptext25 0BDD  
                                     __ptext17 0CC5                                       __ptext50 0742  
                                     __ptext42 0BFC                                       __ptext34 0BB2  
                                     __ptext26 0BC2                                       __ptext18 0B79  
                                     __ptext51 0046                                       __ptext43 0C78  
                                     __ptext35 0BAA                                       __ptext27 0C91  
                                     __ptext19 0B73                                       __ptext52 0CE0  
                                     __ptext36 0BA2                                       __ptext28 0BBA  
                                     __ptext53 0B92                                       __ptext45 0BF1  
                                     __ptext37 0C08                                       __ptext29 0BD3  
                                     __ptext54 0C16                                       __ptext46 07FF  
                                     __ptext38 0B62                                       __ptext55 0C60  
                                     __ptext47 05E9                                       __ptext39 0B67  
                                     __ptext56 0003                                       __ptext48 0D69  
                                     __ptext49 0E60                                       _bufferRx 0053  
                           i1___lwdiv@dividend 0072                                       _envia_Tx 0F8C  
                                     _count_Tx 00C9                        TMR6_WriteTimer@timerVal 00CD  
             TMR6_LoadPeriodRegister@periodVal 00CD                              ??_TMR4_Initialize 00CD  
                             ??_TMR0_ReadTimer 00CD                                ??_TMR1_GATE_ISR 007E  
                    __end_of_ADC_GetConversion 0C91                        ?_EUSART_SetErrorHandler 00CD  
                            ?_definePassoMotor 00CD  EUSART_SetOverrunErrorHandler@interruptHandler 00CD  
                           ??_definePassoMotor 00CE                               ??_TMR1_ReadTimer 0072  
                                     int$flags 007E                                       _position 00B9  
           __end_of_INTERRUPT_InterruptManager 0019                     _INTERRUPT_InterruptManager 0004  
        __end_of_EUSART_SetFramingErrorHandler 0BB2                  _EUSART_SetFramingErrorHandler 0BAA  
                              ?_DAC_Initialize 0070                              ??_TMR1_WriteTimer 0072  
                           i1___lwdiv@quotient 0075                                     _INTCONbits 000B  
                                _avg_tempo_voo 00A0                                   ??_pwmcontrol 00E2  
                                  _lookupTable 045B                                       intlevel1 0000  
                      ?_PIN_MANAGER_Initialize 0070                              ??_TMR6_Initialize 00CD  
               __end_of_EUSART_SetErrorHandler 0BAA                                    ??_setaPorta 00D1  
                             ??_ADC_Initialize 00CD                                    _TMR1_Reload 0B92  
                            ___tmul@multiplier 00CD  EUSART_SetFramingErrorHandler@interruptHandler 00CD  
                            ??_TMR4_StartTimer 00CD                                  __pstringtext1 045B  
                           __end_of_pwmcontrol 038D                                 _FVR_Initialize 0B4D  
                       __Umul8_16@multiplicand 0070                                     _OPTION_REG 0095  
                              _TMR0_Initialize 0BD3                                    _timecontrol 0120  
                          _EPWM1_LoadDutyValue 0CC5                               ___atdiv@dividend 00D9  
                           EUSART_Write@txData 00CD           __end_of_TMR1_SetGateInterruptHandler 0BC2  
                 _TMR1_SetGateInterruptHandler 0BBA                 __end_of_PIN_MANAGER_Initialize 0C60  
                             ??_TMR4_StopTimer 00CD                        _TMR6_LoadPeriodRegister 0B73  
                                  _sp_position 00B7                                ___atdiv@divisor 00D6  
                              _PIN_MANAGER_IOC 0003                           __Umul8_16@multiplier 0078  
                              ___atdiv@counter 00DD                                _TMR1_Initialize 0C91  
                     __end_of_EPWM1_Initialize 0C16                           ?_EPWM1_LoadDutyValue 00CD  
                            __Umul8_16@product 0074                                   ___atdiv@sign 00DE  
