

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Mon Sep 09 22:05:12 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og9 
     1                           	processor	16F1827
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     7                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,noexec
    10                           	psect	cinit,global,class=CODE,merge=1,delta=2
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    16                           	psect	inittext,global,class=CODE,delta=2
    17                           	psect	clrtext,global,class=CODE,delta=2
    18                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    19                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    21                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    22                           	psect	text1,local,class=CODE,merge=1,delta=2
    23                           	psect	text2,local,class=CODE,merge=1,delta=2
    24                           	psect	text3,local,class=CODE,merge=1,delta=2
    25                           	psect	text4,local,class=CODE,merge=1,delta=2
    26                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text6,local,class=CODE,merge=1,delta=2
    28                           	psect	text7,local,class=CODE,merge=1,delta=2
    29                           	psect	text8,local,class=CODE,merge=1,delta=2
    30                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text11,local,class=CODE,merge=1,delta=2
    33                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text13,local,class=CODE,merge=1,delta=2
    35                           	psect	text14,local,class=CODE,merge=1,delta=2
    36                           	psect	text15,local,class=CODE,merge=1,delta=2
    37                           	psect	text16,local,class=CODE,merge=1,delta=2
    38                           	psect	text17,local,class=CODE,merge=1,delta=2
    39                           	psect	text18,local,class=CODE,merge=1,delta=2
    40                           	psect	text19,local,class=CODE,merge=1,delta=2
    41                           	psect	text20,local,class=CODE,merge=1,delta=2
    42                           	psect	text21,local,class=CODE,merge=1,delta=2
    43                           	psect	text22,local,class=CODE,merge=1,delta=2
    44                           	psect	text23,local,class=CODE,merge=1,delta=2
    45                           	psect	text24,local,class=CODE,merge=1,delta=2
    46                           	psect	text25,local,class=CODE,merge=1,delta=2
    47                           	psect	text26,local,class=CODE,merge=1,delta=2
    48                           	psect	text27,local,class=CODE,merge=1,delta=2
    49                           	psect	text28,local,class=CODE,merge=1,delta=2
    50                           	psect	text29,local,class=CODE,merge=1,delta=2
    51                           	psect	text30,local,class=CODE,merge=1,delta=2
    52                           	psect	text31,local,class=CODE,merge=1,delta=2
    53                           	psect	text32,local,class=CODE,merge=1,delta=2
    54                           	psect	text33,local,class=CODE,merge=1,delta=2
    55                           	psect	text34,local,class=CODE,merge=1,delta=2
    56                           	psect	text35,local,class=CODE,merge=1,delta=2
    57                           	psect	text36,local,class=CODE,merge=1,delta=2
    58                           	psect	text37,local,class=CODE,merge=1,delta=2
    59                           	psect	text38,local,class=CODE,merge=1,delta=2
    60                           	psect	text39,local,class=CODE,merge=1,delta=2
    61                           	psect	text40,local,class=CODE,merge=1,delta=2
    62                           	psect	text41,local,class=CODE,merge=1,delta=2
    63                           	psect	intentry,global,class=CODE,delta=2
    64                           	psect	text43,local,class=CODE,merge=1,delta=2
    65                           	psect	text44,local,class=CODE,merge=1,delta=2
    66                           	psect	text45,local,class=CODE,merge=1,delta=2
    67                           	psect	text46,local,class=CODE,merge=1,delta=2
    68                           	psect	text47,local,class=CODE,merge=1,delta=2
    69                           	psect	text48,local,class=CODE,merge=1,delta=2,group=1
    70                           	psect	text49,local,class=CODE,merge=1,delta=2,group=1
    71                           	psect	text50,local,class=CODE,merge=1,delta=2,group=1
    72                           	psect	text51,local,class=CODE,merge=1,delta=2
    73                           	psect	text52,local,class=CODE,merge=1,delta=2
    74                           	psect	text53,local,class=CODE,merge=1,delta=2
    75                           	psect	text54,local,class=CODE,merge=1,delta=2
    76                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    77                           	dabs	1,0x7E,2
    78     0000                     
    79                           ; Generated 07/09/2023 GMT
    80                           ; 
    81                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    82                           ; All rights reserved.
    83                           ; 
    84                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    85                           ; 
    86                           ; Redistribution and use in source and binary forms, with or without modification, are
    87                           ; permitted provided that the following conditions are met:
    88                           ; 
    89                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    90                           ;        conditions and the following disclaimer.
    91                           ; 
    92                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    93                           ;        of conditions and the following disclaimer in the documentation and/or other
    94                           ;        materials provided with the distribution. Publication is not required when
    95                           ;        this file is used in an embedded application.
    96                           ; 
    97                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    98                           ;        software without specific prior written permission.
    99                           ; 
   100                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   101                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   102                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   103                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   104                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   105                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   106                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   107                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   108                           ; 
   109                           ; 
   110                           ; Code-generator required, PIC16F1827 Definitions
   111                           ; 
   112                           ; SFR Addresses
   113     0000                     	;# 
   114     0001                     	;# 
   115     0002                     	;# 
   116     0003                     	;# 
   117     0004                     	;# 
   118     0005                     	;# 
   119     0006                     	;# 
   120     0007                     	;# 
   121     0008                     	;# 
   122     0009                     	;# 
   123     000A                     	;# 
   124     000B                     	;# 
   125     000C                     	;# 
   126     000D                     	;# 
   127     0011                     	;# 
   128     0012                     	;# 
   129     0013                     	;# 
   130     0014                     	;# 
   131     0015                     	;# 
   132     0016                     	;# 
   133     0016                     	;# 
   134     0017                     	;# 
   135     0018                     	;# 
   136     0019                     	;# 
   137     001A                     	;# 
   138     001B                     	;# 
   139     001C                     	;# 
   140     001E                     	;# 
   141     001F                     	;# 
   142     008C                     	;# 
   143     008D                     	;# 
   144     0091                     	;# 
   145     0092                     	;# 
   146     0093                     	;# 
   147     0094                     	;# 
   148     0095                     	;# 
   149     0096                     	;# 
   150     0097                     	;# 
   151     0098                     	;# 
   152     0099                     	;# 
   153     009A                     	;# 
   154     009B                     	;# 
   155     009B                     	;# 
   156     009C                     	;# 
   157     009D                     	;# 
   158     009E                     	;# 
   159     010C                     	;# 
   160     010D                     	;# 
   161     0111                     	;# 
   162     0112                     	;# 
   163     0113                     	;# 
   164     0114                     	;# 
   165     0115                     	;# 
   166     0116                     	;# 
   167     0117                     	;# 
   168     0118                     	;# 
   169     0119                     	;# 
   170     011A                     	;# 
   171     011B                     	;# 
   172     011D                     	;# 
   173     011E                     	;# 
   174     018C                     	;# 
   175     018D                     	;# 
   176     0191                     	;# 
   177     0191                     	;# 
   178     0192                     	;# 
   179     0193                     	;# 
   180     0193                     	;# 
   181     0193                     	;# 
   182     0194                     	;# 
   183     0195                     	;# 
   184     0196                     	;# 
   185     0199                     	;# 
   186     019A                     	;# 
   187     019B                     	;# 
   188     019B                     	;# 
   189     019B                     	;# 
   190     019B                     	;# 
   191     019C                     	;# 
   192     019C                     	;# 
   193     019D                     	;# 
   194     019E                     	;# 
   195     019F                     	;# 
   196     020C                     	;# 
   197     020D                     	;# 
   198     0211                     	;# 
   199     0211                     	;# 
   200     0212                     	;# 
   201     0212                     	;# 
   202     0213                     	;# 
   203     0213                     	;# 
   204     0214                     	;# 
   205     0214                     	;# 
   206     0215                     	;# 
   207     0215                     	;# 
   208     0215                     	;# 
   209     0216                     	;# 
   210     0216                     	;# 
   211     0217                     	;# 
   212     0217                     	;# 
   213     0219                     	;# 
   214     021A                     	;# 
   215     021B                     	;# 
   216     021C                     	;# 
   217     021D                     	;# 
   218     021E                     	;# 
   219     021F                     	;# 
   220     0291                     	;# 
   221     0291                     	;# 
   222     0292                     	;# 
   223     0293                     	;# 
   224     0294                     	;# 
   225     0295                     	;# 
   226     0295                     	;# 
   227     0296                     	;# 
   228     0298                     	;# 
   229     0298                     	;# 
   230     0299                     	;# 
   231     029A                     	;# 
   232     029B                     	;# 
   233     029C                     	;# 
   234     029C                     	;# 
   235     029D                     	;# 
   236     029E                     	;# 
   237     029E                     	;# 
   238     0311                     	;# 
   239     0311                     	;# 
   240     0312                     	;# 
   241     0313                     	;# 
   242     0318                     	;# 
   243     0318                     	;# 
   244     0319                     	;# 
   245     031A                     	;# 
   246     0394                     	;# 
   247     0395                     	;# 
   248     0396                     	;# 
   249     039A                     	;# 
   250     039C                     	;# 
   251     039D                     	;# 
   252     039E                     	;# 
   253     039F                     	;# 
   254     0415                     	;# 
   255     0416                     	;# 
   256     0417                     	;# 
   257     041C                     	;# 
   258     041D                     	;# 
   259     041E                     	;# 
   260     0FE4                     	;# 
   261     0FE5                     	;# 
   262     0FE6                     	;# 
   263     0FE7                     	;# 
   264     0FE8                     	;# 
   265     0FE9                     	;# 
   266     0FEA                     	;# 
   267     0FEB                     	;# 
   268     0FED                     	;# 
   269     0FEE                     	;# 
   270     0FEF                     	;# 
   271     0000                     	;# 
   272     0001                     	;# 
   273     0002                     	;# 
   274     0003                     	;# 
   275     0004                     	;# 
   276     0005                     	;# 
   277     0006                     	;# 
   278     0007                     	;# 
   279     0008                     	;# 
   280     0009                     	;# 
   281     000A                     	;# 
   282     000B                     	;# 
   283     000C                     	;# 
   284     000D                     	;# 
   285     0011                     	;# 
   286     0012                     	;# 
   287     0013                     	;# 
   288     0014                     	;# 
   289     0015                     	;# 
   290     0016                     	;# 
   291     0016                     	;# 
   292     0017                     	;# 
   293     0018                     	;# 
   294     0019                     	;# 
   295     001A                     	;# 
   296     001B                     	;# 
   297     001C                     	;# 
   298     001E                     	;# 
   299     001F                     	;# 
   300     008C                     	;# 
   301     008D                     	;# 
   302     0091                     	;# 
   303     0092                     	;# 
   304     0093                     	;# 
   305     0094                     	;# 
   306     0095                     	;# 
   307     0096                     	;# 
   308     0097                     	;# 
   309     0098                     	;# 
   310     0099                     	;# 
   311     009A                     	;# 
   312     009B                     	;# 
   313     009B                     	;# 
   314     009C                     	;# 
   315     009D                     	;# 
   316     009E                     	;# 
   317     010C                     	;# 
   318     010D                     	;# 
   319     0111                     	;# 
   320     0112                     	;# 
   321     0113                     	;# 
   322     0114                     	;# 
   323     0115                     	;# 
   324     0116                     	;# 
   325     0117                     	;# 
   326     0118                     	;# 
   327     0119                     	;# 
   328     011A                     	;# 
   329     011B                     	;# 
   330     011D                     	;# 
   331     011E                     	;# 
   332     018C                     	;# 
   333     018D                     	;# 
   334     0191                     	;# 
   335     0191                     	;# 
   336     0192                     	;# 
   337     0193                     	;# 
   338     0193                     	;# 
   339     0193                     	;# 
   340     0194                     	;# 
   341     0195                     	;# 
   342     0196                     	;# 
   343     0199                     	;# 
   344     019A                     	;# 
   345     019B                     	;# 
   346     019B                     	;# 
   347     019B                     	;# 
   348     019B                     	;# 
   349     019C                     	;# 
   350     019C                     	;# 
   351     019D                     	;# 
   352     019E                     	;# 
   353     019F                     	;# 
   354     020C                     	;# 
   355     020D                     	;# 
   356     0211                     	;# 
   357     0211                     	;# 
   358     0212                     	;# 
   359     0212                     	;# 
   360     0213                     	;# 
   361     0213                     	;# 
   362     0214                     	;# 
   363     0214                     	;# 
   364     0215                     	;# 
   365     0215                     	;# 
   366     0215                     	;# 
   367     0216                     	;# 
   368     0216                     	;# 
   369     0217                     	;# 
   370     0217                     	;# 
   371     0219                     	;# 
   372     021A                     	;# 
   373     021B                     	;# 
   374     021C                     	;# 
   375     021D                     	;# 
   376     021E                     	;# 
   377     021F                     	;# 
   378     0291                     	;# 
   379     0291                     	;# 
   380     0292                     	;# 
   381     0293                     	;# 
   382     0294                     	;# 
   383     0295                     	;# 
   384     0295                     	;# 
   385     0296                     	;# 
   386     0298                     	;# 
   387     0298                     	;# 
   388     0299                     	;# 
   389     029A                     	;# 
   390     029B                     	;# 
   391     029C                     	;# 
   392     029C                     	;# 
   393     029D                     	;# 
   394     029E                     	;# 
   395     029E                     	;# 
   396     0311                     	;# 
   397     0311                     	;# 
   398     0312                     	;# 
   399     0313                     	;# 
   400     0318                     	;# 
   401     0318                     	;# 
   402     0319                     	;# 
   403     031A                     	;# 
   404     0394                     	;# 
   405     0395                     	;# 
   406     0396                     	;# 
   407     039A                     	;# 
   408     039C                     	;# 
   409     039D                     	;# 
   410     039E                     	;# 
   411     039F                     	;# 
   412     0415                     	;# 
   413     0416                     	;# 
   414     0417                     	;# 
   415     041C                     	;# 
   416     041D                     	;# 
   417     041E                     	;# 
   418     0FE4                     	;# 
   419     0FE5                     	;# 
   420     0FE6                     	;# 
   421     0FE7                     	;# 
   422     0FE8                     	;# 
   423     0FE9                     	;# 
   424     0FEA                     	;# 
   425     0FEB                     	;# 
   426     0FED                     	;# 
   427     0FEE                     	;# 
   428     0FEF                     	;# 
   429     0000                     	;# 
   430     0001                     	;# 
   431     0002                     	;# 
   432     0003                     	;# 
   433     0004                     	;# 
   434     0005                     	;# 
   435     0006                     	;# 
   436     0007                     	;# 
   437     0008                     	;# 
   438     0009                     	;# 
   439     000A                     	;# 
   440     000B                     	;# 
   441     000C                     	;# 
   442     000D                     	;# 
   443     0011                     	;# 
   444     0012                     	;# 
   445     0013                     	;# 
   446     0014                     	;# 
   447     0015                     	;# 
   448     0016                     	;# 
   449     0016                     	;# 
   450     0017                     	;# 
   451     0018                     	;# 
   452     0019                     	;# 
   453     001A                     	;# 
   454     001B                     	;# 
   455     001C                     	;# 
   456     001E                     	;# 
   457     001F                     	;# 
   458     008C                     	;# 
   459     008D                     	;# 
   460     0091                     	;# 
   461     0092                     	;# 
   462     0093                     	;# 
   463     0094                     	;# 
   464     0095                     	;# 
   465     0096                     	;# 
   466     0097                     	;# 
   467     0098                     	;# 
   468     0099                     	;# 
   469     009A                     	;# 
   470     009B                     	;# 
   471     009B                     	;# 
   472     009C                     	;# 
   473     009D                     	;# 
   474     009E                     	;# 
   475     010C                     	;# 
   476     010D                     	;# 
   477     0111                     	;# 
   478     0112                     	;# 
   479     0113                     	;# 
   480     0114                     	;# 
   481     0115                     	;# 
   482     0116                     	;# 
   483     0117                     	;# 
   484     0118                     	;# 
   485     0119                     	;# 
   486     011A                     	;# 
   487     011B                     	;# 
   488     011D                     	;# 
   489     011E                     	;# 
   490     018C                     	;# 
   491     018D                     	;# 
   492     0191                     	;# 
   493     0191                     	;# 
   494     0192                     	;# 
   495     0193                     	;# 
   496     0193                     	;# 
   497     0193                     	;# 
   498     0194                     	;# 
   499     0195                     	;# 
   500     0196                     	;# 
   501     0199                     	;# 
   502     019A                     	;# 
   503     019B                     	;# 
   504     019B                     	;# 
   505     019B                     	;# 
   506     019B                     	;# 
   507     019C                     	;# 
   508     019C                     	;# 
   509     019D                     	;# 
   510     019E                     	;# 
   511     019F                     	;# 
   512     020C                     	;# 
   513     020D                     	;# 
   514     0211                     	;# 
   515     0211                     	;# 
   516     0212                     	;# 
   517     0212                     	;# 
   518     0213                     	;# 
   519     0213                     	;# 
   520     0214                     	;# 
   521     0214                     	;# 
   522     0215                     	;# 
   523     0215                     	;# 
   524     0215                     	;# 
   525     0216                     	;# 
   526     0216                     	;# 
   527     0217                     	;# 
   528     0217                     	;# 
   529     0219                     	;# 
   530     021A                     	;# 
   531     021B                     	;# 
   532     021C                     	;# 
   533     021D                     	;# 
   534     021E                     	;# 
   535     021F                     	;# 
   536     0291                     	;# 
   537     0291                     	;# 
   538     0292                     	;# 
   539     0293                     	;# 
   540     0294                     	;# 
   541     0295                     	;# 
   542     0295                     	;# 
   543     0296                     	;# 
   544     0298                     	;# 
   545     0298                     	;# 
   546     0299                     	;# 
   547     029A                     	;# 
   548     029B                     	;# 
   549     029C                     	;# 
   550     029C                     	;# 
   551     029D                     	;# 
   552     029E                     	;# 
   553     029E                     	;# 
   554     0311                     	;# 
   555     0311                     	;# 
   556     0312                     	;# 
   557     0313                     	;# 
   558     0318                     	;# 
   559     0318                     	;# 
   560     0319                     	;# 
   561     031A                     	;# 
   562     0394                     	;# 
   563     0395                     	;# 
   564     0396                     	;# 
   565     039A                     	;# 
   566     039C                     	;# 
   567     039D                     	;# 
   568     039E                     	;# 
   569     039F                     	;# 
   570     0415                     	;# 
   571     0416                     	;# 
   572     0417                     	;# 
   573     041C                     	;# 
   574     041D                     	;# 
   575     041E                     	;# 
   576     0FE4                     	;# 
   577     0FE5                     	;# 
   578     0FE6                     	;# 
   579     0FE7                     	;# 
   580     0FE8                     	;# 
   581     0FE9                     	;# 
   582     0FEA                     	;# 
   583     0FEB                     	;# 
   584     0FED                     	;# 
   585     0FEE                     	;# 
   586     0FEF                     	;# 
   587     0000                     	;# 
   588     0001                     	;# 
   589     0002                     	;# 
   590     0003                     	;# 
   591     0004                     	;# 
   592     0005                     	;# 
   593     0006                     	;# 
   594     0007                     	;# 
   595     0008                     	;# 
   596     0009                     	;# 
   597     000A                     	;# 
   598     000B                     	;# 
   599     000C                     	;# 
   600     000D                     	;# 
   601     0011                     	;# 
   602     0012                     	;# 
   603     0013                     	;# 
   604     0014                     	;# 
   605     0015                     	;# 
   606     0016                     	;# 
   607     0016                     	;# 
   608     0017                     	;# 
   609     0018                     	;# 
   610     0019                     	;# 
   611     001A                     	;# 
   612     001B                     	;# 
   613     001C                     	;# 
   614     001E                     	;# 
   615     001F                     	;# 
   616     008C                     	;# 
   617     008D                     	;# 
   618     0091                     	;# 
   619     0092                     	;# 
   620     0093                     	;# 
   621     0094                     	;# 
   622     0095                     	;# 
   623     0096                     	;# 
   624     0097                     	;# 
   625     0098                     	;# 
   626     0099                     	;# 
   627     009A                     	;# 
   628     009B                     	;# 
   629     009B                     	;# 
   630     009C                     	;# 
   631     009D                     	;# 
   632     009E                     	;# 
   633     010C                     	;# 
   634     010D                     	;# 
   635     0111                     	;# 
   636     0112                     	;# 
   637     0113                     	;# 
   638     0114                     	;# 
   639     0115                     	;# 
   640     0116                     	;# 
   641     0117                     	;# 
   642     0118                     	;# 
   643     0119                     	;# 
   644     011A                     	;# 
   645     011B                     	;# 
   646     011D                     	;# 
   647     011E                     	;# 
   648     018C                     	;# 
   649     018D                     	;# 
   650     0191                     	;# 
   651     0191                     	;# 
   652     0192                     	;# 
   653     0193                     	;# 
   654     0193                     	;# 
   655     0193                     	;# 
   656     0194                     	;# 
   657     0195                     	;# 
   658     0196                     	;# 
   659     0199                     	;# 
   660     019A                     	;# 
   661     019B                     	;# 
   662     019B                     	;# 
   663     019B                     	;# 
   664     019B                     	;# 
   665     019C                     	;# 
   666     019C                     	;# 
   667     019D                     	;# 
   668     019E                     	;# 
   669     019F                     	;# 
   670     020C                     	;# 
   671     020D                     	;# 
   672     0211                     	;# 
   673     0211                     	;# 
   674     0212                     	;# 
   675     0212                     	;# 
   676     0213                     	;# 
   677     0213                     	;# 
   678     0214                     	;# 
   679     0214                     	;# 
   680     0215                     	;# 
   681     0215                     	;# 
   682     0215                     	;# 
   683     0216                     	;# 
   684     0216                     	;# 
   685     0217                     	;# 
   686     0217                     	;# 
   687     0219                     	;# 
   688     021A                     	;# 
   689     021B                     	;# 
   690     021C                     	;# 
   691     021D                     	;# 
   692     021E                     	;# 
   693     021F                     	;# 
   694     0291                     	;# 
   695     0291                     	;# 
   696     0292                     	;# 
   697     0293                     	;# 
   698     0294                     	;# 
   699     0295                     	;# 
   700     0295                     	;# 
   701     0296                     	;# 
   702     0298                     	;# 
   703     0298                     	;# 
   704     0299                     	;# 
   705     029A                     	;# 
   706     029B                     	;# 
   707     029C                     	;# 
   708     029C                     	;# 
   709     029D                     	;# 
   710     029E                     	;# 
   711     029E                     	;# 
   712     0311                     	;# 
   713     0311                     	;# 
   714     0312                     	;# 
   715     0313                     	;# 
   716     0318                     	;# 
   717     0318                     	;# 
   718     0319                     	;# 
   719     031A                     	;# 
   720     0394                     	;# 
   721     0395                     	;# 
   722     0396                     	;# 
   723     039A                     	;# 
   724     039C                     	;# 
   725     039D                     	;# 
   726     039E                     	;# 
   727     039F                     	;# 
   728     0415                     	;# 
   729     0416                     	;# 
   730     0417                     	;# 
   731     041C                     	;# 
   732     041D                     	;# 
   733     041E                     	;# 
   734     0FE4                     	;# 
   735     0FE5                     	;# 
   736     0FE6                     	;# 
   737     0FE7                     	;# 
   738     0FE8                     	;# 
   739     0FE9                     	;# 
   740     0FEA                     	;# 
   741     0FEB                     	;# 
   742     0FED                     	;# 
   743     0FEE                     	;# 
   744     0FEF                     	;# 
   745     0000                     	;# 
   746     0001                     	;# 
   747     0002                     	;# 
   748     0003                     	;# 
   749     0004                     	;# 
   750     0005                     	;# 
   751     0006                     	;# 
   752     0007                     	;# 
   753     0008                     	;# 
   754     0009                     	;# 
   755     000A                     	;# 
   756     000B                     	;# 
   757     000C                     	;# 
   758     000D                     	;# 
   759     0011                     	;# 
   760     0012                     	;# 
   761     0013                     	;# 
   762     0014                     	;# 
   763     0015                     	;# 
   764     0016                     	;# 
   765     0016                     	;# 
   766     0017                     	;# 
   767     0018                     	;# 
   768     0019                     	;# 
   769     001A                     	;# 
   770     001B                     	;# 
   771     001C                     	;# 
   772     001E                     	;# 
   773     001F                     	;# 
   774     008C                     	;# 
   775     008D                     	;# 
   776     0091                     	;# 
   777     0092                     	;# 
   778     0093                     	;# 
   779     0094                     	;# 
   780     0095                     	;# 
   781     0096                     	;# 
   782     0097                     	;# 
   783     0098                     	;# 
   784     0099                     	;# 
   785     009A                     	;# 
   786     009B                     	;# 
   787     009B                     	;# 
   788     009C                     	;# 
   789     009D                     	;# 
   790     009E                     	;# 
   791     010C                     	;# 
   792     010D                     	;# 
   793     0111                     	;# 
   794     0112                     	;# 
   795     0113                     	;# 
   796     0114                     	;# 
   797     0115                     	;# 
   798     0116                     	;# 
   799     0117                     	;# 
   800     0118                     	;# 
   801     0119                     	;# 
   802     011A                     	;# 
   803     011B                     	;# 
   804     011D                     	;# 
   805     011E                     	;# 
   806     018C                     	;# 
   807     018D                     	;# 
   808     0191                     	;# 
   809     0191                     	;# 
   810     0192                     	;# 
   811     0193                     	;# 
   812     0193                     	;# 
   813     0193                     	;# 
   814     0194                     	;# 
   815     0195                     	;# 
   816     0196                     	;# 
   817     0199                     	;# 
   818     019A                     	;# 
   819     019B                     	;# 
   820     019B                     	;# 
   821     019B                     	;# 
   822     019B                     	;# 
   823     019C                     	;# 
   824     019C                     	;# 
   825     019D                     	;# 
   826     019E                     	;# 
   827     019F                     	;# 
   828     020C                     	;# 
   829     020D                     	;# 
   830     0211                     	;# 
   831     0211                     	;# 
   832     0212                     	;# 
   833     0212                     	;# 
   834     0213                     	;# 
   835     0213                     	;# 
   836     0214                     	;# 
   837     0214                     	;# 
   838     0215                     	;# 
   839     0215                     	;# 
   840     0215                     	;# 
   841     0216                     	;# 
   842     0216                     	;# 
   843     0217                     	;# 
   844     0217                     	;# 
   845     0219                     	;# 
   846     021A                     	;# 
   847     021B                     	;# 
   848     021C                     	;# 
   849     021D                     	;# 
   850     021E                     	;# 
   851     021F                     	;# 
   852     0291                     	;# 
   853     0291                     	;# 
   854     0292                     	;# 
   855     0293                     	;# 
   856     0294                     	;# 
   857     0295                     	;# 
   858     0295                     	;# 
   859     0296                     	;# 
   860     0298                     	;# 
   861     0298                     	;# 
   862     0299                     	;# 
   863     029A                     	;# 
   864     029B                     	;# 
   865     029C                     	;# 
   866     029C                     	;# 
   867     029D                     	;# 
   868     029E                     	;# 
   869     029E                     	;# 
   870     0311                     	;# 
   871     0311                     	;# 
   872     0312                     	;# 
   873     0313                     	;# 
   874     0318                     	;# 
   875     0318                     	;# 
   876     0319                     	;# 
   877     031A                     	;# 
   878     0394                     	;# 
   879     0395                     	;# 
   880     0396                     	;# 
   881     039A                     	;# 
   882     039C                     	;# 
   883     039D                     	;# 
   884     039E                     	;# 
   885     039F                     	;# 
   886     0415                     	;# 
   887     0416                     	;# 
   888     0417                     	;# 
   889     041C                     	;# 
   890     041D                     	;# 
   891     041E                     	;# 
   892     0FE4                     	;# 
   893     0FE5                     	;# 
   894     0FE6                     	;# 
   895     0FE7                     	;# 
   896     0FE8                     	;# 
   897     0FE9                     	;# 
   898     0FEA                     	;# 
   899     0FEB                     	;# 
   900     0FED                     	;# 
   901     0FEE                     	;# 
   902     0FEF                     	;# 
   903     0000                     	;# 
   904     0001                     	;# 
   905     0002                     	;# 
   906     0003                     	;# 
   907     0004                     	;# 
   908     0005                     	;# 
   909     0006                     	;# 
   910     0007                     	;# 
   911     0008                     	;# 
   912     0009                     	;# 
   913     000A                     	;# 
   914     000B                     	;# 
   915     000C                     	;# 
   916     000D                     	;# 
   917     0011                     	;# 
   918     0012                     	;# 
   919     0013                     	;# 
   920     0014                     	;# 
   921     0015                     	;# 
   922     0016                     	;# 
   923     0016                     	;# 
   924     0017                     	;# 
   925     0018                     	;# 
   926     0019                     	;# 
   927     001A                     	;# 
   928     001B                     	;# 
   929     001C                     	;# 
   930     001E                     	;# 
   931     001F                     	;# 
   932     008C                     	;# 
   933     008D                     	;# 
   934     0091                     	;# 
   935     0092                     	;# 
   936     0093                     	;# 
   937     0094                     	;# 
   938     0095                     	;# 
   939     0096                     	;# 
   940     0097                     	;# 
   941     0098                     	;# 
   942     0099                     	;# 
   943     009A                     	;# 
   944     009B                     	;# 
   945     009B                     	;# 
   946     009C                     	;# 
   947     009D                     	;# 
   948     009E                     	;# 
   949     010C                     	;# 
   950     010D                     	;# 
   951     0111                     	;# 
   952     0112                     	;# 
   953     0113                     	;# 
   954     0114                     	;# 
   955     0115                     	;# 
   956     0116                     	;# 
   957     0117                     	;# 
   958     0118                     	;# 
   959     0119                     	;# 
   960     011A                     	;# 
   961     011B                     	;# 
   962     011D                     	;# 
   963     011E                     	;# 
   964     018C                     	;# 
   965     018D                     	;# 
   966     0191                     	;# 
   967     0191                     	;# 
   968     0192                     	;# 
   969     0193                     	;# 
   970     0193                     	;# 
   971     0193                     	;# 
   972     0194                     	;# 
   973     0195                     	;# 
   974     0196                     	;# 
   975     0199                     	;# 
   976     019A                     	;# 
   977     019B                     	;# 
   978     019B                     	;# 
   979     019B                     	;# 
   980     019B                     	;# 
   981     019C                     	;# 
   982     019C                     	;# 
   983     019D                     	;# 
   984     019E                     	;# 
   985     019F                     	;# 
   986     020C                     	;# 
   987     020D                     	;# 
   988     0211                     	;# 
   989     0211                     	;# 
   990     0212                     	;# 
   991     0212                     	;# 
   992     0213                     	;# 
   993     0213                     	;# 
   994     0214                     	;# 
   995     0214                     	;# 
   996     0215                     	;# 
   997     0215                     	;# 
   998     0215                     	;# 
   999     0216                     	;# 
  1000     0216                     	;# 
  1001     0217                     	;# 
  1002     0217                     	;# 
  1003     0219                     	;# 
  1004     021A                     	;# 
  1005     021B                     	;# 
  1006     021C                     	;# 
  1007     021D                     	;# 
  1008     021E                     	;# 
  1009     021F                     	;# 
  1010     0291                     	;# 
  1011     0291                     	;# 
  1012     0292                     	;# 
  1013     0293                     	;# 
  1014     0294                     	;# 
  1015     0295                     	;# 
  1016     0295                     	;# 
  1017     0296                     	;# 
  1018     0298                     	;# 
  1019     0298                     	;# 
  1020     0299                     	;# 
  1021     029A                     	;# 
  1022     029B                     	;# 
  1023     029C                     	;# 
  1024     029C                     	;# 
  1025     029D                     	;# 
  1026     029E                     	;# 
  1027     029E                     	;# 
  1028     0311                     	;# 
  1029     0311                     	;# 
  1030     0312                     	;# 
  1031     0313                     	;# 
  1032     0318                     	;# 
  1033     0318                     	;# 
  1034     0319                     	;# 
  1035     031A                     	;# 
  1036     0394                     	;# 
  1037     0395                     	;# 
  1038     0396                     	;# 
  1039     039A                     	;# 
  1040     039C                     	;# 
  1041     039D                     	;# 
  1042     039E                     	;# 
  1043     039F                     	;# 
  1044     0415                     	;# 
  1045     0416                     	;# 
  1046     0417                     	;# 
  1047     041C                     	;# 
  1048     041D                     	;# 
  1049     041E                     	;# 
  1050     0FE4                     	;# 
  1051     0FE5                     	;# 
  1052     0FE6                     	;# 
  1053     0FE7                     	;# 
  1054     0FE8                     	;# 
  1055     0FE9                     	;# 
  1056     0FEA                     	;# 
  1057     0FEB                     	;# 
  1058     0FED                     	;# 
  1059     0FEE                     	;# 
  1060     0FEF                     	;# 
  1061     0000                     	;# 
  1062     0001                     	;# 
  1063     0002                     	;# 
  1064     0003                     	;# 
  1065     0004                     	;# 
  1066     0005                     	;# 
  1067     0006                     	;# 
  1068     0007                     	;# 
  1069     0008                     	;# 
  1070     0009                     	;# 
  1071     000A                     	;# 
  1072     000B                     	;# 
  1073     000C                     	;# 
  1074     000D                     	;# 
  1075     0011                     	;# 
  1076     0012                     	;# 
  1077     0013                     	;# 
  1078     0014                     	;# 
  1079     0015                     	;# 
  1080     0016                     	;# 
  1081     0016                     	;# 
  1082     0017                     	;# 
  1083     0018                     	;# 
  1084     0019                     	;# 
  1085     001A                     	;# 
  1086     001B                     	;# 
  1087     001C                     	;# 
  1088     001E                     	;# 
  1089     001F                     	;# 
  1090     008C                     	;# 
  1091     008D                     	;# 
  1092     0091                     	;# 
  1093     0092                     	;# 
  1094     0093                     	;# 
  1095     0094                     	;# 
  1096     0095                     	;# 
  1097     0096                     	;# 
  1098     0097                     	;# 
  1099     0098                     	;# 
  1100     0099                     	;# 
  1101     009A                     	;# 
  1102     009B                     	;# 
  1103     009B                     	;# 
  1104     009C                     	;# 
  1105     009D                     	;# 
  1106     009E                     	;# 
  1107     010C                     	;# 
  1108     010D                     	;# 
  1109     0111                     	;# 
  1110     0112                     	;# 
  1111     0113                     	;# 
  1112     0114                     	;# 
  1113     0115                     	;# 
  1114     0116                     	;# 
  1115     0117                     	;# 
  1116     0118                     	;# 
  1117     0119                     	;# 
  1118     011A                     	;# 
  1119     011B                     	;# 
  1120     011D                     	;# 
  1121     011E                     	;# 
  1122     018C                     	;# 
  1123     018D                     	;# 
  1124     0191                     	;# 
  1125     0191                     	;# 
  1126     0192                     	;# 
  1127     0193                     	;# 
  1128     0193                     	;# 
  1129     0193                     	;# 
  1130     0194                     	;# 
  1131     0195                     	;# 
  1132     0196                     	;# 
  1133     0199                     	;# 
  1134     019A                     	;# 
  1135     019B                     	;# 
  1136     019B                     	;# 
  1137     019B                     	;# 
  1138     019B                     	;# 
  1139     019C                     	;# 
  1140     019C                     	;# 
  1141     019D                     	;# 
  1142     019E                     	;# 
  1143     019F                     	;# 
  1144     020C                     	;# 
  1145     020D                     	;# 
  1146     0211                     	;# 
  1147     0211                     	;# 
  1148     0212                     	;# 
  1149     0212                     	;# 
  1150     0213                     	;# 
  1151     0213                     	;# 
  1152     0214                     	;# 
  1153     0214                     	;# 
  1154     0215                     	;# 
  1155     0215                     	;# 
  1156     0215                     	;# 
  1157     0216                     	;# 
  1158     0216                     	;# 
  1159     0217                     	;# 
  1160     0217                     	;# 
  1161     0219                     	;# 
  1162     021A                     	;# 
  1163     021B                     	;# 
  1164     021C                     	;# 
  1165     021D                     	;# 
  1166     021E                     	;# 
  1167     021F                     	;# 
  1168     0291                     	;# 
  1169     0291                     	;# 
  1170     0292                     	;# 
  1171     0293                     	;# 
  1172     0294                     	;# 
  1173     0295                     	;# 
  1174     0295                     	;# 
  1175     0296                     	;# 
  1176     0298                     	;# 
  1177     0298                     	;# 
  1178     0299                     	;# 
  1179     029A                     	;# 
  1180     029B                     	;# 
  1181     029C                     	;# 
  1182     029C                     	;# 
  1183     029D                     	;# 
  1184     029E                     	;# 
  1185     029E                     	;# 
  1186     0311                     	;# 
  1187     0311                     	;# 
  1188     0312                     	;# 
  1189     0313                     	;# 
  1190     0318                     	;# 
  1191     0318                     	;# 
  1192     0319                     	;# 
  1193     031A                     	;# 
  1194     0394                     	;# 
  1195     0395                     	;# 
  1196     0396                     	;# 
  1197     039A                     	;# 
  1198     039C                     	;# 
  1199     039D                     	;# 
  1200     039E                     	;# 
  1201     039F                     	;# 
  1202     0415                     	;# 
  1203     0416                     	;# 
  1204     0417                     	;# 
  1205     041C                     	;# 
  1206     041D                     	;# 
  1207     041E                     	;# 
  1208     0FE4                     	;# 
  1209     0FE5                     	;# 
  1210     0FE6                     	;# 
  1211     0FE7                     	;# 
  1212     0FE8                     	;# 
  1213     0FE9                     	;# 
  1214     0FEA                     	;# 
  1215     0FEB                     	;# 
  1216     0FED                     	;# 
  1217     0FEE                     	;# 
  1218     0FEF                     	;# 
  1219     0000                     	;# 
  1220     0001                     	;# 
  1221     0002                     	;# 
  1222     0003                     	;# 
  1223     0004                     	;# 
  1224     0005                     	;# 
  1225     0006                     	;# 
  1226     0007                     	;# 
  1227     0008                     	;# 
  1228     0009                     	;# 
  1229     000A                     	;# 
  1230     000B                     	;# 
  1231     000C                     	;# 
  1232     000D                     	;# 
  1233     0011                     	;# 
  1234     0012                     	;# 
  1235     0013                     	;# 
  1236     0014                     	;# 
  1237     0015                     	;# 
  1238     0016                     	;# 
  1239     0016                     	;# 
  1240     0017                     	;# 
  1241     0018                     	;# 
  1242     0019                     	;# 
  1243     001A                     	;# 
  1244     001B                     	;# 
  1245     001C                     	;# 
  1246     001E                     	;# 
  1247     001F                     	;# 
  1248     008C                     	;# 
  1249     008D                     	;# 
  1250     0091                     	;# 
  1251     0092                     	;# 
  1252     0093                     	;# 
  1253     0094                     	;# 
  1254     0095                     	;# 
  1255     0096                     	;# 
  1256     0097                     	;# 
  1257     0098                     	;# 
  1258     0099                     	;# 
  1259     009A                     	;# 
  1260     009B                     	;# 
  1261     009B                     	;# 
  1262     009C                     	;# 
  1263     009D                     	;# 
  1264     009E                     	;# 
  1265     010C                     	;# 
  1266     010D                     	;# 
  1267     0111                     	;# 
  1268     0112                     	;# 
  1269     0113                     	;# 
  1270     0114                     	;# 
  1271     0115                     	;# 
  1272     0116                     	;# 
  1273     0117                     	;# 
  1274     0118                     	;# 
  1275     0119                     	;# 
  1276     011A                     	;# 
  1277     011B                     	;# 
  1278     011D                     	;# 
  1279     011E                     	;# 
  1280     018C                     	;# 
  1281     018D                     	;# 
  1282     0191                     	;# 
  1283     0191                     	;# 
  1284     0192                     	;# 
  1285     0193                     	;# 
  1286     0193                     	;# 
  1287     0193                     	;# 
  1288     0194                     	;# 
  1289     0195                     	;# 
  1290     0196                     	;# 
  1291     0199                     	;# 
  1292     019A                     	;# 
  1293     019B                     	;# 
  1294     019B                     	;# 
  1295     019B                     	;# 
  1296     019B                     	;# 
  1297     019C                     	;# 
  1298     019C                     	;# 
  1299     019D                     	;# 
  1300     019E                     	;# 
  1301     019F                     	;# 
  1302     020C                     	;# 
  1303     020D                     	;# 
  1304     0211                     	;# 
  1305     0211                     	;# 
  1306     0212                     	;# 
  1307     0212                     	;# 
  1308     0213                     	;# 
  1309     0213                     	;# 
  1310     0214                     	;# 
  1311     0214                     	;# 
  1312     0215                     	;# 
  1313     0215                     	;# 
  1314     0215                     	;# 
  1315     0216                     	;# 
  1316     0216                     	;# 
  1317     0217                     	;# 
  1318     0217                     	;# 
  1319     0219                     	;# 
  1320     021A                     	;# 
  1321     021B                     	;# 
  1322     021C                     	;# 
  1323     021D                     	;# 
  1324     021E                     	;# 
  1325     021F                     	;# 
  1326     0291                     	;# 
  1327     0291                     	;# 
  1328     0292                     	;# 
  1329     0293                     	;# 
  1330     0294                     	;# 
  1331     0295                     	;# 
  1332     0295                     	;# 
  1333     0296                     	;# 
  1334     0298                     	;# 
  1335     0298                     	;# 
  1336     0299                     	;# 
  1337     029A                     	;# 
  1338     029B                     	;# 
  1339     029C                     	;# 
  1340     029C                     	;# 
  1341     029D                     	;# 
  1342     029E                     	;# 
  1343     029E                     	;# 
  1344     0311                     	;# 
  1345     0311                     	;# 
  1346     0312                     	;# 
  1347     0313                     	;# 
  1348     0318                     	;# 
  1349     0318                     	;# 
  1350     0319                     	;# 
  1351     031A                     	;# 
  1352     0394                     	;# 
  1353     0395                     	;# 
  1354     0396                     	;# 
  1355     039A                     	;# 
  1356     039C                     	;# 
  1357     039D                     	;# 
  1358     039E                     	;# 
  1359     039F                     	;# 
  1360     0415                     	;# 
  1361     0416                     	;# 
  1362     0417                     	;# 
  1363     041C                     	;# 
  1364     041D                     	;# 
  1365     041E                     	;# 
  1366     0FE4                     	;# 
  1367     0FE5                     	;# 
  1368     0FE6                     	;# 
  1369     0FE7                     	;# 
  1370     0FE8                     	;# 
  1371     0FE9                     	;# 
  1372     0FEA                     	;# 
  1373     0FEB                     	;# 
  1374     0FED                     	;# 
  1375     0FEE                     	;# 
  1376     0FEF                     	;# 
  1377     0000                     	;# 
  1378     0001                     	;# 
  1379     0002                     	;# 
  1380     0003                     	;# 
  1381     0004                     	;# 
  1382     0005                     	;# 
  1383     0006                     	;# 
  1384     0007                     	;# 
  1385     0008                     	;# 
  1386     0009                     	;# 
  1387     000A                     	;# 
  1388     000B                     	;# 
  1389     000C                     	;# 
  1390     000D                     	;# 
  1391     0011                     	;# 
  1392     0012                     	;# 
  1393     0013                     	;# 
  1394     0014                     	;# 
  1395     0015                     	;# 
  1396     0016                     	;# 
  1397     0016                     	;# 
  1398     0017                     	;# 
  1399     0018                     	;# 
  1400     0019                     	;# 
  1401     001A                     	;# 
  1402     001B                     	;# 
  1403     001C                     	;# 
  1404     001E                     	;# 
  1405     001F                     	;# 
  1406     008C                     	;# 
  1407     008D                     	;# 
  1408     0091                     	;# 
  1409     0092                     	;# 
  1410     0093                     	;# 
  1411     0094                     	;# 
  1412     0095                     	;# 
  1413     0096                     	;# 
  1414     0097                     	;# 
  1415     0098                     	;# 
  1416     0099                     	;# 
  1417     009A                     	;# 
  1418     009B                     	;# 
  1419     009B                     	;# 
  1420     009C                     	;# 
  1421     009D                     	;# 
  1422     009E                     	;# 
  1423     010C                     	;# 
  1424     010D                     	;# 
  1425     0111                     	;# 
  1426     0112                     	;# 
  1427     0113                     	;# 
  1428     0114                     	;# 
  1429     0115                     	;# 
  1430     0116                     	;# 
  1431     0117                     	;# 
  1432     0118                     	;# 
  1433     0119                     	;# 
  1434     011A                     	;# 
  1435     011B                     	;# 
  1436     011D                     	;# 
  1437     011E                     	;# 
  1438     018C                     	;# 
  1439     018D                     	;# 
  1440     0191                     	;# 
  1441     0191                     	;# 
  1442     0192                     	;# 
  1443     0193                     	;# 
  1444     0193                     	;# 
  1445     0193                     	;# 
  1446     0194                     	;# 
  1447     0195                     	;# 
  1448     0196                     	;# 
  1449     0199                     	;# 
  1450     019A                     	;# 
  1451     019B                     	;# 
  1452     019B                     	;# 
  1453     019B                     	;# 
  1454     019B                     	;# 
  1455     019C                     	;# 
  1456     019C                     	;# 
  1457     019D                     	;# 
  1458     019E                     	;# 
  1459     019F                     	;# 
  1460     020C                     	;# 
  1461     020D                     	;# 
  1462     0211                     	;# 
  1463     0211                     	;# 
  1464     0212                     	;# 
  1465     0212                     	;# 
  1466     0213                     	;# 
  1467     0213                     	;# 
  1468     0214                     	;# 
  1469     0214                     	;# 
  1470     0215                     	;# 
  1471     0215                     	;# 
  1472     0215                     	;# 
  1473     0216                     	;# 
  1474     0216                     	;# 
  1475     0217                     	;# 
  1476     0217                     	;# 
  1477     0219                     	;# 
  1478     021A                     	;# 
  1479     021B                     	;# 
  1480     021C                     	;# 
  1481     021D                     	;# 
  1482     021E                     	;# 
  1483     021F                     	;# 
  1484     0291                     	;# 
  1485     0291                     	;# 
  1486     0292                     	;# 
  1487     0293                     	;# 
  1488     0294                     	;# 
  1489     0295                     	;# 
  1490     0295                     	;# 
  1491     0296                     	;# 
  1492     0298                     	;# 
  1493     0298                     	;# 
  1494     0299                     	;# 
  1495     029A                     	;# 
  1496     029B                     	;# 
  1497     029C                     	;# 
  1498     029C                     	;# 
  1499     029D                     	;# 
  1500     029E                     	;# 
  1501     029E                     	;# 
  1502     0311                     	;# 
  1503     0311                     	;# 
  1504     0312                     	;# 
  1505     0313                     	;# 
  1506     0318                     	;# 
  1507     0318                     	;# 
  1508     0319                     	;# 
  1509     031A                     	;# 
  1510     0394                     	;# 
  1511     0395                     	;# 
  1512     0396                     	;# 
  1513     039A                     	;# 
  1514     039C                     	;# 
  1515     039D                     	;# 
  1516     039E                     	;# 
  1517     039F                     	;# 
  1518     0415                     	;# 
  1519     0416                     	;# 
  1520     0417                     	;# 
  1521     041C                     	;# 
  1522     041D                     	;# 
  1523     041E                     	;# 
  1524     0FE4                     	;# 
  1525     0FE5                     	;# 
  1526     0FE6                     	;# 
  1527     0FE7                     	;# 
  1528     0FE8                     	;# 
  1529     0FE9                     	;# 
  1530     0FEA                     	;# 
  1531     0FEB                     	;# 
  1532     0FED                     	;# 
  1533     0FEE                     	;# 
  1534     0FEF                     	;# 
  1535     0000                     	;# 
  1536     0001                     	;# 
  1537     0002                     	;# 
  1538     0003                     	;# 
  1539     0004                     	;# 
  1540     0005                     	;# 
  1541     0006                     	;# 
  1542     0007                     	;# 
  1543     0008                     	;# 
  1544     0009                     	;# 
  1545     000A                     	;# 
  1546     000B                     	;# 
  1547     000C                     	;# 
  1548     000D                     	;# 
  1549     0011                     	;# 
  1550     0012                     	;# 
  1551     0013                     	;# 
  1552     0014                     	;# 
  1553     0015                     	;# 
  1554     0016                     	;# 
  1555     0016                     	;# 
  1556     0017                     	;# 
  1557     0018                     	;# 
  1558     0019                     	;# 
  1559     001A                     	;# 
  1560     001B                     	;# 
  1561     001C                     	;# 
  1562     001E                     	;# 
  1563     001F                     	;# 
  1564     008C                     	;# 
  1565     008D                     	;# 
  1566     0091                     	;# 
  1567     0092                     	;# 
  1568     0093                     	;# 
  1569     0094                     	;# 
  1570     0095                     	;# 
  1571     0096                     	;# 
  1572     0097                     	;# 
  1573     0098                     	;# 
  1574     0099                     	;# 
  1575     009A                     	;# 
  1576     009B                     	;# 
  1577     009B                     	;# 
  1578     009C                     	;# 
  1579     009D                     	;# 
  1580     009E                     	;# 
  1581     010C                     	;# 
  1582     010D                     	;# 
  1583     0111                     	;# 
  1584     0112                     	;# 
  1585     0113                     	;# 
  1586     0114                     	;# 
  1587     0115                     	;# 
  1588     0116                     	;# 
  1589     0117                     	;# 
  1590     0118                     	;# 
  1591     0119                     	;# 
  1592     011A                     	;# 
  1593     011B                     	;# 
  1594     011D                     	;# 
  1595     011E                     	;# 
  1596     018C                     	;# 
  1597     018D                     	;# 
  1598     0191                     	;# 
  1599     0191                     	;# 
  1600     0192                     	;# 
  1601     0193                     	;# 
  1602     0193                     	;# 
  1603     0193                     	;# 
  1604     0194                     	;# 
  1605     0195                     	;# 
  1606     0196                     	;# 
  1607     0199                     	;# 
  1608     019A                     	;# 
  1609     019B                     	;# 
  1610     019B                     	;# 
  1611     019B                     	;# 
  1612     019B                     	;# 
  1613     019C                     	;# 
  1614     019C                     	;# 
  1615     019D                     	;# 
  1616     019E                     	;# 
  1617     019F                     	;# 
  1618     020C                     	;# 
  1619     020D                     	;# 
  1620     0211                     	;# 
  1621     0211                     	;# 
  1622     0212                     	;# 
  1623     0212                     	;# 
  1624     0213                     	;# 
  1625     0213                     	;# 
  1626     0214                     	;# 
  1627     0214                     	;# 
  1628     0215                     	;# 
  1629     0215                     	;# 
  1630     0215                     	;# 
  1631     0216                     	;# 
  1632     0216                     	;# 
  1633     0217                     	;# 
  1634     0217                     	;# 
  1635     0219                     	;# 
  1636     021A                     	;# 
  1637     021B                     	;# 
  1638     021C                     	;# 
  1639     021D                     	;# 
  1640     021E                     	;# 
  1641     021F                     	;# 
  1642     0291                     	;# 
  1643     0291                     	;# 
  1644     0292                     	;# 
  1645     0293                     	;# 
  1646     0294                     	;# 
  1647     0295                     	;# 
  1648     0295                     	;# 
  1649     0296                     	;# 
  1650     0298                     	;# 
  1651     0298                     	;# 
  1652     0299                     	;# 
  1653     029A                     	;# 
  1654     029B                     	;# 
  1655     029C                     	;# 
  1656     029C                     	;# 
  1657     029D                     	;# 
  1658     029E                     	;# 
  1659     029E                     	;# 
  1660     0311                     	;# 
  1661     0311                     	;# 
  1662     0312                     	;# 
  1663     0313                     	;# 
  1664     0318                     	;# 
  1665     0318                     	;# 
  1666     0319                     	;# 
  1667     031A                     	;# 
  1668     0394                     	;# 
  1669     0395                     	;# 
  1670     0396                     	;# 
  1671     039A                     	;# 
  1672     039C                     	;# 
  1673     039D                     	;# 
  1674     039E                     	;# 
  1675     039F                     	;# 
  1676     0415                     	;# 
  1677     0416                     	;# 
  1678     0417                     	;# 
  1679     041C                     	;# 
  1680     041D                     	;# 
  1681     041E                     	;# 
  1682     0FE4                     	;# 
  1683     0FE5                     	;# 
  1684     0FE6                     	;# 
  1685     0FE7                     	;# 
  1686     0FE8                     	;# 
  1687     0FE9                     	;# 
  1688     0FEA                     	;# 
  1689     0FEB                     	;# 
  1690     0FED                     	;# 
  1691     0FEE                     	;# 
  1692     0FEF                     	;# 
  1693     0000                     	;# 
  1694     0001                     	;# 
  1695     0002                     	;# 
  1696     0003                     	;# 
  1697     0004                     	;# 
  1698     0005                     	;# 
  1699     0006                     	;# 
  1700     0007                     	;# 
  1701     0008                     	;# 
  1702     0009                     	;# 
  1703     000A                     	;# 
  1704     000B                     	;# 
  1705     000C                     	;# 
  1706     000D                     	;# 
  1707     0011                     	;# 
  1708     0012                     	;# 
  1709     0013                     	;# 
  1710     0014                     	;# 
  1711     0015                     	;# 
  1712     0016                     	;# 
  1713     0016                     	;# 
  1714     0017                     	;# 
  1715     0018                     	;# 
  1716     0019                     	;# 
  1717     001A                     	;# 
  1718     001B                     	;# 
  1719     001C                     	;# 
  1720     001E                     	;# 
  1721     001F                     	;# 
  1722     008C                     	;# 
  1723     008D                     	;# 
  1724     0091                     	;# 
  1725     0092                     	;# 
  1726     0093                     	;# 
  1727     0094                     	;# 
  1728     0095                     	;# 
  1729     0096                     	;# 
  1730     0097                     	;# 
  1731     0098                     	;# 
  1732     0099                     	;# 
  1733     009A                     	;# 
  1734     009B                     	;# 
  1735     009B                     	;# 
  1736     009C                     	;# 
  1737     009D                     	;# 
  1738     009E                     	;# 
  1739     010C                     	;# 
  1740     010D                     	;# 
  1741     0111                     	;# 
  1742     0112                     	;# 
  1743     0113                     	;# 
  1744     0114                     	;# 
  1745     0115                     	;# 
  1746     0116                     	;# 
  1747     0117                     	;# 
  1748     0118                     	;# 
  1749     0119                     	;# 
  1750     011A                     	;# 
  1751     011B                     	;# 
  1752     011D                     	;# 
  1753     011E                     	;# 
  1754     018C                     	;# 
  1755     018D                     	;# 
  1756     0191                     	;# 
  1757     0191                     	;# 
  1758     0192                     	;# 
  1759     0193                     	;# 
  1760     0193                     	;# 
  1761     0193                     	;# 
  1762     0194                     	;# 
  1763     0195                     	;# 
  1764     0196                     	;# 
  1765     0199                     	;# 
  1766     019A                     	;# 
  1767     019B                     	;# 
  1768     019B                     	;# 
  1769     019B                     	;# 
  1770     019B                     	;# 
  1771     019C                     	;# 
  1772     019C                     	;# 
  1773     019D                     	;# 
  1774     019E                     	;# 
  1775     019F                     	;# 
  1776     020C                     	;# 
  1777     020D                     	;# 
  1778     0211                     	;# 
  1779     0211                     	;# 
  1780     0212                     	;# 
  1781     0212                     	;# 
  1782     0213                     	;# 
  1783     0213                     	;# 
  1784     0214                     	;# 
  1785     0214                     	;# 
  1786     0215                     	;# 
  1787     0215                     	;# 
  1788     0215                     	;# 
  1789     0216                     	;# 
  1790     0216                     	;# 
  1791     0217                     	;# 
  1792     0217                     	;# 
  1793     0219                     	;# 
  1794     021A                     	;# 
  1795     021B                     	;# 
  1796     021C                     	;# 
  1797     021D                     	;# 
  1798     021E                     	;# 
  1799     021F                     	;# 
  1800     0291                     	;# 
  1801     0291                     	;# 
  1802     0292                     	;# 
  1803     0293                     	;# 
  1804     0294                     	;# 
  1805     0295                     	;# 
  1806     0295                     	;# 
  1807     0296                     	;# 
  1808     0298                     	;# 
  1809     0298                     	;# 
  1810     0299                     	;# 
  1811     029A                     	;# 
  1812     029B                     	;# 
  1813     029C                     	;# 
  1814     029C                     	;# 
  1815     029D                     	;# 
  1816     029E                     	;# 
  1817     029E                     	;# 
  1818     0311                     	;# 
  1819     0311                     	;# 
  1820     0312                     	;# 
  1821     0313                     	;# 
  1822     0318                     	;# 
  1823     0318                     	;# 
  1824     0319                     	;# 
  1825     031A                     	;# 
  1826     0394                     	;# 
  1827     0395                     	;# 
  1828     0396                     	;# 
  1829     039A                     	;# 
  1830     039C                     	;# 
  1831     039D                     	;# 
  1832     039E                     	;# 
  1833     039F                     	;# 
  1834     0415                     	;# 
  1835     0416                     	;# 
  1836     0417                     	;# 
  1837     041C                     	;# 
  1838     041D                     	;# 
  1839     041E                     	;# 
  1840     0FE4                     	;# 
  1841     0FE5                     	;# 
  1842     0FE6                     	;# 
  1843     0FE7                     	;# 
  1844     0FE8                     	;# 
  1845     0FE9                     	;# 
  1846     0FEA                     	;# 
  1847     0FEB                     	;# 
  1848     0FED                     	;# 
  1849     0FEE                     	;# 
  1850     0FEF                     	;# 
  1851     0000                     	;# 
  1852     0001                     	;# 
  1853     0002                     	;# 
  1854     0003                     	;# 
  1855     0004                     	;# 
  1856     0005                     	;# 
  1857     0006                     	;# 
  1858     0007                     	;# 
  1859     0008                     	;# 
  1860     0009                     	;# 
  1861     000A                     	;# 
  1862     000B                     	;# 
  1863     000C                     	;# 
  1864     000D                     	;# 
  1865     0011                     	;# 
  1866     0012                     	;# 
  1867     0013                     	;# 
  1868     0014                     	;# 
  1869     0015                     	;# 
  1870     0016                     	;# 
  1871     0016                     	;# 
  1872     0017                     	;# 
  1873     0018                     	;# 
  1874     0019                     	;# 
  1875     001A                     	;# 
  1876     001B                     	;# 
  1877     001C                     	;# 
  1878     001E                     	;# 
  1879     001F                     	;# 
  1880     008C                     	;# 
  1881     008D                     	;# 
  1882     0091                     	;# 
  1883     0092                     	;# 
  1884     0093                     	;# 
  1885     0094                     	;# 
  1886     0095                     	;# 
  1887     0096                     	;# 
  1888     0097                     	;# 
  1889     0098                     	;# 
  1890     0099                     	;# 
  1891     009A                     	;# 
  1892     009B                     	;# 
  1893     009B                     	;# 
  1894     009C                     	;# 
  1895     009D                     	;# 
  1896     009E                     	;# 
  1897     010C                     	;# 
  1898     010D                     	;# 
  1899     0111                     	;# 
  1900     0112                     	;# 
  1901     0113                     	;# 
  1902     0114                     	;# 
  1903     0115                     	;# 
  1904     0116                     	;# 
  1905     0117                     	;# 
  1906     0118                     	;# 
  1907     0119                     	;# 
  1908     011A                     	;# 
  1909     011B                     	;# 
  1910     011D                     	;# 
  1911     011E                     	;# 
  1912     018C                     	;# 
  1913     018D                     	;# 
  1914     0191                     	;# 
  1915     0191                     	;# 
  1916     0192                     	;# 
  1917     0193                     	;# 
  1918     0193                     	;# 
  1919     0193                     	;# 
  1920     0194                     	;# 
  1921     0195                     	;# 
  1922     0196                     	;# 
  1923     0199                     	;# 
  1924     019A                     	;# 
  1925     019B                     	;# 
  1926     019B                     	;# 
  1927     019B                     	;# 
  1928     019B                     	;# 
  1929     019C                     	;# 
  1930     019C                     	;# 
  1931     019D                     	;# 
  1932     019E                     	;# 
  1933     019F                     	;# 
  1934     020C                     	;# 
  1935     020D                     	;# 
  1936     0211                     	;# 
  1937     0211                     	;# 
  1938     0212                     	;# 
  1939     0212                     	;# 
  1940     0213                     	;# 
  1941     0213                     	;# 
  1942     0214                     	;# 
  1943     0214                     	;# 
  1944     0215                     	;# 
  1945     0215                     	;# 
  1946     0215                     	;# 
  1947     0216                     	;# 
  1948     0216                     	;# 
  1949     0217                     	;# 
  1950     0217                     	;# 
  1951     0219                     	;# 
  1952     021A                     	;# 
  1953     021B                     	;# 
  1954     021C                     	;# 
  1955     021D                     	;# 
  1956     021E                     	;# 
  1957     021F                     	;# 
  1958     0291                     	;# 
  1959     0291                     	;# 
  1960     0292                     	;# 
  1961     0293                     	;# 
  1962     0294                     	;# 
  1963     0295                     	;# 
  1964     0295                     	;# 
  1965     0296                     	;# 
  1966     0298                     	;# 
  1967     0298                     	;# 
  1968     0299                     	;# 
  1969     029A                     	;# 
  1970     029B                     	;# 
  1971     029C                     	;# 
  1972     029C                     	;# 
  1973     029D                     	;# 
  1974     029E                     	;# 
  1975     029E                     	;# 
  1976     0311                     	;# 
  1977     0311                     	;# 
  1978     0312                     	;# 
  1979     0313                     	;# 
  1980     0318                     	;# 
  1981     0318                     	;# 
  1982     0319                     	;# 
  1983     031A                     	;# 
  1984     0394                     	;# 
  1985     0395                     	;# 
  1986     0396                     	;# 
  1987     039A                     	;# 
  1988     039C                     	;# 
  1989     039D                     	;# 
  1990     039E                     	;# 
  1991     039F                     	;# 
  1992     0415                     	;# 
  1993     0416                     	;# 
  1994     0417                     	;# 
  1995     041C                     	;# 
  1996     041D                     	;# 
  1997     041E                     	;# 
  1998     0FE4                     	;# 
  1999     0FE5                     	;# 
  2000     0FE6                     	;# 
  2001     0FE7                     	;# 
  2002     0FE8                     	;# 
  2003     0FE9                     	;# 
  2004     0FEA                     	;# 
  2005     0FEB                     	;# 
  2006     0FED                     	;# 
  2007     0FEE                     	;# 
  2008     0FEF                     	;# 
  2009     0000                     	;# 
  2010     0001                     	;# 
  2011     0002                     	;# 
  2012     0003                     	;# 
  2013     0004                     	;# 
  2014     0005                     	;# 
  2015     0006                     	;# 
  2016     0007                     	;# 
  2017     0008                     	;# 
  2018     0009                     	;# 
  2019     000A                     	;# 
  2020     000B                     	;# 
  2021     000C                     	;# 
  2022     000D                     	;# 
  2023     0011                     	;# 
  2024     0012                     	;# 
  2025     0013                     	;# 
  2026     0014                     	;# 
  2027     0015                     	;# 
  2028     0016                     	;# 
  2029     0016                     	;# 
  2030     0017                     	;# 
  2031     0018                     	;# 
  2032     0019                     	;# 
  2033     001A                     	;# 
  2034     001B                     	;# 
  2035     001C                     	;# 
  2036     001E                     	;# 
  2037     001F                     	;# 
  2038     008C                     	;# 
  2039     008D                     	;# 
  2040     0091                     	;# 
  2041     0092                     	;# 
  2042     0093                     	;# 
  2043     0094                     	;# 
  2044     0095                     	;# 
  2045     0096                     	;# 
  2046     0097                     	;# 
  2047     0098                     	;# 
  2048     0099                     	;# 
  2049     009A                     	;# 
  2050     009B                     	;# 
  2051     009B                     	;# 
  2052     009C                     	;# 
  2053     009D                     	;# 
  2054     009E                     	;# 
  2055     010C                     	;# 
  2056     010D                     	;# 
  2057     0111                     	;# 
  2058     0112                     	;# 
  2059     0113                     	;# 
  2060     0114                     	;# 
  2061     0115                     	;# 
  2062     0116                     	;# 
  2063     0117                     	;# 
  2064     0118                     	;# 
  2065     0119                     	;# 
  2066     011A                     	;# 
  2067     011B                     	;# 
  2068     011D                     	;# 
  2069     011E                     	;# 
  2070     018C                     	;# 
  2071     018D                     	;# 
  2072     0191                     	;# 
  2073     0191                     	;# 
  2074     0192                     	;# 
  2075     0193                     	;# 
  2076     0193                     	;# 
  2077     0193                     	;# 
  2078     0194                     	;# 
  2079     0195                     	;# 
  2080     0196                     	;# 
  2081     0199                     	;# 
  2082     019A                     	;# 
  2083     019B                     	;# 
  2084     019B                     	;# 
  2085     019B                     	;# 
  2086     019B                     	;# 
  2087     019C                     	;# 
  2088     019C                     	;# 
  2089     019D                     	;# 
  2090     019E                     	;# 
  2091     019F                     	;# 
  2092     020C                     	;# 
  2093     020D                     	;# 
  2094     0211                     	;# 
  2095     0211                     	;# 
  2096     0212                     	;# 
  2097     0212                     	;# 
  2098     0213                     	;# 
  2099     0213                     	;# 
  2100     0214                     	;# 
  2101     0214                     	;# 
  2102     0215                     	;# 
  2103     0215                     	;# 
  2104     0215                     	;# 
  2105     0216                     	;# 
  2106     0216                     	;# 
  2107     0217                     	;# 
  2108     0217                     	;# 
  2109     0219                     	;# 
  2110     021A                     	;# 
  2111     021B                     	;# 
  2112     021C                     	;# 
  2113     021D                     	;# 
  2114     021E                     	;# 
  2115     021F                     	;# 
  2116     0291                     	;# 
  2117     0291                     	;# 
  2118     0292                     	;# 
  2119     0293                     	;# 
  2120     0294                     	;# 
  2121     0295                     	;# 
  2122     0295                     	;# 
  2123     0296                     	;# 
  2124     0298                     	;# 
  2125     0298                     	;# 
  2126     0299                     	;# 
  2127     029A                     	;# 
  2128     029B                     	;# 
  2129     029C                     	;# 
  2130     029C                     	;# 
  2131     029D                     	;# 
  2132     029E                     	;# 
  2133     029E                     	;# 
  2134     0311                     	;# 
  2135     0311                     	;# 
  2136     0312                     	;# 
  2137     0313                     	;# 
  2138     0318                     	;# 
  2139     0318                     	;# 
  2140     0319                     	;# 
  2141     031A                     	;# 
  2142     0394                     	;# 
  2143     0395                     	;# 
  2144     0396                     	;# 
  2145     039A                     	;# 
  2146     039C                     	;# 
  2147     039D                     	;# 
  2148     039E                     	;# 
  2149     039F                     	;# 
  2150     0415                     	;# 
  2151     0416                     	;# 
  2152     0417                     	;# 
  2153     041C                     	;# 
  2154     041D                     	;# 
  2155     041E                     	;# 
  2156     0FE4                     	;# 
  2157     0FE5                     	;# 
  2158     0FE6                     	;# 
  2159     0FE7                     	;# 
  2160     0FE8                     	;# 
  2161     0FE9                     	;# 
  2162     0FEA                     	;# 
  2163     0FEB                     	;# 
  2164     0FED                     	;# 
  2165     0FEE                     	;# 
  2166     0FEF                     	;# 
  2167     0000                     	;# 
  2168     0001                     	;# 
  2169     0002                     	;# 
  2170     0003                     	;# 
  2171     0004                     	;# 
  2172     0005                     	;# 
  2173     0006                     	;# 
  2174     0007                     	;# 
  2175     0008                     	;# 
  2176     0009                     	;# 
  2177     000A                     	;# 
  2178     000B                     	;# 
  2179     000C                     	;# 
  2180     000D                     	;# 
  2181     0011                     	;# 
  2182     0012                     	;# 
  2183     0013                     	;# 
  2184     0014                     	;# 
  2185     0015                     	;# 
  2186     0016                     	;# 
  2187     0016                     	;# 
  2188     0017                     	;# 
  2189     0018                     	;# 
  2190     0019                     	;# 
  2191     001A                     	;# 
  2192     001B                     	;# 
  2193     001C                     	;# 
  2194     001E                     	;# 
  2195     001F                     	;# 
  2196     008C                     	;# 
  2197     008D                     	;# 
  2198     0091                     	;# 
  2199     0092                     	;# 
  2200     0093                     	;# 
  2201     0094                     	;# 
  2202     0095                     	;# 
  2203     0096                     	;# 
  2204     0097                     	;# 
  2205     0098                     	;# 
  2206     0099                     	;# 
  2207     009A                     	;# 
  2208     009B                     	;# 
  2209     009B                     	;# 
  2210     009C                     	;# 
  2211     009D                     	;# 
  2212     009E                     	;# 
  2213     010C                     	;# 
  2214     010D                     	;# 
  2215     0111                     	;# 
  2216     0112                     	;# 
  2217     0113                     	;# 
  2218     0114                     	;# 
  2219     0115                     	;# 
  2220     0116                     	;# 
  2221     0117                     	;# 
  2222     0118                     	;# 
  2223     0119                     	;# 
  2224     011A                     	;# 
  2225     011B                     	;# 
  2226     011D                     	;# 
  2227     011E                     	;# 
  2228     018C                     	;# 
  2229     018D                     	;# 
  2230     0191                     	;# 
  2231     0191                     	;# 
  2232     0192                     	;# 
  2233     0193                     	;# 
  2234     0193                     	;# 
  2235     0193                     	;# 
  2236     0194                     	;# 
  2237     0195                     	;# 
  2238     0196                     	;# 
  2239     0199                     	;# 
  2240     019A                     	;# 
  2241     019B                     	;# 
  2242     019B                     	;# 
  2243     019B                     	;# 
  2244     019B                     	;# 
  2245     019C                     	;# 
  2246     019C                     	;# 
  2247     019D                     	;# 
  2248     019E                     	;# 
  2249     019F                     	;# 
  2250     020C                     	;# 
  2251     020D                     	;# 
  2252     0211                     	;# 
  2253     0211                     	;# 
  2254     0212                     	;# 
  2255     0212                     	;# 
  2256     0213                     	;# 
  2257     0213                     	;# 
  2258     0214                     	;# 
  2259     0214                     	;# 
  2260     0215                     	;# 
  2261     0215                     	;# 
  2262     0215                     	;# 
  2263     0216                     	;# 
  2264     0216                     	;# 
  2265     0217                     	;# 
  2266     0217                     	;# 
  2267     0219                     	;# 
  2268     021A                     	;# 
  2269     021B                     	;# 
  2270     021C                     	;# 
  2271     021D                     	;# 
  2272     021E                     	;# 
  2273     021F                     	;# 
  2274     0291                     	;# 
  2275     0291                     	;# 
  2276     0292                     	;# 
  2277     0293                     	;# 
  2278     0294                     	;# 
  2279     0295                     	;# 
  2280     0295                     	;# 
  2281     0296                     	;# 
  2282     0298                     	;# 
  2283     0298                     	;# 
  2284     0299                     	;# 
  2285     029A                     	;# 
  2286     029B                     	;# 
  2287     029C                     	;# 
  2288     029C                     	;# 
  2289     029D                     	;# 
  2290     029E                     	;# 
  2291     029E                     	;# 
  2292     0311                     	;# 
  2293     0311                     	;# 
  2294     0312                     	;# 
  2295     0313                     	;# 
  2296     0318                     	;# 
  2297     0318                     	;# 
  2298     0319                     	;# 
  2299     031A                     	;# 
  2300     0394                     	;# 
  2301     0395                     	;# 
  2302     0396                     	;# 
  2303     039A                     	;# 
  2304     039C                     	;# 
  2305     039D                     	;# 
  2306     039E                     	;# 
  2307     039F                     	;# 
  2308     0415                     	;# 
  2309     0416                     	;# 
  2310     0417                     	;# 
  2311     041C                     	;# 
  2312     041D                     	;# 
  2313     041E                     	;# 
  2314     0FE4                     	;# 
  2315     0FE5                     	;# 
  2316     0FE6                     	;# 
  2317     0FE7                     	;# 
  2318     0FE8                     	;# 
  2319     0FE9                     	;# 
  2320     0FEA                     	;# 
  2321     0FEB                     	;# 
  2322     0FED                     	;# 
  2323     0FEE                     	;# 
  2324     0FEF                     	;# 
  2325     0000                     	;# 
  2326     0001                     	;# 
  2327     0002                     	;# 
  2328     0003                     	;# 
  2329     0004                     	;# 
  2330     0005                     	;# 
  2331     0006                     	;# 
  2332     0007                     	;# 
  2333     0008                     	;# 
  2334     0009                     	;# 
  2335     000A                     	;# 
  2336     000B                     	;# 
  2337     000C                     	;# 
  2338     000D                     	;# 
  2339     0011                     	;# 
  2340     0012                     	;# 
  2341     0013                     	;# 
  2342     0014                     	;# 
  2343     0015                     	;# 
  2344     0016                     	;# 
  2345     0016                     	;# 
  2346     0017                     	;# 
  2347     0018                     	;# 
  2348     0019                     	;# 
  2349     001A                     	;# 
  2350     001B                     	;# 
  2351     001C                     	;# 
  2352     001E                     	;# 
  2353     001F                     	;# 
  2354     008C                     	;# 
  2355     008D                     	;# 
  2356     0091                     	;# 
  2357     0092                     	;# 
  2358     0093                     	;# 
  2359     0094                     	;# 
  2360     0095                     	;# 
  2361     0096                     	;# 
  2362     0097                     	;# 
  2363     0098                     	;# 
  2364     0099                     	;# 
  2365     009A                     	;# 
  2366     009B                     	;# 
  2367     009B                     	;# 
  2368     009C                     	;# 
  2369     009D                     	;# 
  2370     009E                     	;# 
  2371     010C                     	;# 
  2372     010D                     	;# 
  2373     0111                     	;# 
  2374     0112                     	;# 
  2375     0113                     	;# 
  2376     0114                     	;# 
  2377     0115                     	;# 
  2378     0116                     	;# 
  2379     0117                     	;# 
  2380     0118                     	;# 
  2381     0119                     	;# 
  2382     011A                     	;# 
  2383     011B                     	;# 
  2384     011D                     	;# 
  2385     011E                     	;# 
  2386     018C                     	;# 
  2387     018D                     	;# 
  2388     0191                     	;# 
  2389     0191                     	;# 
  2390     0192                     	;# 
  2391     0193                     	;# 
  2392     0193                     	;# 
  2393     0193                     	;# 
  2394     0194                     	;# 
  2395     0195                     	;# 
  2396     0196                     	;# 
  2397     0199                     	;# 
  2398     019A                     	;# 
  2399     019B                     	;# 
  2400     019B                     	;# 
  2401     019B                     	;# 
  2402     019B                     	;# 
  2403     019C                     	;# 
  2404     019C                     	;# 
  2405     019D                     	;# 
  2406     019E                     	;# 
  2407     019F                     	;# 
  2408     020C                     	;# 
  2409     020D                     	;# 
  2410     0211                     	;# 
  2411     0211                     	;# 
  2412     0212                     	;# 
  2413     0212                     	;# 
  2414     0213                     	;# 
  2415     0213                     	;# 
  2416     0214                     	;# 
  2417     0214                     	;# 
  2418     0215                     	;# 
  2419     0215                     	;# 
  2420     0215                     	;# 
  2421     0216                     	;# 
  2422     0216                     	;# 
  2423     0217                     	;# 
  2424     0217                     	;# 
  2425     0219                     	;# 
  2426     021A                     	;# 
  2427     021B                     	;# 
  2428     021C                     	;# 
  2429     021D                     	;# 
  2430     021E                     	;# 
  2431     021F                     	;# 
  2432     0291                     	;# 
  2433     0291                     	;# 
  2434     0292                     	;# 
  2435     0293                     	;# 
  2436     0294                     	;# 
  2437     0295                     	;# 
  2438     0295                     	;# 
  2439     0296                     	;# 
  2440     0298                     	;# 
  2441     0298                     	;# 
  2442     0299                     	;# 
  2443     029A                     	;# 
  2444     029B                     	;# 
  2445     029C                     	;# 
  2446     029C                     	;# 
  2447     029D                     	;# 
  2448     029E                     	;# 
  2449     029E                     	;# 
  2450     0311                     	;# 
  2451     0311                     	;# 
  2452     0312                     	;# 
  2453     0313                     	;# 
  2454     0318                     	;# 
  2455     0318                     	;# 
  2456     0319                     	;# 
  2457     031A                     	;# 
  2458     0394                     	;# 
  2459     0395                     	;# 
  2460     0396                     	;# 
  2461     039A                     	;# 
  2462     039C                     	;# 
  2463     039D                     	;# 
  2464     039E                     	;# 
  2465     039F                     	;# 
  2466     0415                     	;# 
  2467     0416                     	;# 
  2468     0417                     	;# 
  2469     041C                     	;# 
  2470     041D                     	;# 
  2471     041E                     	;# 
  2472     0FE4                     	;# 
  2473     0FE5                     	;# 
  2474     0FE6                     	;# 
  2475     0FE7                     	;# 
  2476     0FE8                     	;# 
  2477     0FE9                     	;# 
  2478     0FEA                     	;# 
  2479     0FEB                     	;# 
  2480     0FED                     	;# 
  2481     0FEE                     	;# 
  2482     0FEF                     	;# 
  2483     0000                     	;# 
  2484     0001                     	;# 
  2485     0002                     	;# 
  2486     0003                     	;# 
  2487     0004                     	;# 
  2488     0005                     	;# 
  2489     0006                     	;# 
  2490     0007                     	;# 
  2491     0008                     	;# 
  2492     0009                     	;# 
  2493     000A                     	;# 
  2494     000B                     	;# 
  2495     000C                     	;# 
  2496     000D                     	;# 
  2497     0011                     	;# 
  2498     0012                     	;# 
  2499     0013                     	;# 
  2500     0014                     	;# 
  2501     0015                     	;# 
  2502     0016                     	;# 
  2503     0016                     	;# 
  2504     0017                     	;# 
  2505     0018                     	;# 
  2506     0019                     	;# 
  2507     001A                     	;# 
  2508     001B                     	;# 
  2509     001C                     	;# 
  2510     001E                     	;# 
  2511     001F                     	;# 
  2512     008C                     	;# 
  2513     008D                     	;# 
  2514     0091                     	;# 
  2515     0092                     	;# 
  2516     0093                     	;# 
  2517     0094                     	;# 
  2518     0095                     	;# 
  2519     0096                     	;# 
  2520     0097                     	;# 
  2521     0098                     	;# 
  2522     0099                     	;# 
  2523     009A                     	;# 
  2524     009B                     	;# 
  2525     009B                     	;# 
  2526     009C                     	;# 
  2527     009D                     	;# 
  2528     009E                     	;# 
  2529     010C                     	;# 
  2530     010D                     	;# 
  2531     0111                     	;# 
  2532     0112                     	;# 
  2533     0113                     	;# 
  2534     0114                     	;# 
  2535     0115                     	;# 
  2536     0116                     	;# 
  2537     0117                     	;# 
  2538     0118                     	;# 
  2539     0119                     	;# 
  2540     011A                     	;# 
  2541     011B                     	;# 
  2542     011D                     	;# 
  2543     011E                     	;# 
  2544     018C                     	;# 
  2545     018D                     	;# 
  2546     0191                     	;# 
  2547     0191                     	;# 
  2548     0192                     	;# 
  2549     0193                     	;# 
  2550     0193                     	;# 
  2551     0193                     	;# 
  2552     0194                     	;# 
  2553     0195                     	;# 
  2554     0196                     	;# 
  2555     0199                     	;# 
  2556     019A                     	;# 
  2557     019B                     	;# 
  2558     019B                     	;# 
  2559     019B                     	;# 
  2560     019B                     	;# 
  2561     019C                     	;# 
  2562     019C                     	;# 
  2563     019D                     	;# 
  2564     019E                     	;# 
  2565     019F                     	;# 
  2566     020C                     	;# 
  2567     020D                     	;# 
  2568     0211                     	;# 
  2569     0211                     	;# 
  2570     0212                     	;# 
  2571     0212                     	;# 
  2572     0213                     	;# 
  2573     0213                     	;# 
  2574     0214                     	;# 
  2575     0214                     	;# 
  2576     0215                     	;# 
  2577     0215                     	;# 
  2578     0215                     	;# 
  2579     0216                     	;# 
  2580     0216                     	;# 
  2581     0217                     	;# 
  2582     0217                     	;# 
  2583     0219                     	;# 
  2584     021A                     	;# 
  2585     021B                     	;# 
  2586     021C                     	;# 
  2587     021D                     	;# 
  2588     021E                     	;# 
  2589     021F                     	;# 
  2590     0291                     	;# 
  2591     0291                     	;# 
  2592     0292                     	;# 
  2593     0293                     	;# 
  2594     0294                     	;# 
  2595     0295                     	;# 
  2596     0295                     	;# 
  2597     0296                     	;# 
  2598     0298                     	;# 
  2599     0298                     	;# 
  2600     0299                     	;# 
  2601     029A                     	;# 
  2602     029B                     	;# 
  2603     029C                     	;# 
  2604     029C                     	;# 
  2605     029D                     	;# 
  2606     029E                     	;# 
  2607     029E                     	;# 
  2608     0311                     	;# 
  2609     0311                     	;# 
  2610     0312                     	;# 
  2611     0313                     	;# 
  2612     0318                     	;# 
  2613     0318                     	;# 
  2614     0319                     	;# 
  2615     031A                     	;# 
  2616     0394                     	;# 
  2617     0395                     	;# 
  2618     0396                     	;# 
  2619     039A                     	;# 
  2620     039C                     	;# 
  2621     039D                     	;# 
  2622     039E                     	;# 
  2623     039F                     	;# 
  2624     0415                     	;# 
  2625     0416                     	;# 
  2626     0417                     	;# 
  2627     041C                     	;# 
  2628     041D                     	;# 
  2629     041E                     	;# 
  2630     0FE4                     	;# 
  2631     0FE5                     	;# 
  2632     0FE6                     	;# 
  2633     0FE7                     	;# 
  2634     0FE8                     	;# 
  2635     0FE9                     	;# 
  2636     0FEA                     	;# 
  2637     0FEB                     	;# 
  2638     0FED                     	;# 
  2639     0FEE                     	;# 
  2640     0FEF                     	;# 
  2641                           
  2642 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  2643     0000                     
  2644 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  2645     0000                     
  2646 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  2647     0000                     
  2648                           	psect	idataBANK0
  2649     0B84                     __pidataBANK0:
  2650                           
  2651                           ;initializer for _kpf
  2652     0B84  3415               	retlw	21
  2653     0B85  3400               	retlw	0
  2654     0B86  3400               	retlw	0
  2655                           
  2656                           ;initializer for _first_read
  2657     0B87  3401               	retlw	1
  2658                           
  2659                           	psect	idataBANK1
  2660     0003                     __pidataBANK1:
  2661                           
  2662                           ;initializer for _fim_curso
  2663     0003  3401               	retlw	1
  2664                           
  2665                           	psect	idataBANK2
  2666     0C50                     __pidataBANK2:
  2667                           
  2668                           ;initializer for _timecontrol
  2669     0C50  3404               	retlw	4
  2670     0C51  3400               	retlw	0
  2671     0C52  3400               	retlw	0
  2672                           
  2673                           ;initializer for _kdp
  2674     0C53  340F               	retlw	15
  2675     0C54  3400               	retlw	0
  2676     0C55  3400               	retlw	0
  2677                           
  2678                           ;initializer for _kip
  2679     0C56  3411               	retlw	17
  2680     0C57  3400               	retlw	0
  2681     0C58  3400               	retlw	0
  2682                           
  2683                           ;initializer for _kpp
  2684     0C59  3420               	retlw	32
  2685     0C5A  3400               	retlw	0
  2686     0C5B  3400               	retlw	0
  2687                           
  2688                           ;initializer for _kdf
  2689     0C5C  346D               	retlw	109
  2690     0C5D  3400               	retlw	0
  2691     0C5E  3400               	retlw	0
  2692                           
  2693                           	psect	stringtext1
  2694     044A                     __pstringtext1:
  2695     044A                     _lookupTable:
  2696     044A  348D               	retlw	141
  2697     044B  34B3               	retlw	179
  2698     044C  3429               	retlw	41
  2699     044D  343D               	retlw	61
  2700     044E  343E               	retlw	62
  2701     044F  3403               	retlw	3
  2702     0450  342A               	retlw	42
  2703     0451  343D               	retlw	61
  2704     0452  34F0               	retlw	240
  2705     0453  3452               	retlw	82
  2706     0454  342A               	retlw	42
  2707     0455  343D               	retlw	61
  2708     0456  3494               	retlw	148
  2709     0457  34A1               	retlw	161
  2710     0458  342A               	retlw	42
  2711     0459  343D               	retlw	61
  2712     045A  3445               	retlw	69
  2713     045B  34F1               	retlw	241
  2714     045C  342A               	retlw	42
  2715     045D  343D               	retlw	61
  2716     045E  34EA               	retlw	234
  2717     045F  343F               	retlw	63
  2718     0460  342B               	retlw	43
  2719     0461  343D               	retlw	61
  2720     0462  348F               	retlw	143
  2721     0463  348E               	retlw	142
  2722     0464  342B               	retlw	43
  2723     0465  343D               	retlw	61
  2724     0466  3433               	retlw	51
  2725     0467  34DD               	retlw	221
  2726     0468  342B               	retlw	43
  2727     0469  343D               	retlw	61
  2728     046A  34D8               	retlw	216
  2729     046B  342B               	retlw	43
  2730     046C  342C               	retlw	44
  2731     046D  343D               	retlw	61
  2732     046E  3470               	retlw	112
  2733     046F  3479               	retlw	121
  2734     0470  342C               	retlw	44
  2735     0471  343D               	retlw	61
  2736     0472  3415               	retlw	21
  2737     0473  34C8               	retlw	200
  2738     0474  342C               	retlw	44
  2739     0475  343D               	retlw	61
  2740     0476  34AD               	retlw	173
  2741     0477  3415               	retlw	21
  2742     0478  342D               	retlw	45
  2743     0479  343D               	retlw	61
  2744     047A  3452               	retlw	82
  2745     047B  3464               	retlw	100
  2746     047C  342D               	retlw	45
  2747     047D  343D               	retlw	61
  2748     047E  34EA               	retlw	234
  2749     047F  34B1               	retlw	177
  2750     0480  342D               	retlw	45
  2751     0481  343D               	retlw	61
  2752     0482  3482               	retlw	130
  2753     0483  34FF               	retlw	255
  2754     0484  342D               	retlw	45
  2755     0485  343D               	retlw	61
  2756     0486  341A               	retlw	26
  2757     0487  344D               	retlw	77
  2758     0488  342E               	retlw	46
  2759     0489  343D               	retlw	61
  2760     048A  34A6               	retlw	166
  2761     048B  3499               	retlw	153
  2762     048C  342E               	retlw	46
  2763     048D  343D               	retlw	61
  2764     048E  343E               	retlw	62
  2765     048F  34E7               	retlw	231
  2766     0490  342E               	retlw	46
  2767     0491  343D               	retlw	61
  2768     0492  34D7               	retlw	215
  2769     0493  3434               	retlw	52
  2770     0494  342F               	retlw	47
  2771     0495  343D               	retlw	61
  2772     0496  3462               	retlw	98
  2773     0497  3481               	retlw	129
  2774     0498  342F               	retlw	47
  2775     0499  343D               	retlw	61
  2776     049A  34EE               	retlw	238
  2777     049B  34CD               	retlw	205
  2778     049C  342F               	retlw	47
  2779     049D  343D               	retlw	61
  2780     049E  347A               	retlw	122
  2781     049F  341A               	retlw	26
  2782     04A0  3430               	retlw	48
  2783     04A1  343D               	retlw	61
  2784     04A2  3406               	retlw	6
  2785     04A3  3467               	retlw	103
  2786     04A4  3430               	retlw	48
  2787     04A5  343D               	retlw	61
  2788     04A6  3492               	retlw	146
  2789     04A7  34B3               	retlw	179
  2790     04A8  3430               	retlw	48
  2791     04A9  343D               	retlw	61
  2792     04AA  341D               	retlw	29
  2793     04AB  3400               	retlw	0
  2794     04AC  3431               	retlw	49
  2795     04AD  343D               	retlw	61
  2796     04AE  34A9               	retlw	169
  2797     04AF  344C               	retlw	76
  2798     04B0  3431               	retlw	49
  2799     04B1  343D               	retlw	61
  2800     04B2  3429               	retlw	41
  2801     04B3  3498               	retlw	152
  2802     04B4  3431               	retlw	49
  2803     04B5  343D               	retlw	61
  2804     04B6  34B4               	retlw	180
  2805     04B7  34E4               	retlw	228
  2806     04B8  3431               	retlw	49
  2807     04B9  343D               	retlw	61
  2808     04BA  3434               	retlw	52
  2809     04BB  3430               	retlw	48
  2810     04BC  3432               	retlw	50
  2811     04BD  343D               	retlw	61
  2812     04BE  34B3               	retlw	179
  2813     04BF  347B               	retlw	123
  2814     04C0  3432               	retlw	50
  2815     04C1  343D               	retlw	61
  2816     04C2  3432               	retlw	50
  2817     04C3  34C7               	retlw	199
  2818     04C4  3432               	retlw	50
  2819     04C5  343D               	retlw	61
  2820     04C6  34B2               	retlw	178
  2821     04C7  3412               	retlw	18
  2822     04C8  3433               	retlw	51
  2823     04C9  343D               	retlw	61
  2824     04CA  3431               	retlw	49
  2825     04CB  345E               	retlw	94
  2826     04CC  3433               	retlw	51
  2827     04CD  343D               	retlw	61
  2828     04CE  34B0               	retlw	176
  2829     04CF  34A9               	retlw	169
  2830     04D0  3433               	retlw	51
  2831     04D1  343D               	retlw	61
  2832     04D2  3423               	retlw	35
  2833     04D3  34F4               	retlw	244
  2834     04D4  3433               	retlw	51
  2835     04D5  343D               	retlw	61
  2836     04D6  34A3               	retlw	163
  2837     04D7  343F               	retlw	63
  2838     04D8  3434               	retlw	52
  2839     04D9  343D               	retlw	61
  2840     04DA  3416               	retlw	22
  2841     04DB  348A               	retlw	138
  2842     04DC  3434               	retlw	52
  2843     04DD  343D               	retlw	61
  2844     04DE  3489               	retlw	137
  2845     04DF  34D4               	retlw	212
  2846     04E0  3434               	retlw	52
  2847     04E1  343D               	retlw	61
  2848     04E2  34FB               	retlw	251
  2849     04E3  341E               	retlw	30
  2850     04E4  3435               	retlw	53
  2851     04E5  343D               	retlw	61
  2852     04E6  346E               	retlw	110
  2853     04E7  3469               	retlw	105
  2854     04E8  3435               	retlw	53
  2855     04E9  343D               	retlw	61
  2856     04EA  34E1               	retlw	225
  2857     04EB  34B3               	retlw	179
  2858     04EC  3435               	retlw	53
  2859     04ED  343D               	retlw	61
  2860     04EE  3454               	retlw	84
  2861     04EF  34FE               	retlw	254
  2862     04F0  3435               	retlw	53
  2863     04F1  343D               	retlw	61
  2864     04F2  34C7               	retlw	199
  2865     04F3  3448               	retlw	72
  2866     04F4  3436               	retlw	54
  2867     04F5  343D               	retlw	61
  2868     04F6  342E               	retlw	46
  2869     04F7  3492               	retlw	146
  2870     04F8  3436               	retlw	54
  2871     04F9  343D               	retlw	61
  2872     04FA  34A0               	retlw	160
  2873     04FB  34DC               	retlw	220
  2874     04FC  3436               	retlw	54
  2875     04FD  343D               	retlw	61
  2876     04FE  3407               	retlw	7
  2877     04FF  3426               	retlw	38
  2878     0500  3437               	retlw	55
  2879     0501  343D               	retlw	61
  2880     0502  346D               	retlw	109
  2881     0503  346F               	retlw	111
  2882     0504  3437               	retlw	55
  2883     0505  343D               	retlw	61
  2884     0506  34D4               	retlw	212
  2885     0507  34B8               	retlw	184
  2886     0508  3437               	retlw	55
  2887     0509  343D               	retlw	61
  2888     050A  343A               	retlw	58
  2889     050B  3402               	retlw	2
  2890     050C  3438               	retlw	56
  2891     050D  343D               	retlw	61
  2892     050E  34A1               	retlw	161
  2893     050F  344B               	retlw	75
  2894     0510  3438               	retlw	56
  2895     0511  343D               	retlw	61
  2896     0512  3407               	retlw	7
  2897     0513  3495               	retlw	149
  2898     0514  3438               	retlw	56
  2899     0515  343D               	retlw	61
  2900     0516                     __end_of_lookupTable:
  2901                           
  2902                           	psect	nvBANK0
  2903     006E                     __pnvBANK0:
  2904     006E                     _TMR1_GateInterruptHandler:
  2905     006E                     	ds	2
  2906                           
  2907                           	psect	nvBANK2
  2908     012F                     __pnvBANK2:
  2909     012F                     _EUSART_ErrorHandler:
  2910     012F                     	ds	2
  2911     0131                     _EUSART_OverrunErrorHandler:
  2912     0131                     	ds	2
  2913     0133                     _EUSART_FramingErrorHandler:
  2914     0133                     	ds	2
  2915     0018                     _T1CONbits	set	24
  2916     0018                     _T1CON	set	24
  2917     0016                     _TMR1L	set	22
  2918     0017                     _TMR1H	set	23
  2919     0019                     _T1GCON	set	25
  2920     0015                     _TMR0	set	21
  2921     0013                     _PIR3bits	set	19
  2922     001C                     _T2CON	set	28
  2923     0011                     _PIR1bits	set	17
  2924     001A                     _TMR2	set	26
  2925     001B                     _PR2	set	27
  2926     000B                     _INTCONbits	set	11
  2927     009D                     _ADCON0bits	set	157
  2928     009D                     _ADCON0	set	157
  2929     009C                     _ADRESH	set	156
  2930     009B                     _ADRESL	set	155
  2931     009E                     _ADCON1	set	158
  2932     0095                     _OPTION_REG	set	149
  2933     0091                     _PIE1bits	set	145
  2934     0095                     _OPTION_REGbits	set	149
  2935     008D                     _TRISB	set	141
  2936     008C                     _TRISA	set	140
  2937     0097                     _WDTCON	set	151
  2938     0098                     _OSCTUNE	set	152
  2939     0099                     _OSCCON	set	153
  2940     010C                     _LATAbits	set	268
  2941     0115                     _CMOUTbits	set	277
  2942     0112                     _CM1CON1	set	274
  2943     0111                     _CM1CON0	set	273
  2944     0119                     _DACCON1	set	281
  2945     0118                     _DACCON0	set	280
  2946     0117                     _FVRCON	set	279
  2947     011E                     _APFCON1	set	286
  2948     011D                     _APFCON0	set	285
  2949     010D                     _LATB	set	269
  2950     010C                     _LATA	set	268
  2951     0116                     _BORCON	set	278
  2952     019A                     _TXREG	set	410
  2953     0199                     _RCREG	set	409
  2954     019D                     _RCSTAbits	set	413
  2955     019C                     _SPBRGH	set	412
  2956     019B                     _SPBRGL	set	411
  2957     019E                     _TXSTA	set	414
  2958     019D                     _RCSTA	set	413
  2959     019F                     _BAUDCON	set	415
  2960     018C                     _ANSELA	set	396
  2961     018D                     _ANSELB	set	397
  2962     020C                     _WPUA	set	524
  2963     020D                     _WPUB	set	525
  2964     029E                     _CCPTMRS0bits	set	670
  2965     0291                     _CCPR1L	set	657
  2966     0292                     _CCPR1H	set	658
  2967     0296                     _PSTR1CON	set	662
  2968     0294                     _PWM1CON	set	660
  2969     0295                     _ECCP1AS	set	661
  2970     0293                     _CCP1CON	set	659
  2971     041E                     _T6CON	set	1054
  2972     041C                     _TMR6	set	1052
  2973     041D                     _PR6	set	1053
  2974     0417                     _T4CONbits	set	1047
  2975     0417                     _T4CON	set	1047
  2976     0415                     _TMR4	set	1045
  2977     0416                     _PR4	set	1046
  2978                           
  2979                           	psect	cinit
  2980     001B                     start_initialization:	
  2981                           ; #config settings
  2982                           
  2983     001B                     __initialization:
  2984                           
  2985                           ; Initialize objects allocated to BANK0
  2986     001B  3084               	movlw	low __pidataBANK0
  2987     001C  0084               	movwf	4
  2988     001D  308B               	movlw	(high __pidataBANK0)| (0+128)
  2989     001E  0085               	movwf	5
  2990     001F  306A               	movlw	low __pdataBANK0
  2991     0020  0086               	movwf	6
  2992     0021  3000               	movlw	high __pdataBANK0
  2993     0022  0087               	movwf	7
  2994     0023  3004               	movlw	4
  2995     0024  318B  23B0  3180   	fcall	init_ram
  2996                           
  2997                           ; Initialize objects allocated to BANK1
  2998     0027  0021               	movlb	1	; select bank1
  2999     0028  3180  2003  3180   	fcall	__pidataBANK1	;fetch initializer
  3000     002B  00EE               	movwf	__pdataBANK1& (0+127)
  3001                           
  3002                           ; Initialize objects allocated to BANK2
  3003     002C  3050               	movlw	low __pidataBANK2
  3004     002D  0084               	movwf	4
  3005     002E  308C               	movlw	(high __pidataBANK2)| (0+128)
  3006     002F  0085               	movwf	5
  3007     0030  3020               	movlw	low __pdataBANK2
  3008     0031  0086               	movwf	6
  3009     0032  3001               	movlw	high __pdataBANK2
  3010     0033  0087               	movwf	7
  3011     0034  300F               	movlw	15
  3012     0035  318B  23B0  3180   	fcall	init_ram
  3013                           
  3014                           ; Clear objects allocated to BANK0
  3015     0038  3053               	movlw	low __pbssBANK0
  3016     0039  0084               	movwf	4
  3017     003A  3000               	movlw	high __pbssBANK0
  3018     003B  0085               	movwf	5
  3019     003C  3017               	movlw	23
  3020     003D  318B  23AA  3180   	fcall	clear_ram0
  3021                           
  3022                           ; Clear objects allocated to BANK1
  3023     0040  30A0               	movlw	low __pbssBANK1
  3024     0041  0084               	movwf	4
  3025     0042  3000               	movlw	high __pbssBANK1
  3026     0043  0085               	movwf	5
  3027     0044  302C               	movlw	44
  3028     0045  318B  23AA         	fcall	clear_ram0
  3029     0047                     end_of_initialization:	
  3030                           ;End of C runtime variable initialization code
  3031                           
  3032     0047                     __end_of__initialization:
  3033     0047  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3034     0048  0020               	movlb	0
  3035     0049  3186  2E9C         	ljmp	_main	;jump to C main() function
  3036                           
  3037                           	psect	bssBANK0
  3038     0053                     __pbssBANK0:
  3039     0053                     _bufferRx:
  3040     0053                     	ds	8
  3041     005B                     _flux:
  3042     005B                     	ds	3
  3043     005E                     _ballset:
  3044     005E                     	ds	3
  3045     0061                     _tempo_voo:
  3046     0061                     	ds	2
  3047     0063                     _sp_height:
  3048     0063                     	ds	2
  3049     0065                     _ADC_InterruptHandler:
  3050     0065                     	ds	2
  3051     0067                     _func_mode:
  3052     0067                     	ds	1
  3053     0068                     _sentido:
  3054     0068                     	ds	1
  3055     0069                     _timer0ReloadVal:
  3056     0069                     	ds	1
  3057                           
  3058                           	psect	dataBANK0
  3059     006A                     __pdataBANK0:
  3060     006A                     _kpf:
  3061     006A                     	ds	3
  3062     006D                     _first_read:
  3063     006D                     	ds	1
  3064                           
  3065                           	psect	bssBANK1
  3066     00A0                     __pbssBANK1:
  3067     00A0                     _avg_tempo_voo:
  3068     00A0                     	ds	4
  3069     00A4                     _outpre:
  3070     00A4                     	ds	3
  3071     00A7                     _outputsum:
  3072     00A7                     	ds	3
  3073     00AA                     _balldist:
  3074     00AA                     	ds	3
  3075     00AD                     _errorp:
  3076     00AD                     	ds	3
  3077     00B0                     _error:
  3078     00B0                     	ds	3
  3079     00B3                     _height:
  3080     00B3                     	ds	2
  3081     00B5                     _adc_temp:
  3082     00B5                     	ds	2
  3083     00B7                     _sp_position:
  3084     00B7                     	ds	2
  3085     00B9                     _position:
  3086     00B9                     	ds	2
  3087     00BB                     _dc:
  3088     00BB                     	ds	2
  3089     00BD                     _vRx:
  3090     00BD                     	ds	2
  3091     00BF                     _vTx:
  3092     00BF                     	ds	2
  3093     00C1                     _output:
  3094     00C1                     	ds	2
  3095     00C3                     _timer1ReloadVal:
  3096     00C3                     	ds	2
  3097     00C5                     _passo_ctrl:
  3098     00C5                     	ds	1
  3099     00C6                     _passo:
  3100     00C6                     	ds	1
  3101     00C7                     _nao_salva:
  3102     00C7                     	ds	1
  3103     00C8                     _count_Tx:
  3104     00C8                     	ds	1
  3105     00C9                     _countRx:
  3106     00C9                     	ds	1
  3107     00CA                     _controlchoice:
  3108     00CA                     	ds	1
  3109     00CB                     _eusartRxLastError:
  3110     00CB                     	ds	1
  3111                           
  3112                           	psect	dataBANK1
  3113     00EE                     __pdataBANK1:
  3114     00EE                     _fim_curso:
  3115     00EE                     	ds	1
  3116                           
  3117                           	psect	dataBANK2
  3118     0120                     __pdataBANK2:
  3119     0120                     _timecontrol:
  3120     0120                     	ds	3
  3121     0123                     _kdp:
  3122     0123                     	ds	3
  3123     0126                     _kip:
  3124     0126                     	ds	3
  3125     0129                     _kpp:
  3126     0129                     	ds	3
  3127     012C                     _kdf:
  3128     012C                     	ds	3
  3129                           
  3130                           	psect	inittext
  3131     0BB0                     init_ram:
  3132     0BB0  00FE               	movwf	126
  3133     0BB1                     initloop:
  3134     0BB1  0012               	moviw fsr0++
  3135     0BB2  001E               	movwi fsr1++
  3136     0BB3  0BFE               	decfsz	126,f
  3137     0BB4  2BB1               	goto	initloop
  3138     0BB5  3400               	retlw	0
  3139                           
  3140                           	psect	clrtext
  3141     0BAA                     clear_ram0:	
  3142                           ;	Called with FSR0 containing the base address, and
  3143                           ;	WREG with the size to clear
  3144                           
  3145     0BAA  0064               	clrwdt	;clear the watchdog before getting into this loop
  3146     0BAB                     clrloop0:
  3147     0BAB  0180               	clrf	0	;clear RAM location pointed to by FSR
  3148     0BAC  3101               	addfsr 0,1
  3149     0BAD  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3150     0BAE  2BAB               	goto	clrloop0	;have we reached the end yet?
  3151     0BAF  3400               	retlw	0	;all done for this memory range, return
  3152                           
  3153                           	psect	cstackBANK1
  3154     00CC                     __pcstackBANK1:
  3155     00CC                     ??_PIN_MANAGER_Initialize:
  3156     00CC                     ??_OSCILLATOR_Initialize:	
  3157                           ; 1 bytes @ 0x0
  3158                           
  3159     00CC                     ??_WDT_Initialize:	
  3160                           ; 1 bytes @ 0x0
  3161                           
  3162     00CC                     ??_FVR_Initialize:	
  3163                           ; 1 bytes @ 0x0
  3164                           
  3165     00CC                     ??_DAC_Initialize:	
  3166                           ; 1 bytes @ 0x0
  3167                           
  3168     00CC                     ??_TMR4_Initialize:	
  3169                           ; 1 bytes @ 0x0
  3170                           
  3171     00CC                     ??_TMR2_Initialize:	
  3172                           ; 1 bytes @ 0x0
  3173                           
  3174     00CC                     ??_TMR0_Initialize:	
  3175                           ; 1 bytes @ 0x0
  3176                           
  3177     00CC                     ??_TMR6_Initialize:	
  3178                           ; 1 bytes @ 0x0
  3179                           
  3180     00CC                     ??_CMP1_Initialize:	
  3181                           ; 1 bytes @ 0x0
  3182                           
  3183     00CC                     ??_ADC_Initialize:	
  3184                           ; 1 bytes @ 0x0
  3185                           
  3186     00CC                     ??_EPWM1_Initialize:	
  3187                           ; 1 bytes @ 0x0
  3188                           
  3189     00CC                     ?_EUSART_SetFramingErrorHandler:	
  3190                           ; 1 bytes @ 0x0
  3191                           
  3192     00CC                     ?_EUSART_SetOverrunErrorHandler:	
  3193                           ; 1 bytes @ 0x0
  3194                           
  3195     00CC                     ?_EUSART_SetErrorHandler:	
  3196                           ; 1 bytes @ 0x0
  3197                           
  3198     00CC                     ?_TMR1_SetGateInterruptHandler:	
  3199                           ; 1 bytes @ 0x0
  3200                           
  3201     00CC                     ?_definePassoMotor:	
  3202                           ; 1 bytes @ 0x0
  3203                           
  3204     00CC                     ??_TMR4_StartTimer:	
  3205                           ; 1 bytes @ 0x0
  3206                           
  3207     00CC                     ??_TMR4_StopTimer:	
  3208                           ; 1 bytes @ 0x0
  3209                           
  3210     00CC                     ?_EPWM1_LoadDutyValue:	
  3211                           ; 1 bytes @ 0x0
  3212                           
  3213     00CC                     ??_EUSART_is_rx_ready:	
  3214                           ; 1 bytes @ 0x0
  3215                           
  3216     00CC                     ??_EUSART_Read:	
  3217                           ; 1 bytes @ 0x0
  3218                           
  3219     00CC                     ??_EUSART_Write:	
  3220                           ; 1 bytes @ 0x0
  3221                           
  3222     00CC                     ??_TMR0_ReadTimer:	
  3223                           ; 1 bytes @ 0x0
  3224                           
  3225     00CC                     ??_TMR6_WriteTimer:	
  3226                           ; 1 bytes @ 0x0
  3227                           
  3228     00CC                     ??_TMR6_LoadPeriodRegister:	
  3229                           ; 1 bytes @ 0x0
  3230                           
  3231     00CC                     ?_ADC_GetConversion:	
  3232                           ; 1 bytes @ 0x0
  3233                           
  3234     00CC                     ?___lwdiv:	
  3235                           ; 2 bytes @ 0x0
  3236                           
  3237     00CC                     ?___tmul:	
  3238                           ; 2 bytes @ 0x0
  3239                           
  3240     00CC                     ?___fltol:	
  3241                           ; 3 bytes @ 0x0
  3242                           
  3243     00CC                     EUSART_Write@txData:	
  3244                           ; 4 bytes @ 0x0
  3245                           
  3246     00CC                     TMR0_ReadTimer@readVal:	
  3247                           ; 1 bytes @ 0x0
  3248                           
  3249     00CC                     TMR6_WriteTimer@timerVal:	
  3250                           ; 1 bytes @ 0x0
  3251                           
  3252     00CC                     TMR6_LoadPeriodRegister@periodVal:	
  3253                           ; 1 bytes @ 0x0
  3254                           
  3255     00CC                     definePassoMotor@sentido:	
  3256                           ; 1 bytes @ 0x0
  3257                           
  3258     00CC                     EPWM1_LoadDutyValue@dutyValue:	
  3259                           ; 1 bytes @ 0x0
  3260                           
  3261     00CC                     EUSART_SetFramingErrorHandler@interruptHandler:	
  3262                           ; 2 bytes @ 0x0
  3263                           
  3264     00CC                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  3265                           ; 2 bytes @ 0x0
  3266                           
  3267     00CC                     EUSART_SetErrorHandler@interruptHandler:	
  3268                           ; 2 bytes @ 0x0
  3269                           
  3270     00CC                     TMR1_SetGateInterruptHandler@InterruptHandler:	
  3271                           ; 2 bytes @ 0x0
  3272                           
  3273     00CC                     ___lwdiv@divisor:	
  3274                           ; 2 bytes @ 0x0
  3275                           
  3276     00CC                     ___tmul@multiplier:	
  3277                           ; 2 bytes @ 0x0
  3278                           
  3279     00CC                     ___fltol@f1:	
  3280                           ; 3 bytes @ 0x0
  3281                           
  3282                           
  3283                           ; 4 bytes @ 0x0
  3284     00CC                     	ds	1
  3285     00CD                     ??_definePassoMotor:
  3286                           
  3287                           ; 1 bytes @ 0x1
  3288     00CD                     	ds	1
  3289     00CE                     ??_TMR1_Initialize:
  3290     00CE                     ??_EUSART_Initialize:	
  3291                           ; 1 bytes @ 0x2
  3292                           
  3293     00CE                     ??_EUSART_SetFramingErrorHandler:	
  3294                           ; 1 bytes @ 0x2
  3295                           
  3296     00CE                     ??_EUSART_SetOverrunErrorHandler:	
  3297                           ; 1 bytes @ 0x2
  3298                           
  3299     00CE                     ??_EUSART_SetErrorHandler:	
  3300                           ; 1 bytes @ 0x2
  3301                           
  3302     00CE                     ??_TMR1_SetGateInterruptHandler:	
  3303                           ; 1 bytes @ 0x2
  3304                           
  3305     00CE                     ??_SYSTEM_Initialize:	
  3306                           ; 1 bytes @ 0x2
  3307                           
  3308     00CE                     ??_EPWM1_LoadDutyValue:	
  3309                           ; 1 bytes @ 0x2
  3310                           
  3311     00CE                     ??_ADC_GetConversion:	
  3312                           ; 1 bytes @ 0x2
  3313                           
  3314     00CE                     definePassoMotor@passom:	
  3315                           ; 1 bytes @ 0x2
  3316                           
  3317     00CE                     ___lwdiv@dividend:	
  3318                           ; 1 bytes @ 0x2
  3319                           
  3320                           
  3321                           ; 2 bytes @ 0x2
  3322     00CE                     	ds	1
  3323     00CF                     ??_daUmPasso:
  3324     00CF                     ADC_GetConversion@channel:	
  3325                           ; 1 bytes @ 0x3
  3326                           
  3327     00CF                     daUmPasso@sentido:	
  3328                           ; 1 bytes @ 0x3
  3329                           
  3330     00CF                     ___tmul@multiplicand:	
  3331                           ; 1 bytes @ 0x3
  3332                           
  3333                           
  3334                           ; 3 bytes @ 0x3
  3335     00CF                     	ds	1
  3336     00D0                     ??_fluxpos:
  3337     00D0                     ??_analisa_Rx:	
  3338                           ; 1 bytes @ 0x4
  3339                           
  3340     00D0                     ??___fltol:	
  3341                           ; 1 bytes @ 0x4
  3342                           
  3343     00D0                     ??___lwdiv:	
  3344                           ; 1 bytes @ 0x4
  3345                           
  3346                           
  3347                           ; 1 bytes @ 0x4
  3348     00D0                     	ds	1
  3349     00D1                     ___lwdiv@quotient:
  3350                           
  3351                           ; 2 bytes @ 0x5
  3352     00D1                     	ds	1
  3353     00D2                     ??___tmul:
  3354     00D2                     ___tmul@product:	
  3355                           ; 1 bytes @ 0x6
  3356                           
  3357                           
  3358                           ; 3 bytes @ 0x6
  3359     00D2                     	ds	1
  3360     00D3                     ___lwdiv@counter:
  3361                           
  3362                           ; 1 bytes @ 0x7
  3363     00D3                     	ds	1
  3364     00D4                     ___fltol@sign1:
  3365                           
  3366                           ; 1 bytes @ 0x8
  3367     00D4                     	ds	1
  3368     00D5                     ??_fluxcontrol:
  3369     00D5                     ?___atdiv:	
  3370                           ; 1 bytes @ 0x9
  3371                           
  3372     00D5                     ___fltol@exp1:	
  3373                           ; 3 bytes @ 0x9
  3374                           
  3375     00D5                     ___atdiv@divisor:	
  3376                           ; 1 bytes @ 0x9
  3377                           
  3378                           
  3379                           ; 3 bytes @ 0x9
  3380     00D5                     	ds	1
  3381     00D6                     ??_envia_Tx:
  3382                           
  3383                           ; 1 bytes @ 0xA
  3384     00D6                     	ds	2
  3385     00D8                     ___atdiv@dividend:
  3386                           
  3387                           ; 3 bytes @ 0xC
  3388     00D8                     	ds	3
  3389     00DB                     ??___atdiv:
  3390                           
  3391                           ; 1 bytes @ 0xF
  3392     00DB                     	ds	1
  3393     00DC                     ___atdiv@counter:
  3394                           
  3395                           ; 1 bytes @ 0x10
  3396     00DC                     	ds	1
  3397     00DD                     ___atdiv@sign:
  3398                           
  3399                           ; 1 bytes @ 0x11
  3400     00DD                     	ds	1
  3401     00DE                     ___atdiv@quotient:
  3402                           
  3403                           ; 3 bytes @ 0x12
  3404     00DE                     	ds	3
  3405     00E1                     ??_pwmcontrol:
  3406                           
  3407                           ; 1 bytes @ 0x15
  3408     00E1                     	ds	12
  3409     00ED                     ??_controlchoose:
  3410     00ED                     ??_main:	
  3411                           ; 1 bytes @ 0x21
  3412                           
  3413                           
  3414                           ; 1 bytes @ 0x21
  3415     00ED                     	ds	1
  3416                           
  3417                           	psect	cstackCOMMON
  3418     0070                     __pcstackCOMMON:
  3419     0070                     ?_PIN_MANAGER_Initialize:
  3420     0070                     ?_OSCILLATOR_Initialize:	
  3421                           ; 1 bytes @ 0x0
  3422                           
  3423     0070                     ?_WDT_Initialize:	
  3424                           ; 1 bytes @ 0x0
  3425                           
  3426     0070                     ?_FVR_Initialize:	
  3427                           ; 1 bytes @ 0x0
  3428                           
  3429     0070                     ?_DAC_Initialize:	
  3430                           ; 1 bytes @ 0x0
  3431                           
  3432     0070                     ?_TMR4_Initialize:	
  3433                           ; 1 bytes @ 0x0
  3434                           
  3435     0070                     ?_TMR2_Initialize:	
  3436                           ; 1 bytes @ 0x0
  3437                           
  3438     0070                     ?_TMR0_Initialize:	
  3439                           ; 1 bytes @ 0x0
  3440                           
  3441     0070                     ?_TMR6_Initialize:	
  3442                           ; 1 bytes @ 0x0
  3443                           
  3444     0070                     ?_CMP1_Initialize:	
  3445                           ; 1 bytes @ 0x0
  3446                           
  3447     0070                     ?_ADC_Initialize:	
  3448                           ; 1 bytes @ 0x0
  3449                           
  3450     0070                     ?_EPWM1_Initialize:	
  3451                           ; 1 bytes @ 0x0
  3452                           
  3453     0070                     ?_TMR1_Initialize:	
  3454                           ; 1 bytes @ 0x0
  3455                           
  3456     0070                     ?_EUSART_Initialize:	
  3457                           ; 1 bytes @ 0x0
  3458                           
  3459     0070                     ?_TMR1_GATE_ISR:	
  3460                           ; 1 bytes @ 0x0
  3461                           
  3462     0070                     ?_TMR1_DefaultGateInterruptHandler:	
  3463                           ; 1 bytes @ 0x0
  3464                           
  3465     0070                     ??_TMR1_DefaultGateInterruptHandler:	
  3466                           ; 1 bytes @ 0x0
  3467                           
  3468     0070                     ?_daUmPasso:	
  3469                           ; 1 bytes @ 0x0
  3470                           
  3471     0070                     ?_pwmcontrol:	
  3472                           ; 1 bytes @ 0x0
  3473                           
  3474     0070                     ?_fluxcontrol:	
  3475                           ; 1 bytes @ 0x0
  3476                           
  3477     0070                     ?_SYSTEM_Initialize:	
  3478                           ; 1 bytes @ 0x0
  3479                           
  3480     0070                     ?_PIN_MANAGER_IOC:	
  3481                           ; 1 bytes @ 0x0
  3482                           
  3483     0070                     ??_PIN_MANAGER_IOC:	
  3484                           ; 1 bytes @ 0x0
  3485                           
  3486     0070                     ?_TMR4_StartTimer:	
  3487                           ; 1 bytes @ 0x0
  3488                           
  3489     0070                     ?_TMR4_StopTimer:	
  3490                           ; 1 bytes @ 0x0
  3491                           
  3492     0070                     ?_INTERRUPT_InterruptManager:	
  3493                           ; 1 bytes @ 0x0
  3494                           
  3495     0070                     ?_EUSART_is_rx_ready:	
  3496                           ; 1 bytes @ 0x0
  3497                           
  3498     0070                     ?_EUSART_Read:	
  3499                           ; 1 bytes @ 0x0
  3500                           
  3501     0070                     ?_EUSART_Write:	
  3502                           ; 1 bytes @ 0x0
  3503                           
  3504     0070                     ?_TMR0_ReadTimer:	
  3505                           ; 1 bytes @ 0x0
  3506                           
  3507     0070                     ?_TMR6_WriteTimer:	
  3508                           ; 1 bytes @ 0x0
  3509                           
  3510     0070                     ?_TMR6_LoadPeriodRegister:	
  3511                           ; 1 bytes @ 0x0
  3512                           
  3513     0070                     ?_TMR1_WriteTimer:	
  3514                           ; 1 bytes @ 0x0
  3515                           
  3516     0070                     ?_TMR1_Reload:	
  3517                           ; 1 bytes @ 0x0
  3518                           
  3519     0070                     ?_fluxpos:	
  3520                           ; 1 bytes @ 0x0
  3521                           
  3522     0070                     ?_controlchoose:	
  3523                           ; 1 bytes @ 0x0
  3524                           
  3525     0070                     ?_analisa_Rx:	
  3526                           ; 1 bytes @ 0x0
  3527                           
  3528     0070                     ?_envia_Tx:	
  3529                           ; 1 bytes @ 0x0
  3530                           
  3531     0070                     ?_mede_height:	
  3532                           ; 1 bytes @ 0x0
  3533                           
  3534     0070                     ?_main:	
  3535                           ; 1 bytes @ 0x0
  3536                           
  3537     0070                     ?__Umul8_16:	
  3538                           ; 1 bytes @ 0x0
  3539                           
  3540     0070                     ?_TMR1_ReadTimer:	
  3541                           ; 2 bytes @ 0x0
  3542                           
  3543     0070                     ?i1___lwdiv:	
  3544                           ; 2 bytes @ 0x0
  3545                           
  3546     0070                     __Umul8_16@multiplicand:	
  3547                           ; 2 bytes @ 0x0
  3548                           
  3549     0070                     TMR1_WriteTimer@timerVal:	
  3550                           ; 1 bytes @ 0x0
  3551                           
  3552     0070                     i1___lwdiv@divisor:	
  3553                           ; 2 bytes @ 0x0
  3554                           
  3555                           
  3556                           ; 2 bytes @ 0x0
  3557     0070                     	ds	2
  3558     0072                     ??__Umul8_16:
  3559     0072                     ??_TMR1_ReadTimer:	
  3560                           ; 1 bytes @ 0x2
  3561                           
  3562     0072                     ??_TMR1_WriteTimer:	
  3563                           ; 1 bytes @ 0x2
  3564                           
  3565     0072                     ??_TMR1_Reload:	
  3566                           ; 1 bytes @ 0x2
  3567                           
  3568     0072                     i1___lwdiv@dividend:	
  3569                           ; 1 bytes @ 0x2
  3570                           
  3571                           
  3572                           ; 2 bytes @ 0x2
  3573     0072                     	ds	2
  3574     0074                     ??i1___lwdiv:
  3575     0074                     __Umul8_16@product:	
  3576                           ; 1 bytes @ 0x4
  3577                           
  3578                           
  3579                           ; 2 bytes @ 0x4
  3580     0074                     	ds	1
  3581     0075                     i1___lwdiv@quotient:
  3582                           
  3583                           ; 2 bytes @ 0x5
  3584     0075                     	ds	1
  3585     0076                     __Umul8_16@word_mpld:
  3586                           
  3587                           ; 2 bytes @ 0x6
  3588     0076                     	ds	1
  3589     0077                     i1___lwdiv@counter:
  3590     0077                     TMR1_ReadTimer@readVal:	
  3591                           ; 1 bytes @ 0x7
  3592                           
  3593                           
  3594                           ; 2 bytes @ 0x7
  3595     0077                     	ds	1
  3596     0078                     __Umul8_16@multiplier:
  3597                           
  3598                           ; 1 bytes @ 0x8
  3599     0078                     	ds	1
  3600     0079                     ??___flmul:
  3601     0079                     TMR1_ReadTimer@readValHigh:	
  3602                           ; 1 bytes @ 0x9
  3603                           
  3604                           
  3605                           ; 1 bytes @ 0x9
  3606     0079                     	ds	1
  3607     007A                     TMR1_ReadTimer@readValLow:
  3608                           
  3609                           ; 1 bytes @ 0xA
  3610     007A                     	ds	4
  3611     007E                     ??_TMR1_GATE_ISR:
  3612     007E                     ??_INTERRUPT_InterruptManager:	
  3613                           ; 1 bytes @ 0xE
  3614                           
  3615                           
  3616                           	psect	cstackBANK0
  3617     0020                     __pcstackBANK0:	
  3618                           ; 1 bytes @ 0xE
  3619                           
  3620     0020                     ?___flmul:
  3621     0020                     ___flmul@b:	
  3622                           ; 4 bytes @ 0x0
  3623                           
  3624                           
  3625                           ; 4 bytes @ 0x0
  3626     0020                     	ds	4
  3627     0024                     ___flmul@a:
  3628                           
  3629                           ; 4 bytes @ 0x4
  3630     0024                     	ds	4
  3631     0028                     ___flmul@sign:
  3632                           
  3633                           ; 1 bytes @ 0x8
  3634     0028                     	ds	1
  3635     0029                     ___flmul@aexp:
  3636                           
  3637                           ; 1 bytes @ 0x9
  3638     0029                     	ds	1
  3639     002A                     ___flmul@grs:
  3640                           
  3641                           ; 4 bytes @ 0xA
  3642     002A                     	ds	4
  3643     002E                     ___flmul@bexp:
  3644                           
  3645                           ; 1 bytes @ 0xE
  3646     002E                     	ds	1
  3647     002F                     ___flmul@prod:
  3648                           
  3649                           ; 4 bytes @ 0xF
  3650     002F                     	ds	4
  3651     0033                     ___flmul@temp:
  3652                           
  3653                           ; 2 bytes @ 0x13
  3654     0033                     	ds	2
  3655     0035                     ?i1___fltol:
  3656     0035                     i1___fltol@f1:	
  3657                           ; 4 bytes @ 0x15
  3658                           
  3659                           
  3660                           ; 4 bytes @ 0x15
  3661     0035                     	ds	4
  3662     0039                     ??i1___fltol:
  3663                           
  3664                           ; 1 bytes @ 0x19
  3665     0039                     	ds	4
  3666     003D                     i1___fltol@sign1:
  3667                           
  3668                           ; 1 bytes @ 0x1D
  3669     003D                     	ds	1
  3670     003E                     i1___fltol@exp1:
  3671                           
  3672                           ; 1 bytes @ 0x1E
  3673     003E                     	ds	1
  3674     003F                     ?___xxtofl:
  3675     003F                     ___xxtofl@val:	
  3676                           ; 4 bytes @ 0x1F
  3677                           
  3678                           
  3679                           ; 4 bytes @ 0x1F
  3680     003F                     	ds	4
  3681     0043                     ??___xxtofl:
  3682                           
  3683                           ; 1 bytes @ 0x23
  3684     0043                     	ds	4
  3685     0047                     ___xxtofl@sign:
  3686                           
  3687                           ; 1 bytes @ 0x27
  3688     0047                     	ds	1
  3689     0048                     ___xxtofl@exp:
  3690                           
  3691                           ; 1 bytes @ 0x28
  3692     0048                     	ds	1
  3693     0049                     ___xxtofl@arg:
  3694                           
  3695                           ; 4 bytes @ 0x29
  3696     0049                     	ds	4
  3697     004D                     ??_mede_height:
  3698                           
  3699                           ; 1 bytes @ 0x2D
  3700     004D                     	ds	6
  3701                           
  3702                           	psect	maintext
  3703     069C                     __pmaintext:	
  3704 ;;
  3705 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  3706 ;;
  3707 ;; *************** function _main *****************
  3708 ;; Defined at:
  3709 ;;		line 315 in file "main.c"
  3710 ;; Parameters:    Size  Location     Type
  3711 ;;		None
  3712 ;; Auto vars:     Size  Location     Type
  3713 ;;		None
  3714 ;; Return value:  Size  Location     Type
  3715 ;;                  1    wreg      void 
  3716 ;; Registers used:
  3717 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3718 ;; Tracked objects:
  3719 ;;		On entry : B1F/0
  3720 ;;		On exit  : 1F/2
  3721 ;;		Unchanged: 0/0
  3722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3723 ;;      Params:         0       0       0       0       0       0
  3724 ;;      Locals:         0       0       0       0       0       0
  3725 ;;      Temps:          0       0       1       0       0       0
  3726 ;;      Totals:         0       0       1       0       0       0
  3727 ;;Total ram usage:        1 bytes
  3728 ;; Hardware stack levels required when called: 8
  3729 ;; This function calls:
  3730 ;;		_ADC_GetConversion
  3731 ;;		_EUSART_Read
  3732 ;;		_EUSART_is_rx_ready
  3733 ;;		_SYSTEM_Initialize
  3734 ;;		_TMR0_ReadTimer
  3735 ;;		_TMR1_SetGateInterruptHandler
  3736 ;;		_TMR4_StopTimer
  3737 ;;		_TMR6_LoadPeriodRegister
  3738 ;;		_TMR6_WriteTimer
  3739 ;;		_analisa_Rx
  3740 ;;		_controlchoose
  3741 ;;		_envia_Tx
  3742 ;;		_fluxpos
  3743 ;; This function is called by:
  3744 ;;		Startup code after reset
  3745 ;; This function uses a non-reentrant model
  3746 ;;
  3747                           
  3748     069C                     _main:	
  3749                           ;psect for function _main
  3750                           
  3751                           
  3752                           ;main.c: 318:     SYSTEM_Initialize();
  3753                           
  3754                           ;incstack = 0
  3755                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3756     069C  318D  256D  3186   	fcall	_SYSTEM_Initialize
  3757                           
  3758                           ;main.c: 319:     TMR1_SetGateInterruptHandler(mede_height);
  3759     069F  30E2               	movlw	low _mede_height
  3760     06A0  00CC               	movwf	TMR1_SetGateInterruptHandler@InterruptHandler^(0+128)
  3761     06A1  3005               	movlw	high _mede_height
  3762     06A2  00CD               	movwf	(TMR1_SetGateInterruptHandler@InterruptHandler^(0+128)+1)
  3763     06A3  318B  23E5  3186   	fcall	_TMR1_SetGateInterruptHandler
  3764                           
  3765                           ;main.c: 323:     (INTCONbits.GIE = 1);
  3766     06A6  178B               	bsf	11,7	;volatile
  3767                           
  3768                           ;main.c: 326:     (INTCONbits.PEIE = 1);
  3769     06A7  170B               	bsf	11,6	;volatile
  3770                           
  3771                           ;main.c: 329:     LATAbits.LATA7=CMOUTbits.MC1OUT;
  3772     06A8  0022               	movlb	2	; select bank2
  3773     06A9  1815               	btfsc	21,0	;volatile
  3774     06AA  2F36               	goto	L1
  3775     06AB                     u2900:
  3776     06AB  0022               	movlb	2	; select bank2
  3777     06AC  138C               	bcf	12,7	;volatile
  3778     06AD                     l3080:
  3779                           
  3780                           ;main.c: 332:     {;main.c: 333:         if(PIR3bits.TMR4IF==1){
  3781     06AD  0020               	movlb	0	; select bank0
  3782     06AE  1C93               	btfss	19,1	;volatile
  3783     06AF  2EB7               	goto	l3088
  3784                           
  3785                           ;main.c: 334:             PIR3bits.TMR4IF=0;
  3786     06B0  1093               	bcf	19,1	;volatile
  3787                           
  3788                           ;main.c: 335:             TMR4_StopTimer();
  3789     06B1  318B  2376  3186   	fcall	_TMR4_StopTimer
  3790                           
  3791                           ;main.c: 336:             controlchoose();
  3792     06B4  318C  245F  3186   	fcall	_controlchoose
  3793     06B7                     l3088:
  3794                           
  3795                           ;main.c: 338:         if (EUSART_is_rx_ready()){
  3796     06B7  318B  2388  3186   	fcall	_EUSART_is_rx_ready
  3797     06BA  3A00               	xorlw	0
  3798     06BB  1903               	skipnz
  3799     06BC  2EF7               	goto	l3120
  3800                           
  3801                           ;main.c: 339:             TMR6_LoadPeriodRegister(0xF9);
  3802     06BD  30F9               	movlw	249
  3803     06BE  318B  239E  3186   	fcall	_TMR6_LoadPeriodRegister
  3804                           
  3805                           ;main.c: 340:             nao_salva = 0;
  3806     06C1  0021               	movlb	1	; select bank1
  3807     06C2  01C7               	clrf	_nao_salva^(0+128)
  3808     06C3                     l3110:	
  3809                           ;main.c: 341:             while(countRx<8 -1){
  3810                           
  3811                           
  3812                           ;main.c: 341:             while(countRx<8 -1){
  3813     06C3  3007               	movlw	7
  3814     06C4  0249               	subwf	_countRx^(0+128),w
  3815     06C5  1803               	btfsc	3,0
  3816     06C6  2EEA               	goto	l3112
  3817                           
  3818                           ;main.c: 342:                 TMR6_WriteTimer(0);
  3819     06C7  3000               	movlw	0
  3820     06C8  318B  23A4  3186   	fcall	_TMR6_WriteTimer
  3821                           
  3822                           ;main.c: 343:                 PIR3bits.TMR6IF = 0;
  3823     06CB  0020               	movlb	0	; select bank0
  3824     06CC  1193               	bcf	19,3	;volatile
  3825     06CD                     l3100:	
  3826                           ;main.c: 344:                 while(!EUSART_is_rx_ready()){
  3827                           
  3828                           
  3829                           ;main.c: 344:                 while(!EUSART_is_rx_ready()){
  3830     06CD  318B  2388  3186   	fcall	_EUSART_is_rx_ready
  3831     06D0  3A00               	xorlw	0
  3832     06D1  1D03               	btfss	3,2
  3833     06D2  2ED8               	goto	l3102
  3834                           
  3835                           ;main.c: 345:                     if(PIR3bits.TMR6IF){
  3836     06D3  1D93               	btfss	19,3	;volatile
  3837     06D4  2ECD               	goto	l3100
  3838                           
  3839                           ;main.c: 346:                         nao_salva = 1;
  3840     06D5  0021               	movlb	1	; select bank1
  3841     06D6  01C7               	clrf	_nao_salva^(0+128)
  3842     06D7  0AC7               	incf	_nao_salva^(0+128),f
  3843     06D8                     l3102:	
  3844                           ;main.c: 347:                         break;
  3845                           
  3846                           
  3847                           ;main.c: 350:                 if(nao_salva == 1){
  3848     06D8  0021               	movlb	1	; select bank1
  3849     06D9  0347               	decf	_nao_salva^(0+128),w
  3850     06DA  1903               	btfsc	3,2
  3851     06DB  2EEA               	goto	l3112
  3852                           
  3853                           ;main.c: 353:                 bufferRx[countRx] = EUSART_Read();
  3854     06DC  0849               	movf	_countRx^(0+128),w
  3855     06DD  3E53               	addlw	(low (_bufferRx| 0))& (0+255)
  3856     06DE  0086               	movwf	6
  3857     06DF  0187               	clrf	7
  3858     06E0  318C  2427  3186   	fcall	_EUSART_Read
  3859     06E3  0081               	movwf	1
  3860                           
  3861                           ;main.c: 354:                 countRx++;
  3862     06E4  3001               	movlw	1
  3863     06E5  0021               	movlb	1	; select bank1
  3864     06E6  00ED               	movwf	??_main^(0+128)
  3865     06E7  086D               	movf	??_main^(0+128),w
  3866     06E8  07C9               	addwf	_countRx^(0+128),f
  3867     06E9  2EC3               	goto	l3110
  3868     06EA                     l3112:
  3869                           
  3870                           ;main.c: 356:             analisa_Rx();
  3871     06EA  3185  2516  3186   	fcall	_analisa_Rx
  3872                           
  3873                           ;main.c: 357:             TMR6_LoadPeriodRegister(0x4A);
  3874     06ED  304A               	movlw	74
  3875     06EE  318B  239E  3186   	fcall	_TMR6_LoadPeriodRegister
  3876                           
  3877                           ;main.c: 358:             TMR6_WriteTimer(0);
  3878     06F1  3000               	movlw	0
  3879     06F2  318B  23A4  3186   	fcall	_TMR6_WriteTimer
  3880                           
  3881                           ;main.c: 359:             PIR3bits.TMR6IF = 0;
  3882     06F5  0020               	movlb	0	; select bank0
  3883     06F6  1193               	bcf	19,3	;volatile
  3884     06F7                     l3120:
  3885                           
  3886                           ;main.c: 361:         if(INTCONbits.TMR0IF == 1){
  3887     06F7  1D0B               	btfss	11,2	;volatile
  3888     06F8  2F0C               	goto	l3136
  3889                           
  3890                           ;main.c: 362:             INTCONbits.TMR0IF = 0;
  3891     06F9  110B               	bcf	11,2	;volatile
  3892                           
  3893                           ;main.c: 363:             fluxpos();
  3894     06FA  318D  25CB  3186   	fcall	_fluxpos
  3895                           
  3896                           ;main.c: 364:             passo_ctrl = 0;
  3897     06FD  0021               	movlb	1	; select bank1
  3898     06FE  01C5               	clrf	_passo_ctrl^(0+128)
  3899                           
  3900                           ;main.c: 365:             count_Tx ++;
  3901     06FF  3001               	movlw	1
  3902     0700  00ED               	movwf	??_main^(0+128)
  3903     0701  086D               	movf	??_main^(0+128),w
  3904     0702  07C8               	addwf	_count_Tx^(0+128),f
  3905                           
  3906                           ;main.c: 366:             if (count_Tx == 6){
  3907     0703  3006               	movlw	6
  3908     0704  0648               	xorwf	_count_Tx^(0+128),w
  3909     0705  1D03               	btfss	3,2
  3910     0706  2F0C               	goto	l3136
  3911                           
  3912                           ;main.c: 367:                 envia_Tx ();
  3913     0707  318F  278C  3186   	fcall	_envia_Tx
  3914                           
  3915                           ;main.c: 368:                 count_Tx = 0;
  3916     070A  0021               	movlb	1	; select bank1
  3917     070B  01C8               	clrf	_count_Tx^(0+128)
  3918     070C                     l3136:
  3919                           
  3920                           ;main.c: 371:         if(PIR3bits.TMR6IF == 1){
  3921     070C  0020               	movlb	0	; select bank0
  3922     070D  1D93               	btfss	19,3	;volatile
  3923     070E  2F23               	goto	l3148
  3924                           
  3925                           ;main.c: 372:             PIR3bits.TMR6IF = 0;
  3926     070F  1193               	bcf	19,3	;volatile
  3927                           
  3928                           ;main.c: 373:             TMR6_WriteTimer(0);
  3929     0710  3000               	movlw	0
  3930     0711  318B  23A4  3186   	fcall	_TMR6_WriteTimer
  3931                           
  3932                           ;main.c: 374:             adc_temp = ADC_GetConversion(channel_AN8);
  3933     0714  3008               	movlw	8
  3934     0715  318C  24B6  3186   	fcall	_ADC_GetConversion
  3935     0718  084D               	movf	(?_ADC_GetConversion+1)^(0+128),w
  3936     0719  00B6               	movwf	(_adc_temp+1)^(0+128)
  3937     071A  084C               	movf	?_ADC_GetConversion^(0+128),w
  3938     071B  00B5               	movwf	_adc_temp^(0+128)
  3939     071C  0022               	movlb	2	; select bank2
  3940     071D  170C               	bsf	12,6	;volatile
  3941                           
  3942                           ;main.c: 376:             _delay((unsigned long)((15)*(16000000/4000000.0)));
  3943     071E  3014               	movlw	20
  3944     071F                     u3057:
  3945     071F  0B89               	decfsz	9,f
  3946     0720  2F1F               	goto	u3057
  3947     0721  0022               	movlb	2	; select bank2
  3948     0722  130C               	bcf	12,6	;volatile
  3949     0723                     l3148:
  3950                           
  3951                           ;main.c: 379:         if(TMR0_ReadTimer() >= 0x7F && passo_ctrl == 0){
  3952     0723  318B  2398  3186   	fcall	_TMR0_ReadTimer
  3953     0726  00ED               	movwf	??_main^(0+128)
  3954     0727  307F               	movlw	127
  3955     0728  026D               	subwf	??_main^(0+128),w
  3956     0729  1C03               	skipc
  3957     072A  2F33               	goto	l3156
  3958     072B  0845               	movf	_passo_ctrl^(0+128),w
  3959     072C  1D03               	btfss	3,2
  3960     072D  2F33               	goto	l3156
  3961                           
  3962                           ;main.c: 380:             passo_ctrl = 1;
  3963     072E  01C5               	clrf	_passo_ctrl^(0+128)
  3964     072F  0AC5               	incf	_passo_ctrl^(0+128),f
  3965                           
  3966                           ;main.c: 381:             fluxpos();
  3967     0730  318D  25CB  3186   	fcall	_fluxpos
  3968     0733                     l3156:
  3969                           
  3970                           ;main.c: 383:         LATAbits.LATA7=CMOUTbits.MC1OUT;
  3971     0733  0022               	movlb	2	; select bank2
  3972     0734  1C15               	btfss	21,0	;volatile
  3973     0735  2EAB               	goto	u2900
  3974     0736                     L1:
  3975     0736  0022               	movlb	2	; select bank2
  3976     0737  178C               	bsf	12,7	;volatile
  3977     0738  2EAD               	goto	l3080
  3978     0739                     __end_of_main:
  3979                           
  3980                           	psect	text1
  3981     0DCB                     __ptext1:	
  3982 ;; *************** function _fluxpos *****************
  3983 ;; Defined at:
  3984 ;;		line 141 in file "main.c"
  3985 ;; Parameters:    Size  Location     Type
  3986 ;;		None
  3987 ;; Auto vars:     Size  Location     Type
  3988 ;;		None
  3989 ;; Return value:  Size  Location     Type
  3990 ;;                  1    wreg      void 
  3991 ;; Registers used:
  3992 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3993 ;; Tracked objects:
  3994 ;;		On entry : 1E/0
  3995 ;;		On exit  : 1C/0
  3996 ;;		Unchanged: 0/0
  3997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3998 ;;      Params:         0       0       0       0       0       0
  3999 ;;      Locals:         0       0       0       0       0       0
  4000 ;;      Temps:          0       0       0       0       0       0
  4001 ;;      Totals:         0       0       0       0       0       0
  4002 ;;Total ram usage:        0 bytes
  4003 ;; Hardware stack levels used: 1
  4004 ;; Hardware stack levels required when called: 7
  4005 ;; This function calls:
  4006 ;;		_daUmPasso
  4007 ;; This function is called by:
  4008 ;;		_main
  4009 ;; This function uses a non-reentrant model
  4010 ;;
  4011                           
  4012     0DCB                     _fluxpos:	
  4013                           ;psect for function _fluxpos
  4014                           
  4015                           
  4016                           ;main.c: 142:     if(controlchoice==2){
  4017                           
  4018                           ;incstack = 0
  4019                           ; Regs used in _fluxpos: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4020     0DCB  3002               	movlw	2
  4021     0DCC  0021               	movlb	1	; select bank1
  4022     0DCD  064A               	xorwf	_controlchoice^(0+128),w
  4023     0DCE  1D03               	btfss	3,2
  4024     0DCF  2DE8               	goto	l2956
  4025                           
  4026                           ;main.c: 143:         if(output>position) daUmPasso(0);
  4027     0DD0  0842               	movf	(_output+1)^(0+128),w
  4028     0DD1  023A               	subwf	(_position+1)^(0+128),w
  4029     0DD2  1D03               	skipz
  4030     0DD3  2DD6               	goto	u2735
  4031     0DD4  0841               	movf	_output^(0+128),w
  4032     0DD5  0239               	subwf	_position^(0+128),w
  4033     0DD6                     u2735:
  4034     0DD6  1803               	skipnc
  4035     0DD7  2DDC               	goto	l2952
  4036     0DD8  3000               	movlw	0
  4037     0DD9  318C  2471         	fcall	_daUmPasso
  4038     0DDB  0008               	return
  4039     0DDC                     l2952:
  4040     0DDC  083A               	movf	(_position+1)^(0+128),w
  4041     0DDD  0242               	subwf	(_output+1)^(0+128),w
  4042     0DDE  1D03               	skipz
  4043     0DDF  2DE2               	goto	u2745
  4044     0DE0  0839               	movf	_position^(0+128),w
  4045     0DE1  0241               	subwf	_output^(0+128),w
  4046     0DE2                     u2745:
  4047     0DE2  1803               	skipnc
  4048     0DE3  0008               	return
  4049     0DE4  3001               	movlw	1
  4050     0DE5  318C  2471         	fcall	_daUmPasso
  4051     0DE7  0008               	return
  4052     0DE8                     l2956:
  4053                           
  4054                           ;main.c: 147:         if(sp_position>position) daUmPasso(0);
  4055     0DE8  0838               	movf	(_sp_position+1)^(0+128),w
  4056     0DE9  023A               	subwf	(_position+1)^(0+128),w
  4057     0DEA  1D03               	skipz
  4058     0DEB  2DEE               	goto	u2755
  4059     0DEC  0837               	movf	_sp_position^(0+128),w
  4060     0DED  0239               	subwf	_position^(0+128),w
  4061     0DEE                     u2755:
  4062     0DEE  1803               	skipnc
  4063     0DEF  2DF4               	goto	l2960
  4064     0DF0  3000               	movlw	0
  4065     0DF1  318C  2471         	fcall	_daUmPasso
  4066     0DF3  0008               	return
  4067     0DF4                     l2960:
  4068     0DF4  083A               	movf	(_position+1)^(0+128),w
  4069     0DF5  0238               	subwf	(_sp_position+1)^(0+128),w
  4070     0DF6  1D03               	skipz
  4071     0DF7  2DFA               	goto	u2765
  4072     0DF8  0839               	movf	_position^(0+128),w
  4073     0DF9  0237               	subwf	_sp_position^(0+128),w
  4074     0DFA                     u2765:
  4075     0DFA  1803               	skipnc
  4076     0DFB  2E00               	goto	l687
  4077     0DFC  3001               	movlw	1
  4078     0DFD  318C  2471         	fcall	_daUmPasso
  4079     0DFF  0008               	return
  4080     0E00                     l687:	
  4081                           ;main.c: 150:             do { LATAbits.LATA4 = 0; } while(0);
  4082                           
  4083     0E00  0022               	movlb	2	; select bank2
  4084     0E01  120C               	bcf	12,4	;volatile
  4085                           
  4086                           ;main.c: 151:             do { LATAbits.LATA3 = 0; } while(0);
  4087     0E02  118C               	bcf	12,3	;volatile
  4088                           
  4089                           ;main.c: 152:             do { LATAbits.LATA2 = 0; } while(0);
  4090     0E03  110C               	bcf	12,2	;volatile
  4091                           
  4092                           ;main.c: 153:             do { LATAbits.LATA1 = 0; } while(0);
  4093     0E04  108C               	bcf	12,1	;volatile
  4094     0E05  0008               	return
  4095     0E06                     __end_of_fluxpos:
  4096                           
  4097                           	psect	text2
  4098     0C71                     __ptext2:	
  4099 ;; *************** function _daUmPasso *****************
  4100 ;; Defined at:
  4101 ;;		line 63 in file "main.c"
  4102 ;; Parameters:    Size  Location     Type
  4103 ;;  sentido         1    wreg     unsigned char 
  4104 ;; Auto vars:     Size  Location     Type
  4105 ;;  sentido         1    3[BANK1 ] unsigned char 
  4106 ;; Return value:  Size  Location     Type
  4107 ;;                  1    wreg      void 
  4108 ;; Registers used:
  4109 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4110 ;; Tracked objects:
  4111 ;;		On entry : 1F/1
  4112 ;;		On exit  : 1F/1
  4113 ;;		Unchanged: 0/0
  4114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4115 ;;      Params:         0       0       0       0       0       0
  4116 ;;      Locals:         0       0       1       0       0       0
  4117 ;;      Temps:          0       0       0       0       0       0
  4118 ;;      Totals:         0       0       1       0       0       0
  4119 ;;Total ram usage:        1 bytes
  4120 ;; Hardware stack levels used: 1
  4121 ;; Hardware stack levels required when called: 6
  4122 ;; This function calls:
  4123 ;;		_definePassoMotor
  4124 ;; This function is called by:
  4125 ;;		_fluxpos
  4126 ;; This function uses a non-reentrant model
  4127 ;;
  4128                           
  4129     0C71                     _daUmPasso:	
  4130                           ;psect for function _daUmPasso
  4131                           
  4132                           
  4133                           ;incstack = 0
  4134                           ; Regs used in _daUmPasso: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4135                           ;daUmPasso@sentido stored from wreg
  4136     0C71  00CF               	movwf	daUmPasso@sentido^(0+128)
  4137                           
  4138                           ;main.c: 65:         if(sentido == 1){
  4139     0C72  034F               	decf	daUmPasso@sentido^(0+128),w
  4140     0C73  1D03               	btfss	3,2
  4141     0C74  2C7A               	goto	l2776
  4142                           
  4143                           ;main.c: 66:             position--;
  4144     0C75  3001               	movlw	1
  4145     0C76  02B9               	subwf	_position^(0+128),f
  4146     0C77  3000               	movlw	0
  4147     0C78  3BBA               	subwfb	(_position+1)^(0+128),f
  4148                           
  4149                           ;main.c: 67:         }
  4150     0C79  2C81               	goto	l2780
  4151     0C7A                     l2776:
  4152     0C7A  084F               	movf	daUmPasso@sentido^(0+128),w
  4153     0C7B  1D03               	btfss	3,2
  4154     0C7C  2C81               	goto	l2780
  4155                           
  4156                           ;main.c: 69:             position++;
  4157     0C7D  3001               	movlw	1
  4158     0C7E  07B9               	addwf	_position^(0+128),f
  4159     0C7F  3000               	movlw	0
  4160     0C80  3DBA               	addwfc	(_position+1)^(0+128),f
  4161     0C81                     l2780:
  4162                           
  4163                           ;main.c: 71:         definePassoMotor(passo, sentido);
  4164     0C81  084F               	movf	daUmPasso@sentido^(0+128),w
  4165     0C82  00CC               	movwf	definePassoMotor@sentido^(0+128)
  4166     0C83  0846               	movf	_passo^(0+128),w
  4167     0C84  318E  2606         	fcall	_definePassoMotor
  4168                           
  4169                           ;main.c: 72:     } else {
  4170     0C86  0008               	return
  4171     0C87                     __end_of_daUmPasso:
  4172                           
  4173                           	psect	text3
  4174     0E06                     __ptext3:	
  4175 ;; *************** function _definePassoMotor *****************
  4176 ;; Defined at:
  4177 ;;		line 77 in file "main.c"
  4178 ;; Parameters:    Size  Location     Type
  4179 ;;  passom          1    wreg     unsigned char 
  4180 ;;  sentido         1    0[BANK1 ] unsigned char 
  4181 ;; Auto vars:     Size  Location     Type
  4182 ;;  passom          1    2[BANK1 ] unsigned char 
  4183 ;; Return value:  Size  Location     Type
  4184 ;;                  1    wreg      void 
  4185 ;; Registers used:
  4186 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4187 ;; Tracked objects:
  4188 ;;		On entry : 1F/1
  4189 ;;		On exit  : 1F/1
  4190 ;;		Unchanged: 0/0
  4191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4192 ;;      Params:         0       0       1       0       0       0
  4193 ;;      Locals:         0       0       1       0       0       0
  4194 ;;      Temps:          0       0       1       0       0       0
  4195 ;;      Totals:         0       0       3       0       0       0
  4196 ;;Total ram usage:        3 bytes
  4197 ;; Hardware stack levels used: 1
  4198 ;; Hardware stack levels required when called: 5
  4199 ;; This function calls:
  4200 ;;		Nothing
  4201 ;; This function is called by:
  4202 ;;		_daUmPasso
  4203 ;; This function uses a non-reentrant model
  4204 ;;
  4205                           
  4206     0E06                     _definePassoMotor:	
  4207                           ;psect for function _definePassoMotor
  4208                           
  4209                           
  4210                           ;incstack = 0
  4211                           ; Regs used in _definePassoMotor: [wreg-fsr0h+status,2+status,0]
  4212                           ;definePassoMotor@passom stored from wreg
  4213     0E06  00CE               	movwf	definePassoMotor@passom^(0+128)
  4214                           
  4215                           ;main.c: 78:     if (sentido == 1) {
  4216     0E07  034C               	decf	definePassoMotor@sentido^(0+128),w
  4217     0E08  1903               	btfsc	3,2
  4218     0E09  2E21               	goto	l2320
  4219     0E0A  2E2F               	goto	l2322
  4220     0E0B                     l599:	
  4221                           ;main.c: 81:                 do { LATAbits.LATA1 = 1; } while(0);
  4222                           
  4223     0E0B  0022               	movlb	2	; select bank2
  4224     0E0C  148C               	bsf	12,1	;volatile
  4225                           
  4226                           ;main.c: 82:                 do { LATAbits.LATA2 = 1; } while(0);
  4227     0E0D  150C               	bsf	12,2	;volatile
  4228                           
  4229                           ;main.c: 83:                 do { LATAbits.LATA3 = 0; } while(0);
  4230     0E0E  118C               	bcf	12,3	;volatile
  4231     0E0F  2E14               	goto	l615
  4232     0E10                     l609:	
  4233                           ;main.c: 87:                 do { LATAbits.LATA1 = 0; } while(0);
  4234                           
  4235                           ;main.c: 84:                 do { LATAbits.LATA4 = 0; } while(0);
  4236                           
  4237     0E10  0022               	movlb	2	; select bank2
  4238     0E11  108C               	bcf	12,1	;volatile
  4239                           
  4240                           ;main.c: 88:                 do { LATAbits.LATA2 = 1; } while(0);
  4241     0E12  150C               	bsf	12,2	;volatile
  4242                           
  4243                           ;main.c: 89:                 do { LATAbits.LATA3 = 1; } while(0);
  4244     0E13  158C               	bsf	12,3	;volatile
  4245     0E14                     l615:	
  4246                           ;main.c: 90:                 do { LATAbits.LATA4 = 0; } while(0);
  4247                           
  4248     0E14  120C               	bcf	12,4	;volatile
  4249     0E15  2E57               	goto	l2330
  4250     0E16                     l618:	
  4251                           ;main.c: 93:                 do { LATAbits.LATA1 = 0; } while(0);
  4252                           
  4253     0E16  0022               	movlb	2	; select bank2
  4254     0E17  108C               	bcf	12,1	;volatile
  4255                           
  4256                           ;main.c: 94:                 do { LATAbits.LATA2 = 0; } while(0);
  4257     0E18  110C               	bcf	12,2	;volatile
  4258                           
  4259                           ;main.c: 95:                 do { LATAbits.LATA3 = 1; } while(0);
  4260     0E19  158C               	bsf	12,3	;volatile
  4261     0E1A  2E1F               	goto	l633
  4262     0E1B                     l627:	
  4263                           ;main.c: 99:                 do { LATAbits.LATA1 = 1; } while(0);
  4264                           
  4265                           ;main.c: 96:                 do { LATAbits.LATA4 = 1; } while(0);
  4266                           
  4267     0E1B  0022               	movlb	2	; select bank2
  4268     0E1C  148C               	bsf	12,1	;volatile
  4269                           
  4270                           ;main.c: 100:                 do { LATAbits.LATA2 = 0; } while(0);
  4271     0E1D  110C               	bcf	12,2	;volatile
  4272                           
  4273                           ;main.c: 101:                 do { LATAbits.LATA3 = 0; } while(0);
  4274     0E1E  118C               	bcf	12,3	;volatile
  4275     0E1F                     l633:	
  4276                           ;main.c: 102:                 do { LATAbits.LATA4 = 1; } while(0);
  4277                           
  4278     0E1F  160C               	bsf	12,4	;volatile
  4279     0E20  2E57               	goto	l2330
  4280     0E21                     l2320:
  4281     0E21  084E               	movf	definePassoMotor@passom^(0+128),w
  4282                           
  4283                           ; Switch size 1, requested type "simple"
  4284                           ; Number of cases is 4, Range of values is 0 to 3
  4285                           ; switch strategies available:
  4286                           ; Name         Instructions Cycles
  4287                           ; simple_byte           13     7 (average)
  4288                           ; direct_byte           14     6 (fixed)
  4289                           ; jumptable            260     6 (fixed)
  4290                           ;	Chosen strategy is simple_byte
  4291     0E22  3A00               	xorlw	0	; case 0
  4292     0E23  1903               	skipnz
  4293     0E24  2E0B               	goto	l599
  4294     0E25  3A01               	xorlw	1	; case 1
  4295     0E26  1903               	skipnz
  4296     0E27  2E10               	goto	l609
  4297     0E28  3A03               	xorlw	3	; case 2
  4298     0E29  1903               	skipnz
  4299     0E2A  2E16               	goto	l618
  4300     0E2B  3A01               	xorlw	1	; case 3
  4301     0E2C  1903               	skipnz
  4302     0E2D  2E1B               	goto	l627
  4303     0E2E  2E57               	goto	l2330
  4304     0E2F                     l2322:
  4305     0E2F  084C               	movf	definePassoMotor@sentido^(0+128),w
  4306     0E30  1903               	btfsc	3,2
  4307     0E31  2E49               	goto	l2328
  4308     0E32  2E57               	goto	l2330
  4309     0E33                     l639:	
  4310                           ;main.c: 109:                 do { LATAbits.LATA4 = 1; } while(0);
  4311                           
  4312     0E33  0022               	movlb	2	; select bank2
  4313     0E34  160C               	bsf	12,4	;volatile
  4314                           
  4315                           ;main.c: 110:                 do { LATAbits.LATA3 = 1; } while(0);
  4316     0E35  158C               	bsf	12,3	;volatile
  4317                           
  4318                           ;main.c: 111:                 do { LATAbits.LATA2 = 0; } while(0);
  4319     0E36  110C               	bcf	12,2	;volatile
  4320     0E37  2E3C               	goto	l655
  4321     0E38                     l649:	
  4322                           ;main.c: 115:                 do { LATAbits.LATA4 = 0; } while(0);
  4323                           
  4324                           ;main.c: 112:                 do { LATAbits.LATA1 = 0; } while(0);
  4325                           
  4326     0E38  0022               	movlb	2	; select bank2
  4327     0E39  120C               	bcf	12,4	;volatile
  4328                           
  4329                           ;main.c: 116:                 do { LATAbits.LATA3 = 1; } while(0);
  4330     0E3A  158C               	bsf	12,3	;volatile
  4331                           
  4332                           ;main.c: 117:                 do { LATAbits.LATA2 = 1; } while(0);
  4333     0E3B  150C               	bsf	12,2	;volatile
  4334     0E3C                     l655:	
  4335                           ;main.c: 118:                 do { LATAbits.LATA1 = 0; } while(0);
  4336                           
  4337     0E3C  108C               	bcf	12,1	;volatile
  4338     0E3D  2E57               	goto	l2330
  4339     0E3E                     l658:	
  4340                           ;main.c: 121:                 do { LATAbits.LATA4 = 0; } while(0);
  4341                           
  4342     0E3E  0022               	movlb	2	; select bank2
  4343     0E3F  120C               	bcf	12,4	;volatile
  4344                           
  4345                           ;main.c: 122:                 do { LATAbits.LATA3 = 0; } while(0);
  4346     0E40  118C               	bcf	12,3	;volatile
  4347                           
  4348                           ;main.c: 123:                 do { LATAbits.LATA2 = 1; } while(0);
  4349     0E41  150C               	bsf	12,2	;volatile
  4350     0E42  2E47               	goto	L3
  4351     0E43                     l667:	
  4352                           ;main.c: 127:                 do { LATAbits.LATA4 = 1; } while(0);
  4353                           
  4354                           ;main.c: 124:                 do { LATAbits.LATA1 = 1; } while(0);
  4355                           
  4356     0E43  0022               	movlb	2	; select bank2
  4357     0E44  160C               	bsf	12,4	;volatile
  4358                           
  4359                           ;main.c: 128:                 do { LATAbits.LATA3 = 0; } while(0);
  4360     0E45  118C               	bcf	12,3	;volatile
  4361                           
  4362                           ;main.c: 129:                 do { LATAbits.LATA2 = 0; } while(0);
  4363     0E46  110C               	bcf	12,2	;volatile
  4364     0E47                     L3:
  4365                           
  4366                           ;main.c: 130:                 do { LATAbits.LATA1 = 1; } while(0);
  4367     0E47  148C               	bsf	12,1	;volatile
  4368     0E48  2E57               	goto	l2330
  4369     0E49                     l2328:
  4370     0E49  084E               	movf	definePassoMotor@passom^(0+128),w
  4371                           
  4372                           ; Switch size 1, requested type "simple"
  4373                           ; Number of cases is 4, Range of values is 0 to 3
  4374                           ; switch strategies available:
  4375                           ; Name         Instructions Cycles
  4376                           ; simple_byte           13     7 (average)
  4377                           ; direct_byte           14     6 (fixed)
  4378                           ; jumptable            260     6 (fixed)
  4379                           ;	Chosen strategy is simple_byte
  4380     0E4A  3A00               	xorlw	0	; case 0
  4381     0E4B  1903               	skipnz
  4382     0E4C  2E33               	goto	l639
  4383     0E4D  3A01               	xorlw	1	; case 1
  4384     0E4E  1903               	skipnz
  4385     0E4F  2E38               	goto	l649
  4386     0E50  3A03               	xorlw	3	; case 2
  4387     0E51  1903               	skipnz
  4388     0E52  2E3E               	goto	l658
  4389     0E53  3A01               	xorlw	1	; case 3
  4390     0E54  1903               	skipnz
  4391     0E55  2E43               	goto	l667
  4392     0E56  2E57               	goto	l2330
  4393     0E57                     l2330:
  4394                           
  4395                           ;main.c: 135:     passo++;
  4396     0E57  3001               	movlw	1
  4397     0E58  0021               	movlb	1	; select bank1
  4398     0E59  00CD               	movwf	??_definePassoMotor^(0+128)
  4399     0E5A  084D               	movf	??_definePassoMotor^(0+128),w
  4400     0E5B  07C6               	addwf	_passo^(0+128),f
  4401                           
  4402                           ;main.c: 136:     passo = passo & 0x03;
  4403     0E5C  0846               	movf	_passo^(0+128),w
  4404     0E5D  3903               	andlw	3
  4405     0E5E  00C6               	movwf	_passo^(0+128)
  4406     0E5F  0008               	return
  4407     0E60                     __end_of_definePassoMotor:
  4408                           
  4409                           	psect	text4
  4410     0F8C                     __ptext4:	
  4411 ;; *************** function _envia_Tx *****************
  4412 ;; Defined at:
  4413 ;;		line 276 in file "main.c"
  4414 ;; Parameters:    Size  Location     Type
  4415 ;;		None
  4416 ;; Auto vars:     Size  Location     Type
  4417 ;;		None
  4418 ;; Return value:  Size  Location     Type
  4419 ;;                  1    wreg      void 
  4420 ;; Registers used:
  4421 ;;		wreg, status,2, status,0, pclath, cstack
  4422 ;; Tracked objects:
  4423 ;;		On entry : 1F/1
  4424 ;;		On exit  : 1F/3
  4425 ;;		Unchanged: 0/0
  4426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4427 ;;      Params:         0       0       0       0       0       0
  4428 ;;      Locals:         0       0       0       0       0       0
  4429 ;;      Temps:          0       0       0       0       0       0
  4430 ;;      Totals:         0       0       0       0       0       0
  4431 ;;Total ram usage:        0 bytes
  4432 ;; Hardware stack levels used: 1
  4433 ;; Hardware stack levels required when called: 6
  4434 ;; This function calls:
  4435 ;;		_EUSART_Write
  4436 ;;		___fltol
  4437 ;; This function is called by:
  4438 ;;		_main
  4439 ;; This function uses a non-reentrant model
  4440 ;;
  4441                           
  4442     0F8C                     _envia_Tx:	
  4443                           ;psect for function _envia_Tx
  4444                           
  4445                           
  4446                           ;main.c: 277:     EUSART_Write(controlchoice);
  4447                           
  4448                           ;incstack = 0
  4449                           ; Regs used in _envia_Tx: [wreg+status,2+status,0+pclath+cstack]
  4450     0F8C  084A               	movf	_controlchoice^(0+128),w
  4451     0F8D  318B  23F5  318F   	fcall	_EUSART_Write
  4452                           
  4453                           ;main.c: 278:     vTx.v = sp_height;
  4454     0F90  0020               	movlb	0	; select bank0
  4455     0F91  0864               	movf	_sp_height+1,w
  4456     0F92  0021               	movlb	1	; select bank1
  4457     0F93  00C0               	movwf	(_vTx+1)^(0+128)
  4458     0F94  0020               	movlb	0	; select bank0
  4459     0F95  0863               	movf	_sp_height,w
  4460     0F96  0021               	movlb	1	; select bank1
  4461     0F97  00BF               	movwf	_vTx^(0+128)
  4462                           
  4463                           ;main.c: 279:     EUSART_Write(vTx.vH);
  4464     0F98  0840               	movf	(_vTx^(0+128)+1),w
  4465     0F99  318B  23F5  318F   	fcall	_EUSART_Write
  4466                           
  4467                           ;main.c: 280:     EUSART_Write(vTx.vL);
  4468     0F9C  0021               	movlb	1	; select bank1
  4469     0F9D  083F               	movf	_vTx^(0+128),w
  4470     0F9E  318B  23F5  318F   	fcall	_EUSART_Write
  4471                           
  4472                           ;main.c: 281:     vTx.v = height;
  4473     0FA1  0021               	movlb	1	; select bank1
  4474     0FA2  0834               	movf	(_height+1)^(0+128),w
  4475     0FA3  00C0               	movwf	(_vTx+1)^(0+128)
  4476     0FA4  0833               	movf	_height^(0+128),w
  4477     0FA5  00BF               	movwf	_vTx^(0+128)
  4478                           
  4479                           ;main.c: 282:     EUSART_Write(vTx.vH);
  4480     0FA6  0840               	movf	(_vTx^(0+128)+1),w
  4481     0FA7  318B  23F5  318F   	fcall	_EUSART_Write
  4482                           
  4483                           ;main.c: 283:     EUSART_Write(vTx.vL);
  4484     0FAA  0021               	movlb	1	; select bank1
  4485     0FAB  083F               	movf	_vTx^(0+128),w
  4486     0FAC  318B  23F5  318F   	fcall	_EUSART_Write
  4487                           
  4488                           ;main.c: 284:     vTx.v = avg_tempo_voo;
  4489     0FAF  0021               	movlb	1	; select bank1
  4490     0FB0  0823               	movf	(_avg_tempo_voo+3)^(0+128),w
  4491     0FB1  00CF               	movwf	(___fltol@f1+3)^(0+128)
  4492     0FB2  0822               	movf	(_avg_tempo_voo+2)^(0+128),w
  4493     0FB3  00CE               	movwf	(___fltol@f1+2)^(0+128)
  4494     0FB4  0821               	movf	(_avg_tempo_voo+1)^(0+128),w
  4495     0FB5  00CD               	movwf	(___fltol@f1+1)^(0+128)
  4496     0FB6  0820               	movf	_avg_tempo_voo^(0+128),w
  4497     0FB7  00CC               	movwf	___fltol@f1^(0+128)
  4498     0FB8  318E  26C1  318F   	fcall	___fltol
  4499     0FBB  084D               	movf	(?___fltol+1)^(0+128),w
  4500     0FBC  00C0               	movwf	(_vTx+1)^(0+128)
  4501     0FBD  084C               	movf	?___fltol^(0+128),w
  4502     0FBE  00BF               	movwf	_vTx^(0+128)
  4503                           
  4504                           ;main.c: 285:     EUSART_Write(vTx.vH);
  4505     0FBF  0840               	movf	(_vTx^(0+128)+1),w
  4506     0FC0  318B  23F5  318F   	fcall	_EUSART_Write
  4507                           
  4508                           ;main.c: 286:     EUSART_Write(vTx.vL);
  4509     0FC3  0021               	movlb	1	; select bank1
  4510     0FC4  083F               	movf	_vTx^(0+128),w
  4511     0FC5  318B  23F5  318F   	fcall	_EUSART_Write
  4512                           
  4513                           ;main.c: 287:     vTx.v = adc_temp;
  4514     0FC8  0021               	movlb	1	; select bank1
  4515     0FC9  0836               	movf	(_adc_temp+1)^(0+128),w
  4516     0FCA  00C0               	movwf	(_vTx+1)^(0+128)
  4517     0FCB  0835               	movf	_adc_temp^(0+128),w
  4518     0FCC  00BF               	movwf	_vTx^(0+128)
  4519                           
  4520                           ;main.c: 288:     EUSART_Write(vTx.vH);
  4521     0FCD  0840               	movf	(_vTx^(0+128)+1),w
  4522     0FCE  318B  23F5  318F   	fcall	_EUSART_Write
  4523                           
  4524                           ;main.c: 289:     EUSART_Write(vTx.vL);
  4525     0FD1  0021               	movlb	1	; select bank1
  4526     0FD2  083F               	movf	_vTx^(0+128),w
  4527     0FD3  318B  23F5  318F   	fcall	_EUSART_Write
  4528                           
  4529                           ;main.c: 290:     vTx.v = sp_position;
  4530     0FD6  0021               	movlb	1	; select bank1
  4531     0FD7  0838               	movf	(_sp_position+1)^(0+128),w
  4532     0FD8  00C0               	movwf	(_vTx+1)^(0+128)
  4533     0FD9  0837               	movf	_sp_position^(0+128),w
  4534     0FDA  00BF               	movwf	_vTx^(0+128)
  4535                           
  4536                           ;main.c: 291:     EUSART_Write(vTx.vH);
  4537     0FDB  0840               	movf	(_vTx^(0+128)+1),w
  4538     0FDC  318B  23F5  318F   	fcall	_EUSART_Write
  4539                           
  4540                           ;main.c: 292:     EUSART_Write(vTx.vL);
  4541     0FDF  0021               	movlb	1	; select bank1
  4542     0FE0  083F               	movf	_vTx^(0+128),w
  4543     0FE1  318B  23F5  318F   	fcall	_EUSART_Write
  4544                           
  4545                           ;main.c: 293:     vTx.v = position;
  4546     0FE4  0021               	movlb	1	; select bank1
  4547     0FE5  083A               	movf	(_position+1)^(0+128),w
  4548     0FE6  00C0               	movwf	(_vTx+1)^(0+128)
  4549     0FE7  0839               	movf	_position^(0+128),w
  4550     0FE8  00BF               	movwf	_vTx^(0+128)
  4551                           
  4552                           ;main.c: 294:     EUSART_Write(vTx.vH);
  4553     0FE9  0840               	movf	(_vTx^(0+128)+1),w
  4554     0FEA  318B  23F5  318F   	fcall	_EUSART_Write
  4555                           
  4556                           ;main.c: 295:     EUSART_Write(vTx.vL);
  4557     0FED  0021               	movlb	1	; select bank1
  4558     0FEE  083F               	movf	_vTx^(0+128),w
  4559     0FEF  318B  23F5  318F   	fcall	_EUSART_Write
  4560                           
  4561                           ;main.c: 296:     vTx.v = dc;
  4562     0FF2  0021               	movlb	1	; select bank1
  4563     0FF3  083C               	movf	(_dc+1)^(0+128),w
  4564     0FF4  00C0               	movwf	(_vTx+1)^(0+128)
  4565     0FF5  083B               	movf	_dc^(0+128),w
  4566     0FF6  00BF               	movwf	_vTx^(0+128)
  4567                           
  4568                           ;main.c: 297:     EUSART_Write(vTx.vH);
  4569     0FF7  0840               	movf	(_vTx^(0+128)+1),w
  4570     0FF8  318B  23F5  318F   	fcall	_EUSART_Write
  4571                           
  4572                           ;main.c: 298:     EUSART_Write(vTx.vL);
  4573     0FFB  0021               	movlb	1	; select bank1
  4574     0FFC  083F               	movf	_vTx^(0+128),w
  4575     0FFD  318B  23F5         	fcall	_EUSART_Write
  4576     0FFF  0008               	return
  4577     1000                     __end_of_envia_Tx:
  4578                           
  4579                           	psect	text5
  4580     0EC1                     __ptext5:	
  4581 ;; *************** function ___fltol *****************
  4582 ;; Defined at:
  4583 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\fltol.c"
  4584 ;; Parameters:    Size  Location     Type
  4585 ;;  f1              4    0[BANK1 ] void 
  4586 ;; Auto vars:     Size  Location     Type
  4587 ;;  exp1            1    9[BANK1 ] unsigned char 
  4588 ;;  sign1           1    8[BANK1 ] unsigned char 
  4589 ;; Return value:  Size  Location     Type
  4590 ;;                  4    0[BANK1 ] long 
  4591 ;; Registers used:
  4592 ;;		wreg, status,2, status,0
  4593 ;; Tracked objects:
  4594 ;;		On entry : 1F/1
  4595 ;;		On exit  : 1F/1
  4596 ;;		Unchanged: 0/0
  4597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4598 ;;      Params:         0       0       4       0       0       0
  4599 ;;      Locals:         0       0       2       0       0       0
  4600 ;;      Temps:          0       0       4       0       0       0
  4601 ;;      Totals:         0       0      10       0       0       0
  4602 ;;Total ram usage:       10 bytes
  4603 ;; Hardware stack levels used: 1
  4604 ;; Hardware stack levels required when called: 5
  4605 ;; This function calls:
  4606 ;;		Nothing
  4607 ;; This function is called by:
  4608 ;;		_envia_Tx
  4609 ;; This function uses a non-reentrant model
  4610 ;;
  4611                           
  4612     0EC1                     ___fltol:	
  4613                           ;psect for function ___fltol
  4614                           
  4615                           
  4616                           ;incstack = 0
  4617                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  4618     0EC1  1003               	clrc
  4619     0EC2  0D4E               	rlf	(___fltol@f1+2)^(0+128),w
  4620     0EC3  0D4F               	rlf	(___fltol@f1+3)^(0+128),w
  4621     0EC4  00D5               	movwf	___fltol@exp1^(0+128)
  4622     0EC5  0855               	movf	___fltol@exp1^(0+128),w
  4623     0EC6  1D03               	btfss	3,2
  4624     0EC7  2ED1               	goto	l2870
  4625     0EC8                     l2866:
  4626     0EC8  3000               	movlw	0
  4627     0EC9  00CF               	movwf	(?___fltol+3)^(0+128)
  4628     0ECA  3000               	movlw	0
  4629     0ECB  00CE               	movwf	(?___fltol+2)^(0+128)
  4630     0ECC  3000               	movlw	0
  4631     0ECD  00CD               	movwf	(?___fltol+1)^(0+128)
  4632     0ECE  3000               	movlw	0
  4633     0ECF  00CC               	movwf	?___fltol^(0+128)
  4634     0ED0  0008               	return
  4635     0ED1                     l2870:
  4636     0ED1  084C               	movf	___fltol@f1^(0+128),w
  4637     0ED2  00D0               	movwf	??___fltol^(0+128)
  4638     0ED3  084D               	movf	(___fltol@f1+1)^(0+128),w
  4639     0ED4  00D1               	movwf	(??___fltol^(0+128)+1)
  4640     0ED5  084E               	movf	(___fltol@f1+2)^(0+128),w
  4641     0ED6  00D2               	movwf	(??___fltol^(0+128)+2)
  4642     0ED7  084F               	movf	(___fltol@f1+3)^(0+128),w
  4643     0ED8  00D3               	movwf	(??___fltol^(0+128)+3)
  4644     0ED9  301F               	movlw	31
  4645     0EDA                     u2595:
  4646     0EDA  36D3               	lsrf	(??___fltol^(0+128)+3),f
  4647     0EDB  0CD2               	rrf	(??___fltol^(0+128)+2),f
  4648     0EDC  0CD1               	rrf	(??___fltol^(0+128)+1),f
  4649     0EDD  0CD0               	rrf	??___fltol^(0+128),f
  4650     0EDE  0B89               	decfsz	9,f
  4651     0EDF  2EDA               	goto	u2595
  4652     0EE0  0850               	movf	??___fltol^(0+128),w
  4653     0EE1  00D4               	movwf	___fltol@sign1^(0+128)
  4654     0EE2  17CE               	bsf	(___fltol@f1^(0+128)+2),7
  4655     0EE3  30FF               	movlw	255
  4656     0EE4  05CC               	andwf	___fltol@f1^(0+128),f
  4657     0EE5  30FF               	movlw	255
  4658     0EE6  05CD               	andwf	(___fltol@f1+1)^(0+128),f
  4659     0EE7  30FF               	movlw	255
  4660     0EE8  05CE               	andwf	(___fltol@f1+2)^(0+128),f
  4661     0EE9  3000               	movlw	0
  4662     0EEA  05CF               	andwf	(___fltol@f1+3)^(0+128),f
  4663     0EEB  3096               	movlw	150
  4664     0EEC  02D5               	subwf	___fltol@exp1^(0+128),f
  4665     0EED  1FD5               	btfss	___fltol@exp1^(0+128),7
  4666     0EEE  2F02               	goto	l2888
  4667     0EEF  0855               	movf	___fltol@exp1^(0+128),w
  4668     0EF0  3A80               	xorlw	128
  4669     0EF1  3E97               	addlw	151
  4670     0EF2  1C03               	btfss	3,0
  4671     0EF3  2EC8               	goto	l2866
  4672     0EF4                     l2886:
  4673     0EF4  3001               	movlw	1
  4674     0EF5                     u2625:
  4675     0EF5  36CF               	lsrf	(___fltol@f1+3)^(0+128),f
  4676     0EF6  0CCE               	rrf	(___fltol@f1+2)^(0+128),f
  4677     0EF7  0CCD               	rrf	(___fltol@f1+1)^(0+128),f
  4678     0EF8  0CCC               	rrf	___fltol@f1^(0+128),f
  4679     0EF9  0B89               	decfsz	9,f
  4680     0EFA  2EF5               	goto	u2625
  4681     0EFB  3001               	movlw	1
  4682     0EFC  00D0               	movwf	??___fltol^(0+128)
  4683     0EFD  0850               	movf	??___fltol^(0+128),w
  4684     0EFE  07D5               	addwf	___fltol@exp1^(0+128),f
  4685     0EFF  1903               	btfsc	3,2
  4686     0F00  2F13               	goto	l2896
  4687     0F01  2EF4               	goto	l2886
  4688     0F02                     l2888:
  4689     0F02  3020               	movlw	32
  4690     0F03  0255               	subwf	___fltol@exp1^(0+128),w
  4691     0F04  1803               	btfsc	3,0
  4692     0F05  2EC8               	goto	l2866
  4693     0F06                     l1133:
  4694     0F06  0855               	movf	___fltol@exp1^(0+128),w
  4695     0F07  1903               	btfsc	3,2
  4696     0F08  2F13               	goto	l2896
  4697     0F09  3001               	movlw	1
  4698     0F0A                     u2655:
  4699     0F0A  35CC               	lslf	___fltol@f1^(0+128),f
  4700     0F0B  0DCD               	rlf	(___fltol@f1+1)^(0+128),f
  4701     0F0C  0DCE               	rlf	(___fltol@f1+2)^(0+128),f
  4702     0F0D  0DCF               	rlf	(___fltol@f1+3)^(0+128),f
  4703     0F0E  0B89               	decfsz	9,f
  4704     0F0F  2F0A               	goto	u2655
  4705     0F10  3001               	movlw	1
  4706     0F11  02D5               	subwf	___fltol@exp1^(0+128),f
  4707     0F12  2F06               	goto	l1133
  4708     0F13                     l2896:
  4709     0F13  0854               	movf	___fltol@sign1^(0+128),w
  4710     0F14  1903               	btfsc	3,2
  4711     0F15  0008               	return
  4712     0F16  09CC               	comf	___fltol@f1^(0+128),f
  4713     0F17  09CD               	comf	(___fltol@f1+1)^(0+128),f
  4714     0F18  09CE               	comf	(___fltol@f1+2)^(0+128),f
  4715     0F19  09CF               	comf	(___fltol@f1+3)^(0+128),f
  4716     0F1A  0ACC               	incf	___fltol@f1^(0+128),f
  4717     0F1B  1903               	skipnz
  4718     0F1C  0ACD               	incf	(___fltol@f1+1)^(0+128),f
  4719     0F1D  1903               	skipnz
  4720     0F1E  0ACE               	incf	(___fltol@f1+2)^(0+128),f
  4721     0F1F  1903               	skipnz
  4722     0F20  0ACF               	incf	(___fltol@f1+3)^(0+128),f
  4723     0F21  0008               	return
  4724     0F22                     __end_of___fltol:
  4725                           
  4726                           	psect	text6
  4727     0BF5                     __ptext6:	
  4728 ;; *************** function _EUSART_Write *****************
  4729 ;; Defined at:
  4730 ;;		line 132 in file "mcc_generated_files/eusart.c"
  4731 ;; Parameters:    Size  Location     Type
  4732 ;;  txData          1    wreg     unsigned char 
  4733 ;; Auto vars:     Size  Location     Type
  4734 ;;  txData          1    0[BANK1 ] unsigned char 
  4735 ;; Return value:  Size  Location     Type
  4736 ;;                  1    wreg      void 
  4737 ;; Registers used:
  4738 ;;		wreg
  4739 ;; Tracked objects:
  4740 ;;		On entry : 1F/1
  4741 ;;		On exit  : 1F/3
  4742 ;;		Unchanged: 0/0
  4743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4744 ;;      Params:         0       0       0       0       0       0
  4745 ;;      Locals:         0       0       1       0       0       0
  4746 ;;      Temps:          0       0       0       0       0       0
  4747 ;;      Totals:         0       0       1       0       0       0
  4748 ;;Total ram usage:        1 bytes
  4749 ;; Hardware stack levels used: 1
  4750 ;; Hardware stack levels required when called: 5
  4751 ;; This function calls:
  4752 ;;		Nothing
  4753 ;; This function is called by:
  4754 ;;		_envia_Tx
  4755 ;; This function uses a non-reentrant model
  4756 ;;
  4757                           
  4758     0BF5                     _EUSART_Write:	
  4759                           ;psect for function _EUSART_Write
  4760                           
  4761                           
  4762                           ;incstack = 0
  4763                           ; Regs used in _EUSART_Write: [wreg]
  4764                           ;EUSART_Write@txData stored from wreg
  4765     0BF5  00CC               	movwf	EUSART_Write@txData^(0+128)
  4766     0BF6                     l247:	
  4767                           ;mcc_generated_files/eusart.c: 135:     {;mcc_generated_files/eusart.c: 136:     }
  4768                           
  4769                           
  4770                           ;mcc_generated_files/eusart.c: 134:     while(0 == PIR1bits.TXIF)
  4771     0BF6  0020               	movlb	0	; select bank0
  4772     0BF7  1E11               	btfss	17,4	;volatile
  4773     0BF8  2BF6               	goto	l247
  4774                           
  4775                           ;mcc_generated_files/eusart.c: 138:     TXREG = txData;
  4776     0BF9  0021               	movlb	1	; select bank1
  4777     0BFA  084C               	movf	EUSART_Write@txData^(0+128),w
  4778     0BFB  0023               	movlb	3	; select bank3
  4779     0BFC  009A               	movwf	26	;volatile
  4780     0BFD  0008               	return
  4781     0BFE                     __end_of_EUSART_Write:
  4782                           
  4783                           	psect	text7
  4784     0C5F                     __ptext7:	
  4785 ;; *************** function _controlchoose *****************
  4786 ;; Defined at:
  4787 ;;		line 158 in file "main.c"
  4788 ;; Parameters:    Size  Location     Type
  4789 ;;		None
  4790 ;; Auto vars:     Size  Location     Type
  4791 ;;		None
  4792 ;; Return value:  Size  Location     Type
  4793 ;;                  1    wreg      void 
  4794 ;; Registers used:
  4795 ;;		wreg, status,2, status,0, pclath, cstack
  4796 ;; Tracked objects:
  4797 ;;		On entry : 1F/8
  4798 ;;		On exit  : 1F/8
  4799 ;;		Unchanged: 0/0
  4800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4801 ;;      Params:         0       0       0       0       0       0
  4802 ;;      Locals:         0       0       0       0       0       0
  4803 ;;      Temps:          0       0       0       0       0       0
  4804 ;;      Totals:         0       0       0       0       0       0
  4805 ;;Total ram usage:        0 bytes
  4806 ;; Hardware stack levels used: 1
  4807 ;; Hardware stack levels required when called: 7
  4808 ;; This function calls:
  4809 ;;		_TMR4_StartTimer
  4810 ;;		_fluxcontrol
  4811 ;;		_pwmcontrol
  4812 ;; This function is called by:
  4813 ;;		_main
  4814 ;; This function uses a non-reentrant model
  4815 ;;
  4816                           
  4817     0C5F                     _controlchoose:	
  4818                           ;psect for function _controlchoose
  4819                           
  4820                           
  4821                           ;main.c: 159:     if (controlchoice == 1){
  4822                           
  4823                           ;incstack = 0
  4824                           ; Regs used in _controlchoose: [wreg+status,2+status,0+pclath+cstack]
  4825     0C5F  0021               	movlb	1	; select bank1
  4826     0C60  034A               	decf	_controlchoice^(0+128),w
  4827     0C61  1D03               	btfss	3,2
  4828     0C62  2C67               	goto	l2968
  4829                           
  4830                           ;main.c: 160:         pwmcontrol ();
  4831     0C63  3182  2247  318C   	fcall	_pwmcontrol
  4832                           
  4833                           ;main.c: 161:     } else if(controlchoice == 2){
  4834     0C66  2C6E               	goto	l2972
  4835     0C67                     l2968:
  4836     0C67  3002               	movlw	2
  4837     0C68  064A               	xorwf	_controlchoice^(0+128),w
  4838     0C69  1D03               	btfss	3,2
  4839     0C6A  2C6E               	goto	l2972
  4840                           
  4841                           ;main.c: 162:         fluxcontrol ();
  4842     0C6B  3183  237C  318C   	fcall	_fluxcontrol
  4843     0C6E                     l2972:
  4844                           
  4845                           ;main.c: 164:     TMR4_StartTimer();
  4846     0C6E  318B  2379         	fcall	_TMR4_StartTimer
  4847     0C70  0008               	return
  4848     0C71                     __end_of_controlchoose:
  4849                           
  4850                           	psect	text8
  4851     0247                     __ptext8:	
  4852 ;; *************** function _pwmcontrol *****************
  4853 ;; Defined at:
  4854 ;;		line 184 in file "main.c"
  4855 ;; Parameters:    Size  Location     Type
  4856 ;;		None
  4857 ;; Auto vars:     Size  Location     Type
  4858 ;;		None
  4859 ;; Return value:  Size  Location     Type
  4860 ;;                  1    wreg      void 
  4861 ;; Registers used:
  4862 ;;		wreg, status,2, status,0, pclath, cstack
  4863 ;; Tracked objects:
  4864 ;;		On entry : 1F/1
  4865 ;;		On exit  : 0/0
  4866 ;;		Unchanged: 0/0
  4867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4868 ;;      Params:         0       0       0       0       0       0
  4869 ;;      Locals:         0       0       0       0       0       0
  4870 ;;      Temps:          0       0      12       0       0       0
  4871 ;;      Totals:         0       0      12       0       0       0
  4872 ;;Total ram usage:       12 bytes
  4873 ;; Hardware stack levels used: 1
  4874 ;; Hardware stack levels required when called: 6
  4875 ;; This function calls:
  4876 ;;		_EPWM1_LoadDutyValue
  4877 ;;		___atdiv
  4878 ;;		___lwdiv
  4879 ;;		___tmul
  4880 ;; This function is called by:
  4881 ;;		_controlchoose
  4882 ;; This function uses a non-reentrant model
  4883 ;;
  4884                           
  4885     0247                     _pwmcontrol:	
  4886                           ;psect for function _pwmcontrol
  4887                           
  4888                           
  4889                           ;main.c: 185:     error = (ballset-balldist);
  4890                           
  4891                           ;incstack = 0
  4892                           ; Regs used in _pwmcontrol: [wreg+status,2+status,0+pclath+cstack]
  4893     0247  082A               	movf	_balldist^(0+128),w
  4894     0248  0020               	movlb	0	; select bank0
  4895     0249  025E               	subwf	_ballset,w
  4896     024A  0021               	movlb	1	; select bank1
  4897     024B  00E1               	movwf	??_pwmcontrol^(0+128)
  4898     024C  0020               	movlb	0	; select bank0
  4899     024D  085F               	movf	_ballset+1,w
  4900     024E  0021               	movlb	1	; select bank1
  4901     024F  00E2               	movwf	(??_pwmcontrol^(0+128)+1)
  4902     0250  082B               	movf	(_balldist+1)^(0+128),w
  4903     0251  1C03               	skipc
  4904     0252  0F2B               	incfsz	(_balldist+1)^(0+128),w
  4905     0253  2A55               	goto	u2401
  4906     0254  2A56               	goto	u2402
  4907     0255                     u2401:
  4908     0255  02E2               	subwf	(??_pwmcontrol^(0+128)+1),f
  4909     0256                     u2402:
  4910     0256  0020               	movlb	0	; select bank0
  4911     0257  0860               	movf	_ballset+2,w
  4912     0258  0021               	movlb	1	; select bank1
  4913     0259  00E3               	movwf	(??_pwmcontrol^(0+128)+2)
  4914     025A  082C               	movf	(_balldist+2)^(0+128),w
  4915     025B  1C03               	skipc
  4916     025C  0F2C               	incfsz	(_balldist+2)^(0+128),w
  4917     025D  2A5F               	goto	u2403
  4918     025E  2A60               	goto	u2404
  4919     025F                     u2403:
  4920     025F  02E3               	subwf	(??_pwmcontrol^(0+128)+2),f
  4921     0260                     u2404:
  4922     0260  0861               	movf	??_pwmcontrol^(0+128),w
  4923     0261  00B0               	movwf	_error^(0+128)
  4924     0262  0862               	movf	(??_pwmcontrol+1)^(0+128),w
  4925     0263  00B1               	movwf	(_error+1)^(0+128)
  4926     0264  0863               	movf	(??_pwmcontrol+2)^(0+128),w
  4927     0265  00B2               	movwf	(_error+2)^(0+128)
  4928                           
  4929                           ;main.c: 186:     if(error > 15 || error < -15){
  4930     0266  1BB2               	btfsc	(_error+2)^(0+128),7
  4931     0267  2A72               	goto	l2788
  4932     0268  0832               	movf	(_error+2)^(0+128),w
  4933     0269  1D03               	btfss	3,2
  4934     026A  2A7D               	goto	l2790
  4935     026B  0831               	movf	(_error+1)^(0+128),w
  4936     026C  1D03               	btfss	3,2
  4937     026D  2A7D               	goto	l2790
  4938     026E  3010               	movlw	16
  4939     026F  0230               	subwf	_error^(0+128),w
  4940     0270  1803               	btfsc	3,0
  4941     0271  2A7D               	goto	l2790
  4942     0272                     l2788:
  4943     0272  0021               	movlb	1	; select bank1
  4944     0273  1FB2               	btfss	(_error+2)^(0+128),7
  4945     0274  0008               	return
  4946     0275  30F1               	movlw	241
  4947     0276  0230               	subwf	_error^(0+128),w
  4948     0277  30FF               	movlw	255
  4949     0278  3B31               	subwfb	(_error+1)^(0+128),w
  4950     0279  30FF               	movlw	255
  4951     027A  3B32               	subwfb	(_error+2)^(0+128),w
  4952     027B  1803               	btfsc	3,0
  4953     027C  0008               	return
  4954     027D                     l2790:
  4955     027D  300A               	movlw	10
  4956     027E  0021               	movlb	1	; select bank1
  4957     027F  00D5               	movwf	___atdiv@divisor^(0+128)
  4958     0280  3000               	movlw	0
  4959     0281  00D6               	movwf	(___atdiv@divisor+1)^(0+128)
  4960     0282  3000               	movlw	0
  4961     0283  00D7               	movwf	(___atdiv@divisor+2)^(0+128)
  4962     0284  0830               	movf	_error^(0+128),w
  4963     0285  00CC               	movwf	___tmul@multiplier^(0+128)
  4964     0286  0831               	movf	(_error+1)^(0+128),w
  4965     0287  00CD               	movwf	(___tmul@multiplier+1)^(0+128)
  4966     0288  0832               	movf	(_error+2)^(0+128),w
  4967     0289  00CE               	movwf	(___tmul@multiplier+2)^(0+128)
  4968     028A  3044               	movlw	68
  4969     028B  00CF               	movwf	___tmul@multiplicand^(0+128)
  4970     028C  3000               	movlw	0
  4971     028D  00D0               	movwf	(___tmul@multiplicand+1)^(0+128)
  4972     028E  3000               	movlw	0
  4973     028F  00D1               	movwf	(___tmul@multiplicand+2)^(0+128)
  4974     0290  318D  2547  3182   	fcall	___tmul
  4975     0293  084C               	movf	?___tmul^(0+128),w
  4976     0294  00D8               	movwf	___atdiv@dividend^(0+128)
  4977     0295  084D               	movf	(?___tmul+1)^(0+128),w
  4978     0296  00D9               	movwf	(___atdiv@dividend+1)^(0+128)
  4979     0297  084E               	movf	(?___tmul+2)^(0+128),w
  4980     0298  00DA               	movwf	(___atdiv@dividend+2)^(0+128)
  4981     0299  318F  2722  3182   	fcall	___atdiv
  4982     029C  0855               	movf	?___atdiv^(0+128),w
  4983     029D  07A7               	addwf	_outputsum^(0+128),f
  4984     029E  0856               	movf	(?___atdiv+1)^(0+128),w
  4985     029F  3DA8               	addwfc	(_outputsum+1)^(0+128),f
  4986     02A0  0857               	movf	(?___atdiv+2)^(0+128),w
  4987     02A1  3DA9               	addwfc	(_outputsum+2)^(0+128),f
  4988                           
  4989                           ;main.c: 188:         if (outputsum > 100) outputsum = 100;
  4990     02A2  1BA9               	btfsc	(_outputsum+2)^(0+128),7
  4991     02A3  2AB5               	goto	l2796
  4992     02A4  0829               	movf	(_outputsum+2)^(0+128),w
  4993     02A5  1D03               	btfss	3,2
  4994     02A6  2AAE               	goto	l2794
  4995     02A7  0828               	movf	(_outputsum+1)^(0+128),w
  4996     02A8  1D03               	btfss	3,2
  4997     02A9  2AAE               	goto	l2794
  4998     02AA  3065               	movlw	101
  4999     02AB  0227               	subwf	_outputsum^(0+128),w
  5000     02AC  1C03               	btfss	3,0
  5001     02AD  2AB5               	goto	l2796
  5002     02AE                     l2794:
  5003     02AE  3064               	movlw	100
  5004     02AF  0021               	movlb	1	; select bank1
  5005     02B0  00A7               	movwf	_outputsum^(0+128)
  5006     02B1  3000               	movlw	0
  5007     02B2  00A8               	movwf	(_outputsum+1)^(0+128)
  5008     02B3  3000               	movlw	0
  5009     02B4  2AC6               	goto	L4
  5010     02B5                     l2796:
  5011     02B5  0021               	movlb	1	; select bank1
  5012     02B6  1FA9               	btfss	(_outputsum+2)^(0+128),7
  5013     02B7  2AC7               	goto	l2800
  5014     02B8  30F6               	movlw	246
  5015     02B9  0227               	subwf	_outputsum^(0+128),w
  5016     02BA  30FF               	movlw	255
  5017     02BB  3B28               	subwfb	(_outputsum+1)^(0+128),w
  5018     02BC  30FF               	movlw	255
  5019     02BD  3B29               	subwfb	(_outputsum+2)^(0+128),w
  5020     02BE  1803               	btfsc	3,0
  5021     02BF  2AC7               	goto	l2800
  5022     02C0  30F6               	movlw	246
  5023     02C1  0021               	movlb	1	; select bank1
  5024     02C2  00A7               	movwf	_outputsum^(0+128)
  5025     02C3  30FF               	movlw	255
  5026     02C4  00A8               	movwf	(_outputsum+1)^(0+128)
  5027     02C5  30FF               	movlw	255
  5028     02C6                     L4:
  5029     02C6  00A9               	movwf	(_outputsum+2)^(0+128)
  5030     02C7                     l2800:
  5031     02C7  0021               	movlb	1	; select bank1
  5032     02C8  0824               	movf	_outpre^(0+128),w
  5033     02C9  00E1               	movwf	??_pwmcontrol^(0+128)
  5034     02CA  0825               	movf	(_outpre+1)^(0+128),w
  5035     02CB  00E2               	movwf	(??_pwmcontrol^(0+128)+1)
  5036     02CC  0826               	movf	(_outpre+2)^(0+128),w
  5037     02CD  00E3               	movwf	(??_pwmcontrol^(0+128)+2)
  5038     02CE  0827               	movf	_outputsum^(0+128),w
  5039     02CF  00E4               	movwf	(??_pwmcontrol+3)^(0+128)
  5040     02D0  0828               	movf	(_outputsum+1)^(0+128),w
  5041     02D1  00E5               	movwf	((??_pwmcontrol+3)^(0+128)+1)
  5042     02D2  0829               	movf	(_outputsum+2)^(0+128),w
  5043     02D3  00E6               	movwf	((??_pwmcontrol+3)^(0+128)+2)
  5044     02D4  082D               	movf	_errorp^(0+128),w
  5045     02D5  00CC               	movwf	___tmul@multiplier^(0+128)
  5046     02D6  082E               	movf	(_errorp+1)^(0+128),w
  5047     02D7  00CD               	movwf	(___tmul@multiplier+1)^(0+128)
  5048     02D8  082F               	movf	(_errorp+2)^(0+128),w
  5049     02D9  00CE               	movwf	(___tmul@multiplier+2)^(0+128)
  5050     02DA  30F1               	movlw	241
  5051     02DB  00CF               	movwf	___tmul@multiplicand^(0+128)
  5052     02DC  30FF               	movlw	255
  5053     02DD  00D0               	movwf	(___tmul@multiplicand+1)^(0+128)
  5054     02DE  30FF               	movlw	255
  5055     02DF  00D1               	movwf	(___tmul@multiplicand+2)^(0+128)
  5056     02E0  318D  2547  3182   	fcall	___tmul
  5057     02E3  084C               	movf	?___tmul^(0+128),w
  5058     02E4  00E7               	movwf	(??_pwmcontrol+6)^(0+128)
  5059     02E5  084D               	movf	(?___tmul+1)^(0+128),w
  5060     02E6  00E8               	movwf	((??_pwmcontrol+6)^(0+128)+1)
  5061     02E7  084E               	movf	(?___tmul+2)^(0+128),w
  5062     02E8  00E9               	movwf	((??_pwmcontrol+6)^(0+128)+2)
  5063     02E9  0830               	movf	_error^(0+128),w
  5064     02EA  00EA               	movwf	(??_pwmcontrol+9)^(0+128)
  5065     02EB  0831               	movf	(_error+1)^(0+128),w
  5066     02EC  00EB               	movwf	((??_pwmcontrol+9)^(0+128)+1)
  5067     02ED  0832               	movf	(_error+2)^(0+128),w
  5068     02EE  00EC               	movwf	((??_pwmcontrol+9)^(0+128)+2)
  5069     02EF  3005               	movlw	5
  5070     02F0                     u2455:
  5071     02F0  35EA               	lslf	(??_pwmcontrol+9)^(0+128),f
  5072     02F1  0DEB               	rlf	((??_pwmcontrol+9)^(0+128)+1),f
  5073     02F2  0DEC               	rlf	((??_pwmcontrol+9)^(0+128)+2),f
  5074     02F3  0B89               	decfsz	9,f
  5075     02F4  2AF0               	goto	u2455
  5076     02F5  0830               	movf	_error^(0+128),w
  5077     02F6  00CC               	movwf	___tmul@multiplier^(0+128)
  5078     02F7  0831               	movf	(_error+1)^(0+128),w
  5079     02F8  00CD               	movwf	(___tmul@multiplier+1)^(0+128)
  5080     02F9  0832               	movf	(_error+2)^(0+128),w
  5081     02FA  00CE               	movwf	(___tmul@multiplier+2)^(0+128)
  5082     02FB  300F               	movlw	15
  5083     02FC  00CF               	movwf	___tmul@multiplicand^(0+128)
  5084     02FD  3000               	movlw	0
  5085     02FE  00D0               	movwf	(___tmul@multiplicand+1)^(0+128)
  5086     02FF  3000               	movlw	0
  5087     0300  00D1               	movwf	(___tmul@multiplicand+2)^(0+128)
  5088     0301  318D  2547  3182   	fcall	___tmul
  5089     0304  084C               	movf	?___tmul^(0+128),w
  5090     0305  07EA               	addwf	(??_pwmcontrol+9)^(0+128),f
  5091     0306  084D               	movf	(?___tmul+1)^(0+128),w
  5092     0307  3DEB               	addwfc	((??_pwmcontrol+9)^(0+128)+1),f
  5093     0308  084E               	movf	(?___tmul+2)^(0+128),w
  5094     0309  3DEC               	addwfc	((??_pwmcontrol+9)^(0+128)+2),f
  5095     030A  086A               	movf	(??_pwmcontrol+9)^(0+128),w
  5096     030B  07E7               	addwf	(??_pwmcontrol+6)^(0+128),f
  5097     030C  086B               	movf	(??_pwmcontrol+10)^(0+128),w
  5098     030D  3DE8               	addwfc	((??_pwmcontrol+6)^(0+128)+1),f
  5099     030E  086C               	movf	(??_pwmcontrol+11)^(0+128),w
  5100     030F  3DE9               	addwfc	((??_pwmcontrol+6)^(0+128)+2),f
  5101     0310  0867               	movf	(??_pwmcontrol+6)^(0+128),w
  5102     0311  07E4               	addwf	(??_pwmcontrol+3)^(0+128),f
  5103     0312  0868               	movf	(??_pwmcontrol+7)^(0+128),w
  5104     0313  3DE5               	addwfc	((??_pwmcontrol+3)^(0+128)+1),f
  5105     0314  0869               	movf	(??_pwmcontrol+8)^(0+128),w
  5106     0315  3DE6               	addwfc	((??_pwmcontrol+3)^(0+128)+2),f
  5107     0316  0864               	movf	(??_pwmcontrol+3)^(0+128),w
  5108     0317  07E1               	addwf	??_pwmcontrol^(0+128),f
  5109     0318  0865               	movf	(??_pwmcontrol+4)^(0+128),w
  5110     0319  3DE2               	addwfc	(??_pwmcontrol^(0+128)+1),f
  5111     031A  0866               	movf	(??_pwmcontrol+5)^(0+128),w
  5112     031B  3DE3               	addwfc	(??_pwmcontrol^(0+128)+2),f
  5113     031C  0861               	movf	??_pwmcontrol^(0+128),w
  5114     031D  00A4               	movwf	_outpre^(0+128)
  5115     031E  0862               	movf	(??_pwmcontrol+1)^(0+128),w
  5116     031F  00A5               	movwf	(_outpre+1)^(0+128)
  5117     0320  0863               	movf	(??_pwmcontrol+2)^(0+128),w
  5118     0321  00A6               	movwf	(_outpre+2)^(0+128)
  5119                           
  5120                           ;main.c: 191:         if(outpre > 2230){
  5121     0322  1BA6               	btfsc	(_outpre+2)^(0+128),7
  5122     0323  2B30               	goto	l723
  5123     0324  0826               	movf	(_outpre+2)^(0+128),w
  5124     0325  1D03               	btfss	3,2
  5125     0326  2B2D               	goto	l2804
  5126     0327  30B7               	movlw	183
  5127     0328  0224               	subwf	_outpre^(0+128),w
  5128     0329  3008               	movlw	8
  5129     032A  3B25               	subwfb	(_outpre+1)^(0+128),w
  5130     032B  1C03               	btfss	3,0
  5131     032C  2B30               	goto	l723
  5132     032D                     l2804:
  5133                           
  5134                           ;main.c: 192:             output = 1023;
  5135     032D  30FF               	movlw	255
  5136     032E  0021               	movlb	1	; select bank1
  5137     032F  2B34               	goto	L5
  5138     0330                     l723:	
  5139                           ;main.c: 194:         else if(outpre <0) {
  5140                           
  5141                           ;main.c: 193:         }
  5142                           
  5143     0330  0021               	movlb	1	; select bank1
  5144     0331  1FA6               	btfss	(_outpre+2)^(0+128),7
  5145     0332  2B38               	goto	l2808
  5146                           
  5147                           ;main.c: 195:             output= 0+800;
  5148     0333  3020               	movlw	32
  5149     0334                     L5:
  5150     0334  00C1               	movwf	_output^(0+128)
  5151     0335  3003               	movlw	3
  5152     0336  00C2               	movwf	(_output^(0+128)+1)
  5153                           
  5154                           ;main.c: 196:         } else {
  5155     0337  2B49               	goto	l2810
  5156     0338                     l2808:
  5157                           
  5158                           ;main.c: 197:             output = ((uint16_t)outpre/10) + 800;
  5159     0338  300A               	movlw	10
  5160     0339  00CC               	movwf	___lwdiv@divisor^(0+128)
  5161     033A  3000               	movlw	0
  5162     033B  00CD               	movwf	(___lwdiv@divisor^(0+128)+1)
  5163     033C  0825               	movf	(_outpre+1)^(0+128),w
  5164     033D  00CF               	movwf	(___lwdiv@dividend+1)^(0+128)
  5165     033E  0824               	movf	_outpre^(0+128),w
  5166     033F  00CE               	movwf	___lwdiv@dividend^(0+128)
  5167     0340  3187  27CC  3182   	fcall	___lwdiv
  5168     0343  084C               	movf	?___lwdiv^(0+128),w
  5169     0344  3E20               	addlw	32
  5170     0345  00C1               	movwf	_output^(0+128)
  5171     0346  3003               	movlw	3
  5172     0347  3D4D               	addwfc	(?___lwdiv+1)^(0+128),w
  5173     0348  00C2               	movwf	(_output+1)^(0+128)
  5174     0349                     l2810:
  5175                           
  5176                           ;main.c: 199:         if (outpre>2230){
  5177     0349  1BA6               	btfsc	(_outpre+2)^(0+128),7
  5178     034A  2B5B               	goto	l2814
  5179     034B  0826               	movf	(_outpre+2)^(0+128),w
  5180     034C  1D03               	btfss	3,2
  5181     034D  2B54               	goto	l2812
  5182     034E  30B7               	movlw	183
  5183     034F  0224               	subwf	_outpre^(0+128),w
  5184     0350  3008               	movlw	8
  5185     0351  3B25               	subwfb	(_outpre+1)^(0+128),w
  5186     0352  1C03               	btfss	3,0
  5187     0353  2B5B               	goto	l2814
  5188     0354                     l2812:
  5189                           
  5190                           ;main.c: 200:             outpre = 2230;
  5191     0354  30B6               	movlw	182
  5192     0355  0021               	movlb	1	; select bank1
  5193     0356  00A4               	movwf	_outpre^(0+128)
  5194     0357  3008               	movlw	8
  5195     0358  00A5               	movwf	(_outpre+1)^(0+128)
  5196     0359  3000               	movlw	0
  5197     035A  2B6C               	goto	L6
  5198     035B                     l2814:	
  5199                           ;main.c: 201:         } else if (outpre < -800){
  5200                           
  5201     035B  0021               	movlb	1	; select bank1
  5202     035C  1FA6               	btfss	(_outpre+2)^(0+128),7
  5203     035D  2B6D               	goto	l2818
  5204     035E  30E0               	movlw	224
  5205     035F  0224               	subwf	_outpre^(0+128),w
  5206     0360  30FC               	movlw	252
  5207     0361  3B25               	subwfb	(_outpre+1)^(0+128),w
  5208     0362  30FF               	movlw	255
  5209     0363  3B26               	subwfb	(_outpre+2)^(0+128),w
  5210     0364  1803               	btfsc	3,0
  5211     0365  2B6D               	goto	l2818
  5212                           
  5213                           ;main.c: 202:             outpre = -800;
  5214     0366  30E0               	movlw	224
  5215     0367  0021               	movlb	1	; select bank1
  5216     0368  00A4               	movwf	_outpre^(0+128)
  5217     0369  30FC               	movlw	252
  5218     036A  00A5               	movwf	(_outpre+1)^(0+128)
  5219     036B  30FF               	movlw	255
  5220     036C                     L6:
  5221     036C  00A6               	movwf	(_outpre+2)^(0+128)
  5222     036D                     l2818:
  5223                           
  5224                           ;main.c: 205:         EPWM1_LoadDutyValue(output);
  5225     036D  0021               	movlb	1	; select bank1
  5226     036E  0842               	movf	(_output+1)^(0+128),w
  5227     036F  00CD               	movwf	(EPWM1_LoadDutyValue@dutyValue+1)^(0+128)
  5228     0370  0841               	movf	_output^(0+128),w
  5229     0371  00CC               	movwf	EPWM1_LoadDutyValue@dutyValue^(0+128)
  5230     0372  318C  24E9         	fcall	_EPWM1_LoadDutyValue
  5231                           
  5232                           ;main.c: 206:         errorp = error;
  5233     0374  0021               	movlb	1	; select bank1
  5234     0375  0830               	movf	_error^(0+128),w
  5235     0376  00AD               	movwf	_errorp^(0+128)
  5236     0377  0831               	movf	(_error+1)^(0+128),w
  5237     0378  00AE               	movwf	(_errorp+1)^(0+128)
  5238     0379  0832               	movf	(_error+2)^(0+128),w
  5239     037A  00AF               	movwf	(_errorp+2)^(0+128)
  5240     037B  0008               	return
  5241     037C                     __end_of_pwmcontrol:
  5242                           
  5243                           	psect	text9
  5244     07CC                     __ptext9:	
  5245 ;; *************** function ___lwdiv *****************
  5246 ;; Defined at:
  5247 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lwdiv.c"
  5248 ;; Parameters:    Size  Location     Type
  5249 ;;  divisor         2    0[BANK1 ] unsigned int 
  5250 ;;  dividend        2    2[BANK1 ] unsigned int 
  5251 ;; Auto vars:     Size  Location     Type
  5252 ;;  quotient        2    5[BANK1 ] unsigned int 
  5253 ;;  counter         1    7[BANK1 ] unsigned char 
  5254 ;; Return value:  Size  Location     Type
  5255 ;;                  2    0[BANK1 ] unsigned int 
  5256 ;; Registers used:
  5257 ;;		wreg, status,2, status,0
  5258 ;; Tracked objects:
  5259 ;;		On entry : 1F/1
  5260 ;;		On exit  : 1F/1
  5261 ;;		Unchanged: 0/0
  5262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5263 ;;      Params:         0       0       4       0       0       0
  5264 ;;      Locals:         0       0       3       0       0       0
  5265 ;;      Temps:          0       0       1       0       0       0
  5266 ;;      Totals:         0       0       8       0       0       0
  5267 ;;Total ram usage:        8 bytes
  5268 ;; Hardware stack levels used: 1
  5269 ;; Hardware stack levels required when called: 5
  5270 ;; This function calls:
  5271 ;;		Nothing
  5272 ;; This function is called by:
  5273 ;;		_pwmcontrol
  5274 ;; This function uses a non-reentrant model
  5275 ;;
  5276                           
  5277     07CC                     ___lwdiv:	
  5278                           ;psect for function ___lwdiv
  5279                           
  5280                           
  5281                           ;incstack = 0
  5282                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5283     07CC  01D1               	clrf	___lwdiv@quotient^(0+128)
  5284     07CD  01D2               	clrf	(___lwdiv@quotient+1)^(0+128)
  5285     07CE  084C               	movf	___lwdiv@divisor^(0+128),w
  5286     07CF  044D               	iorwf	(___lwdiv@divisor+1)^(0+128),w
  5287     07D0  1903               	btfsc	3,2
  5288     07D1  2FFB               	goto	l2410
  5289     07D2  01D3               	clrf	___lwdiv@counter^(0+128)
  5290     07D3  0AD3               	incf	___lwdiv@counter^(0+128),f
  5291     07D4                     l2398:
  5292     07D4  1BCD               	btfsc	(___lwdiv@divisor+1)^(0+128),7
  5293     07D5  2FE0               	goto	l2400
  5294     07D6  3001               	movlw	1
  5295     07D7                     u1755:
  5296     07D7  35CC               	lslf	___lwdiv@divisor^(0+128),f
  5297     07D8  0DCD               	rlf	(___lwdiv@divisor+1)^(0+128),f
  5298     07D9  0B89               	decfsz	9,f
  5299     07DA  2FD7               	goto	u1755
  5300     07DB  3001               	movlw	1
  5301     07DC  00D0               	movwf	??___lwdiv^(0+128)
  5302     07DD  0850               	movf	??___lwdiv^(0+128),w
  5303     07DE  07D3               	addwf	___lwdiv@counter^(0+128),f
  5304     07DF  2FD4               	goto	l2398
  5305     07E0                     l2400:
  5306     07E0  3001               	movlw	1
  5307     07E1                     u1775:
  5308     07E1  35D1               	lslf	___lwdiv@quotient^(0+128),f
  5309     07E2  0DD2               	rlf	(___lwdiv@quotient+1)^(0+128),f
  5310     07E3  0B89               	decfsz	9,f
  5311     07E4  2FE1               	goto	u1775
  5312     07E5  084D               	movf	(___lwdiv@divisor+1)^(0+128),w
  5313     07E6  024F               	subwf	(___lwdiv@dividend+1)^(0+128),w
  5314     07E7  1D03               	skipz
  5315     07E8  2FEB               	goto	u1785
  5316     07E9  084C               	movf	___lwdiv@divisor^(0+128),w
  5317     07EA  024E               	subwf	___lwdiv@dividend^(0+128),w
  5318     07EB                     u1785:
  5319     07EB  1C03               	skipc
  5320     07EC  2FF2               	goto	l2406
  5321     07ED  084C               	movf	___lwdiv@divisor^(0+128),w
  5322     07EE  02CE               	subwf	___lwdiv@dividend^(0+128),f
  5323     07EF  084D               	movf	(___lwdiv@divisor+1)^(0+128),w
  5324     07F0  3BCF               	subwfb	(___lwdiv@dividend+1)^(0+128),f
  5325     07F1  1451               	bsf	___lwdiv@quotient^(0+128),0
  5326     07F2                     l2406:
  5327     07F2  3001               	movlw	1
  5328     07F3                     u1795:
  5329     07F3  36CD               	lsrf	(___lwdiv@divisor+1)^(0+128),f
  5330     07F4  0CCC               	rrf	___lwdiv@divisor^(0+128),f
  5331     07F5  0B89               	decfsz	9,f
  5332     07F6  2FF3               	goto	u1795
  5333     07F7  3001               	movlw	1
  5334     07F8  02D3               	subwf	___lwdiv@counter^(0+128),f
  5335     07F9  1D03               	btfss	3,2
  5336     07FA  2FE0               	goto	l2400
  5337     07FB                     l2410:
  5338     07FB  0852               	movf	(___lwdiv@quotient+1)^(0+128),w
  5339     07FC  00CD               	movwf	(?___lwdiv+1)^(0+128)
  5340     07FD  0851               	movf	___lwdiv@quotient^(0+128),w
  5341     07FE  00CC               	movwf	?___lwdiv^(0+128)
  5342     07FF  0008               	return
  5343     0800                     __end_of___lwdiv:
  5344                           
  5345                           	psect	text10
  5346     0F22                     __ptext10:	
  5347 ;; *************** function ___atdiv *****************
  5348 ;; Defined at:
  5349 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\atdiv.c"
  5350 ;; Parameters:    Size  Location     Type
  5351 ;;  divisor         3    9[BANK1 ] m
  5352 ;;  dividend        3   12[BANK1 ] m
  5353 ;; Auto vars:     Size  Location     Type
  5354 ;;  quotient        3   18[BANK1 ] m
  5355 ;;  sign            1   17[BANK1 ] unsigned char 
  5356 ;;  counter         1   16[BANK1 ] unsigned char 
  5357 ;; Return value:  Size  Location     Type
  5358 ;;                  3    9[BANK1 ] m
  5359 ;; Registers used:
  5360 ;;		wreg, status,2, status,0
  5361 ;; Tracked objects:
  5362 ;;		On entry : 1F/1
  5363 ;;		On exit  : 1F/1
  5364 ;;		Unchanged: 0/0
  5365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5366 ;;      Params:         0       0       6       0       0       0
  5367 ;;      Locals:         0       0       5       0       0       0
  5368 ;;      Temps:          0       0       1       0       0       0
  5369 ;;      Totals:         0       0      12       0       0       0
  5370 ;;Total ram usage:       12 bytes
  5371 ;; Hardware stack levels used: 1
  5372 ;; Hardware stack levels required when called: 5
  5373 ;; This function calls:
  5374 ;;		Nothing
  5375 ;; This function is called by:
  5376 ;;		_pwmcontrol
  5377 ;; This function uses a non-reentrant model
  5378 ;;
  5379                           
  5380     0F22                     ___atdiv:	
  5381                           ;psect for function ___atdiv
  5382                           
  5383                           
  5384                           ;incstack = 0
  5385                           ; Regs used in ___atdiv: [wreg+status,2+status,0]
  5386     0F22  01DD               	clrf	___atdiv@sign^(0+128)
  5387     0F23  1FD7               	btfss	(___atdiv@divisor+2)^(0+128),7
  5388     0F24  2F2F               	goto	l1049
  5389     0F25  09D5               	comf	___atdiv@divisor^(0+128),f
  5390     0F26  09D6               	comf	(___atdiv@divisor+1)^(0+128),f
  5391     0F27  09D7               	comf	(___atdiv@divisor+2)^(0+128),f
  5392     0F28  0AD5               	incf	___atdiv@divisor^(0+128),f
  5393     0F29  1903               	skipnz
  5394     0F2A  0AD6               	incf	(___atdiv@divisor+1)^(0+128),f
  5395     0F2B  1903               	skipnz
  5396     0F2C  0AD7               	incf	(___atdiv@divisor+2)^(0+128),f
  5397     0F2D  01DD               	clrf	___atdiv@sign^(0+128)
  5398     0F2E  0ADD               	incf	___atdiv@sign^(0+128),f
  5399     0F2F                     l1049:
  5400     0F2F  1FDA               	btfss	(___atdiv@dividend+2)^(0+128),7
  5401     0F30  2F3D               	goto	l2358
  5402     0F31  09D8               	comf	___atdiv@dividend^(0+128),f
  5403     0F32  09D9               	comf	(___atdiv@dividend+1)^(0+128),f
  5404     0F33  09DA               	comf	(___atdiv@dividend+2)^(0+128),f
  5405     0F34  0AD8               	incf	___atdiv@dividend^(0+128),f
  5406     0F35  1903               	skipnz
  5407     0F36  0AD9               	incf	(___atdiv@dividend+1)^(0+128),f
  5408     0F37  1903               	skipnz
  5409     0F38  0ADA               	incf	(___atdiv@dividend+2)^(0+128),f
  5410     0F39  3001               	movlw	1
  5411     0F3A  00DB               	movwf	??___atdiv^(0+128)
  5412     0F3B  085B               	movf	??___atdiv^(0+128),w
  5413     0F3C  06DD               	xorwf	___atdiv@sign^(0+128),f
  5414     0F3D                     l2358:
  5415     0F3D  3000               	movlw	0
  5416     0F3E  00DE               	movwf	___atdiv@quotient^(0+128)
  5417     0F3F  3000               	movlw	0
  5418     0F40  00DF               	movwf	(___atdiv@quotient+1)^(0+128)
  5419     0F41  3000               	movlw	0
  5420     0F42  00E0               	movwf	(___atdiv@quotient+2)^(0+128)
  5421     0F43  0857               	movf	(___atdiv@divisor+2)^(0+128),w
  5422     0F44  0456               	iorwf	(___atdiv@divisor+1)^(0+128),w
  5423     0F45  0455               	iorwf	___atdiv@divisor^(0+128),w
  5424     0F46  1903               	skipnz
  5425     0F47  2F7A               	goto	l2380
  5426     0F48  01DC               	clrf	___atdiv@counter^(0+128)
  5427     0F49  0ADC               	incf	___atdiv@counter^(0+128),f
  5428     0F4A                     l2366:
  5429     0F4A  1BD7               	btfsc	(___atdiv@divisor+2)^(0+128),7
  5430     0F4B  2F57               	goto	l2368
  5431     0F4C  3001               	movlw	1
  5432     0F4D                     u1675:
  5433     0F4D  35D5               	lslf	___atdiv@divisor^(0+128),f
  5434     0F4E  0DD6               	rlf	(___atdiv@divisor+1)^(0+128),f
  5435     0F4F  0DD7               	rlf	(___atdiv@divisor+2)^(0+128),f
  5436     0F50  0B89               	decfsz	9,f
  5437     0F51  2F4D               	goto	u1675
  5438     0F52  3001               	movlw	1
  5439     0F53  00DB               	movwf	??___atdiv^(0+128)
  5440     0F54  085B               	movf	??___atdiv^(0+128),w
  5441     0F55  07DC               	addwf	___atdiv@counter^(0+128),f
  5442     0F56  2F4A               	goto	l2366
  5443     0F57                     l2368:
  5444     0F57  3001               	movlw	1
  5445     0F58                     u1695:
  5446     0F58  35DE               	lslf	___atdiv@quotient^(0+128),f
  5447     0F59  0DDF               	rlf	(___atdiv@quotient+1)^(0+128),f
  5448     0F5A  0DE0               	rlf	(___atdiv@quotient+2)^(0+128),f
  5449     0F5B  0B89               	decfsz	9,f
  5450     0F5C  2F58               	goto	u1695
  5451     0F5D  0857               	movf	(___atdiv@divisor+2)^(0+128),w
  5452     0F5E  025A               	subwf	(___atdiv@dividend+2)^(0+128),w
  5453     0F5F  1D03               	skipz
  5454     0F60  2F67               	goto	u1705
  5455     0F61  0856               	movf	(___atdiv@divisor+1)^(0+128),w
  5456     0F62  0259               	subwf	(___atdiv@dividend+1)^(0+128),w
  5457     0F63  1D03               	skipz
  5458     0F64  2F67               	goto	u1705
  5459     0F65  0855               	movf	___atdiv@divisor^(0+128),w
  5460     0F66  0258               	subwf	___atdiv@dividend^(0+128),w
  5461     0F67                     u1705:
  5462     0F67  1C03               	skipc
  5463     0F68  2F70               	goto	l2376
  5464     0F69  0855               	movf	___atdiv@divisor^(0+128),w
  5465     0F6A  02D8               	subwf	___atdiv@dividend^(0+128),f
  5466     0F6B  0856               	movf	(___atdiv@divisor+1)^(0+128),w
  5467     0F6C  3BD9               	subwfb	(___atdiv@dividend+1)^(0+128),f
  5468     0F6D  0857               	movf	(___atdiv@divisor+2)^(0+128),w
  5469     0F6E  3BDA               	subwfb	(___atdiv@dividend+2)^(0+128),f
  5470     0F6F  145E               	bsf	___atdiv@quotient^(0+128),0
  5471     0F70                     l2376:
  5472     0F70  3001               	movlw	1
  5473     0F71                     u1715:
  5474     0F71  36D7               	lsrf	(___atdiv@divisor+2)^(0+128),f
  5475     0F72  0CD6               	rrf	(___atdiv@divisor+1)^(0+128),f
  5476     0F73  0CD5               	rrf	___atdiv@divisor^(0+128),f
  5477     0F74  0B89               	decfsz	9,f
  5478     0F75  2F71               	goto	u1715
  5479     0F76  3001               	movlw	1
  5480     0F77  02DC               	subwf	___atdiv@counter^(0+128),f
  5481     0F78  1D03               	btfss	3,2
  5482     0F79  2F57               	goto	l2368
  5483     0F7A                     l2380:
  5484     0F7A  085D               	movf	___atdiv@sign^(0+128),w
  5485     0F7B  1903               	btfsc	3,2
  5486     0F7C  2F85               	goto	l2384
  5487     0F7D  09DE               	comf	___atdiv@quotient^(0+128),f
  5488     0F7E  09DF               	comf	(___atdiv@quotient+1)^(0+128),f
  5489     0F7F  09E0               	comf	(___atdiv@quotient+2)^(0+128),f
  5490     0F80  0ADE               	incf	___atdiv@quotient^(0+128),f
  5491     0F81  1903               	skipnz
  5492     0F82  0ADF               	incf	(___atdiv@quotient+1)^(0+128),f
  5493     0F83  1903               	skipnz
  5494     0F84  0AE0               	incf	(___atdiv@quotient+2)^(0+128),f
  5495     0F85                     l2384:
  5496     0F85  085E               	movf	___atdiv@quotient^(0+128),w
  5497     0F86  00D5               	movwf	?___atdiv^(0+128)
  5498     0F87  085F               	movf	(___atdiv@quotient+1)^(0+128),w
  5499     0F88  00D6               	movwf	(?___atdiv+1)^(0+128)
  5500     0F89  0860               	movf	(___atdiv@quotient+2)^(0+128),w
  5501     0F8A  00D7               	movwf	(?___atdiv+2)^(0+128)
  5502     0F8B  0008               	return
  5503     0F8C                     __end_of___atdiv:
  5504                           
  5505                           	psect	text11
  5506     037C                     __ptext11:	
  5507 ;; *************** function _fluxcontrol *****************
  5508 ;; Defined at:
  5509 ;;		line 167 in file "main.c"
  5510 ;; Parameters:    Size  Location     Type
  5511 ;;		None
  5512 ;; Auto vars:     Size  Location     Type
  5513 ;;		None
  5514 ;; Return value:  Size  Location     Type
  5515 ;;                  1    wreg      void 
  5516 ;; Registers used:
  5517 ;;		wreg, status,2, status,0, pclath, cstack
  5518 ;; Tracked objects:
  5519 ;;		On entry : 1F/1
  5520 ;;		On exit  : 0/0
  5521 ;;		Unchanged: 0/0
  5522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5523 ;;      Params:         0       0       0       0       0       0
  5524 ;;      Locals:         0       0       0       0       0       0
  5525 ;;      Temps:          0       0       6       0       0       0
  5526 ;;      Totals:         0       0       6       0       0       0
  5527 ;;Total ram usage:        6 bytes
  5528 ;; Hardware stack levels used: 1
  5529 ;; Hardware stack levels required when called: 6
  5530 ;; This function calls:
  5531 ;;		___tmul
  5532 ;; This function is called by:
  5533 ;;		_controlchoose
  5534 ;; This function uses a non-reentrant model
  5535 ;;
  5536                           
  5537     037C                     _fluxcontrol:	
  5538                           ;psect for function _fluxcontrol
  5539                           
  5540                           
  5541                           ;main.c: 168:     error = (ballset-balldist)*100;
  5542                           
  5543                           ;incstack = 0
  5544                           ; Regs used in _fluxcontrol: [wreg+status,2+status,0+pclath+cstack]
  5545     037C  082A               	movf	_balldist^(0+128),w
  5546     037D  0020               	movlb	0	; select bank0
  5547     037E  025E               	subwf	_ballset,w
  5548     037F  0021               	movlb	1	; select bank1
  5549     0380  00D5               	movwf	??_fluxcontrol^(0+128)
  5550     0381  0020               	movlb	0	; select bank0
  5551     0382  085F               	movf	_ballset+1,w
  5552     0383  0021               	movlb	1	; select bank1
  5553     0384  00D6               	movwf	(??_fluxcontrol^(0+128)+1)
  5554     0385  082B               	movf	(_balldist+1)^(0+128),w
  5555     0386  1C03               	skipc
  5556     0387  0F2B               	incfsz	(_balldist+1)^(0+128),w
  5557     0388  2B8A               	goto	u2501
  5558     0389  2B8B               	goto	u2502
  5559     038A                     u2501:
  5560     038A  02D6               	subwf	(??_fluxcontrol^(0+128)+1),f
  5561     038B                     u2502:
  5562     038B  0020               	movlb	0	; select bank0
  5563     038C  0860               	movf	_ballset+2,w
  5564     038D  0021               	movlb	1	; select bank1
  5565     038E  00D7               	movwf	(??_fluxcontrol^(0+128)+2)
  5566     038F  082C               	movf	(_balldist+2)^(0+128),w
  5567     0390  1C03               	skipc
  5568     0391  0F2C               	incfsz	(_balldist+2)^(0+128),w
  5569     0392  2B94               	goto	u2503
  5570     0393  2B95               	goto	u2504
  5571     0394                     u2503:
  5572     0394  02D7               	subwf	(??_fluxcontrol^(0+128)+2),f
  5573     0395                     u2504:
  5574     0395  0855               	movf	??_fluxcontrol^(0+128),w
  5575     0396  00CC               	movwf	___tmul@multiplier^(0+128)
  5576     0397  0856               	movf	(??_fluxcontrol+1)^(0+128),w
  5577     0398  00CD               	movwf	(___tmul@multiplier+1)^(0+128)
  5578     0399  0857               	movf	(??_fluxcontrol+2)^(0+128),w
  5579     039A  00CE               	movwf	(___tmul@multiplier+2)^(0+128)
  5580     039B  3064               	movlw	100
  5581     039C  00CF               	movwf	___tmul@multiplicand^(0+128)
  5582     039D  3000               	movlw	0
  5583     039E  00D0               	movwf	(___tmul@multiplicand+1)^(0+128)
  5584     039F  3000               	movlw	0
  5585     03A0  00D1               	movwf	(___tmul@multiplicand+2)^(0+128)
  5586     03A1  318D  2547  3183   	fcall	___tmul
  5587     03A4  084C               	movf	?___tmul^(0+128),w
  5588     03A5  00B0               	movwf	_error^(0+128)
  5589     03A6  084D               	movf	(?___tmul+1)^(0+128),w
  5590     03A7  00B1               	movwf	(_error+1)^(0+128)
  5591     03A8  084E               	movf	(?___tmul+2)^(0+128),w
  5592     03A9  00B2               	movwf	(_error+2)^(0+128)
  5593                           
  5594                           ;main.c: 169:     if(error > 150 || error < -150){
  5595     03AA  1BB2               	btfsc	(_error+2)^(0+128),7
  5596     03AB  2BB6               	goto	l2826
  5597     03AC  0832               	movf	(_error+2)^(0+128),w
  5598     03AD  1D03               	btfss	3,2
  5599     03AE  2BC1               	goto	l2828
  5600     03AF  0831               	movf	(_error+1)^(0+128),w
  5601     03B0  1D03               	btfss	3,2
  5602     03B1  2BC1               	goto	l2828
  5603     03B2  3097               	movlw	151
  5604     03B3  0230               	subwf	_error^(0+128),w
  5605     03B4  1803               	btfsc	3,0
  5606     03B5  2BC1               	goto	l2828
  5607     03B6                     l2826:
  5608     03B6  0021               	movlb	1	; select bank1
  5609     03B7  1FB2               	btfss	(_error+2)^(0+128),7
  5610     03B8  0008               	return
  5611     03B9  306A               	movlw	106
  5612     03BA  0230               	subwf	_error^(0+128),w
  5613     03BB  30FF               	movlw	255
  5614     03BC  3B31               	subwfb	(_error+1)^(0+128),w
  5615     03BD  30FF               	movlw	255
  5616     03BE  3B32               	subwfb	(_error+2)^(0+128),w
  5617     03BF  1803               	btfsc	3,0
  5618     03C0  0008               	return
  5619     03C1                     l2828:
  5620                           
  5621                           ;main.c: 170:         outpre = (((kpf*error +kdf*(error-errorp)))+outpre);
  5622     03C1  0021               	movlb	1	; select bank1
  5623     03C2  0824               	movf	_outpre^(0+128),w
  5624     03C3  00D5               	movwf	??_fluxcontrol^(0+128)
  5625     03C4  0825               	movf	(_outpre+1)^(0+128),w
  5626     03C5  00D6               	movwf	(??_fluxcontrol^(0+128)+1)
  5627     03C6  0826               	movf	(_outpre+2)^(0+128),w
  5628     03C7  00D7               	movwf	(??_fluxcontrol^(0+128)+2)
  5629     03C8  082D               	movf	_errorp^(0+128),w
  5630     03C9  00CC               	movwf	___tmul@multiplier^(0+128)
  5631     03CA  082E               	movf	(_errorp+1)^(0+128),w
  5632     03CB  00CD               	movwf	(___tmul@multiplier+1)^(0+128)
  5633     03CC  082F               	movf	(_errorp+2)^(0+128),w
  5634     03CD  00CE               	movwf	(___tmul@multiplier+2)^(0+128)
  5635     03CE  3093               	movlw	147
  5636     03CF  00CF               	movwf	___tmul@multiplicand^(0+128)
  5637     03D0  30FF               	movlw	255
  5638     03D1  00D0               	movwf	(___tmul@multiplicand+1)^(0+128)
  5639     03D2  30FF               	movlw	255
  5640     03D3  00D1               	movwf	(___tmul@multiplicand+2)^(0+128)
  5641     03D4  318D  2547  3183   	fcall	___tmul
  5642     03D7  084C               	movf	?___tmul^(0+128),w
  5643     03D8  00D8               	movwf	(??_fluxcontrol+3)^(0+128)
  5644     03D9  084D               	movf	(?___tmul+1)^(0+128),w
  5645     03DA  00D9               	movwf	((??_fluxcontrol+3)^(0+128)+1)
  5646     03DB  084E               	movf	(?___tmul+2)^(0+128),w
  5647     03DC  00DA               	movwf	((??_fluxcontrol+3)^(0+128)+2)
  5648     03DD  0830               	movf	_error^(0+128),w
  5649     03DE  00CC               	movwf	___tmul@multiplier^(0+128)
  5650     03DF  0831               	movf	(_error+1)^(0+128),w
  5651     03E0  00CD               	movwf	(___tmul@multiplier+1)^(0+128)
  5652     03E1  0832               	movf	(_error+2)^(0+128),w
  5653     03E2  00CE               	movwf	(___tmul@multiplier+2)^(0+128)
  5654     03E3  3082               	movlw	130
  5655     03E4  00CF               	movwf	___tmul@multiplicand^(0+128)
  5656     03E5  3000               	movlw	0
  5657     03E6  00D0               	movwf	(___tmul@multiplicand+1)^(0+128)
  5658     03E7  3000               	movlw	0
  5659     03E8  00D1               	movwf	(___tmul@multiplicand+2)^(0+128)
  5660     03E9  318D  2547  3183   	fcall	___tmul
  5661     03EC  084C               	movf	?___tmul^(0+128),w
  5662     03ED  07D8               	addwf	(??_fluxcontrol+3)^(0+128),f
  5663     03EE  084D               	movf	(?___tmul+1)^(0+128),w
  5664     03EF  3DD9               	addwfc	((??_fluxcontrol+3)^(0+128)+1),f
  5665     03F0  084E               	movf	(?___tmul+2)^(0+128),w
  5666     03F1  3DDA               	addwfc	((??_fluxcontrol+3)^(0+128)+2),f
  5667     03F2  0858               	movf	(??_fluxcontrol+3)^(0+128),w
  5668     03F3  07D5               	addwf	??_fluxcontrol^(0+128),f
  5669     03F4  0859               	movf	(??_fluxcontrol+4)^(0+128),w
  5670     03F5  3DD6               	addwfc	(??_fluxcontrol^(0+128)+1),f
  5671     03F6  085A               	movf	(??_fluxcontrol+5)^(0+128),w
  5672     03F7  3DD7               	addwfc	(??_fluxcontrol^(0+128)+2),f
  5673     03F8  0855               	movf	??_fluxcontrol^(0+128),w
  5674     03F9  00A4               	movwf	_outpre^(0+128)
  5675     03FA  0856               	movf	(??_fluxcontrol+1)^(0+128),w
  5676     03FB  00A5               	movwf	(_outpre+1)^(0+128)
  5677     03FC  0857               	movf	(??_fluxcontrol+2)^(0+128),w
  5678     03FD  00A6               	movwf	(_outpre+2)^(0+128)
  5679                           
  5680                           ;main.c: 171:         if (outpre > 0) output = 0;
  5681     03FE  1BA6               	btfsc	(_outpre+2)^(0+128),7
  5682     03FF  2C0E               	goto	l2834
  5683     0400  0826               	movf	(_outpre+2)^(0+128),w
  5684     0401  1D03               	btfss	3,2
  5685     0402  2C0A               	goto	l2832
  5686     0403  0825               	movf	(_outpre+1)^(0+128),w
  5687     0404  1D03               	btfss	3,2
  5688     0405  2C0A               	goto	l2832
  5689     0406  3001               	movlw	1
  5690     0407  0224               	subwf	_outpre^(0+128),w
  5691     0408  1C03               	btfss	3,0
  5692     0409  2C0E               	goto	l2834
  5693     040A                     l2832:
  5694     040A  0021               	movlb	1	; select bank1
  5695     040B  01C1               	clrf	_output^(0+128)
  5696     040C  01C2               	clrf	(_output+1)^(0+128)
  5697     040D  2C1E               	goto	l2840
  5698     040E                     l2834:
  5699     040E  0021               	movlb	1	; select bank1
  5700     040F  1FA6               	btfss	(_outpre+2)^(0+128),7
  5701     0410  2C0A               	goto	l2832
  5702     0411  30C0               	movlw	192
  5703     0412  0224               	subwf	_outpre^(0+128),w
  5704     0413  3063               	movlw	99
  5705     0414  3B25               	subwfb	(_outpre+1)^(0+128),w
  5706     0415  30FF               	movlw	255
  5707     0416  3B26               	subwfb	(_outpre+2)^(0+128),w
  5708     0417  1803               	btfsc	3,0
  5709     0418  2C0A               	goto	l2832
  5710     0419  3090               	movlw	144
  5711     041A  0021               	movlb	1	; select bank1
  5712     041B  00C1               	movwf	_output^(0+128)
  5713     041C  3001               	movlw	1
  5714     041D  00C2               	movwf	(_output^(0+128)+1)
  5715     041E                     l2840:
  5716                           
  5717                           ;main.c: 174:         if (outpre>800){
  5718     041E  1BA6               	btfsc	(_outpre+2)^(0+128),7
  5719     041F  2C30               	goto	l2844
  5720     0420  0826               	movf	(_outpre+2)^(0+128),w
  5721     0421  1D03               	btfss	3,2
  5722     0422  2C29               	goto	l2842
  5723     0423  3021               	movlw	33
  5724     0424  0224               	subwf	_outpre^(0+128),w
  5725     0425  3003               	movlw	3
  5726     0426  3B25               	subwfb	(_outpre+1)^(0+128),w
  5727     0427  1C03               	btfss	3,0
  5728     0428  2C30               	goto	l2844
  5729     0429                     l2842:
  5730                           
  5731                           ;main.c: 175:             outpre = 800;
  5732     0429  3020               	movlw	32
  5733     042A  0021               	movlb	1	; select bank1
  5734     042B  00A4               	movwf	_outpre^(0+128)
  5735     042C  3003               	movlw	3
  5736     042D  00A5               	movwf	(_outpre+1)^(0+128)
  5737     042E  3000               	movlw	0
  5738     042F  2C41               	goto	L7
  5739     0430                     l2844:	
  5740                           ;main.c: 176:         } else if (outpre < -45000){
  5741                           
  5742     0430  0021               	movlb	1	; select bank1
  5743     0431  1FA6               	btfss	(_outpre+2)^(0+128),7
  5744     0432  2C42               	goto	l712
  5745     0433  3038               	movlw	56
  5746     0434  0224               	subwf	_outpre^(0+128),w
  5747     0435  3050               	movlw	80
  5748     0436  3B25               	subwfb	(_outpre+1)^(0+128),w
  5749     0437  30FF               	movlw	255
  5750     0438  3B26               	subwfb	(_outpre+2)^(0+128),w
  5751     0439  1803               	btfsc	3,0
  5752     043A  2C42               	goto	l712
  5753                           
  5754                           ;main.c: 177:             outpre = -45000;
  5755     043B  3038               	movlw	56
  5756     043C  0021               	movlb	1	; select bank1
  5757     043D  00A4               	movwf	_outpre^(0+128)
  5758     043E  3050               	movlw	80
  5759     043F  00A5               	movwf	(_outpre+1)^(0+128)
  5760     0440  30FF               	movlw	255
  5761     0441                     L7:
  5762     0441  00A6               	movwf	(_outpre+2)^(0+128)
  5763     0442                     l712:
  5764                           
  5765                           ;main.c: 179:         errorp = error;
  5766     0442  0021               	movlb	1	; select bank1
  5767     0443  0830               	movf	_error^(0+128),w
  5768     0444  00AD               	movwf	_errorp^(0+128)
  5769     0445  0831               	movf	(_error+1)^(0+128),w
  5770     0446  00AE               	movwf	(_errorp+1)^(0+128)
  5771     0447  0832               	movf	(_error+2)^(0+128),w
  5772     0448  00AF               	movwf	(_errorp+2)^(0+128)
  5773     0449  0008               	return
  5774     044A                     __end_of_fluxcontrol:
  5775                           
  5776                           	psect	text12
  5777     0D47                     __ptext12:	
  5778 ;; *************** function ___tmul *****************
  5779 ;; Defined at:
  5780 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul24.c"
  5781 ;; Parameters:    Size  Location     Type
  5782 ;;  multiplier      3    0[BANK1 ] unsigned um
  5783 ;;  multiplicand    3    3[BANK1 ] unsigned um
  5784 ;; Auto vars:     Size  Location     Type
  5785 ;;  product         3    6[BANK1 ] unsigned um
  5786 ;; Return value:  Size  Location     Type
  5787 ;;                  3    0[BANK1 ] unsigned um
  5788 ;; Registers used:
  5789 ;;		wreg, status,2, status,0
  5790 ;; Tracked objects:
  5791 ;;		On entry : 1F/1
  5792 ;;		On exit  : 1F/1
  5793 ;;		Unchanged: 0/0
  5794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5795 ;;      Params:         0       0       6       0       0       0
  5796 ;;      Locals:         0       0       3       0       0       0
  5797 ;;      Temps:          0       0       0       0       0       0
  5798 ;;      Totals:         0       0       9       0       0       0
  5799 ;;Total ram usage:        9 bytes
  5800 ;; Hardware stack levels used: 1
  5801 ;; Hardware stack levels required when called: 5
  5802 ;; This function calls:
  5803 ;;		Nothing
  5804 ;; This function is called by:
  5805 ;;		_fluxcontrol
  5806 ;;		_pwmcontrol
  5807 ;; This function uses a non-reentrant model
  5808 ;;
  5809                           
  5810     0D47                     ___tmul:	
  5811                           ;psect for function ___tmul
  5812                           
  5813                           
  5814                           ;incstack = 0
  5815                           ; Regs used in ___tmul: [wreg+status,2+status,0]
  5816     0D47  3000               	movlw	0
  5817     0D48  00D2               	movwf	___tmul@product^(0+128)
  5818     0D49  3000               	movlw	0
  5819     0D4A  00D3               	movwf	(___tmul@product+1)^(0+128)
  5820     0D4B  3000               	movlw	0
  5821     0D4C  00D4               	movwf	(___tmul@product+2)^(0+128)
  5822     0D4D                     l2336:
  5823     0D4D  1C4C               	btfss	___tmul@multiplier^(0+128),0
  5824     0D4E  2D55               	goto	l2340
  5825     0D4F  084F               	movf	___tmul@multiplicand^(0+128),w
  5826     0D50  07D2               	addwf	___tmul@product^(0+128),f
  5827     0D51  0850               	movf	(___tmul@multiplicand+1)^(0+128),w
  5828     0D52  3DD3               	addwfc	(___tmul@product+1)^(0+128),f
  5829     0D53  0851               	movf	(___tmul@multiplicand+2)^(0+128),w
  5830     0D54  3DD4               	addwfc	(___tmul@product+2)^(0+128),f
  5831     0D55                     l2340:
  5832     0D55  3001               	movlw	1
  5833     0D56                     u1615:
  5834     0D56  35CF               	lslf	___tmul@multiplicand^(0+128),f
  5835     0D57  0DD0               	rlf	(___tmul@multiplicand+1)^(0+128),f
  5836     0D58  0DD1               	rlf	(___tmul@multiplicand+2)^(0+128),f
  5837     0D59  0B89               	decfsz	9,f
  5838     0D5A  2D56               	goto	u1615
  5839     0D5B  3001               	movlw	1
  5840     0D5C                     u1625:
  5841     0D5C  36CE               	lsrf	(___tmul@multiplier+2)^(0+128),f
  5842     0D5D  0CCD               	rrf	(___tmul@multiplier+1)^(0+128),f
  5843     0D5E  0CCC               	rrf	___tmul@multiplier^(0+128),f
  5844     0D5F  0B89               	decfsz	9,f
  5845     0D60  2D5C               	goto	u1625
  5846     0D61  084E               	movf	(___tmul@multiplier+2)^(0+128),w
  5847     0D62  044D               	iorwf	(___tmul@multiplier+1)^(0+128),w
  5848     0D63  044C               	iorwf	___tmul@multiplier^(0+128),w
  5849     0D64  1D03               	skipz
  5850     0D65  2D4D               	goto	l2336
  5851     0D66  0852               	movf	___tmul@product^(0+128),w
  5852     0D67  00CC               	movwf	?___tmul^(0+128)
  5853     0D68  0853               	movf	(___tmul@product+1)^(0+128),w
  5854     0D69  00CD               	movwf	(?___tmul+1)^(0+128)
  5855     0D6A  0854               	movf	(___tmul@product+2)^(0+128),w
  5856     0D6B  00CE               	movwf	(?___tmul+2)^(0+128)
  5857     0D6C  0008               	return
  5858     0D6D                     __end_of___tmul:
  5859                           
  5860                           	psect	text13
  5861     0B79                     __ptext13:	
  5862 ;; *************** function _TMR4_StartTimer *****************
  5863 ;; Defined at:
  5864 ;;		line 79 in file "mcc_generated_files/tmr4.c"
  5865 ;; Parameters:    Size  Location     Type
  5866 ;;		None
  5867 ;; Auto vars:     Size  Location     Type
  5868 ;;		None
  5869 ;; Return value:  Size  Location     Type
  5870 ;;                  1    wreg      void 
  5871 ;; Registers used:
  5872 ;;		None
  5873 ;; Tracked objects:
  5874 ;;		On entry : 0/1
  5875 ;;		On exit  : 1F/8
  5876 ;;		Unchanged: 0/0
  5877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5878 ;;      Params:         0       0       0       0       0       0
  5879 ;;      Locals:         0       0       0       0       0       0
  5880 ;;      Temps:          0       0       0       0       0       0
  5881 ;;      Totals:         0       0       0       0       0       0
  5882 ;;Total ram usage:        0 bytes
  5883 ;; Hardware stack levels used: 1
  5884 ;; Hardware stack levels required when called: 5
  5885 ;; This function calls:
  5886 ;;		Nothing
  5887 ;; This function is called by:
  5888 ;;		_controlchoose
  5889 ;; This function uses a non-reentrant model
  5890 ;;
  5891                           
  5892     0B79                     _TMR4_StartTimer:	
  5893                           ;psect for function _TMR4_StartTimer
  5894                           
  5895                           
  5896                           ;mcc_generated_files/tmr4.c: 82:     T4CONbits.TMR4ON = 1;
  5897                           
  5898                           ;incstack = 0
  5899                           ; Regs used in _TMR4_StartTimer: []
  5900     0B79  0028               	movlb	8	; select bank8
  5901     0B7A  1517               	bsf	23,2	;volatile
  5902     0B7B  0008               	return
  5903     0B7C                     __end_of_TMR4_StartTimer:
  5904                           
  5905                           	psect	text14
  5906     0516                     __ptext14:	
  5907 ;; *************** function _analisa_Rx *****************
  5908 ;; Defined at:
  5909 ;;		line 213 in file "main.c"
  5910 ;; Parameters:    Size  Location     Type
  5911 ;;		None
  5912 ;; Auto vars:     Size  Location     Type
  5913 ;;		None
  5914 ;; Return value:  Size  Location     Type
  5915 ;;                  1    wreg      void 
  5916 ;; Registers used:
  5917 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5918 ;; Tracked objects:
  5919 ;;		On entry : 1F/1
  5920 ;;		On exit  : 1F/1
  5921 ;;		Unchanged: 0/0
  5922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5923 ;;      Params:         0       0       0       0       0       0
  5924 ;;      Locals:         0       0       0       0       0       0
  5925 ;;      Temps:          0       0       0       0       0       0
  5926 ;;      Totals:         0       0       0       0       0       0
  5927 ;;Total ram usage:        0 bytes
  5928 ;; Hardware stack levels used: 1
  5929 ;; Hardware stack levels required when called: 6
  5930 ;; This function calls:
  5931 ;;		_EPWM1_LoadDutyValue
  5932 ;; This function is called by:
  5933 ;;		_main
  5934 ;; This function uses a non-reentrant model
  5935 ;;
  5936                           
  5937     0516                     _analisa_Rx:	
  5938                           ;psect for function _analisa_Rx
  5939                           
  5940                           
  5941                           ;main.c: 214:     switch(bufferRx[0]){
  5942                           
  5943                           ;incstack = 0
  5944                           ; Regs used in _analisa_Rx: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5945     0516  2DD2               	goto	l3032
  5946     0517                     l2976:
  5947                           
  5948                           ;main.c: 216:             if(countRx==7){
  5949     0517  3007               	movlw	7
  5950     0518  0021               	movlb	1	; select bank1
  5951     0519  0649               	xorwf	_countRx^(0+128),w
  5952     051A  1D03               	btfss	3,2
  5953     051B  2D49               	goto	l2992
  5954                           
  5955                           ;main.c: 217:                 controlchoice = bufferRx[0];
  5956     051C  0020               	movlb	0	; select bank0
  5957     051D  0853               	movf	_bufferRx,w
  5958     051E  0021               	movlb	1	; select bank1
  5959     051F  00CA               	movwf	_controlchoice^(0+128)
  5960                           
  5961                           ;main.c: 218:                 vRx.vH = bufferRx[3];
  5962     0520  0020               	movlb	0	; select bank0
  5963     0521  0856               	movf	_bufferRx+3,w
  5964     0522  0021               	movlb	1	; select bank1
  5965     0523  00BE               	movwf	(_vRx^(0+128)+1)
  5966                           
  5967                           ;main.c: 219:                 vRx.vL = bufferRx[4];
  5968     0524  0020               	movlb	0	; select bank0
  5969     0525  0857               	movf	_bufferRx+4,w
  5970     0526  0021               	movlb	1	; select bank1
  5971     0527  00BD               	movwf	_vRx^(0+128)
  5972                           
  5973                           ;main.c: 220:                 sp_position = vRx.v;
  5974     0528  083E               	movf	(_vRx+1)^(0+128),w
  5975     0529  00B8               	movwf	(_sp_position+1)^(0+128)
  5976     052A  083D               	movf	_vRx^(0+128),w
  5977     052B  00B7               	movwf	_sp_position^(0+128)
  5978                           
  5979                           ;main.c: 221:                 if(sp_position > 420 ) sp_position = 420;
  5980     052C  3001               	movlw	1
  5981     052D  0238               	subwf	(_sp_position+1)^(0+128),w
  5982     052E  30A5               	movlw	165
  5983     052F  1903               	skipnz
  5984     0530  0237               	subwf	_sp_position^(0+128),w
  5985     0531  1C03               	skipc
  5986     0532  2D37               	goto	l2984
  5987     0533  30A4               	movlw	164
  5988     0534  00B7               	movwf	_sp_position^(0+128)
  5989     0535  3001               	movlw	1
  5990     0536  00B8               	movwf	(_sp_position^(0+128)+1)
  5991     0537                     l2984:
  5992                           
  5993                           ;main.c: 223:                 vRx.vH = bufferRx[5];
  5994     0537  0020               	movlb	0	; select bank0
  5995     0538  0858               	movf	_bufferRx+5,w
  5996     0539  0021               	movlb	1	; select bank1
  5997     053A  00BE               	movwf	(_vRx^(0+128)+1)
  5998                           
  5999                           ;main.c: 224:                 vRx.vL = bufferRx[6];
  6000     053B  0020               	movlb	0	; select bank0
  6001     053C  0859               	movf	_bufferRx+6,w
  6002     053D  0021               	movlb	1	; select bank1
  6003     053E  00BD               	movwf	_vRx^(0+128)
  6004                           
  6005                           ;main.c: 225:                 dc = vRx.v;
  6006     053F  083E               	movf	(_vRx+1)^(0+128),w
  6007     0540  00BC               	movwf	(_dc+1)^(0+128)
  6008     0541  083D               	movf	_vRx^(0+128),w
  6009     0542  00BB               	movwf	_dc^(0+128)
  6010                           
  6011                           ;main.c: 226:                 EPWM1_LoadDutyValue(dc);
  6012     0543  083C               	movf	(_dc+1)^(0+128),w
  6013     0544  00CD               	movwf	(EPWM1_LoadDutyValue@dutyValue+1)^(0+128)
  6014     0545  083B               	movf	_dc^(0+128),w
  6015     0546  00CC               	movwf	EPWM1_LoadDutyValue@dutyValue^(0+128)
  6016     0547  318C  24E9         	fcall	_EPWM1_LoadDutyValue
  6017     0549                     l2992:
  6018                           
  6019                           ;main.c: 228:             countRx = 0;
  6020     0549  0021               	movlb	1	; select bank1
  6021     054A  01C9               	clrf	_countRx^(0+128)
  6022                           
  6023                           ;main.c: 229:             break;
  6024     054B  0008               	return
  6025     054C                     l2994:
  6026                           
  6027                           ;main.c: 231:             if(countRx==7){
  6028     054C  3007               	movlw	7
  6029     054D  0021               	movlb	1	; select bank1
  6030     054E  0649               	xorwf	_countRx^(0+128),w
  6031     054F  1D03               	btfss	3,2
  6032     0550  2D49               	goto	l2992
  6033                           
  6034                           ;main.c: 232:                 controlchoice = bufferRx[0];
  6035     0551  0020               	movlb	0	; select bank0
  6036     0552  0853               	movf	_bufferRx,w
  6037     0553  0021               	movlb	1	; select bank1
  6038     0554  00CA               	movwf	_controlchoice^(0+128)
  6039                           
  6040                           ;main.c: 233:                 vRx.vH = bufferRx[1];
  6041     0555  0020               	movlb	0	; select bank0
  6042     0556  0854               	movf	_bufferRx+1,w
  6043     0557  0021               	movlb	1	; select bank1
  6044     0558  00BE               	movwf	(_vRx^(0+128)+1)
  6045                           
  6046                           ;main.c: 234:                 vRx.vL = bufferRx[2];
  6047     0559  0020               	movlb	0	; select bank0
  6048     055A  0855               	movf	_bufferRx+2,w
  6049     055B  0021               	movlb	1	; select bank1
  6050     055C  00BD               	movwf	_vRx^(0+128)
  6051                           
  6052                           ;main.c: 235:                 sp_height = vRx.v;
  6053     055D  083E               	movf	(_vRx+1)^(0+128),w
  6054     055E  0020               	movlb	0	; select bank0
  6055     055F  00E4               	movwf	_sp_height+1
  6056     0560  0021               	movlb	1	; select bank1
  6057     0561  083D               	movf	_vRx^(0+128),w
  6058     0562  0020               	movlb	0	; select bank0
  6059     0563  00E3               	movwf	_sp_height
  6060                           
  6061                           ;main.c: 236:                 ballset = vRx.v ;
  6062     0564  0021               	movlb	1	; select bank1
  6063     0565  083D               	movf	_vRx^(0+128),w
  6064     0566  0020               	movlb	0	; select bank0
  6065     0567  00DE               	movwf	_ballset
  6066     0568  0021               	movlb	1	; select bank1
  6067     0569  083E               	movf	(_vRx+1)^(0+128),w
  6068     056A  0020               	movlb	0	; select bank0
  6069     056B  00DF               	movwf	_ballset+1
  6070     056C  01E0               	clrf	_ballset+2
  6071                           
  6072                           ;main.c: 237:                 vRx.vH = bufferRx[3];
  6073     056D  0856               	movf	_bufferRx+3,w
  6074     056E  0021               	movlb	1	; select bank1
  6075     056F  00BE               	movwf	(_vRx^(0+128)+1)
  6076                           
  6077                           ;main.c: 238:                 vRx.vL = bufferRx[4];
  6078     0570  0020               	movlb	0	; select bank0
  6079     0571  0857               	movf	_bufferRx+4,w
  6080     0572  0021               	movlb	1	; select bank1
  6081     0573  00BD               	movwf	_vRx^(0+128)
  6082                           
  6083                           ;main.c: 239:                 sp_position = vRx.v;
  6084     0574  083E               	movf	(_vRx+1)^(0+128),w
  6085     0575  00B8               	movwf	(_sp_position+1)^(0+128)
  6086     0576  083D               	movf	_vRx^(0+128),w
  6087     0577  00B7               	movwf	_sp_position^(0+128)
  6088                           
  6089                           ;main.c: 240:                 if(sp_position > 420 ) sp_position = 420;
  6090     0578  3001               	movlw	1
  6091     0579  0238               	subwf	(_sp_position+1)^(0+128),w
  6092     057A  30A5               	movlw	165
  6093     057B  1903               	skipnz
  6094     057C  0237               	subwf	_sp_position^(0+128),w
  6095     057D  1C03               	skipc
  6096     057E  2D83               	goto	l3002
  6097     057F  30A4               	movlw	164
  6098     0580  00B7               	movwf	_sp_position^(0+128)
  6099     0581  3001               	movlw	1
  6100     0582  00B8               	movwf	(_sp_position^(0+128)+1)
  6101     0583                     l3002:
  6102                           
  6103                           ;main.c: 242:                 outputsum = 0;
  6104     0583  3000               	movlw	0
  6105     0584  0021               	movlb	1	; select bank1
  6106     0585  00A7               	movwf	_outputsum^(0+128)
  6107     0586  3000               	movlw	0
  6108     0587  00A8               	movwf	(_outputsum+1)^(0+128)
  6109     0588  3000               	movlw	0
  6110     0589  00A9               	movwf	(_outputsum+2)^(0+128)
  6111                           
  6112                           ;main.c: 243:                 errorp=0;
  6113     058A  3000               	movlw	0
  6114     058B  00AD               	movwf	_errorp^(0+128)
  6115     058C  3000               	movlw	0
  6116     058D  00AE               	movwf	(_errorp+1)^(0+128)
  6117     058E  3000               	movlw	0
  6118     058F  00AF               	movwf	(_errorp+2)^(0+128)
  6119                           
  6120                           ;main.c: 244:                 error =0;
  6121     0590  3000               	movlw	0
  6122     0591  00B0               	movwf	_error^(0+128)
  6123     0592  3000               	movlw	0
  6124     0593  00B1               	movwf	(_error+1)^(0+128)
  6125     0594  3000               	movlw	0
  6126     0595  00B2               	movwf	(_error+2)^(0+128)
  6127     0596  2D49               	goto	l2992
  6128     0597                     l3010:
  6129                           
  6130                           ;main.c: 249:             if(countRx==7){
  6131     0597  3007               	movlw	7
  6132     0598  0021               	movlb	1	; select bank1
  6133     0599  0649               	xorwf	_countRx^(0+128),w
  6134     059A  1D03               	btfss	3,2
  6135     059B  2D49               	goto	l2992
  6136                           
  6137                           ;main.c: 250:                 controlchoice = bufferRx[0];
  6138     059C  0020               	movlb	0	; select bank0
  6139     059D  0853               	movf	_bufferRx,w
  6140     059E  0021               	movlb	1	; select bank1
  6141     059F  00CA               	movwf	_controlchoice^(0+128)
  6142                           
  6143                           ;main.c: 251:                 vRx.vH = bufferRx[1];
  6144     05A0  0020               	movlb	0	; select bank0
  6145     05A1  0854               	movf	_bufferRx+1,w
  6146     05A2  0021               	movlb	1	; select bank1
  6147     05A3  00BE               	movwf	(_vRx^(0+128)+1)
  6148                           
  6149                           ;main.c: 252:                 vRx.vL = bufferRx[2];
  6150     05A4  0020               	movlb	0	; select bank0
  6151     05A5  0855               	movf	_bufferRx+2,w
  6152     05A6  0021               	movlb	1	; select bank1
  6153     05A7  00BD               	movwf	_vRx^(0+128)
  6154                           
  6155                           ;main.c: 253:                 sp_height = vRx.v;
  6156     05A8  083E               	movf	(_vRx+1)^(0+128),w
  6157     05A9  0020               	movlb	0	; select bank0
  6158     05AA  00E4               	movwf	_sp_height+1
  6159     05AB  0021               	movlb	1	; select bank1
  6160     05AC  083D               	movf	_vRx^(0+128),w
  6161     05AD  0020               	movlb	0	; select bank0
  6162     05AE  00E3               	movwf	_sp_height
  6163                           
  6164                           ;main.c: 254:                 ballset = vRx.v;
  6165     05AF  0021               	movlb	1	; select bank1
  6166     05B0  083D               	movf	_vRx^(0+128),w
  6167     05B1  0020               	movlb	0	; select bank0
  6168     05B2  00DE               	movwf	_ballset
  6169     05B3  0021               	movlb	1	; select bank1
  6170     05B4  083E               	movf	(_vRx+1)^(0+128),w
  6171     05B5  0020               	movlb	0	; select bank0
  6172     05B6  00DF               	movwf	_ballset+1
  6173     05B7  01E0               	clrf	_ballset+2
  6174                           
  6175                           ;main.c: 255:                 vRx.vH = bufferRx[5];
  6176     05B8  0858               	movf	_bufferRx+5,w
  6177     05B9  0021               	movlb	1	; select bank1
  6178     05BA  00BE               	movwf	(_vRx^(0+128)+1)
  6179                           
  6180                           ;main.c: 256:                 vRx.vL = bufferRx[6];
  6181     05BB  0020               	movlb	0	; select bank0
  6182     05BC  0859               	movf	_bufferRx+6,w
  6183     05BD  0021               	movlb	1	; select bank1
  6184     05BE  00BD               	movwf	_vRx^(0+128)
  6185                           
  6186                           ;main.c: 257:                 dc = vRx.v;
  6187     05BF  083E               	movf	(_vRx+1)^(0+128),w
  6188     05C0  00BC               	movwf	(_dc+1)^(0+128)
  6189     05C1  083D               	movf	_vRx^(0+128),w
  6190     05C2  00BB               	movwf	_dc^(0+128)
  6191                           
  6192                           ;main.c: 258:                 EPWM1_LoadDutyValue(dc);
  6193     05C3  083C               	movf	(_dc+1)^(0+128),w
  6194     05C4  00CD               	movwf	(EPWM1_LoadDutyValue@dutyValue+1)^(0+128)
  6195     05C5  083B               	movf	_dc^(0+128),w
  6196     05C6  00CC               	movwf	EPWM1_LoadDutyValue@dutyValue^(0+128)
  6197     05C7  318C  24E9  3185   	fcall	_EPWM1_LoadDutyValue
  6198     05CA  2D83               	goto	l3002
  6199     05CB                     l3024:
  6200                           
  6201                           ;main.c: 266:             if(countRx==7){
  6202     05CB  3007               	movlw	7
  6203     05CC  0021               	movlb	1	; select bank1
  6204     05CD  0649               	xorwf	_countRx^(0+128),w
  6205     05CE  1D03               	btfss	3,2
  6206     05CF  2D49               	goto	l2992
  6207     05D0  0001               	reset	;# 
  6208     05D1  2D49               	goto	l2992
  6209     05D2                     l3032:
  6210     05D2  0020               	movlb	0	; select bank0
  6211     05D3  0853               	movf	_bufferRx,w
  6212                           
  6213                           ; Switch size 1, requested type "simple"
  6214                           ; Number of cases is 4, Range of values is 0 to 3
  6215                           ; switch strategies available:
  6216                           ; Name         Instructions Cycles
  6217                           ; simple_byte           13     7 (average)
  6218                           ; direct_byte           14     6 (fixed)
  6219                           ; jumptable            260     6 (fixed)
  6220                           ;	Chosen strategy is simple_byte
  6221     05D4  3A00               	xorlw	0	; case 0
  6222     05D5  1903               	skipnz
  6223     05D6  2D17               	goto	l2976
  6224     05D7  3A01               	xorlw	1	; case 1
  6225     05D8  1903               	skipnz
  6226     05D9  2D4C               	goto	l2994
  6227     05DA  3A03               	xorlw	3	; case 2
  6228     05DB  1903               	skipnz
  6229     05DC  2D97               	goto	l3010
  6230     05DD  3A01               	xorlw	1	; case 3
  6231     05DE  1903               	skipnz
  6232     05DF  2DCB               	goto	l3024
  6233     05E0  2D49               	goto	l2992
  6234     05E1  0008               	return
  6235     05E2                     __end_of_analisa_Rx:
  6236                           
  6237                           	psect	text15
  6238     0CE9                     __ptext15:	
  6239 ;; *************** function _EPWM1_LoadDutyValue *****************
  6240 ;; Defined at:
  6241 ;;		line 90 in file "mcc_generated_files/epwm1.c"
  6242 ;; Parameters:    Size  Location     Type
  6243 ;;  dutyValue       2    0[BANK1 ] unsigned short 
  6244 ;; Auto vars:     Size  Location     Type
  6245 ;;		None
  6246 ;; Return value:  Size  Location     Type
  6247 ;;                  1    wreg      void 
  6248 ;; Registers used:
  6249 ;;		wreg, status,2, status,0
  6250 ;; Tracked objects:
  6251 ;;		On entry : 1F/1
  6252 ;;		On exit  : 1F/5
  6253 ;;		Unchanged: 0/0
  6254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6255 ;;      Params:         0       0       2       0       0       0
  6256 ;;      Locals:         0       0       0       0       0       0
  6257 ;;      Temps:          0       0       2       0       0       0
  6258 ;;      Totals:         0       0       4       0       0       0
  6259 ;;Total ram usage:        4 bytes
  6260 ;; Hardware stack levels used: 1
  6261 ;; Hardware stack levels required when called: 5
  6262 ;; This function calls:
  6263 ;;		Nothing
  6264 ;; This function is called by:
  6265 ;;		_pwmcontrol
  6266 ;;		_analisa_Rx
  6267 ;; This function uses a non-reentrant model
  6268 ;;
  6269                           
  6270     0CE9                     _EPWM1_LoadDutyValue:	
  6271                           ;psect for function _EPWM1_LoadDutyValue
  6272                           
  6273                           
  6274                           ;mcc_generated_files/epwm1.c: 90: void EPWM1_LoadDutyValue(uint16_t dutyValue);mcc_gener
      +                          ated_files/epwm1.c: 91: {;mcc_generated_files/epwm1.c: 93:     CCPR1L = ((dutyValue & 0x
      +                          03FC)>>2);
  6275                           
  6276                           ;incstack = 0
  6277                           ; Regs used in _EPWM1_LoadDutyValue: [wreg+status,2+status,0]
  6278     0CE9  084D               	movf	(EPWM1_LoadDutyValue@dutyValue+1)^(0+128),w
  6279     0CEA  00CF               	movwf	(??_EPWM1_LoadDutyValue^(0+128)+1)
  6280     0CEB  084C               	movf	EPWM1_LoadDutyValue@dutyValue^(0+128),w
  6281     0CEC  00CE               	movwf	??_EPWM1_LoadDutyValue^(0+128)
  6282     0CED  36CF               	lsrf	(??_EPWM1_LoadDutyValue^(0+128)+1),f
  6283     0CEE  0CCE               	rrf	??_EPWM1_LoadDutyValue^(0+128),f
  6284     0CEF  36CF               	lsrf	(??_EPWM1_LoadDutyValue^(0+128)+1),f
  6285     0CF0  0CCE               	rrf	??_EPWM1_LoadDutyValue^(0+128),f
  6286     0CF1  084E               	movf	??_EPWM1_LoadDutyValue^(0+128),w
  6287     0CF2  0025               	movlb	5	; select bank5
  6288     0CF3  0091               	movwf	17	;volatile
  6289                           
  6290                           ;mcc_generated_files/epwm1.c: 96:     CCP1CON = ((uint8_t)(CCP1CON & 0xCF) | ((dutyValue
      +                           & 0x0003)<<4));
  6291     0CF4  0021               	movlb	1	; select bank1
  6292     0CF5  084C               	movf	EPWM1_LoadDutyValue@dutyValue^(0+128),w
  6293     0CF6  3903               	andlw	3
  6294     0CF7  00CE               	movwf	??_EPWM1_LoadDutyValue^(0+128)
  6295     0CF8  3004               	movlw	4
  6296     0CF9                     u1575:
  6297     0CF9  35CE               	lslf	??_EPWM1_LoadDutyValue^(0+128),f
  6298     0CFA  0B89               	decfsz	9,f
  6299     0CFB  2CF9               	goto	u1575
  6300     0CFC  0025               	movlb	5	; select bank5
  6301     0CFD  0813               	movf	19,w	;volatile
  6302     0CFE  39CF               	andlw	207
  6303     0CFF  0021               	movlb	1	; select bank1
  6304     0D00  044E               	iorwf	??_EPWM1_LoadDutyValue^(0+128),w
  6305     0D01  0025               	movlb	5	; select bank5
  6306     0D02  0093               	movwf	19	;volatile
  6307     0D03  0008               	return
  6308     0D04                     __end_of_EPWM1_LoadDutyValue:
  6309                           
  6310                           	psect	text16
  6311     0BA4                     __ptext16:	
  6312 ;; *************** function _TMR6_WriteTimer *****************
  6313 ;; Defined at:
  6314 ;;		line 100 in file "mcc_generated_files/tmr6.c"
  6315 ;; Parameters:    Size  Location     Type
  6316 ;;  timerVal        1    wreg     unsigned char 
  6317 ;; Auto vars:     Size  Location     Type
  6318 ;;  timerVal        1    0[BANK1 ] unsigned char 
  6319 ;; Return value:  Size  Location     Type
  6320 ;;                  1    wreg      void 
  6321 ;; Registers used:
  6322 ;;		wreg
  6323 ;; Tracked objects:
  6324 ;;		On entry : 16/1
  6325 ;;		On exit  : 1F/8
  6326 ;;		Unchanged: 0/0
  6327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6328 ;;      Params:         0       0       0       0       0       0
  6329 ;;      Locals:         0       0       1       0       0       0
  6330 ;;      Temps:          0       0       0       0       0       0
  6331 ;;      Totals:         0       0       1       0       0       0
  6332 ;;Total ram usage:        1 bytes
  6333 ;; Hardware stack levels used: 1
  6334 ;; Hardware stack levels required when called: 5
  6335 ;; This function calls:
  6336 ;;		Nothing
  6337 ;; This function is called by:
  6338 ;;		_main
  6339 ;; This function uses a non-reentrant model
  6340 ;;
  6341                           
  6342     0BA4                     _TMR6_WriteTimer:	
  6343                           ;psect for function _TMR6_WriteTimer
  6344                           
  6345                           
  6346                           ;incstack = 0
  6347                           ; Regs used in _TMR6_WriteTimer: [wreg]
  6348                           ;TMR6_WriteTimer@timerVal stored from wreg
  6349     0BA4  0021               	movlb	1	; select bank1
  6350     0BA5  00CC               	movwf	TMR6_WriteTimer@timerVal^(0+128)
  6351                           
  6352                           ;mcc_generated_files/tmr6.c: 100: void TMR6_WriteTimer(uint8_t timerVal);mcc_generated_f
      +                          iles/tmr6.c: 101: {;mcc_generated_files/tmr6.c: 103:     TMR6 = timerVal;
  6353     0BA6  084C               	movf	TMR6_WriteTimer@timerVal^(0+128),w
  6354     0BA7  0028               	movlb	8	; select bank8
  6355     0BA8  009C               	movwf	28	;volatile
  6356     0BA9  0008               	return
  6357     0BAA                     __end_of_TMR6_WriteTimer:
  6358                           
  6359                           	psect	text17
  6360     0B9E                     __ptext17:	
  6361 ;; *************** function _TMR6_LoadPeriodRegister *****************
  6362 ;; Defined at:
  6363 ;;		line 106 in file "mcc_generated_files/tmr6.c"
  6364 ;; Parameters:    Size  Location     Type
  6365 ;;  periodVal       1    wreg     unsigned char 
  6366 ;; Auto vars:     Size  Location     Type
  6367 ;;  periodVal       1    0[BANK1 ] unsigned char 
  6368 ;; Return value:  Size  Location     Type
  6369 ;;                  1    wreg      void 
  6370 ;; Registers used:
  6371 ;;		wreg
  6372 ;; Tracked objects:
  6373 ;;		On entry : 1E/0
  6374 ;;		On exit  : 1F/8
  6375 ;;		Unchanged: 0/0
  6376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6377 ;;      Params:         0       0       0       0       0       0
  6378 ;;      Locals:         0       0       1       0       0       0
  6379 ;;      Temps:          0       0       0       0       0       0
  6380 ;;      Totals:         0       0       1       0       0       0
  6381 ;;Total ram usage:        1 bytes
  6382 ;; Hardware stack levels used: 1
  6383 ;; Hardware stack levels required when called: 5
  6384 ;; This function calls:
  6385 ;;		Nothing
  6386 ;; This function is called by:
  6387 ;;		_main
  6388 ;; This function uses a non-reentrant model
  6389 ;;
  6390                           
  6391     0B9E                     _TMR6_LoadPeriodRegister:	
  6392                           ;psect for function _TMR6_LoadPeriodRegister
  6393                           
  6394                           
  6395                           ;incstack = 0
  6396                           ; Regs used in _TMR6_LoadPeriodRegister: [wreg]
  6397                           ;TMR6_LoadPeriodRegister@periodVal stored from wreg
  6398     0B9E  0021               	movlb	1	; select bank1
  6399     0B9F  00CC               	movwf	TMR6_LoadPeriodRegister@periodVal^(0+128)
  6400                           
  6401                           ;mcc_generated_files/tmr6.c: 106: void TMR6_LoadPeriodRegister(uint8_t periodVal);mcc_ge
      +                          nerated_files/tmr6.c: 107: {;mcc_generated_files/tmr6.c: 108:    PR6 = periodVal;
  6402     0BA0  084C               	movf	TMR6_LoadPeriodRegister@periodVal^(0+128),w
  6403     0BA1  0028               	movlb	8	; select bank8
  6404     0BA2  009D               	movwf	29	;volatile
  6405     0BA3  0008               	return
  6406     0BA4                     __end_of_TMR6_LoadPeriodRegister:
  6407                           
  6408                           	psect	text18
  6409     0B76                     __ptext18:	
  6410 ;; *************** function _TMR4_StopTimer *****************
  6411 ;; Defined at:
  6412 ;;		line 85 in file "mcc_generated_files/tmr4.c"
  6413 ;; Parameters:    Size  Location     Type
  6414 ;;		None
  6415 ;; Auto vars:     Size  Location     Type
  6416 ;;		None
  6417 ;; Return value:  Size  Location     Type
  6418 ;;                  1    wreg      void 
  6419 ;; Registers used:
  6420 ;;		None
  6421 ;; Tracked objects:
  6422 ;;		On entry : 1F/0
  6423 ;;		On exit  : 1F/8
  6424 ;;		Unchanged: 0/0
  6425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6426 ;;      Params:         0       0       0       0       0       0
  6427 ;;      Locals:         0       0       0       0       0       0
  6428 ;;      Temps:          0       0       0       0       0       0
  6429 ;;      Totals:         0       0       0       0       0       0
  6430 ;;Total ram usage:        0 bytes
  6431 ;; Hardware stack levels used: 1
  6432 ;; Hardware stack levels required when called: 5
  6433 ;; This function calls:
  6434 ;;		Nothing
  6435 ;; This function is called by:
  6436 ;;		_main
  6437 ;; This function uses a non-reentrant model
  6438 ;;
  6439                           
  6440     0B76                     _TMR4_StopTimer:	
  6441                           ;psect for function _TMR4_StopTimer
  6442                           
  6443                           
  6444                           ;mcc_generated_files/tmr4.c: 88:     T4CONbits.TMR4ON = 0;
  6445                           
  6446                           ;incstack = 0
  6447                           ; Regs used in _TMR4_StopTimer: []
  6448     0B76  0028               	movlb	8	; select bank8
  6449     0B77  1117               	bcf	23,2	;volatile
  6450     0B78  0008               	return
  6451     0B79                     __end_of_TMR4_StopTimer:
  6452                           
  6453                           	psect	text19
  6454     0B98                     __ptext19:	
  6455 ;; *************** function _TMR0_ReadTimer *****************
  6456 ;; Defined at:
  6457 ;;		line 80 in file "mcc_generated_files/tmr0.c"
  6458 ;; Parameters:    Size  Location     Type
  6459 ;;		None
  6460 ;; Auto vars:     Size  Location     Type
  6461 ;;  readVal         1    0[BANK1 ] unsigned char 
  6462 ;; Return value:  Size  Location     Type
  6463 ;;                  1    wreg      unsigned char 
  6464 ;; Registers used:
  6465 ;;		wreg
  6466 ;; Tracked objects:
  6467 ;;		On entry : 1D/0
  6468 ;;		On exit  : 1F/1
  6469 ;;		Unchanged: 0/0
  6470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6471 ;;      Params:         0       0       0       0       0       0
  6472 ;;      Locals:         0       0       1       0       0       0
  6473 ;;      Temps:          0       0       0       0       0       0
  6474 ;;      Totals:         0       0       1       0       0       0
  6475 ;;Total ram usage:        1 bytes
  6476 ;; Hardware stack levels used: 1
  6477 ;; Hardware stack levels required when called: 5
  6478 ;; This function calls:
  6479 ;;		Nothing
  6480 ;; This function is called by:
  6481 ;;		_main
  6482 ;; This function uses a non-reentrant model
  6483 ;;
  6484                           
  6485     0B98                     _TMR0_ReadTimer:	
  6486                           ;psect for function _TMR0_ReadTimer
  6487                           
  6488                           
  6489                           ;mcc_generated_files/tmr0.c: 82:     uint8_t readVal;;mcc_generated_files/tmr0.c: 84:   
      +                            readVal = TMR0;
  6490                           
  6491                           ;incstack = 0
  6492                           ; Regs used in _TMR0_ReadTimer: [wreg]
  6493     0B98  0020               	movlb	0	; select bank0
  6494     0B99  0815               	movf	21,w	;volatile
  6495     0B9A  0021               	movlb	1	; select bank1
  6496     0B9B  00CC               	movwf	TMR0_ReadTimer@readVal^(0+128)
  6497                           
  6498                           ;mcc_generated_files/tmr0.c: 86:     return readVal;
  6499     0B9C  084C               	movf	TMR0_ReadTimer@readVal^(0+128),w
  6500     0B9D  0008               	return
  6501     0B9E                     __end_of_TMR0_ReadTimer:
  6502                           
  6503                           	psect	text20
  6504     0D6D                     __ptext20:	
  6505 ;; *************** function _SYSTEM_Initialize *****************
  6506 ;; Defined at:
  6507 ;;		line 50 in file "mcc_generated_files/mcc.c"
  6508 ;; Parameters:    Size  Location     Type
  6509 ;;		None
  6510 ;; Auto vars:     Size  Location     Type
  6511 ;;		None
  6512 ;; Return value:  Size  Location     Type
  6513 ;;                  1    wreg      void 
  6514 ;; Registers used:
  6515 ;;		wreg, status,2, status,0, pclath, cstack
  6516 ;; Tracked objects:
  6517 ;;		On entry : B1F/0
  6518 ;;		On exit  : 1F/1
  6519 ;;		Unchanged: 0/0
  6520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6521 ;;      Params:         0       0       0       0       0       0
  6522 ;;      Locals:         0       0       0       0       0       0
  6523 ;;      Temps:          0       0       0       0       0       0
  6524 ;;      Totals:         0       0       0       0       0       0
  6525 ;;Total ram usage:        0 bytes
  6526 ;; Hardware stack levels used: 1
  6527 ;; Hardware stack levels required when called: 7
  6528 ;; This function calls:
  6529 ;;		_ADC_Initialize
  6530 ;;		_CMP1_Initialize
  6531 ;;		_DAC_Initialize
  6532 ;;		_EPWM1_Initialize
  6533 ;;		_EUSART_Initialize
  6534 ;;		_FVR_Initialize
  6535 ;;		_OSCILLATOR_Initialize
  6536 ;;		_PIN_MANAGER_Initialize
  6537 ;;		_TMR0_Initialize
  6538 ;;		_TMR1_Initialize
  6539 ;;		_TMR2_Initialize
  6540 ;;		_TMR4_Initialize
  6541 ;;		_TMR6_Initialize
  6542 ;;		_WDT_Initialize
  6543 ;; This function is called by:
  6544 ;;		_main
  6545 ;; This function uses a non-reentrant model
  6546 ;;
  6547                           
  6548     0D6D                     _SYSTEM_Initialize:	
  6549                           ;psect for function _SYSTEM_Initialize
  6550                           
  6551                           
  6552                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  6553                           
  6554                           ;incstack = 0
  6555                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6556     0D6D  318C  2487  318D   	fcall	_PIN_MANAGER_Initialize
  6557                           
  6558                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  6559     0D70  318B  23B6  318D   	fcall	_OSCILLATOR_Initialize
  6560                           
  6561                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  6562     0D73  318B  2380  318D   	fcall	_WDT_Initialize
  6563                           
  6564                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
  6565     0D76  318B  237C  318D   	fcall	_FVR_Initialize
  6566                           
  6567                           ;mcc_generated_files/mcc.c: 57:     DAC_Initialize();
  6568     0D79  318B  238D  318D   	fcall	_DAC_Initialize
  6569                           
  6570                           ;mcc_generated_files/mcc.c: 58:     TMR4_Initialize();
  6571     0D7C  318C  2408  318D   	fcall	_TMR4_Initialize
  6572                           
  6573                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
  6574     0D7F  318B  23ED  318D   	fcall	_TMR2_Initialize
  6575                           
  6576                           ;mcc_generated_files/mcc.c: 60:     TMR0_Initialize();
  6577     0D82  318B  23FE  318D   	fcall	_TMR0_Initialize
  6578                           
  6579                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
  6580     0D85  318C  2412  318D   	fcall	_TMR6_Initialize
  6581                           
  6582                           ;mcc_generated_files/mcc.c: 62:     CMP1_Initialize();
  6583     0D88  318B  2392  318D   	fcall	_CMP1_Initialize
  6584                           
  6585                           ;mcc_generated_files/mcc.c: 63:     ADC_Initialize();
  6586     0D8B  318B  23C5  318D   	fcall	_ADC_Initialize
  6587                           
  6588                           ;mcc_generated_files/mcc.c: 64:     EPWM1_Initialize();
  6589     0D8E  318C  2433  318D   	fcall	_EPWM1_Initialize
  6590                           
  6591                           ;mcc_generated_files/mcc.c: 65:     TMR1_Initialize();
  6592     0D91  318C  24CF  318D   	fcall	_TMR1_Initialize
  6593                           
  6594                           ;mcc_generated_files/mcc.c: 66:     EUSART_Initialize();
  6595     0D94  318D  2523         	fcall	_EUSART_Initialize
  6596     0D96  0008               	return
  6597     0D97                     __end_of_SYSTEM_Initialize:
  6598                           
  6599                           	psect	text21
  6600     0B80                     __ptext21:	
  6601 ;; *************** function _WDT_Initialize *****************
  6602 ;; Defined at:
  6603 ;;		line 79 in file "mcc_generated_files/mcc.c"
  6604 ;; Parameters:    Size  Location     Type
  6605 ;;		None
  6606 ;; Auto vars:     Size  Location     Type
  6607 ;;		None
  6608 ;; Return value:  Size  Location     Type
  6609 ;;                  1    wreg      void 
  6610 ;; Registers used:
  6611 ;;		wreg
  6612 ;; Tracked objects:
  6613 ;;		On entry : B1F/2
  6614 ;;		On exit  : B1F/1
  6615 ;;		Unchanged: B00/0
  6616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6617 ;;      Params:         0       0       0       0       0       0
  6618 ;;      Locals:         0       0       0       0       0       0
  6619 ;;      Temps:          0       0       0       0       0       0
  6620 ;;      Totals:         0       0       0       0       0       0
  6621 ;;Total ram usage:        0 bytes
  6622 ;; Hardware stack levels used: 1
  6623 ;; Hardware stack levels required when called: 5
  6624 ;; This function calls:
  6625 ;;		Nothing
  6626 ;; This function is called by:
  6627 ;;		_SYSTEM_Initialize
  6628 ;; This function uses a non-reentrant model
  6629 ;;
  6630                           
  6631     0B80                     _WDT_Initialize:	
  6632                           ;psect for function _WDT_Initialize
  6633                           
  6634                           
  6635                           ;mcc_generated_files/mcc.c: 82:     WDTCON = 0x16;
  6636                           
  6637                           ;incstack = 0
  6638                           ; Regs used in _WDT_Initialize: [wreg]
  6639     0B80  3016               	movlw	22
  6640     0B81  0021               	movlb	1	; select bank1
  6641     0B82  0097               	movwf	23	;volatile
  6642     0B83  0008               	return
  6643     0B84                     __end_of_WDT_Initialize:
  6644                           
  6645                           	psect	text22
  6646     0C12                     __ptext22:	
  6647 ;; *************** function _TMR6_Initialize *****************
  6648 ;; Defined at:
  6649 ;;		line 62 in file "mcc_generated_files/tmr6.c"
  6650 ;; Parameters:    Size  Location     Type
  6651 ;;		None
  6652 ;; Auto vars:     Size  Location     Type
  6653 ;;		None
  6654 ;; Return value:  Size  Location     Type
  6655 ;;                  1    wreg      void 
  6656 ;; Registers used:
  6657 ;;		wreg, status,2
  6658 ;; Tracked objects:
  6659 ;;		On entry : B1F/0
  6660 ;;		On exit  : B1F/8
  6661 ;;		Unchanged: B00/0
  6662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6663 ;;      Params:         0       0       0       0       0       0
  6664 ;;      Locals:         0       0       0       0       0       0
  6665 ;;      Temps:          0       0       0       0       0       0
  6666 ;;      Totals:         0       0       0       0       0       0
  6667 ;;Total ram usage:        0 bytes
  6668 ;; Hardware stack levels used: 1
  6669 ;; Hardware stack levels required when called: 5
  6670 ;; This function calls:
  6671 ;;		Nothing
  6672 ;; This function is called by:
  6673 ;;		_SYSTEM_Initialize
  6674 ;; This function uses a non-reentrant model
  6675 ;;
  6676                           
  6677     0C12                     _TMR6_Initialize:	
  6678                           ;psect for function _TMR6_Initialize
  6679                           
  6680                           
  6681                           ;mcc_generated_files/tmr6.c: 67:     PR6 = 0x4A;
  6682                           
  6683                           ;incstack = 0
  6684                           ; Regs used in _TMR6_Initialize: [wreg+status,2]
  6685     0C12  304A               	movlw	74
  6686     0C13  0028               	movlb	8	; select bank8
  6687     0C14  009D               	movwf	29	;volatile
  6688                           
  6689                           ;mcc_generated_files/tmr6.c: 70:     TMR6 = 0x00;
  6690     0C15  019C               	clrf	28	;volatile
  6691                           
  6692                           ;mcc_generated_files/tmr6.c: 73:     PIR3bits.TMR6IF = 0;
  6693     0C16  0020               	movlb	0	; select bank0
  6694     0C17  1193               	bcf	19,3	;volatile
  6695                           
  6696                           ;mcc_generated_files/tmr6.c: 76:     T6CON = 0x4F;
  6697     0C18  304F               	movlw	79
  6698     0C19  0028               	movlb	8	; select bank8
  6699     0C1A  009E               	movwf	30	;volatile
  6700     0C1B  0008               	return
  6701     0C1C                     __end_of_TMR6_Initialize:
  6702                           
  6703                           	psect	text23
  6704     0C08                     __ptext23:	
  6705 ;; *************** function _TMR4_Initialize *****************
  6706 ;; Defined at:
  6707 ;;		line 62 in file "mcc_generated_files/tmr4.c"
  6708 ;; Parameters:    Size  Location     Type
  6709 ;;		None
  6710 ;; Auto vars:     Size  Location     Type
  6711 ;;		None
  6712 ;; Return value:  Size  Location     Type
  6713 ;;                  1    wreg      void 
  6714 ;; Registers used:
  6715 ;;		wreg, status,2
  6716 ;; Tracked objects:
  6717 ;;		On entry : B1F/2
  6718 ;;		On exit  : B1F/8
  6719 ;;		Unchanged: B00/0
  6720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6721 ;;      Params:         0       0       0       0       0       0
  6722 ;;      Locals:         0       0       0       0       0       0
  6723 ;;      Temps:          0       0       0       0       0       0
  6724 ;;      Totals:         0       0       0       0       0       0
  6725 ;;Total ram usage:        0 bytes
  6726 ;; Hardware stack levels used: 1
  6727 ;; Hardware stack levels required when called: 5
  6728 ;; This function calls:
  6729 ;;		Nothing
  6730 ;; This function is called by:
  6731 ;;		_SYSTEM_Initialize
  6732 ;; This function uses a non-reentrant model
  6733 ;;
  6734                           
  6735     0C08                     _TMR4_Initialize:	
  6736                           ;psect for function _TMR4_Initialize
  6737                           
  6738                           
  6739                           ;mcc_generated_files/tmr4.c: 67:     PR4 = 0xF9;
  6740                           
  6741                           ;incstack = 0
  6742                           ; Regs used in _TMR4_Initialize: [wreg+status,2]
  6743     0C08  30F9               	movlw	249
  6744     0C09  0028               	movlb	8	; select bank8
  6745     0C0A  0096               	movwf	22	;volatile
  6746                           
  6747                           ;mcc_generated_files/tmr4.c: 70:     TMR4 = 0x00;
  6748     0C0B  0195               	clrf	21	;volatile
  6749                           
  6750                           ;mcc_generated_files/tmr4.c: 73:     PIR3bits.TMR4IF = 0;
  6751     0C0C  0020               	movlb	0	; select bank0
  6752     0C0D  1093               	bcf	19,1	;volatile
  6753                           
  6754                           ;mcc_generated_files/tmr4.c: 76:     T4CON = 0x4F;
  6755     0C0E  304F               	movlw	79
  6756     0C0F  0028               	movlb	8	; select bank8
  6757     0C10  0097               	movwf	23	;volatile
  6758     0C11  0008               	return
  6759     0C12                     __end_of_TMR4_Initialize:
  6760                           
  6761                           	psect	text24
  6762     0BED                     __ptext24:	
  6763 ;; *************** function _TMR2_Initialize *****************
  6764 ;; Defined at:
  6765 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  6766 ;; Parameters:    Size  Location     Type
  6767 ;;		None
  6768 ;; Auto vars:     Size  Location     Type
  6769 ;;		None
  6770 ;; Return value:  Size  Location     Type
  6771 ;;                  1    wreg      void 
  6772 ;; Registers used:
  6773 ;;		wreg, status,2
  6774 ;; Tracked objects:
  6775 ;;		On entry : B1F/8
  6776 ;;		On exit  : B1F/0
  6777 ;;		Unchanged: B00/0
  6778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6779 ;;      Params:         0       0       0       0       0       0
  6780 ;;      Locals:         0       0       0       0       0       0
  6781 ;;      Temps:          0       0       0       0       0       0
  6782 ;;      Totals:         0       0       0       0       0       0
  6783 ;;Total ram usage:        0 bytes
  6784 ;; Hardware stack levels used: 1
  6785 ;; Hardware stack levels required when called: 5
  6786 ;; This function calls:
  6787 ;;		Nothing
  6788 ;; This function is called by:
  6789 ;;		_SYSTEM_Initialize
  6790 ;; This function uses a non-reentrant model
  6791 ;;
  6792                           
  6793     0BED                     _TMR2_Initialize:	
  6794                           ;psect for function _TMR2_Initialize
  6795                           
  6796                           
  6797                           ;mcc_generated_files/tmr2.c: 67:     PR2 = 0xFF;
  6798                           
  6799                           ;incstack = 0
  6800                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  6801     0BED  30FF               	movlw	255
  6802     0BEE  0020               	movlb	0	; select bank0
  6803     0BEF  009B               	movwf	27	;volatile
  6804                           
  6805                           ;mcc_generated_files/tmr2.c: 70:     TMR2 = 0x00;
  6806     0BF0  019A               	clrf	26	;volatile
  6807                           
  6808                           ;mcc_generated_files/tmr2.c: 73:     PIR1bits.TMR2IF = 0;
  6809     0BF1  1091               	bcf	17,1	;volatile
  6810                           
  6811                           ;mcc_generated_files/tmr2.c: 76:     T2CON = 0x04;
  6812     0BF2  3004               	movlw	4
  6813     0BF3  009C               	movwf	28	;volatile
  6814     0BF4  0008               	return
  6815     0BF5                     __end_of_TMR2_Initialize:
  6816                           
  6817                           	psect	text25
  6818     0CCF                     __ptext25:	
  6819 ;; *************** function _TMR1_Initialize *****************
  6820 ;; Defined at:
  6821 ;;		line 65 in file "mcc_generated_files/tmr1.c"
  6822 ;; Parameters:    Size  Location     Type
  6823 ;;		None
  6824 ;; Auto vars:     Size  Location     Type
  6825 ;;		None
  6826 ;; Return value:  Size  Location     Type
  6827 ;;                  1    wreg      void 
  6828 ;; Registers used:
  6829 ;;		wreg, status,2, status,0, pclath, cstack
  6830 ;; Tracked objects:
  6831 ;;		On entry : 1F/5
  6832 ;;		On exit  : 1F/0
  6833 ;;		Unchanged: 0/0
  6834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6835 ;;      Params:         0       0       0       0       0       0
  6836 ;;      Locals:         0       0       0       0       0       0
  6837 ;;      Temps:          0       0       0       0       0       0
  6838 ;;      Totals:         0       0       0       0       0       0
  6839 ;;Total ram usage:        0 bytes
  6840 ;; Hardware stack levels used: 1
  6841 ;; Hardware stack levels required when called: 6
  6842 ;; This function calls:
  6843 ;;		_TMR1_SetGateInterruptHandler
  6844 ;; This function is called by:
  6845 ;;		_SYSTEM_Initialize
  6846 ;; This function uses a non-reentrant model
  6847 ;;
  6848                           
  6849     0CCF                     _TMR1_Initialize:	
  6850                           ;psect for function _TMR1_Initialize
  6851                           
  6852                           
  6853                           ;mcc_generated_files/tmr1.c: 70:     T1GCON = 0xC0;
  6854                           
  6855                           ;incstack = 0
  6856                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6857     0CCF  30C0               	movlw	192
  6858     0CD0  0020               	movlb	0	; select bank0
  6859     0CD1  0099               	movwf	25	;volatile
  6860                           
  6861                           ;mcc_generated_files/tmr1.c: 73:     TMR1H = 0x00;
  6862     0CD2  0197               	clrf	23	;volatile
  6863                           
  6864                           ;mcc_generated_files/tmr1.c: 76:     TMR1L = 0x00;
  6865     0CD3  0196               	clrf	22	;volatile
  6866                           
  6867                           ;mcc_generated_files/tmr1.c: 79:     PIR1bits.TMR1IF = 0;
  6868     0CD4  1011               	bcf	17,0	;volatile
  6869                           
  6870                           ;mcc_generated_files/tmr1.c: 82:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  6871     0CD5  0817               	movf	23,w	;volatile
  6872     0CD6  0021               	movlb	1	; select bank1
  6873     0CD7  00C4               	movwf	(_timer1ReloadVal+1)^(0+128)	;volatile
  6874     0CD8  0020               	movlb	0	; select bank0
  6875     0CD9  0816               	movf	22,w	;volatile
  6876     0CDA  0021               	movlb	1	; select bank1
  6877     0CDB  00C3               	movwf	_timer1ReloadVal^(0+128)	;volatile
  6878                           
  6879                           ;mcc_generated_files/tmr1.c: 85:     PIR1bits.TMR1GIF = 0;
  6880     0CDC  0020               	movlb	0	; select bank0
  6881     0CDD  1391               	bcf	17,7	;volatile
  6882                           
  6883                           ;mcc_generated_files/tmr1.c: 88:     PIE1bits.TMR1GIE = 1;
  6884     0CDE  0021               	movlb	1	; select bank1
  6885     0CDF  1791               	bsf	17,7	;volatile
  6886                           
  6887                           ;mcc_generated_files/tmr1.c: 91:     TMR1_SetGateInterruptHandler(TMR1_DefaultGateInterr
      +                          uptHandler);
  6888     0CE0  3002               	movlw	low _TMR1_DefaultGateInterruptHandler
  6889     0CE1  00CC               	movwf	TMR1_SetGateInterruptHandler@InterruptHandler^(0+128)
  6890     0CE2  3000               	movlw	high _TMR1_DefaultGateInterruptHandler
  6891     0CE3  00CD               	movwf	(TMR1_SetGateInterruptHandler@InterruptHandler^(0+128)+1)
  6892     0CE4  318B  23E5         	fcall	_TMR1_SetGateInterruptHandler
  6893                           
  6894                           ;mcc_generated_files/tmr1.c: 94:     T1CON = 0x01;
  6895     0CE6  3001               	movlw	1
  6896     0CE7  0098               	movwf	24	;volatile
  6897     0CE8  0008               	return
  6898     0CE9                     __end_of_TMR1_Initialize:
  6899                           
  6900                           	psect	text26
  6901     0BE5                     __ptext26:	
  6902 ;; *************** function _TMR1_SetGateInterruptHandler *****************
  6903 ;; Defined at:
  6904 ;;		line 177 in file "mcc_generated_files/tmr1.c"
  6905 ;; Parameters:    Size  Location     Type
  6906 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  6907 ;;		 -> mede_height(1), TMR1_DefaultGateInterruptHandler(1), 
  6908 ;; Auto vars:     Size  Location     Type
  6909 ;;		None
  6910 ;; Return value:  Size  Location     Type
  6911 ;;                  1    wreg      void 
  6912 ;; Registers used:
  6913 ;;		wreg
  6914 ;; Tracked objects:
  6915 ;;		On entry : 1F/1
  6916 ;;		On exit  : 1F/0
  6917 ;;		Unchanged: 0/0
  6918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6919 ;;      Params:         0       0       2       0       0       0
  6920 ;;      Locals:         0       0       0       0       0       0
  6921 ;;      Temps:          0       0       0       0       0       0
  6922 ;;      Totals:         0       0       2       0       0       0
  6923 ;;Total ram usage:        2 bytes
  6924 ;; Hardware stack levels used: 1
  6925 ;; Hardware stack levels required when called: 5
  6926 ;; This function calls:
  6927 ;;		Nothing
  6928 ;; This function is called by:
  6929 ;;		_TMR1_Initialize
  6930 ;;		_main
  6931 ;; This function uses a non-reentrant model
  6932 ;;
  6933                           
  6934     0BE5                     _TMR1_SetGateInterruptHandler:	
  6935                           ;psect for function _TMR1_SetGateInterruptHandler
  6936                           
  6937                           
  6938                           ;mcc_generated_files/tmr1.c: 178:     TMR1_GateInterruptHandler = InterruptHandler;
  6939                           
  6940                           ;incstack = 0
  6941                           ; Regs used in _TMR1_SetGateInterruptHandler: [wreg]
  6942     0BE5  084D               	movf	(TMR1_SetGateInterruptHandler@InterruptHandler+1)^(0+128),w
  6943     0BE6  0020               	movlb	0	; select bank0
  6944     0BE7  00EF               	movwf	_TMR1_GateInterruptHandler+1
  6945     0BE8  0021               	movlb	1	; select bank1
  6946     0BE9  084C               	movf	TMR1_SetGateInterruptHandler@InterruptHandler^(0+128),w
  6947     0BEA  0020               	movlb	0	; select bank0
  6948     0BEB  00EE               	movwf	_TMR1_GateInterruptHandler
  6949     0BEC  0008               	return
  6950     0BED                     __end_of_TMR1_SetGateInterruptHandler:
  6951                           
  6952                           	psect	text27
  6953     0BFE                     __ptext27:	
  6954 ;; *************** function _TMR0_Initialize *****************
  6955 ;; Defined at:
  6956 ;;		line 63 in file "mcc_generated_files/tmr0.c"
  6957 ;; Parameters:    Size  Location     Type
  6958 ;;		None
  6959 ;; Auto vars:     Size  Location     Type
  6960 ;;		None
  6961 ;; Return value:  Size  Location     Type
  6962 ;;                  1    wreg      void 
  6963 ;; Registers used:
  6964 ;;		wreg, status,2
  6965 ;; Tracked objects:
  6966 ;;		On entry : B1F/0
  6967 ;;		On exit  : B1F/0
  6968 ;;		Unchanged: B00/0
  6969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6970 ;;      Params:         0       0       0       0       0       0
  6971 ;;      Locals:         0       0       0       0       0       0
  6972 ;;      Temps:          0       0       0       0       0       0
  6973 ;;      Totals:         0       0       0       0       0       0
  6974 ;;Total ram usage:        0 bytes
  6975 ;; Hardware stack levels used: 1
  6976 ;; Hardware stack levels required when called: 5
  6977 ;; This function calls:
  6978 ;;		Nothing
  6979 ;; This function is called by:
  6980 ;;		_SYSTEM_Initialize
  6981 ;; This function uses a non-reentrant model
  6982 ;;
  6983                           
  6984     0BFE                     _TMR0_Initialize:	
  6985                           ;psect for function _TMR0_Initialize
  6986                           
  6987                           
  6988                           ;mcc_generated_files/tmr0.c: 68:     OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | (0xD7 
      +                          & 0x3F));
  6989                           
  6990                           ;incstack = 0
  6991                           ; Regs used in _TMR0_Initialize: [wreg+status,2]
  6992     0BFE  0021               	movlb	1	; select bank1
  6993     0BFF  0815               	movf	21,w	;volatile
  6994     0C00  39C0               	andlw	192
  6995     0C01  3817               	iorlw	23
  6996     0C02  0095               	movwf	21	;volatile
  6997                           
  6998                           ;mcc_generated_files/tmr0.c: 71:     TMR0 = 0x00;
  6999     0C03  0020               	movlb	0	; select bank0
  7000     0C04  0195               	clrf	21	;volatile
  7001                           
  7002                           ;mcc_generated_files/tmr0.c: 74:     timer0ReloadVal= 0;
  7003     0C05  01E9               	clrf	_timer0ReloadVal	;volatile
  7004                           
  7005                           ;mcc_generated_files/tmr0.c: 77:     INTCONbits.TMR0IF = 0;
  7006     0C06  110B               	bcf	11,2	;volatile
  7007     0C07  0008               	return
  7008     0C08                     __end_of_TMR0_Initialize:
  7009                           
  7010                           	psect	text28
  7011     0C87                     __ptext28:	
  7012 ;; *************** function _PIN_MANAGER_Initialize *****************
  7013 ;; Defined at:
  7014 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  7015 ;; Parameters:    Size  Location     Type
  7016 ;;		None
  7017 ;; Auto vars:     Size  Location     Type
  7018 ;;		None
  7019 ;; Return value:  Size  Location     Type
  7020 ;;                  1    wreg      void 
  7021 ;; Registers used:
  7022 ;;		wreg, status,2
  7023 ;; Tracked objects:
  7024 ;;		On entry : B1F/0
  7025 ;;		On exit  : B1F/2
  7026 ;;		Unchanged: B00/0
  7027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7028 ;;      Params:         0       0       0       0       0       0
  7029 ;;      Locals:         0       0       0       0       0       0
  7030 ;;      Temps:          0       0       0       0       0       0
  7031 ;;      Totals:         0       0       0       0       0       0
  7032 ;;Total ram usage:        0 bytes
  7033 ;; Hardware stack levels used: 1
  7034 ;; Hardware stack levels required when called: 5
  7035 ;; This function calls:
  7036 ;;		Nothing
  7037 ;; This function is called by:
  7038 ;;		_SYSTEM_Initialize
  7039 ;; This function uses a non-reentrant model
  7040 ;;
  7041                           
  7042     0C87                     _PIN_MANAGER_Initialize:	
  7043                           ;psect for function _PIN_MANAGER_Initialize
  7044                           
  7045                           
  7046                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  7047                           
  7048                           ;incstack = 0
  7049                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  7050     0C87  0022               	movlb	2	; select bank2
  7051     0C88  018C               	clrf	12	;volatile
  7052                           
  7053                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  7054     0C89  018D               	clrf	13	;volatile
  7055                           
  7056                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0x21;
  7057     0C8A  3021               	movlw	33
  7058     0C8B  0021               	movlb	1	; select bank1
  7059     0C8C  008C               	movwf	12	;volatile
  7060                           
  7061                           ;mcc_generated_files/pin_manager.c: 67:     TRISB = 0xF7;
  7062     0C8D  30F7               	movlw	247
  7063     0C8E  008D               	movwf	13	;volatile
  7064                           
  7065                           ;mcc_generated_files/pin_manager.c: 72:     ANSELB = 0xF0;
  7066     0C8F  30F0               	movlw	240
  7067     0C90  0023               	movlb	3	; select bank3
  7068     0C91  008D               	movwf	13	;volatile
  7069                           
  7070                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x01;
  7071     0C92  3001               	movlw	1
  7072     0C93  008C               	movwf	12	;volatile
  7073                           
  7074                           ;mcc_generated_files/pin_manager.c: 78:     WPUB = 0x00;
  7075     0C94  0024               	movlb	4	; select bank4
  7076     0C95  018D               	clrf	13	;volatile
  7077                           
  7078                           ;mcc_generated_files/pin_manager.c: 79:     WPUA = 0x00;
  7079     0C96  018C               	clrf	12	;volatile
  7080                           
  7081                           ;mcc_generated_files/pin_manager.c: 80:     OPTION_REGbits.nWPUEN = 1;
  7082     0C97  0021               	movlb	1	; select bank1
  7083     0C98  1795               	bsf	21,7	;volatile
  7084                           
  7085                           ;mcc_generated_files/pin_manager.c: 86:     APFCON0 = 0x00;
  7086     0C99  0022               	movlb	2	; select bank2
  7087     0C9A  019D               	clrf	29	;volatile
  7088                           
  7089                           ;mcc_generated_files/pin_manager.c: 87:     APFCON1 = 0x00;
  7090     0C9B  019E               	clrf	30	;volatile
  7091                           
  7092                           ;mcc_generated_files/pin_manager.c: 94:     INTCONbits.IOCIE = 1;
  7093     0C9C  158B               	bsf	11,3	;volatile
  7094     0C9D  0008               	return
  7095     0C9E                     __end_of_PIN_MANAGER_Initialize:
  7096                           
  7097                           	psect	text29
  7098     0BB6                     __ptext29:	
  7099 ;; *************** function _OSCILLATOR_Initialize *****************
  7100 ;; Defined at:
  7101 ;;		line 69 in file "mcc_generated_files/mcc.c"
  7102 ;; Parameters:    Size  Location     Type
  7103 ;;		None
  7104 ;; Auto vars:     Size  Location     Type
  7105 ;;		None
  7106 ;; Return value:  Size  Location     Type
  7107 ;;                  1    wreg      void 
  7108 ;; Registers used:
  7109 ;;		wreg, status,2
  7110 ;; Tracked objects:
  7111 ;;		On entry : B1F/2
  7112 ;;		On exit  : B1F/2
  7113 ;;		Unchanged: B00/0
  7114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7115 ;;      Params:         0       0       0       0       0       0
  7116 ;;      Locals:         0       0       0       0       0       0
  7117 ;;      Temps:          0       0       0       0       0       0
  7118 ;;      Totals:         0       0       0       0       0       0
  7119 ;;Total ram usage:        0 bytes
  7120 ;; Hardware stack levels used: 1
  7121 ;; Hardware stack levels required when called: 5
  7122 ;; This function calls:
  7123 ;;		Nothing
  7124 ;; This function is called by:
  7125 ;;		_SYSTEM_Initialize
  7126 ;; This function uses a non-reentrant model
  7127 ;;
  7128                           
  7129     0BB6                     _OSCILLATOR_Initialize:	
  7130                           ;psect for function _OSCILLATOR_Initialize
  7131                           
  7132                           
  7133                           ;mcc_generated_files/mcc.c: 72:     OSCCON = 0x78;
  7134                           
  7135                           ;incstack = 0
  7136                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  7137     0BB6  3078               	movlw	120
  7138     0BB7  0021               	movlb	1	; select bank1
  7139     0BB8  0099               	movwf	25	;volatile
  7140                           
  7141                           ;mcc_generated_files/mcc.c: 74:     OSCTUNE = 0x00;
  7142     0BB9  0198               	clrf	24	;volatile
  7143                           
  7144                           ;mcc_generated_files/mcc.c: 76:     BORCON = 0x00;
  7145     0BBA  0022               	movlb	2	; select bank2
  7146     0BBB  0196               	clrf	22	;volatile
  7147     0BBC  0008               	return
  7148     0BBD                     __end_of_OSCILLATOR_Initialize:
  7149                           
  7150                           	psect	text30
  7151     0B7C                     __ptext30:	
  7152 ;; *************** function _FVR_Initialize *****************
  7153 ;; Defined at:
  7154 ;;		line 58 in file "mcc_generated_files/fvr.c"
  7155 ;; Parameters:    Size  Location     Type
  7156 ;;		None
  7157 ;; Auto vars:     Size  Location     Type
  7158 ;;		None
  7159 ;; Return value:  Size  Location     Type
  7160 ;;                  1    wreg      void 
  7161 ;; Registers used:
  7162 ;;		wreg
  7163 ;; Tracked objects:
  7164 ;;		On entry : B1F/1
  7165 ;;		On exit  : B1F/2
  7166 ;;		Unchanged: B00/0
  7167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7168 ;;      Params:         0       0       0       0       0       0
  7169 ;;      Locals:         0       0       0       0       0       0
  7170 ;;      Temps:          0       0       0       0       0       0
  7171 ;;      Totals:         0       0       0       0       0       0
  7172 ;;Total ram usage:        0 bytes
  7173 ;; Hardware stack levels used: 1
  7174 ;; Hardware stack levels required when called: 5
  7175 ;; This function calls:
  7176 ;;		Nothing
  7177 ;; This function is called by:
  7178 ;;		_SYSTEM_Initialize
  7179 ;; This function uses a non-reentrant model
  7180 ;;
  7181                           
  7182     0B7C                     _FVR_Initialize:	
  7183                           ;psect for function _FVR_Initialize
  7184                           
  7185                           
  7186                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0x85;
  7187                           
  7188                           ;incstack = 0
  7189                           ; Regs used in _FVR_Initialize: [wreg]
  7190     0B7C  3085               	movlw	133
  7191     0B7D  0022               	movlb	2	; select bank2
  7192     0B7E  0097               	movwf	23	;volatile
  7193     0B7F  0008               	return
  7194     0B80                     __end_of_FVR_Initialize:
  7195                           
  7196                           	psect	text31
  7197     0D23                     __ptext31:	
  7198 ;; *************** function _EUSART_Initialize *****************
  7199 ;; Defined at:
  7200 ;;		line 66 in file "mcc_generated_files/eusart.c"
  7201 ;; Parameters:    Size  Location     Type
  7202 ;;		None
  7203 ;; Auto vars:     Size  Location     Type
  7204 ;;		None
  7205 ;; Return value:  Size  Location     Type
  7206 ;;                  1    wreg      void 
  7207 ;; Registers used:
  7208 ;;		wreg, status,2, status,0, pclath, cstack
  7209 ;; Tracked objects:
  7210 ;;		On entry : 1F/0
  7211 ;;		On exit  : 1F/1
  7212 ;;		Unchanged: 0/0
  7213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7214 ;;      Params:         0       0       0       0       0       0
  7215 ;;      Locals:         0       0       0       0       0       0
  7216 ;;      Temps:          0       0       0       0       0       0
  7217 ;;      Totals:         0       0       0       0       0       0
  7218 ;;Total ram usage:        0 bytes
  7219 ;; Hardware stack levels used: 1
  7220 ;; Hardware stack levels required when called: 6
  7221 ;; This function calls:
  7222 ;;		_EUSART_SetErrorHandler
  7223 ;;		_EUSART_SetFramingErrorHandler
  7224 ;;		_EUSART_SetOverrunErrorHandler
  7225 ;; This function is called by:
  7226 ;;		_SYSTEM_Initialize
  7227 ;; This function uses a non-reentrant model
  7228 ;;
  7229                           
  7230     0D23                     _EUSART_Initialize:	
  7231                           ;psect for function _EUSART_Initialize
  7232                           
  7233                           
  7234                           ;mcc_generated_files/eusart.c: 71:     BAUDCON = 0x08;
  7235                           
  7236                           ;incstack = 0
  7237                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7238     0D23  3008               	movlw	8
  7239     0D24  0023               	movlb	3	; select bank3
  7240     0D25  009F               	movwf	31	;volatile
  7241                           
  7242                           ;mcc_generated_files/eusart.c: 74:     RCSTA = 0x90;
  7243     0D26  3090               	movlw	144
  7244     0D27  009D               	movwf	29	;volatile
  7245                           
  7246                           ;mcc_generated_files/eusart.c: 77:     TXSTA = 0x24;
  7247     0D28  3024               	movlw	36
  7248     0D29  009E               	movwf	30	;volatile
  7249                           
  7250                           ;mcc_generated_files/eusart.c: 80:     SPBRGL = 0x22;
  7251     0D2A  3022               	movlw	34
  7252     0D2B  009B               	movwf	27	;volatile
  7253                           
  7254                           ;mcc_generated_files/eusart.c: 83:     SPBRGH = 0x00;
  7255     0D2C  019C               	clrf	28	;volatile
  7256                           
  7257                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  7258     0D2D  3000               	movlw	0
  7259     0D2E  0021               	movlb	1	; select bank1
  7260     0D2F  00CC               	movwf	EUSART_SetFramingErrorHandler@interruptHandler^(0+128)
  7261     0D30  3000               	movlw	0
  7262     0D31  00CD               	movwf	(EUSART_SetFramingErrorHandler@interruptHandler^(0+128)+1)
  7263     0D32  318B  23D5  318D   	fcall	_EUSART_SetFramingErrorHandler
  7264                           
  7265                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  7266     0D35  3000               	movlw	0
  7267     0D36  0021               	movlb	1	; select bank1
  7268     0D37  00CC               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler^(0+128)
  7269     0D38  3000               	movlw	0
  7270     0D39  00CD               	movwf	(EUSART_SetOverrunErrorHandler@interruptHandler^(0+128)+1)
  7271     0D3A  318B  23DD  318D   	fcall	_EUSART_SetOverrunErrorHandler
  7272                           
  7273                           ;mcc_generated_files/eusart.c: 88:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  7274     0D3D  3000               	movlw	0
  7275     0D3E  0021               	movlb	1	; select bank1
  7276     0D3F  00CC               	movwf	EUSART_SetErrorHandler@interruptHandler^(0+128)
  7277     0D40  3000               	movlw	0
  7278     0D41  00CD               	movwf	(EUSART_SetErrorHandler@interruptHandler^(0+128)+1)
  7279     0D42  318B  23CD         	fcall	_EUSART_SetErrorHandler
  7280                           
  7281                           ;mcc_generated_files/eusart.c: 90:     eusartRxLastError.status = 0;
  7282     0D44  0021               	movlb	1	; select bank1
  7283     0D45  01CB               	clrf	_eusartRxLastError^(0+128)	;volatile
  7284     0D46  0008               	return
  7285     0D47                     __end_of_EUSART_Initialize:
  7286                           
  7287                           	psect	text32
  7288     0BDD                     __ptext32:	
  7289 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  7290 ;; Defined at:
  7291 ;;		line 161 in file "mcc_generated_files/eusart.c"
  7292 ;; Parameters:    Size  Location     Type
  7293 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  7294 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  7295 ;; Auto vars:     Size  Location     Type
  7296 ;;		None
  7297 ;; Return value:  Size  Location     Type
  7298 ;;                  1    wreg      void 
  7299 ;; Registers used:
  7300 ;;		wreg
  7301 ;; Tracked objects:
  7302 ;;		On entry : 1F/1
  7303 ;;		On exit  : 1F/2
  7304 ;;		Unchanged: 0/0
  7305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7306 ;;      Params:         0       0       2       0       0       0
  7307 ;;      Locals:         0       0       0       0       0       0
  7308 ;;      Temps:          0       0       0       0       0       0
  7309 ;;      Totals:         0       0       2       0       0       0
  7310 ;;Total ram usage:        2 bytes
  7311 ;; Hardware stack levels used: 1
  7312 ;; Hardware stack levels required when called: 5
  7313 ;; This function calls:
  7314 ;;		Nothing
  7315 ;; This function is called by:
  7316 ;;		_EUSART_Initialize
  7317 ;; This function uses a non-reentrant model
  7318 ;;
  7319                           
  7320     0BDD                     _EUSART_SetOverrunErrorHandler:	
  7321                           ;psect for function _EUSART_SetOverrunErrorHandler
  7322                           
  7323                           
  7324                           ;mcc_generated_files/eusart.c: 162:     EUSART_OverrunErrorHandler = interruptHandler;
  7325                           
  7326                           ;incstack = 0
  7327                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  7328     0BDD  084D               	movf	(EUSART_SetOverrunErrorHandler@interruptHandler+1)^(0+128),w
  7329     0BDE  0022               	movlb	2	; select bank2
  7330     0BDF  00B2               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+256)
  7331     0BE0  0021               	movlb	1	; select bank1
  7332     0BE1  084C               	movf	EUSART_SetOverrunErrorHandler@interruptHandler^(0+128),w
  7333     0BE2  0022               	movlb	2	; select bank2
  7334     0BE3  00B1               	movwf	_EUSART_OverrunErrorHandler^(0+256)
  7335     0BE4  0008               	return
  7336     0BE5                     __end_of_EUSART_SetOverrunErrorHandler:
  7337                           
  7338                           	psect	text33
  7339     0BD5                     __ptext33:	
  7340 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  7341 ;; Defined at:
  7342 ;;		line 157 in file "mcc_generated_files/eusart.c"
  7343 ;; Parameters:    Size  Location     Type
  7344 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  7345 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  7346 ;; Auto vars:     Size  Location     Type
  7347 ;;		None
  7348 ;; Return value:  Size  Location     Type
  7349 ;;                  1    wreg      void 
  7350 ;; Registers used:
  7351 ;;		wreg
  7352 ;; Tracked objects:
  7353 ;;		On entry : 1F/1
  7354 ;;		On exit  : 1F/2
  7355 ;;		Unchanged: 0/0
  7356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7357 ;;      Params:         0       0       2       0       0       0
  7358 ;;      Locals:         0       0       0       0       0       0
  7359 ;;      Temps:          0       0       0       0       0       0
  7360 ;;      Totals:         0       0       2       0       0       0
  7361 ;;Total ram usage:        2 bytes
  7362 ;; Hardware stack levels used: 1
  7363 ;; Hardware stack levels required when called: 5
  7364 ;; This function calls:
  7365 ;;		Nothing
  7366 ;; This function is called by:
  7367 ;;		_EUSART_Initialize
  7368 ;; This function uses a non-reentrant model
  7369 ;;
  7370                           
  7371     0BD5                     _EUSART_SetFramingErrorHandler:	
  7372                           ;psect for function _EUSART_SetFramingErrorHandler
  7373                           
  7374                           
  7375                           ;mcc_generated_files/eusart.c: 158:     EUSART_FramingErrorHandler = interruptHandler;
  7376                           
  7377                           ;incstack = 0
  7378                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  7379     0BD5  084D               	movf	(EUSART_SetFramingErrorHandler@interruptHandler+1)^(0+128),w
  7380     0BD6  0022               	movlb	2	; select bank2
  7381     0BD7  00B4               	movwf	(_EUSART_FramingErrorHandler+1)^(0+256)
  7382     0BD8  0021               	movlb	1	; select bank1
  7383     0BD9  084C               	movf	EUSART_SetFramingErrorHandler@interruptHandler^(0+128),w
  7384     0BDA  0022               	movlb	2	; select bank2
  7385     0BDB  00B3               	movwf	_EUSART_FramingErrorHandler^(0+256)
  7386     0BDC  0008               	return
  7387     0BDD                     __end_of_EUSART_SetFramingErrorHandler:
  7388                           
  7389                           	psect	text34
  7390     0BCD                     __ptext34:	
  7391 ;; *************** function _EUSART_SetErrorHandler *****************
  7392 ;; Defined at:
  7393 ;;		line 165 in file "mcc_generated_files/eusart.c"
  7394 ;; Parameters:    Size  Location     Type
  7395 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  7396 ;;		 -> EUSART_DefaultErrorHandler(1), 
  7397 ;; Auto vars:     Size  Location     Type
  7398 ;;		None
  7399 ;; Return value:  Size  Location     Type
  7400 ;;                  1    wreg      void 
  7401 ;; Registers used:
  7402 ;;		wreg
  7403 ;; Tracked objects:
  7404 ;;		On entry : 1F/1
  7405 ;;		On exit  : 1F/2
  7406 ;;		Unchanged: 0/0
  7407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7408 ;;      Params:         0       0       2       0       0       0
  7409 ;;      Locals:         0       0       0       0       0       0
  7410 ;;      Temps:          0       0       0       0       0       0
  7411 ;;      Totals:         0       0       2       0       0       0
  7412 ;;Total ram usage:        2 bytes
  7413 ;; Hardware stack levels used: 1
  7414 ;; Hardware stack levels required when called: 5
  7415 ;; This function calls:
  7416 ;;		Nothing
  7417 ;; This function is called by:
  7418 ;;		_EUSART_Initialize
  7419 ;; This function uses a non-reentrant model
  7420 ;;
  7421                           
  7422     0BCD                     _EUSART_SetErrorHandler:	
  7423                           ;psect for function _EUSART_SetErrorHandler
  7424                           
  7425                           
  7426                           ;mcc_generated_files/eusart.c: 166:     EUSART_ErrorHandler = interruptHandler;
  7427                           
  7428                           ;incstack = 0
  7429                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  7430     0BCD  084D               	movf	(EUSART_SetErrorHandler@interruptHandler+1)^(0+128),w
  7431     0BCE  0022               	movlb	2	; select bank2
  7432     0BCF  00B0               	movwf	(_EUSART_ErrorHandler+1)^(0+256)
  7433     0BD0  0021               	movlb	1	; select bank1
  7434     0BD1  084C               	movf	EUSART_SetErrorHandler@interruptHandler^(0+128),w
  7435     0BD2  0022               	movlb	2	; select bank2
  7436     0BD3  00AF               	movwf	_EUSART_ErrorHandler^(0+256)
  7437     0BD4  0008               	return
  7438     0BD5                     __end_of_EUSART_SetErrorHandler:
  7439                           
  7440                           	psect	text35
  7441     0C33                     __ptext35:	
  7442 ;; *************** function _EPWM1_Initialize *****************
  7443 ;; Defined at:
  7444 ;;		line 64 in file "mcc_generated_files/epwm1.c"
  7445 ;; Parameters:    Size  Location     Type
  7446 ;;		None
  7447 ;; Auto vars:     Size  Location     Type
  7448 ;;		None
  7449 ;; Return value:  Size  Location     Type
  7450 ;;                  1    wreg      void 
  7451 ;; Registers used:
  7452 ;;		wreg, status,2, status,0
  7453 ;; Tracked objects:
  7454 ;;		On entry : 1F/1
  7455 ;;		On exit  : 1F/5
  7456 ;;		Unchanged: 0/0
  7457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7458 ;;      Params:         0       0       0       0       0       0
  7459 ;;      Locals:         0       0       0       0       0       0
  7460 ;;      Temps:          0       0       0       0       0       0
  7461 ;;      Totals:         0       0       0       0       0       0
  7462 ;;Total ram usage:        0 bytes
  7463 ;; Hardware stack levels used: 1
  7464 ;; Hardware stack levels required when called: 5
  7465 ;; This function calls:
  7466 ;;		Nothing
  7467 ;; This function is called by:
  7468 ;;		_SYSTEM_Initialize
  7469 ;; This function uses a non-reentrant model
  7470 ;;
  7471                           
  7472     0C33                     _EPWM1_Initialize:	
  7473                           ;psect for function _EPWM1_Initialize
  7474                           
  7475                           
  7476                           ;mcc_generated_files/epwm1.c: 69:  CCP1CON = 0x3C;
  7477                           
  7478                           ;incstack = 0
  7479                           ; Regs used in _EPWM1_Initialize: [wreg+status,2+status,0]
  7480     0C33  303C               	movlw	60
  7481     0C34  0025               	movlb	5	; select bank5
  7482     0C35  0093               	movwf	19	;volatile
  7483                           
  7484                           ;mcc_generated_files/epwm1.c: 72:  ECCP1AS = 0x00;
  7485     0C36  0195               	clrf	21	;volatile
  7486                           
  7487                           ;mcc_generated_files/epwm1.c: 75:  PWM1CON = 0x80;
  7488     0C37  3080               	movlw	128
  7489     0C38  0094               	movwf	20	;volatile
  7490                           
  7491                           ;mcc_generated_files/epwm1.c: 78:  PSTR1CON = 0x01;
  7492     0C39  3001               	movlw	1
  7493     0C3A  0096               	movwf	22	;volatile
  7494                           
  7495                           ;mcc_generated_files/epwm1.c: 81:  CCPR1H = 0x00;
  7496     0C3B  0192               	clrf	18	;volatile
  7497                           
  7498                           ;mcc_generated_files/epwm1.c: 84:  CCPR1L = 0x7F;
  7499     0C3C  307F               	movlw	127
  7500     0C3D  0091               	movwf	17	;volatile
  7501                           
  7502                           ;mcc_generated_files/epwm1.c: 87:  CCPTMRS0bits.C1TSEL = 0x0;
  7503     0C3E  30FC               	movlw	-4
  7504     0C3F  059E               	andwf	30,f	;volatile
  7505     0C40  0008               	return
  7506     0C41                     __end_of_EPWM1_Initialize:
  7507                           
  7508                           	psect	text36
  7509     0B8D                     __ptext36:	
  7510 ;; *************** function _DAC_Initialize *****************
  7511 ;; Defined at:
  7512 ;;		line 58 in file "mcc_generated_files/dac.c"
  7513 ;; Parameters:    Size  Location     Type
  7514 ;;		None
  7515 ;; Auto vars:     Size  Location     Type
  7516 ;;		None
  7517 ;; Return value:  Size  Location     Type
  7518 ;;                  1    wreg      void 
  7519 ;; Registers used:
  7520 ;;		wreg
  7521 ;; Tracked objects:
  7522 ;;		On entry : B1F/2
  7523 ;;		On exit  : B1F/2
  7524 ;;		Unchanged: B00/0
  7525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7526 ;;      Params:         0       0       0       0       0       0
  7527 ;;      Locals:         0       0       0       0       0       0
  7528 ;;      Temps:          0       0       0       0       0       0
  7529 ;;      Totals:         0       0       0       0       0       0
  7530 ;;Total ram usage:        0 bytes
  7531 ;; Hardware stack levels used: 1
  7532 ;; Hardware stack levels required when called: 5
  7533 ;; This function calls:
  7534 ;;		Nothing
  7535 ;; This function is called by:
  7536 ;;		_SYSTEM_Initialize
  7537 ;; This function uses a non-reentrant model
  7538 ;;
  7539                           
  7540     0B8D                     _DAC_Initialize:	
  7541                           ;psect for function _DAC_Initialize
  7542                           
  7543                           
  7544                           ;mcc_generated_files/dac.c: 61:     DACCON0 = 0x80;
  7545                           
  7546                           ;incstack = 0
  7547                           ; Regs used in _DAC_Initialize: [wreg]
  7548     0B8D  3080               	movlw	128
  7549     0B8E  0098               	movwf	24	;volatile
  7550                           
  7551                           ;mcc_generated_files/dac.c: 63:     DACCON1 = 0x06;
  7552     0B8F  3006               	movlw	6
  7553     0B90  0099               	movwf	25	;volatile
  7554     0B91  0008               	return
  7555     0B92                     __end_of_DAC_Initialize:
  7556                           
  7557                           	psect	text37
  7558     0B92                     __ptext37:	
  7559 ;; *************** function _CMP1_Initialize *****************
  7560 ;; Defined at:
  7561 ;;		line 58 in file "mcc_generated_files/cmp1.c"
  7562 ;; Parameters:    Size  Location     Type
  7563 ;;		None
  7564 ;; Auto vars:     Size  Location     Type
  7565 ;;		None
  7566 ;; Return value:  Size  Location     Type
  7567 ;;                  1    wreg      void 
  7568 ;; Registers used:
  7569 ;;		wreg
  7570 ;; Tracked objects:
  7571 ;;		On entry : B1F/8
  7572 ;;		On exit  : B1F/2
  7573 ;;		Unchanged: B00/0
  7574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7575 ;;      Params:         0       0       0       0       0       0
  7576 ;;      Locals:         0       0       0       0       0       0
  7577 ;;      Temps:          0       0       0       0       0       0
  7578 ;;      Totals:         0       0       0       0       0       0
  7579 ;;Total ram usage:        0 bytes
  7580 ;; Hardware stack levels used: 1
  7581 ;; Hardware stack levels required when called: 5
  7582 ;; This function calls:
  7583 ;;		Nothing
  7584 ;; This function is called by:
  7585 ;;		_SYSTEM_Initialize
  7586 ;; This function uses a non-reentrant model
  7587 ;;
  7588                           
  7589     0B92                     _CMP1_Initialize:	
  7590                           ;psect for function _CMP1_Initialize
  7591                           
  7592                           
  7593                           ;mcc_generated_files/cmp1.c: 62:     CM1CON0 = 0x84;
  7594                           
  7595                           ;incstack = 0
  7596                           ; Regs used in _CMP1_Initialize: [wreg]
  7597     0B92  3084               	movlw	132
  7598     0B93  0022               	movlb	2	; select bank2
  7599     0B94  0091               	movwf	17	;volatile
  7600                           
  7601                           ;mcc_generated_files/cmp1.c: 65:     CM1CON1 = 0x10;
  7602     0B95  3010               	movlw	16
  7603     0B96  0092               	movwf	18	;volatile
  7604     0B97  0008               	return
  7605     0B98                     __end_of_CMP1_Initialize:
  7606                           
  7607                           	psect	text38
  7608     0BC5                     __ptext38:	
  7609 ;; *************** function _ADC_Initialize *****************
  7610 ;; Defined at:
  7611 ;;		line 67 in file "mcc_generated_files/adc.c"
  7612 ;; Parameters:    Size  Location     Type
  7613 ;;		None
  7614 ;; Auto vars:     Size  Location     Type
  7615 ;;		None
  7616 ;; Return value:  Size  Location     Type
  7617 ;;                  1    wreg      void 
  7618 ;; Registers used:
  7619 ;;		wreg, status,2
  7620 ;; Tracked objects:
  7621 ;;		On entry : 1F/2
  7622 ;;		On exit  : 1F/1
  7623 ;;		Unchanged: 0/0
  7624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7625 ;;      Params:         0       0       0       0       0       0
  7626 ;;      Locals:         0       0       0       0       0       0
  7627 ;;      Temps:          0       0       0       0       0       0
  7628 ;;      Totals:         0       0       0       0       0       0
  7629 ;;Total ram usage:        0 bytes
  7630 ;; Hardware stack levels used: 1
  7631 ;; Hardware stack levels required when called: 5
  7632 ;; This function calls:
  7633 ;;		Nothing
  7634 ;; This function is called by:
  7635 ;;		_SYSTEM_Initialize
  7636 ;; This function uses a non-reentrant model
  7637 ;;
  7638                           
  7639     0BC5                     _ADC_Initialize:	
  7640                           ;psect for function _ADC_Initialize
  7641                           
  7642                           
  7643                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0xD3;
  7644                           
  7645                           ;incstack = 0
  7646                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  7647     0BC5  30D3               	movlw	211
  7648     0BC6  0021               	movlb	1	; select bank1
  7649     0BC7  009E               	movwf	30	;volatile
  7650                           
  7651                           ;mcc_generated_files/adc.c: 75:     ADRESL = 0x00;
  7652     0BC8  019B               	clrf	27	;volatile
  7653                           
  7654                           ;mcc_generated_files/adc.c: 78:     ADRESH = 0x00;
  7655     0BC9  019C               	clrf	28	;volatile
  7656                           
  7657                           ;mcc_generated_files/adc.c: 81:     ADCON0 = 0x01;
  7658     0BCA  3001               	movlw	1
  7659     0BCB  009D               	movwf	29	;volatile
  7660     0BCC  0008               	return
  7661     0BCD                     __end_of_ADC_Initialize:
  7662                           
  7663                           	psect	text39
  7664     0B88                     __ptext39:	
  7665 ;; *************** function _EUSART_is_rx_ready *****************
  7666 ;; Defined at:
  7667 ;;		line 99 in file "mcc_generated_files/eusart.c"
  7668 ;; Parameters:    Size  Location     Type
  7669 ;;		None
  7670 ;; Auto vars:     Size  Location     Type
  7671 ;;		None
  7672 ;; Return value:  Size  Location     Type
  7673 ;;                  1    wreg      _Bool 
  7674 ;; Registers used:
  7675 ;;		wreg, status,2, status,0
  7676 ;; Tracked objects:
  7677 ;;		On entry : 17/0
  7678 ;;		On exit  : 1F/0
  7679 ;;		Unchanged: 0/0
  7680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7681 ;;      Params:         0       0       0       0       0       0
  7682 ;;      Locals:         0       0       0       0       0       0
  7683 ;;      Temps:          0       0       0       0       0       0
  7684 ;;      Totals:         0       0       0       0       0       0
  7685 ;;Total ram usage:        0 bytes
  7686 ;; Hardware stack levels used: 1
  7687 ;; Hardware stack levels required when called: 5
  7688 ;; This function calls:
  7689 ;;		Nothing
  7690 ;; This function is called by:
  7691 ;;		_main
  7692 ;; This function uses a non-reentrant model
  7693 ;;
  7694                           
  7695     0B88                     _EUSART_is_rx_ready:	
  7696                           ;psect for function _EUSART_is_rx_ready
  7697                           
  7698                           
  7699                           ;mcc_generated_files/eusart.c: 101:     return (_Bool)(PIR1bits.RCIF);
  7700                           
  7701                           ;incstack = 0
  7702                           ; Regs used in _EUSART_is_rx_ready: [wreg+status,2+status,0]
  7703     0B88  0020               	movlb	0	; select bank0
  7704     0B89  0E11               	swapf	17,w	;volatile
  7705     0B8A  0C89               	rrf	9,f
  7706     0B8B  3901               	andlw	1
  7707     0B8C  0008               	return
  7708     0B8D                     __end_of_EUSART_is_rx_ready:
  7709                           
  7710                           	psect	text40
  7711     0C27                     __ptext40:	
  7712 ;; *************** function _EUSART_Read *****************
  7713 ;; Defined at:
  7714 ;;		line 113 in file "mcc_generated_files/eusart.c"
  7715 ;; Parameters:    Size  Location     Type
  7716 ;;		None
  7717 ;; Auto vars:     Size  Location     Type
  7718 ;;		None
  7719 ;; Return value:  Size  Location     Type
  7720 ;;                  1    wreg      unsigned char 
  7721 ;; Registers used:
  7722 ;;		wreg, status,2
  7723 ;; Tracked objects:
  7724 ;;		On entry : 1F/1
  7725 ;;		On exit  : 1F/3
  7726 ;;		Unchanged: 0/0
  7727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7728 ;;      Params:         0       0       0       0       0       0
  7729 ;;      Locals:         0       0       0       0       0       0
  7730 ;;      Temps:          0       0       0       0       0       0
  7731 ;;      Totals:         0       0       0       0       0       0
  7732 ;;Total ram usage:        0 bytes
  7733 ;; Hardware stack levels used: 1
  7734 ;; Hardware stack levels required when called: 5
  7735 ;; This function calls:
  7736 ;;		Nothing
  7737 ;; This function is called by:
  7738 ;;		_main
  7739 ;; This function uses a non-reentrant model
  7740 ;;
  7741                           
  7742     0C27                     _EUSART_Read:	
  7743                           ;psect for function _EUSART_Read
  7744                           
  7745     0C27                     l240:	
  7746                           ;mcc_generated_files/eusart.c: 116:     {;mcc_generated_files/eusart.c: 117:     }
  7747                           
  7748                           ;incstack = 0
  7749                           ; Regs used in _EUSART_Read: [wreg+status,2]
  7750                           
  7751                           
  7752                           ;mcc_generated_files/eusart.c: 115:     while(!PIR1bits.RCIF)
  7753     0C27  0020               	movlb	0	; select bank0
  7754     0C28  1E91               	btfss	17,5	;volatile
  7755     0C29  2C27               	goto	l240
  7756                           
  7757                           ;mcc_generated_files/eusart.c: 119:     eusartRxLastError.status = 0;
  7758     0C2A  0021               	movlb	1	; select bank1
  7759     0C2B  01CB               	clrf	_eusartRxLastError^(0+128)	;volatile
  7760                           
  7761                           ;mcc_generated_files/eusart.c: 121:     if(1 == RCSTAbits.OERR)
  7762     0C2C  0023               	movlb	3	; select bank3
  7763     0C2D  1C9D               	btfss	29,1	;volatile
  7764     0C2E  2C31               	goto	l2922
  7765                           
  7766                           ;mcc_generated_files/eusart.c: 122:     {;mcc_generated_files/eusart.c: 125:         RCS
      +                          TAbits.CREN = 0;
  7767     0C2F  121D               	bcf	29,4	;volatile
  7768                           
  7769                           ;mcc_generated_files/eusart.c: 126:         RCSTAbits.CREN = 1;
  7770     0C30  161D               	bsf	29,4	;volatile
  7771     0C31                     l2922:
  7772                           
  7773                           ;mcc_generated_files/eusart.c: 129:     return RCREG;
  7774     0C31  0819               	movf	25,w	;volatile
  7775     0C32  0008               	return
  7776     0C33                     __end_of_EUSART_Read:
  7777                           
  7778                           	psect	text41
  7779     0CB6                     __ptext41:	
  7780 ;; *************** function _ADC_GetConversion *****************
  7781 ;; Defined at:
  7782 ;;		line 112 in file "mcc_generated_files/adc.c"
  7783 ;; Parameters:    Size  Location     Type
  7784 ;;  channel         1    wreg     enum E2495
  7785 ;; Auto vars:     Size  Location     Type
  7786 ;;  channel         1    3[BANK1 ] enum E2495
  7787 ;; Return value:  Size  Location     Type
  7788 ;;                  2    0[BANK1 ] unsigned short 
  7789 ;; Registers used:
  7790 ;;		wreg, status,2, status,0
  7791 ;; Tracked objects:
  7792 ;;		On entry : 1F/8
  7793 ;;		On exit  : 1F/1
  7794 ;;		Unchanged: 0/0
  7795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7796 ;;      Params:         0       0       2       0       0       0
  7797 ;;      Locals:         0       0       1       0       0       0
  7798 ;;      Temps:          0       0       1       0       0       0
  7799 ;;      Totals:         0       0       4       0       0       0
  7800 ;;Total ram usage:        4 bytes
  7801 ;; Hardware stack levels used: 1
  7802 ;; Hardware stack levels required when called: 5
  7803 ;; This function calls:
  7804 ;;		Nothing
  7805 ;; This function is called by:
  7806 ;;		_main
  7807 ;; This function uses a non-reentrant model
  7808 ;;
  7809                           
  7810     0CB6                     _ADC_GetConversion:	
  7811                           ;psect for function _ADC_GetConversion
  7812                           
  7813                           
  7814                           ;incstack = 0
  7815                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
  7816                           ;ADC_GetConversion@channel stored from wreg
  7817     0CB6  0021               	movlb	1	; select bank1
  7818     0CB7  00CF               	movwf	ADC_GetConversion@channel^(0+128)
  7819                           
  7820                           ;mcc_generated_files/adc.c: 112: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 113: {;mcc_generated_files/adc.c: 115:     ADCON0bits.CHS = ch
      +                          annel;
  7821     0CB8  084F               	movf	ADC_GetConversion@channel^(0+128),w
  7822     0CB9  00CE               	movwf	??_ADC_GetConversion^(0+128)
  7823     0CBA  0DCE               	rlf	??_ADC_GetConversion^(0+128),f
  7824     0CBB  0DCE               	rlf	??_ADC_GetConversion^(0+128),f
  7825     0CBC  081D               	movf	29,w	;volatile
  7826     0CBD  064E               	xorwf	??_ADC_GetConversion^(0+128),w
  7827     0CBE  3983               	andlw	-125
  7828     0CBF  064E               	xorwf	??_ADC_GetConversion^(0+128),w
  7829     0CC0  009D               	movwf	29	;volatile
  7830                           
  7831                           ;mcc_generated_files/adc.c: 118:     ADCON0bits.ADON = 1;
  7832     0CC1  141D               	bsf	29,0	;volatile
  7833                           
  7834                           ;mcc_generated_files/adc.c: 121:     _delay((unsigned long)((5)*(16000000/4000000.0)));
  7835     0CC2  3006               	movlw	6
  7836     0CC3                     u3067:
  7837     0CC3  0B89               	decfsz	9,f
  7838     0CC4  2CC3               	goto	u3067
  7839     0CC5  3200               	nop2
  7840                           
  7841                           ;mcc_generated_files/adc.c: 124:     ADCON0bits.GO_nDONE = 1;
  7842     0CC6  0021               	movlb	1	; select bank1
  7843     0CC7  149D               	bsf	29,1	;volatile
  7844     0CC8                     l333:	
  7845                           ;mcc_generated_files/adc.c: 128:     {;mcc_generated_files/adc.c: 129:     }
  7846                           
  7847                           
  7848                           ;mcc_generated_files/adc.c: 127:     while (ADCON0bits.GO_nDONE)
  7849     0CC8  189D               	btfsc	29,1	;volatile
  7850     0CC9  2CC8               	goto	l333
  7851                           
  7852                           ;mcc_generated_files/adc.c: 132:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  7853     0CCA  081C               	movf	28,w	;volatile
  7854     0CCB  00CD               	movwf	(?_ADC_GetConversion+1)^(0+128)
  7855     0CCC  081B               	movf	27,w	;volatile
  7856     0CCD  00CC               	movwf	?_ADC_GetConversion^(0+128)
  7857     0CCE  0008               	return
  7858     0CCF                     __end_of_ADC_GetConversion:
  7859                           
  7860                           	psect	intentry
  7861     0004                     __pintentry:	
  7862 ;; *************** function _INTERRUPT_InterruptManager *****************
  7863 ;; Defined at:
  7864 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  7865 ;; Parameters:    Size  Location     Type
  7866 ;;		None
  7867 ;; Auto vars:     Size  Location     Type
  7868 ;;		None
  7869 ;; Return value:  Size  Location     Type
  7870 ;;                  1    wreg      void 
  7871 ;; Registers used:
  7872 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7873 ;; Tracked objects:
  7874 ;;		On entry : 0/0
  7875 ;;		On exit  : 0/0
  7876 ;;		Unchanged: 0/0
  7877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7878 ;;      Params:         0       0       0       0       0       0
  7879 ;;      Locals:         0       0       0       0       0       0
  7880 ;;      Temps:          0       0       0       0       0       0
  7881 ;;      Totals:         0       0       0       0       0       0
  7882 ;;Total ram usage:        0 bytes
  7883 ;; Hardware stack levels used: 1
  7884 ;; Hardware stack levels required when called: 4
  7885 ;; This function calls:
  7886 ;;		_PIN_MANAGER_IOC
  7887 ;;		_TMR1_GATE_ISR
  7888 ;; This function is called by:
  7889 ;;		Interrupt level 1
  7890 ;; This function uses a non-reentrant model
  7891 ;;
  7892                           
  7893     0004                     _INTERRUPT_InterruptManager:
  7894                           
  7895                           ;incstack = 0
  7896     0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  7897                           
  7898                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7899     0005  3180               	pagesel	$
  7900                           
  7901                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.IOCIE == 1 && INTCONbits
      +                          .IOCIF == 1)
  7902     0006  198B               	btfsc	11,3	;volatile
  7903     0007  1C0B               	btfss	11,0	;volatile
  7904     0008  280D               	goto	i1l174
  7905                           
  7906                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         PIN_MANAGER_IOC();
  7907     0009  318B  2375  3180   	fcall	_PIN_MANAGER_IOC
  7908                           
  7909                           ;mcc_generated_files/interrupt_manager.c: 58:     }
  7910     000C  2817               	goto	i1l180
  7911     000D                     i1l174:	
  7912                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
  7913                           
  7914     000D  1F0B               	btfss	11,6	;volatile
  7915     000E  2817               	goto	i1l180
  7916                           
  7917                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE1bits.TMR1GIE == 1 && PIR1bits.TMR1GIF == 1)
  7918     000F  0021               	movlb	1	; select bank1
  7919     0010  1F91               	btfss	17,7	;volatile
  7920     0011  2817               	goto	i1l180
  7921     0012  0020               	movlb	0	; select bank0
  7922     0013  1F91               	btfss	17,7	;volatile
  7923     0014  2817               	goto	i1l180
  7924                           
  7925                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             TMR1_GATE_ISR();
  7926     0015  318C  241C         	fcall	_TMR1_GATE_ISR
  7927     0017                     i1l180:	
  7928                           ;mcc_generated_files/interrupt_manager.c: 71:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 73:     }
  7929                           
  7930                           ;mcc_generated_files/interrupt_manager.c: 64:         }
  7931                           
  7932     0017  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  7933     0018  0009               	retfie
  7934     0019                     __end_of_INTERRUPT_InterruptManager:
  7935                           
  7936                           	psect	text43
  7937     0C1C                     __ptext43:	
  7938 ;; *************** function _TMR1_GATE_ISR *****************
  7939 ;; Defined at:
  7940 ;;		line 166 in file "mcc_generated_files/tmr1.c"
  7941 ;; Parameters:    Size  Location     Type
  7942 ;;		None
  7943 ;; Auto vars:     Size  Location     Type
  7944 ;;		None
  7945 ;; Return value:  Size  Location     Type
  7946 ;;                  1    wreg      void 
  7947 ;; Registers used:
  7948 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7949 ;; Tracked objects:
  7950 ;;		On entry : 1F/0
  7951 ;;		On exit  : 0/0
  7952 ;;		Unchanged: 0/0
  7953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7954 ;;      Params:         0       0       0       0       0       0
  7955 ;;      Locals:         0       0       0       0       0       0
  7956 ;;      Temps:          0       0       0       0       0       0
  7957 ;;      Totals:         0       0       0       0       0       0
  7958 ;;Total ram usage:        0 bytes
  7959 ;; Hardware stack levels used: 1
  7960 ;; Hardware stack levels required when called: 3
  7961 ;; This function calls:
  7962 ;;		NULL
  7963 ;;		_TMR1_DefaultGateInterruptHandler
  7964 ;;		_mede_height
  7965 ;; This function is called by:
  7966 ;;		_INTERRUPT_InterruptManager
  7967 ;; This function uses a non-reentrant model
  7968 ;;
  7969                           
  7970     0C1C                     _TMR1_GATE_ISR:	
  7971                           ;psect for function _TMR1_GATE_ISR
  7972                           
  7973                           
  7974                           ;mcc_generated_files/tmr1.c: 169:     PIR1bits.TMR1GIF = 0;
  7975                           
  7976                           ;incstack = 0
  7977                           ; Regs used in _TMR1_GATE_ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7978     0C1C  1391               	bcf	17,7	;volatile
  7979                           
  7980                           ;mcc_generated_files/tmr1.c: 171:     if(TMR1_GateInterruptHandler)
  7981     0C1D  086E               	movf	_TMR1_GateInterruptHandler,w
  7982     0C1E  046F               	iorwf	_TMR1_GateInterruptHandler+1,w
  7983     0C1F  1903               	btfsc	3,2
  7984     0C20  0008               	return
  7985                           
  7986                           ;mcc_generated_files/tmr1.c: 172:     {;mcc_generated_files/tmr1.c: 173:         TMR1_Ga
      +                          teInterruptHandler();
  7987     0C21  086F               	movf	_TMR1_GateInterruptHandler+1,w
  7988     0C22  008A               	movwf	10
  7989     0C23  086E               	movf	_TMR1_GateInterruptHandler,w
  7990     0C24  000A               	callw
  7991     0C25  318C               	pagesel	$
  7992     0C26  0008               	return
  7993     0C27                     __end_of_TMR1_GATE_ISR:
  7994                           
  7995                           	psect	text44
  7996     0002                     __ptext44:	
  7997 ;; *************** function _TMR1_DefaultGateInterruptHandler *****************
  7998 ;; Defined at:
  7999 ;;		line 181 in file "mcc_generated_files/tmr1.c"
  8000 ;; Parameters:    Size  Location     Type
  8001 ;;		None
  8002 ;; Auto vars:     Size  Location     Type
  8003 ;;		None
  8004 ;; Return value:  Size  Location     Type
  8005 ;;                  1    wreg      void 
  8006 ;; Registers used:
  8007 ;;		None
  8008 ;; Tracked objects:
  8009 ;;		On entry : 1F/0
  8010 ;;		On exit  : 1F/0
  8011 ;;		Unchanged: 1F/0
  8012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8013 ;;      Params:         0       0       0       0       0       0
  8014 ;;      Locals:         0       0       0       0       0       0
  8015 ;;      Temps:          0       0       0       0       0       0
  8016 ;;      Totals:         0       0       0       0       0       0
  8017 ;;Total ram usage:        0 bytes
  8018 ;; Hardware stack levels used: 1
  8019 ;; This function calls:
  8020 ;;		Nothing
  8021 ;; This function is called by:
  8022 ;;		_TMR1_Initialize
  8023 ;;		_TMR1_GATE_ISR
  8024 ;; This function uses a non-reentrant model
  8025 ;;
  8026                           
  8027     0002                     _TMR1_DefaultGateInterruptHandler:	
  8028                           ;psect for function _TMR1_DefaultGateInterruptHandler
  8029                           
  8030                           
  8031                           ;incstack = 0
  8032                           ; Regs used in _TMR1_DefaultGateInterruptHandler: []
  8033     0002  0008               	return
  8034     0003                     __end_of_TMR1_DefaultGateInterruptHandler:
  8035                           
  8036                           	psect	text45
  8037     05E2                     __ptext45:	
  8038 ;; *************** function _mede_height *****************
  8039 ;; Defined at:
  8040 ;;		line 301 in file "main.c"
  8041 ;; Parameters:    Size  Location     Type
  8042 ;;		None
  8043 ;; Auto vars:     Size  Location     Type
  8044 ;;		None
  8045 ;; Return value:  Size  Location     Type
  8046 ;;                  1    wreg      void 
  8047 ;; Registers used:
  8048 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8049 ;; Tracked objects:
  8050 ;;		On entry : 1F/0
  8051 ;;		On exit  : 1F/1
  8052 ;;		Unchanged: 0/0
  8053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8054 ;;      Params:         0       0       0       0       0       0
  8055 ;;      Locals:         0       0       0       0       0       0
  8056 ;;      Temps:          0       6       0       0       0       0
  8057 ;;      Totals:         0       6       0       0       0       0
  8058 ;;Total ram usage:        6 bytes
  8059 ;; Hardware stack levels used: 1
  8060 ;; Hardware stack levels required when called: 2
  8061 ;; This function calls:
  8062 ;;		_TMR1_ReadTimer
  8063 ;;		_TMR1_Reload
  8064 ;;		___flmul
  8065 ;;		___xxtofl
  8066 ;;		i1___fltol
  8067 ;;		i1___lwdiv
  8068 ;; This function is called by:
  8069 ;;		_main
  8070 ;;		_TMR1_GATE_ISR
  8071 ;; This function uses a non-reentrant model
  8072 ;;
  8073                           
  8074     05E2                     _mede_height:	
  8075                           ;psect for function _mede_height
  8076                           
  8077                           
  8078                           ;main.c: 302:     tempo_voo = TMR1_ReadTimer();
  8079                           
  8080                           ;incstack = 0
  8081                           ; Regs used in _mede_height: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8082     05E2  318C  249E  3185   	fcall	_TMR1_ReadTimer
  8083     05E5  0871               	movf	?_TMR1_ReadTimer+1,w
  8084     05E6  00E2               	movwf	_tempo_voo+1
  8085     05E7  0870               	movf	?_TMR1_ReadTimer,w
  8086     05E8  00E1               	movwf	_tempo_voo
  8087                           
  8088                           ;main.c: 303:     TMR1_Reload();
  8089     05E9  318B  23BD  3185   	fcall	_TMR1_Reload
  8090                           
  8091                           ;main.c: 304:     if (first_read == 1){
  8092     05EC  036D               	decf	_first_read,w
  8093     05ED  1D03               	btfss	3,2
  8094     05EE  2E0B               	goto	i1l2858
  8095                           
  8096                           ;main.c: 305:         avg_tempo_voo = tempo_voo;
  8097     05EF  0861               	movf	_tempo_voo,w
  8098     05F0  00BF               	movwf	___xxtofl@val
  8099     05F1  0862               	movf	_tempo_voo+1,w
  8100     05F2  00C0               	movwf	___xxtofl@val+1
  8101     05F3  01C1               	clrf	___xxtofl@val+2
  8102     05F4  01C2               	clrf	___xxtofl@val+3
  8103     05F5  3000               	movlw	0
  8104     05F6  3187  2739  3185   	fcall	___xxtofl
  8105     05F9  0842               	movf	?___xxtofl+3,w
  8106     05FA  0021               	movlb	1	; select bank1
  8107     05FB  00A3               	movwf	(_avg_tempo_voo+3)^(0+128)
  8108     05FC  0020               	movlb	0	; select bank0
  8109     05FD  0841               	movf	?___xxtofl+2,w
  8110     05FE  0021               	movlb	1	; select bank1
  8111     05FF  00A2               	movwf	(_avg_tempo_voo+2)^(0+128)
  8112     0600  0020               	movlb	0	; select bank0
  8113     0601  0840               	movf	?___xxtofl+1,w
  8114     0602  0021               	movlb	1	; select bank1
  8115     0603  00A1               	movwf	(_avg_tempo_voo+1)^(0+128)
  8116     0604  0020               	movlb	0	; select bank0
  8117     0605  083F               	movf	?___xxtofl,w
  8118     0606  0021               	movlb	1	; select bank1
  8119     0607  00A0               	movwf	_avg_tempo_voo^(0+128)
  8120                           
  8121                           ;main.c: 306:         first_read = 0;
  8122     0608  0020               	movlb	0	; select bank0
  8123     0609  01ED               	clrf	_first_read
  8124                           
  8125                           ;main.c: 307:     }
  8126     060A  2E47               	goto	i1l2860
  8127     060B                     i1l2858:
  8128                           
  8129                           ;main.c: 309:         avg_tempo_voo = ((uint16_t)avg_tempo_voo + (tempo_voo))>>1;
  8130     060B  0021               	movlb	1	; select bank1
  8131     060C  0823               	movf	(_avg_tempo_voo+3)^(0+128),w
  8132     060D  0020               	movlb	0	; select bank0
  8133     060E  00B8               	movwf	i1___fltol@f1+3
  8134     060F  0021               	movlb	1	; select bank1
  8135     0610  0822               	movf	(_avg_tempo_voo+2)^(0+128),w
  8136     0611  0020               	movlb	0	; select bank0
  8137     0612  00B7               	movwf	i1___fltol@f1+2
  8138     0613  0021               	movlb	1	; select bank1
  8139     0614  0821               	movf	(_avg_tempo_voo+1)^(0+128),w
  8140     0615  0020               	movlb	0	; select bank0
  8141     0616  00B6               	movwf	i1___fltol@f1+1
  8142     0617  0021               	movlb	1	; select bank1
  8143     0618  0820               	movf	_avg_tempo_voo^(0+128),w
  8144     0619  0020               	movlb	0	; select bank0
  8145     061A  00B5               	movwf	i1___fltol@f1
  8146     061B  318E  2660  3185   	fcall	i1___fltol
  8147     061E  0861               	movf	_tempo_voo,w
  8148     061F  0735               	addwf	?i1___fltol,w
  8149     0620  00CD               	movwf	??_mede_height
  8150     0621  0862               	movf	_tempo_voo+1,w
  8151     0622  3D36               	addwfc	?i1___fltol+1,w
  8152     0623  00CE               	movwf	??_mede_height+1
  8153     0624  36CE               	lsrf	??_mede_height+1,f
  8154     0625  0CCD               	rrf	??_mede_height,f
  8155     0626  084D               	movf	??_mede_height,w
  8156     0627  00CF               	movwf	??_mede_height+2
  8157     0628  084E               	movf	??_mede_height+1,w
  8158     0629  00D0               	movwf	??_mede_height+3
  8159     062A  01D1               	clrf	??_mede_height+4
  8160     062B  01D2               	clrf	??_mede_height+5
  8161     062C  0852               	movf	??_mede_height+5,w
  8162     062D  00C2               	movwf	___xxtofl@val+3
  8163     062E  0851               	movf	??_mede_height+4,w
  8164     062F  00C1               	movwf	___xxtofl@val+2
  8165     0630  0850               	movf	??_mede_height+3,w
  8166     0631  00C0               	movwf	___xxtofl@val+1
  8167     0632  084F               	movf	??_mede_height+2,w
  8168     0633  00BF               	movwf	___xxtofl@val
  8169     0634  3000               	movlw	0
  8170     0635  3187  2739  3185   	fcall	___xxtofl
  8171     0638  0842               	movf	?___xxtofl+3,w
  8172     0639  0021               	movlb	1	; select bank1
  8173     063A  00A3               	movwf	(_avg_tempo_voo+3)^(0+128)
  8174     063B  0020               	movlb	0	; select bank0
  8175     063C  0841               	movf	?___xxtofl+2,w
  8176     063D  0021               	movlb	1	; select bank1
  8177     063E  00A2               	movwf	(_avg_tempo_voo+2)^(0+128)
  8178     063F  0020               	movlb	0	; select bank0
  8179     0640  0840               	movf	?___xxtofl+1,w
  8180     0641  0021               	movlb	1	; select bank1
  8181     0642  00A1               	movwf	(_avg_tempo_voo+1)^(0+128)
  8182     0643  0020               	movlb	0	; select bank0
  8183     0644  083F               	movf	?___xxtofl,w
  8184     0645  0021               	movlb	1	; select bank1
  8185     0646  00A0               	movwf	_avg_tempo_voo^(0+128)
  8186     0647                     i1l2860:
  8187                           
  8188                           ;main.c: 311:     height = (uint16_t)(avg_tempo_voo*lookupTable[(int)(adc_temp/10)]);
  8189     0647  0021               	movlb	1	; select bank1
  8190     0648  0836               	movf	(_adc_temp+1)^(0+128),w
  8191     0649  00F3               	movwf	i1___lwdiv@dividend+1
  8192     064A  0835               	movf	_adc_temp^(0+128),w
  8193     064B  00F2               	movwf	i1___lwdiv@dividend
  8194     064C  300A               	movlw	10
  8195     064D  00F0               	movwf	i1___lwdiv@divisor
  8196     064E  3000               	movlw	0
  8197     064F  00F1               	movwf	i1___lwdiv@divisor+1
  8198     0650  318D  2597  3185   	fcall	i1___lwdiv
  8199     0653  0871               	movf	?i1___lwdiv+1,w
  8200     0654  0085               	movwf	5
  8201     0655  0870               	movf	?i1___lwdiv,w
  8202     0656  0084               	movwf	4
  8203     0657  3584               	lslf	4,f
  8204     0658  0D85               	rlf	5,f
  8205     0659  3584               	lslf	4,f
  8206     065A  0D85               	rlf	5,f
  8207     065B  304A               	movlw	low _lookupTable
  8208     065C  0784               	addwf	4,f
  8209     065D  3004               	movlw	high _lookupTable
  8210     065E  3D05               	addwfc	5,w
  8211     065F  3880               	iorlw	128
  8212     0660  0085               	movwf	5
  8213     0661  3F00               	moviw [0]fsr0
  8214     0662  0020               	movlb	0	; select bank0
  8215     0663  00CD               	movwf	??_mede_height
  8216     0664  3F01               	moviw [1]fsr0
  8217     0665  00CE               	movwf	??_mede_height+1
  8218     0666  3F02               	moviw [2]fsr0
  8219     0667  00CF               	movwf	??_mede_height+2
  8220     0668  3F03               	moviw [3]fsr0
  8221     0669  00D0               	movwf	??_mede_height+3
  8222     066A  0850               	movf	??_mede_height+3,w
  8223     066B  00A7               	movwf	___flmul@a+3
  8224     066C  084F               	movf	??_mede_height+2,w
  8225     066D  00A6               	movwf	___flmul@a+2
  8226     066E  084E               	movf	??_mede_height+1,w
  8227     066F  00A5               	movwf	___flmul@a+1
  8228     0670  084D               	movf	??_mede_height,w
  8229     0671  00A4               	movwf	___flmul@a
  8230     0672  0021               	movlb	1	; select bank1
  8231     0673  0823               	movf	(_avg_tempo_voo+3)^(0+128),w
  8232     0674  0020               	movlb	0	; select bank0
  8233     0675  00A3               	movwf	___flmul@b+3
  8234     0676  0021               	movlb	1	; select bank1
  8235     0677  0822               	movf	(_avg_tempo_voo+2)^(0+128),w
  8236     0678  0020               	movlb	0	; select bank0
  8237     0679  00A2               	movwf	___flmul@b+2
  8238     067A  0021               	movlb	1	; select bank1
  8239     067B  0821               	movf	(_avg_tempo_voo+1)^(0+128),w
  8240     067C  0020               	movlb	0	; select bank0
  8241     067D  00A1               	movwf	___flmul@b+1
  8242     067E  0021               	movlb	1	; select bank1
  8243     067F  0820               	movf	_avg_tempo_voo^(0+128),w
  8244     0680  0020               	movlb	0	; select bank0
  8245     0681  00A0               	movwf	___flmul@b
  8246     0682  3180  204B  3185   	fcall	___flmul
  8247     0685  0823               	movf	?___flmul+3,w
  8248     0686  00B8               	movwf	i1___fltol@f1+3
  8249     0687  0822               	movf	?___flmul+2,w
  8250     0688  00B7               	movwf	i1___fltol@f1+2
  8251     0689  0821               	movf	?___flmul+1,w
  8252     068A  00B6               	movwf	i1___fltol@f1+1
  8253     068B  0820               	movf	?___flmul,w
  8254     068C  00B5               	movwf	i1___fltol@f1
  8255     068D  318E  2660         	fcall	i1___fltol
  8256     068F  0836               	movf	?i1___fltol+1,w
  8257     0690  0021               	movlb	1	; select bank1
  8258     0691  00B4               	movwf	(_height+1)^(0+128)
  8259     0692  0020               	movlb	0	; select bank0
  8260     0693  0835               	movf	?i1___fltol,w
  8261     0694  0021               	movlb	1	; select bank1
  8262     0695  00B3               	movwf	_height^(0+128)
  8263                           
  8264                           ;main.c: 312:     balldist = height;
  8265     0696  0833               	movf	_height^(0+128),w
  8266     0697  00AA               	movwf	_balldist^(0+128)
  8267     0698  0834               	movf	(_height+1)^(0+128),w
  8268     0699  00AB               	movwf	(_balldist+1)^(0+128)
  8269     069A  01AC               	clrf	(_balldist+2)^(0+128)
  8270     069B  0008               	return
  8271     069C                     __end_of_mede_height:
  8272                           
  8273                           	psect	text46
  8274     0D97                     __ptext46:	
  8275 ;; *************** function i1___lwdiv *****************
  8276 ;; Defined at:
  8277 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lwdiv.c"
  8278 ;; Parameters:    Size  Location     Type
  8279 ;;  divisor         2    0[COMMON] unsigned int 
  8280 ;;  dividend        2    2[COMMON] unsigned int 
  8281 ;; Auto vars:     Size  Location     Type
  8282 ;;  quotient        2    5[COMMON] unsigned int 
  8283 ;;  counter         1    7[COMMON] unsigned char 
  8284 ;; Return value:  Size  Location     Type
  8285 ;;                  2    0[COMMON] unsigned int 
  8286 ;; Registers used:
  8287 ;;		wreg, status,2, status,0
  8288 ;; Tracked objects:
  8289 ;;		On entry : 1F/1
  8290 ;;		On exit  : 1F/1
  8291 ;;		Unchanged: 1F/0
  8292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8293 ;;      Params:         4       0       0       0       0       0
  8294 ;;      Locals:         3       0       0       0       0       0
  8295 ;;      Temps:          1       0       0       0       0       0
  8296 ;;      Totals:         8       0       0       0       0       0
  8297 ;;Total ram usage:        8 bytes
  8298 ;; Hardware stack levels used: 1
  8299 ;; This function calls:
  8300 ;;		Nothing
  8301 ;; This function is called by:
  8302 ;;		_mede_height
  8303 ;; This function uses a non-reentrant model
  8304 ;;
  8305                           
  8306     0D97                     i1___lwdiv:	
  8307                           ;psect for function i1___lwdiv
  8308                           
  8309                           
  8310                           ;incstack = 0
  8311                           ; Regs used in i1___lwdiv: [wreg+status,2+status,0]
  8312     0D97  01F5               	clrf	i1___lwdiv@quotient
  8313     0D98  01F6               	clrf	i1___lwdiv@quotient+1
  8314     0D99  0870               	movf	i1___lwdiv@divisor,w
  8315     0D9A  0471               	iorwf	i1___lwdiv@divisor+1,w
  8316     0D9B  1903               	btfsc	3,2
  8317     0D9C  2DC6               	goto	i1l2656
  8318     0D9D  01F7               	clrf	i1___lwdiv@counter
  8319     0D9E  0AF7               	incf	i1___lwdiv@counter,f
  8320     0D9F                     i1l2644:
  8321     0D9F  1BF1               	btfsc	i1___lwdiv@divisor+1,7
  8322     0DA0  2DAB               	goto	i1l2646
  8323     0DA1  3001               	movlw	1
  8324     0DA2                     u231_25:
  8325     0DA2  35F0               	lslf	i1___lwdiv@divisor,f
  8326     0DA3  0DF1               	rlf	i1___lwdiv@divisor+1,f
  8327     0DA4  0B89               	decfsz	9,f
  8328     0DA5  2DA2               	goto	u231_25
  8329     0DA6  3001               	movlw	1
  8330     0DA7  00F4               	movwf	??i1___lwdiv
  8331     0DA8  0874               	movf	??i1___lwdiv,w
  8332     0DA9  07F7               	addwf	i1___lwdiv@counter,f
  8333     0DAA  2D9F               	goto	i1l2644
  8334     0DAB                     i1l2646:
  8335     0DAB  3001               	movlw	1
  8336     0DAC                     u233_25:
  8337     0DAC  35F5               	lslf	i1___lwdiv@quotient,f
  8338     0DAD  0DF6               	rlf	i1___lwdiv@quotient+1,f
  8339     0DAE  0B89               	decfsz	9,f
  8340     0DAF  2DAC               	goto	u233_25
  8341     0DB0  0871               	movf	i1___lwdiv@divisor+1,w
  8342     0DB1  0273               	subwf	i1___lwdiv@dividend+1,w
  8343     0DB2  1D03               	skipz
  8344     0DB3  2DB6               	goto	u234_25
  8345     0DB4  0870               	movf	i1___lwdiv@divisor,w
  8346     0DB5  0272               	subwf	i1___lwdiv@dividend,w
  8347     0DB6                     u234_25:
  8348     0DB6  1C03               	skipc
  8349     0DB7  2DBD               	goto	i1l2652
  8350     0DB8  0870               	movf	i1___lwdiv@divisor,w
  8351     0DB9  02F2               	subwf	i1___lwdiv@dividend,f
  8352     0DBA  0871               	movf	i1___lwdiv@divisor+1,w
  8353     0DBB  3BF3               	subwfb	i1___lwdiv@dividend+1,f
  8354     0DBC  1475               	bsf	i1___lwdiv@quotient,0
  8355     0DBD                     i1l2652:
  8356     0DBD  3001               	movlw	1
  8357     0DBE                     u235_25:
  8358     0DBE  36F1               	lsrf	i1___lwdiv@divisor+1,f
  8359     0DBF  0CF0               	rrf	i1___lwdiv@divisor,f
  8360     0DC0  0B89               	decfsz	9,f
  8361     0DC1  2DBE               	goto	u235_25
  8362     0DC2  3001               	movlw	1
  8363     0DC3  02F7               	subwf	i1___lwdiv@counter,f
  8364     0DC4  1D03               	btfss	3,2
  8365     0DC5  2DAB               	goto	i1l2646
  8366     0DC6                     i1l2656:
  8367     0DC6  0876               	movf	i1___lwdiv@quotient+1,w
  8368     0DC7  00F1               	movwf	?i1___lwdiv+1
  8369     0DC8  0875               	movf	i1___lwdiv@quotient,w
  8370     0DC9  00F0               	movwf	?i1___lwdiv
  8371     0DCA  0008               	return
  8372     0DCB                     __end_ofi1___lwdiv:
  8373                           
  8374                           	psect	text47
  8375     0E60                     __ptext47:	
  8376 ;; *************** function i1___fltol *****************
  8377 ;; Defined at:
  8378 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\fltol.c"
  8379 ;; Parameters:    Size  Location     Type
  8380 ;;  f1              4   21[BANK0 ] unsigned int 
  8381 ;; Auto vars:     Size  Location     Type
  8382 ;;  exp1            1   30[BANK0 ] unsigned char 
  8383 ;;  sign1           1   29[BANK0 ] unsigned char 
  8384 ;; Return value:  Size  Location     Type
  8385 ;;                  4   21[BANK0 ] long 
  8386 ;; Registers used:
  8387 ;;		wreg, status,2, status,0
  8388 ;; Tracked objects:
  8389 ;;		On entry : 1F/0
  8390 ;;		On exit  : 1F/0
  8391 ;;		Unchanged: 0/0
  8392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8393 ;;      Params:         0       4       0       0       0       0
  8394 ;;      Locals:         0       2       0       0       0       0
  8395 ;;      Temps:          0       4       0       0       0       0
  8396 ;;      Totals:         0      10       0       0       0       0
  8397 ;;Total ram usage:       10 bytes
  8398 ;; Hardware stack levels used: 1
  8399 ;; This function calls:
  8400 ;;		Nothing
  8401 ;; This function is called by:
  8402 ;;		_mede_height
  8403 ;; This function uses a non-reentrant model
  8404 ;;
  8405                           
  8406     0E60                     i1___fltol:	
  8407                           ;psect for function i1___fltol
  8408                           
  8409                           
  8410                           ;incstack = 0
  8411                           ; Regs used in i1___fltol: [wreg+status,2+status,0]
  8412     0E60  1003               	clrc
  8413     0E61  0D37               	rlf	i1___fltol@f1+2,w
  8414     0E62  0D38               	rlf	i1___fltol@f1+3,w
  8415     0E63  00BE               	movwf	i1___fltol@exp1
  8416     0E64  083E               	movf	i1___fltol@exp1,w
  8417     0E65  1D03               	btfss	3,2
  8418     0E66  2E70               	goto	i1l2604
  8419     0E67                     i1l2600:
  8420     0E67  3000               	movlw	0
  8421     0E68  00B8               	movwf	?i1___fltol+3
  8422     0E69  3000               	movlw	0
  8423     0E6A  00B7               	movwf	?i1___fltol+2
  8424     0E6B  3000               	movlw	0
  8425     0E6C  00B6               	movwf	?i1___fltol+1
  8426     0E6D  3000               	movlw	0
  8427     0E6E  00B5               	movwf	?i1___fltol
  8428     0E6F  0008               	return
  8429     0E70                     i1l2604:
  8430     0E70  0835               	movf	i1___fltol@f1,w
  8431     0E71  00B9               	movwf	??i1___fltol
  8432     0E72  0836               	movf	i1___fltol@f1+1,w
  8433     0E73  00BA               	movwf	??i1___fltol+1
  8434     0E74  0837               	movf	i1___fltol@f1+2,w
  8435     0E75  00BB               	movwf	??i1___fltol+2
  8436     0E76  0838               	movf	i1___fltol@f1+3,w
  8437     0E77  00BC               	movwf	??i1___fltol+3
  8438     0E78  301F               	movlw	31
  8439     0E79                     u221_25:
  8440     0E79  36BC               	lsrf	??i1___fltol+3,f
  8441     0E7A  0CBB               	rrf	??i1___fltol+2,f
  8442     0E7B  0CBA               	rrf	??i1___fltol+1,f
  8443     0E7C  0CB9               	rrf	??i1___fltol,f
  8444     0E7D  0B89               	decfsz	9,f
  8445     0E7E  2E79               	goto	u221_25
  8446     0E7F  0839               	movf	??i1___fltol,w
  8447     0E80  00BD               	movwf	i1___fltol@sign1
  8448     0E81  17B7               	bsf	i1___fltol@f1+2,7
  8449     0E82  30FF               	movlw	255
  8450     0E83  05B5               	andwf	i1___fltol@f1,f
  8451     0E84  30FF               	movlw	255
  8452     0E85  05B6               	andwf	i1___fltol@f1+1,f
  8453     0E86  30FF               	movlw	255
  8454     0E87  05B7               	andwf	i1___fltol@f1+2,f
  8455     0E88  3000               	movlw	0
  8456     0E89  05B8               	andwf	i1___fltol@f1+3,f
  8457     0E8A  3096               	movlw	150
  8458     0E8B  02BE               	subwf	i1___fltol@exp1,f
  8459     0E8C  1FBE               	btfss	i1___fltol@exp1,7
  8460     0E8D  2EA1               	goto	i1l2622
  8461     0E8E  083E               	movf	i1___fltol@exp1,w
  8462     0E8F  3A80               	xorlw	128
  8463     0E90  3E97               	addlw	151
  8464     0E91  1C03               	btfss	3,0
  8465     0E92  2E67               	goto	i1l2600
  8466     0E93                     i1l2620:
  8467     0E93  3001               	movlw	1
  8468     0E94                     u224_25:
  8469     0E94  36B8               	lsrf	i1___fltol@f1+3,f
  8470     0E95  0CB7               	rrf	i1___fltol@f1+2,f
  8471     0E96  0CB6               	rrf	i1___fltol@f1+1,f
  8472     0E97  0CB5               	rrf	i1___fltol@f1,f
  8473     0E98  0B89               	decfsz	9,f
  8474     0E99  2E94               	goto	u224_25
  8475     0E9A  3001               	movlw	1
  8476     0E9B  00B9               	movwf	??i1___fltol
  8477     0E9C  0839               	movf	??i1___fltol,w
  8478     0E9D  07BE               	addwf	i1___fltol@exp1,f
  8479     0E9E  1903               	btfsc	3,2
  8480     0E9F  2EB2               	goto	i1l2630
  8481     0EA0  2E93               	goto	i1l2620
  8482     0EA1                     i1l2622:
  8483     0EA1  3020               	movlw	32
  8484     0EA2  023E               	subwf	i1___fltol@exp1,w
  8485     0EA3  1803               	btfsc	3,0
  8486     0EA4  2E67               	goto	i1l2600
  8487     0EA5                     i1l1133:
  8488     0EA5  083E               	movf	i1___fltol@exp1,w
  8489     0EA6  1903               	btfsc	3,2
  8490     0EA7  2EB2               	goto	i1l2630
  8491     0EA8  3001               	movlw	1
  8492     0EA9                     u227_25:
  8493     0EA9  35B5               	lslf	i1___fltol@f1,f
  8494     0EAA  0DB6               	rlf	i1___fltol@f1+1,f
  8495     0EAB  0DB7               	rlf	i1___fltol@f1+2,f
  8496     0EAC  0DB8               	rlf	i1___fltol@f1+3,f
  8497     0EAD  0B89               	decfsz	9,f
  8498     0EAE  2EA9               	goto	u227_25
  8499     0EAF  3001               	movlw	1
  8500     0EB0  02BE               	subwf	i1___fltol@exp1,f
  8501     0EB1  2EA5               	goto	i1l1133
  8502     0EB2                     i1l2630:
  8503     0EB2  083D               	movf	i1___fltol@sign1,w
  8504     0EB3  1903               	btfsc	3,2
  8505     0EB4  0008               	return
  8506     0EB5  09B5               	comf	i1___fltol@f1,f
  8507     0EB6  09B6               	comf	i1___fltol@f1+1,f
  8508     0EB7  09B7               	comf	i1___fltol@f1+2,f
  8509     0EB8  09B8               	comf	i1___fltol@f1+3,f
  8510     0EB9  0AB5               	incf	i1___fltol@f1,f
  8511     0EBA  1903               	skipnz
  8512     0EBB  0AB6               	incf	i1___fltol@f1+1,f
  8513     0EBC  1903               	skipnz
  8514     0EBD  0AB7               	incf	i1___fltol@f1+2,f
  8515     0EBE  1903               	skipnz
  8516     0EBF  0AB8               	incf	i1___fltol@f1+3,f
  8517     0EC0  0008               	return
  8518     0EC1                     __end_ofi1___fltol:
  8519                           
  8520                           	psect	text48
  8521     0739                     __ptext48:	
  8522 ;; *************** function ___xxtofl *****************
  8523 ;; Defined at:
  8524 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\xxtofl.c"
  8525 ;; Parameters:    Size  Location     Type
  8526 ;;  sign            1    wreg     unsigned char 
  8527 ;;  val             4   31[BANK0 ] long 
  8528 ;; Auto vars:     Size  Location     Type
  8529 ;;  sign            1   39[BANK0 ] unsigned char 
  8530 ;;  arg             4   41[BANK0 ] unsigned long 
  8531 ;;  exp             1   40[BANK0 ] unsigned char 
  8532 ;; Return value:  Size  Location     Type
  8533 ;;                  4   31[BANK0 ] unsigned char 
  8534 ;; Registers used:
  8535 ;;		wreg, status,2, status,0
  8536 ;; Tracked objects:
  8537 ;;		On entry : 1F/0
  8538 ;;		On exit  : 1F/0
  8539 ;;		Unchanged: 0/0
  8540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8541 ;;      Params:         0       4       0       0       0       0
  8542 ;;      Locals:         0       6       0       0       0       0
  8543 ;;      Temps:          0       4       0       0       0       0
  8544 ;;      Totals:         0      14       0       0       0       0
  8545 ;;Total ram usage:       14 bytes
  8546 ;; Hardware stack levels used: 1
  8547 ;; This function calls:
  8548 ;;		Nothing
  8549 ;; This function is called by:
  8550 ;;		_mede_height
  8551 ;; This function uses a non-reentrant model
  8552 ;;
  8553                           
  8554     0739                     ___xxtofl:	
  8555                           ;psect for function ___xxtofl
  8556                           
  8557                           
  8558                           ;incstack = 0
  8559                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  8560                           ;___xxtofl@sign stored from wreg
  8561     0739  00C7               	movwf	___xxtofl@sign
  8562     073A  0847               	movf	___xxtofl@sign,w
  8563     073B  1D03               	btfss	3,2
  8564     073C  1FC2               	btfss	___xxtofl@val+3,7
  8565     073D  2F4E               	goto	i1l2560
  8566     073E  093F               	comf	___xxtofl@val,w
  8567     073F  00C9               	movwf	___xxtofl@arg
  8568     0740  0940               	comf	___xxtofl@val+1,w
  8569     0741  00CA               	movwf	___xxtofl@arg+1
  8570     0742  0941               	comf	___xxtofl@val+2,w
  8571     0743  00CB               	movwf	___xxtofl@arg+2
  8572     0744  0942               	comf	___xxtofl@val+3,w
  8573     0745  00CC               	movwf	___xxtofl@arg+3
  8574     0746  0AC9               	incf	___xxtofl@arg,f
  8575     0747  1903               	skipnz
  8576     0748  0ACA               	incf	___xxtofl@arg+1,f
  8577     0749  1903               	skipnz
  8578     074A  0ACB               	incf	___xxtofl@arg+2,f
  8579     074B  1903               	skipnz
  8580     074C  0ACC               	incf	___xxtofl@arg+3,f
  8581     074D  2F56               	goto	i1l1373
  8582     074E                     i1l2560:
  8583     074E  0842               	movf	___xxtofl@val+3,w
  8584     074F  00CC               	movwf	___xxtofl@arg+3
  8585     0750  0841               	movf	___xxtofl@val+2,w
  8586     0751  00CB               	movwf	___xxtofl@arg+2
  8587     0752  0840               	movf	___xxtofl@val+1,w
  8588     0753  00CA               	movwf	___xxtofl@arg+1
  8589     0754  083F               	movf	___xxtofl@val,w
  8590     0755  00C9               	movwf	___xxtofl@arg
  8591     0756                     i1l1373:
  8592     0756  0842               	movf	___xxtofl@val+3,w
  8593     0757  0441               	iorwf	___xxtofl@val+2,w
  8594     0758  0440               	iorwf	___xxtofl@val+1,w
  8595     0759  043F               	iorwf	___xxtofl@val,w
  8596     075A  1D03               	skipz
  8597     075B  2F65               	goto	i1l2566
  8598     075C  3000               	movlw	0
  8599     075D  00C2               	movwf	?___xxtofl+3
  8600     075E  3000               	movlw	0
  8601     075F  00C1               	movwf	?___xxtofl+2
  8602     0760  3000               	movlw	0
  8603     0761  00C0               	movwf	?___xxtofl+1
  8604     0762  3000               	movlw	0
  8605     0763  00BF               	movwf	?___xxtofl
  8606     0764  0008               	return
  8607     0765                     i1l2566:
  8608     0765  3096               	movlw	150
  8609     0766  00C8               	movwf	___xxtofl@exp
  8610     0767                     i1l2570:
  8611     0767  30FE               	movlw	254
  8612     0768  054C               	andwf	___xxtofl@arg+3,w
  8613     0769  1903               	btfsc	3,2
  8614     076A  2F8A               	goto	i1l1379
  8615     076B  3001               	movlw	1
  8616     076C  00C3               	movwf	??___xxtofl
  8617     076D  0843               	movf	??___xxtofl,w
  8618     076E  07C8               	addwf	___xxtofl@exp,f
  8619     076F  3001               	movlw	1
  8620     0770                     u209_25:
  8621     0770  36CC               	lsrf	___xxtofl@arg+3,f
  8622     0771  0CCB               	rrf	___xxtofl@arg+2,f
  8623     0772  0CCA               	rrf	___xxtofl@arg+1,f
  8624     0773  0CC9               	rrf	___xxtofl@arg,f
  8625     0774  0B89               	decfsz	9,f
  8626     0775  2F70               	goto	u209_25
  8627     0776  2F67               	goto	i1l2570
  8628     0777                     i1l2572:
  8629     0777  3001               	movlw	1
  8630     0778  00C3               	movwf	??___xxtofl
  8631     0779  0843               	movf	??___xxtofl,w
  8632     077A  07C8               	addwf	___xxtofl@exp,f
  8633     077B  3001               	movlw	1
  8634     077C  07C9               	addwf	___xxtofl@arg,f
  8635     077D  3000               	movlw	0
  8636     077E  3DCA               	addwfc	___xxtofl@arg+1,f
  8637     077F  3000               	movlw	0
  8638     0780  3DCB               	addwfc	___xxtofl@arg+2,f
  8639     0781  3000               	movlw	0
  8640     0782  3DCC               	addwfc	___xxtofl@arg+3,f
  8641     0783  3001               	movlw	1
  8642     0784                     u211_25:
  8643     0784  36CC               	lsrf	___xxtofl@arg+3,f
  8644     0785  0CCB               	rrf	___xxtofl@arg+2,f
  8645     0786  0CCA               	rrf	___xxtofl@arg+1,f
  8646     0787  0CC9               	rrf	___xxtofl@arg,f
  8647     0788  0B89               	decfsz	9,f
  8648     0789  2F84               	goto	u211_25
  8649     078A                     i1l1379:
  8650     078A  30FF               	movlw	255
  8651     078B  054C               	andwf	___xxtofl@arg+3,w
  8652     078C  1903               	btfsc	3,2
  8653     078D  2F9C               	goto	i1l2580
  8654     078E  2F77               	goto	i1l2572
  8655     078F                     i1l2582:
  8656     078F  3002               	movlw	2
  8657     0790  0248               	subwf	___xxtofl@exp,w
  8658     0791  1C03               	btfss	3,0
  8659     0792  2F9E               	goto	i1l1386
  8660     0793  3001               	movlw	1
  8661     0794  02C8               	subwf	___xxtofl@exp,f
  8662     0795  3001               	movlw	1
  8663     0796                     u213_25:
  8664     0796  35C9               	lslf	___xxtofl@arg,f
  8665     0797  0DCA               	rlf	___xxtofl@arg+1,f
  8666     0798  0DCB               	rlf	___xxtofl@arg+2,f
  8667     0799  0DCC               	rlf	___xxtofl@arg+3,f
  8668     079A  0B89               	decfsz	9,f
  8669     079B  2F96               	goto	u213_25
  8670     079C                     i1l2580:
  8671     079C  1FCB               	btfss	___xxtofl@arg+2,7
  8672     079D  2F8F               	goto	i1l2582
  8673     079E                     i1l1386:
  8674     079E  1848               	btfsc	___xxtofl@exp,0
  8675     079F  2FA8               	goto	i1l1387
  8676     07A0  30FF               	movlw	255
  8677     07A1  05C9               	andwf	___xxtofl@arg,f
  8678     07A2  30FF               	movlw	255
  8679     07A3  05CA               	andwf	___xxtofl@arg+1,f
  8680     07A4  307F               	movlw	127
  8681     07A5  05CB               	andwf	___xxtofl@arg+2,f
  8682     07A6  30FF               	movlw	255
  8683     07A7  05CC               	andwf	___xxtofl@arg+3,f
  8684     07A8                     i1l1387:
  8685     07A8  1003               	clrc
  8686     07A9  0CC8               	rrf	___xxtofl@exp,f
  8687     07AA  0848               	movf	___xxtofl@exp,w
  8688     07AB  00C3               	movwf	??___xxtofl
  8689     07AC  01C4               	clrf	??___xxtofl+1
  8690     07AD  01C5               	clrf	??___xxtofl+2
  8691     07AE  01C6               	clrf	??___xxtofl+3
  8692     07AF  3018               	movlw	24
  8693     07B0                     u217_25:
  8694     07B0  35C3               	lslf	??___xxtofl,f
  8695     07B1  0DC4               	rlf	??___xxtofl+1,f
  8696     07B2  0DC5               	rlf	??___xxtofl+2,f
  8697     07B3  0DC6               	rlf	??___xxtofl+3,f
  8698     07B4  0B89               	decfsz	9,f
  8699     07B5  2FB0               	goto	u217_25
  8700     07B6  0843               	movf	??___xxtofl,w
  8701     07B7  04C9               	iorwf	___xxtofl@arg,f
  8702     07B8  0844               	movf	??___xxtofl+1,w
  8703     07B9  04CA               	iorwf	___xxtofl@arg+1,f
  8704     07BA  0845               	movf	??___xxtofl+2,w
  8705     07BB  04CB               	iorwf	___xxtofl@arg+2,f
  8706     07BC  0846               	movf	??___xxtofl+3,w
  8707     07BD  04CC               	iorwf	___xxtofl@arg+3,f
  8708     07BE  0847               	movf	___xxtofl@sign,w
  8709     07BF  1D03               	btfss	3,2
  8710     07C0  1FC2               	btfss	___xxtofl@val+3,7
  8711     07C1  2FC3               	goto	i1l2594
  8712     07C2  17CC               	bsf	___xxtofl@arg+3,7
  8713     07C3                     i1l2594:
  8714     07C3  084C               	movf	___xxtofl@arg+3,w
  8715     07C4  00C2               	movwf	?___xxtofl+3
  8716     07C5  084B               	movf	___xxtofl@arg+2,w
  8717     07C6  00C1               	movwf	?___xxtofl+2
  8718     07C7  084A               	movf	___xxtofl@arg+1,w
  8719     07C8  00C0               	movwf	?___xxtofl+1
  8720     07C9  0849               	movf	___xxtofl@arg,w
  8721     07CA  00BF               	movwf	?___xxtofl
  8722     07CB  0008               	return
  8723     07CC                     __end_of___xxtofl:
  8724                           
  8725                           	psect	text49
  8726     004B                     __ptext49:	
  8727 ;; *************** function ___flmul *****************
  8728 ;; Defined at:
  8729 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcmul.c"
  8730 ;; Parameters:    Size  Location     Type
  8731 ;;  b               4    0[BANK0 ] unsigned char 
  8732 ;;  a               4    4[BANK0 ] unsigned char 
  8733 ;; Auto vars:     Size  Location     Type
  8734 ;;  prod            4   15[BANK0 ] struct .
  8735 ;;  grs             4   10[BANK0 ] unsigned long 
  8736 ;;  temp            2   19[BANK0 ] struct .
  8737 ;;  bexp            1   14[BANK0 ] unsigned char 
  8738 ;;  aexp            1    9[BANK0 ] unsigned char 
  8739 ;;  sign            1    8[BANK0 ] unsigned char 
  8740 ;; Return value:  Size  Location     Type
  8741 ;;                  4    0[BANK0 ] unsigned char 
  8742 ;; Registers used:
  8743 ;;		wreg, status,2, status,0, pclath, cstack
  8744 ;; Tracked objects:
  8745 ;;		On entry : 1F/0
  8746 ;;		On exit  : 1F/0
  8747 ;;		Unchanged: 0/0
  8748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8749 ;;      Params:         0       8       0       0       0       0
  8750 ;;      Locals:         0      13       0       0       0       0
  8751 ;;      Temps:          5       0       0       0       0       0
  8752 ;;      Totals:         5      21       0       0       0       0
  8753 ;;Total ram usage:       26 bytes
  8754 ;; Hardware stack levels used: 1
  8755 ;; Hardware stack levels required when called: 1
  8756 ;; This function calls:
  8757 ;;		__Umul8_16
  8758 ;; This function is called by:
  8759 ;;		_mede_height
  8760 ;; This function uses a non-reentrant model
  8761 ;;
  8762                           
  8763     004B                     ___flmul:	
  8764                           ;psect for function ___flmul
  8765                           
  8766                           
  8767                           ;incstack = 0
  8768                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  8769     004B  0823               	movf	___flmul@b+3,w
  8770     004C  3980               	andlw	128
  8771     004D  00A8               	movwf	___flmul@sign
  8772     004E  3523               	lslf	___flmul@b+3,w
  8773     004F  00AE               	movwf	___flmul@bexp
  8774     0050  1BA2               	btfsc	___flmul@b+2,7
  8775     0051  142E               	bsf	___flmul@bexp,0
  8776     0052  082E               	movf	___flmul@bexp,w
  8777     0053  1903               	btfsc	3,2
  8778     0054  2862               	goto	i1l2430
  8779     0055  0A2E               	incf	___flmul@bexp,w
  8780     0056  1D03               	btfss	3,2
  8781     0057  2860               	goto	i1l2428
  8782     0058  3000               	movlw	0
  8783     0059  00A3               	movwf	___flmul@b+3
  8784     005A  3000               	movlw	0
  8785     005B  00A2               	movwf	___flmul@b+2
  8786     005C  3000               	movlw	0
  8787     005D  00A1               	movwf	___flmul@b+1
  8788     005E  3000               	movlw	0
  8789     005F  00A0               	movwf	___flmul@b
  8790     0060                     i1l2428:
  8791     0060  17A2               	bsf	___flmul@b+2,7
  8792     0061  286A               	goto	i1l2432
  8793     0062                     i1l2430:
  8794     0062  3000               	movlw	0
  8795     0063  00A3               	movwf	___flmul@b+3
  8796     0064  3000               	movlw	0
  8797     0065  00A2               	movwf	___flmul@b+2
  8798     0066  3000               	movlw	0
  8799     0067  00A1               	movwf	___flmul@b+1
  8800     0068  3000               	movlw	0
  8801     0069  00A0               	movwf	___flmul@b
  8802     006A                     i1l2432:
  8803     006A  0827               	movf	___flmul@a+3,w
  8804     006B  3980               	andlw	128
  8805     006C  00F9               	movwf	??___flmul
  8806     006D  0879               	movf	??___flmul,w
  8807     006E  06A8               	xorwf	___flmul@sign,f
  8808     006F  3527               	lslf	___flmul@a+3,w
  8809     0070  00A9               	movwf	___flmul@aexp
  8810     0071  1BA6               	btfsc	___flmul@a+2,7
  8811     0072  1429               	bsf	___flmul@aexp,0
  8812     0073  0829               	movf	___flmul@aexp,w
  8813     0074  1903               	btfsc	3,2
  8814     0075  2883               	goto	i1l2448
  8815     0076  0A29               	incf	___flmul@aexp,w
  8816     0077  1D03               	btfss	3,2
  8817     0078  2881               	goto	i1l2446
  8818     0079  3000               	movlw	0
  8819     007A  00A7               	movwf	___flmul@a+3
  8820     007B  3000               	movlw	0
  8821     007C  00A6               	movwf	___flmul@a+2
  8822     007D  3000               	movlw	0
  8823     007E  00A5               	movwf	___flmul@a+1
  8824     007F  3000               	movlw	0
  8825     0080  00A4               	movwf	___flmul@a
  8826     0081                     i1l2446:
  8827     0081  17A6               	bsf	___flmul@a+2,7
  8828     0082  288B               	goto	i1l2450
  8829     0083                     i1l2448:
  8830     0083  3000               	movlw	0
  8831     0084  00A7               	movwf	___flmul@a+3
  8832     0085  3000               	movlw	0
  8833     0086  00A6               	movwf	___flmul@a+2
  8834     0087  3000               	movlw	0
  8835     0088  00A5               	movwf	___flmul@a+1
  8836     0089  3000               	movlw	0
  8837     008A  00A4               	movwf	___flmul@a
  8838     008B                     i1l2450:
  8839     008B  0829               	movf	___flmul@aexp,w
  8840     008C  1D03               	btfss	3,2
  8841     008D  082E               	movf	___flmul@bexp,w
  8842     008E  1D03               	btfss	3,2
  8843     008F  2899               	goto	i1l2458
  8844     0090  3000               	movlw	0
  8845     0091  00A3               	movwf	?___flmul+3
  8846     0092  3000               	movlw	0
  8847     0093  00A2               	movwf	?___flmul+2
  8848     0094  3000               	movlw	0
  8849     0095  00A1               	movwf	?___flmul+1
  8850     0096  3000               	movlw	0
  8851     0097  00A0               	movwf	?___flmul
  8852     0098  0008               	return
  8853     0099                     i1l2458:
  8854     0099  0820               	movf	___flmul@b,w
  8855     009A  00F0               	movwf	__Umul8_16@multiplicand
  8856     009B  0826               	movf	___flmul@a+2,w
  8857     009C  318D  2504  3180   	fcall	__Umul8_16
  8858     009F  0871               	movf	?__Umul8_16+1,w
  8859     00A0  00B4               	movwf	___flmul@temp+1
  8860     00A1  0870               	movf	?__Umul8_16,w
  8861     00A2  00B3               	movwf	___flmul@temp
  8862     00A3  0833               	movf	___flmul@temp,w
  8863     00A4  00F9               	movwf	??___flmul
  8864     00A5  01FA               	clrf	??___flmul+1
  8865     00A6  01FB               	clrf	??___flmul+2
  8866     00A7  01FC               	clrf	??___flmul+3
  8867     00A8  087C               	movf	??___flmul+3,w
  8868     00A9  00AD               	movwf	___flmul@grs+3
  8869     00AA  087B               	movf	??___flmul+2,w
  8870     00AB  00AC               	movwf	___flmul@grs+2
  8871     00AC  087A               	movf	??___flmul+1,w
  8872     00AD  00AB               	movwf	___flmul@grs+1
  8873     00AE  0879               	movf	??___flmul,w
  8874     00AF  00AA               	movwf	___flmul@grs
  8875     00B0  0834               	movf	___flmul@temp+1,w
  8876     00B1  00F9               	movwf	??___flmul
  8877     00B2  01FA               	clrf	??___flmul+1
  8878     00B3  01FB               	clrf	??___flmul+2
  8879     00B4  01FC               	clrf	??___flmul+3
  8880     00B5  087C               	movf	??___flmul+3,w
  8881     00B6  00B2               	movwf	___flmul@prod+3
  8882     00B7  087B               	movf	??___flmul+2,w
  8883     00B8  00B1               	movwf	___flmul@prod+2
  8884     00B9  087A               	movf	??___flmul+1,w
  8885     00BA  00B0               	movwf	___flmul@prod+1
  8886     00BB  0879               	movf	??___flmul,w
  8887     00BC  00AF               	movwf	___flmul@prod
  8888     00BD  0821               	movf	___flmul@b+1,w
  8889     00BE  00F0               	movwf	__Umul8_16@multiplicand
  8890     00BF  0825               	movf	___flmul@a+1,w
  8891     00C0  318D  2504  3180   	fcall	__Umul8_16
  8892     00C3  0871               	movf	?__Umul8_16+1,w
  8893     00C4  00B4               	movwf	___flmul@temp+1
  8894     00C5  0870               	movf	?__Umul8_16,w
  8895     00C6  00B3               	movwf	___flmul@temp
  8896     00C7  0833               	movf	___flmul@temp,w
  8897     00C8  00F9               	movwf	??___flmul
  8898     00C9  01FA               	clrf	??___flmul+1
  8899     00CA  01FB               	clrf	??___flmul+2
  8900     00CB  01FC               	clrf	??___flmul+3
  8901     00CC  0879               	movf	??___flmul,w
  8902     00CD  07AA               	addwf	___flmul@grs,f
  8903     00CE  087A               	movf	??___flmul+1,w
  8904     00CF  3DAB               	addwfc	___flmul@grs+1,f
  8905     00D0  087B               	movf	??___flmul+2,w
  8906     00D1  3DAC               	addwfc	___flmul@grs+2,f
  8907     00D2  087C               	movf	??___flmul+3,w
  8908     00D3  3DAD               	addwfc	___flmul@grs+3,f
  8909     00D4  0834               	movf	___flmul@temp+1,w
  8910     00D5  00F9               	movwf	??___flmul
  8911     00D6  01FA               	clrf	??___flmul+1
  8912     00D7  01FB               	clrf	??___flmul+2
  8913     00D8  01FC               	clrf	??___flmul+3
  8914     00D9  0879               	movf	??___flmul,w
  8915     00DA  07AF               	addwf	___flmul@prod,f
  8916     00DB  087A               	movf	??___flmul+1,w
  8917     00DC  3DB0               	addwfc	___flmul@prod+1,f
  8918     00DD  087B               	movf	??___flmul+2,w
  8919     00DE  3DB1               	addwfc	___flmul@prod+2,f
  8920     00DF  087C               	movf	??___flmul+3,w
  8921     00E0  3DB2               	addwfc	___flmul@prod+3,f
  8922     00E1  0822               	movf	___flmul@b+2,w
  8923     00E2  00F0               	movwf	__Umul8_16@multiplicand
  8924     00E3  0824               	movf	___flmul@a,w
  8925     00E4  318D  2504  3180   	fcall	__Umul8_16
  8926     00E7  0871               	movf	?__Umul8_16+1,w
  8927     00E8  00B4               	movwf	___flmul@temp+1
  8928     00E9  0870               	movf	?__Umul8_16,w
  8929     00EA  00B3               	movwf	___flmul@temp
  8930     00EB  0833               	movf	___flmul@temp,w
  8931     00EC  00F9               	movwf	??___flmul
  8932     00ED  01FA               	clrf	??___flmul+1
  8933     00EE  01FB               	clrf	??___flmul+2
  8934     00EF  01FC               	clrf	??___flmul+3
  8935     00F0  0879               	movf	??___flmul,w
  8936     00F1  07AA               	addwf	___flmul@grs,f
  8937     00F2  087A               	movf	??___flmul+1,w
  8938     00F3  3DAB               	addwfc	___flmul@grs+1,f
  8939     00F4  087B               	movf	??___flmul+2,w
  8940     00F5  3DAC               	addwfc	___flmul@grs+2,f
  8941     00F6  087C               	movf	??___flmul+3,w
  8942     00F7  3DAD               	addwfc	___flmul@grs+3,f
  8943     00F8  0834               	movf	___flmul@temp+1,w
  8944     00F9  00F9               	movwf	??___flmul
  8945     00FA  01FA               	clrf	??___flmul+1
  8946     00FB  01FB               	clrf	??___flmul+2
  8947     00FC  01FC               	clrf	??___flmul+3
  8948     00FD  0879               	movf	??___flmul,w
  8949     00FE  07AF               	addwf	___flmul@prod,f
  8950     00FF  087A               	movf	??___flmul+1,w
  8951     0100  3DB0               	addwfc	___flmul@prod+1,f
  8952     0101  087B               	movf	??___flmul+2,w
  8953     0102  3DB1               	addwfc	___flmul@prod+2,f
  8954     0103  087C               	movf	??___flmul+3,w
  8955     0104  3DB2               	addwfc	___flmul@prod+3,f
  8956     0105  3008               	movlw	8
  8957     0106                     u189_25:
  8958     0106  35AA               	lslf	___flmul@grs,f
  8959     0107  0DAB               	rlf	___flmul@grs+1,f
  8960     0108  0DAC               	rlf	___flmul@grs+2,f
  8961     0109  0DAD               	rlf	___flmul@grs+3,f
  8962     010A  0B89               	decfsz	9,f
  8963     010B  2906               	goto	u189_25
  8964     010C  0821               	movf	___flmul@b+1,w
  8965     010D  00F0               	movwf	__Umul8_16@multiplicand
  8966     010E  0824               	movf	___flmul@a,w
  8967     010F  318D  2504  3180   	fcall	__Umul8_16
  8968     0112  0871               	movf	?__Umul8_16+1,w
  8969     0113  00B4               	movwf	___flmul@temp+1
  8970     0114  0870               	movf	?__Umul8_16,w
  8971     0115  00B3               	movwf	___flmul@temp
  8972     0116  0833               	movf	___flmul@temp,w
  8973     0117  07AA               	addwf	___flmul@grs,f
  8974     0118  0834               	movf	___flmul@temp+1,w
  8975     0119  3DAB               	addwfc	___flmul@grs+1,f
  8976     011A  3000               	movlw	0
  8977     011B  3DAC               	addwfc	___flmul@grs+2,f
  8978     011C  3DAD               	addwfc	___flmul@grs+3,f
  8979     011D  0820               	movf	___flmul@b,w
  8980     011E  00F0               	movwf	__Umul8_16@multiplicand
  8981     011F  0825               	movf	___flmul@a+1,w
  8982     0120  318D  2504  3180   	fcall	__Umul8_16
  8983     0123  0871               	movf	?__Umul8_16+1,w
  8984     0124  00B4               	movwf	___flmul@temp+1
  8985     0125  0870               	movf	?__Umul8_16,w
  8986     0126  00B3               	movwf	___flmul@temp
  8987     0127  0833               	movf	___flmul@temp,w
  8988     0128  07AA               	addwf	___flmul@grs,f
  8989     0129  0834               	movf	___flmul@temp+1,w
  8990     012A  3DAB               	addwfc	___flmul@grs+1,f
  8991     012B  3000               	movlw	0
  8992     012C  3DAC               	addwfc	___flmul@grs+2,f
  8993     012D  3DAD               	addwfc	___flmul@grs+3,f
  8994     012E  3008               	movlw	8
  8995     012F                     u190_25:
  8996     012F  35AA               	lslf	___flmul@grs,f
  8997     0130  0DAB               	rlf	___flmul@grs+1,f
  8998     0131  0DAC               	rlf	___flmul@grs+2,f
  8999     0132  0DAD               	rlf	___flmul@grs+3,f
  9000     0133  0B89               	decfsz	9,f
  9001     0134  292F               	goto	u190_25
  9002     0135  0820               	movf	___flmul@b,w
  9003     0136  00F0               	movwf	__Umul8_16@multiplicand
  9004     0137  0824               	movf	___flmul@a,w
  9005     0138  318D  2504  3180   	fcall	__Umul8_16
  9006     013B  0871               	movf	?__Umul8_16+1,w
  9007     013C  00B4               	movwf	___flmul@temp+1
  9008     013D  0870               	movf	?__Umul8_16,w
  9009     013E  00B3               	movwf	___flmul@temp
  9010     013F  0833               	movf	___flmul@temp,w
  9011     0140  07AA               	addwf	___flmul@grs,f
  9012     0141  0834               	movf	___flmul@temp+1,w
  9013     0142  3DAB               	addwfc	___flmul@grs+1,f
  9014     0143  3000               	movlw	0
  9015     0144  3DAC               	addwfc	___flmul@grs+2,f
  9016     0145  3DAD               	addwfc	___flmul@grs+3,f
  9017     0146  0821               	movf	___flmul@b+1,w
  9018     0147  00F0               	movwf	__Umul8_16@multiplicand
  9019     0148  0826               	movf	___flmul@a+2,w
  9020     0149  318D  2504  3180   	fcall	__Umul8_16
  9021     014C  0871               	movf	?__Umul8_16+1,w
  9022     014D  00B4               	movwf	___flmul@temp+1
  9023     014E  0870               	movf	?__Umul8_16,w
  9024     014F  00B3               	movwf	___flmul@temp
  9025     0150  0833               	movf	___flmul@temp,w
  9026     0151  07AF               	addwf	___flmul@prod,f
  9027     0152  0834               	movf	___flmul@temp+1,w
  9028     0153  3DB0               	addwfc	___flmul@prod+1,f
  9029     0154  3000               	movlw	0
  9030     0155  3DB1               	addwfc	___flmul@prod+2,f
  9031     0156  3DB2               	addwfc	___flmul@prod+3,f
  9032     0157  0822               	movf	___flmul@b+2,w
  9033     0158  00F0               	movwf	__Umul8_16@multiplicand
  9034     0159  0825               	movf	___flmul@a+1,w
  9035     015A  318D  2504  3180   	fcall	__Umul8_16
  9036     015D  0871               	movf	?__Umul8_16+1,w
  9037     015E  00B4               	movwf	___flmul@temp+1
  9038     015F  0870               	movf	?__Umul8_16,w
  9039     0160  00B3               	movwf	___flmul@temp
  9040     0161  0833               	movf	___flmul@temp,w
  9041     0162  07AF               	addwf	___flmul@prod,f
  9042     0163  0834               	movf	___flmul@temp+1,w
  9043     0164  3DB0               	addwfc	___flmul@prod+1,f
  9044     0165  3000               	movlw	0
  9045     0166  3DB1               	addwfc	___flmul@prod+2,f
  9046     0167  3DB2               	addwfc	___flmul@prod+3,f
  9047     0168  0822               	movf	___flmul@b+2,w
  9048     0169  00F0               	movwf	__Umul8_16@multiplicand
  9049     016A  0826               	movf	___flmul@a+2,w
  9050     016B  318D  2504  3180   	fcall	__Umul8_16
  9051     016E  0871               	movf	?__Umul8_16+1,w
  9052     016F  00B4               	movwf	___flmul@temp+1
  9053     0170  0870               	movf	?__Umul8_16,w
  9054     0171  00B3               	movwf	___flmul@temp
  9055     0172  0833               	movf	___flmul@temp,w
  9056     0173  00F9               	movwf	??___flmul
  9057     0174  0834               	movf	___flmul@temp+1,w
  9058     0175  00FA               	movwf	??___flmul+1
  9059     0176  01FB               	clrf	??___flmul+2
  9060     0177  01FC               	clrf	??___flmul+3
  9061     0178  3008               	movlw	8
  9062     0179                     u191_25:
  9063     0179  35F9               	lslf	??___flmul,f
  9064     017A  0DFA               	rlf	??___flmul+1,f
  9065     017B  0DFB               	rlf	??___flmul+2,f
  9066     017C  0DFC               	rlf	??___flmul+3,f
  9067     017D  0B89               	decfsz	9,f
  9068     017E  2979               	goto	u191_25
  9069     017F  0879               	movf	??___flmul,w
  9070     0180  07AF               	addwf	___flmul@prod,f
  9071     0181  087A               	movf	??___flmul+1,w
  9072     0182  3DB0               	addwfc	___flmul@prod+1,f
  9073     0183  087B               	movf	??___flmul+2,w
  9074     0184  3DB1               	addwfc	___flmul@prod+2,f
  9075     0185  087C               	movf	??___flmul+3,w
  9076     0186  3DB2               	addwfc	___flmul@prod+3,f
  9077     0187  082D               	movf	___flmul@grs+3,w
  9078     0188  00F9               	movwf	??___flmul
  9079     0189  01FA               	clrf	??___flmul+1
  9080     018A  01FB               	clrf	??___flmul+2
  9081     018B  01FC               	clrf	??___flmul+3
  9082     018C  0879               	movf	??___flmul,w
  9083     018D  07AF               	addwf	___flmul@prod,f
  9084     018E  087A               	movf	??___flmul+1,w
  9085     018F  3DB0               	addwfc	___flmul@prod+1,f
  9086     0190  087B               	movf	??___flmul+2,w
  9087     0191  3DB1               	addwfc	___flmul@prod+2,f
  9088     0192  087C               	movf	??___flmul+3,w
  9089     0193  3DB2               	addwfc	___flmul@prod+3,f
  9090     0194  3008               	movlw	8
  9091     0195                     u192_25:
  9092     0195  35AA               	lslf	___flmul@grs,f
  9093     0196  0DAB               	rlf	___flmul@grs+1,f
  9094     0197  0DAC               	rlf	___flmul@grs+2,f
  9095     0198  0DAD               	rlf	___flmul@grs+3,f
  9096     0199  0B89               	decfsz	9,f
  9097     019A  2995               	goto	u192_25
  9098     019B  082E               	movf	___flmul@bexp,w
  9099     019C  0729               	addwf	___flmul@aexp,w
  9100     019D  00F9               	movwf	??___flmul
  9101     019E  01FA               	clrf	??___flmul+1
  9102     019F  0DFA               	rlf	??___flmul+1,f
  9103     01A0  0879               	movf	??___flmul,w
  9104     01A1  3E82               	addlw	130
  9105     01A2  00B3               	movwf	___flmul@temp
  9106     01A3  30FF               	movlw	255
  9107     01A4  3D7A               	addwfc	??___flmul+1,w
  9108     01A5  00B4               	movwf	___flmul@temp+1
  9109     01A6                     i1l2510:
  9110     01A6  1BB1               	btfsc	___flmul@prod+2,7
  9111     01A7  29BD               	goto	i1l2512
  9112     01A8  3001               	movlw	1
  9113     01A9                     u193_25:
  9114     01A9  35AF               	lslf	___flmul@prod,f
  9115     01AA  0DB0               	rlf	___flmul@prod+1,f
  9116     01AB  0DB1               	rlf	___flmul@prod+2,f
  9117     01AC  0DB2               	rlf	___flmul@prod+3,f
  9118     01AD  0B89               	decfsz	9,f
  9119     01AE  29A9               	goto	u193_25
  9120     01AF  1BAD               	btfsc	___flmul@grs+3,7
  9121     01B0  142F               	bsf	___flmul@prod,0
  9122     01B1  3001               	movlw	1
  9123     01B2                     u195_25:
  9124     01B2  35AA               	lslf	___flmul@grs,f
  9125     01B3  0DAB               	rlf	___flmul@grs+1,f
  9126     01B4  0DAC               	rlf	___flmul@grs+2,f
  9127     01B5  0DAD               	rlf	___flmul@grs+3,f
  9128     01B6  0B89               	decfsz	9,f
  9129     01B7  29B2               	goto	u195_25
  9130     01B8  30FF               	movlw	255
  9131     01B9  07B3               	addwf	___flmul@temp,f
  9132     01BA  30FF               	movlw	255
  9133     01BB  3DB4               	addwfc	___flmul@temp+1,f
  9134     01BC  29A6               	goto	i1l2510
  9135     01BD                     i1l2512:
  9136     01BD  01A9               	clrf	___flmul@aexp
  9137     01BE  1FAD               	btfss	___flmul@grs+3,7
  9138     01BF  29D6               	goto	i1l2522
  9139     01C0  30FF               	movlw	255
  9140     01C1  052A               	andwf	___flmul@grs,w
  9141     01C2  00F9               	movwf	??___flmul
  9142     01C3  30FF               	movlw	255
  9143     01C4  052B               	andwf	___flmul@grs+1,w
  9144     01C5  00FA               	movwf	??___flmul+1
  9145     01C6  30FF               	movlw	255
  9146     01C7  052C               	andwf	___flmul@grs+2,w
  9147     01C8  00FB               	movwf	??___flmul+2
  9148     01C9  307F               	movlw	127
  9149     01CA  052D               	andwf	___flmul@grs+3,w
  9150     01CB  00FC               	movwf	??___flmul+3
  9151     01CC  087C               	movf	??___flmul+3,w
  9152     01CD  047B               	iorwf	??___flmul+2,w
  9153     01CE  047A               	iorwf	??___flmul+1,w
  9154     01CF  0479               	iorwf	??___flmul,w
  9155     01D0  1903               	skipnz
  9156     01D1  182F               	btfsc	___flmul@prod,0
  9157     01D2  29D4               	goto	i1l2518
  9158     01D3  29D6               	goto	i1l2522
  9159     01D4                     i1l2518:
  9160     01D4  01A9               	clrf	___flmul@aexp
  9161     01D5  0AA9               	incf	___flmul@aexp,f
  9162     01D6                     i1l2522:
  9163     01D6  0829               	movf	___flmul@aexp,w
  9164     01D7  1903               	btfsc	3,2
  9165     01D8  29FF               	goto	i1l2532
  9166     01D9  3001               	movlw	1
  9167     01DA  07AF               	addwf	___flmul@prod,f
  9168     01DB  3000               	movlw	0
  9169     01DC  3DB0               	addwfc	___flmul@prod+1,f
  9170     01DD  3000               	movlw	0
  9171     01DE  3DB1               	addwfc	___flmul@prod+2,f
  9172     01DF  3000               	movlw	0
  9173     01E0  3DB2               	addwfc	___flmul@prod+3,f
  9174     01E1  1C32               	btfss	___flmul@prod+3,0
  9175     01E2  29FF               	goto	i1l2532
  9176     01E3  082F               	movf	___flmul@prod,w
  9177     01E4  00F9               	movwf	??___flmul
  9178     01E5  0830               	movf	___flmul@prod+1,w
  9179     01E6  00FA               	movwf	??___flmul+1
  9180     01E7  0831               	movf	___flmul@prod+2,w
  9181     01E8  00FB               	movwf	??___flmul+2
  9182     01E9  0832               	movf	___flmul@prod+3,w
  9183     01EA  00FC               	movwf	??___flmul+3
  9184     01EB  3001               	movlw	1
  9185     01EC  00FD               	movwf	??___flmul+4
  9186     01ED                     u202_25:
  9187     01ED  37FC               	asrf	??___flmul+3,f
  9188     01EE  0CFB               	rrf	??___flmul+2,f
  9189     01EF  0CFA               	rrf	??___flmul+1,f
  9190     01F0  0CF9               	rrf	??___flmul,f
  9191     01F1  0BFD               	decfsz	??___flmul+4,f
  9192     01F2  29ED               	goto	u202_25
  9193     01F3  087C               	movf	??___flmul+3,w
  9194     01F4  00B2               	movwf	___flmul@prod+3
  9195     01F5  087B               	movf	??___flmul+2,w
  9196     01F6  00B1               	movwf	___flmul@prod+2
  9197     01F7  087A               	movf	??___flmul+1,w
  9198     01F8  00B0               	movwf	___flmul@prod+1
  9199     01F9  0879               	movf	??___flmul,w
  9200     01FA  00AF               	movwf	___flmul@prod
  9201     01FB  3001               	movlw	1
  9202     01FC  07B3               	addwf	___flmul@temp,f
  9203     01FD  3000               	movlw	0
  9204     01FE  3DB4               	addwfc	___flmul@temp+1,f
  9205     01FF                     i1l2532:
  9206     01FF  0834               	movf	___flmul@temp+1,w
  9207     0200  3A80               	xorlw	128
  9208     0201  00F9               	movwf	??___flmul
  9209     0202  3080               	movlw	128
  9210     0203  0279               	subwf	??___flmul,w
  9211     0204  1D03               	skipz
  9212     0205  2A08               	goto	u203_25
  9213     0206  30FF               	movlw	255
  9214     0207  0233               	subwf	___flmul@temp,w
  9215     0208                     u203_25:
  9216     0208  1C03               	skipc
  9217     0209  2A14               	goto	i1l2536
  9218     020A  307F               	movlw	127
  9219     020B  0020               	movlb	0	; select bank0
  9220     020C  00B2               	movwf	___flmul@prod+3
  9221     020D  3080               	movlw	128
  9222     020E  00B1               	movwf	___flmul@prod+2
  9223     020F  3000               	movlw	0
  9224     0210  00B0               	movwf	___flmul@prod+1
  9225     0211  3000               	movlw	0
  9226     0212  00AF               	movwf	___flmul@prod
  9227     0213  2A3A               	goto	i1l1341
  9228     0214                     i1l2536:
  9229     0214  0020               	movlb	0	; select bank0
  9230     0215  0834               	movf	___flmul@temp+1,w
  9231     0216  3A80               	xorlw	128
  9232     0217  00F9               	movwf	??___flmul
  9233     0218  3080               	movlw	128
  9234     0219  0279               	subwf	??___flmul,w
  9235     021A  1D03               	skipz
  9236     021B  2A1E               	goto	u204_25
  9237     021C  3001               	movlw	1
  9238     021D  0233               	subwf	___flmul@temp,w
  9239     021E                     u204_25:
  9240     021E  1803               	skipnc
  9241     021F  2A2B               	goto	i1l2542
  9242     0220  3000               	movlw	0
  9243     0221  0020               	movlb	0	; select bank0
  9244     0222  00B2               	movwf	___flmul@prod+3
  9245     0223  3000               	movlw	0
  9246     0224  00B1               	movwf	___flmul@prod+2
  9247     0225  3000               	movlw	0
  9248     0226  00B0               	movwf	___flmul@prod+1
  9249     0227  3000               	movlw	0
  9250     0228  00AF               	movwf	___flmul@prod
  9251     0229  01A8               	clrf	___flmul@sign
  9252     022A  2A3A               	goto	i1l1341
  9253     022B                     i1l2542:
  9254     022B  0020               	movlb	0	; select bank0
  9255     022C  0833               	movf	___flmul@temp,w
  9256     022D  00AE               	movwf	___flmul@bexp
  9257     022E  30FF               	movlw	255
  9258     022F  05AF               	andwf	___flmul@prod,f
  9259     0230  30FF               	movlw	255
  9260     0231  05B0               	andwf	___flmul@prod+1,f
  9261     0232  307F               	movlw	127
  9262     0233  05B1               	andwf	___flmul@prod+2,f
  9263     0234  3000               	movlw	0
  9264     0235  05B2               	andwf	___flmul@prod+3,f
  9265     0236  182E               	btfsc	___flmul@bexp,0
  9266     0237  17B1               	bsf	___flmul@prod+2,7
  9267     0238  362E               	lsrf	___flmul@bexp,w
  9268     0239  00B2               	movwf	___flmul@prod+3
  9269     023A                     i1l1341:
  9270     023A  0828               	movf	___flmul@sign,w
  9271     023B  00F9               	movwf	??___flmul
  9272     023C  0879               	movf	??___flmul,w
  9273     023D  04B2               	iorwf	___flmul@prod+3,f
  9274     023E  0832               	movf	___flmul@prod+3,w
  9275     023F  00A3               	movwf	?___flmul+3
  9276     0240  0831               	movf	___flmul@prod+2,w
  9277     0241  00A2               	movwf	?___flmul+2
  9278     0242  0830               	movf	___flmul@prod+1,w
  9279     0243  00A1               	movwf	?___flmul+1
  9280     0244  082F               	movf	___flmul@prod,w
  9281     0245  00A0               	movwf	?___flmul
  9282     0246  0008               	return
  9283     0247                     __end_of___flmul:
  9284                           
  9285                           	psect	text50
  9286     0D04                     __ptext50:	
  9287 ;; *************** function __Umul8_16 *****************
  9288 ;; Defined at:
  9289 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul8_16.c"
  9290 ;; Parameters:    Size  Location     Type
  9291 ;;  multiplier      1    wreg     unsigned char 
  9292 ;;  multiplicand    1    0[COMMON] unsigned char 
  9293 ;; Auto vars:     Size  Location     Type
  9294 ;;  multiplier      1    8[COMMON] unsigned char 
  9295 ;;  word_mpld       2    6[COMMON] unsigned short 
  9296 ;;  product         2    4[COMMON] unsigned short 
  9297 ;; Return value:  Size  Location     Type
  9298 ;;                  2    0[COMMON] unsigned int 
  9299 ;; Registers used:
  9300 ;;		wreg, status,2, status,0
  9301 ;; Tracked objects:
  9302 ;;		On entry : 1F/0
  9303 ;;		On exit  : 1F/0
  9304 ;;		Unchanged: 1F/0
  9305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9306 ;;      Params:         2       0       0       0       0       0
  9307 ;;      Locals:         5       0       0       0       0       0
  9308 ;;      Temps:          2       0       0       0       0       0
  9309 ;;      Totals:         9       0       0       0       0       0
  9310 ;;Total ram usage:        9 bytes
  9311 ;; Hardware stack levels used: 1
  9312 ;; This function calls:
  9313 ;;		Nothing
  9314 ;; This function is called by:
  9315 ;;		___flmul
  9316 ;; This function uses a non-reentrant model
  9317 ;;
  9318                           
  9319     0D04                     __Umul8_16:	
  9320                           ;psect for function __Umul8_16
  9321                           
  9322                           
  9323                           ;incstack = 0
  9324                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  9325                           ;__Umul8_16@multiplier stored from wreg
  9326     0D04  00F8               	movwf	__Umul8_16@multiplier
  9327     0D05  01F4               	clrf	__Umul8_16@product
  9328     0D06  01F5               	clrf	__Umul8_16@product+1
  9329     0D07  0870               	movf	__Umul8_16@multiplicand,w
  9330     0D08  00F2               	movwf	??__Umul8_16
  9331     0D09  01F3               	clrf	??__Umul8_16+1
  9332     0D0A  0872               	movf	??__Umul8_16,w
  9333     0D0B  00F6               	movwf	__Umul8_16@word_mpld
  9334     0D0C  0873               	movf	??__Umul8_16+1,w
  9335     0D0D  00F7               	movwf	__Umul8_16@word_mpld+1
  9336     0D0E                     i1l2288:
  9337     0D0E  1C78               	btfss	__Umul8_16@multiplier,0
  9338     0D0F  2D14               	goto	i1l1348
  9339     0D10  0876               	movf	__Umul8_16@word_mpld,w
  9340     0D11  07F4               	addwf	__Umul8_16@product,f
  9341     0D12  0877               	movf	__Umul8_16@word_mpld+1,w
  9342     0D13  3DF5               	addwfc	__Umul8_16@product+1,f
  9343     0D14                     i1l1348:
  9344     0D14  3001               	movlw	1
  9345     0D15                     u155_25:
  9346     0D15  35F6               	lslf	__Umul8_16@word_mpld,f
  9347     0D16  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  9348     0D17  0B89               	decfsz	9,f
  9349     0D18  2D15               	goto	u155_25
  9350     0D19  1003               	clrc
  9351     0D1A  0CF8               	rrf	__Umul8_16@multiplier,f
  9352     0D1B  0878               	movf	__Umul8_16@multiplier,w
  9353     0D1C  1D03               	btfss	3,2
  9354     0D1D  2D0E               	goto	i1l2288
  9355     0D1E  0875               	movf	__Umul8_16@product+1,w
  9356     0D1F  00F1               	movwf	?__Umul8_16+1
  9357     0D20  0874               	movf	__Umul8_16@product,w
  9358     0D21  00F0               	movwf	?__Umul8_16
  9359     0D22  0008               	return
  9360     0D23                     __end_of__Umul8_16:
  9361                           
  9362                           	psect	text51
  9363     0BBD                     __ptext51:	
  9364 ;; *************** function _TMR1_Reload *****************
  9365 ;; Defined at:
  9366 ;;		line 146 in file "mcc_generated_files/tmr1.c"
  9367 ;; Parameters:    Size  Location     Type
  9368 ;;		None
  9369 ;; Auto vars:     Size  Location     Type
  9370 ;;		None
  9371 ;; Return value:  Size  Location     Type
  9372 ;;                  1    wreg      void 
  9373 ;; Registers used:
  9374 ;;		wreg, status,2, status,0, pclath, cstack
  9375 ;; Tracked objects:
  9376 ;;		On entry : 1F/0
  9377 ;;		On exit  : 1F/0
  9378 ;;		Unchanged: 0/0
  9379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9380 ;;      Params:         0       0       0       0       0       0
  9381 ;;      Locals:         0       0       0       0       0       0
  9382 ;;      Temps:          0       0       0       0       0       0
  9383 ;;      Totals:         0       0       0       0       0       0
  9384 ;;Total ram usage:        0 bytes
  9385 ;; Hardware stack levels used: 1
  9386 ;; Hardware stack levels required when called: 1
  9387 ;; This function calls:
  9388 ;;		_TMR1_WriteTimer
  9389 ;; This function is called by:
  9390 ;;		_mede_height
  9391 ;; This function uses a non-reentrant model
  9392 ;;
  9393                           
  9394     0BBD                     _TMR1_Reload:	
  9395                           ;psect for function _TMR1_Reload
  9396                           
  9397                           
  9398                           ;mcc_generated_files/tmr1.c: 148:     TMR1_WriteTimer(timer1ReloadVal);
  9399                           
  9400                           ;incstack = 0
  9401                           ; Regs used in _TMR1_Reload: [wreg+status,2+status,0+pclath+cstack]
  9402     0BBD  0021               	movlb	1	; select bank1
  9403     0BBE  0844               	movf	(_timer1ReloadVal+1)^(0+128),w	;volatile
  9404     0BBF  00F1               	movwf	TMR1_WriteTimer@timerVal+1
  9405     0BC0  0843               	movf	_timer1ReloadVal^(0+128),w	;volatile
  9406     0BC1  00F0               	movwf	TMR1_WriteTimer@timerVal
  9407     0BC2  318C  2441         	fcall	_TMR1_WriteTimer
  9408     0BC4  0008               	return
  9409     0BC5                     __end_of_TMR1_Reload:
  9410                           
  9411                           	psect	text52
  9412     0C41                     __ptext52:	
  9413 ;; *************** function _TMR1_WriteTimer *****************
  9414 ;; Defined at:
  9415 ;;		line 124 in file "mcc_generated_files/tmr1.c"
  9416 ;; Parameters:    Size  Location     Type
  9417 ;;  timerVal        2    0[COMMON] unsigned short 
  9418 ;; Auto vars:     Size  Location     Type
  9419 ;;		None
  9420 ;; Return value:  Size  Location     Type
  9421 ;;                  1    wreg      void 
  9422 ;; Registers used:
  9423 ;;		wreg
  9424 ;; Tracked objects:
  9425 ;;		On entry : 1F/1
  9426 ;;		On exit  : 1F/0
  9427 ;;		Unchanged: 0/0
  9428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9429 ;;      Params:         2       0       0       0       0       0
  9430 ;;      Locals:         0       0       0       0       0       0
  9431 ;;      Temps:          0       0       0       0       0       0
  9432 ;;      Totals:         2       0       0       0       0       0
  9433 ;;Total ram usage:        2 bytes
  9434 ;; Hardware stack levels used: 1
  9435 ;; This function calls:
  9436 ;;		Nothing
  9437 ;; This function is called by:
  9438 ;;		_TMR1_Reload
  9439 ;; This function uses a non-reentrant model
  9440 ;;
  9441                           
  9442     0C41                     _TMR1_WriteTimer:	
  9443                           ;psect for function _TMR1_WriteTimer
  9444                           
  9445                           
  9446                           ;mcc_generated_files/tmr1.c: 124: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 125: {;mcc_generated_files/tmr1.c: 126:     if (T1CONbits.nT1SYNC == 1)
  9447                           
  9448                           ;incstack = 0
  9449                           ; Regs used in _TMR1_WriteTimer: [wreg]
  9450     0C41  0020               	movlb	0	; select bank0
  9451     0C42  1D18               	btfss	24,2	;volatile
  9452     0C43  2C4B               	goto	i1l2282
  9453                           
  9454                           ;mcc_generated_files/tmr1.c: 127:     {;mcc_generated_files/tmr1.c: 129:         T1CONbi
      +                          ts.TMR1ON = 0;
  9455     0C44  1018               	bcf	24,0	;volatile
  9456                           
  9457                           ;mcc_generated_files/tmr1.c: 132:         TMR1H = (uint8_t)(timerVal >> 8);
  9458     0C45  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  9459     0C46  0097               	movwf	23	;volatile
  9460                           
  9461                           ;mcc_generated_files/tmr1.c: 133:         TMR1L = (uint8_t)timerVal;
  9462     0C47  0870               	movf	TMR1_WriteTimer@timerVal,w
  9463     0C48  0096               	movwf	22	;volatile
  9464                           
  9465                           ;mcc_generated_files/tmr1.c: 136:         T1CONbits.TMR1ON =1;
  9466     0C49  1418               	bsf	24,0	;volatile
  9467                           
  9468                           ;mcc_generated_files/tmr1.c: 137:     }
  9469     0C4A  0008               	return
  9470     0C4B                     i1l2282:
  9471                           
  9472                           ;mcc_generated_files/tmr1.c: 139:     {;mcc_generated_files/tmr1.c: 141:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
  9473     0C4B  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  9474     0C4C  0097               	movwf	23	;volatile
  9475                           
  9476                           ;mcc_generated_files/tmr1.c: 142:         TMR1L = (uint8_t)timerVal;
  9477     0C4D  0870               	movf	TMR1_WriteTimer@timerVal,w
  9478     0C4E  0096               	movwf	22	;volatile
  9479     0C4F  0008               	return
  9480     0C50                     __end_of_TMR1_WriteTimer:
  9481                           
  9482                           	psect	text53
  9483     0C9E                     __ptext53:	
  9484 ;; *************** function _TMR1_ReadTimer *****************
  9485 ;; Defined at:
  9486 ;;		line 109 in file "mcc_generated_files/tmr1.c"
  9487 ;; Parameters:    Size  Location     Type
  9488 ;;		None
  9489 ;; Auto vars:     Size  Location     Type
  9490 ;;  readVal         2    7[COMMON] unsigned short 
  9491 ;;  readValLow      1   10[COMMON] unsigned char 
  9492 ;;  readValHigh     1    9[COMMON] unsigned char 
  9493 ;; Return value:  Size  Location     Type
  9494 ;;                  2    0[COMMON] unsigned short 
  9495 ;; Registers used:
  9496 ;;		wreg
  9497 ;; Tracked objects:
  9498 ;;		On entry : 1F/0
  9499 ;;		On exit  : 1F/0
  9500 ;;		Unchanged: 0/0
  9501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9502 ;;      Params:         2       0       0       0       0       0
  9503 ;;      Locals:         4       0       0       0       0       0
  9504 ;;      Temps:          5       0       0       0       0       0
  9505 ;;      Totals:        11       0       0       0       0       0
  9506 ;;Total ram usage:       11 bytes
  9507 ;; Hardware stack levels used: 1
  9508 ;; This function calls:
  9509 ;;		Nothing
  9510 ;; This function is called by:
  9511 ;;		_mede_height
  9512 ;; This function uses a non-reentrant model
  9513 ;;
  9514                           
  9515     0C9E                     _TMR1_ReadTimer:	
  9516                           ;psect for function _TMR1_ReadTimer
  9517                           
  9518                           
  9519                           ;mcc_generated_files/tmr1.c: 111:     uint16_t readVal;;mcc_generated_files/tmr1.c: 112:
      +                               uint8_t readValHigh;;mcc_generated_files/tmr1.c: 113:     uint8_t readValLow;;mcc_g
      +                          enerated_files/tmr1.c: 116:     readValLow = TMR1L;
  9520                           
  9521                           ;incstack = 0
  9522                           ; Regs used in _TMR1_ReadTimer: [wreg]
  9523     0C9E  0816               	movf	22,w	;volatile
  9524     0C9F  00FA               	movwf	TMR1_ReadTimer@readValLow
  9525                           
  9526                           ;mcc_generated_files/tmr1.c: 117:     readValHigh = TMR1H;
  9527     0CA0  0817               	movf	23,w	;volatile
  9528     0CA1  00F9               	movwf	TMR1_ReadTimer@readValHigh
  9529                           
  9530                           ;mcc_generated_files/tmr1.c: 119:     readVal = ((uint16_t)readValHigh << 8) | readValLo
      +                          w;
  9531     0CA2  087A               	movf	TMR1_ReadTimer@readValLow,w
  9532     0CA3  00F2               	movwf	??_TMR1_ReadTimer
  9533     0CA4  01F3               	clrf	??_TMR1_ReadTimer+1
  9534     0CA5  0879               	movf	TMR1_ReadTimer@readValHigh,w
  9535     0CA6  00F4               	movwf	??_TMR1_ReadTimer+2
  9536     0CA7  01F5               	clrf	??_TMR1_ReadTimer+3
  9537     0CA8  0874               	movf	??_TMR1_ReadTimer+2,w
  9538     0CA9  00F5               	movwf	??_TMR1_ReadTimer+3
  9539     0CAA  01F4               	clrf	??_TMR1_ReadTimer+2
  9540     0CAB  0872               	movf	??_TMR1_ReadTimer,w
  9541     0CAC  0474               	iorwf	??_TMR1_ReadTimer+2,w
  9542     0CAD  00F7               	movwf	TMR1_ReadTimer@readVal
  9543     0CAE  0873               	movf	??_TMR1_ReadTimer+1,w
  9544     0CAF  0475               	iorwf	??_TMR1_ReadTimer+3,w
  9545     0CB0  00F8               	movwf	TMR1_ReadTimer@readVal+1
  9546                           
  9547                           ;mcc_generated_files/tmr1.c: 121:     return readVal;
  9548     0CB1  0878               	movf	TMR1_ReadTimer@readVal+1,w
  9549     0CB2  00F1               	movwf	?_TMR1_ReadTimer+1
  9550     0CB3  0877               	movf	TMR1_ReadTimer@readVal,w
  9551     0CB4  00F0               	movwf	?_TMR1_ReadTimer
  9552     0CB5  0008               	return
  9553     0CB6                     __end_of_TMR1_ReadTimer:
  9554                           
  9555                           	psect	text54
  9556     0B75                     __ptext54:	
  9557 ;; *************** function _PIN_MANAGER_IOC *****************
  9558 ;; Defined at:
  9559 ;;		line 98 in file "mcc_generated_files/pin_manager.c"
  9560 ;; Parameters:    Size  Location     Type
  9561 ;;		None
  9562 ;; Auto vars:     Size  Location     Type
  9563 ;;		None
  9564 ;; Return value:  Size  Location     Type
  9565 ;;                  1    wreg      void 
  9566 ;; Registers used:
  9567 ;;		None
  9568 ;; Tracked objects:
  9569 ;;		On entry : 0/0
  9570 ;;		On exit  : 0/0
  9571 ;;		Unchanged: 0/0
  9572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9573 ;;      Params:         0       0       0       0       0       0
  9574 ;;      Locals:         0       0       0       0       0       0
  9575 ;;      Temps:          0       0       0       0       0       0
  9576 ;;      Totals:         0       0       0       0       0       0
  9577 ;;Total ram usage:        0 bytes
  9578 ;; Hardware stack levels used: 1
  9579 ;; This function calls:
  9580 ;;		Nothing
  9581 ;; This function is called by:
  9582 ;;		_INTERRUPT_InterruptManager
  9583 ;; This function uses a non-reentrant model
  9584 ;;
  9585                           
  9586     0B75                     _PIN_MANAGER_IOC:	
  9587                           ;psect for function _PIN_MANAGER_IOC
  9588                           
  9589                           
  9590                           ;incstack = 0
  9591                           ; Regs used in _PIN_MANAGER_IOC: []
  9592     0B75  0008               	return
  9593     0B76                     __end_of_PIN_MANAGER_IOC:
  9594     007E                     btemp	set	126	;btemp
  9595     007E                     int$flags	set	126
  9596     007E                     wtemp0	set	126
  9597                           
  9598                           	psect	config
  9599                           
  9600                           ;Config register CONFIG1 @ 0x8007
  9601                           ;	Oscillator Selection
  9602                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  9603                           ;	Watchdog Timer Enable
  9604                           ;	WDTE = OFF, WDT disabled
  9605                           ;	Power-up Timer Enable
  9606                           ;	PWRTE = OFF, PWRT disabled
  9607                           ;	MCLR Pin Function Select
  9608                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  9609                           ;	Flash Program Memory Code Protection
  9610                           ;	CP = OFF, Program memory code protection is disabled
  9611                           ;	Data Memory Code Protection
  9612                           ;	CPD = OFF, Data memory code protection is disabled
  9613                           ;	Brown-out Reset Enable
  9614                           ;	BOREN = ON, Brown-out Reset enabled
  9615                           ;	Clock Out Enable
  9616                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  9617                           ;	Internal/External Switchover
  9618                           ;	IESO = ON, Internal/External Switchover mode is enabled
  9619                           ;	Fail-Safe Clock Monitor Enable
  9620                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  9621     8007                     	org	32775
  9622     8007  3FE4               	dw	16356
  9623                           
  9624                           ;Config register CONFIG2 @ 0x8008
  9625                           ;	Flash Memory Self-Write Protection
  9626                           ;	WRT = OFF, Write protection off
  9627                           ;	PLL Enable
  9628                           ;	PLLEN = OFF, 4x PLL disabled
  9629                           ;	Stack Overflow/Underflow Reset Enable
  9630                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  9631                           ;	Brown-out Reset Voltage Selection
  9632                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  9633                           ;	In-Circuit Debugger Mode
  9634                           ;	DEBUG = 0x1, unprogrammed default
  9635                           ;	Low-Voltage Programming Enable
  9636                           ;	LVP = ON, Low-voltage programming enabled
  9637     8008                     	org	32776
  9638     8008  3EFF               	dw	16127

Data Sizes:
    Strings     0
    Constant    204
    Data        20
    BSS         67
    Persistent  40
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     51      80
    BANK1            80     34      79
    BANK2            80      0      21
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), NULL(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), NULL(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), NULL(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    TMR1_GateInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> mede_height(), TMR1_DefaultGateInterruptHandler(), NULL(), 

    TMR1_SetGateInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> mede_height(), TMR1_DefaultGateInterruptHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _mede_height->___flmul
    i1___fltol->___flmul
    ___flmul->__Umul8_16
    _TMR1_Reload->_TMR1_WriteTimer

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _TMR1_GATE_ISR->_mede_height
    _mede_height->___xxtofl
    i1___fltol->___flmul
    ___xxtofl->i1___fltol

Critical Paths under _main in BANK1

    _fluxpos->_daUmPasso
    _daUmPasso->_definePassoMotor
    _envia_Tx->___fltol
    _controlchoose->_pwmcontrol
    _pwmcontrol->___atdiv
    ___atdiv->___tmul
    _fluxcontrol->___tmul
    _analisa_Rx->_EPWM1_LoadDutyValue
    _TMR1_Initialize->_TMR1_SetGateInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    5157
                                             33 BANK1      1     1      0
                  _ADC_GetConversion
                        _EUSART_Read
                 _EUSART_is_rx_ready
                  _SYSTEM_Initialize
                     _TMR0_ReadTimer
       _TMR1_SetGateInterruptHandler
                     _TMR4_StopTimer
            _TMR6_LoadPeriodRegister
                    _TMR6_WriteTimer
                         _analisa_Rx
                      _controlchoose
                           _envia_Tx
                            _fluxpos
 ---------------------------------------------------------------------------------
 (1) _fluxpos                                              0     0      0     306
                          _daUmPasso
 ---------------------------------------------------------------------------------
 (2) _daUmPasso                                            1     1      0     306
                                              3 BANK1      1     1      0
                   _definePassoMotor
 ---------------------------------------------------------------------------------
 (3) _definePassoMotor                                     3     2      1     240
                                              0 BANK1      3     2      1
 ---------------------------------------------------------------------------------
 (1) _envia_Tx                                             0     0      0     427
                       _EUSART_Write
                            ___fltol
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     405
                                              0 BANK1     10     6      4
 ---------------------------------------------------------------------------------
 (2) _EUSART_Write                                         1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _controlchoose                                        0     0      0    3421
                    _TMR4_StartTimer
                        _fluxcontrol
                         _pwmcontrol
 ---------------------------------------------------------------------------------
 (2) _pwmcontrol                                          12    12      0    2281
                                             21 BANK1     12    12      0
                _EPWM1_LoadDutyValue
                            ___atdiv
                            ___lwdiv
                             ___tmul
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     414
                                              0 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (3) ___atdiv                                             12     6      6     452
                                              9 BANK1     12     6      6
                             ___tmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _fluxcontrol                                          6     6      0    1140
                                              9 BANK1      6     6      0
                             ___tmul
 ---------------------------------------------------------------------------------
 (3) ___tmul                                               9     3      6    1140
                                              0 BANK1      9     3      6
 ---------------------------------------------------------------------------------
 (2) _TMR4_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _analisa_Rx                                           0     0      0     272
                _EPWM1_LoadDutyValue
 ---------------------------------------------------------------------------------
 (3) _EPWM1_LoadDutyValue                                  4     2      2     272
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (1) _TMR6_WriteTimer                                      1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _TMR6_LoadPeriodRegister                              1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _TMR4_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR0_ReadTimer                                       1     1      0      23
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     468
                     _ADC_Initialize
                    _CMP1_Initialize
                     _DAC_Initialize
                   _EPWM1_Initialize
                  _EUSART_Initialize
                     _FVR_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
                    _TMR6_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     174
       _TMR1_SetGateInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetGateInterruptHandler                         2     0      2     174
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     294
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _EPWM1_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DAC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CMP1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_is_rx_ready                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Read                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion                                    4     2      2      22
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0    3622
                    _PIN_MANAGER_IOC
                      _TMR1_GATE_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR1_GATE_ISR                                        0     0      0    3622
                                NULL *
   _TMR1_DefaultGateInterruptHandler *
                        _mede_height *
 ---------------------------------------------------------------------------------
 (6) _mede_height                                          6     6      0    3622
                                             45 BANK0      6     6      0
                     _TMR1_ReadTimer
                        _TMR1_Reload
                            ___flmul
                           ___xxtofl
                          i1___fltol
                          i1___lwdiv
 ---------------------------------------------------------------------------------
 (7) i1___lwdiv                                            8     4      4     214
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (7) i1___fltol                                           10     6      4     281
                                             21 BANK0     10     6      4
                            ___flmul (ARG)
                          i1___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (7) ___xxtofl                                            14    10      4     474
                                             31 BANK0     14    10      4
                          i1___fltol (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flmul                                             26    18      8    2418
                                              9 COMMON     5     5      0
                                              0 BANK0     21    13      8
                          __Umul8_16
                          i1___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (8) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (7) _TMR1_Reload                                          0     0      0     166
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (8) _TMR1_WriteTimer                                      2     0      2     166
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (7) _TMR1_ReadTimer                                      11     9      2      69
                                              0 COMMON    11     9      2
 ---------------------------------------------------------------------------------
 (6) _TMR1_DefaultGateInterruptHandler                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _PIN_MANAGER_IOC                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion
   _EUSART_Read
   _EUSART_is_rx_ready
   _SYSTEM_Initialize
     _ADC_Initialize
     _CMP1_Initialize
     _DAC_Initialize
     _EPWM1_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _FVR_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
     _TMR1_Initialize
       _TMR1_SetGateInterruptHandler
     _TMR2_Initialize
     _TMR4_Initialize
     _TMR6_Initialize
     _WDT_Initialize
   _TMR0_ReadTimer
   _TMR1_SetGateInterruptHandler
   _TMR4_StopTimer
   _TMR6_LoadPeriodRegister
   _TMR6_WriteTimer
   _analisa_Rx
     _EPWM1_LoadDutyValue
   _controlchoose
     _TMR4_StartTimer
     _fluxcontrol
       ___tmul
     _pwmcontrol
       _EPWM1_LoadDutyValue
       ___atdiv
         ___tmul (ARG)
       ___lwdiv
       ___tmul
   _envia_Tx
     _EUSART_Write
     ___fltol
   _fluxpos
     _daUmPasso
       _definePassoMotor

 _INTERRUPT_InterruptManager (ROOT)
   _PIN_MANAGER_IOC
   _TMR1_GATE_ISR
     NULL(Fake) *
     _TMR1_DefaultGateInterruptHandler *
     _mede_height *
       _TMR1_ReadTimer
       _TMR1_Reload
         _TMR1_WriteTimer
       ___flmul
         __Umul8_16
         i1___lwdiv (ARG)
       ___xxtofl
         i1___fltol (ARG)
           ___flmul (ARG)
           i1___lwdiv (ARG)
       i1___fltol
       i1___lwdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      C2       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     33      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     22      4F       8       98.8%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      15      10       26.2%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      C2      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Mon Sep 09 22:05:12 2024

                            ??_CMP1_Initialize 00CC                               ___atdiv@quotient 00DE  
                                           _dc 00BB                         __end_of_FVR_Initialize 0B80  
                              _timer0ReloadVal 0069                            __Umul8_16@word_mpld 0076  
                                          l240 0C27                                            l333 0CC8  
                                          l247 0BF6                                            l615 0E14  
                                          l712 0442                                            l633 0E1F  
                                          l609 0E10                                            l618 0E16  
                                          l723 0330                                            l627 0E1B  
                                          l655 0E3C                                            l639 0E33  
                                          l649 0E38                                            l658 0E3E  
                                          l667 0E43                                            l599 0E0B  
                                          l687 0E00                                            _PR2 001B  
                                          _PR4 0416                                            _PR6 041D  
                              _timer1ReloadVal 00C3                                            _kdf 012C  
                                          _kdp 0123                                            _kip 0126  
                                          _kpf 006A                                            _vRx 00BD  
                                          _vTx 00BF                                            _kpp 0129  
               ?_EUSART_SetFramingErrorHandler 00CC                                   i1___fltol@f1 0035  
                                 ?_mede_height 0070                                _TMR2_Initialize 0BED  
                                          wreg 0009                                   ___flmul@aexp 0029  
                                 ___flmul@bexp 002E       __end_of_TMR1_DefaultGateInterruptHandler 0003  
           ??_TMR1_DefaultGateInterruptHandler 0070              ?_TMR1_DefaultGateInterruptHandler 0070  
             _TMR1_DefaultGateInterruptHandler 0002                                   ___flmul@sign 0028  
                                 ___flmul@temp 0033                                   ___flmul@prod 002F  
                                 ?_EUSART_Read 0070                                   ___fltol@exp1 00D5  
                                         l1133 0F06                                           l1049 0F2F  
                                         l3010 0597                                           l3002 0583  
                                         l3100 06CD                                           l3102 06D8  
                                         l3110 06C3                                           l3024 05CB  
                                         l3032 05D2                                           l2400 07E0  
                                         l2320 0E21                                           l3112 06EA  
                                         l3120 06F7                                           l2410 07FB  
                                         l2330 0E57                                           l2322 0E2F  
                                         l2340 0D55                                           l2406 07F2  
                                         l2336 0D4D                                           l2328 0E49  
                                         l3136 070C                                           l3080 06AD  
                                         l2380 0F7A                                           l3156 0733  
                                         l3148 0723                                           l2366 0F4A  
                                         l2358 0F3D                                           l2384 0F85  
                                         l2376 0F70                                           l2368 0F57  
                                         l2800 02C7                                           l3088 06B7  
                                         l2810 0349                                           l2812 0354  
                                         l2804 032D                                           l2398 07D4  
                                         l2814 035B                                           l2840 041E  
                                         l2832 040A                                           l2808 0338  
                                         l2922 0C31                                           l2842 0429  
                                         l2834 040E                                           l2826 03B6  
                                         l2818 036D                                           l2844 0430  
                                         l2828 03C1                                           l2780 0C81  
                                         l2790 027D                                           l2870 0ED1  
                                         l2776 0C7A                                           l2960 0DF4  
                                         l2952 0DDC                                           l2794 02AE  
                                         l2866 0EC8                                           l2796 02B5  
                                         l2788 0272                                           l2972 0C6E  
                                         l2956 0DE8                                           l2886 0EF4  
                                         l2984 0537                                           l2992 0549  
                                         l2976 0517                                           l2968 0C67  
                                         l2896 0F13                                           l2888 0F02  
                                         l2994 054C                                           _LATA 010C  
                                         _LATB 010D                                           u2401 0255  
                                         u2402 0256                                           u2403 025F  
                                         u2404 0260                                           u2501 038A  
                                         u2502 038B                                           u1615 0D56  
                                         u2503 0394                                           u2504 0395  
                                         u1625 0D5C                                           u1705 0F67  
                                         u3057 071F                                           u3067 0CC3  
                                         u1715 0F71                                           u1575 0CF9  
                                         u2455 02F0                                           u2625 0EF5  
                                         u1675 0F4D                                           u1755 07D7  
                                         u2900 06AB                                           u1695 0F58  
                                         u1775 07E1                                           u2655 0F0A  
                                         u2735 0DD6                                           u1785 07EB  
                                         u2745 0DE2                                           u1795 07F3  
                                         u2595 0EDA                                           u2755 0DEE  
                                         u2765 0DFA                                           _TMR0 0015  
                                         _TMR2 001A                                           _TMR4 0415  
                                         _TMR6 041C                                           _WPUA 020C  
                                         _WPUB 020D                              ??_TMR6_WriteTimer 00CC  
                ?_TMR1_SetGateInterruptHandler 00CC                                           _main 069C  
                                         _flux 005B                                           fsr0h 0005  
                                         fsr1h 0007                                           indf0 0000  
                                         fsr0l 0004                                           indf1 0001  
                                         fsr1l 0006                                           btemp 007E  
                                         start 0019                          ??_EPWM1_LoadDutyValue 00CE  
                      __end_of_TMR0_Initialize 0C08                                ?_FVR_Initialize 0070  
                                ?_EUSART_Write 0070                  __end_of_OSCILLATOR_Initialize 0BBD  
                                ___fltol@sign1 00D4                                          ?_main 0070  
                              __end_of___atdiv 0F8C                                __end_of___flmul 0247  
                              __end_of___fltol 0F22                                          _T1CON 0018  
                                        _T2CON 001C                                          _T4CON 0417  
                                        _T6CON 041E                                __end_of___lwdiv 0800  
                                        i1l180 0017                                          i1l174 000D  
                                        _RCREG 0199                                          _RCSTA 019D  
                                        _TMR1H 0017                                          _TMR1L 0016  
                                        _TRISA 008C                                          _TRISB 008D  
                                 ?_fluxcontrol 0070                                          _TXREG 019A  
                                        _TXSTA 019E                                _TMR4_Initialize 0C08  
                      __end_of_PIN_MANAGER_IOC 0B76                                 _WDT_Initialize 0B80  
                                        _error 00B0                      ??_TMR6_LoadPeriodRegister 00CC  
                                        _passo 00C6                                __end_of_fluxpos 0E06  
                                _controlchoice 00CA                                  _controlchoose 0C5F  
                      __end_of_TMR1_Initialize 0CE9                                          pclath 000A  
                               i1___fltol@exp1 003E                                          status 0003  
                                        wtemp0 007E                               daUmPasso@sentido 00CF  
                              _TMR1_WriteTimer 0C41                               ??_DAC_Initialize 00CC  
                              __initialization 001B                                   __end_of_main 0739  
                               ??_EUSART_Write 00CC                        __end_of_TMR2_Initialize 0BF5  
                  ?_INTERRUPT_InterruptManager 0070                                         ??_main 00ED  
                       __end_of_WDT_Initialize 0B84                                _TMR6_Initialize 0C12  
            _EUSART_DefaultFramingErrorHandler 0000                                         _ADCON0 009D  
                                       _ADCON1 009E                     _EUSART_OverrunErrorHandler 0131  
                               ?_controlchoose 0070                                         _ADRESH 009C  
                                       _ADRESL 009B                                         _CCPR1H 0292  
                                       _CCPR1L 0291                                         _ANSELA 018C  
                                       _ANSELB 018D                     __end_of_EUSART_is_rx_ready 0B8D  
                                       _BORCON 0116                                         _T1GCON 0019  
                      TMR1_WriteTimer@timerVal 0070                                         i1l1133 0EA5  
                                       i1l1341 023A                                         i1l1348 0D14  
                                       i1l1373 0756                                         i1l2510 01A6  
                                       i1l2430 0062                                         i1l2512 01BD  
                                       i1l2432 006A                                         i1l2600 0E67  
                                       i1l2282 0C4B                                         i1l2522 01D6  
                                       i1l2450 008B                                         i1l1386 079E  
                                       i1l1387 07A8                                         i1l1379 078A  
                                       i1l2532 01FF                                         i1l2428 0060  
                                       i1l2620 0E93                                         i1l2604 0E70  
                                       i1l2542 022B                                         i1l2518 01D4  
                                       i1l2446 0081                                         i1l2630 0EB2  
                                       i1l2622 0EA1                                         i1l2288 0D0E  
                                       i1l2536 0214                                         i1l2448 0083  
                                       i1l2560 074E                                         i1l2458 0099  
                                       i1l2570 0767                                         i1l2580 079C  
                                       i1l2572 0777                                         i1l2652 0DBD  
                                       i1l2644 0D9F                                         u202_25 01ED  
                                       i1l2582 078F                                         i1l2566 0765  
                                       i1l2646 0DAB                                         i1l2656 0DC6  
                                       i1l2594 07C3                                         i1l2860 0647  
                                       u203_25 0208                                         u211_25 0784  
                                       i1l2858 060B                                         u204_25 021E  
                                       u213_25 0796                                         u221_25 0E79  
                                       u231_25 0DA2                                         u224_25 0E94  
                                       u217_25 07B0                                         u209_25 0770  
                                       u233_25 0DAC                                         u234_25 0DB6  
                                       _FVRCON 0117                                         u155_25 0D15  
                                       u227_25 0EA9                                         u235_25 0DBE  
                                       u190_25 012F                                         u191_25 0179  
                                       u192_25 0195                                         u193_25 01A9  
                                       u195_25 01B2                                         u189_25 0106  
                                       _OSCCON 0099                                         _SPBRGH 019C  
                                       _SPBRGL 019B                                         _WDTCON 0097  
                             __end_of___xxtofl 07CC                                _TMR4_StartTimer 0B79  
                        __end_of_TMR1_GATE_ISR 0C27                 ??_TMR1_SetGateInterruptHandler 00CE  
                                 _CCPTMRS0bits 029E                                   ?_TMR1_Reload 0070  
                                       ___tmul 0D47                                      ??___atdiv 00DB  
                                    ??___flmul 0079                                      ??___fltol 00D0  
                             __end_of_envia_Tx 1000                                      ??___lwdiv 00D0  
                                       _height 00B3                               ?_TMR0_Initialize 0070  
                                       _errorp 00AD                        __end_of_TMR4_Initialize 0C12  
                                       _outpre 00A4                                         _output 00C1  
                            __end_ofi1___fltol 0EC1                              __end_ofi1___lwdiv 0DCB  
                                    ??_fluxpos 00D0                                ?_WDT_Initialize 0070  
                              i1___fltol@sign1 003D                       ADC_GetConversion@channel 00CF  
 TMR1_SetGateInterruptHandler@InterruptHandler 00CC                               ?_PIN_MANAGER_IOC 0070  
                      __end_of_TMR1_WriteTimer 0C50                               ?_TMR1_Initialize 0070  
                                 ___xxtofl@arg 0049                                   ___xxtofl@exp 0048  
                            _SYSTEM_Initialize 0D6D                                   ___xxtofl@val 003F  
                      __end_of__initialization 0047                                _CMP1_Initialize 0B92  
                           ?_SYSTEM_Initialize 0070                                     ___fltol@f1 00CC  
                            ?_EPWM1_Initialize 0070                                 __pcstackCOMMON 0070  
                                 __pidataBANK0 0B84                                   __pidataBANK1 0003  
                                 __pidataBANK2 0C50                            ??_SYSTEM_Initialize 00CE  
                           ??_EPWM1_Initialize 00CC                               ?_TMR2_Initialize 0070  
                      __end_of_TMR6_Initialize 0C1C                                 _OPTION_REGbits 0095  
                              _TMR6_WriteTimer 0BA4                                ??_controlchoose 00ED  
              ??_EUSART_SetOverrunErrorHandler 00CE                        __end_of_TMR4_StartTimer 0B7C  
                    __end_of_SYSTEM_Initialize 0D97                                     __pbssBANK0 0053  
                                   __pbssBANK1 00A0                           __end_of_EUSART_Write 0BFE  
                                   _analisa_Rx 0516                              __end_of__Umul8_16 0D23  
                             ??_FVR_Initialize 00CC                                     __pmaintext 069C  
                                      ?___tmul 00CC                                     __pintentry 0004  
                                      _DACCON0 0118                                        _DACCON1 0119  
                                      _CM1CON0 0111                                        _CM1CON1 0112  
                                      _CCP1CON 0293                                        _ECCP1AS 0295  
                                      _BAUDCON 019F                               ?_TMR4_Initialize 0070  
                            __end_of_daUmPasso 0C87                                        _APFCON0 011D  
                                      _APFCON1 011E                               _definePassoMotor 0E06  
                                    ?___xxtofl 003F                                        _OSCTUNE 0098  
                                      _PWM1CON 0294                        __end_of_CMP1_Initialize 0B98  
                     ??_EUSART_SetErrorHandler 00CE                               ?_TMR1_WriteTimer 0070  
                       definePassoMotor@passom 00CE                                      ?_envia_Tx 0070  
                  __end_of_EPWM1_LoadDutyValue 0D04                                     _first_read 006D  
                         _ADC_InterruptHandler 0065                                        ___atdiv 0F22  
                                      ___flmul 004B                                        ___fltol 0EC1  
                                      ___lwdiv 07CC                        __end_of_TMR6_WriteTimer 0BAA  
                                      _ballset 005E                               ?_TMR6_Initialize 0070  
                     TMR1_ReadTimer@readValLow 007A                                        __ptext1 0DCB  
                                      __ptext2 0C71                                        __ptext3 0E06  
                                      __ptext4 0F8C                                        __ptext5 0EC1  
                                      __ptext6 0BF5                                        __ptext7 0C5F  
                                      __ptext8 0247                                        __ptext9 07CC  
                    TMR1_ReadTimer@readValHigh 0079                                      _T1CONbits 0018  
                                      _countRx 00C9                              i1___lwdiv@divisor 0070  
                        _OSCILLATOR_Initialize 0BB6                              i1___lwdiv@counter 0077  
                                      _fluxpos 0DCB                                     ??___xxtofl 0043  
                                    _CMOUTbits 0115                                      _T4CONbits 0417  
                     ??_PIN_MANAGER_Initialize 00CC                                        _sentido 0068  
                                      clrloop0 0BAB                               ?_TMR4_StartTimer 0070  
                                   _passo_ctrl 00C5                           end_of_initialization 0047  
                                   ??_envia_Tx 00D6          __end_of_EUSART_SetOverrunErrorHandler 0BE5  
                _EUSART_SetOverrunErrorHandler 0BDD                                        init_ram 0BB0  
                                      initloop 0BB1                                    ?_analisa_Rx 0070  
                            _EUSART_Initialize 0D23                             ?_EUSART_Initialize 0070  
                        TMR0_ReadTimer@readVal 00CC                                      _RCSTAbits 019D  
                           _EUSART_is_rx_ready 0B88                                 _TMR0_ReadTimer 0B98  
                          ??_EUSART_Initialize 00CE                               ??_WDT_Initialize 00CC  
                          ?_EUSART_is_rx_ready 0070                                 _TMR1_ReadTimer 0C9E  
                     ?_TMR6_LoadPeriodRegister 0070                                  ___xxtofl@sign 0047  
                                    i1___fltol 0E60                                      i1___lwdiv 0D97  
                             ?_CMP1_Initialize 0070                                     _pwmcontrol 0247  
                                  ___flmul@grs 002A                      __end_of_EUSART_Initialize 0D47  
                         ??_EUSART_is_rx_ready 00CC                         __end_of_TMR0_ReadTimer 0B9E  
                   _EUSART_DefaultErrorHandler 0000                               ?_TMR6_WriteTimer 0070  
                               __end_of___tmul 0D6D                                   _EUSART_Write 0BF5  
                               _ADC_Initialize 0BC5                         ?_OSCILLATOR_Initialize 0070  
                       __end_of_TMR1_ReadTimer 0CB6                                  ??_mede_height 004D  
                          start_initialization 001B                                  ??_EUSART_Read 00CC  
                                   ?i1___fltol 0035                                     ?i1___lwdiv 0070  
                 EPWM1_LoadDutyValue@dutyValue 00CC                       __end_of_definePassoMotor 0E60  
               ?_EUSART_SetOverrunErrorHandler 00CC                                 _TMR4_StopTimer 0B76  
                   _EUSART_FramingErrorHandler 0133                                ?_TMR0_ReadTimer 0070  
                                     ??___tmul 00D2                         _EUSART_SetErrorHandler 0BCD  
                       __end_of_ADC_Initialize 0BCD                                      __Umul8_16 0D04  
                                  __pdataBANK0 006A                                    __pdataBANK1 00EE  
                                  __pdataBANK2 0120                __end_of_TMR6_LoadPeriodRegister 0BA4  
                               ___tmul@product 00D2                                ?_TMR1_ReadTimer 0070  
                                ??_fluxcontrol 00D5                                      ___flmul@a 0024  
                                    _daUmPasso 0C71                                      ___flmul@b 0020  
                                    ___latbits 0001                                  __pcstackBANK0 0020  
                                __pcstackBANK1 00CC                          __end_of_controlchoose 0C71  
                          __end_of_mede_height 069C                                    ?_pwmcontrol 0070  
                          __end_of_EUSART_Read 0C33                                      __pnvBANK0 006E  
                                    __pnvBANK2 012F                         __end_of_TMR4_StopTimer 0B79  
                             ___lwdiv@dividend 00CE                         _PIN_MANAGER_Initialize 0C87  
                                _TMR1_GATE_ISR 0C1C                                       ?___atdiv 00D5  
                                     ?___flmul 0020                                       ?___fltol 00CC  
                                   ?__Umul8_16 0070                                       ?___lwdiv 00CC  
                              ?_ADC_Initialize 0070                                      _fim_curso 00EE  
                 ??_INTERRUPT_InterruptManager 007E                                       ?_fluxpos 0070  
                                   ?_daUmPasso 0070                                      _nao_salva 00C7  
                                  ??i1___fltol 0039                               ___lwdiv@quotient 00D1  
                                  ??i1___lwdiv 0074                                      _func_mode 0067  
                          __end_of_fluxcontrol 044A                              ??_TMR0_Initialize 00CC  
                                     _LATAbits 010C         EUSART_SetErrorHandler@interruptHandler 00CC  
                                 ??_analisa_Rx 00D0                                      clear_ram0 0BAA  
                                     _PIE1bits 0091                              _eusartRxLastError 00CB  
                              ?_TMR4_StopTimer 0070                                 ?_TMR1_GATE_ISR 0070  
                                     _PIR1bits 0011                ??_EUSART_SetFramingErrorHandler 00CE  
                                     _PIR3bits 0013                                  ??_TMR1_Reload 0072  
                                    _sp_height 0063                                      _tempo_voo 0061  
            _EUSART_DefaultOverrunErrorHandler 0000                                       _PSTR1CON 0296  
                            ??_PIN_MANAGER_IOC 0070                      _TMR1_GateInterruptHandler 006E  
                            ??_TMR1_Initialize 00CE                                     _ADCON0bits 009D  
                               _DAC_Initialize 0B8D                                    _mede_height 05E2  
                             _EPWM1_Initialize 0C33                        definePassoMotor@sentido 00CC  
                          ___tmul@multiplicand 00CF                                      _outputsum 00A7  
                           __end_of_analisa_Rx 05E2                                    _EUSART_Read 0C27  
                            ??_TMR2_Initialize 00CC                            __end_of_lookupTable 0516  
                            _ADC_GetConversion 0CB6                          TMR1_ReadTimer@readVal 0077  
                      ??_OSCILLATOR_Initialize 00CC                                    ??__Umul8_16 0072  
                          _EUSART_ErrorHandler 012F                             ?_ADC_GetConversion 00CC  
                       __end_of_DAC_Initialize 0B92                                       _adc_temp 00B5  
                          __end_of_TMR1_Reload 0BC5                                       _balldist 00AA  
                          ??_ADC_GetConversion 00CE                                       ___xxtofl 0739  
                                  ??_daUmPasso 00CF                                    _fluxcontrol 037C  
                              ___lwdiv@divisor 00CC                                ___lwdiv@counter 00D3  
                                     __ptext10 0F22                                       __ptext11 037C  
                                     __ptext20 0D6D                                       __ptext12 0D47  
                                     __ptext21 0B80                                       __ptext13 0B79  
                                     __ptext30 0B7C                                       __ptext22 0C12  
                                     __ptext14 0516                                       __ptext31 0D23  
                                     __ptext23 0C08                                       __ptext15 0CE9  
                                     __ptext40 0C27                                       __ptext32 0BDD  
                                     __ptext24 0BED                                       __ptext16 0BA4  
                                     __ptext41 0CB6                                       __ptext33 0BD5  
                                     __ptext25 0CCF                                       __ptext17 0B9E  
                                     __ptext50 0D04                                       __ptext34 0BCD  
                                     __ptext26 0BE5                                       __ptext18 0B76  
                                     __ptext51 0BBD                                       __ptext43 0C1C  
                                     __ptext35 0C33                                       __ptext27 0BFE  
                                     __ptext19 0B98                                       __ptext52 0C41  
                                     __ptext44 0002                                       __ptext36 0B8D  
                                     __ptext28 0C87                                       __ptext53 0C9E  
                                     __ptext45 05E2                                       __ptext37 0B92  
                                     __ptext29 0BB6                                       __ptext54 0B75  
                                     __ptext46 0D97                                       __ptext38 0BC5  
                                     __ptext47 0E60                                       __ptext39 0B88  
                                     __ptext48 0739                                       __ptext49 004B  
                                     _bufferRx 0053                             i1___lwdiv@dividend 0072  
                                     _envia_Tx 0F8C                                       _count_Tx 00C8  
                      TMR6_WriteTimer@timerVal 00CC               TMR6_LoadPeriodRegister@periodVal 00CC  
                            ??_TMR4_Initialize 00CC                               ??_TMR0_ReadTimer 00CC  
                              ??_TMR1_GATE_ISR 007E                      __end_of_ADC_GetConversion 0CCF  
                      ?_EUSART_SetErrorHandler 00CC                              ?_definePassoMotor 00CC  
EUSART_SetOverrunErrorHandler@interruptHandler 00CC                             ??_definePassoMotor 00CD  
                             ??_TMR1_ReadTimer 0072                                       int$flags 007E  
                                     _position 00B9             __end_of_INTERRUPT_InterruptManager 0019  
                   _INTERRUPT_InterruptManager 0004          __end_of_EUSART_SetFramingErrorHandler 0BDD  
                _EUSART_SetFramingErrorHandler 0BD5                                ?_DAC_Initialize 0070  
                            ??_TMR1_WriteTimer 0072                             i1___lwdiv@quotient 0075  
                                   _INTCONbits 000B                                  _avg_tempo_voo 00A0  
                                 ??_pwmcontrol 00E1                                    _lookupTable 044A  
                                     intlevel1 0000                        ?_PIN_MANAGER_Initialize 0070  
                            ??_TMR6_Initialize 00CC                 __end_of_EUSART_SetErrorHandler 0BD5  
                             ??_ADC_Initialize 00CC                                    _TMR1_Reload 0BBD  
                            ___tmul@multiplier 00CC  EUSART_SetFramingErrorHandler@interruptHandler 00CC  
                            ??_TMR4_StartTimer 00CC                                  __pstringtext1 044A  
                           __end_of_pwmcontrol 037C                                 _FVR_Initialize 0B7C  
                       __Umul8_16@multiplicand 0070                                     _OPTION_REG 0095  
                              _TMR0_Initialize 0BFE                                    _timecontrol 0120  
                          _EPWM1_LoadDutyValue 0CE9                               ___atdiv@dividend 00D8  
                           EUSART_Write@txData 00CC           __end_of_TMR1_SetGateInterruptHandler 0BED  
                 _TMR1_SetGateInterruptHandler 0BE5                 __end_of_PIN_MANAGER_Initialize 0C9E  
                             ??_TMR4_StopTimer 00CC                        _TMR6_LoadPeriodRegister 0B9E  
                                  _sp_position 00B7                                ___atdiv@divisor 00D5  
                              _PIN_MANAGER_IOC 0B75                           __Umul8_16@multiplier 0078  
                              ___atdiv@counter 00DC                                _TMR1_Initialize 0CCF  
                     __end_of_EPWM1_Initialize 0C41                           ?_EPWM1_LoadDutyValue 00CC  
                            __Umul8_16@product 0074                                   ___atdiv@sign 00DD  
