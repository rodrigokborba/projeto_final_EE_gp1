

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Tue Sep 10 17:11:00 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og9 
     1                           	processor	16F1827
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     6                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,noexec
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    17                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    19                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    20                           	psect	text1,local,class=CODE,merge=1,delta=2
    21                           	psect	text2,local,class=CODE,merge=1,delta=2
    22                           	psect	text3,local,class=CODE,merge=1,delta=2
    23                           	psect	text4,local,class=CODE,merge=1,delta=2
    24                           	psect	text5,local,class=CODE,merge=1,delta=2
    25                           	psect	text6,local,class=CODE,merge=1,delta=2
    26                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text8,local,class=CODE,merge=1,delta=2
    28                           	psect	text9,local,class=CODE,merge=1,delta=2
    29                           	psect	text10,local,class=CODE,merge=1,delta=2
    30                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text13,local,class=CODE,merge=1,delta=2
    33                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text15,local,class=CODE,merge=1,delta=2
    35                           	psect	text16,local,class=CODE,merge=1,delta=2
    36                           	psect	text17,local,class=CODE,merge=1,delta=2
    37                           	psect	text18,local,class=CODE,merge=1,delta=2
    38                           	psect	text19,local,class=CODE,merge=1,delta=2
    39                           	psect	text20,local,class=CODE,merge=1,delta=2
    40                           	psect	text21,local,class=CODE,merge=1,delta=2
    41                           	psect	text22,local,class=CODE,merge=1,delta=2
    42                           	psect	text23,local,class=CODE,merge=1,delta=2
    43                           	psect	text24,local,class=CODE,merge=1,delta=2
    44                           	psect	text25,local,class=CODE,merge=1,delta=2
    45                           	psect	text26,local,class=CODE,merge=1,delta=2
    46                           	psect	text27,local,class=CODE,merge=1,delta=2
    47                           	psect	text28,local,class=CODE,merge=1,delta=2
    48                           	psect	text29,local,class=CODE,merge=1,delta=2
    49                           	psect	text30,local,class=CODE,merge=1,delta=2
    50                           	psect	text31,local,class=CODE,merge=1,delta=2
    51                           	psect	text32,local,class=CODE,merge=1,delta=2
    52                           	psect	text33,local,class=CODE,merge=1,delta=2
    53                           	psect	text34,local,class=CODE,merge=1,delta=2
    54                           	psect	text35,local,class=CODE,merge=1,delta=2
    55                           	psect	text36,local,class=CODE,merge=1,delta=2
    56                           	psect	text37,local,class=CODE,merge=1,delta=2
    57                           	psect	text38,local,class=CODE,merge=1,delta=2
    58                           	psect	text39,local,class=CODE,merge=1,delta=2
    59                           	psect	text40,local,class=CODE,merge=1,delta=2
    60                           	psect	text41,local,class=CODE,merge=1,delta=2
    61                           	psect	text42,local,class=CODE,merge=1,delta=2
    62                           	psect	text43,local,class=CODE,merge=1,delta=2
    63                           	psect	intentry,global,class=CODE,delta=2
    64                           	psect	text45,local,class=CODE,merge=1,delta=2
    65                           	psect	text46,local,class=CODE,merge=1,delta=2
    66                           	psect	text47,local,class=CODE,merge=1,delta=2
    67                           	psect	text48,local,class=CODE,merge=1,delta=2
    68                           	psect	text49,local,class=CODE,merge=1,delta=2
    69                           	psect	text50,local,class=CODE,merge=1,delta=2,group=1
    70                           	psect	text51,local,class=CODE,merge=1,delta=2,group=1
    71                           	psect	text52,local,class=CODE,merge=1,delta=2,group=1
    72                           	psect	text53,local,class=CODE,merge=1,delta=2
    73                           	psect	text54,local,class=CODE,merge=1,delta=2
    74                           	psect	text55,local,class=CODE,merge=1,delta=2
    75                           	psect	text56,local,class=CODE,merge=1,delta=2
    76                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    77                           	dabs	1,0x7E,2
    78     0000                     
    79                           ; Generated 07/09/2023 GMT
    80                           ; 
    81                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    82                           ; All rights reserved.
    83                           ; 
    84                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    85                           ; 
    86                           ; Redistribution and use in source and binary forms, with or without modification, are
    87                           ; permitted provided that the following conditions are met:
    88                           ; 
    89                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    90                           ;        conditions and the following disclaimer.
    91                           ; 
    92                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    93                           ;        of conditions and the following disclaimer in the documentation and/or other
    94                           ;        materials provided with the distribution. Publication is not required when
    95                           ;        this file is used in an embedded application.
    96                           ; 
    97                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    98                           ;        software without specific prior written permission.
    99                           ; 
   100                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   101                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   102                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   103                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   104                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   105                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   106                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   107                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   108                           ; 
   109                           ; 
   110                           ; Code-generator required, PIC16F1827 Definitions
   111                           ; 
   112                           ; SFR Addresses
   113     0000                     	;# 
   114     0001                     	;# 
   115     0002                     	;# 
   116     0003                     	;# 
   117     0004                     	;# 
   118     0005                     	;# 
   119     0006                     	;# 
   120     0007                     	;# 
   121     0008                     	;# 
   122     0009                     	;# 
   123     000A                     	;# 
   124     000B                     	;# 
   125     000C                     	;# 
   126     000D                     	;# 
   127     0011                     	;# 
   128     0012                     	;# 
   129     0013                     	;# 
   130     0014                     	;# 
   131     0015                     	;# 
   132     0016                     	;# 
   133     0016                     	;# 
   134     0017                     	;# 
   135     0018                     	;# 
   136     0019                     	;# 
   137     001A                     	;# 
   138     001B                     	;# 
   139     001C                     	;# 
   140     001E                     	;# 
   141     001F                     	;# 
   142     008C                     	;# 
   143     008D                     	;# 
   144     0091                     	;# 
   145     0092                     	;# 
   146     0093                     	;# 
   147     0094                     	;# 
   148     0095                     	;# 
   149     0096                     	;# 
   150     0097                     	;# 
   151     0098                     	;# 
   152     0099                     	;# 
   153     009A                     	;# 
   154     009B                     	;# 
   155     009B                     	;# 
   156     009C                     	;# 
   157     009D                     	;# 
   158     009E                     	;# 
   159     010C                     	;# 
   160     010D                     	;# 
   161     0111                     	;# 
   162     0112                     	;# 
   163     0113                     	;# 
   164     0114                     	;# 
   165     0115                     	;# 
   166     0116                     	;# 
   167     0117                     	;# 
   168     0118                     	;# 
   169     0119                     	;# 
   170     011A                     	;# 
   171     011B                     	;# 
   172     011D                     	;# 
   173     011E                     	;# 
   174     018C                     	;# 
   175     018D                     	;# 
   176     0191                     	;# 
   177     0191                     	;# 
   178     0192                     	;# 
   179     0193                     	;# 
   180     0193                     	;# 
   181     0193                     	;# 
   182     0194                     	;# 
   183     0195                     	;# 
   184     0196                     	;# 
   185     0199                     	;# 
   186     019A                     	;# 
   187     019B                     	;# 
   188     019B                     	;# 
   189     019B                     	;# 
   190     019B                     	;# 
   191     019C                     	;# 
   192     019C                     	;# 
   193     019D                     	;# 
   194     019E                     	;# 
   195     019F                     	;# 
   196     020C                     	;# 
   197     020D                     	;# 
   198     0211                     	;# 
   199     0211                     	;# 
   200     0212                     	;# 
   201     0212                     	;# 
   202     0213                     	;# 
   203     0213                     	;# 
   204     0214                     	;# 
   205     0214                     	;# 
   206     0215                     	;# 
   207     0215                     	;# 
   208     0215                     	;# 
   209     0216                     	;# 
   210     0216                     	;# 
   211     0217                     	;# 
   212     0217                     	;# 
   213     0219                     	;# 
   214     021A                     	;# 
   215     021B                     	;# 
   216     021C                     	;# 
   217     021D                     	;# 
   218     021E                     	;# 
   219     021F                     	;# 
   220     0291                     	;# 
   221     0291                     	;# 
   222     0292                     	;# 
   223     0293                     	;# 
   224     0294                     	;# 
   225     0295                     	;# 
   226     0295                     	;# 
   227     0296                     	;# 
   228     0298                     	;# 
   229     0298                     	;# 
   230     0299                     	;# 
   231     029A                     	;# 
   232     029B                     	;# 
   233     029C                     	;# 
   234     029C                     	;# 
   235     029D                     	;# 
   236     029E                     	;# 
   237     029E                     	;# 
   238     0311                     	;# 
   239     0311                     	;# 
   240     0312                     	;# 
   241     0313                     	;# 
   242     0318                     	;# 
   243     0318                     	;# 
   244     0319                     	;# 
   245     031A                     	;# 
   246     0394                     	;# 
   247     0395                     	;# 
   248     0396                     	;# 
   249     039A                     	;# 
   250     039C                     	;# 
   251     039D                     	;# 
   252     039E                     	;# 
   253     039F                     	;# 
   254     0415                     	;# 
   255     0416                     	;# 
   256     0417                     	;# 
   257     041C                     	;# 
   258     041D                     	;# 
   259     041E                     	;# 
   260     0FE4                     	;# 
   261     0FE5                     	;# 
   262     0FE6                     	;# 
   263     0FE7                     	;# 
   264     0FE8                     	;# 
   265     0FE9                     	;# 
   266     0FEA                     	;# 
   267     0FEB                     	;# 
   268     0FED                     	;# 
   269     0FEE                     	;# 
   270     0FEF                     	;# 
   271     0000                     	;# 
   272     0001                     	;# 
   273     0002                     	;# 
   274     0003                     	;# 
   275     0004                     	;# 
   276     0005                     	;# 
   277     0006                     	;# 
   278     0007                     	;# 
   279     0008                     	;# 
   280     0009                     	;# 
   281     000A                     	;# 
   282     000B                     	;# 
   283     000C                     	;# 
   284     000D                     	;# 
   285     0011                     	;# 
   286     0012                     	;# 
   287     0013                     	;# 
   288     0014                     	;# 
   289     0015                     	;# 
   290     0016                     	;# 
   291     0016                     	;# 
   292     0017                     	;# 
   293     0018                     	;# 
   294     0019                     	;# 
   295     001A                     	;# 
   296     001B                     	;# 
   297     001C                     	;# 
   298     001E                     	;# 
   299     001F                     	;# 
   300     008C                     	;# 
   301     008D                     	;# 
   302     0091                     	;# 
   303     0092                     	;# 
   304     0093                     	;# 
   305     0094                     	;# 
   306     0095                     	;# 
   307     0096                     	;# 
   308     0097                     	;# 
   309     0098                     	;# 
   310     0099                     	;# 
   311     009A                     	;# 
   312     009B                     	;# 
   313     009B                     	;# 
   314     009C                     	;# 
   315     009D                     	;# 
   316     009E                     	;# 
   317     010C                     	;# 
   318     010D                     	;# 
   319     0111                     	;# 
   320     0112                     	;# 
   321     0113                     	;# 
   322     0114                     	;# 
   323     0115                     	;# 
   324     0116                     	;# 
   325     0117                     	;# 
   326     0118                     	;# 
   327     0119                     	;# 
   328     011A                     	;# 
   329     011B                     	;# 
   330     011D                     	;# 
   331     011E                     	;# 
   332     018C                     	;# 
   333     018D                     	;# 
   334     0191                     	;# 
   335     0191                     	;# 
   336     0192                     	;# 
   337     0193                     	;# 
   338     0193                     	;# 
   339     0193                     	;# 
   340     0194                     	;# 
   341     0195                     	;# 
   342     0196                     	;# 
   343     0199                     	;# 
   344     019A                     	;# 
   345     019B                     	;# 
   346     019B                     	;# 
   347     019B                     	;# 
   348     019B                     	;# 
   349     019C                     	;# 
   350     019C                     	;# 
   351     019D                     	;# 
   352     019E                     	;# 
   353     019F                     	;# 
   354     020C                     	;# 
   355     020D                     	;# 
   356     0211                     	;# 
   357     0211                     	;# 
   358     0212                     	;# 
   359     0212                     	;# 
   360     0213                     	;# 
   361     0213                     	;# 
   362     0214                     	;# 
   363     0214                     	;# 
   364     0215                     	;# 
   365     0215                     	;# 
   366     0215                     	;# 
   367     0216                     	;# 
   368     0216                     	;# 
   369     0217                     	;# 
   370     0217                     	;# 
   371     0219                     	;# 
   372     021A                     	;# 
   373     021B                     	;# 
   374     021C                     	;# 
   375     021D                     	;# 
   376     021E                     	;# 
   377     021F                     	;# 
   378     0291                     	;# 
   379     0291                     	;# 
   380     0292                     	;# 
   381     0293                     	;# 
   382     0294                     	;# 
   383     0295                     	;# 
   384     0295                     	;# 
   385     0296                     	;# 
   386     0298                     	;# 
   387     0298                     	;# 
   388     0299                     	;# 
   389     029A                     	;# 
   390     029B                     	;# 
   391     029C                     	;# 
   392     029C                     	;# 
   393     029D                     	;# 
   394     029E                     	;# 
   395     029E                     	;# 
   396     0311                     	;# 
   397     0311                     	;# 
   398     0312                     	;# 
   399     0313                     	;# 
   400     0318                     	;# 
   401     0318                     	;# 
   402     0319                     	;# 
   403     031A                     	;# 
   404     0394                     	;# 
   405     0395                     	;# 
   406     0396                     	;# 
   407     039A                     	;# 
   408     039C                     	;# 
   409     039D                     	;# 
   410     039E                     	;# 
   411     039F                     	;# 
   412     0415                     	;# 
   413     0416                     	;# 
   414     0417                     	;# 
   415     041C                     	;# 
   416     041D                     	;# 
   417     041E                     	;# 
   418     0FE4                     	;# 
   419     0FE5                     	;# 
   420     0FE6                     	;# 
   421     0FE7                     	;# 
   422     0FE8                     	;# 
   423     0FE9                     	;# 
   424     0FEA                     	;# 
   425     0FEB                     	;# 
   426     0FED                     	;# 
   427     0FEE                     	;# 
   428     0FEF                     	;# 
   429     0000                     	;# 
   430     0001                     	;# 
   431     0002                     	;# 
   432     0003                     	;# 
   433     0004                     	;# 
   434     0005                     	;# 
   435     0006                     	;# 
   436     0007                     	;# 
   437     0008                     	;# 
   438     0009                     	;# 
   439     000A                     	;# 
   440     000B                     	;# 
   441     000C                     	;# 
   442     000D                     	;# 
   443     0011                     	;# 
   444     0012                     	;# 
   445     0013                     	;# 
   446     0014                     	;# 
   447     0015                     	;# 
   448     0016                     	;# 
   449     0016                     	;# 
   450     0017                     	;# 
   451     0018                     	;# 
   452     0019                     	;# 
   453     001A                     	;# 
   454     001B                     	;# 
   455     001C                     	;# 
   456     001E                     	;# 
   457     001F                     	;# 
   458     008C                     	;# 
   459     008D                     	;# 
   460     0091                     	;# 
   461     0092                     	;# 
   462     0093                     	;# 
   463     0094                     	;# 
   464     0095                     	;# 
   465     0096                     	;# 
   466     0097                     	;# 
   467     0098                     	;# 
   468     0099                     	;# 
   469     009A                     	;# 
   470     009B                     	;# 
   471     009B                     	;# 
   472     009C                     	;# 
   473     009D                     	;# 
   474     009E                     	;# 
   475     010C                     	;# 
   476     010D                     	;# 
   477     0111                     	;# 
   478     0112                     	;# 
   479     0113                     	;# 
   480     0114                     	;# 
   481     0115                     	;# 
   482     0116                     	;# 
   483     0117                     	;# 
   484     0118                     	;# 
   485     0119                     	;# 
   486     011A                     	;# 
   487     011B                     	;# 
   488     011D                     	;# 
   489     011E                     	;# 
   490     018C                     	;# 
   491     018D                     	;# 
   492     0191                     	;# 
   493     0191                     	;# 
   494     0192                     	;# 
   495     0193                     	;# 
   496     0193                     	;# 
   497     0193                     	;# 
   498     0194                     	;# 
   499     0195                     	;# 
   500     0196                     	;# 
   501     0199                     	;# 
   502     019A                     	;# 
   503     019B                     	;# 
   504     019B                     	;# 
   505     019B                     	;# 
   506     019B                     	;# 
   507     019C                     	;# 
   508     019C                     	;# 
   509     019D                     	;# 
   510     019E                     	;# 
   511     019F                     	;# 
   512     020C                     	;# 
   513     020D                     	;# 
   514     0211                     	;# 
   515     0211                     	;# 
   516     0212                     	;# 
   517     0212                     	;# 
   518     0213                     	;# 
   519     0213                     	;# 
   520     0214                     	;# 
   521     0214                     	;# 
   522     0215                     	;# 
   523     0215                     	;# 
   524     0215                     	;# 
   525     0216                     	;# 
   526     0216                     	;# 
   527     0217                     	;# 
   528     0217                     	;# 
   529     0219                     	;# 
   530     021A                     	;# 
   531     021B                     	;# 
   532     021C                     	;# 
   533     021D                     	;# 
   534     021E                     	;# 
   535     021F                     	;# 
   536     0291                     	;# 
   537     0291                     	;# 
   538     0292                     	;# 
   539     0293                     	;# 
   540     0294                     	;# 
   541     0295                     	;# 
   542     0295                     	;# 
   543     0296                     	;# 
   544     0298                     	;# 
   545     0298                     	;# 
   546     0299                     	;# 
   547     029A                     	;# 
   548     029B                     	;# 
   549     029C                     	;# 
   550     029C                     	;# 
   551     029D                     	;# 
   552     029E                     	;# 
   553     029E                     	;# 
   554     0311                     	;# 
   555     0311                     	;# 
   556     0312                     	;# 
   557     0313                     	;# 
   558     0318                     	;# 
   559     0318                     	;# 
   560     0319                     	;# 
   561     031A                     	;# 
   562     0394                     	;# 
   563     0395                     	;# 
   564     0396                     	;# 
   565     039A                     	;# 
   566     039C                     	;# 
   567     039D                     	;# 
   568     039E                     	;# 
   569     039F                     	;# 
   570     0415                     	;# 
   571     0416                     	;# 
   572     0417                     	;# 
   573     041C                     	;# 
   574     041D                     	;# 
   575     041E                     	;# 
   576     0FE4                     	;# 
   577     0FE5                     	;# 
   578     0FE6                     	;# 
   579     0FE7                     	;# 
   580     0FE8                     	;# 
   581     0FE9                     	;# 
   582     0FEA                     	;# 
   583     0FEB                     	;# 
   584     0FED                     	;# 
   585     0FEE                     	;# 
   586     0FEF                     	;# 
   587     0000                     	;# 
   588     0001                     	;# 
   589     0002                     	;# 
   590     0003                     	;# 
   591     0004                     	;# 
   592     0005                     	;# 
   593     0006                     	;# 
   594     0007                     	;# 
   595     0008                     	;# 
   596     0009                     	;# 
   597     000A                     	;# 
   598     000B                     	;# 
   599     000C                     	;# 
   600     000D                     	;# 
   601     0011                     	;# 
   602     0012                     	;# 
   603     0013                     	;# 
   604     0014                     	;# 
   605     0015                     	;# 
   606     0016                     	;# 
   607     0016                     	;# 
   608     0017                     	;# 
   609     0018                     	;# 
   610     0019                     	;# 
   611     001A                     	;# 
   612     001B                     	;# 
   613     001C                     	;# 
   614     001E                     	;# 
   615     001F                     	;# 
   616     008C                     	;# 
   617     008D                     	;# 
   618     0091                     	;# 
   619     0092                     	;# 
   620     0093                     	;# 
   621     0094                     	;# 
   622     0095                     	;# 
   623     0096                     	;# 
   624     0097                     	;# 
   625     0098                     	;# 
   626     0099                     	;# 
   627     009A                     	;# 
   628     009B                     	;# 
   629     009B                     	;# 
   630     009C                     	;# 
   631     009D                     	;# 
   632     009E                     	;# 
   633     010C                     	;# 
   634     010D                     	;# 
   635     0111                     	;# 
   636     0112                     	;# 
   637     0113                     	;# 
   638     0114                     	;# 
   639     0115                     	;# 
   640     0116                     	;# 
   641     0117                     	;# 
   642     0118                     	;# 
   643     0119                     	;# 
   644     011A                     	;# 
   645     011B                     	;# 
   646     011D                     	;# 
   647     011E                     	;# 
   648     018C                     	;# 
   649     018D                     	;# 
   650     0191                     	;# 
   651     0191                     	;# 
   652     0192                     	;# 
   653     0193                     	;# 
   654     0193                     	;# 
   655     0193                     	;# 
   656     0194                     	;# 
   657     0195                     	;# 
   658     0196                     	;# 
   659     0199                     	;# 
   660     019A                     	;# 
   661     019B                     	;# 
   662     019B                     	;# 
   663     019B                     	;# 
   664     019B                     	;# 
   665     019C                     	;# 
   666     019C                     	;# 
   667     019D                     	;# 
   668     019E                     	;# 
   669     019F                     	;# 
   670     020C                     	;# 
   671     020D                     	;# 
   672     0211                     	;# 
   673     0211                     	;# 
   674     0212                     	;# 
   675     0212                     	;# 
   676     0213                     	;# 
   677     0213                     	;# 
   678     0214                     	;# 
   679     0214                     	;# 
   680     0215                     	;# 
   681     0215                     	;# 
   682     0215                     	;# 
   683     0216                     	;# 
   684     0216                     	;# 
   685     0217                     	;# 
   686     0217                     	;# 
   687     0219                     	;# 
   688     021A                     	;# 
   689     021B                     	;# 
   690     021C                     	;# 
   691     021D                     	;# 
   692     021E                     	;# 
   693     021F                     	;# 
   694     0291                     	;# 
   695     0291                     	;# 
   696     0292                     	;# 
   697     0293                     	;# 
   698     0294                     	;# 
   699     0295                     	;# 
   700     0295                     	;# 
   701     0296                     	;# 
   702     0298                     	;# 
   703     0298                     	;# 
   704     0299                     	;# 
   705     029A                     	;# 
   706     029B                     	;# 
   707     029C                     	;# 
   708     029C                     	;# 
   709     029D                     	;# 
   710     029E                     	;# 
   711     029E                     	;# 
   712     0311                     	;# 
   713     0311                     	;# 
   714     0312                     	;# 
   715     0313                     	;# 
   716     0318                     	;# 
   717     0318                     	;# 
   718     0319                     	;# 
   719     031A                     	;# 
   720     0394                     	;# 
   721     0395                     	;# 
   722     0396                     	;# 
   723     039A                     	;# 
   724     039C                     	;# 
   725     039D                     	;# 
   726     039E                     	;# 
   727     039F                     	;# 
   728     0415                     	;# 
   729     0416                     	;# 
   730     0417                     	;# 
   731     041C                     	;# 
   732     041D                     	;# 
   733     041E                     	;# 
   734     0FE4                     	;# 
   735     0FE5                     	;# 
   736     0FE6                     	;# 
   737     0FE7                     	;# 
   738     0FE8                     	;# 
   739     0FE9                     	;# 
   740     0FEA                     	;# 
   741     0FEB                     	;# 
   742     0FED                     	;# 
   743     0FEE                     	;# 
   744     0FEF                     	;# 
   745     0000                     	;# 
   746     0001                     	;# 
   747     0002                     	;# 
   748     0003                     	;# 
   749     0004                     	;# 
   750     0005                     	;# 
   751     0006                     	;# 
   752     0007                     	;# 
   753     0008                     	;# 
   754     0009                     	;# 
   755     000A                     	;# 
   756     000B                     	;# 
   757     000C                     	;# 
   758     000D                     	;# 
   759     0011                     	;# 
   760     0012                     	;# 
   761     0013                     	;# 
   762     0014                     	;# 
   763     0015                     	;# 
   764     0016                     	;# 
   765     0016                     	;# 
   766     0017                     	;# 
   767     0018                     	;# 
   768     0019                     	;# 
   769     001A                     	;# 
   770     001B                     	;# 
   771     001C                     	;# 
   772     001E                     	;# 
   773     001F                     	;# 
   774     008C                     	;# 
   775     008D                     	;# 
   776     0091                     	;# 
   777     0092                     	;# 
   778     0093                     	;# 
   779     0094                     	;# 
   780     0095                     	;# 
   781     0096                     	;# 
   782     0097                     	;# 
   783     0098                     	;# 
   784     0099                     	;# 
   785     009A                     	;# 
   786     009B                     	;# 
   787     009B                     	;# 
   788     009C                     	;# 
   789     009D                     	;# 
   790     009E                     	;# 
   791     010C                     	;# 
   792     010D                     	;# 
   793     0111                     	;# 
   794     0112                     	;# 
   795     0113                     	;# 
   796     0114                     	;# 
   797     0115                     	;# 
   798     0116                     	;# 
   799     0117                     	;# 
   800     0118                     	;# 
   801     0119                     	;# 
   802     011A                     	;# 
   803     011B                     	;# 
   804     011D                     	;# 
   805     011E                     	;# 
   806     018C                     	;# 
   807     018D                     	;# 
   808     0191                     	;# 
   809     0191                     	;# 
   810     0192                     	;# 
   811     0193                     	;# 
   812     0193                     	;# 
   813     0193                     	;# 
   814     0194                     	;# 
   815     0195                     	;# 
   816     0196                     	;# 
   817     0199                     	;# 
   818     019A                     	;# 
   819     019B                     	;# 
   820     019B                     	;# 
   821     019B                     	;# 
   822     019B                     	;# 
   823     019C                     	;# 
   824     019C                     	;# 
   825     019D                     	;# 
   826     019E                     	;# 
   827     019F                     	;# 
   828     020C                     	;# 
   829     020D                     	;# 
   830     0211                     	;# 
   831     0211                     	;# 
   832     0212                     	;# 
   833     0212                     	;# 
   834     0213                     	;# 
   835     0213                     	;# 
   836     0214                     	;# 
   837     0214                     	;# 
   838     0215                     	;# 
   839     0215                     	;# 
   840     0215                     	;# 
   841     0216                     	;# 
   842     0216                     	;# 
   843     0217                     	;# 
   844     0217                     	;# 
   845     0219                     	;# 
   846     021A                     	;# 
   847     021B                     	;# 
   848     021C                     	;# 
   849     021D                     	;# 
   850     021E                     	;# 
   851     021F                     	;# 
   852     0291                     	;# 
   853     0291                     	;# 
   854     0292                     	;# 
   855     0293                     	;# 
   856     0294                     	;# 
   857     0295                     	;# 
   858     0295                     	;# 
   859     0296                     	;# 
   860     0298                     	;# 
   861     0298                     	;# 
   862     0299                     	;# 
   863     029A                     	;# 
   864     029B                     	;# 
   865     029C                     	;# 
   866     029C                     	;# 
   867     029D                     	;# 
   868     029E                     	;# 
   869     029E                     	;# 
   870     0311                     	;# 
   871     0311                     	;# 
   872     0312                     	;# 
   873     0313                     	;# 
   874     0318                     	;# 
   875     0318                     	;# 
   876     0319                     	;# 
   877     031A                     	;# 
   878     0394                     	;# 
   879     0395                     	;# 
   880     0396                     	;# 
   881     039A                     	;# 
   882     039C                     	;# 
   883     039D                     	;# 
   884     039E                     	;# 
   885     039F                     	;# 
   886     0415                     	;# 
   887     0416                     	;# 
   888     0417                     	;# 
   889     041C                     	;# 
   890     041D                     	;# 
   891     041E                     	;# 
   892     0FE4                     	;# 
   893     0FE5                     	;# 
   894     0FE6                     	;# 
   895     0FE7                     	;# 
   896     0FE8                     	;# 
   897     0FE9                     	;# 
   898     0FEA                     	;# 
   899     0FEB                     	;# 
   900     0FED                     	;# 
   901     0FEE                     	;# 
   902     0FEF                     	;# 
   903     0000                     	;# 
   904     0001                     	;# 
   905     0002                     	;# 
   906     0003                     	;# 
   907     0004                     	;# 
   908     0005                     	;# 
   909     0006                     	;# 
   910     0007                     	;# 
   911     0008                     	;# 
   912     0009                     	;# 
   913     000A                     	;# 
   914     000B                     	;# 
   915     000C                     	;# 
   916     000D                     	;# 
   917     0011                     	;# 
   918     0012                     	;# 
   919     0013                     	;# 
   920     0014                     	;# 
   921     0015                     	;# 
   922     0016                     	;# 
   923     0016                     	;# 
   924     0017                     	;# 
   925     0018                     	;# 
   926     0019                     	;# 
   927     001A                     	;# 
   928     001B                     	;# 
   929     001C                     	;# 
   930     001E                     	;# 
   931     001F                     	;# 
   932     008C                     	;# 
   933     008D                     	;# 
   934     0091                     	;# 
   935     0092                     	;# 
   936     0093                     	;# 
   937     0094                     	;# 
   938     0095                     	;# 
   939     0096                     	;# 
   940     0097                     	;# 
   941     0098                     	;# 
   942     0099                     	;# 
   943     009A                     	;# 
   944     009B                     	;# 
   945     009B                     	;# 
   946     009C                     	;# 
   947     009D                     	;# 
   948     009E                     	;# 
   949     010C                     	;# 
   950     010D                     	;# 
   951     0111                     	;# 
   952     0112                     	;# 
   953     0113                     	;# 
   954     0114                     	;# 
   955     0115                     	;# 
   956     0116                     	;# 
   957     0117                     	;# 
   958     0118                     	;# 
   959     0119                     	;# 
   960     011A                     	;# 
   961     011B                     	;# 
   962     011D                     	;# 
   963     011E                     	;# 
   964     018C                     	;# 
   965     018D                     	;# 
   966     0191                     	;# 
   967     0191                     	;# 
   968     0192                     	;# 
   969     0193                     	;# 
   970     0193                     	;# 
   971     0193                     	;# 
   972     0194                     	;# 
   973     0195                     	;# 
   974     0196                     	;# 
   975     0199                     	;# 
   976     019A                     	;# 
   977     019B                     	;# 
   978     019B                     	;# 
   979     019B                     	;# 
   980     019B                     	;# 
   981     019C                     	;# 
   982     019C                     	;# 
   983     019D                     	;# 
   984     019E                     	;# 
   985     019F                     	;# 
   986     020C                     	;# 
   987     020D                     	;# 
   988     0211                     	;# 
   989     0211                     	;# 
   990     0212                     	;# 
   991     0212                     	;# 
   992     0213                     	;# 
   993     0213                     	;# 
   994     0214                     	;# 
   995     0214                     	;# 
   996     0215                     	;# 
   997     0215                     	;# 
   998     0215                     	;# 
   999     0216                     	;# 
  1000     0216                     	;# 
  1001     0217                     	;# 
  1002     0217                     	;# 
  1003     0219                     	;# 
  1004     021A                     	;# 
  1005     021B                     	;# 
  1006     021C                     	;# 
  1007     021D                     	;# 
  1008     021E                     	;# 
  1009     021F                     	;# 
  1010     0291                     	;# 
  1011     0291                     	;# 
  1012     0292                     	;# 
  1013     0293                     	;# 
  1014     0294                     	;# 
  1015     0295                     	;# 
  1016     0295                     	;# 
  1017     0296                     	;# 
  1018     0298                     	;# 
  1019     0298                     	;# 
  1020     0299                     	;# 
  1021     029A                     	;# 
  1022     029B                     	;# 
  1023     029C                     	;# 
  1024     029C                     	;# 
  1025     029D                     	;# 
  1026     029E                     	;# 
  1027     029E                     	;# 
  1028     0311                     	;# 
  1029     0311                     	;# 
  1030     0312                     	;# 
  1031     0313                     	;# 
  1032     0318                     	;# 
  1033     0318                     	;# 
  1034     0319                     	;# 
  1035     031A                     	;# 
  1036     0394                     	;# 
  1037     0395                     	;# 
  1038     0396                     	;# 
  1039     039A                     	;# 
  1040     039C                     	;# 
  1041     039D                     	;# 
  1042     039E                     	;# 
  1043     039F                     	;# 
  1044     0415                     	;# 
  1045     0416                     	;# 
  1046     0417                     	;# 
  1047     041C                     	;# 
  1048     041D                     	;# 
  1049     041E                     	;# 
  1050     0FE4                     	;# 
  1051     0FE5                     	;# 
  1052     0FE6                     	;# 
  1053     0FE7                     	;# 
  1054     0FE8                     	;# 
  1055     0FE9                     	;# 
  1056     0FEA                     	;# 
  1057     0FEB                     	;# 
  1058     0FED                     	;# 
  1059     0FEE                     	;# 
  1060     0FEF                     	;# 
  1061     0000                     	;# 
  1062     0001                     	;# 
  1063     0002                     	;# 
  1064     0003                     	;# 
  1065     0004                     	;# 
  1066     0005                     	;# 
  1067     0006                     	;# 
  1068     0007                     	;# 
  1069     0008                     	;# 
  1070     0009                     	;# 
  1071     000A                     	;# 
  1072     000B                     	;# 
  1073     000C                     	;# 
  1074     000D                     	;# 
  1075     0011                     	;# 
  1076     0012                     	;# 
  1077     0013                     	;# 
  1078     0014                     	;# 
  1079     0015                     	;# 
  1080     0016                     	;# 
  1081     0016                     	;# 
  1082     0017                     	;# 
  1083     0018                     	;# 
  1084     0019                     	;# 
  1085     001A                     	;# 
  1086     001B                     	;# 
  1087     001C                     	;# 
  1088     001E                     	;# 
  1089     001F                     	;# 
  1090     008C                     	;# 
  1091     008D                     	;# 
  1092     0091                     	;# 
  1093     0092                     	;# 
  1094     0093                     	;# 
  1095     0094                     	;# 
  1096     0095                     	;# 
  1097     0096                     	;# 
  1098     0097                     	;# 
  1099     0098                     	;# 
  1100     0099                     	;# 
  1101     009A                     	;# 
  1102     009B                     	;# 
  1103     009B                     	;# 
  1104     009C                     	;# 
  1105     009D                     	;# 
  1106     009E                     	;# 
  1107     010C                     	;# 
  1108     010D                     	;# 
  1109     0111                     	;# 
  1110     0112                     	;# 
  1111     0113                     	;# 
  1112     0114                     	;# 
  1113     0115                     	;# 
  1114     0116                     	;# 
  1115     0117                     	;# 
  1116     0118                     	;# 
  1117     0119                     	;# 
  1118     011A                     	;# 
  1119     011B                     	;# 
  1120     011D                     	;# 
  1121     011E                     	;# 
  1122     018C                     	;# 
  1123     018D                     	;# 
  1124     0191                     	;# 
  1125     0191                     	;# 
  1126     0192                     	;# 
  1127     0193                     	;# 
  1128     0193                     	;# 
  1129     0193                     	;# 
  1130     0194                     	;# 
  1131     0195                     	;# 
  1132     0196                     	;# 
  1133     0199                     	;# 
  1134     019A                     	;# 
  1135     019B                     	;# 
  1136     019B                     	;# 
  1137     019B                     	;# 
  1138     019B                     	;# 
  1139     019C                     	;# 
  1140     019C                     	;# 
  1141     019D                     	;# 
  1142     019E                     	;# 
  1143     019F                     	;# 
  1144     020C                     	;# 
  1145     020D                     	;# 
  1146     0211                     	;# 
  1147     0211                     	;# 
  1148     0212                     	;# 
  1149     0212                     	;# 
  1150     0213                     	;# 
  1151     0213                     	;# 
  1152     0214                     	;# 
  1153     0214                     	;# 
  1154     0215                     	;# 
  1155     0215                     	;# 
  1156     0215                     	;# 
  1157     0216                     	;# 
  1158     0216                     	;# 
  1159     0217                     	;# 
  1160     0217                     	;# 
  1161     0219                     	;# 
  1162     021A                     	;# 
  1163     021B                     	;# 
  1164     021C                     	;# 
  1165     021D                     	;# 
  1166     021E                     	;# 
  1167     021F                     	;# 
  1168     0291                     	;# 
  1169     0291                     	;# 
  1170     0292                     	;# 
  1171     0293                     	;# 
  1172     0294                     	;# 
  1173     0295                     	;# 
  1174     0295                     	;# 
  1175     0296                     	;# 
  1176     0298                     	;# 
  1177     0298                     	;# 
  1178     0299                     	;# 
  1179     029A                     	;# 
  1180     029B                     	;# 
  1181     029C                     	;# 
  1182     029C                     	;# 
  1183     029D                     	;# 
  1184     029E                     	;# 
  1185     029E                     	;# 
  1186     0311                     	;# 
  1187     0311                     	;# 
  1188     0312                     	;# 
  1189     0313                     	;# 
  1190     0318                     	;# 
  1191     0318                     	;# 
  1192     0319                     	;# 
  1193     031A                     	;# 
  1194     0394                     	;# 
  1195     0395                     	;# 
  1196     0396                     	;# 
  1197     039A                     	;# 
  1198     039C                     	;# 
  1199     039D                     	;# 
  1200     039E                     	;# 
  1201     039F                     	;# 
  1202     0415                     	;# 
  1203     0416                     	;# 
  1204     0417                     	;# 
  1205     041C                     	;# 
  1206     041D                     	;# 
  1207     041E                     	;# 
  1208     0FE4                     	;# 
  1209     0FE5                     	;# 
  1210     0FE6                     	;# 
  1211     0FE7                     	;# 
  1212     0FE8                     	;# 
  1213     0FE9                     	;# 
  1214     0FEA                     	;# 
  1215     0FEB                     	;# 
  1216     0FED                     	;# 
  1217     0FEE                     	;# 
  1218     0FEF                     	;# 
  1219     0000                     	;# 
  1220     0001                     	;# 
  1221     0002                     	;# 
  1222     0003                     	;# 
  1223     0004                     	;# 
  1224     0005                     	;# 
  1225     0006                     	;# 
  1226     0007                     	;# 
  1227     0008                     	;# 
  1228     0009                     	;# 
  1229     000A                     	;# 
  1230     000B                     	;# 
  1231     000C                     	;# 
  1232     000D                     	;# 
  1233     0011                     	;# 
  1234     0012                     	;# 
  1235     0013                     	;# 
  1236     0014                     	;# 
  1237     0015                     	;# 
  1238     0016                     	;# 
  1239     0016                     	;# 
  1240     0017                     	;# 
  1241     0018                     	;# 
  1242     0019                     	;# 
  1243     001A                     	;# 
  1244     001B                     	;# 
  1245     001C                     	;# 
  1246     001E                     	;# 
  1247     001F                     	;# 
  1248     008C                     	;# 
  1249     008D                     	;# 
  1250     0091                     	;# 
  1251     0092                     	;# 
  1252     0093                     	;# 
  1253     0094                     	;# 
  1254     0095                     	;# 
  1255     0096                     	;# 
  1256     0097                     	;# 
  1257     0098                     	;# 
  1258     0099                     	;# 
  1259     009A                     	;# 
  1260     009B                     	;# 
  1261     009B                     	;# 
  1262     009C                     	;# 
  1263     009D                     	;# 
  1264     009E                     	;# 
  1265     010C                     	;# 
  1266     010D                     	;# 
  1267     0111                     	;# 
  1268     0112                     	;# 
  1269     0113                     	;# 
  1270     0114                     	;# 
  1271     0115                     	;# 
  1272     0116                     	;# 
  1273     0117                     	;# 
  1274     0118                     	;# 
  1275     0119                     	;# 
  1276     011A                     	;# 
  1277     011B                     	;# 
  1278     011D                     	;# 
  1279     011E                     	;# 
  1280     018C                     	;# 
  1281     018D                     	;# 
  1282     0191                     	;# 
  1283     0191                     	;# 
  1284     0192                     	;# 
  1285     0193                     	;# 
  1286     0193                     	;# 
  1287     0193                     	;# 
  1288     0194                     	;# 
  1289     0195                     	;# 
  1290     0196                     	;# 
  1291     0199                     	;# 
  1292     019A                     	;# 
  1293     019B                     	;# 
  1294     019B                     	;# 
  1295     019B                     	;# 
  1296     019B                     	;# 
  1297     019C                     	;# 
  1298     019C                     	;# 
  1299     019D                     	;# 
  1300     019E                     	;# 
  1301     019F                     	;# 
  1302     020C                     	;# 
  1303     020D                     	;# 
  1304     0211                     	;# 
  1305     0211                     	;# 
  1306     0212                     	;# 
  1307     0212                     	;# 
  1308     0213                     	;# 
  1309     0213                     	;# 
  1310     0214                     	;# 
  1311     0214                     	;# 
  1312     0215                     	;# 
  1313     0215                     	;# 
  1314     0215                     	;# 
  1315     0216                     	;# 
  1316     0216                     	;# 
  1317     0217                     	;# 
  1318     0217                     	;# 
  1319     0219                     	;# 
  1320     021A                     	;# 
  1321     021B                     	;# 
  1322     021C                     	;# 
  1323     021D                     	;# 
  1324     021E                     	;# 
  1325     021F                     	;# 
  1326     0291                     	;# 
  1327     0291                     	;# 
  1328     0292                     	;# 
  1329     0293                     	;# 
  1330     0294                     	;# 
  1331     0295                     	;# 
  1332     0295                     	;# 
  1333     0296                     	;# 
  1334     0298                     	;# 
  1335     0298                     	;# 
  1336     0299                     	;# 
  1337     029A                     	;# 
  1338     029B                     	;# 
  1339     029C                     	;# 
  1340     029C                     	;# 
  1341     029D                     	;# 
  1342     029E                     	;# 
  1343     029E                     	;# 
  1344     0311                     	;# 
  1345     0311                     	;# 
  1346     0312                     	;# 
  1347     0313                     	;# 
  1348     0318                     	;# 
  1349     0318                     	;# 
  1350     0319                     	;# 
  1351     031A                     	;# 
  1352     0394                     	;# 
  1353     0395                     	;# 
  1354     0396                     	;# 
  1355     039A                     	;# 
  1356     039C                     	;# 
  1357     039D                     	;# 
  1358     039E                     	;# 
  1359     039F                     	;# 
  1360     0415                     	;# 
  1361     0416                     	;# 
  1362     0417                     	;# 
  1363     041C                     	;# 
  1364     041D                     	;# 
  1365     041E                     	;# 
  1366     0FE4                     	;# 
  1367     0FE5                     	;# 
  1368     0FE6                     	;# 
  1369     0FE7                     	;# 
  1370     0FE8                     	;# 
  1371     0FE9                     	;# 
  1372     0FEA                     	;# 
  1373     0FEB                     	;# 
  1374     0FED                     	;# 
  1375     0FEE                     	;# 
  1376     0FEF                     	;# 
  1377     0000                     	;# 
  1378     0001                     	;# 
  1379     0002                     	;# 
  1380     0003                     	;# 
  1381     0004                     	;# 
  1382     0005                     	;# 
  1383     0006                     	;# 
  1384     0007                     	;# 
  1385     0008                     	;# 
  1386     0009                     	;# 
  1387     000A                     	;# 
  1388     000B                     	;# 
  1389     000C                     	;# 
  1390     000D                     	;# 
  1391     0011                     	;# 
  1392     0012                     	;# 
  1393     0013                     	;# 
  1394     0014                     	;# 
  1395     0015                     	;# 
  1396     0016                     	;# 
  1397     0016                     	;# 
  1398     0017                     	;# 
  1399     0018                     	;# 
  1400     0019                     	;# 
  1401     001A                     	;# 
  1402     001B                     	;# 
  1403     001C                     	;# 
  1404     001E                     	;# 
  1405     001F                     	;# 
  1406     008C                     	;# 
  1407     008D                     	;# 
  1408     0091                     	;# 
  1409     0092                     	;# 
  1410     0093                     	;# 
  1411     0094                     	;# 
  1412     0095                     	;# 
  1413     0096                     	;# 
  1414     0097                     	;# 
  1415     0098                     	;# 
  1416     0099                     	;# 
  1417     009A                     	;# 
  1418     009B                     	;# 
  1419     009B                     	;# 
  1420     009C                     	;# 
  1421     009D                     	;# 
  1422     009E                     	;# 
  1423     010C                     	;# 
  1424     010D                     	;# 
  1425     0111                     	;# 
  1426     0112                     	;# 
  1427     0113                     	;# 
  1428     0114                     	;# 
  1429     0115                     	;# 
  1430     0116                     	;# 
  1431     0117                     	;# 
  1432     0118                     	;# 
  1433     0119                     	;# 
  1434     011A                     	;# 
  1435     011B                     	;# 
  1436     011D                     	;# 
  1437     011E                     	;# 
  1438     018C                     	;# 
  1439     018D                     	;# 
  1440     0191                     	;# 
  1441     0191                     	;# 
  1442     0192                     	;# 
  1443     0193                     	;# 
  1444     0193                     	;# 
  1445     0193                     	;# 
  1446     0194                     	;# 
  1447     0195                     	;# 
  1448     0196                     	;# 
  1449     0199                     	;# 
  1450     019A                     	;# 
  1451     019B                     	;# 
  1452     019B                     	;# 
  1453     019B                     	;# 
  1454     019B                     	;# 
  1455     019C                     	;# 
  1456     019C                     	;# 
  1457     019D                     	;# 
  1458     019E                     	;# 
  1459     019F                     	;# 
  1460     020C                     	;# 
  1461     020D                     	;# 
  1462     0211                     	;# 
  1463     0211                     	;# 
  1464     0212                     	;# 
  1465     0212                     	;# 
  1466     0213                     	;# 
  1467     0213                     	;# 
  1468     0214                     	;# 
  1469     0214                     	;# 
  1470     0215                     	;# 
  1471     0215                     	;# 
  1472     0215                     	;# 
  1473     0216                     	;# 
  1474     0216                     	;# 
  1475     0217                     	;# 
  1476     0217                     	;# 
  1477     0219                     	;# 
  1478     021A                     	;# 
  1479     021B                     	;# 
  1480     021C                     	;# 
  1481     021D                     	;# 
  1482     021E                     	;# 
  1483     021F                     	;# 
  1484     0291                     	;# 
  1485     0291                     	;# 
  1486     0292                     	;# 
  1487     0293                     	;# 
  1488     0294                     	;# 
  1489     0295                     	;# 
  1490     0295                     	;# 
  1491     0296                     	;# 
  1492     0298                     	;# 
  1493     0298                     	;# 
  1494     0299                     	;# 
  1495     029A                     	;# 
  1496     029B                     	;# 
  1497     029C                     	;# 
  1498     029C                     	;# 
  1499     029D                     	;# 
  1500     029E                     	;# 
  1501     029E                     	;# 
  1502     0311                     	;# 
  1503     0311                     	;# 
  1504     0312                     	;# 
  1505     0313                     	;# 
  1506     0318                     	;# 
  1507     0318                     	;# 
  1508     0319                     	;# 
  1509     031A                     	;# 
  1510     0394                     	;# 
  1511     0395                     	;# 
  1512     0396                     	;# 
  1513     039A                     	;# 
  1514     039C                     	;# 
  1515     039D                     	;# 
  1516     039E                     	;# 
  1517     039F                     	;# 
  1518     0415                     	;# 
  1519     0416                     	;# 
  1520     0417                     	;# 
  1521     041C                     	;# 
  1522     041D                     	;# 
  1523     041E                     	;# 
  1524     0FE4                     	;# 
  1525     0FE5                     	;# 
  1526     0FE6                     	;# 
  1527     0FE7                     	;# 
  1528     0FE8                     	;# 
  1529     0FE9                     	;# 
  1530     0FEA                     	;# 
  1531     0FEB                     	;# 
  1532     0FED                     	;# 
  1533     0FEE                     	;# 
  1534     0FEF                     	;# 
  1535     0000                     	;# 
  1536     0001                     	;# 
  1537     0002                     	;# 
  1538     0003                     	;# 
  1539     0004                     	;# 
  1540     0005                     	;# 
  1541     0006                     	;# 
  1542     0007                     	;# 
  1543     0008                     	;# 
  1544     0009                     	;# 
  1545     000A                     	;# 
  1546     000B                     	;# 
  1547     000C                     	;# 
  1548     000D                     	;# 
  1549     0011                     	;# 
  1550     0012                     	;# 
  1551     0013                     	;# 
  1552     0014                     	;# 
  1553     0015                     	;# 
  1554     0016                     	;# 
  1555     0016                     	;# 
  1556     0017                     	;# 
  1557     0018                     	;# 
  1558     0019                     	;# 
  1559     001A                     	;# 
  1560     001B                     	;# 
  1561     001C                     	;# 
  1562     001E                     	;# 
  1563     001F                     	;# 
  1564     008C                     	;# 
  1565     008D                     	;# 
  1566     0091                     	;# 
  1567     0092                     	;# 
  1568     0093                     	;# 
  1569     0094                     	;# 
  1570     0095                     	;# 
  1571     0096                     	;# 
  1572     0097                     	;# 
  1573     0098                     	;# 
  1574     0099                     	;# 
  1575     009A                     	;# 
  1576     009B                     	;# 
  1577     009B                     	;# 
  1578     009C                     	;# 
  1579     009D                     	;# 
  1580     009E                     	;# 
  1581     010C                     	;# 
  1582     010D                     	;# 
  1583     0111                     	;# 
  1584     0112                     	;# 
  1585     0113                     	;# 
  1586     0114                     	;# 
  1587     0115                     	;# 
  1588     0116                     	;# 
  1589     0117                     	;# 
  1590     0118                     	;# 
  1591     0119                     	;# 
  1592     011A                     	;# 
  1593     011B                     	;# 
  1594     011D                     	;# 
  1595     011E                     	;# 
  1596     018C                     	;# 
  1597     018D                     	;# 
  1598     0191                     	;# 
  1599     0191                     	;# 
  1600     0192                     	;# 
  1601     0193                     	;# 
  1602     0193                     	;# 
  1603     0193                     	;# 
  1604     0194                     	;# 
  1605     0195                     	;# 
  1606     0196                     	;# 
  1607     0199                     	;# 
  1608     019A                     	;# 
  1609     019B                     	;# 
  1610     019B                     	;# 
  1611     019B                     	;# 
  1612     019B                     	;# 
  1613     019C                     	;# 
  1614     019C                     	;# 
  1615     019D                     	;# 
  1616     019E                     	;# 
  1617     019F                     	;# 
  1618     020C                     	;# 
  1619     020D                     	;# 
  1620     0211                     	;# 
  1621     0211                     	;# 
  1622     0212                     	;# 
  1623     0212                     	;# 
  1624     0213                     	;# 
  1625     0213                     	;# 
  1626     0214                     	;# 
  1627     0214                     	;# 
  1628     0215                     	;# 
  1629     0215                     	;# 
  1630     0215                     	;# 
  1631     0216                     	;# 
  1632     0216                     	;# 
  1633     0217                     	;# 
  1634     0217                     	;# 
  1635     0219                     	;# 
  1636     021A                     	;# 
  1637     021B                     	;# 
  1638     021C                     	;# 
  1639     021D                     	;# 
  1640     021E                     	;# 
  1641     021F                     	;# 
  1642     0291                     	;# 
  1643     0291                     	;# 
  1644     0292                     	;# 
  1645     0293                     	;# 
  1646     0294                     	;# 
  1647     0295                     	;# 
  1648     0295                     	;# 
  1649     0296                     	;# 
  1650     0298                     	;# 
  1651     0298                     	;# 
  1652     0299                     	;# 
  1653     029A                     	;# 
  1654     029B                     	;# 
  1655     029C                     	;# 
  1656     029C                     	;# 
  1657     029D                     	;# 
  1658     029E                     	;# 
  1659     029E                     	;# 
  1660     0311                     	;# 
  1661     0311                     	;# 
  1662     0312                     	;# 
  1663     0313                     	;# 
  1664     0318                     	;# 
  1665     0318                     	;# 
  1666     0319                     	;# 
  1667     031A                     	;# 
  1668     0394                     	;# 
  1669     0395                     	;# 
  1670     0396                     	;# 
  1671     039A                     	;# 
  1672     039C                     	;# 
  1673     039D                     	;# 
  1674     039E                     	;# 
  1675     039F                     	;# 
  1676     0415                     	;# 
  1677     0416                     	;# 
  1678     0417                     	;# 
  1679     041C                     	;# 
  1680     041D                     	;# 
  1681     041E                     	;# 
  1682     0FE4                     	;# 
  1683     0FE5                     	;# 
  1684     0FE6                     	;# 
  1685     0FE7                     	;# 
  1686     0FE8                     	;# 
  1687     0FE9                     	;# 
  1688     0FEA                     	;# 
  1689     0FEB                     	;# 
  1690     0FED                     	;# 
  1691     0FEE                     	;# 
  1692     0FEF                     	;# 
  1693     0000                     	;# 
  1694     0001                     	;# 
  1695     0002                     	;# 
  1696     0003                     	;# 
  1697     0004                     	;# 
  1698     0005                     	;# 
  1699     0006                     	;# 
  1700     0007                     	;# 
  1701     0008                     	;# 
  1702     0009                     	;# 
  1703     000A                     	;# 
  1704     000B                     	;# 
  1705     000C                     	;# 
  1706     000D                     	;# 
  1707     0011                     	;# 
  1708     0012                     	;# 
  1709     0013                     	;# 
  1710     0014                     	;# 
  1711     0015                     	;# 
  1712     0016                     	;# 
  1713     0016                     	;# 
  1714     0017                     	;# 
  1715     0018                     	;# 
  1716     0019                     	;# 
  1717     001A                     	;# 
  1718     001B                     	;# 
  1719     001C                     	;# 
  1720     001E                     	;# 
  1721     001F                     	;# 
  1722     008C                     	;# 
  1723     008D                     	;# 
  1724     0091                     	;# 
  1725     0092                     	;# 
  1726     0093                     	;# 
  1727     0094                     	;# 
  1728     0095                     	;# 
  1729     0096                     	;# 
  1730     0097                     	;# 
  1731     0098                     	;# 
  1732     0099                     	;# 
  1733     009A                     	;# 
  1734     009B                     	;# 
  1735     009B                     	;# 
  1736     009C                     	;# 
  1737     009D                     	;# 
  1738     009E                     	;# 
  1739     010C                     	;# 
  1740     010D                     	;# 
  1741     0111                     	;# 
  1742     0112                     	;# 
  1743     0113                     	;# 
  1744     0114                     	;# 
  1745     0115                     	;# 
  1746     0116                     	;# 
  1747     0117                     	;# 
  1748     0118                     	;# 
  1749     0119                     	;# 
  1750     011A                     	;# 
  1751     011B                     	;# 
  1752     011D                     	;# 
  1753     011E                     	;# 
  1754     018C                     	;# 
  1755     018D                     	;# 
  1756     0191                     	;# 
  1757     0191                     	;# 
  1758     0192                     	;# 
  1759     0193                     	;# 
  1760     0193                     	;# 
  1761     0193                     	;# 
  1762     0194                     	;# 
  1763     0195                     	;# 
  1764     0196                     	;# 
  1765     0199                     	;# 
  1766     019A                     	;# 
  1767     019B                     	;# 
  1768     019B                     	;# 
  1769     019B                     	;# 
  1770     019B                     	;# 
  1771     019C                     	;# 
  1772     019C                     	;# 
  1773     019D                     	;# 
  1774     019E                     	;# 
  1775     019F                     	;# 
  1776     020C                     	;# 
  1777     020D                     	;# 
  1778     0211                     	;# 
  1779     0211                     	;# 
  1780     0212                     	;# 
  1781     0212                     	;# 
  1782     0213                     	;# 
  1783     0213                     	;# 
  1784     0214                     	;# 
  1785     0214                     	;# 
  1786     0215                     	;# 
  1787     0215                     	;# 
  1788     0215                     	;# 
  1789     0216                     	;# 
  1790     0216                     	;# 
  1791     0217                     	;# 
  1792     0217                     	;# 
  1793     0219                     	;# 
  1794     021A                     	;# 
  1795     021B                     	;# 
  1796     021C                     	;# 
  1797     021D                     	;# 
  1798     021E                     	;# 
  1799     021F                     	;# 
  1800     0291                     	;# 
  1801     0291                     	;# 
  1802     0292                     	;# 
  1803     0293                     	;# 
  1804     0294                     	;# 
  1805     0295                     	;# 
  1806     0295                     	;# 
  1807     0296                     	;# 
  1808     0298                     	;# 
  1809     0298                     	;# 
  1810     0299                     	;# 
  1811     029A                     	;# 
  1812     029B                     	;# 
  1813     029C                     	;# 
  1814     029C                     	;# 
  1815     029D                     	;# 
  1816     029E                     	;# 
  1817     029E                     	;# 
  1818     0311                     	;# 
  1819     0311                     	;# 
  1820     0312                     	;# 
  1821     0313                     	;# 
  1822     0318                     	;# 
  1823     0318                     	;# 
  1824     0319                     	;# 
  1825     031A                     	;# 
  1826     0394                     	;# 
  1827     0395                     	;# 
  1828     0396                     	;# 
  1829     039A                     	;# 
  1830     039C                     	;# 
  1831     039D                     	;# 
  1832     039E                     	;# 
  1833     039F                     	;# 
  1834     0415                     	;# 
  1835     0416                     	;# 
  1836     0417                     	;# 
  1837     041C                     	;# 
  1838     041D                     	;# 
  1839     041E                     	;# 
  1840     0FE4                     	;# 
  1841     0FE5                     	;# 
  1842     0FE6                     	;# 
  1843     0FE7                     	;# 
  1844     0FE8                     	;# 
  1845     0FE9                     	;# 
  1846     0FEA                     	;# 
  1847     0FEB                     	;# 
  1848     0FED                     	;# 
  1849     0FEE                     	;# 
  1850     0FEF                     	;# 
  1851     0000                     	;# 
  1852     0001                     	;# 
  1853     0002                     	;# 
  1854     0003                     	;# 
  1855     0004                     	;# 
  1856     0005                     	;# 
  1857     0006                     	;# 
  1858     0007                     	;# 
  1859     0008                     	;# 
  1860     0009                     	;# 
  1861     000A                     	;# 
  1862     000B                     	;# 
  1863     000C                     	;# 
  1864     000D                     	;# 
  1865     0011                     	;# 
  1866     0012                     	;# 
  1867     0013                     	;# 
  1868     0014                     	;# 
  1869     0015                     	;# 
  1870     0016                     	;# 
  1871     0016                     	;# 
  1872     0017                     	;# 
  1873     0018                     	;# 
  1874     0019                     	;# 
  1875     001A                     	;# 
  1876     001B                     	;# 
  1877     001C                     	;# 
  1878     001E                     	;# 
  1879     001F                     	;# 
  1880     008C                     	;# 
  1881     008D                     	;# 
  1882     0091                     	;# 
  1883     0092                     	;# 
  1884     0093                     	;# 
  1885     0094                     	;# 
  1886     0095                     	;# 
  1887     0096                     	;# 
  1888     0097                     	;# 
  1889     0098                     	;# 
  1890     0099                     	;# 
  1891     009A                     	;# 
  1892     009B                     	;# 
  1893     009B                     	;# 
  1894     009C                     	;# 
  1895     009D                     	;# 
  1896     009E                     	;# 
  1897     010C                     	;# 
  1898     010D                     	;# 
  1899     0111                     	;# 
  1900     0112                     	;# 
  1901     0113                     	;# 
  1902     0114                     	;# 
  1903     0115                     	;# 
  1904     0116                     	;# 
  1905     0117                     	;# 
  1906     0118                     	;# 
  1907     0119                     	;# 
  1908     011A                     	;# 
  1909     011B                     	;# 
  1910     011D                     	;# 
  1911     011E                     	;# 
  1912     018C                     	;# 
  1913     018D                     	;# 
  1914     0191                     	;# 
  1915     0191                     	;# 
  1916     0192                     	;# 
  1917     0193                     	;# 
  1918     0193                     	;# 
  1919     0193                     	;# 
  1920     0194                     	;# 
  1921     0195                     	;# 
  1922     0196                     	;# 
  1923     0199                     	;# 
  1924     019A                     	;# 
  1925     019B                     	;# 
  1926     019B                     	;# 
  1927     019B                     	;# 
  1928     019B                     	;# 
  1929     019C                     	;# 
  1930     019C                     	;# 
  1931     019D                     	;# 
  1932     019E                     	;# 
  1933     019F                     	;# 
  1934     020C                     	;# 
  1935     020D                     	;# 
  1936     0211                     	;# 
  1937     0211                     	;# 
  1938     0212                     	;# 
  1939     0212                     	;# 
  1940     0213                     	;# 
  1941     0213                     	;# 
  1942     0214                     	;# 
  1943     0214                     	;# 
  1944     0215                     	;# 
  1945     0215                     	;# 
  1946     0215                     	;# 
  1947     0216                     	;# 
  1948     0216                     	;# 
  1949     0217                     	;# 
  1950     0217                     	;# 
  1951     0219                     	;# 
  1952     021A                     	;# 
  1953     021B                     	;# 
  1954     021C                     	;# 
  1955     021D                     	;# 
  1956     021E                     	;# 
  1957     021F                     	;# 
  1958     0291                     	;# 
  1959     0291                     	;# 
  1960     0292                     	;# 
  1961     0293                     	;# 
  1962     0294                     	;# 
  1963     0295                     	;# 
  1964     0295                     	;# 
  1965     0296                     	;# 
  1966     0298                     	;# 
  1967     0298                     	;# 
  1968     0299                     	;# 
  1969     029A                     	;# 
  1970     029B                     	;# 
  1971     029C                     	;# 
  1972     029C                     	;# 
  1973     029D                     	;# 
  1974     029E                     	;# 
  1975     029E                     	;# 
  1976     0311                     	;# 
  1977     0311                     	;# 
  1978     0312                     	;# 
  1979     0313                     	;# 
  1980     0318                     	;# 
  1981     0318                     	;# 
  1982     0319                     	;# 
  1983     031A                     	;# 
  1984     0394                     	;# 
  1985     0395                     	;# 
  1986     0396                     	;# 
  1987     039A                     	;# 
  1988     039C                     	;# 
  1989     039D                     	;# 
  1990     039E                     	;# 
  1991     039F                     	;# 
  1992     0415                     	;# 
  1993     0416                     	;# 
  1994     0417                     	;# 
  1995     041C                     	;# 
  1996     041D                     	;# 
  1997     041E                     	;# 
  1998     0FE4                     	;# 
  1999     0FE5                     	;# 
  2000     0FE6                     	;# 
  2001     0FE7                     	;# 
  2002     0FE8                     	;# 
  2003     0FE9                     	;# 
  2004     0FEA                     	;# 
  2005     0FEB                     	;# 
  2006     0FED                     	;# 
  2007     0FEE                     	;# 
  2008     0FEF                     	;# 
  2009     0000                     	;# 
  2010     0001                     	;# 
  2011     0002                     	;# 
  2012     0003                     	;# 
  2013     0004                     	;# 
  2014     0005                     	;# 
  2015     0006                     	;# 
  2016     0007                     	;# 
  2017     0008                     	;# 
  2018     0009                     	;# 
  2019     000A                     	;# 
  2020     000B                     	;# 
  2021     000C                     	;# 
  2022     000D                     	;# 
  2023     0011                     	;# 
  2024     0012                     	;# 
  2025     0013                     	;# 
  2026     0014                     	;# 
  2027     0015                     	;# 
  2028     0016                     	;# 
  2029     0016                     	;# 
  2030     0017                     	;# 
  2031     0018                     	;# 
  2032     0019                     	;# 
  2033     001A                     	;# 
  2034     001B                     	;# 
  2035     001C                     	;# 
  2036     001E                     	;# 
  2037     001F                     	;# 
  2038     008C                     	;# 
  2039     008D                     	;# 
  2040     0091                     	;# 
  2041     0092                     	;# 
  2042     0093                     	;# 
  2043     0094                     	;# 
  2044     0095                     	;# 
  2045     0096                     	;# 
  2046     0097                     	;# 
  2047     0098                     	;# 
  2048     0099                     	;# 
  2049     009A                     	;# 
  2050     009B                     	;# 
  2051     009B                     	;# 
  2052     009C                     	;# 
  2053     009D                     	;# 
  2054     009E                     	;# 
  2055     010C                     	;# 
  2056     010D                     	;# 
  2057     0111                     	;# 
  2058     0112                     	;# 
  2059     0113                     	;# 
  2060     0114                     	;# 
  2061     0115                     	;# 
  2062     0116                     	;# 
  2063     0117                     	;# 
  2064     0118                     	;# 
  2065     0119                     	;# 
  2066     011A                     	;# 
  2067     011B                     	;# 
  2068     011D                     	;# 
  2069     011E                     	;# 
  2070     018C                     	;# 
  2071     018D                     	;# 
  2072     0191                     	;# 
  2073     0191                     	;# 
  2074     0192                     	;# 
  2075     0193                     	;# 
  2076     0193                     	;# 
  2077     0193                     	;# 
  2078     0194                     	;# 
  2079     0195                     	;# 
  2080     0196                     	;# 
  2081     0199                     	;# 
  2082     019A                     	;# 
  2083     019B                     	;# 
  2084     019B                     	;# 
  2085     019B                     	;# 
  2086     019B                     	;# 
  2087     019C                     	;# 
  2088     019C                     	;# 
  2089     019D                     	;# 
  2090     019E                     	;# 
  2091     019F                     	;# 
  2092     020C                     	;# 
  2093     020D                     	;# 
  2094     0211                     	;# 
  2095     0211                     	;# 
  2096     0212                     	;# 
  2097     0212                     	;# 
  2098     0213                     	;# 
  2099     0213                     	;# 
  2100     0214                     	;# 
  2101     0214                     	;# 
  2102     0215                     	;# 
  2103     0215                     	;# 
  2104     0215                     	;# 
  2105     0216                     	;# 
  2106     0216                     	;# 
  2107     0217                     	;# 
  2108     0217                     	;# 
  2109     0219                     	;# 
  2110     021A                     	;# 
  2111     021B                     	;# 
  2112     021C                     	;# 
  2113     021D                     	;# 
  2114     021E                     	;# 
  2115     021F                     	;# 
  2116     0291                     	;# 
  2117     0291                     	;# 
  2118     0292                     	;# 
  2119     0293                     	;# 
  2120     0294                     	;# 
  2121     0295                     	;# 
  2122     0295                     	;# 
  2123     0296                     	;# 
  2124     0298                     	;# 
  2125     0298                     	;# 
  2126     0299                     	;# 
  2127     029A                     	;# 
  2128     029B                     	;# 
  2129     029C                     	;# 
  2130     029C                     	;# 
  2131     029D                     	;# 
  2132     029E                     	;# 
  2133     029E                     	;# 
  2134     0311                     	;# 
  2135     0311                     	;# 
  2136     0312                     	;# 
  2137     0313                     	;# 
  2138     0318                     	;# 
  2139     0318                     	;# 
  2140     0319                     	;# 
  2141     031A                     	;# 
  2142     0394                     	;# 
  2143     0395                     	;# 
  2144     0396                     	;# 
  2145     039A                     	;# 
  2146     039C                     	;# 
  2147     039D                     	;# 
  2148     039E                     	;# 
  2149     039F                     	;# 
  2150     0415                     	;# 
  2151     0416                     	;# 
  2152     0417                     	;# 
  2153     041C                     	;# 
  2154     041D                     	;# 
  2155     041E                     	;# 
  2156     0FE4                     	;# 
  2157     0FE5                     	;# 
  2158     0FE6                     	;# 
  2159     0FE7                     	;# 
  2160     0FE8                     	;# 
  2161     0FE9                     	;# 
  2162     0FEA                     	;# 
  2163     0FEB                     	;# 
  2164     0FED                     	;# 
  2165     0FEE                     	;# 
  2166     0FEF                     	;# 
  2167     0000                     	;# 
  2168     0001                     	;# 
  2169     0002                     	;# 
  2170     0003                     	;# 
  2171     0004                     	;# 
  2172     0005                     	;# 
  2173     0006                     	;# 
  2174     0007                     	;# 
  2175     0008                     	;# 
  2176     0009                     	;# 
  2177     000A                     	;# 
  2178     000B                     	;# 
  2179     000C                     	;# 
  2180     000D                     	;# 
  2181     0011                     	;# 
  2182     0012                     	;# 
  2183     0013                     	;# 
  2184     0014                     	;# 
  2185     0015                     	;# 
  2186     0016                     	;# 
  2187     0016                     	;# 
  2188     0017                     	;# 
  2189     0018                     	;# 
  2190     0019                     	;# 
  2191     001A                     	;# 
  2192     001B                     	;# 
  2193     001C                     	;# 
  2194     001E                     	;# 
  2195     001F                     	;# 
  2196     008C                     	;# 
  2197     008D                     	;# 
  2198     0091                     	;# 
  2199     0092                     	;# 
  2200     0093                     	;# 
  2201     0094                     	;# 
  2202     0095                     	;# 
  2203     0096                     	;# 
  2204     0097                     	;# 
  2205     0098                     	;# 
  2206     0099                     	;# 
  2207     009A                     	;# 
  2208     009B                     	;# 
  2209     009B                     	;# 
  2210     009C                     	;# 
  2211     009D                     	;# 
  2212     009E                     	;# 
  2213     010C                     	;# 
  2214     010D                     	;# 
  2215     0111                     	;# 
  2216     0112                     	;# 
  2217     0113                     	;# 
  2218     0114                     	;# 
  2219     0115                     	;# 
  2220     0116                     	;# 
  2221     0117                     	;# 
  2222     0118                     	;# 
  2223     0119                     	;# 
  2224     011A                     	;# 
  2225     011B                     	;# 
  2226     011D                     	;# 
  2227     011E                     	;# 
  2228     018C                     	;# 
  2229     018D                     	;# 
  2230     0191                     	;# 
  2231     0191                     	;# 
  2232     0192                     	;# 
  2233     0193                     	;# 
  2234     0193                     	;# 
  2235     0193                     	;# 
  2236     0194                     	;# 
  2237     0195                     	;# 
  2238     0196                     	;# 
  2239     0199                     	;# 
  2240     019A                     	;# 
  2241     019B                     	;# 
  2242     019B                     	;# 
  2243     019B                     	;# 
  2244     019B                     	;# 
  2245     019C                     	;# 
  2246     019C                     	;# 
  2247     019D                     	;# 
  2248     019E                     	;# 
  2249     019F                     	;# 
  2250     020C                     	;# 
  2251     020D                     	;# 
  2252     0211                     	;# 
  2253     0211                     	;# 
  2254     0212                     	;# 
  2255     0212                     	;# 
  2256     0213                     	;# 
  2257     0213                     	;# 
  2258     0214                     	;# 
  2259     0214                     	;# 
  2260     0215                     	;# 
  2261     0215                     	;# 
  2262     0215                     	;# 
  2263     0216                     	;# 
  2264     0216                     	;# 
  2265     0217                     	;# 
  2266     0217                     	;# 
  2267     0219                     	;# 
  2268     021A                     	;# 
  2269     021B                     	;# 
  2270     021C                     	;# 
  2271     021D                     	;# 
  2272     021E                     	;# 
  2273     021F                     	;# 
  2274     0291                     	;# 
  2275     0291                     	;# 
  2276     0292                     	;# 
  2277     0293                     	;# 
  2278     0294                     	;# 
  2279     0295                     	;# 
  2280     0295                     	;# 
  2281     0296                     	;# 
  2282     0298                     	;# 
  2283     0298                     	;# 
  2284     0299                     	;# 
  2285     029A                     	;# 
  2286     029B                     	;# 
  2287     029C                     	;# 
  2288     029C                     	;# 
  2289     029D                     	;# 
  2290     029E                     	;# 
  2291     029E                     	;# 
  2292     0311                     	;# 
  2293     0311                     	;# 
  2294     0312                     	;# 
  2295     0313                     	;# 
  2296     0318                     	;# 
  2297     0318                     	;# 
  2298     0319                     	;# 
  2299     031A                     	;# 
  2300     0394                     	;# 
  2301     0395                     	;# 
  2302     0396                     	;# 
  2303     039A                     	;# 
  2304     039C                     	;# 
  2305     039D                     	;# 
  2306     039E                     	;# 
  2307     039F                     	;# 
  2308     0415                     	;# 
  2309     0416                     	;# 
  2310     0417                     	;# 
  2311     041C                     	;# 
  2312     041D                     	;# 
  2313     041E                     	;# 
  2314     0FE4                     	;# 
  2315     0FE5                     	;# 
  2316     0FE6                     	;# 
  2317     0FE7                     	;# 
  2318     0FE8                     	;# 
  2319     0FE9                     	;# 
  2320     0FEA                     	;# 
  2321     0FEB                     	;# 
  2322     0FED                     	;# 
  2323     0FEE                     	;# 
  2324     0FEF                     	;# 
  2325     0000                     	;# 
  2326     0001                     	;# 
  2327     0002                     	;# 
  2328     0003                     	;# 
  2329     0004                     	;# 
  2330     0005                     	;# 
  2331     0006                     	;# 
  2332     0007                     	;# 
  2333     0008                     	;# 
  2334     0009                     	;# 
  2335     000A                     	;# 
  2336     000B                     	;# 
  2337     000C                     	;# 
  2338     000D                     	;# 
  2339     0011                     	;# 
  2340     0012                     	;# 
  2341     0013                     	;# 
  2342     0014                     	;# 
  2343     0015                     	;# 
  2344     0016                     	;# 
  2345     0016                     	;# 
  2346     0017                     	;# 
  2347     0018                     	;# 
  2348     0019                     	;# 
  2349     001A                     	;# 
  2350     001B                     	;# 
  2351     001C                     	;# 
  2352     001E                     	;# 
  2353     001F                     	;# 
  2354     008C                     	;# 
  2355     008D                     	;# 
  2356     0091                     	;# 
  2357     0092                     	;# 
  2358     0093                     	;# 
  2359     0094                     	;# 
  2360     0095                     	;# 
  2361     0096                     	;# 
  2362     0097                     	;# 
  2363     0098                     	;# 
  2364     0099                     	;# 
  2365     009A                     	;# 
  2366     009B                     	;# 
  2367     009B                     	;# 
  2368     009C                     	;# 
  2369     009D                     	;# 
  2370     009E                     	;# 
  2371     010C                     	;# 
  2372     010D                     	;# 
  2373     0111                     	;# 
  2374     0112                     	;# 
  2375     0113                     	;# 
  2376     0114                     	;# 
  2377     0115                     	;# 
  2378     0116                     	;# 
  2379     0117                     	;# 
  2380     0118                     	;# 
  2381     0119                     	;# 
  2382     011A                     	;# 
  2383     011B                     	;# 
  2384     011D                     	;# 
  2385     011E                     	;# 
  2386     018C                     	;# 
  2387     018D                     	;# 
  2388     0191                     	;# 
  2389     0191                     	;# 
  2390     0192                     	;# 
  2391     0193                     	;# 
  2392     0193                     	;# 
  2393     0193                     	;# 
  2394     0194                     	;# 
  2395     0195                     	;# 
  2396     0196                     	;# 
  2397     0199                     	;# 
  2398     019A                     	;# 
  2399     019B                     	;# 
  2400     019B                     	;# 
  2401     019B                     	;# 
  2402     019B                     	;# 
  2403     019C                     	;# 
  2404     019C                     	;# 
  2405     019D                     	;# 
  2406     019E                     	;# 
  2407     019F                     	;# 
  2408     020C                     	;# 
  2409     020D                     	;# 
  2410     0211                     	;# 
  2411     0211                     	;# 
  2412     0212                     	;# 
  2413     0212                     	;# 
  2414     0213                     	;# 
  2415     0213                     	;# 
  2416     0214                     	;# 
  2417     0214                     	;# 
  2418     0215                     	;# 
  2419     0215                     	;# 
  2420     0215                     	;# 
  2421     0216                     	;# 
  2422     0216                     	;# 
  2423     0217                     	;# 
  2424     0217                     	;# 
  2425     0219                     	;# 
  2426     021A                     	;# 
  2427     021B                     	;# 
  2428     021C                     	;# 
  2429     021D                     	;# 
  2430     021E                     	;# 
  2431     021F                     	;# 
  2432     0291                     	;# 
  2433     0291                     	;# 
  2434     0292                     	;# 
  2435     0293                     	;# 
  2436     0294                     	;# 
  2437     0295                     	;# 
  2438     0295                     	;# 
  2439     0296                     	;# 
  2440     0298                     	;# 
  2441     0298                     	;# 
  2442     0299                     	;# 
  2443     029A                     	;# 
  2444     029B                     	;# 
  2445     029C                     	;# 
  2446     029C                     	;# 
  2447     029D                     	;# 
  2448     029E                     	;# 
  2449     029E                     	;# 
  2450     0311                     	;# 
  2451     0311                     	;# 
  2452     0312                     	;# 
  2453     0313                     	;# 
  2454     0318                     	;# 
  2455     0318                     	;# 
  2456     0319                     	;# 
  2457     031A                     	;# 
  2458     0394                     	;# 
  2459     0395                     	;# 
  2460     0396                     	;# 
  2461     039A                     	;# 
  2462     039C                     	;# 
  2463     039D                     	;# 
  2464     039E                     	;# 
  2465     039F                     	;# 
  2466     0415                     	;# 
  2467     0416                     	;# 
  2468     0417                     	;# 
  2469     041C                     	;# 
  2470     041D                     	;# 
  2471     041E                     	;# 
  2472     0FE4                     	;# 
  2473     0FE5                     	;# 
  2474     0FE6                     	;# 
  2475     0FE7                     	;# 
  2476     0FE8                     	;# 
  2477     0FE9                     	;# 
  2478     0FEA                     	;# 
  2479     0FEB                     	;# 
  2480     0FED                     	;# 
  2481     0FEE                     	;# 
  2482     0FEF                     	;# 
  2483     0000                     	;# 
  2484     0001                     	;# 
  2485     0002                     	;# 
  2486     0003                     	;# 
  2487     0004                     	;# 
  2488     0005                     	;# 
  2489     0006                     	;# 
  2490     0007                     	;# 
  2491     0008                     	;# 
  2492     0009                     	;# 
  2493     000A                     	;# 
  2494     000B                     	;# 
  2495     000C                     	;# 
  2496     000D                     	;# 
  2497     0011                     	;# 
  2498     0012                     	;# 
  2499     0013                     	;# 
  2500     0014                     	;# 
  2501     0015                     	;# 
  2502     0016                     	;# 
  2503     0016                     	;# 
  2504     0017                     	;# 
  2505     0018                     	;# 
  2506     0019                     	;# 
  2507     001A                     	;# 
  2508     001B                     	;# 
  2509     001C                     	;# 
  2510     001E                     	;# 
  2511     001F                     	;# 
  2512     008C                     	;# 
  2513     008D                     	;# 
  2514     0091                     	;# 
  2515     0092                     	;# 
  2516     0093                     	;# 
  2517     0094                     	;# 
  2518     0095                     	;# 
  2519     0096                     	;# 
  2520     0097                     	;# 
  2521     0098                     	;# 
  2522     0099                     	;# 
  2523     009A                     	;# 
  2524     009B                     	;# 
  2525     009B                     	;# 
  2526     009C                     	;# 
  2527     009D                     	;# 
  2528     009E                     	;# 
  2529     010C                     	;# 
  2530     010D                     	;# 
  2531     0111                     	;# 
  2532     0112                     	;# 
  2533     0113                     	;# 
  2534     0114                     	;# 
  2535     0115                     	;# 
  2536     0116                     	;# 
  2537     0117                     	;# 
  2538     0118                     	;# 
  2539     0119                     	;# 
  2540     011A                     	;# 
  2541     011B                     	;# 
  2542     011D                     	;# 
  2543     011E                     	;# 
  2544     018C                     	;# 
  2545     018D                     	;# 
  2546     0191                     	;# 
  2547     0191                     	;# 
  2548     0192                     	;# 
  2549     0193                     	;# 
  2550     0193                     	;# 
  2551     0193                     	;# 
  2552     0194                     	;# 
  2553     0195                     	;# 
  2554     0196                     	;# 
  2555     0199                     	;# 
  2556     019A                     	;# 
  2557     019B                     	;# 
  2558     019B                     	;# 
  2559     019B                     	;# 
  2560     019B                     	;# 
  2561     019C                     	;# 
  2562     019C                     	;# 
  2563     019D                     	;# 
  2564     019E                     	;# 
  2565     019F                     	;# 
  2566     020C                     	;# 
  2567     020D                     	;# 
  2568     0211                     	;# 
  2569     0211                     	;# 
  2570     0212                     	;# 
  2571     0212                     	;# 
  2572     0213                     	;# 
  2573     0213                     	;# 
  2574     0214                     	;# 
  2575     0214                     	;# 
  2576     0215                     	;# 
  2577     0215                     	;# 
  2578     0215                     	;# 
  2579     0216                     	;# 
  2580     0216                     	;# 
  2581     0217                     	;# 
  2582     0217                     	;# 
  2583     0219                     	;# 
  2584     021A                     	;# 
  2585     021B                     	;# 
  2586     021C                     	;# 
  2587     021D                     	;# 
  2588     021E                     	;# 
  2589     021F                     	;# 
  2590     0291                     	;# 
  2591     0291                     	;# 
  2592     0292                     	;# 
  2593     0293                     	;# 
  2594     0294                     	;# 
  2595     0295                     	;# 
  2596     0295                     	;# 
  2597     0296                     	;# 
  2598     0298                     	;# 
  2599     0298                     	;# 
  2600     0299                     	;# 
  2601     029A                     	;# 
  2602     029B                     	;# 
  2603     029C                     	;# 
  2604     029C                     	;# 
  2605     029D                     	;# 
  2606     029E                     	;# 
  2607     029E                     	;# 
  2608     0311                     	;# 
  2609     0311                     	;# 
  2610     0312                     	;# 
  2611     0313                     	;# 
  2612     0318                     	;# 
  2613     0318                     	;# 
  2614     0319                     	;# 
  2615     031A                     	;# 
  2616     0394                     	;# 
  2617     0395                     	;# 
  2618     0396                     	;# 
  2619     039A                     	;# 
  2620     039C                     	;# 
  2621     039D                     	;# 
  2622     039E                     	;# 
  2623     039F                     	;# 
  2624     0415                     	;# 
  2625     0416                     	;# 
  2626     0417                     	;# 
  2627     041C                     	;# 
  2628     041D                     	;# 
  2629     041E                     	;# 
  2630     0FE4                     	;# 
  2631     0FE5                     	;# 
  2632     0FE6                     	;# 
  2633     0FE7                     	;# 
  2634     0FE8                     	;# 
  2635     0FE9                     	;# 
  2636     0FEA                     	;# 
  2637     0FEB                     	;# 
  2638     0FED                     	;# 
  2639     0FEE                     	;# 
  2640     0FEF                     	;# 
  2641                           
  2642 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  2643     0000                     
  2644 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  2645     0000                     
  2646 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  2647     0000                     
  2648                           	psect	idataBANK0
  2649     0B5F                     __pidataBANK0:
  2650                           
  2651                           ;initializer for _kpf
  2652     0B5F  3415               	retlw	21
  2653     0B60  3400               	retlw	0
  2654     0B61  3400               	retlw	0
  2655                           
  2656                           ;initializer for _first_read
  2657     0B62  3401               	retlw	1
  2658                           
  2659                           	psect	idataBANK2
  2660     0C2C                     __pidataBANK2:
  2661                           
  2662                           ;initializer for _timecontrol
  2663     0C2C  3404               	retlw	4
  2664     0C2D  3400               	retlw	0
  2665     0C2E  3400               	retlw	0
  2666                           
  2667                           ;initializer for _kdp
  2668     0C2F  340F               	retlw	15
  2669     0C30  3400               	retlw	0
  2670     0C31  3400               	retlw	0
  2671                           
  2672                           ;initializer for _kip
  2673     0C32  3411               	retlw	17
  2674     0C33  3400               	retlw	0
  2675     0C34  3400               	retlw	0
  2676                           
  2677                           ;initializer for _kpp
  2678     0C35  3420               	retlw	32
  2679     0C36  3400               	retlw	0
  2680     0C37  3400               	retlw	0
  2681                           
  2682                           ;initializer for _kdf
  2683     0C38  346D               	retlw	109
  2684     0C39  3400               	retlw	0
  2685     0C3A  3400               	retlw	0
  2686                           
  2687                           	psect	stringtext1
  2688     0447                     __pstringtext1:
  2689     0447                     _lookupTable:
  2690     0447  348D               	retlw	141
  2691     0448  34B3               	retlw	179
  2692     0449  3429               	retlw	41
  2693     044A  343D               	retlw	61
  2694     044B  343E               	retlw	62
  2695     044C  3403               	retlw	3
  2696     044D  342A               	retlw	42
  2697     044E  343D               	retlw	61
  2698     044F  34F0               	retlw	240
  2699     0450  3452               	retlw	82
  2700     0451  342A               	retlw	42
  2701     0452  343D               	retlw	61
  2702     0453  3494               	retlw	148
  2703     0454  34A1               	retlw	161
  2704     0455  342A               	retlw	42
  2705     0456  343D               	retlw	61
  2706     0457  3445               	retlw	69
  2707     0458  34F1               	retlw	241
  2708     0459  342A               	retlw	42
  2709     045A  343D               	retlw	61
  2710     045B  34EA               	retlw	234
  2711     045C  343F               	retlw	63
  2712     045D  342B               	retlw	43
  2713     045E  343D               	retlw	61
  2714     045F  348F               	retlw	143
  2715     0460  348E               	retlw	142
  2716     0461  342B               	retlw	43
  2717     0462  343D               	retlw	61
  2718     0463  3433               	retlw	51
  2719     0464  34DD               	retlw	221
  2720     0465  342B               	retlw	43
  2721     0466  343D               	retlw	61
  2722     0467  34D8               	retlw	216
  2723     0468  342B               	retlw	43
  2724     0469  342C               	retlw	44
  2725     046A  343D               	retlw	61
  2726     046B  3470               	retlw	112
  2727     046C  3479               	retlw	121
  2728     046D  342C               	retlw	44
  2729     046E  343D               	retlw	61
  2730     046F  3415               	retlw	21
  2731     0470  34C8               	retlw	200
  2732     0471  342C               	retlw	44
  2733     0472  343D               	retlw	61
  2734     0473  34AD               	retlw	173
  2735     0474  3415               	retlw	21
  2736     0475  342D               	retlw	45
  2737     0476  343D               	retlw	61
  2738     0477  3452               	retlw	82
  2739     0478  3464               	retlw	100
  2740     0479  342D               	retlw	45
  2741     047A  343D               	retlw	61
  2742     047B  34EA               	retlw	234
  2743     047C  34B1               	retlw	177
  2744     047D  342D               	retlw	45
  2745     047E  343D               	retlw	61
  2746     047F  3482               	retlw	130
  2747     0480  34FF               	retlw	255
  2748     0481  342D               	retlw	45
  2749     0482  343D               	retlw	61
  2750     0483  341A               	retlw	26
  2751     0484  344D               	retlw	77
  2752     0485  342E               	retlw	46
  2753     0486  343D               	retlw	61
  2754     0487  34A6               	retlw	166
  2755     0488  3499               	retlw	153
  2756     0489  342E               	retlw	46
  2757     048A  343D               	retlw	61
  2758     048B  343E               	retlw	62
  2759     048C  34E7               	retlw	231
  2760     048D  342E               	retlw	46
  2761     048E  343D               	retlw	61
  2762     048F  34D7               	retlw	215
  2763     0490  3434               	retlw	52
  2764     0491  342F               	retlw	47
  2765     0492  343D               	retlw	61
  2766     0493  3462               	retlw	98
  2767     0494  3481               	retlw	129
  2768     0495  342F               	retlw	47
  2769     0496  343D               	retlw	61
  2770     0497  34EE               	retlw	238
  2771     0498  34CD               	retlw	205
  2772     0499  342F               	retlw	47
  2773     049A  343D               	retlw	61
  2774     049B  347A               	retlw	122
  2775     049C  341A               	retlw	26
  2776     049D  3430               	retlw	48
  2777     049E  343D               	retlw	61
  2778     049F  3406               	retlw	6
  2779     04A0  3467               	retlw	103
  2780     04A1  3430               	retlw	48
  2781     04A2  343D               	retlw	61
  2782     04A3  3492               	retlw	146
  2783     04A4  34B3               	retlw	179
  2784     04A5  3430               	retlw	48
  2785     04A6  343D               	retlw	61
  2786     04A7  341D               	retlw	29
  2787     04A8  3400               	retlw	0
  2788     04A9  3431               	retlw	49
  2789     04AA  343D               	retlw	61
  2790     04AB  34A9               	retlw	169
  2791     04AC  344C               	retlw	76
  2792     04AD  3431               	retlw	49
  2793     04AE  343D               	retlw	61
  2794     04AF  3429               	retlw	41
  2795     04B0  3498               	retlw	152
  2796     04B1  3431               	retlw	49
  2797     04B2  343D               	retlw	61
  2798     04B3  34B4               	retlw	180
  2799     04B4  34E4               	retlw	228
  2800     04B5  3431               	retlw	49
  2801     04B6  343D               	retlw	61
  2802     04B7  3434               	retlw	52
  2803     04B8  3430               	retlw	48
  2804     04B9  3432               	retlw	50
  2805     04BA  343D               	retlw	61
  2806     04BB  34B3               	retlw	179
  2807     04BC  347B               	retlw	123
  2808     04BD  3432               	retlw	50
  2809     04BE  343D               	retlw	61
  2810     04BF  3432               	retlw	50
  2811     04C0  34C7               	retlw	199
  2812     04C1  3432               	retlw	50
  2813     04C2  343D               	retlw	61
  2814     04C3  34B2               	retlw	178
  2815     04C4  3412               	retlw	18
  2816     04C5  3433               	retlw	51
  2817     04C6  343D               	retlw	61
  2818     04C7  3431               	retlw	49
  2819     04C8  345E               	retlw	94
  2820     04C9  3433               	retlw	51
  2821     04CA  343D               	retlw	61
  2822     04CB  34B0               	retlw	176
  2823     04CC  34A9               	retlw	169
  2824     04CD  3433               	retlw	51
  2825     04CE  343D               	retlw	61
  2826     04CF  3423               	retlw	35
  2827     04D0  34F4               	retlw	244
  2828     04D1  3433               	retlw	51
  2829     04D2  343D               	retlw	61
  2830     04D3  34A3               	retlw	163
  2831     04D4  343F               	retlw	63
  2832     04D5  3434               	retlw	52
  2833     04D6  343D               	retlw	61
  2834     04D7  3416               	retlw	22
  2835     04D8  348A               	retlw	138
  2836     04D9  3434               	retlw	52
  2837     04DA  343D               	retlw	61
  2838     04DB  3489               	retlw	137
  2839     04DC  34D4               	retlw	212
  2840     04DD  3434               	retlw	52
  2841     04DE  343D               	retlw	61
  2842     04DF  34FB               	retlw	251
  2843     04E0  341E               	retlw	30
  2844     04E1  3435               	retlw	53
  2845     04E2  343D               	retlw	61
  2846     04E3  346E               	retlw	110
  2847     04E4  3469               	retlw	105
  2848     04E5  3435               	retlw	53
  2849     04E6  343D               	retlw	61
  2850     04E7  34E1               	retlw	225
  2851     04E8  34B3               	retlw	179
  2852     04E9  3435               	retlw	53
  2853     04EA  343D               	retlw	61
  2854     04EB  3454               	retlw	84
  2855     04EC  34FE               	retlw	254
  2856     04ED  3435               	retlw	53
  2857     04EE  343D               	retlw	61
  2858     04EF  34C7               	retlw	199
  2859     04F0  3448               	retlw	72
  2860     04F1  3436               	retlw	54
  2861     04F2  343D               	retlw	61
  2862     04F3  342E               	retlw	46
  2863     04F4  3492               	retlw	146
  2864     04F5  3436               	retlw	54
  2865     04F6  343D               	retlw	61
  2866     04F7  34A0               	retlw	160
  2867     04F8  34DC               	retlw	220
  2868     04F9  3436               	retlw	54
  2869     04FA  343D               	retlw	61
  2870     04FB  3407               	retlw	7
  2871     04FC  3426               	retlw	38
  2872     04FD  3437               	retlw	55
  2873     04FE  343D               	retlw	61
  2874     04FF  346D               	retlw	109
  2875     0500  346F               	retlw	111
  2876     0501  3437               	retlw	55
  2877     0502  343D               	retlw	61
  2878     0503  34D4               	retlw	212
  2879     0504  34B8               	retlw	184
  2880     0505  3437               	retlw	55
  2881     0506  343D               	retlw	61
  2882     0507  343A               	retlw	58
  2883     0508  3402               	retlw	2
  2884     0509  3438               	retlw	56
  2885     050A  343D               	retlw	61
  2886     050B  34A1               	retlw	161
  2887     050C  344B               	retlw	75
  2888     050D  3438               	retlw	56
  2889     050E  343D               	retlw	61
  2890     050F  3407               	retlw	7
  2891     0510  3495               	retlw	149
  2892     0511  3438               	retlw	56
  2893     0512  343D               	retlw	61
  2894     0513                     __end_of_lookupTable:
  2895                           
  2896                           	psect	nvBANK0
  2897     006E                     __pnvBANK0:
  2898     006E                     _TMR1_GateInterruptHandler:
  2899     006E                     	ds	2
  2900                           
  2901                           	psect	nvBANK2
  2902     012F                     __pnvBANK2:
  2903     012F                     _EUSART_ErrorHandler:
  2904     012F                     	ds	2
  2905     0131                     _EUSART_OverrunErrorHandler:
  2906     0131                     	ds	2
  2907     0133                     _EUSART_FramingErrorHandler:
  2908     0133                     	ds	2
  2909     0018                     _T1CONbits	set	24
  2910     0018                     _T1CON	set	24
  2911     0016                     _TMR1L	set	22
  2912     0017                     _TMR1H	set	23
  2913     0019                     _T1GCON	set	25
  2914     0015                     _TMR0	set	21
  2915     0013                     _PIR3bits	set	19
  2916     001C                     _T2CON	set	28
  2917     0011                     _PIR1bits	set	17
  2918     001A                     _TMR2	set	26
  2919     001B                     _PR2	set	27
  2920     000B                     _INTCONbits	set	11
  2921     009D                     _ADCON0bits	set	157
  2922     009D                     _ADCON0	set	157
  2923     009C                     _ADRESH	set	156
  2924     009B                     _ADRESL	set	155
  2925     009E                     _ADCON1	set	158
  2926     0095                     _OPTION_REG	set	149
  2927     0091                     _PIE1bits	set	145
  2928     0095                     _OPTION_REGbits	set	149
  2929     008D                     _TRISB	set	141
  2930     008C                     _TRISA	set	140
  2931     0097                     _WDTCON	set	151
  2932     0098                     _OSCTUNE	set	152
  2933     0099                     _OSCCON	set	153
  2934     010C                     _LATAbits	set	268
  2935     0115                     _CMOUTbits	set	277
  2936     0112                     _CM1CON1	set	274
  2937     0111                     _CM1CON0	set	273
  2938     0119                     _DACCON1	set	281
  2939     0118                     _DACCON0	set	280
  2940     0117                     _FVRCON	set	279
  2941     011E                     _APFCON1	set	286
  2942     011D                     _APFCON0	set	285
  2943     010D                     _LATB	set	269
  2944     010C                     _LATA	set	268
  2945     0116                     _BORCON	set	278
  2946     019A                     _TXREG	set	410
  2947     0199                     _RCREG	set	409
  2948     019D                     _RCSTAbits	set	413
  2949     019C                     _SPBRGH	set	412
  2950     019B                     _SPBRGL	set	411
  2951     019E                     _TXSTA	set	414
  2952     019D                     _RCSTA	set	413
  2953     019F                     _BAUDCON	set	415
  2954     018C                     _ANSELA	set	396
  2955     018D                     _ANSELB	set	397
  2956     020C                     _WPUA	set	524
  2957     020D                     _WPUB	set	525
  2958     029E                     _CCPTMRS0bits	set	670
  2959     0291                     _CCPR1L	set	657
  2960     0292                     _CCPR1H	set	658
  2961     0296                     _PSTR1CON	set	662
  2962     0294                     _PWM1CON	set	660
  2963     0295                     _ECCP1AS	set	661
  2964     0293                     _CCP1CON	set	659
  2965     041E                     _T6CON	set	1054
  2966     041C                     _TMR6	set	1052
  2967     041D                     _PR6	set	1053
  2968     0417                     _T4CONbits	set	1047
  2969     0417                     _T4CON	set	1047
  2970     0415                     _TMR4	set	1045
  2971     0416                     _PR4	set	1046
  2972                           
  2973                           	psect	cinit
  2974     001B                     start_initialization:	
  2975                           ; #config settings
  2976                           
  2977     001B                     __initialization:
  2978                           
  2979                           ; Initialize objects allocated to BANK0
  2980     001B  305F               	movlw	low __pidataBANK0
  2981     001C  0084               	movwf	4
  2982     001D  308B               	movlw	(high __pidataBANK0)| (0+128)
  2983     001E  0085               	movwf	5
  2984     001F  306A               	movlw	low __pdataBANK0
  2985     0020  0086               	movwf	6
  2986     0021  3000               	movlw	high __pdataBANK0
  2987     0022  0087               	movwf	7
  2988     0023  3004               	movlw	4
  2989     0024  318B  238C  3180   	fcall	init_ram
  2990                           
  2991                           ; Initialize objects allocated to BANK2
  2992     0027  302C               	movlw	low __pidataBANK2
  2993     0028  0084               	movwf	4
  2994     0029  308C               	movlw	(high __pidataBANK2)| (0+128)
  2995     002A  0085               	movwf	5
  2996     002B  3020               	movlw	low __pdataBANK2
  2997     002C  0086               	movwf	6
  2998     002D  3001               	movlw	high __pdataBANK2
  2999     002E  0087               	movwf	7
  3000     002F  300F               	movlw	15
  3001     0030  318B  238C  3180   	fcall	init_ram
  3002                           
  3003                           ; Clear objects allocated to BANK0
  3004     0033  3053               	movlw	low __pbssBANK0
  3005     0034  0084               	movwf	4
  3006     0035  3000               	movlw	high __pbssBANK0
  3007     0036  0085               	movwf	5
  3008     0037  3017               	movlw	23
  3009     0038  318B  2386  3180   	fcall	clear_ram0
  3010                           
  3011                           ; Clear objects allocated to BANK1
  3012     003B  30A0               	movlw	low __pbssBANK1
  3013     003C  0084               	movwf	4
  3014     003D  3000               	movlw	high __pbssBANK1
  3015     003E  0085               	movwf	5
  3016     003F  302D               	movlw	45
  3017     0040  318B  2386         	fcall	clear_ram0
  3018     0042                     end_of_initialization:	
  3019                           ;End of C runtime variable initialization code
  3020                           
  3021     0042                     __end_of__initialization:
  3022     0042  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3023     0043  0020               	movlb	0
  3024     0044  3186  2E99         	ljmp	_main	;jump to C main() function
  3025                           
  3026                           	psect	bssBANK0
  3027     0053                     __pbssBANK0:
  3028     0053                     _bufferRx:
  3029     0053                     	ds	8
  3030     005B                     _flux:
  3031     005B                     	ds	3
  3032     005E                     _ballset:
  3033     005E                     	ds	3
  3034     0061                     _tempo_voo:
  3035     0061                     	ds	2
  3036     0063                     _sp_height:
  3037     0063                     	ds	2
  3038     0065                     _ADC_InterruptHandler:
  3039     0065                     	ds	2
  3040     0067                     _func_mode:
  3041     0067                     	ds	1
  3042     0068                     _sentido:
  3043     0068                     	ds	1
  3044     0069                     _timer0ReloadVal:
  3045     0069                     	ds	1
  3046                           
  3047                           	psect	dataBANK0
  3048     006A                     __pdataBANK0:
  3049     006A                     _kpf:
  3050     006A                     	ds	3
  3051     006D                     _first_read:
  3052     006D                     	ds	1
  3053                           
  3054                           	psect	bssBANK1
  3055     00A0                     __pbssBANK1:
  3056     00A0                     _avg_tempo_voo:
  3057     00A0                     	ds	4
  3058     00A4                     _outpre:
  3059     00A4                     	ds	3
  3060     00A7                     _outputsum:
  3061     00A7                     	ds	3
  3062     00AA                     _balldist:
  3063     00AA                     	ds	3
  3064     00AD                     _errorp:
  3065     00AD                     	ds	3
  3066     00B0                     _error:
  3067     00B0                     	ds	3
  3068     00B3                     _height:
  3069     00B3                     	ds	2
  3070     00B5                     _adc_temp:
  3071     00B5                     	ds	2
  3072     00B7                     _sp_position:
  3073     00B7                     	ds	2
  3074     00B9                     _position:
  3075     00B9                     	ds	2
  3076     00BB                     _dc:
  3077     00BB                     	ds	2
  3078     00BD                     _vRx:
  3079     00BD                     	ds	2
  3080     00BF                     _vTx:
  3081     00BF                     	ds	2
  3082     00C1                     _output:
  3083     00C1                     	ds	2
  3084     00C3                     _timer1ReloadVal:
  3085     00C3                     	ds	2
  3086     00C5                     _passo_ctrl:
  3087     00C5                     	ds	1
  3088     00C6                     _fim_curso:
  3089     00C6                     	ds	1
  3090     00C7                     _passo:
  3091     00C7                     	ds	1
  3092     00C8                     _nao_salva:
  3093     00C8                     	ds	1
  3094     00C9                     _count_Tx:
  3095     00C9                     	ds	1
  3096     00CA                     _countRx:
  3097     00CA                     	ds	1
  3098     00CB                     _controlchoice:
  3099     00CB                     	ds	1
  3100     00CC                     _eusartRxLastError:
  3101     00CC                     	ds	1
  3102                           
  3103                           	psect	dataBANK2
  3104     0120                     __pdataBANK2:
  3105     0120                     _timecontrol:
  3106     0120                     	ds	3
  3107     0123                     _kdp:
  3108     0123                     	ds	3
  3109     0126                     _kip:
  3110     0126                     	ds	3
  3111     0129                     _kpp:
  3112     0129                     	ds	3
  3113     012C                     _kdf:
  3114     012C                     	ds	3
  3115                           
  3116                           	psect	inittext
  3117     0B8C                     init_ram:
  3118     0B8C  00FE               	movwf	126
  3119     0B8D                     initloop:
  3120     0B8D  0012               	moviw fsr0++
  3121     0B8E  001E               	movwi fsr1++
  3122     0B8F  0BFE               	decfsz	126,f
  3123     0B90  2B8D               	goto	initloop
  3124     0B91  3400               	retlw	0
  3125                           
  3126                           	psect	clrtext
  3127     0B86                     clear_ram0:	
  3128                           ;	Called with FSR0 containing the base address, and
  3129                           ;	WREG with the size to clear
  3130                           
  3131     0B86  0064               	clrwdt	;clear the watchdog before getting into this loop
  3132     0B87                     clrloop0:
  3133     0B87  0180               	clrf	0	;clear RAM location pointed to by FSR
  3134     0B88  3101               	addfsr 0,1
  3135     0B89  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3136     0B8A  2B87               	goto	clrloop0	;have we reached the end yet?
  3137     0B8B  3400               	retlw	0	;all done for this memory range, return
  3138                           
  3139                           	psect	cstackBANK1
  3140     00CD                     __pcstackBANK1:
  3141     00CD                     ??_PIN_MANAGER_Initialize:
  3142     00CD                     ??_OSCILLATOR_Initialize:	
  3143                           ; 1 bytes @ 0x0
  3144                           
  3145     00CD                     ??_WDT_Initialize:	
  3146                           ; 1 bytes @ 0x0
  3147                           
  3148     00CD                     ??_DAC_Initialize:	
  3149                           ; 1 bytes @ 0x0
  3150                           
  3151     00CD                     ??_FVR_Initialize:	
  3152                           ; 1 bytes @ 0x0
  3153                           
  3154     00CD                     ??_TMR4_Initialize:	
  3155                           ; 1 bytes @ 0x0
  3156                           
  3157     00CD                     ??_TMR2_Initialize:	
  3158                           ; 1 bytes @ 0x0
  3159                           
  3160     00CD                     ??_TMR0_Initialize:	
  3161                           ; 1 bytes @ 0x0
  3162                           
  3163     00CD                     ??_TMR6_Initialize:	
  3164                           ; 1 bytes @ 0x0
  3165                           
  3166     00CD                     ??_CMP1_Initialize:	
  3167                           ; 1 bytes @ 0x0
  3168                           
  3169     00CD                     ??_ADC_Initialize:	
  3170                           ; 1 bytes @ 0x0
  3171                           
  3172     00CD                     ??_EPWM1_Initialize:	
  3173                           ; 1 bytes @ 0x0
  3174                           
  3175     00CD                     ?_EUSART_SetFramingErrorHandler:	
  3176                           ; 1 bytes @ 0x0
  3177                           
  3178     00CD                     ?_EUSART_SetOverrunErrorHandler:	
  3179                           ; 1 bytes @ 0x0
  3180                           
  3181     00CD                     ?_EUSART_SetErrorHandler:	
  3182                           ; 1 bytes @ 0x0
  3183                           
  3184     00CD                     ?_TMR1_SetGateInterruptHandler:	
  3185                           ; 1 bytes @ 0x0
  3186                           
  3187     00CD                     ?_definePassoMotor:	
  3188                           ; 1 bytes @ 0x0
  3189                           
  3190     00CD                     ??_TMR4_StartTimer:	
  3191                           ; 1 bytes @ 0x0
  3192                           
  3193     00CD                     ??_TMR4_StopTimer:	
  3194                           ; 1 bytes @ 0x0
  3195                           
  3196     00CD                     ?_EPWM1_LoadDutyValue:	
  3197                           ; 1 bytes @ 0x0
  3198                           
  3199     00CD                     ??_EUSART_is_rx_ready:	
  3200                           ; 1 bytes @ 0x0
  3201                           
  3202     00CD                     ??_EUSART_Read:	
  3203                           ; 1 bytes @ 0x0
  3204                           
  3205     00CD                     ??_EUSART_Write:	
  3206                           ; 1 bytes @ 0x0
  3207                           
  3208     00CD                     ??_TMR0_ReadTimer:	
  3209                           ; 1 bytes @ 0x0
  3210                           
  3211     00CD                     ??_CMP1_GetOutputStatus:	
  3212                           ; 1 bytes @ 0x0
  3213                           
  3214     00CD                     ??_TMR6_WriteTimer:	
  3215                           ; 1 bytes @ 0x0
  3216                           
  3217     00CD                     ??_TMR6_LoadPeriodRegister:	
  3218                           ; 1 bytes @ 0x0
  3219                           
  3220     00CD                     ?_ADC_GetConversion:	
  3221                           ; 1 bytes @ 0x0
  3222                           
  3223     00CD                     ?___lwdiv:	
  3224                           ; 2 bytes @ 0x0
  3225                           
  3226     00CD                     ?___tmul:	
  3227                           ; 2 bytes @ 0x0
  3228                           
  3229     00CD                     ?___fltol:	
  3230                           ; 3 bytes @ 0x0
  3231                           
  3232     00CD                     EUSART_Write@txData:	
  3233                           ; 4 bytes @ 0x0
  3234                           
  3235     00CD                     TMR0_ReadTimer@readVal:	
  3236                           ; 1 bytes @ 0x0
  3237                           
  3238     00CD                     TMR6_WriteTimer@timerVal:	
  3239                           ; 1 bytes @ 0x0
  3240                           
  3241     00CD                     TMR6_LoadPeriodRegister@periodVal:	
  3242                           ; 1 bytes @ 0x0
  3243                           
  3244     00CD                     definePassoMotor@sentido:	
  3245                           ; 1 bytes @ 0x0
  3246                           
  3247     00CD                     EPWM1_LoadDutyValue@dutyValue:	
  3248                           ; 1 bytes @ 0x0
  3249                           
  3250     00CD                     EUSART_SetFramingErrorHandler@interruptHandler:	
  3251                           ; 2 bytes @ 0x0
  3252                           
  3253     00CD                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  3254                           ; 2 bytes @ 0x0
  3255                           
  3256     00CD                     EUSART_SetErrorHandler@interruptHandler:	
  3257                           ; 2 bytes @ 0x0
  3258                           
  3259     00CD                     TMR1_SetGateInterruptHandler@InterruptHandler:	
  3260                           ; 2 bytes @ 0x0
  3261                           
  3262     00CD                     ___lwdiv@divisor:	
  3263                           ; 2 bytes @ 0x0
  3264                           
  3265     00CD                     ___tmul@multiplier:	
  3266                           ; 2 bytes @ 0x0
  3267                           
  3268     00CD                     ___fltol@f1:	
  3269                           ; 3 bytes @ 0x0
  3270                           
  3271                           
  3272                           ; 4 bytes @ 0x0
  3273     00CD                     	ds	1
  3274     00CE                     ??_definePassoMotor:
  3275                           
  3276                           ; 1 bytes @ 0x1
  3277     00CE                     	ds	1
  3278     00CF                     ??_TMR1_Initialize:
  3279     00CF                     ??_EUSART_Initialize:	
  3280                           ; 1 bytes @ 0x2
  3281                           
  3282     00CF                     ??_EUSART_SetFramingErrorHandler:	
  3283                           ; 1 bytes @ 0x2
  3284                           
  3285     00CF                     ??_EUSART_SetOverrunErrorHandler:	
  3286                           ; 1 bytes @ 0x2
  3287                           
  3288     00CF                     ??_EUSART_SetErrorHandler:	
  3289                           ; 1 bytes @ 0x2
  3290                           
  3291     00CF                     ??_TMR1_SetGateInterruptHandler:	
  3292                           ; 1 bytes @ 0x2
  3293                           
  3294     00CF                     ??_SYSTEM_Initialize:	
  3295                           ; 1 bytes @ 0x2
  3296                           
  3297     00CF                     ??_EPWM1_LoadDutyValue:	
  3298                           ; 1 bytes @ 0x2
  3299                           
  3300     00CF                     ??_ADC_GetConversion:	
  3301                           ; 1 bytes @ 0x2
  3302                           
  3303     00CF                     definePassoMotor@passom:	
  3304                           ; 1 bytes @ 0x2
  3305                           
  3306     00CF                     ___lwdiv@dividend:	
  3307                           ; 1 bytes @ 0x2
  3308                           
  3309                           
  3310                           ; 2 bytes @ 0x2
  3311     00CF                     	ds	1
  3312     00D0                     ??_daUmPasso:
  3313     00D0                     ADC_GetConversion@channel:	
  3314                           ; 1 bytes @ 0x3
  3315                           
  3316     00D0                     daUmPasso@sentido:	
  3317                           ; 1 bytes @ 0x3
  3318                           
  3319     00D0                     ___tmul@multiplicand:	
  3320                           ; 1 bytes @ 0x3
  3321                           
  3322                           
  3323                           ; 3 bytes @ 0x3
  3324     00D0                     	ds	1
  3325     00D1                     ??_setaPorta:
  3326     00D1                     ??_fluxpos:	
  3327                           ; 1 bytes @ 0x4
  3328                           
  3329     00D1                     ??_analisa_Rx:	
  3330                           ; 1 bytes @ 0x4
  3331                           
  3332     00D1                     ??___fltol:	
  3333                           ; 1 bytes @ 0x4
  3334                           
  3335     00D1                     ??___lwdiv:	
  3336                           ; 1 bytes @ 0x4
  3337                           
  3338                           
  3339                           ; 1 bytes @ 0x4
  3340     00D1                     	ds	1
  3341     00D2                     ___lwdiv@quotient:
  3342                           
  3343                           ; 2 bytes @ 0x5
  3344     00D2                     	ds	1
  3345     00D3                     ??___tmul:
  3346     00D3                     ___tmul@product:	
  3347                           ; 1 bytes @ 0x6
  3348                           
  3349                           
  3350                           ; 3 bytes @ 0x6
  3351     00D3                     	ds	1
  3352     00D4                     ___lwdiv@counter:
  3353                           
  3354                           ; 1 bytes @ 0x7
  3355     00D4                     	ds	1
  3356     00D5                     ___fltol@sign1:
  3357                           
  3358                           ; 1 bytes @ 0x8
  3359     00D5                     	ds	1
  3360     00D6                     ??_fluxcontrol:
  3361     00D6                     ?___atdiv:	
  3362                           ; 1 bytes @ 0x9
  3363                           
  3364     00D6                     ___fltol@exp1:	
  3365                           ; 3 bytes @ 0x9
  3366                           
  3367     00D6                     ___atdiv@divisor:	
  3368                           ; 1 bytes @ 0x9
  3369                           
  3370                           
  3371                           ; 3 bytes @ 0x9
  3372     00D6                     	ds	1
  3373     00D7                     ??_envia_Tx:
  3374                           
  3375                           ; 1 bytes @ 0xA
  3376     00D7                     	ds	2
  3377     00D9                     ___atdiv@dividend:
  3378                           
  3379                           ; 3 bytes @ 0xC
  3380     00D9                     	ds	3
  3381     00DC                     ??___atdiv:
  3382                           
  3383                           ; 1 bytes @ 0xF
  3384     00DC                     	ds	1
  3385     00DD                     ___atdiv@counter:
  3386                           
  3387                           ; 1 bytes @ 0x10
  3388     00DD                     	ds	1
  3389     00DE                     ___atdiv@sign:
  3390                           
  3391                           ; 1 bytes @ 0x11
  3392     00DE                     	ds	1
  3393     00DF                     ___atdiv@quotient:
  3394                           
  3395                           ; 3 bytes @ 0x12
  3396     00DF                     	ds	3
  3397     00E2                     ??_pwmcontrol:
  3398                           
  3399                           ; 1 bytes @ 0x15
  3400     00E2                     	ds	12
  3401     00EE                     ??_controlchoose:
  3402     00EE                     ??_main:	
  3403                           ; 1 bytes @ 0x21
  3404                           
  3405                           
  3406                           ; 1 bytes @ 0x21
  3407     00EE                     	ds	1
  3408                           
  3409                           	psect	cstackCOMMON
  3410     0070                     __pcstackCOMMON:
  3411     0070                     ?_PIN_MANAGER_Initialize:
  3412     0070                     ?_OSCILLATOR_Initialize:	
  3413                           ; 1 bytes @ 0x0
  3414                           
  3415     0070                     ?_WDT_Initialize:	
  3416                           ; 1 bytes @ 0x0
  3417                           
  3418     0070                     ?_DAC_Initialize:	
  3419                           ; 1 bytes @ 0x0
  3420                           
  3421     0070                     ?_FVR_Initialize:	
  3422                           ; 1 bytes @ 0x0
  3423                           
  3424     0070                     ?_TMR4_Initialize:	
  3425                           ; 1 bytes @ 0x0
  3426                           
  3427     0070                     ?_TMR2_Initialize:	
  3428                           ; 1 bytes @ 0x0
  3429                           
  3430     0070                     ?_TMR0_Initialize:	
  3431                           ; 1 bytes @ 0x0
  3432                           
  3433     0070                     ?_TMR6_Initialize:	
  3434                           ; 1 bytes @ 0x0
  3435                           
  3436     0070                     ?_CMP1_Initialize:	
  3437                           ; 1 bytes @ 0x0
  3438                           
  3439     0070                     ?_ADC_Initialize:	
  3440                           ; 1 bytes @ 0x0
  3441                           
  3442     0070                     ?_EPWM1_Initialize:	
  3443                           ; 1 bytes @ 0x0
  3444                           
  3445     0070                     ?_TMR1_Initialize:	
  3446                           ; 1 bytes @ 0x0
  3447                           
  3448     0070                     ?_EUSART_Initialize:	
  3449                           ; 1 bytes @ 0x0
  3450                           
  3451     0070                     ?_TMR1_GATE_ISR:	
  3452                           ; 1 bytes @ 0x0
  3453                           
  3454     0070                     ?_TMR1_DefaultGateInterruptHandler:	
  3455                           ; 1 bytes @ 0x0
  3456                           
  3457     0070                     ??_TMR1_DefaultGateInterruptHandler:	
  3458                           ; 1 bytes @ 0x0
  3459                           
  3460     0070                     ?_daUmPasso:	
  3461                           ; 1 bytes @ 0x0
  3462                           
  3463     0070                     ?_pwmcontrol:	
  3464                           ; 1 bytes @ 0x0
  3465                           
  3466     0070                     ?_fluxcontrol:	
  3467                           ; 1 bytes @ 0x0
  3468                           
  3469     0070                     ?_SYSTEM_Initialize:	
  3470                           ; 1 bytes @ 0x0
  3471                           
  3472     0070                     ?_PIN_MANAGER_IOC:	
  3473                           ; 1 bytes @ 0x0
  3474                           
  3475     0070                     ??_PIN_MANAGER_IOC:	
  3476                           ; 1 bytes @ 0x0
  3477                           
  3478     0070                     ?_TMR4_StartTimer:	
  3479                           ; 1 bytes @ 0x0
  3480                           
  3481     0070                     ?_TMR4_StopTimer:	
  3482                           ; 1 bytes @ 0x0
  3483                           
  3484     0070                     ?_INTERRUPT_InterruptManager:	
  3485                           ; 1 bytes @ 0x0
  3486                           
  3487     0070                     ?_EUSART_is_rx_ready:	
  3488                           ; 1 bytes @ 0x0
  3489                           
  3490     0070                     ?_EUSART_Read:	
  3491                           ; 1 bytes @ 0x0
  3492                           
  3493     0070                     ?_EUSART_Write:	
  3494                           ; 1 bytes @ 0x0
  3495                           
  3496     0070                     ?_TMR0_ReadTimer:	
  3497                           ; 1 bytes @ 0x0
  3498                           
  3499     0070                     ?_CMP1_GetOutputStatus:	
  3500                           ; 1 bytes @ 0x0
  3501                           
  3502     0070                     ?_TMR6_WriteTimer:	
  3503                           ; 1 bytes @ 0x0
  3504                           
  3505     0070                     ?_TMR6_LoadPeriodRegister:	
  3506                           ; 1 bytes @ 0x0
  3507                           
  3508     0070                     ?_TMR1_WriteTimer:	
  3509                           ; 1 bytes @ 0x0
  3510                           
  3511     0070                     ?_TMR1_Reload:	
  3512                           ; 1 bytes @ 0x0
  3513                           
  3514     0070                     ?_setaPorta:	
  3515                           ; 1 bytes @ 0x0
  3516                           
  3517     0070                     ?_fluxpos:	
  3518                           ; 1 bytes @ 0x0
  3519                           
  3520     0070                     ?_controlchoose:	
  3521                           ; 1 bytes @ 0x0
  3522                           
  3523     0070                     ?_analisa_Rx:	
  3524                           ; 1 bytes @ 0x0
  3525                           
  3526     0070                     ?_envia_Tx:	
  3527                           ; 1 bytes @ 0x0
  3528                           
  3529     0070                     ?_mede_height:	
  3530                           ; 1 bytes @ 0x0
  3531                           
  3532     0070                     ?_main:	
  3533                           ; 1 bytes @ 0x0
  3534                           
  3535     0070                     ?__Umul8_16:	
  3536                           ; 1 bytes @ 0x0
  3537                           
  3538     0070                     ?_TMR1_ReadTimer:	
  3539                           ; 2 bytes @ 0x0
  3540                           
  3541     0070                     ?i1___lwdiv:	
  3542                           ; 2 bytes @ 0x0
  3543                           
  3544     0070                     __Umul8_16@multiplicand:	
  3545                           ; 2 bytes @ 0x0
  3546                           
  3547     0070                     TMR1_WriteTimer@timerVal:	
  3548                           ; 1 bytes @ 0x0
  3549                           
  3550     0070                     i1___lwdiv@divisor:	
  3551                           ; 2 bytes @ 0x0
  3552                           
  3553                           
  3554                           ; 2 bytes @ 0x0
  3555     0070                     	ds	2
  3556     0072                     ??__Umul8_16:
  3557     0072                     ??_TMR1_ReadTimer:	
  3558                           ; 1 bytes @ 0x2
  3559                           
  3560     0072                     ??_TMR1_WriteTimer:	
  3561                           ; 1 bytes @ 0x2
  3562                           
  3563     0072                     ??_TMR1_Reload:	
  3564                           ; 1 bytes @ 0x2
  3565                           
  3566     0072                     i1___lwdiv@dividend:	
  3567                           ; 1 bytes @ 0x2
  3568                           
  3569                           
  3570                           ; 2 bytes @ 0x2
  3571     0072                     	ds	2
  3572     0074                     ??i1___lwdiv:
  3573     0074                     __Umul8_16@product:	
  3574                           ; 1 bytes @ 0x4
  3575                           
  3576                           
  3577                           ; 2 bytes @ 0x4
  3578     0074                     	ds	1
  3579     0075                     i1___lwdiv@quotient:
  3580                           
  3581                           ; 2 bytes @ 0x5
  3582     0075                     	ds	1
  3583     0076                     __Umul8_16@word_mpld:
  3584                           
  3585                           ; 2 bytes @ 0x6
  3586     0076                     	ds	1
  3587     0077                     i1___lwdiv@counter:
  3588     0077                     TMR1_ReadTimer@readVal:	
  3589                           ; 1 bytes @ 0x7
  3590                           
  3591                           
  3592                           ; 2 bytes @ 0x7
  3593     0077                     	ds	1
  3594     0078                     __Umul8_16@multiplier:
  3595                           
  3596                           ; 1 bytes @ 0x8
  3597     0078                     	ds	1
  3598     0079                     ??___flmul:
  3599     0079                     TMR1_ReadTimer@readValHigh:	
  3600                           ; 1 bytes @ 0x9
  3601                           
  3602                           
  3603                           ; 1 bytes @ 0x9
  3604     0079                     	ds	1
  3605     007A                     TMR1_ReadTimer@readValLow:
  3606                           
  3607                           ; 1 bytes @ 0xA
  3608     007A                     	ds	4
  3609     007E                     ??_TMR1_GATE_ISR:
  3610     007E                     ??_INTERRUPT_InterruptManager:	
  3611                           ; 1 bytes @ 0xE
  3612                           
  3613                           
  3614                           	psect	cstackBANK0
  3615     0020                     __pcstackBANK0:	
  3616                           ; 1 bytes @ 0xE
  3617                           
  3618     0020                     ?___flmul:
  3619     0020                     ___flmul@b:	
  3620                           ; 4 bytes @ 0x0
  3621                           
  3622                           
  3623                           ; 4 bytes @ 0x0
  3624     0020                     	ds	4
  3625     0024                     ___flmul@a:
  3626                           
  3627                           ; 4 bytes @ 0x4
  3628     0024                     	ds	4
  3629     0028                     ___flmul@sign:
  3630                           
  3631                           ; 1 bytes @ 0x8
  3632     0028                     	ds	1
  3633     0029                     ___flmul@aexp:
  3634                           
  3635                           ; 1 bytes @ 0x9
  3636     0029                     	ds	1
  3637     002A                     ___flmul@grs:
  3638                           
  3639                           ; 4 bytes @ 0xA
  3640     002A                     	ds	4
  3641     002E                     ___flmul@bexp:
  3642                           
  3643                           ; 1 bytes @ 0xE
  3644     002E                     	ds	1
  3645     002F                     ___flmul@prod:
  3646                           
  3647                           ; 4 bytes @ 0xF
  3648     002F                     	ds	4
  3649     0033                     ___flmul@temp:
  3650                           
  3651                           ; 2 bytes @ 0x13
  3652     0033                     	ds	2
  3653     0035                     ?i1___fltol:
  3654     0035                     i1___fltol@f1:	
  3655                           ; 4 bytes @ 0x15
  3656                           
  3657                           
  3658                           ; 4 bytes @ 0x15
  3659     0035                     	ds	4
  3660     0039                     ??i1___fltol:
  3661                           
  3662                           ; 1 bytes @ 0x19
  3663     0039                     	ds	4
  3664     003D                     i1___fltol@sign1:
  3665                           
  3666                           ; 1 bytes @ 0x1D
  3667     003D                     	ds	1
  3668     003E                     i1___fltol@exp1:
  3669                           
  3670                           ; 1 bytes @ 0x1E
  3671     003E                     	ds	1
  3672     003F                     ?___xxtofl:
  3673     003F                     ___xxtofl@val:	
  3674                           ; 4 bytes @ 0x1F
  3675                           
  3676                           
  3677                           ; 4 bytes @ 0x1F
  3678     003F                     	ds	4
  3679     0043                     ??___xxtofl:
  3680                           
  3681                           ; 1 bytes @ 0x23
  3682     0043                     	ds	4
  3683     0047                     ___xxtofl@sign:
  3684                           
  3685                           ; 1 bytes @ 0x27
  3686     0047                     	ds	1
  3687     0048                     ___xxtofl@exp:
  3688                           
  3689                           ; 1 bytes @ 0x28
  3690     0048                     	ds	1
  3691     0049                     ___xxtofl@arg:
  3692                           
  3693                           ; 4 bytes @ 0x29
  3694     0049                     	ds	4
  3695     004D                     ??_mede_height:
  3696                           
  3697                           ; 1 bytes @ 0x2D
  3698     004D                     	ds	6
  3699                           
  3700                           	psect	maintext
  3701     0699                     __pmaintext:	
  3702 ;;
  3703 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  3704 ;;
  3705 ;; *************** function _main *****************
  3706 ;; Defined at:
  3707 ;;		line 315 in file "main.c"
  3708 ;; Parameters:    Size  Location     Type
  3709 ;;		None
  3710 ;; Auto vars:     Size  Location     Type
  3711 ;;		None
  3712 ;; Return value:  Size  Location     Type
  3713 ;;                  1    wreg      void 
  3714 ;; Registers used:
  3715 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3716 ;; Tracked objects:
  3717 ;;		On entry : B1F/0
  3718 ;;		On exit  : 1F/2
  3719 ;;		Unchanged: 0/0
  3720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3721 ;;      Params:         0       0       0       0       0       0
  3722 ;;      Locals:         0       0       0       0       0       0
  3723 ;;      Temps:          0       0       1       0       0       0
  3724 ;;      Totals:         0       0       1       0       0       0
  3725 ;;Total ram usage:        1 bytes
  3726 ;; Hardware stack levels required when called: 8
  3727 ;; This function calls:
  3728 ;;		_ADC_GetConversion
  3729 ;;		_EUSART_Read
  3730 ;;		_EUSART_is_rx_ready
  3731 ;;		_SYSTEM_Initialize
  3732 ;;		_TMR0_ReadTimer
  3733 ;;		_TMR1_SetGateInterruptHandler
  3734 ;;		_TMR4_StopTimer
  3735 ;;		_TMR6_LoadPeriodRegister
  3736 ;;		_TMR6_WriteTimer
  3737 ;;		_analisa_Rx
  3738 ;;		_controlchoose
  3739 ;;		_envia_Tx
  3740 ;;		_fluxpos
  3741 ;;		_setaPorta
  3742 ;; This function is called by:
  3743 ;;		Startup code after reset
  3744 ;; This function uses a non-reentrant model
  3745 ;;
  3746                           
  3747     0699                     _main:	
  3748                           ;psect for function _main
  3749                           
  3750                           
  3751                           ;main.c: 318:     SYSTEM_Initialize();
  3752                           
  3753                           ;incstack = 0
  3754                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3755     0699  318D  256D  3186   	fcall	_SYSTEM_Initialize
  3756                           
  3757                           ;main.c: 319:     TMR1_SetGateInterruptHandler(mede_height);
  3758     069C  30DF               	movlw	low _mede_height
  3759     069D  00CD               	movwf	TMR1_SetGateInterruptHandler@InterruptHandler^(0+128)
  3760     069E  3005               	movlw	high _mede_height
  3761     069F  00CE               	movwf	(TMR1_SetGateInterruptHandler@InterruptHandler^(0+128)+1)
  3762     06A0  318B  23C1  3186   	fcall	_TMR1_SetGateInterruptHandler
  3763                           
  3764                           ;main.c: 323:     (INTCONbits.GIE = 1);
  3765     06A3  178B               	bsf	11,7	;volatile
  3766                           
  3767                           ;main.c: 326:     (INTCONbits.PEIE = 1);
  3768     06A4  170B               	bsf	11,6	;volatile
  3769                           
  3770                           ;main.c: 328:     setaPorta();
  3771     06A5  318C  24AF  3186   	fcall	_setaPorta
  3772                           
  3773                           ;main.c: 329:     LATAbits.LATA7=CMOUTbits.MC1OUT;
  3774     06A8  0022               	movlb	2	; select bank2
  3775     06A9  1815               	btfsc	21,0	;volatile
  3776     06AA  2F36               	goto	L1
  3777     06AB                     u2940:
  3778     06AB  0022               	movlb	2	; select bank2
  3779     06AC  138C               	bcf	12,7	;volatile
  3780     06AD                     l3116:
  3781                           
  3782                           ;main.c: 332:     {;main.c: 333:         if(PIR3bits.TMR4IF==1){
  3783     06AD  0020               	movlb	0	; select bank0
  3784     06AE  1C93               	btfss	19,1	;volatile
  3785     06AF  2EB7               	goto	l3124
  3786                           
  3787                           ;main.c: 334:             PIR3bits.TMR4IF=0;
  3788     06B0  1093               	bcf	19,1	;volatile
  3789                           
  3790                           ;main.c: 335:             TMR4_StopTimer();
  3791     06B1  318B  2351  3186   	fcall	_TMR4_StopTimer
  3792                           
  3793                           ;main.c: 336:             controlchoose();
  3794     06B4  318C  243B  3186   	fcall	_controlchoose
  3795     06B7                     l3124:
  3796                           
  3797                           ;main.c: 338:         if (EUSART_is_rx_ready()){
  3798     06B7  318B  2363  3186   	fcall	_EUSART_is_rx_ready
  3799     06BA  3A00               	xorlw	0
  3800     06BB  1903               	skipnz
  3801     06BC  2EF7               	goto	l3156
  3802                           
  3803                           ;main.c: 339:             TMR6_LoadPeriodRegister(0xF9);
  3804     06BD  30F9               	movlw	249
  3805     06BE  318B  237A  3186   	fcall	_TMR6_LoadPeriodRegister
  3806                           
  3807                           ;main.c: 340:             nao_salva = 0;
  3808     06C1  0021               	movlb	1	; select bank1
  3809     06C2  01C8               	clrf	_nao_salva^(0+128)
  3810     06C3                     l3146:	
  3811                           ;main.c: 341:             while(countRx<8 -1){
  3812                           
  3813                           
  3814                           ;main.c: 341:             while(countRx<8 -1){
  3815     06C3  3007               	movlw	7
  3816     06C4  024A               	subwf	_countRx^(0+128),w
  3817     06C5  1803               	btfsc	3,0
  3818     06C6  2EEA               	goto	l3148
  3819                           
  3820                           ;main.c: 342:                 TMR6_WriteTimer(0);
  3821     06C7  3000               	movlw	0
  3822     06C8  318B  2380  3186   	fcall	_TMR6_WriteTimer
  3823                           
  3824                           ;main.c: 343:                 PIR3bits.TMR6IF = 0;
  3825     06CB  0020               	movlb	0	; select bank0
  3826     06CC  1193               	bcf	19,3	;volatile
  3827     06CD                     l3136:	
  3828                           ;main.c: 344:                 while(!EUSART_is_rx_ready()){
  3829                           
  3830                           
  3831                           ;main.c: 344:                 while(!EUSART_is_rx_ready()){
  3832     06CD  318B  2363  3186   	fcall	_EUSART_is_rx_ready
  3833     06D0  3A00               	xorlw	0
  3834     06D1  1D03               	btfss	3,2
  3835     06D2  2ED8               	goto	l3138
  3836                           
  3837                           ;main.c: 345:                     if(PIR3bits.TMR6IF){
  3838     06D3  1D93               	btfss	19,3	;volatile
  3839     06D4  2ECD               	goto	l3136
  3840                           
  3841                           ;main.c: 346:                         nao_salva = 1;
  3842     06D5  0021               	movlb	1	; select bank1
  3843     06D6  01C8               	clrf	_nao_salva^(0+128)
  3844     06D7  0AC8               	incf	_nao_salva^(0+128),f
  3845     06D8                     l3138:	
  3846                           ;main.c: 347:                         break;
  3847                           
  3848                           
  3849                           ;main.c: 350:                 if(nao_salva == 1){
  3850     06D8  0021               	movlb	1	; select bank1
  3851     06D9  0348               	decf	_nao_salva^(0+128),w
  3852     06DA  1903               	btfsc	3,2
  3853     06DB  2EEA               	goto	l3148
  3854                           
  3855                           ;main.c: 353:                 bufferRx[countRx] = EUSART_Read();
  3856     06DC  084A               	movf	_countRx^(0+128),w
  3857     06DD  3E53               	addlw	(low (_bufferRx| 0))& (0+255)
  3858     06DE  0086               	movwf	6
  3859     06DF  0187               	clrf	7
  3860     06E0  318C  2403  3186   	fcall	_EUSART_Read
  3861     06E3  0081               	movwf	1
  3862                           
  3863                           ;main.c: 354:                 countRx++;
  3864     06E4  3001               	movlw	1
  3865     06E5  0021               	movlb	1	; select bank1
  3866     06E6  00EE               	movwf	??_main^(0+128)
  3867     06E7  086E               	movf	??_main^(0+128),w
  3868     06E8  07CA               	addwf	_countRx^(0+128),f
  3869     06E9  2EC3               	goto	l3146
  3870     06EA                     l3148:
  3871                           
  3872                           ;main.c: 356:             analisa_Rx();
  3873     06EA  3185  2513  3186   	fcall	_analisa_Rx
  3874                           
  3875                           ;main.c: 357:             TMR6_LoadPeriodRegister(0x4A);
  3876     06ED  304A               	movlw	74
  3877     06EE  318B  237A  3186   	fcall	_TMR6_LoadPeriodRegister
  3878                           
  3879                           ;main.c: 358:             TMR6_WriteTimer(0);
  3880     06F1  3000               	movlw	0
  3881     06F2  318B  2380  3186   	fcall	_TMR6_WriteTimer
  3882                           
  3883                           ;main.c: 359:             PIR3bits.TMR6IF = 0;
  3884     06F5  0020               	movlb	0	; select bank0
  3885     06F6  1193               	bcf	19,3	;volatile
  3886     06F7                     l3156:
  3887                           
  3888                           ;main.c: 361:         if(INTCONbits.TMR0IF == 1){
  3889     06F7  1D0B               	btfss	11,2	;volatile
  3890     06F8  2F0C               	goto	l3172
  3891                           
  3892                           ;main.c: 362:             INTCONbits.TMR0IF = 0;
  3893     06F9  110B               	bcf	11,2	;volatile
  3894                           
  3895                           ;main.c: 363:             fluxpos();
  3896     06FA  318D  25CB  3186   	fcall	_fluxpos
  3897                           
  3898                           ;main.c: 364:             passo_ctrl = 0;
  3899     06FD  0021               	movlb	1	; select bank1
  3900     06FE  01C5               	clrf	_passo_ctrl^(0+128)
  3901                           
  3902                           ;main.c: 365:             count_Tx ++;
  3903     06FF  3001               	movlw	1
  3904     0700  00EE               	movwf	??_main^(0+128)
  3905     0701  086E               	movf	??_main^(0+128),w
  3906     0702  07C9               	addwf	_count_Tx^(0+128),f
  3907                           
  3908                           ;main.c: 366:             if (count_Tx == 6){
  3909     0703  3006               	movlw	6
  3910     0704  0649               	xorwf	_count_Tx^(0+128),w
  3911     0705  1D03               	btfss	3,2
  3912     0706  2F0C               	goto	l3172
  3913                           
  3914                           ;main.c: 367:                 envia_Tx ();
  3915     0707  318F  278C  3186   	fcall	_envia_Tx
  3916                           
  3917                           ;main.c: 368:                 count_Tx = 0;
  3918     070A  0021               	movlb	1	; select bank1
  3919     070B  01C9               	clrf	_count_Tx^(0+128)
  3920     070C                     l3172:
  3921                           
  3922                           ;main.c: 371:         if(PIR3bits.TMR6IF == 1){
  3923     070C  0020               	movlb	0	; select bank0
  3924     070D  1D93               	btfss	19,3	;volatile
  3925     070E  2F23               	goto	l3184
  3926                           
  3927                           ;main.c: 372:             PIR3bits.TMR6IF = 0;
  3928     070F  1193               	bcf	19,3	;volatile
  3929                           
  3930                           ;main.c: 373:             TMR6_WriteTimer(0);
  3931     0710  3000               	movlw	0
  3932     0711  318B  2380  3186   	fcall	_TMR6_WriteTimer
  3933                           
  3934                           ;main.c: 374:             adc_temp = ADC_GetConversion(channel_AN8);
  3935     0714  3008               	movlw	8
  3936     0715  318C  247C  3186   	fcall	_ADC_GetConversion
  3937     0718  084E               	movf	(?_ADC_GetConversion+1)^(0+128),w
  3938     0719  00B6               	movwf	(_adc_temp+1)^(0+128)
  3939     071A  084D               	movf	?_ADC_GetConversion^(0+128),w
  3940     071B  00B5               	movwf	_adc_temp^(0+128)
  3941     071C  0022               	movlb	2	; select bank2
  3942     071D  170C               	bsf	12,6	;volatile
  3943                           
  3944                           ;main.c: 376:             _delay((unsigned long)((15)*(16000000/4000000.0)));
  3945     071E  3014               	movlw	20
  3946     071F                     u3097:
  3947     071F  0B89               	decfsz	9,f
  3948     0720  2F1F               	goto	u3097
  3949     0721  0022               	movlb	2	; select bank2
  3950     0722  130C               	bcf	12,6	;volatile
  3951     0723                     l3184:
  3952                           
  3953                           ;main.c: 379:         if(TMR0_ReadTimer() >= 0x7F && passo_ctrl == 0){
  3954     0723  318B  2374  3186   	fcall	_TMR0_ReadTimer
  3955     0726  00EE               	movwf	??_main^(0+128)
  3956     0727  307F               	movlw	127
  3957     0728  026E               	subwf	??_main^(0+128),w
  3958     0729  1C03               	skipc
  3959     072A  2F33               	goto	l3192
  3960     072B  0845               	movf	_passo_ctrl^(0+128),w
  3961     072C  1D03               	btfss	3,2
  3962     072D  2F33               	goto	l3192
  3963                           
  3964                           ;main.c: 380:             passo_ctrl = 1;
  3965     072E  01C5               	clrf	_passo_ctrl^(0+128)
  3966     072F  0AC5               	incf	_passo_ctrl^(0+128),f
  3967                           
  3968                           ;main.c: 381:             fluxpos();
  3969     0730  318D  25CB  3186   	fcall	_fluxpos
  3970     0733                     l3192:
  3971                           
  3972                           ;main.c: 383:         LATAbits.LATA7=CMOUTbits.MC1OUT;
  3973     0733  0022               	movlb	2	; select bank2
  3974     0734  1C15               	btfss	21,0	;volatile
  3975     0735  2EAB               	goto	u2940
  3976     0736                     L1:
  3977     0736  0022               	movlb	2	; select bank2
  3978     0737  178C               	bsf	12,7	;volatile
  3979     0738  2EAD               	goto	l3116
  3980     0739                     __end_of_main:
  3981                           
  3982                           	psect	text1
  3983     0CAF                     __ptext1:	
  3984 ;; *************** function _setaPorta *****************
  3985 ;; Defined at:
  3986 ;;		line 53 in file "main.c"
  3987 ;; Parameters:    Size  Location     Type
  3988 ;;		None
  3989 ;; Auto vars:     Size  Location     Type
  3990 ;;		None
  3991 ;; Return value:  Size  Location     Type
  3992 ;;                  1    wreg      void 
  3993 ;; Registers used:
  3994 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3995 ;; Tracked objects:
  3996 ;;		On entry : 1F/0
  3997 ;;		On exit  : 1F/1
  3998 ;;		Unchanged: 0/0
  3999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4000 ;;      Params:         0       0       0       0       0       0
  4001 ;;      Locals:         0       0       0       0       0       0
  4002 ;;      Temps:          0       0       1       0       0       0
  4003 ;;      Totals:         0       0       1       0       0       0
  4004 ;;Total ram usage:        1 bytes
  4005 ;; Hardware stack levels used: 1
  4006 ;; Hardware stack levels required when called: 7
  4007 ;; This function calls:
  4008 ;;		_CMP1_GetOutputStatus
  4009 ;;		_daUmPasso
  4010 ;; This function is called by:
  4011 ;;		_main
  4012 ;; This function uses a non-reentrant model
  4013 ;;
  4014                           
  4015     0CAF                     _setaPorta:	
  4016                           ;psect for function _setaPorta
  4017                           
  4018     0CAF                     l2976:	
  4019                           ;main.c: 54:     while(!CMP1_GetOutputStatus()){
  4020                           
  4021                           ;incstack = 0
  4022                           ; Regs used in _setaPorta: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4023                           
  4024                           
  4025                           ;main.c: 54:     while(!CMP1_GetOutputStatus()){
  4026     0CAF  318B  235B  318C   	fcall	_CMP1_GetOutputStatus
  4027     0CB2  3A00               	xorlw	0
  4028     0CB3  1D03               	btfss	3,2
  4029     0CB4  2CC3               	goto	l584
  4030                           
  4031                           ;main.c: 55:         daUmPasso(1);
  4032     0CB5  3001               	movlw	1
  4033     0CB6  318D  2503  318C   	fcall	_daUmPasso
  4034                           
  4035                           ;main.c: 56:         _delay((unsigned long)((6)*(16000000/4000.0)));
  4036     0CB9  3020               	movlw	32
  4037     0CBA  0021               	movlb	1	; select bank1
  4038     0CBB  00D1               	movwf	??_setaPorta^(0+128)
  4039     0CBC  3029               	movlw	41
  4040     0CBD                     u3107:
  4041     0CBD  0B89               	decfsz	9,f
  4042     0CBE  2CBD               	goto	u3107
  4043     0CBF  0BD1               	decfsz	??_setaPorta^(0+128),f
  4044     0CC0  2CBD               	goto	u3107
  4045     0CC1  3200               	nop2
  4046     0CC2  2CAF               	goto	l2976
  4047     0CC3                     l584:
  4048                           
  4049                           ;main.c: 59:     fim_curso = 1;
  4050     0CC3  0021               	movlb	1	; select bank1
  4051     0CC4  01C6               	clrf	_fim_curso^(0+128)
  4052     0CC5  0AC6               	incf	_fim_curso^(0+128),f
  4053                           
  4054                           ;main.c: 60:     position = 0;
  4055     0CC6  01B9               	clrf	_position^(0+128)
  4056     0CC7  01BA               	clrf	(_position+1)^(0+128)
  4057     0CC8  0008               	return
  4058     0CC9                     __end_of_setaPorta:
  4059                           
  4060                           	psect	text2
  4061     0B5B                     __ptext2:	
  4062 ;; *************** function _CMP1_GetOutputStatus *****************
  4063 ;; Defined at:
  4064 ;;		line 69 in file "mcc_generated_files/cmp1.c"
  4065 ;; Parameters:    Size  Location     Type
  4066 ;;		None
  4067 ;; Auto vars:     Size  Location     Type
  4068 ;;		None
  4069 ;; Return value:  Size  Location     Type
  4070 ;;                  1    wreg      _Bool 
  4071 ;; Registers used:
  4072 ;;		wreg, status,2, status,0
  4073 ;; Tracked objects:
  4074 ;;		On entry : 0/0
  4075 ;;		On exit  : 1F/2
  4076 ;;		Unchanged: 0/0
  4077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4078 ;;      Params:         0       0       0       0       0       0
  4079 ;;      Locals:         0       0       0       0       0       0
  4080 ;;      Temps:          0       0       0       0       0       0
  4081 ;;      Totals:         0       0       0       0       0       0
  4082 ;;Total ram usage:        0 bytes
  4083 ;; Hardware stack levels used: 1
  4084 ;; Hardware stack levels required when called: 5
  4085 ;; This function calls:
  4086 ;;		Nothing
  4087 ;; This function is called by:
  4088 ;;		_setaPorta
  4089 ;; This function uses a non-reentrant model
  4090 ;;
  4091                           
  4092     0B5B                     _CMP1_GetOutputStatus:	
  4093                           ;psect for function _CMP1_GetOutputStatus
  4094                           
  4095                           
  4096                           ;mcc_generated_files/cmp1.c: 71:  return (CMOUTbits.MC1OUT);
  4097                           
  4098                           ;incstack = 0
  4099                           ; Regs used in _CMP1_GetOutputStatus: [wreg+status,2+status,0]
  4100     0B5B  0022               	movlb	2	; select bank2
  4101     0B5C  0815               	movf	21,w	;volatile
  4102     0B5D  3901               	andlw	1
  4103     0B5E  0008               	return
  4104     0B5F                     __end_of_CMP1_GetOutputStatus:
  4105                           
  4106                           	psect	text3
  4107     0DCB                     __ptext3:	
  4108 ;; *************** function _fluxpos *****************
  4109 ;; Defined at:
  4110 ;;		line 141 in file "main.c"
  4111 ;; Parameters:    Size  Location     Type
  4112 ;;		None
  4113 ;; Auto vars:     Size  Location     Type
  4114 ;;		None
  4115 ;; Return value:  Size  Location     Type
  4116 ;;                  1    wreg      void 
  4117 ;; Registers used:
  4118 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4119 ;; Tracked objects:
  4120 ;;		On entry : 1E/0
  4121 ;;		On exit  : 1C/0
  4122 ;;		Unchanged: 0/0
  4123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4124 ;;      Params:         0       0       0       0       0       0
  4125 ;;      Locals:         0       0       0       0       0       0
  4126 ;;      Temps:          0       0       0       0       0       0
  4127 ;;      Totals:         0       0       0       0       0       0
  4128 ;;Total ram usage:        0 bytes
  4129 ;; Hardware stack levels used: 1
  4130 ;; Hardware stack levels required when called: 7
  4131 ;; This function calls:
  4132 ;;		_daUmPasso
  4133 ;; This function is called by:
  4134 ;;		_main
  4135 ;; This function uses a non-reentrant model
  4136 ;;
  4137                           
  4138     0DCB                     _fluxpos:	
  4139                           ;psect for function _fluxpos
  4140                           
  4141                           
  4142                           ;main.c: 142:     if(controlchoice==2){
  4143                           
  4144                           ;incstack = 0
  4145                           ; Regs used in _fluxpos: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4146     0DCB  3002               	movlw	2
  4147     0DCC  0021               	movlb	1	; select bank1
  4148     0DCD  064B               	xorwf	_controlchoice^(0+128),w
  4149     0DCE  1D03               	btfss	3,2
  4150     0DCF  2DE8               	goto	l2990
  4151                           
  4152                           ;main.c: 143:         if(output>position) daUmPasso(0);
  4153     0DD0  0842               	movf	(_output+1)^(0+128),w
  4154     0DD1  023A               	subwf	(_position+1)^(0+128),w
  4155     0DD2  1D03               	skipz
  4156     0DD3  2DD6               	goto	u2775
  4157     0DD4  0841               	movf	_output^(0+128),w
  4158     0DD5  0239               	subwf	_position^(0+128),w
  4159     0DD6                     u2775:
  4160     0DD6  1803               	skipnc
  4161     0DD7  2DDC               	goto	l2986
  4162     0DD8  3000               	movlw	0
  4163     0DD9  318D  2503         	fcall	_daUmPasso
  4164     0DDB  0008               	return
  4165     0DDC                     l2986:
  4166     0DDC  083A               	movf	(_position+1)^(0+128),w
  4167     0DDD  0242               	subwf	(_output+1)^(0+128),w
  4168     0DDE  1D03               	skipz
  4169     0DDF  2DE2               	goto	u2785
  4170     0DE0  0839               	movf	_position^(0+128),w
  4171     0DE1  0241               	subwf	_output^(0+128),w
  4172     0DE2                     u2785:
  4173     0DE2  1803               	skipnc
  4174     0DE3  0008               	return
  4175     0DE4  3001               	movlw	1
  4176     0DE5  318D  2503         	fcall	_daUmPasso
  4177     0DE7  0008               	return
  4178     0DE8                     l2990:
  4179                           
  4180                           ;main.c: 147:         if(sp_position>position) daUmPasso(0);
  4181     0DE8  0838               	movf	(_sp_position+1)^(0+128),w
  4182     0DE9  023A               	subwf	(_position+1)^(0+128),w
  4183     0DEA  1D03               	skipz
  4184     0DEB  2DEE               	goto	u2795
  4185     0DEC  0837               	movf	_sp_position^(0+128),w
  4186     0DED  0239               	subwf	_position^(0+128),w
  4187     0DEE                     u2795:
  4188     0DEE  1803               	skipnc
  4189     0DEF  2DF4               	goto	l2994
  4190     0DF0  3000               	movlw	0
  4191     0DF1  318D  2503         	fcall	_daUmPasso
  4192     0DF3  0008               	return
  4193     0DF4                     l2994:
  4194     0DF4  083A               	movf	(_position+1)^(0+128),w
  4195     0DF5  0238               	subwf	(_sp_position+1)^(0+128),w
  4196     0DF6  1D03               	skipz
  4197     0DF7  2DFA               	goto	u2805
  4198     0DF8  0839               	movf	_position^(0+128),w
  4199     0DF9  0237               	subwf	_sp_position^(0+128),w
  4200     0DFA                     u2805:
  4201     0DFA  1803               	skipnc
  4202     0DFB  2E00               	goto	l687
  4203     0DFC  3001               	movlw	1
  4204     0DFD  318D  2503         	fcall	_daUmPasso
  4205     0DFF  0008               	return
  4206     0E00                     l687:	
  4207                           ;main.c: 150:             do { LATAbits.LATA4 = 0; } while(0);
  4208                           
  4209     0E00  0022               	movlb	2	; select bank2
  4210     0E01  120C               	bcf	12,4	;volatile
  4211                           
  4212                           ;main.c: 151:             do { LATAbits.LATA3 = 0; } while(0);
  4213     0E02  118C               	bcf	12,3	;volatile
  4214                           
  4215                           ;main.c: 152:             do { LATAbits.LATA2 = 0; } while(0);
  4216     0E03  110C               	bcf	12,2	;volatile
  4217                           
  4218                           ;main.c: 153:             do { LATAbits.LATA1 = 0; } while(0);
  4219     0E04  108C               	bcf	12,1	;volatile
  4220     0E05  0008               	return
  4221     0E06                     __end_of_fluxpos:
  4222                           
  4223                           	psect	text4
  4224     0D03                     __ptext4:	
  4225 ;; *************** function _daUmPasso *****************
  4226 ;; Defined at:
  4227 ;;		line 63 in file "main.c"
  4228 ;; Parameters:    Size  Location     Type
  4229 ;;  sentido         1    wreg     unsigned char 
  4230 ;; Auto vars:     Size  Location     Type
  4231 ;;  sentido         1    3[BANK1 ] unsigned char 
  4232 ;; Return value:  Size  Location     Type
  4233 ;;                  1    wreg      void 
  4234 ;; Registers used:
  4235 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4236 ;; Tracked objects:
  4237 ;;		On entry : 1C/2
  4238 ;;		On exit  : 1F/1
  4239 ;;		Unchanged: 0/0
  4240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4241 ;;      Params:         0       0       0       0       0       0
  4242 ;;      Locals:         0       0       1       0       0       0
  4243 ;;      Temps:          0       0       0       0       0       0
  4244 ;;      Totals:         0       0       1       0       0       0
  4245 ;;Total ram usage:        1 bytes
  4246 ;; Hardware stack levels used: 1
  4247 ;; Hardware stack levels required when called: 6
  4248 ;; This function calls:
  4249 ;;		_definePassoMotor
  4250 ;; This function is called by:
  4251 ;;		_setaPorta
  4252 ;;		_fluxpos
  4253 ;; This function uses a non-reentrant model
  4254 ;;
  4255                           
  4256     0D03                     _daUmPasso:	
  4257                           ;psect for function _daUmPasso
  4258                           
  4259                           
  4260                           ;incstack = 0
  4261                           ; Regs used in _daUmPasso: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4262                           ;daUmPasso@sentido stored from wreg
  4263     0D03  0021               	movlb	1	; select bank1
  4264     0D04  00D0               	movwf	daUmPasso@sentido^(0+128)
  4265                           
  4266                           ;main.c: 64:     if (fim_curso) {
  4267     0D05  0846               	movf	_fim_curso^(0+128),w
  4268     0D06  1903               	btfsc	3,2
  4269     0D07  2D1D               	goto	l2806
  4270                           
  4271                           ;main.c: 65:         if(sentido == 1){
  4272     0D08  0350               	decf	daUmPasso@sentido^(0+128),w
  4273     0D09  1D03               	btfss	3,2
  4274     0D0A  2D10               	goto	l2800
  4275                           
  4276                           ;main.c: 66:             position--;
  4277     0D0B  3001               	movlw	1
  4278     0D0C  02B9               	subwf	_position^(0+128),f
  4279     0D0D  3000               	movlw	0
  4280     0D0E  3BBA               	subwfb	(_position+1)^(0+128),f
  4281                           
  4282                           ;main.c: 67:         }
  4283     0D0F  2D17               	goto	l2804
  4284     0D10                     l2800:
  4285     0D10  0850               	movf	daUmPasso@sentido^(0+128),w
  4286     0D11  1D03               	btfss	3,2
  4287     0D12  2D17               	goto	l2804
  4288                           
  4289                           ;main.c: 69:             position++;
  4290     0D13  3001               	movlw	1
  4291     0D14  07B9               	addwf	_position^(0+128),f
  4292     0D15  3000               	movlw	0
  4293     0D16  3DBA               	addwfc	(_position+1)^(0+128),f
  4294     0D17                     l2804:
  4295                           
  4296                           ;main.c: 71:         definePassoMotor(passo, sentido);
  4297     0D17  0850               	movf	daUmPasso@sentido^(0+128),w
  4298     0D18  00CD               	movwf	definePassoMotor@sentido^(0+128)
  4299     0D19  0847               	movf	_passo^(0+128),w
  4300     0D1A  318E  2606         	fcall	_definePassoMotor
  4301                           
  4302                           ;main.c: 72:     } else {
  4303     0D1C  0008               	return
  4304     0D1D                     l2806:
  4305                           
  4306                           ;main.c: 73:         definePassoMotor(passo, 1);
  4307     0D1D  01CD               	clrf	definePassoMotor@sentido^(0+128)
  4308     0D1E  0ACD               	incf	definePassoMotor@sentido^(0+128),f
  4309     0D1F  0847               	movf	_passo^(0+128),w
  4310     0D20  318E  2606         	fcall	_definePassoMotor
  4311     0D22  0008               	return
  4312     0D23                     __end_of_daUmPasso:
  4313                           
  4314                           	psect	text5
  4315     0E06                     __ptext5:	
  4316 ;; *************** function _definePassoMotor *****************
  4317 ;; Defined at:
  4318 ;;		line 77 in file "main.c"
  4319 ;; Parameters:    Size  Location     Type
  4320 ;;  passom          1    wreg     unsigned char 
  4321 ;;  sentido         1    0[BANK1 ] unsigned char 
  4322 ;; Auto vars:     Size  Location     Type
  4323 ;;  passom          1    2[BANK1 ] unsigned char 
  4324 ;; Return value:  Size  Location     Type
  4325 ;;                  1    wreg      void 
  4326 ;; Registers used:
  4327 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4328 ;; Tracked objects:
  4329 ;;		On entry : 1F/1
  4330 ;;		On exit  : 1F/1
  4331 ;;		Unchanged: 0/0
  4332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4333 ;;      Params:         0       0       1       0       0       0
  4334 ;;      Locals:         0       0       1       0       0       0
  4335 ;;      Temps:          0       0       1       0       0       0
  4336 ;;      Totals:         0       0       3       0       0       0
  4337 ;;Total ram usage:        3 bytes
  4338 ;; Hardware stack levels used: 1
  4339 ;; Hardware stack levels required when called: 5
  4340 ;; This function calls:
  4341 ;;		Nothing
  4342 ;; This function is called by:
  4343 ;;		_daUmPasso
  4344 ;; This function uses a non-reentrant model
  4345 ;;
  4346                           
  4347     0E06                     _definePassoMotor:	
  4348                           ;psect for function _definePassoMotor
  4349                           
  4350                           
  4351                           ;incstack = 0
  4352                           ; Regs used in _definePassoMotor: [wreg-fsr0h+status,2+status,0]
  4353                           ;definePassoMotor@passom stored from wreg
  4354     0E06  00CF               	movwf	definePassoMotor@passom^(0+128)
  4355                           
  4356                           ;main.c: 78:     if (sentido == 1) {
  4357     0E07  034D               	decf	definePassoMotor@sentido^(0+128),w
  4358     0E08  1903               	btfsc	3,2
  4359     0E09  2E21               	goto	l2338
  4360     0E0A  2E2F               	goto	l2340
  4361     0E0B                     l599:	
  4362                           ;main.c: 81:                 do { LATAbits.LATA1 = 1; } while(0);
  4363                           
  4364     0E0B  0022               	movlb	2	; select bank2
  4365     0E0C  148C               	bsf	12,1	;volatile
  4366                           
  4367                           ;main.c: 82:                 do { LATAbits.LATA2 = 1; } while(0);
  4368     0E0D  150C               	bsf	12,2	;volatile
  4369                           
  4370                           ;main.c: 83:                 do { LATAbits.LATA3 = 0; } while(0);
  4371     0E0E  118C               	bcf	12,3	;volatile
  4372     0E0F  2E14               	goto	l615
  4373     0E10                     l609:	
  4374                           ;main.c: 87:                 do { LATAbits.LATA1 = 0; } while(0);
  4375                           
  4376                           ;main.c: 84:                 do { LATAbits.LATA4 = 0; } while(0);
  4377                           
  4378     0E10  0022               	movlb	2	; select bank2
  4379     0E11  108C               	bcf	12,1	;volatile
  4380                           
  4381                           ;main.c: 88:                 do { LATAbits.LATA2 = 1; } while(0);
  4382     0E12  150C               	bsf	12,2	;volatile
  4383                           
  4384                           ;main.c: 89:                 do { LATAbits.LATA3 = 1; } while(0);
  4385     0E13  158C               	bsf	12,3	;volatile
  4386     0E14                     l615:	
  4387                           ;main.c: 90:                 do { LATAbits.LATA4 = 0; } while(0);
  4388                           
  4389     0E14  120C               	bcf	12,4	;volatile
  4390     0E15  2E57               	goto	l2348
  4391     0E16                     l618:	
  4392                           ;main.c: 93:                 do { LATAbits.LATA1 = 0; } while(0);
  4393                           
  4394     0E16  0022               	movlb	2	; select bank2
  4395     0E17  108C               	bcf	12,1	;volatile
  4396                           
  4397                           ;main.c: 94:                 do { LATAbits.LATA2 = 0; } while(0);
  4398     0E18  110C               	bcf	12,2	;volatile
  4399                           
  4400                           ;main.c: 95:                 do { LATAbits.LATA3 = 1; } while(0);
  4401     0E19  158C               	bsf	12,3	;volatile
  4402     0E1A  2E1F               	goto	l633
  4403     0E1B                     l627:	
  4404                           ;main.c: 99:                 do { LATAbits.LATA1 = 1; } while(0);
  4405                           
  4406                           ;main.c: 96:                 do { LATAbits.LATA4 = 1; } while(0);
  4407                           
  4408     0E1B  0022               	movlb	2	; select bank2
  4409     0E1C  148C               	bsf	12,1	;volatile
  4410                           
  4411                           ;main.c: 100:                 do { LATAbits.LATA2 = 0; } while(0);
  4412     0E1D  110C               	bcf	12,2	;volatile
  4413                           
  4414                           ;main.c: 101:                 do { LATAbits.LATA3 = 0; } while(0);
  4415     0E1E  118C               	bcf	12,3	;volatile
  4416     0E1F                     l633:	
  4417                           ;main.c: 102:                 do { LATAbits.LATA4 = 1; } while(0);
  4418                           
  4419     0E1F  160C               	bsf	12,4	;volatile
  4420     0E20  2E57               	goto	l2348
  4421     0E21                     l2338:
  4422     0E21  084F               	movf	definePassoMotor@passom^(0+128),w
  4423                           
  4424                           ; Switch size 1, requested type "simple"
  4425                           ; Number of cases is 4, Range of values is 0 to 3
  4426                           ; switch strategies available:
  4427                           ; Name         Instructions Cycles
  4428                           ; simple_byte           13     7 (average)
  4429                           ; direct_byte           14     6 (fixed)
  4430                           ; jumptable            260     6 (fixed)
  4431                           ;	Chosen strategy is simple_byte
  4432     0E22  3A00               	xorlw	0	; case 0
  4433     0E23  1903               	skipnz
  4434     0E24  2E0B               	goto	l599
  4435     0E25  3A01               	xorlw	1	; case 1
  4436     0E26  1903               	skipnz
  4437     0E27  2E10               	goto	l609
  4438     0E28  3A03               	xorlw	3	; case 2
  4439     0E29  1903               	skipnz
  4440     0E2A  2E16               	goto	l618
  4441     0E2B  3A01               	xorlw	1	; case 3
  4442     0E2C  1903               	skipnz
  4443     0E2D  2E1B               	goto	l627
  4444     0E2E  2E57               	goto	l2348
  4445     0E2F                     l2340:
  4446     0E2F  084D               	movf	definePassoMotor@sentido^(0+128),w
  4447     0E30  1903               	btfsc	3,2
  4448     0E31  2E49               	goto	l2346
  4449     0E32  2E57               	goto	l2348
  4450     0E33                     l639:	
  4451                           ;main.c: 109:                 do { LATAbits.LATA4 = 1; } while(0);
  4452                           
  4453     0E33  0022               	movlb	2	; select bank2
  4454     0E34  160C               	bsf	12,4	;volatile
  4455                           
  4456                           ;main.c: 110:                 do { LATAbits.LATA3 = 1; } while(0);
  4457     0E35  158C               	bsf	12,3	;volatile
  4458                           
  4459                           ;main.c: 111:                 do { LATAbits.LATA2 = 0; } while(0);
  4460     0E36  110C               	bcf	12,2	;volatile
  4461     0E37  2E3C               	goto	l655
  4462     0E38                     l649:	
  4463                           ;main.c: 115:                 do { LATAbits.LATA4 = 0; } while(0);
  4464                           
  4465                           ;main.c: 112:                 do { LATAbits.LATA1 = 0; } while(0);
  4466                           
  4467     0E38  0022               	movlb	2	; select bank2
  4468     0E39  120C               	bcf	12,4	;volatile
  4469                           
  4470                           ;main.c: 116:                 do { LATAbits.LATA3 = 1; } while(0);
  4471     0E3A  158C               	bsf	12,3	;volatile
  4472                           
  4473                           ;main.c: 117:                 do { LATAbits.LATA2 = 1; } while(0);
  4474     0E3B  150C               	bsf	12,2	;volatile
  4475     0E3C                     l655:	
  4476                           ;main.c: 118:                 do { LATAbits.LATA1 = 0; } while(0);
  4477                           
  4478     0E3C  108C               	bcf	12,1	;volatile
  4479     0E3D  2E57               	goto	l2348
  4480     0E3E                     l658:	
  4481                           ;main.c: 121:                 do { LATAbits.LATA4 = 0; } while(0);
  4482                           
  4483     0E3E  0022               	movlb	2	; select bank2
  4484     0E3F  120C               	bcf	12,4	;volatile
  4485                           
  4486                           ;main.c: 122:                 do { LATAbits.LATA3 = 0; } while(0);
  4487     0E40  118C               	bcf	12,3	;volatile
  4488                           
  4489                           ;main.c: 123:                 do { LATAbits.LATA2 = 1; } while(0);
  4490     0E41  150C               	bsf	12,2	;volatile
  4491     0E42  2E47               	goto	L3
  4492     0E43                     l667:	
  4493                           ;main.c: 127:                 do { LATAbits.LATA4 = 1; } while(0);
  4494                           
  4495                           ;main.c: 124:                 do { LATAbits.LATA1 = 1; } while(0);
  4496                           
  4497     0E43  0022               	movlb	2	; select bank2
  4498     0E44  160C               	bsf	12,4	;volatile
  4499                           
  4500                           ;main.c: 128:                 do { LATAbits.LATA3 = 0; } while(0);
  4501     0E45  118C               	bcf	12,3	;volatile
  4502                           
  4503                           ;main.c: 129:                 do { LATAbits.LATA2 = 0; } while(0);
  4504     0E46  110C               	bcf	12,2	;volatile
  4505     0E47                     L3:
  4506                           
  4507                           ;main.c: 130:                 do { LATAbits.LATA1 = 1; } while(0);
  4508     0E47  148C               	bsf	12,1	;volatile
  4509     0E48  2E57               	goto	l2348
  4510     0E49                     l2346:
  4511     0E49  084F               	movf	definePassoMotor@passom^(0+128),w
  4512                           
  4513                           ; Switch size 1, requested type "simple"
  4514                           ; Number of cases is 4, Range of values is 0 to 3
  4515                           ; switch strategies available:
  4516                           ; Name         Instructions Cycles
  4517                           ; simple_byte           13     7 (average)
  4518                           ; direct_byte           14     6 (fixed)
  4519                           ; jumptable            260     6 (fixed)
  4520                           ;	Chosen strategy is simple_byte
  4521     0E4A  3A00               	xorlw	0	; case 0
  4522     0E4B  1903               	skipnz
  4523     0E4C  2E33               	goto	l639
  4524     0E4D  3A01               	xorlw	1	; case 1
  4525     0E4E  1903               	skipnz
  4526     0E4F  2E38               	goto	l649
  4527     0E50  3A03               	xorlw	3	; case 2
  4528     0E51  1903               	skipnz
  4529     0E52  2E3E               	goto	l658
  4530     0E53  3A01               	xorlw	1	; case 3
  4531     0E54  1903               	skipnz
  4532     0E55  2E43               	goto	l667
  4533     0E56  2E57               	goto	l2348
  4534     0E57                     l2348:
  4535                           
  4536                           ;main.c: 135:     passo++;
  4537     0E57  3001               	movlw	1
  4538     0E58  0021               	movlb	1	; select bank1
  4539     0E59  00CE               	movwf	??_definePassoMotor^(0+128)
  4540     0E5A  084E               	movf	??_definePassoMotor^(0+128),w
  4541     0E5B  07C7               	addwf	_passo^(0+128),f
  4542                           
  4543                           ;main.c: 136:     passo = passo & 0x03;
  4544     0E5C  0847               	movf	_passo^(0+128),w
  4545     0E5D  3903               	andlw	3
  4546     0E5E  00C7               	movwf	_passo^(0+128)
  4547     0E5F  0008               	return
  4548     0E60                     __end_of_definePassoMotor:
  4549                           
  4550                           	psect	text6
  4551     0F8C                     __ptext6:	
  4552 ;; *************** function _envia_Tx *****************
  4553 ;; Defined at:
  4554 ;;		line 276 in file "main.c"
  4555 ;; Parameters:    Size  Location     Type
  4556 ;;		None
  4557 ;; Auto vars:     Size  Location     Type
  4558 ;;		None
  4559 ;; Return value:  Size  Location     Type
  4560 ;;                  1    wreg      void 
  4561 ;; Registers used:
  4562 ;;		wreg, status,2, status,0, pclath, cstack
  4563 ;; Tracked objects:
  4564 ;;		On entry : 1F/1
  4565 ;;		On exit  : 1F/3
  4566 ;;		Unchanged: 0/0
  4567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4568 ;;      Params:         0       0       0       0       0       0
  4569 ;;      Locals:         0       0       0       0       0       0
  4570 ;;      Temps:          0       0       0       0       0       0
  4571 ;;      Totals:         0       0       0       0       0       0
  4572 ;;Total ram usage:        0 bytes
  4573 ;; Hardware stack levels used: 1
  4574 ;; Hardware stack levels required when called: 6
  4575 ;; This function calls:
  4576 ;;		_EUSART_Write
  4577 ;;		___fltol
  4578 ;; This function is called by:
  4579 ;;		_main
  4580 ;; This function uses a non-reentrant model
  4581 ;;
  4582                           
  4583     0F8C                     _envia_Tx:	
  4584                           ;psect for function _envia_Tx
  4585                           
  4586                           
  4587                           ;main.c: 277:     EUSART_Write(controlchoice);
  4588                           
  4589                           ;incstack = 0
  4590                           ; Regs used in _envia_Tx: [wreg+status,2+status,0+pclath+cstack]
  4591     0F8C  084B               	movf	_controlchoice^(0+128),w
  4592     0F8D  318B  23D1  318F   	fcall	_EUSART_Write
  4593                           
  4594                           ;main.c: 278:     vTx.v = sp_height;
  4595     0F90  0020               	movlb	0	; select bank0
  4596     0F91  0864               	movf	_sp_height+1,w
  4597     0F92  0021               	movlb	1	; select bank1
  4598     0F93  00C0               	movwf	(_vTx+1)^(0+128)
  4599     0F94  0020               	movlb	0	; select bank0
  4600     0F95  0863               	movf	_sp_height,w
  4601     0F96  0021               	movlb	1	; select bank1
  4602     0F97  00BF               	movwf	_vTx^(0+128)
  4603                           
  4604                           ;main.c: 279:     EUSART_Write(vTx.vH);
  4605     0F98  0840               	movf	(_vTx^(0+128)+1),w
  4606     0F99  318B  23D1  318F   	fcall	_EUSART_Write
  4607                           
  4608                           ;main.c: 280:     EUSART_Write(vTx.vL);
  4609     0F9C  0021               	movlb	1	; select bank1
  4610     0F9D  083F               	movf	_vTx^(0+128),w
  4611     0F9E  318B  23D1  318F   	fcall	_EUSART_Write
  4612                           
  4613                           ;main.c: 281:     vTx.v = height;
  4614     0FA1  0021               	movlb	1	; select bank1
  4615     0FA2  0834               	movf	(_height+1)^(0+128),w
  4616     0FA3  00C0               	movwf	(_vTx+1)^(0+128)
  4617     0FA4  0833               	movf	_height^(0+128),w
  4618     0FA5  00BF               	movwf	_vTx^(0+128)
  4619                           
  4620                           ;main.c: 282:     EUSART_Write(vTx.vH);
  4621     0FA6  0840               	movf	(_vTx^(0+128)+1),w
  4622     0FA7  318B  23D1  318F   	fcall	_EUSART_Write
  4623                           
  4624                           ;main.c: 283:     EUSART_Write(vTx.vL);
  4625     0FAA  0021               	movlb	1	; select bank1
  4626     0FAB  083F               	movf	_vTx^(0+128),w
  4627     0FAC  318B  23D1  318F   	fcall	_EUSART_Write
  4628                           
  4629                           ;main.c: 284:     vTx.v = avg_tempo_voo;
  4630     0FAF  0021               	movlb	1	; select bank1
  4631     0FB0  0823               	movf	(_avg_tempo_voo+3)^(0+128),w
  4632     0FB1  00D0               	movwf	(___fltol@f1+3)^(0+128)
  4633     0FB2  0822               	movf	(_avg_tempo_voo+2)^(0+128),w
  4634     0FB3  00CF               	movwf	(___fltol@f1+2)^(0+128)
  4635     0FB4  0821               	movf	(_avg_tempo_voo+1)^(0+128),w
  4636     0FB5  00CE               	movwf	(___fltol@f1+1)^(0+128)
  4637     0FB6  0820               	movf	_avg_tempo_voo^(0+128),w
  4638     0FB7  00CD               	movwf	___fltol@f1^(0+128)
  4639     0FB8  318E  26C1  318F   	fcall	___fltol
  4640     0FBB  084E               	movf	(?___fltol+1)^(0+128),w
  4641     0FBC  00C0               	movwf	(_vTx+1)^(0+128)
  4642     0FBD  084D               	movf	?___fltol^(0+128),w
  4643     0FBE  00BF               	movwf	_vTx^(0+128)
  4644                           
  4645                           ;main.c: 285:     EUSART_Write(vTx.vH);
  4646     0FBF  0840               	movf	(_vTx^(0+128)+1),w
  4647     0FC0  318B  23D1  318F   	fcall	_EUSART_Write
  4648                           
  4649                           ;main.c: 286:     EUSART_Write(vTx.vL);
  4650     0FC3  0021               	movlb	1	; select bank1
  4651     0FC4  083F               	movf	_vTx^(0+128),w
  4652     0FC5  318B  23D1  318F   	fcall	_EUSART_Write
  4653                           
  4654                           ;main.c: 287:     vTx.v = adc_temp;
  4655     0FC8  0021               	movlb	1	; select bank1
  4656     0FC9  0836               	movf	(_adc_temp+1)^(0+128),w
  4657     0FCA  00C0               	movwf	(_vTx+1)^(0+128)
  4658     0FCB  0835               	movf	_adc_temp^(0+128),w
  4659     0FCC  00BF               	movwf	_vTx^(0+128)
  4660                           
  4661                           ;main.c: 288:     EUSART_Write(vTx.vH);
  4662     0FCD  0840               	movf	(_vTx^(0+128)+1),w
  4663     0FCE  318B  23D1  318F   	fcall	_EUSART_Write
  4664                           
  4665                           ;main.c: 289:     EUSART_Write(vTx.vL);
  4666     0FD1  0021               	movlb	1	; select bank1
  4667     0FD2  083F               	movf	_vTx^(0+128),w
  4668     0FD3  318B  23D1  318F   	fcall	_EUSART_Write
  4669                           
  4670                           ;main.c: 290:     vTx.v = sp_position;
  4671     0FD6  0021               	movlb	1	; select bank1
  4672     0FD7  0838               	movf	(_sp_position+1)^(0+128),w
  4673     0FD8  00C0               	movwf	(_vTx+1)^(0+128)
  4674     0FD9  0837               	movf	_sp_position^(0+128),w
  4675     0FDA  00BF               	movwf	_vTx^(0+128)
  4676                           
  4677                           ;main.c: 291:     EUSART_Write(vTx.vH);
  4678     0FDB  0840               	movf	(_vTx^(0+128)+1),w
  4679     0FDC  318B  23D1  318F   	fcall	_EUSART_Write
  4680                           
  4681                           ;main.c: 292:     EUSART_Write(vTx.vL);
  4682     0FDF  0021               	movlb	1	; select bank1
  4683     0FE0  083F               	movf	_vTx^(0+128),w
  4684     0FE1  318B  23D1  318F   	fcall	_EUSART_Write
  4685                           
  4686                           ;main.c: 293:     vTx.v = position;
  4687     0FE4  0021               	movlb	1	; select bank1
  4688     0FE5  083A               	movf	(_position+1)^(0+128),w
  4689     0FE6  00C0               	movwf	(_vTx+1)^(0+128)
  4690     0FE7  0839               	movf	_position^(0+128),w
  4691     0FE8  00BF               	movwf	_vTx^(0+128)
  4692                           
  4693                           ;main.c: 294:     EUSART_Write(vTx.vH);
  4694     0FE9  0840               	movf	(_vTx^(0+128)+1),w
  4695     0FEA  318B  23D1  318F   	fcall	_EUSART_Write
  4696                           
  4697                           ;main.c: 295:     EUSART_Write(vTx.vL);
  4698     0FED  0021               	movlb	1	; select bank1
  4699     0FEE  083F               	movf	_vTx^(0+128),w
  4700     0FEF  318B  23D1  318F   	fcall	_EUSART_Write
  4701                           
  4702                           ;main.c: 296:     vTx.v = dc;
  4703     0FF2  0021               	movlb	1	; select bank1
  4704     0FF3  083C               	movf	(_dc+1)^(0+128),w
  4705     0FF4  00C0               	movwf	(_vTx+1)^(0+128)
  4706     0FF5  083B               	movf	_dc^(0+128),w
  4707     0FF6  00BF               	movwf	_vTx^(0+128)
  4708                           
  4709                           ;main.c: 297:     EUSART_Write(vTx.vH);
  4710     0FF7  0840               	movf	(_vTx^(0+128)+1),w
  4711     0FF8  318B  23D1  318F   	fcall	_EUSART_Write
  4712                           
  4713                           ;main.c: 298:     EUSART_Write(vTx.vL);
  4714     0FFB  0021               	movlb	1	; select bank1
  4715     0FFC  083F               	movf	_vTx^(0+128),w
  4716     0FFD  318B  23D1         	fcall	_EUSART_Write
  4717     0FFF  0008               	return
  4718     1000                     __end_of_envia_Tx:
  4719                           
  4720                           	psect	text7
  4721     0EC1                     __ptext7:	
  4722 ;; *************** function ___fltol *****************
  4723 ;; Defined at:
  4724 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\fltol.c"
  4725 ;; Parameters:    Size  Location     Type
  4726 ;;  f1              4    0[BANK1 ] void 
  4727 ;; Auto vars:     Size  Location     Type
  4728 ;;  exp1            1    9[BANK1 ] unsigned char 
  4729 ;;  sign1           1    8[BANK1 ] unsigned char 
  4730 ;; Return value:  Size  Location     Type
  4731 ;;                  4    0[BANK1 ] long 
  4732 ;; Registers used:
  4733 ;;		wreg, status,2, status,0
  4734 ;; Tracked objects:
  4735 ;;		On entry : 1F/1
  4736 ;;		On exit  : 1F/1
  4737 ;;		Unchanged: 0/0
  4738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4739 ;;      Params:         0       0       4       0       0       0
  4740 ;;      Locals:         0       0       2       0       0       0
  4741 ;;      Temps:          0       0       4       0       0       0
  4742 ;;      Totals:         0       0      10       0       0       0
  4743 ;;Total ram usage:       10 bytes
  4744 ;; Hardware stack levels used: 1
  4745 ;; Hardware stack levels required when called: 5
  4746 ;; This function calls:
  4747 ;;		Nothing
  4748 ;; This function is called by:
  4749 ;;		_envia_Tx
  4750 ;; This function uses a non-reentrant model
  4751 ;;
  4752                           
  4753     0EC1                     ___fltol:	
  4754                           ;psect for function ___fltol
  4755                           
  4756                           
  4757                           ;incstack = 0
  4758                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  4759     0EC1  1003               	clrc
  4760     0EC2  0D4F               	rlf	(___fltol@f1+2)^(0+128),w
  4761     0EC3  0D50               	rlf	(___fltol@f1+3)^(0+128),w
  4762     0EC4  00D6               	movwf	___fltol@exp1^(0+128)
  4763     0EC5  0856               	movf	___fltol@exp1^(0+128),w
  4764     0EC6  1D03               	btfss	3,2
  4765     0EC7  2ED1               	goto	l2894
  4766     0EC8                     l2890:
  4767     0EC8  3000               	movlw	0
  4768     0EC9  00D0               	movwf	(?___fltol+3)^(0+128)
  4769     0ECA  3000               	movlw	0
  4770     0ECB  00CF               	movwf	(?___fltol+2)^(0+128)
  4771     0ECC  3000               	movlw	0
  4772     0ECD  00CE               	movwf	(?___fltol+1)^(0+128)
  4773     0ECE  3000               	movlw	0
  4774     0ECF  00CD               	movwf	?___fltol^(0+128)
  4775     0ED0  0008               	return
  4776     0ED1                     l2894:
  4777     0ED1  084D               	movf	___fltol@f1^(0+128),w
  4778     0ED2  00D1               	movwf	??___fltol^(0+128)
  4779     0ED3  084E               	movf	(___fltol@f1+1)^(0+128),w
  4780     0ED4  00D2               	movwf	(??___fltol^(0+128)+1)
  4781     0ED5  084F               	movf	(___fltol@f1+2)^(0+128),w
  4782     0ED6  00D3               	movwf	(??___fltol^(0+128)+2)
  4783     0ED7  0850               	movf	(___fltol@f1+3)^(0+128),w
  4784     0ED8  00D4               	movwf	(??___fltol^(0+128)+3)
  4785     0ED9  301F               	movlw	31
  4786     0EDA                     u2625:
  4787     0EDA  36D4               	lsrf	(??___fltol^(0+128)+3),f
  4788     0EDB  0CD3               	rrf	(??___fltol^(0+128)+2),f
  4789     0EDC  0CD2               	rrf	(??___fltol^(0+128)+1),f
  4790     0EDD  0CD1               	rrf	??___fltol^(0+128),f
  4791     0EDE  0B89               	decfsz	9,f
  4792     0EDF  2EDA               	goto	u2625
  4793     0EE0  0851               	movf	??___fltol^(0+128),w
  4794     0EE1  00D5               	movwf	___fltol@sign1^(0+128)
  4795     0EE2  17CF               	bsf	(___fltol@f1^(0+128)+2),7
  4796     0EE3  30FF               	movlw	255
  4797     0EE4  05CD               	andwf	___fltol@f1^(0+128),f
  4798     0EE5  30FF               	movlw	255
  4799     0EE6  05CE               	andwf	(___fltol@f1+1)^(0+128),f
  4800     0EE7  30FF               	movlw	255
  4801     0EE8  05CF               	andwf	(___fltol@f1+2)^(0+128),f
  4802     0EE9  3000               	movlw	0
  4803     0EEA  05D0               	andwf	(___fltol@f1+3)^(0+128),f
  4804     0EEB  3096               	movlw	150
  4805     0EEC  02D6               	subwf	___fltol@exp1^(0+128),f
  4806     0EED  1FD6               	btfss	___fltol@exp1^(0+128),7
  4807     0EEE  2F02               	goto	l2912
  4808     0EEF  0856               	movf	___fltol@exp1^(0+128),w
  4809     0EF0  3A80               	xorlw	128
  4810     0EF1  3E97               	addlw	151
  4811     0EF2  1C03               	btfss	3,0
  4812     0EF3  2EC8               	goto	l2890
  4813     0EF4                     l2910:
  4814     0EF4  3001               	movlw	1
  4815     0EF5                     u2655:
  4816     0EF5  36D0               	lsrf	(___fltol@f1+3)^(0+128),f
  4817     0EF6  0CCF               	rrf	(___fltol@f1+2)^(0+128),f
  4818     0EF7  0CCE               	rrf	(___fltol@f1+1)^(0+128),f
  4819     0EF8  0CCD               	rrf	___fltol@f1^(0+128),f
  4820     0EF9  0B89               	decfsz	9,f
  4821     0EFA  2EF5               	goto	u2655
  4822     0EFB  3001               	movlw	1
  4823     0EFC  00D1               	movwf	??___fltol^(0+128)
  4824     0EFD  0851               	movf	??___fltol^(0+128),w
  4825     0EFE  07D6               	addwf	___fltol@exp1^(0+128),f
  4826     0EFF  1903               	btfsc	3,2
  4827     0F00  2F13               	goto	l2920
  4828     0F01  2EF4               	goto	l2910
  4829     0F02                     l2912:
  4830     0F02  3020               	movlw	32
  4831     0F03  0256               	subwf	___fltol@exp1^(0+128),w
  4832     0F04  1803               	btfsc	3,0
  4833     0F05  2EC8               	goto	l2890
  4834     0F06                     l1133:
  4835     0F06  0856               	movf	___fltol@exp1^(0+128),w
  4836     0F07  1903               	btfsc	3,2
  4837     0F08  2F13               	goto	l2920
  4838     0F09  3001               	movlw	1
  4839     0F0A                     u2685:
  4840     0F0A  35CD               	lslf	___fltol@f1^(0+128),f
  4841     0F0B  0DCE               	rlf	(___fltol@f1+1)^(0+128),f
  4842     0F0C  0DCF               	rlf	(___fltol@f1+2)^(0+128),f
  4843     0F0D  0DD0               	rlf	(___fltol@f1+3)^(0+128),f
  4844     0F0E  0B89               	decfsz	9,f
  4845     0F0F  2F0A               	goto	u2685
  4846     0F10  3001               	movlw	1
  4847     0F11  02D6               	subwf	___fltol@exp1^(0+128),f
  4848     0F12  2F06               	goto	l1133
  4849     0F13                     l2920:
  4850     0F13  0855               	movf	___fltol@sign1^(0+128),w
  4851     0F14  1903               	btfsc	3,2
  4852     0F15  0008               	return
  4853     0F16  09CD               	comf	___fltol@f1^(0+128),f
  4854     0F17  09CE               	comf	(___fltol@f1+1)^(0+128),f
  4855     0F18  09CF               	comf	(___fltol@f1+2)^(0+128),f
  4856     0F19  09D0               	comf	(___fltol@f1+3)^(0+128),f
  4857     0F1A  0ACD               	incf	___fltol@f1^(0+128),f
  4858     0F1B  1903               	skipnz
  4859     0F1C  0ACE               	incf	(___fltol@f1+1)^(0+128),f
  4860     0F1D  1903               	skipnz
  4861     0F1E  0ACF               	incf	(___fltol@f1+2)^(0+128),f
  4862     0F1F  1903               	skipnz
  4863     0F20  0AD0               	incf	(___fltol@f1+3)^(0+128),f
  4864     0F21  0008               	return
  4865     0F22                     __end_of___fltol:
  4866                           
  4867                           	psect	text8
  4868     0BD1                     __ptext8:	
  4869 ;; *************** function _EUSART_Write *****************
  4870 ;; Defined at:
  4871 ;;		line 132 in file "mcc_generated_files/eusart.c"
  4872 ;; Parameters:    Size  Location     Type
  4873 ;;  txData          1    wreg     unsigned char 
  4874 ;; Auto vars:     Size  Location     Type
  4875 ;;  txData          1    0[BANK1 ] unsigned char 
  4876 ;; Return value:  Size  Location     Type
  4877 ;;                  1    wreg      void 
  4878 ;; Registers used:
  4879 ;;		wreg
  4880 ;; Tracked objects:
  4881 ;;		On entry : 1F/1
  4882 ;;		On exit  : 1F/3
  4883 ;;		Unchanged: 0/0
  4884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4885 ;;      Params:         0       0       0       0       0       0
  4886 ;;      Locals:         0       0       1       0       0       0
  4887 ;;      Temps:          0       0       0       0       0       0
  4888 ;;      Totals:         0       0       1       0       0       0
  4889 ;;Total ram usage:        1 bytes
  4890 ;; Hardware stack levels used: 1
  4891 ;; Hardware stack levels required when called: 5
  4892 ;; This function calls:
  4893 ;;		Nothing
  4894 ;; This function is called by:
  4895 ;;		_envia_Tx
  4896 ;; This function uses a non-reentrant model
  4897 ;;
  4898                           
  4899     0BD1                     _EUSART_Write:	
  4900                           ;psect for function _EUSART_Write
  4901                           
  4902                           
  4903                           ;incstack = 0
  4904                           ; Regs used in _EUSART_Write: [wreg]
  4905                           ;EUSART_Write@txData stored from wreg
  4906     0BD1  00CD               	movwf	EUSART_Write@txData^(0+128)
  4907     0BD2                     l247:	
  4908                           ;mcc_generated_files/eusart.c: 135:     {;mcc_generated_files/eusart.c: 136:     }
  4909                           
  4910                           
  4911                           ;mcc_generated_files/eusart.c: 134:     while(0 == PIR1bits.TXIF)
  4912     0BD2  0020               	movlb	0	; select bank0
  4913     0BD3  1E11               	btfss	17,4	;volatile
  4914     0BD4  2BD2               	goto	l247
  4915                           
  4916                           ;mcc_generated_files/eusart.c: 138:     TXREG = txData;
  4917     0BD5  0021               	movlb	1	; select bank1
  4918     0BD6  084D               	movf	EUSART_Write@txData^(0+128),w
  4919     0BD7  0023               	movlb	3	; select bank3
  4920     0BD8  009A               	movwf	26	;volatile
  4921     0BD9  0008               	return
  4922     0BDA                     __end_of_EUSART_Write:
  4923                           
  4924                           	psect	text9
  4925     0C3B                     __ptext9:	
  4926 ;; *************** function _controlchoose *****************
  4927 ;; Defined at:
  4928 ;;		line 158 in file "main.c"
  4929 ;; Parameters:    Size  Location     Type
  4930 ;;		None
  4931 ;; Auto vars:     Size  Location     Type
  4932 ;;		None
  4933 ;; Return value:  Size  Location     Type
  4934 ;;                  1    wreg      void 
  4935 ;; Registers used:
  4936 ;;		wreg, status,2, status,0, pclath, cstack
  4937 ;; Tracked objects:
  4938 ;;		On entry : 1F/8
  4939 ;;		On exit  : 1F/8
  4940 ;;		Unchanged: 0/0
  4941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4942 ;;      Params:         0       0       0       0       0       0
  4943 ;;      Locals:         0       0       0       0       0       0
  4944 ;;      Temps:          0       0       0       0       0       0
  4945 ;;      Totals:         0       0       0       0       0       0
  4946 ;;Total ram usage:        0 bytes
  4947 ;; Hardware stack levels used: 1
  4948 ;; Hardware stack levels required when called: 7
  4949 ;; This function calls:
  4950 ;;		_TMR4_StartTimer
  4951 ;;		_fluxcontrol
  4952 ;;		_pwmcontrol
  4953 ;; This function is called by:
  4954 ;;		_main
  4955 ;; This function uses a non-reentrant model
  4956 ;;
  4957                           
  4958     0C3B                     _controlchoose:	
  4959                           ;psect for function _controlchoose
  4960                           
  4961                           
  4962                           ;main.c: 159:     if (controlchoice == 1){
  4963                           
  4964                           ;incstack = 0
  4965                           ; Regs used in _controlchoose: [wreg+status,2+status,0+pclath+cstack]
  4966     0C3B  0021               	movlb	1	; select bank1
  4967     0C3C  034B               	decf	_controlchoice^(0+128),w
  4968     0C3D  1D03               	btfss	3,2
  4969     0C3E  2C43               	goto	l3002
  4970                           
  4971                           ;main.c: 160:         pwmcontrol ();
  4972     0C3F  3182  2242  318C   	fcall	_pwmcontrol
  4973                           
  4974                           ;main.c: 161:     } else if(controlchoice == 2){
  4975     0C42  2C4A               	goto	l3006
  4976     0C43                     l3002:
  4977     0C43  3002               	movlw	2
  4978     0C44  064B               	xorwf	_controlchoice^(0+128),w
  4979     0C45  1D03               	btfss	3,2
  4980     0C46  2C4A               	goto	l3006
  4981                           
  4982                           ;main.c: 162:         fluxcontrol ();
  4983     0C47  3183  2379  318C   	fcall	_fluxcontrol
  4984     0C4A                     l3006:
  4985                           
  4986                           ;main.c: 164:     TMR4_StartTimer();
  4987     0C4A  318B  2354         	fcall	_TMR4_StartTimer
  4988     0C4C  0008               	return
  4989     0C4D                     __end_of_controlchoose:
  4990                           
  4991                           	psect	text10
  4992     0242                     __ptext10:	
  4993 ;; *************** function _pwmcontrol *****************
  4994 ;; Defined at:
  4995 ;;		line 184 in file "main.c"
  4996 ;; Parameters:    Size  Location     Type
  4997 ;;		None
  4998 ;; Auto vars:     Size  Location     Type
  4999 ;;		None
  5000 ;; Return value:  Size  Location     Type
  5001 ;;                  1    wreg      void 
  5002 ;; Registers used:
  5003 ;;		wreg, status,2, status,0, pclath, cstack
  5004 ;; Tracked objects:
  5005 ;;		On entry : 1F/1
  5006 ;;		On exit  : 0/0
  5007 ;;		Unchanged: 0/0
  5008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5009 ;;      Params:         0       0       0       0       0       0
  5010 ;;      Locals:         0       0       0       0       0       0
  5011 ;;      Temps:          0       0      12       0       0       0
  5012 ;;      Totals:         0       0      12       0       0       0
  5013 ;;Total ram usage:       12 bytes
  5014 ;; Hardware stack levels used: 1
  5015 ;; Hardware stack levels required when called: 6
  5016 ;; This function calls:
  5017 ;;		_EPWM1_LoadDutyValue
  5018 ;;		___atdiv
  5019 ;;		___lwdiv
  5020 ;;		___tmul
  5021 ;; This function is called by:
  5022 ;;		_controlchoose
  5023 ;; This function uses a non-reentrant model
  5024 ;;
  5025                           
  5026     0242                     _pwmcontrol:	
  5027                           ;psect for function _pwmcontrol
  5028                           
  5029                           
  5030                           ;main.c: 185:     error = (ballset-balldist);
  5031                           
  5032                           ;incstack = 0
  5033                           ; Regs used in _pwmcontrol: [wreg+status,2+status,0+pclath+cstack]
  5034     0242  082A               	movf	_balldist^(0+128),w
  5035     0243  0020               	movlb	0	; select bank0
  5036     0244  025E               	subwf	_ballset,w
  5037     0245  0021               	movlb	1	; select bank1
  5038     0246  00E2               	movwf	??_pwmcontrol^(0+128)
  5039     0247  0020               	movlb	0	; select bank0
  5040     0248  085F               	movf	_ballset+1,w
  5041     0249  0021               	movlb	1	; select bank1
  5042     024A  00E3               	movwf	(??_pwmcontrol^(0+128)+1)
  5043     024B  082B               	movf	(_balldist+1)^(0+128),w
  5044     024C  1C03               	skipc
  5045     024D  0F2B               	incfsz	(_balldist+1)^(0+128),w
  5046     024E  2A50               	goto	u2431
  5047     024F  2A51               	goto	u2432
  5048     0250                     u2431:
  5049     0250  02E3               	subwf	(??_pwmcontrol^(0+128)+1),f
  5050     0251                     u2432:
  5051     0251  0020               	movlb	0	; select bank0
  5052     0252  0860               	movf	_ballset+2,w
  5053     0253  0021               	movlb	1	; select bank1
  5054     0254  00E4               	movwf	(??_pwmcontrol^(0+128)+2)
  5055     0255  082C               	movf	(_balldist+2)^(0+128),w
  5056     0256  1C03               	skipc
  5057     0257  0F2C               	incfsz	(_balldist+2)^(0+128),w
  5058     0258  2A5A               	goto	u2433
  5059     0259  2A5B               	goto	u2434
  5060     025A                     u2433:
  5061     025A  02E4               	subwf	(??_pwmcontrol^(0+128)+2),f
  5062     025B                     u2434:
  5063     025B  0862               	movf	??_pwmcontrol^(0+128),w
  5064     025C  00B0               	movwf	_error^(0+128)
  5065     025D  0863               	movf	(??_pwmcontrol+1)^(0+128),w
  5066     025E  00B1               	movwf	(_error+1)^(0+128)
  5067     025F  0864               	movf	(??_pwmcontrol+2)^(0+128),w
  5068     0260  00B2               	movwf	(_error+2)^(0+128)
  5069                           
  5070                           ;main.c: 186:     if(error > 15 || error < -15){
  5071     0261  1BB2               	btfsc	(_error+2)^(0+128),7
  5072     0262  2A6D               	goto	l2812
  5073     0263  0832               	movf	(_error+2)^(0+128),w
  5074     0264  1D03               	btfss	3,2
  5075     0265  2A78               	goto	l2814
  5076     0266  0831               	movf	(_error+1)^(0+128),w
  5077     0267  1D03               	btfss	3,2
  5078     0268  2A78               	goto	l2814
  5079     0269  3010               	movlw	16
  5080     026A  0230               	subwf	_error^(0+128),w
  5081     026B  1803               	btfsc	3,0
  5082     026C  2A78               	goto	l2814
  5083     026D                     l2812:
  5084     026D  0021               	movlb	1	; select bank1
  5085     026E  1FB2               	btfss	(_error+2)^(0+128),7
  5086     026F  0008               	return
  5087     0270  30F1               	movlw	241
  5088     0271  0230               	subwf	_error^(0+128),w
  5089     0272  30FF               	movlw	255
  5090     0273  3B31               	subwfb	(_error+1)^(0+128),w
  5091     0274  30FF               	movlw	255
  5092     0275  3B32               	subwfb	(_error+2)^(0+128),w
  5093     0276  1803               	btfsc	3,0
  5094     0277  0008               	return
  5095     0278                     l2814:
  5096     0278  300A               	movlw	10
  5097     0279  0021               	movlb	1	; select bank1
  5098     027A  00D6               	movwf	___atdiv@divisor^(0+128)
  5099     027B  3000               	movlw	0
  5100     027C  00D7               	movwf	(___atdiv@divisor+1)^(0+128)
  5101     027D  3000               	movlw	0
  5102     027E  00D8               	movwf	(___atdiv@divisor+2)^(0+128)
  5103     027F  0830               	movf	_error^(0+128),w
  5104     0280  00CD               	movwf	___tmul@multiplier^(0+128)
  5105     0281  0831               	movf	(_error+1)^(0+128),w
  5106     0282  00CE               	movwf	(___tmul@multiplier+1)^(0+128)
  5107     0283  0832               	movf	(_error+2)^(0+128),w
  5108     0284  00CF               	movwf	(___tmul@multiplier+2)^(0+128)
  5109     0285  3044               	movlw	68
  5110     0286  00D0               	movwf	___tmul@multiplicand^(0+128)
  5111     0287  3000               	movlw	0
  5112     0288  00D1               	movwf	(___tmul@multiplicand+1)^(0+128)
  5113     0289  3000               	movlw	0
  5114     028A  00D2               	movwf	(___tmul@multiplicand+2)^(0+128)
  5115     028B  318D  2547  3182   	fcall	___tmul
  5116     028E  084D               	movf	?___tmul^(0+128),w
  5117     028F  00D9               	movwf	___atdiv@dividend^(0+128)
  5118     0290  084E               	movf	(?___tmul+1)^(0+128),w
  5119     0291  00DA               	movwf	(___atdiv@dividend+1)^(0+128)
  5120     0292  084F               	movf	(?___tmul+2)^(0+128),w
  5121     0293  00DB               	movwf	(___atdiv@dividend+2)^(0+128)
  5122     0294  318F  2722  3182   	fcall	___atdiv
  5123     0297  0856               	movf	?___atdiv^(0+128),w
  5124     0298  07A7               	addwf	_outputsum^(0+128),f
  5125     0299  0857               	movf	(?___atdiv+1)^(0+128),w
  5126     029A  3DA8               	addwfc	(_outputsum+1)^(0+128),f
  5127     029B  0858               	movf	(?___atdiv+2)^(0+128),w
  5128     029C  3DA9               	addwfc	(_outputsum+2)^(0+128),f
  5129                           
  5130                           ;main.c: 188:         if (outputsum > 100) outputsum = 100;
  5131     029D  1BA9               	btfsc	(_outputsum+2)^(0+128),7
  5132     029E  2AB0               	goto	l2820
  5133     029F  0829               	movf	(_outputsum+2)^(0+128),w
  5134     02A0  1D03               	btfss	3,2
  5135     02A1  2AA9               	goto	l2818
  5136     02A2  0828               	movf	(_outputsum+1)^(0+128),w
  5137     02A3  1D03               	btfss	3,2
  5138     02A4  2AA9               	goto	l2818
  5139     02A5  3065               	movlw	101
  5140     02A6  0227               	subwf	_outputsum^(0+128),w
  5141     02A7  1C03               	btfss	3,0
  5142     02A8  2AB0               	goto	l2820
  5143     02A9                     l2818:
  5144     02A9  3064               	movlw	100
  5145     02AA  0021               	movlb	1	; select bank1
  5146     02AB  00A7               	movwf	_outputsum^(0+128)
  5147     02AC  3000               	movlw	0
  5148     02AD  00A8               	movwf	(_outputsum+1)^(0+128)
  5149     02AE  3000               	movlw	0
  5150     02AF  2AC1               	goto	L4
  5151     02B0                     l2820:
  5152     02B0  0021               	movlb	1	; select bank1
  5153     02B1  1FA9               	btfss	(_outputsum+2)^(0+128),7
  5154     02B2  2AC2               	goto	l2824
  5155     02B3  30F6               	movlw	246
  5156     02B4  0227               	subwf	_outputsum^(0+128),w
  5157     02B5  30FF               	movlw	255
  5158     02B6  3B28               	subwfb	(_outputsum+1)^(0+128),w
  5159     02B7  30FF               	movlw	255
  5160     02B8  3B29               	subwfb	(_outputsum+2)^(0+128),w
  5161     02B9  1803               	btfsc	3,0
  5162     02BA  2AC2               	goto	l2824
  5163     02BB  30F6               	movlw	246
  5164     02BC  0021               	movlb	1	; select bank1
  5165     02BD  00A7               	movwf	_outputsum^(0+128)
  5166     02BE  30FF               	movlw	255
  5167     02BF  00A8               	movwf	(_outputsum+1)^(0+128)
  5168     02C0  30FF               	movlw	255
  5169     02C1                     L4:
  5170     02C1  00A9               	movwf	(_outputsum+2)^(0+128)
  5171     02C2                     l2824:
  5172     02C2  0021               	movlb	1	; select bank1
  5173     02C3  0824               	movf	_outpre^(0+128),w
  5174     02C4  00E2               	movwf	??_pwmcontrol^(0+128)
  5175     02C5  0825               	movf	(_outpre+1)^(0+128),w
  5176     02C6  00E3               	movwf	(??_pwmcontrol^(0+128)+1)
  5177     02C7  0826               	movf	(_outpre+2)^(0+128),w
  5178     02C8  00E4               	movwf	(??_pwmcontrol^(0+128)+2)
  5179     02C9  0827               	movf	_outputsum^(0+128),w
  5180     02CA  00E5               	movwf	(??_pwmcontrol+3)^(0+128)
  5181     02CB  0828               	movf	(_outputsum+1)^(0+128),w
  5182     02CC  00E6               	movwf	((??_pwmcontrol+3)^(0+128)+1)
  5183     02CD  0829               	movf	(_outputsum+2)^(0+128),w
  5184     02CE  00E7               	movwf	((??_pwmcontrol+3)^(0+128)+2)
  5185     02CF  082D               	movf	_errorp^(0+128),w
  5186     02D0  00CD               	movwf	___tmul@multiplier^(0+128)
  5187     02D1  082E               	movf	(_errorp+1)^(0+128),w
  5188     02D2  00CE               	movwf	(___tmul@multiplier+1)^(0+128)
  5189     02D3  082F               	movf	(_errorp+2)^(0+128),w
  5190     02D4  00CF               	movwf	(___tmul@multiplier+2)^(0+128)
  5191     02D5  30F1               	movlw	241
  5192     02D6  00D0               	movwf	___tmul@multiplicand^(0+128)
  5193     02D7  30FF               	movlw	255
  5194     02D8  00D1               	movwf	(___tmul@multiplicand+1)^(0+128)
  5195     02D9  30FF               	movlw	255
  5196     02DA  00D2               	movwf	(___tmul@multiplicand+2)^(0+128)
  5197     02DB  318D  2547  3182   	fcall	___tmul
  5198     02DE  084D               	movf	?___tmul^(0+128),w
  5199     02DF  00E8               	movwf	(??_pwmcontrol+6)^(0+128)
  5200     02E0  084E               	movf	(?___tmul+1)^(0+128),w
  5201     02E1  00E9               	movwf	((??_pwmcontrol+6)^(0+128)+1)
  5202     02E2  084F               	movf	(?___tmul+2)^(0+128),w
  5203     02E3  00EA               	movwf	((??_pwmcontrol+6)^(0+128)+2)
  5204     02E4  0830               	movf	_error^(0+128),w
  5205     02E5  00EB               	movwf	(??_pwmcontrol+9)^(0+128)
  5206     02E6  0831               	movf	(_error+1)^(0+128),w
  5207     02E7  00EC               	movwf	((??_pwmcontrol+9)^(0+128)+1)
  5208     02E8  0832               	movf	(_error+2)^(0+128),w
  5209     02E9  00ED               	movwf	((??_pwmcontrol+9)^(0+128)+2)
  5210     02EA  3005               	movlw	5
  5211     02EB                     u2485:
  5212     02EB  35EB               	lslf	(??_pwmcontrol+9)^(0+128),f
  5213     02EC  0DEC               	rlf	((??_pwmcontrol+9)^(0+128)+1),f
  5214     02ED  0DED               	rlf	((??_pwmcontrol+9)^(0+128)+2),f
  5215     02EE  0B89               	decfsz	9,f
  5216     02EF  2AEB               	goto	u2485
  5217     02F0  0830               	movf	_error^(0+128),w
  5218     02F1  00CD               	movwf	___tmul@multiplier^(0+128)
  5219     02F2  0831               	movf	(_error+1)^(0+128),w
  5220     02F3  00CE               	movwf	(___tmul@multiplier+1)^(0+128)
  5221     02F4  0832               	movf	(_error+2)^(0+128),w
  5222     02F5  00CF               	movwf	(___tmul@multiplier+2)^(0+128)
  5223     02F6  300F               	movlw	15
  5224     02F7  00D0               	movwf	___tmul@multiplicand^(0+128)
  5225     02F8  3000               	movlw	0
  5226     02F9  00D1               	movwf	(___tmul@multiplicand+1)^(0+128)
  5227     02FA  3000               	movlw	0
  5228     02FB  00D2               	movwf	(___tmul@multiplicand+2)^(0+128)
  5229     02FC  318D  2547  3182   	fcall	___tmul
  5230     02FF  084D               	movf	?___tmul^(0+128),w
  5231     0300  07EB               	addwf	(??_pwmcontrol+9)^(0+128),f
  5232     0301  084E               	movf	(?___tmul+1)^(0+128),w
  5233     0302  3DEC               	addwfc	((??_pwmcontrol+9)^(0+128)+1),f
  5234     0303  084F               	movf	(?___tmul+2)^(0+128),w
  5235     0304  3DED               	addwfc	((??_pwmcontrol+9)^(0+128)+2),f
  5236     0305  086B               	movf	(??_pwmcontrol+9)^(0+128),w
  5237     0306  07E8               	addwf	(??_pwmcontrol+6)^(0+128),f
  5238     0307  086C               	movf	(??_pwmcontrol+10)^(0+128),w
  5239     0308  3DE9               	addwfc	((??_pwmcontrol+6)^(0+128)+1),f
  5240     0309  086D               	movf	(??_pwmcontrol+11)^(0+128),w
  5241     030A  3DEA               	addwfc	((??_pwmcontrol+6)^(0+128)+2),f
  5242     030B  0868               	movf	(??_pwmcontrol+6)^(0+128),w
  5243     030C  07E5               	addwf	(??_pwmcontrol+3)^(0+128),f
  5244     030D  0869               	movf	(??_pwmcontrol+7)^(0+128),w
  5245     030E  3DE6               	addwfc	((??_pwmcontrol+3)^(0+128)+1),f
  5246     030F  086A               	movf	(??_pwmcontrol+8)^(0+128),w
  5247     0310  3DE7               	addwfc	((??_pwmcontrol+3)^(0+128)+2),f
  5248     0311  0865               	movf	(??_pwmcontrol+3)^(0+128),w
  5249     0312  07E2               	addwf	??_pwmcontrol^(0+128),f
  5250     0313  0866               	movf	(??_pwmcontrol+4)^(0+128),w
  5251     0314  3DE3               	addwfc	(??_pwmcontrol^(0+128)+1),f
  5252     0315  0867               	movf	(??_pwmcontrol+5)^(0+128),w
  5253     0316  3DE4               	addwfc	(??_pwmcontrol^(0+128)+2),f
  5254     0317  0862               	movf	??_pwmcontrol^(0+128),w
  5255     0318  00A4               	movwf	_outpre^(0+128)
  5256     0319  0863               	movf	(??_pwmcontrol+1)^(0+128),w
  5257     031A  00A5               	movwf	(_outpre+1)^(0+128)
  5258     031B  0864               	movf	(??_pwmcontrol+2)^(0+128),w
  5259     031C  00A6               	movwf	(_outpre+2)^(0+128)
  5260                           
  5261                           ;main.c: 191:         if(outpre > 6230){
  5262     031D  1BA6               	btfsc	(_outpre+2)^(0+128),7
  5263     031E  2B2D               	goto	l723
  5264     031F  0826               	movf	(_outpre+2)^(0+128),w
  5265     0320  1D03               	btfss	3,2
  5266     0321  2B28               	goto	l2828
  5267     0322  3057               	movlw	87
  5268     0323  0224               	subwf	_outpre^(0+128),w
  5269     0324  3018               	movlw	24
  5270     0325  3B25               	subwfb	(_outpre+1)^(0+128),w
  5271     0326  1C03               	btfss	3,0
  5272     0327  2B2D               	goto	l723
  5273     0328                     l2828:
  5274                           
  5275                           ;main.c: 192:             output = 1023;
  5276     0328  30FF               	movlw	255
  5277     0329  0021               	movlb	1	; select bank1
  5278     032A  00C1               	movwf	_output^(0+128)
  5279     032B  3003               	movlw	3
  5280     032C  2B33               	goto	L5
  5281     032D                     l723:	
  5282                           ;main.c: 194:         else if(outpre <0) {
  5283                           
  5284                           ;main.c: 193:         }
  5285                           
  5286     032D  0021               	movlb	1	; select bank1
  5287     032E  1FA6               	btfss	(_outpre+2)^(0+128),7
  5288     032F  2B35               	goto	l2832
  5289                           
  5290                           ;main.c: 195:             output= 0+400;
  5291     0330  3090               	movlw	144
  5292     0331  00C1               	movwf	_output^(0+128)
  5293     0332  3001               	movlw	1
  5294     0333                     L5:
  5295     0333  00C2               	movwf	(_output^(0+128)+1)
  5296                           
  5297                           ;main.c: 196:         } else {
  5298     0334  2B46               	goto	l2834
  5299     0335                     l2832:
  5300                           
  5301                           ;main.c: 197:             output = ((uint16_t)outpre/10) + 400;
  5302     0335  300A               	movlw	10
  5303     0336  00CD               	movwf	___lwdiv@divisor^(0+128)
  5304     0337  3000               	movlw	0
  5305     0338  00CE               	movwf	(___lwdiv@divisor^(0+128)+1)
  5306     0339  0825               	movf	(_outpre+1)^(0+128),w
  5307     033A  00D0               	movwf	(___lwdiv@dividend+1)^(0+128)
  5308     033B  0824               	movf	_outpre^(0+128),w
  5309     033C  00CF               	movwf	___lwdiv@dividend^(0+128)
  5310     033D  3187  27CC  3182   	fcall	___lwdiv
  5311     0340  084D               	movf	?___lwdiv^(0+128),w
  5312     0341  3E90               	addlw	144
  5313     0342  00C1               	movwf	_output^(0+128)
  5314     0343  3001               	movlw	1
  5315     0344  3D4E               	addwfc	(?___lwdiv+1)^(0+128),w
  5316     0345  00C2               	movwf	(_output+1)^(0+128)
  5317     0346                     l2834:
  5318                           
  5319                           ;main.c: 199:         if (outpre>6230){
  5320     0346  1BA6               	btfsc	(_outpre+2)^(0+128),7
  5321     0347  2B58               	goto	l2838
  5322     0348  0826               	movf	(_outpre+2)^(0+128),w
  5323     0349  1D03               	btfss	3,2
  5324     034A  2B51               	goto	l2836
  5325     034B  3057               	movlw	87
  5326     034C  0224               	subwf	_outpre^(0+128),w
  5327     034D  3018               	movlw	24
  5328     034E  3B25               	subwfb	(_outpre+1)^(0+128),w
  5329     034F  1C03               	btfss	3,0
  5330     0350  2B58               	goto	l2838
  5331     0351                     l2836:
  5332                           
  5333                           ;main.c: 200:             outpre = 6230;
  5334     0351  3056               	movlw	86
  5335     0352  0021               	movlb	1	; select bank1
  5336     0353  00A4               	movwf	_outpre^(0+128)
  5337     0354  3018               	movlw	24
  5338     0355  00A5               	movwf	(_outpre+1)^(0+128)
  5339     0356  3000               	movlw	0
  5340     0357  2B69               	goto	L6
  5341     0358                     l2838:	
  5342                           ;main.c: 201:         } else if (outpre < -800){
  5343                           
  5344     0358  0021               	movlb	1	; select bank1
  5345     0359  1FA6               	btfss	(_outpre+2)^(0+128),7
  5346     035A  2B6A               	goto	l2842
  5347     035B  30E0               	movlw	224
  5348     035C  0224               	subwf	_outpre^(0+128),w
  5349     035D  30FC               	movlw	252
  5350     035E  3B25               	subwfb	(_outpre+1)^(0+128),w
  5351     035F  30FF               	movlw	255
  5352     0360  3B26               	subwfb	(_outpre+2)^(0+128),w
  5353     0361  1803               	btfsc	3,0
  5354     0362  2B6A               	goto	l2842
  5355                           
  5356                           ;main.c: 202:             outpre = -800;
  5357     0363  30E0               	movlw	224
  5358     0364  0021               	movlb	1	; select bank1
  5359     0365  00A4               	movwf	_outpre^(0+128)
  5360     0366  30FC               	movlw	252
  5361     0367  00A5               	movwf	(_outpre+1)^(0+128)
  5362     0368  30FF               	movlw	255
  5363     0369                     L6:
  5364     0369  00A6               	movwf	(_outpre+2)^(0+128)
  5365     036A                     l2842:
  5366                           
  5367                           ;main.c: 205:         EPWM1_LoadDutyValue(output);
  5368     036A  0021               	movlb	1	; select bank1
  5369     036B  0842               	movf	(_output+1)^(0+128),w
  5370     036C  00CE               	movwf	(EPWM1_LoadDutyValue@dutyValue+1)^(0+128)
  5371     036D  0841               	movf	_output^(0+128),w
  5372     036E  00CD               	movwf	EPWM1_LoadDutyValue@dutyValue^(0+128)
  5373     036F  318C  24C9         	fcall	_EPWM1_LoadDutyValue
  5374                           
  5375                           ;main.c: 206:         errorp = error;
  5376     0371  0021               	movlb	1	; select bank1
  5377     0372  0830               	movf	_error^(0+128),w
  5378     0373  00AD               	movwf	_errorp^(0+128)
  5379     0374  0831               	movf	(_error+1)^(0+128),w
  5380     0375  00AE               	movwf	(_errorp+1)^(0+128)
  5381     0376  0832               	movf	(_error+2)^(0+128),w
  5382     0377  00AF               	movwf	(_errorp+2)^(0+128)
  5383     0378  0008               	return
  5384     0379                     __end_of_pwmcontrol:
  5385                           
  5386                           	psect	text11
  5387     07CC                     __ptext11:	
  5388 ;; *************** function ___lwdiv *****************
  5389 ;; Defined at:
  5390 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lwdiv.c"
  5391 ;; Parameters:    Size  Location     Type
  5392 ;;  divisor         2    0[BANK1 ] unsigned int 
  5393 ;;  dividend        2    2[BANK1 ] unsigned int 
  5394 ;; Auto vars:     Size  Location     Type
  5395 ;;  quotient        2    5[BANK1 ] unsigned int 
  5396 ;;  counter         1    7[BANK1 ] unsigned char 
  5397 ;; Return value:  Size  Location     Type
  5398 ;;                  2    0[BANK1 ] unsigned int 
  5399 ;; Registers used:
  5400 ;;		wreg, status,2, status,0
  5401 ;; Tracked objects:
  5402 ;;		On entry : 1F/1
  5403 ;;		On exit  : 1F/1
  5404 ;;		Unchanged: 0/0
  5405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5406 ;;      Params:         0       0       4       0       0       0
  5407 ;;      Locals:         0       0       3       0       0       0
  5408 ;;      Temps:          0       0       1       0       0       0
  5409 ;;      Totals:         0       0       8       0       0       0
  5410 ;;Total ram usage:        8 bytes
  5411 ;; Hardware stack levels used: 1
  5412 ;; Hardware stack levels required when called: 5
  5413 ;; This function calls:
  5414 ;;		Nothing
  5415 ;; This function is called by:
  5416 ;;		_pwmcontrol
  5417 ;; This function uses a non-reentrant model
  5418 ;;
  5419                           
  5420     07CC                     ___lwdiv:	
  5421                           ;psect for function ___lwdiv
  5422                           
  5423                           
  5424                           ;incstack = 0
  5425                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5426     07CC  01D2               	clrf	___lwdiv@quotient^(0+128)
  5427     07CD  01D3               	clrf	(___lwdiv@quotient+1)^(0+128)
  5428     07CE  084D               	movf	___lwdiv@divisor^(0+128),w
  5429     07CF  044E               	iorwf	(___lwdiv@divisor+1)^(0+128),w
  5430     07D0  1903               	btfsc	3,2
  5431     07D1  2FFB               	goto	l2428
  5432     07D2  01D4               	clrf	___lwdiv@counter^(0+128)
  5433     07D3  0AD4               	incf	___lwdiv@counter^(0+128),f
  5434     07D4                     l2416:
  5435     07D4  1BCE               	btfsc	(___lwdiv@divisor+1)^(0+128),7
  5436     07D5  2FE0               	goto	l2418
  5437     07D6  3001               	movlw	1
  5438     07D7                     u1775:
  5439     07D7  35CD               	lslf	___lwdiv@divisor^(0+128),f
  5440     07D8  0DCE               	rlf	(___lwdiv@divisor+1)^(0+128),f
  5441     07D9  0B89               	decfsz	9,f
  5442     07DA  2FD7               	goto	u1775
  5443     07DB  3001               	movlw	1
  5444     07DC  00D1               	movwf	??___lwdiv^(0+128)
  5445     07DD  0851               	movf	??___lwdiv^(0+128),w
  5446     07DE  07D4               	addwf	___lwdiv@counter^(0+128),f
  5447     07DF  2FD4               	goto	l2416
  5448     07E0                     l2418:
  5449     07E0  3001               	movlw	1
  5450     07E1                     u1795:
  5451     07E1  35D2               	lslf	___lwdiv@quotient^(0+128),f
  5452     07E2  0DD3               	rlf	(___lwdiv@quotient+1)^(0+128),f
  5453     07E3  0B89               	decfsz	9,f
  5454     07E4  2FE1               	goto	u1795
  5455     07E5  084E               	movf	(___lwdiv@divisor+1)^(0+128),w
  5456     07E6  0250               	subwf	(___lwdiv@dividend+1)^(0+128),w
  5457     07E7  1D03               	skipz
  5458     07E8  2FEB               	goto	u1805
  5459     07E9  084D               	movf	___lwdiv@divisor^(0+128),w
  5460     07EA  024F               	subwf	___lwdiv@dividend^(0+128),w
  5461     07EB                     u1805:
  5462     07EB  1C03               	skipc
  5463     07EC  2FF2               	goto	l2424
  5464     07ED  084D               	movf	___lwdiv@divisor^(0+128),w
  5465     07EE  02CF               	subwf	___lwdiv@dividend^(0+128),f
  5466     07EF  084E               	movf	(___lwdiv@divisor+1)^(0+128),w
  5467     07F0  3BD0               	subwfb	(___lwdiv@dividend+1)^(0+128),f
  5468     07F1  1452               	bsf	___lwdiv@quotient^(0+128),0
  5469     07F2                     l2424:
  5470     07F2  3001               	movlw	1
  5471     07F3                     u1815:
  5472     07F3  36CE               	lsrf	(___lwdiv@divisor+1)^(0+128),f
  5473     07F4  0CCD               	rrf	___lwdiv@divisor^(0+128),f
  5474     07F5  0B89               	decfsz	9,f
  5475     07F6  2FF3               	goto	u1815
  5476     07F7  3001               	movlw	1
  5477     07F8  02D4               	subwf	___lwdiv@counter^(0+128),f
  5478     07F9  1D03               	btfss	3,2
  5479     07FA  2FE0               	goto	l2418
  5480     07FB                     l2428:
  5481     07FB  0853               	movf	(___lwdiv@quotient+1)^(0+128),w
  5482     07FC  00CE               	movwf	(?___lwdiv+1)^(0+128)
  5483     07FD  0852               	movf	___lwdiv@quotient^(0+128),w
  5484     07FE  00CD               	movwf	?___lwdiv^(0+128)
  5485     07FF  0008               	return
  5486     0800                     __end_of___lwdiv:
  5487                           
  5488                           	psect	text12
  5489     0F22                     __ptext12:	
  5490 ;; *************** function ___atdiv *****************
  5491 ;; Defined at:
  5492 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\atdiv.c"
  5493 ;; Parameters:    Size  Location     Type
  5494 ;;  divisor         3    9[BANK1 ] m
  5495 ;;  dividend        3   12[BANK1 ] m
  5496 ;; Auto vars:     Size  Location     Type
  5497 ;;  quotient        3   18[BANK1 ] m
  5498 ;;  sign            1   17[BANK1 ] unsigned char 
  5499 ;;  counter         1   16[BANK1 ] unsigned char 
  5500 ;; Return value:  Size  Location     Type
  5501 ;;                  3    9[BANK1 ] m
  5502 ;; Registers used:
  5503 ;;		wreg, status,2, status,0
  5504 ;; Tracked objects:
  5505 ;;		On entry : 1F/1
  5506 ;;		On exit  : 1F/1
  5507 ;;		Unchanged: 0/0
  5508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5509 ;;      Params:         0       0       6       0       0       0
  5510 ;;      Locals:         0       0       5       0       0       0
  5511 ;;      Temps:          0       0       1       0       0       0
  5512 ;;      Totals:         0       0      12       0       0       0
  5513 ;;Total ram usage:       12 bytes
  5514 ;; Hardware stack levels used: 1
  5515 ;; Hardware stack levels required when called: 5
  5516 ;; This function calls:
  5517 ;;		Nothing
  5518 ;; This function is called by:
  5519 ;;		_pwmcontrol
  5520 ;; This function uses a non-reentrant model
  5521 ;;
  5522                           
  5523     0F22                     ___atdiv:	
  5524                           ;psect for function ___atdiv
  5525                           
  5526                           
  5527                           ;incstack = 0
  5528                           ; Regs used in ___atdiv: [wreg+status,2+status,0]
  5529     0F22  01DE               	clrf	___atdiv@sign^(0+128)
  5530     0F23  1FD8               	btfss	(___atdiv@divisor+2)^(0+128),7
  5531     0F24  2F2F               	goto	l1049
  5532     0F25  09D6               	comf	___atdiv@divisor^(0+128),f
  5533     0F26  09D7               	comf	(___atdiv@divisor+1)^(0+128),f
  5534     0F27  09D8               	comf	(___atdiv@divisor+2)^(0+128),f
  5535     0F28  0AD6               	incf	___atdiv@divisor^(0+128),f
  5536     0F29  1903               	skipnz
  5537     0F2A  0AD7               	incf	(___atdiv@divisor+1)^(0+128),f
  5538     0F2B  1903               	skipnz
  5539     0F2C  0AD8               	incf	(___atdiv@divisor+2)^(0+128),f
  5540     0F2D  01DE               	clrf	___atdiv@sign^(0+128)
  5541     0F2E  0ADE               	incf	___atdiv@sign^(0+128),f
  5542     0F2F                     l1049:
  5543     0F2F  1FDB               	btfss	(___atdiv@dividend+2)^(0+128),7
  5544     0F30  2F3D               	goto	l2376
  5545     0F31  09D9               	comf	___atdiv@dividend^(0+128),f
  5546     0F32  09DA               	comf	(___atdiv@dividend+1)^(0+128),f
  5547     0F33  09DB               	comf	(___atdiv@dividend+2)^(0+128),f
  5548     0F34  0AD9               	incf	___atdiv@dividend^(0+128),f
  5549     0F35  1903               	skipnz
  5550     0F36  0ADA               	incf	(___atdiv@dividend+1)^(0+128),f
  5551     0F37  1903               	skipnz
  5552     0F38  0ADB               	incf	(___atdiv@dividend+2)^(0+128),f
  5553     0F39  3001               	movlw	1
  5554     0F3A  00DC               	movwf	??___atdiv^(0+128)
  5555     0F3B  085C               	movf	??___atdiv^(0+128),w
  5556     0F3C  06DE               	xorwf	___atdiv@sign^(0+128),f
  5557     0F3D                     l2376:
  5558     0F3D  3000               	movlw	0
  5559     0F3E  00DF               	movwf	___atdiv@quotient^(0+128)
  5560     0F3F  3000               	movlw	0
  5561     0F40  00E0               	movwf	(___atdiv@quotient+1)^(0+128)
  5562     0F41  3000               	movlw	0
  5563     0F42  00E1               	movwf	(___atdiv@quotient+2)^(0+128)
  5564     0F43  0858               	movf	(___atdiv@divisor+2)^(0+128),w
  5565     0F44  0457               	iorwf	(___atdiv@divisor+1)^(0+128),w
  5566     0F45  0456               	iorwf	___atdiv@divisor^(0+128),w
  5567     0F46  1903               	skipnz
  5568     0F47  2F7A               	goto	l2398
  5569     0F48  01DD               	clrf	___atdiv@counter^(0+128)
  5570     0F49  0ADD               	incf	___atdiv@counter^(0+128),f
  5571     0F4A                     l2384:
  5572     0F4A  1BD8               	btfsc	(___atdiv@divisor+2)^(0+128),7
  5573     0F4B  2F57               	goto	l2386
  5574     0F4C  3001               	movlw	1
  5575     0F4D                     u1695:
  5576     0F4D  35D6               	lslf	___atdiv@divisor^(0+128),f
  5577     0F4E  0DD7               	rlf	(___atdiv@divisor+1)^(0+128),f
  5578     0F4F  0DD8               	rlf	(___atdiv@divisor+2)^(0+128),f
  5579     0F50  0B89               	decfsz	9,f
  5580     0F51  2F4D               	goto	u1695
  5581     0F52  3001               	movlw	1
  5582     0F53  00DC               	movwf	??___atdiv^(0+128)
  5583     0F54  085C               	movf	??___atdiv^(0+128),w
  5584     0F55  07DD               	addwf	___atdiv@counter^(0+128),f
  5585     0F56  2F4A               	goto	l2384
  5586     0F57                     l2386:
  5587     0F57  3001               	movlw	1
  5588     0F58                     u1715:
  5589     0F58  35DF               	lslf	___atdiv@quotient^(0+128),f
  5590     0F59  0DE0               	rlf	(___atdiv@quotient+1)^(0+128),f
  5591     0F5A  0DE1               	rlf	(___atdiv@quotient+2)^(0+128),f
  5592     0F5B  0B89               	decfsz	9,f
  5593     0F5C  2F58               	goto	u1715
  5594     0F5D  0858               	movf	(___atdiv@divisor+2)^(0+128),w
  5595     0F5E  025B               	subwf	(___atdiv@dividend+2)^(0+128),w
  5596     0F5F  1D03               	skipz
  5597     0F60  2F67               	goto	u1725
  5598     0F61  0857               	movf	(___atdiv@divisor+1)^(0+128),w
  5599     0F62  025A               	subwf	(___atdiv@dividend+1)^(0+128),w
  5600     0F63  1D03               	skipz
  5601     0F64  2F67               	goto	u1725
  5602     0F65  0856               	movf	___atdiv@divisor^(0+128),w
  5603     0F66  0259               	subwf	___atdiv@dividend^(0+128),w
  5604     0F67                     u1725:
  5605     0F67  1C03               	skipc
  5606     0F68  2F70               	goto	l2394
  5607     0F69  0856               	movf	___atdiv@divisor^(0+128),w
  5608     0F6A  02D9               	subwf	___atdiv@dividend^(0+128),f
  5609     0F6B  0857               	movf	(___atdiv@divisor+1)^(0+128),w
  5610     0F6C  3BDA               	subwfb	(___atdiv@dividend+1)^(0+128),f
  5611     0F6D  0858               	movf	(___atdiv@divisor+2)^(0+128),w
  5612     0F6E  3BDB               	subwfb	(___atdiv@dividend+2)^(0+128),f
  5613     0F6F  145F               	bsf	___atdiv@quotient^(0+128),0
  5614     0F70                     l2394:
  5615     0F70  3001               	movlw	1
  5616     0F71                     u1735:
  5617     0F71  36D8               	lsrf	(___atdiv@divisor+2)^(0+128),f
  5618     0F72  0CD7               	rrf	(___atdiv@divisor+1)^(0+128),f
  5619     0F73  0CD6               	rrf	___atdiv@divisor^(0+128),f
  5620     0F74  0B89               	decfsz	9,f
  5621     0F75  2F71               	goto	u1735
  5622     0F76  3001               	movlw	1
  5623     0F77  02DD               	subwf	___atdiv@counter^(0+128),f
  5624     0F78  1D03               	btfss	3,2
  5625     0F79  2F57               	goto	l2386
  5626     0F7A                     l2398:
  5627     0F7A  085E               	movf	___atdiv@sign^(0+128),w
  5628     0F7B  1903               	btfsc	3,2
  5629     0F7C  2F85               	goto	l2402
  5630     0F7D  09DF               	comf	___atdiv@quotient^(0+128),f
  5631     0F7E  09E0               	comf	(___atdiv@quotient+1)^(0+128),f
  5632     0F7F  09E1               	comf	(___atdiv@quotient+2)^(0+128),f
  5633     0F80  0ADF               	incf	___atdiv@quotient^(0+128),f
  5634     0F81  1903               	skipnz
  5635     0F82  0AE0               	incf	(___atdiv@quotient+1)^(0+128),f
  5636     0F83  1903               	skipnz
  5637     0F84  0AE1               	incf	(___atdiv@quotient+2)^(0+128),f
  5638     0F85                     l2402:
  5639     0F85  085F               	movf	___atdiv@quotient^(0+128),w
  5640     0F86  00D6               	movwf	?___atdiv^(0+128)
  5641     0F87  0860               	movf	(___atdiv@quotient+1)^(0+128),w
  5642     0F88  00D7               	movwf	(?___atdiv+1)^(0+128)
  5643     0F89  0861               	movf	(___atdiv@quotient+2)^(0+128),w
  5644     0F8A  00D8               	movwf	(?___atdiv+2)^(0+128)
  5645     0F8B  0008               	return
  5646     0F8C                     __end_of___atdiv:
  5647                           
  5648                           	psect	text13
  5649     0379                     __ptext13:	
  5650 ;; *************** function _fluxcontrol *****************
  5651 ;; Defined at:
  5652 ;;		line 167 in file "main.c"
  5653 ;; Parameters:    Size  Location     Type
  5654 ;;		None
  5655 ;; Auto vars:     Size  Location     Type
  5656 ;;		None
  5657 ;; Return value:  Size  Location     Type
  5658 ;;                  1    wreg      void 
  5659 ;; Registers used:
  5660 ;;		wreg, status,2, status,0, pclath, cstack
  5661 ;; Tracked objects:
  5662 ;;		On entry : 1F/1
  5663 ;;		On exit  : 0/0
  5664 ;;		Unchanged: 0/0
  5665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5666 ;;      Params:         0       0       0       0       0       0
  5667 ;;      Locals:         0       0       0       0       0       0
  5668 ;;      Temps:          0       0       6       0       0       0
  5669 ;;      Totals:         0       0       6       0       0       0
  5670 ;;Total ram usage:        6 bytes
  5671 ;; Hardware stack levels used: 1
  5672 ;; Hardware stack levels required when called: 6
  5673 ;; This function calls:
  5674 ;;		___tmul
  5675 ;; This function is called by:
  5676 ;;		_controlchoose
  5677 ;; This function uses a non-reentrant model
  5678 ;;
  5679                           
  5680     0379                     _fluxcontrol:	
  5681                           ;psect for function _fluxcontrol
  5682                           
  5683                           
  5684                           ;main.c: 168:     error = (ballset-balldist)*100;
  5685                           
  5686                           ;incstack = 0
  5687                           ; Regs used in _fluxcontrol: [wreg+status,2+status,0+pclath+cstack]
  5688     0379  082A               	movf	_balldist^(0+128),w
  5689     037A  0020               	movlb	0	; select bank0
  5690     037B  025E               	subwf	_ballset,w
  5691     037C  0021               	movlb	1	; select bank1
  5692     037D  00D6               	movwf	??_fluxcontrol^(0+128)
  5693     037E  0020               	movlb	0	; select bank0
  5694     037F  085F               	movf	_ballset+1,w
  5695     0380  0021               	movlb	1	; select bank1
  5696     0381  00D7               	movwf	(??_fluxcontrol^(0+128)+1)
  5697     0382  082B               	movf	(_balldist+1)^(0+128),w
  5698     0383  1C03               	skipc
  5699     0384  0F2B               	incfsz	(_balldist+1)^(0+128),w
  5700     0385  2B87               	goto	u2531
  5701     0386  2B88               	goto	u2532
  5702     0387                     u2531:
  5703     0387  02D7               	subwf	(??_fluxcontrol^(0+128)+1),f
  5704     0388                     u2532:
  5705     0388  0020               	movlb	0	; select bank0
  5706     0389  0860               	movf	_ballset+2,w
  5707     038A  0021               	movlb	1	; select bank1
  5708     038B  00D8               	movwf	(??_fluxcontrol^(0+128)+2)
  5709     038C  082C               	movf	(_balldist+2)^(0+128),w
  5710     038D  1C03               	skipc
  5711     038E  0F2C               	incfsz	(_balldist+2)^(0+128),w
  5712     038F  2B91               	goto	u2533
  5713     0390  2B92               	goto	u2534
  5714     0391                     u2533:
  5715     0391  02D8               	subwf	(??_fluxcontrol^(0+128)+2),f
  5716     0392                     u2534:
  5717     0392  0856               	movf	??_fluxcontrol^(0+128),w
  5718     0393  00CD               	movwf	___tmul@multiplier^(0+128)
  5719     0394  0857               	movf	(??_fluxcontrol+1)^(0+128),w
  5720     0395  00CE               	movwf	(___tmul@multiplier+1)^(0+128)
  5721     0396  0858               	movf	(??_fluxcontrol+2)^(0+128),w
  5722     0397  00CF               	movwf	(___tmul@multiplier+2)^(0+128)
  5723     0398  3064               	movlw	100
  5724     0399  00D0               	movwf	___tmul@multiplicand^(0+128)
  5725     039A  3000               	movlw	0
  5726     039B  00D1               	movwf	(___tmul@multiplicand+1)^(0+128)
  5727     039C  3000               	movlw	0
  5728     039D  00D2               	movwf	(___tmul@multiplicand+2)^(0+128)
  5729     039E  318D  2547  3183   	fcall	___tmul
  5730     03A1  084D               	movf	?___tmul^(0+128),w
  5731     03A2  00B0               	movwf	_error^(0+128)
  5732     03A3  084E               	movf	(?___tmul+1)^(0+128),w
  5733     03A4  00B1               	movwf	(_error+1)^(0+128)
  5734     03A5  084F               	movf	(?___tmul+2)^(0+128),w
  5735     03A6  00B2               	movwf	(_error+2)^(0+128)
  5736                           
  5737                           ;main.c: 169:     if(error > 150 || error < -150){
  5738     03A7  1BB2               	btfsc	(_error+2)^(0+128),7
  5739     03A8  2BB3               	goto	l2850
  5740     03A9  0832               	movf	(_error+2)^(0+128),w
  5741     03AA  1D03               	btfss	3,2
  5742     03AB  2BBE               	goto	l2852
  5743     03AC  0831               	movf	(_error+1)^(0+128),w
  5744     03AD  1D03               	btfss	3,2
  5745     03AE  2BBE               	goto	l2852
  5746     03AF  3097               	movlw	151
  5747     03B0  0230               	subwf	_error^(0+128),w
  5748     03B1  1803               	btfsc	3,0
  5749     03B2  2BBE               	goto	l2852
  5750     03B3                     l2850:
  5751     03B3  0021               	movlb	1	; select bank1
  5752     03B4  1FB2               	btfss	(_error+2)^(0+128),7
  5753     03B5  0008               	return
  5754     03B6  306A               	movlw	106
  5755     03B7  0230               	subwf	_error^(0+128),w
  5756     03B8  30FF               	movlw	255
  5757     03B9  3B31               	subwfb	(_error+1)^(0+128),w
  5758     03BA  30FF               	movlw	255
  5759     03BB  3B32               	subwfb	(_error+2)^(0+128),w
  5760     03BC  1803               	btfsc	3,0
  5761     03BD  0008               	return
  5762     03BE                     l2852:
  5763                           
  5764                           ;main.c: 170:         outpre = (((kpf*error +kdf*(error-errorp)))+outpre);
  5765     03BE  0021               	movlb	1	; select bank1
  5766     03BF  0824               	movf	_outpre^(0+128),w
  5767     03C0  00D6               	movwf	??_fluxcontrol^(0+128)
  5768     03C1  0825               	movf	(_outpre+1)^(0+128),w
  5769     03C2  00D7               	movwf	(??_fluxcontrol^(0+128)+1)
  5770     03C3  0826               	movf	(_outpre+2)^(0+128),w
  5771     03C4  00D8               	movwf	(??_fluxcontrol^(0+128)+2)
  5772     03C5  082D               	movf	_errorp^(0+128),w
  5773     03C6  00CD               	movwf	___tmul@multiplier^(0+128)
  5774     03C7  082E               	movf	(_errorp+1)^(0+128),w
  5775     03C8  00CE               	movwf	(___tmul@multiplier+1)^(0+128)
  5776     03C9  082F               	movf	(_errorp+2)^(0+128),w
  5777     03CA  00CF               	movwf	(___tmul@multiplier+2)^(0+128)
  5778     03CB  3093               	movlw	147
  5779     03CC  00D0               	movwf	___tmul@multiplicand^(0+128)
  5780     03CD  30FF               	movlw	255
  5781     03CE  00D1               	movwf	(___tmul@multiplicand+1)^(0+128)
  5782     03CF  30FF               	movlw	255
  5783     03D0  00D2               	movwf	(___tmul@multiplicand+2)^(0+128)
  5784     03D1  318D  2547  3183   	fcall	___tmul
  5785     03D4  084D               	movf	?___tmul^(0+128),w
  5786     03D5  00D9               	movwf	(??_fluxcontrol+3)^(0+128)
  5787     03D6  084E               	movf	(?___tmul+1)^(0+128),w
  5788     03D7  00DA               	movwf	((??_fluxcontrol+3)^(0+128)+1)
  5789     03D8  084F               	movf	(?___tmul+2)^(0+128),w
  5790     03D9  00DB               	movwf	((??_fluxcontrol+3)^(0+128)+2)
  5791     03DA  0830               	movf	_error^(0+128),w
  5792     03DB  00CD               	movwf	___tmul@multiplier^(0+128)
  5793     03DC  0831               	movf	(_error+1)^(0+128),w
  5794     03DD  00CE               	movwf	(___tmul@multiplier+1)^(0+128)
  5795     03DE  0832               	movf	(_error+2)^(0+128),w
  5796     03DF  00CF               	movwf	(___tmul@multiplier+2)^(0+128)
  5797     03E0  3082               	movlw	130
  5798     03E1  00D0               	movwf	___tmul@multiplicand^(0+128)
  5799     03E2  3000               	movlw	0
  5800     03E3  00D1               	movwf	(___tmul@multiplicand+1)^(0+128)
  5801     03E4  3000               	movlw	0
  5802     03E5  00D2               	movwf	(___tmul@multiplicand+2)^(0+128)
  5803     03E6  318D  2547  3183   	fcall	___tmul
  5804     03E9  084D               	movf	?___tmul^(0+128),w
  5805     03EA  07D9               	addwf	(??_fluxcontrol+3)^(0+128),f
  5806     03EB  084E               	movf	(?___tmul+1)^(0+128),w
  5807     03EC  3DDA               	addwfc	((??_fluxcontrol+3)^(0+128)+1),f
  5808     03ED  084F               	movf	(?___tmul+2)^(0+128),w
  5809     03EE  3DDB               	addwfc	((??_fluxcontrol+3)^(0+128)+2),f
  5810     03EF  0859               	movf	(??_fluxcontrol+3)^(0+128),w
  5811     03F0  07D6               	addwf	??_fluxcontrol^(0+128),f
  5812     03F1  085A               	movf	(??_fluxcontrol+4)^(0+128),w
  5813     03F2  3DD7               	addwfc	(??_fluxcontrol^(0+128)+1),f
  5814     03F3  085B               	movf	(??_fluxcontrol+5)^(0+128),w
  5815     03F4  3DD8               	addwfc	(??_fluxcontrol^(0+128)+2),f
  5816     03F5  0856               	movf	??_fluxcontrol^(0+128),w
  5817     03F6  00A4               	movwf	_outpre^(0+128)
  5818     03F7  0857               	movf	(??_fluxcontrol+1)^(0+128),w
  5819     03F8  00A5               	movwf	(_outpre+1)^(0+128)
  5820     03F9  0858               	movf	(??_fluxcontrol+2)^(0+128),w
  5821     03FA  00A6               	movwf	(_outpre+2)^(0+128)
  5822                           
  5823                           ;main.c: 171:         if (outpre > 0) output = 0;
  5824     03FB  1BA6               	btfsc	(_outpre+2)^(0+128),7
  5825     03FC  2C0B               	goto	l2858
  5826     03FD  0826               	movf	(_outpre+2)^(0+128),w
  5827     03FE  1D03               	btfss	3,2
  5828     03FF  2C07               	goto	l2856
  5829     0400  0825               	movf	(_outpre+1)^(0+128),w
  5830     0401  1D03               	btfss	3,2
  5831     0402  2C07               	goto	l2856
  5832     0403  3001               	movlw	1
  5833     0404  0224               	subwf	_outpre^(0+128),w
  5834     0405  1C03               	btfss	3,0
  5835     0406  2C0B               	goto	l2858
  5836     0407                     l2856:
  5837     0407  0021               	movlb	1	; select bank1
  5838     0408  01C1               	clrf	_output^(0+128)
  5839     0409  01C2               	clrf	(_output+1)^(0+128)
  5840     040A  2C1B               	goto	l2864
  5841     040B                     l2858:
  5842     040B  0021               	movlb	1	; select bank1
  5843     040C  1FA6               	btfss	(_outpre+2)^(0+128),7
  5844     040D  2C07               	goto	l2856
  5845     040E  30C0               	movlw	192
  5846     040F  0224               	subwf	_outpre^(0+128),w
  5847     0410  3063               	movlw	99
  5848     0411  3B25               	subwfb	(_outpre+1)^(0+128),w
  5849     0412  30FF               	movlw	255
  5850     0413  3B26               	subwfb	(_outpre+2)^(0+128),w
  5851     0414  1803               	btfsc	3,0
  5852     0415  2C07               	goto	l2856
  5853     0416  3090               	movlw	144
  5854     0417  0021               	movlb	1	; select bank1
  5855     0418  00C1               	movwf	_output^(0+128)
  5856     0419  3001               	movlw	1
  5857     041A  00C2               	movwf	(_output^(0+128)+1)
  5858     041B                     l2864:
  5859                           
  5860                           ;main.c: 174:         if (outpre>800){
  5861     041B  1BA6               	btfsc	(_outpre+2)^(0+128),7
  5862     041C  2C2D               	goto	l2868
  5863     041D  0826               	movf	(_outpre+2)^(0+128),w
  5864     041E  1D03               	btfss	3,2
  5865     041F  2C26               	goto	l2866
  5866     0420  3021               	movlw	33
  5867     0421  0224               	subwf	_outpre^(0+128),w
  5868     0422  3003               	movlw	3
  5869     0423  3B25               	subwfb	(_outpre+1)^(0+128),w
  5870     0424  1C03               	btfss	3,0
  5871     0425  2C2D               	goto	l2868
  5872     0426                     l2866:
  5873                           
  5874                           ;main.c: 175:             outpre = 800;
  5875     0426  3020               	movlw	32
  5876     0427  0021               	movlb	1	; select bank1
  5877     0428  00A4               	movwf	_outpre^(0+128)
  5878     0429  3003               	movlw	3
  5879     042A  00A5               	movwf	(_outpre+1)^(0+128)
  5880     042B  3000               	movlw	0
  5881     042C  2C3E               	goto	L7
  5882     042D                     l2868:	
  5883                           ;main.c: 176:         } else if (outpre < -45000){
  5884                           
  5885     042D  0021               	movlb	1	; select bank1
  5886     042E  1FA6               	btfss	(_outpre+2)^(0+128),7
  5887     042F  2C3F               	goto	l712
  5888     0430  3038               	movlw	56
  5889     0431  0224               	subwf	_outpre^(0+128),w
  5890     0432  3050               	movlw	80
  5891     0433  3B25               	subwfb	(_outpre+1)^(0+128),w
  5892     0434  30FF               	movlw	255
  5893     0435  3B26               	subwfb	(_outpre+2)^(0+128),w
  5894     0436  1803               	btfsc	3,0
  5895     0437  2C3F               	goto	l712
  5896                           
  5897                           ;main.c: 177:             outpre = -45000;
  5898     0438  3038               	movlw	56
  5899     0439  0021               	movlb	1	; select bank1
  5900     043A  00A4               	movwf	_outpre^(0+128)
  5901     043B  3050               	movlw	80
  5902     043C  00A5               	movwf	(_outpre+1)^(0+128)
  5903     043D  30FF               	movlw	255
  5904     043E                     L7:
  5905     043E  00A6               	movwf	(_outpre+2)^(0+128)
  5906     043F                     l712:
  5907                           
  5908                           ;main.c: 179:         errorp = error;
  5909     043F  0021               	movlb	1	; select bank1
  5910     0440  0830               	movf	_error^(0+128),w
  5911     0441  00AD               	movwf	_errorp^(0+128)
  5912     0442  0831               	movf	(_error+1)^(0+128),w
  5913     0443  00AE               	movwf	(_errorp+1)^(0+128)
  5914     0444  0832               	movf	(_error+2)^(0+128),w
  5915     0445  00AF               	movwf	(_errorp+2)^(0+128)
  5916     0446  0008               	return
  5917     0447                     __end_of_fluxcontrol:
  5918                           
  5919                           	psect	text14
  5920     0D47                     __ptext14:	
  5921 ;; *************** function ___tmul *****************
  5922 ;; Defined at:
  5923 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul24.c"
  5924 ;; Parameters:    Size  Location     Type
  5925 ;;  multiplier      3    0[BANK1 ] unsigned um
  5926 ;;  multiplicand    3    3[BANK1 ] unsigned um
  5927 ;; Auto vars:     Size  Location     Type
  5928 ;;  product         3    6[BANK1 ] unsigned um
  5929 ;; Return value:  Size  Location     Type
  5930 ;;                  3    0[BANK1 ] unsigned um
  5931 ;; Registers used:
  5932 ;;		wreg, status,2, status,0
  5933 ;; Tracked objects:
  5934 ;;		On entry : 1F/1
  5935 ;;		On exit  : 1F/1
  5936 ;;		Unchanged: 0/0
  5937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5938 ;;      Params:         0       0       6       0       0       0
  5939 ;;      Locals:         0       0       3       0       0       0
  5940 ;;      Temps:          0       0       0       0       0       0
  5941 ;;      Totals:         0       0       9       0       0       0
  5942 ;;Total ram usage:        9 bytes
  5943 ;; Hardware stack levels used: 1
  5944 ;; Hardware stack levels required when called: 5
  5945 ;; This function calls:
  5946 ;;		Nothing
  5947 ;; This function is called by:
  5948 ;;		_fluxcontrol
  5949 ;;		_pwmcontrol
  5950 ;; This function uses a non-reentrant model
  5951 ;;
  5952                           
  5953     0D47                     ___tmul:	
  5954                           ;psect for function ___tmul
  5955                           
  5956                           
  5957                           ;incstack = 0
  5958                           ; Regs used in ___tmul: [wreg+status,2+status,0]
  5959     0D47  3000               	movlw	0
  5960     0D48  00D3               	movwf	___tmul@product^(0+128)
  5961     0D49  3000               	movlw	0
  5962     0D4A  00D4               	movwf	(___tmul@product+1)^(0+128)
  5963     0D4B  3000               	movlw	0
  5964     0D4C  00D5               	movwf	(___tmul@product+2)^(0+128)
  5965     0D4D                     l2354:
  5966     0D4D  1C4D               	btfss	___tmul@multiplier^(0+128),0
  5967     0D4E  2D55               	goto	l2358
  5968     0D4F  0850               	movf	___tmul@multiplicand^(0+128),w
  5969     0D50  07D3               	addwf	___tmul@product^(0+128),f
  5970     0D51  0851               	movf	(___tmul@multiplicand+1)^(0+128),w
  5971     0D52  3DD4               	addwfc	(___tmul@product+1)^(0+128),f
  5972     0D53  0852               	movf	(___tmul@multiplicand+2)^(0+128),w
  5973     0D54  3DD5               	addwfc	(___tmul@product+2)^(0+128),f
  5974     0D55                     l2358:
  5975     0D55  3001               	movlw	1
  5976     0D56                     u1635:
  5977     0D56  35D0               	lslf	___tmul@multiplicand^(0+128),f
  5978     0D57  0DD1               	rlf	(___tmul@multiplicand+1)^(0+128),f
  5979     0D58  0DD2               	rlf	(___tmul@multiplicand+2)^(0+128),f
  5980     0D59  0B89               	decfsz	9,f
  5981     0D5A  2D56               	goto	u1635
  5982     0D5B  3001               	movlw	1
  5983     0D5C                     u1645:
  5984     0D5C  36CF               	lsrf	(___tmul@multiplier+2)^(0+128),f
  5985     0D5D  0CCE               	rrf	(___tmul@multiplier+1)^(0+128),f
  5986     0D5E  0CCD               	rrf	___tmul@multiplier^(0+128),f
  5987     0D5F  0B89               	decfsz	9,f
  5988     0D60  2D5C               	goto	u1645
  5989     0D61  084F               	movf	(___tmul@multiplier+2)^(0+128),w
  5990     0D62  044E               	iorwf	(___tmul@multiplier+1)^(0+128),w
  5991     0D63  044D               	iorwf	___tmul@multiplier^(0+128),w
  5992     0D64  1D03               	skipz
  5993     0D65  2D4D               	goto	l2354
  5994     0D66  0853               	movf	___tmul@product^(0+128),w
  5995     0D67  00CD               	movwf	?___tmul^(0+128)
  5996     0D68  0854               	movf	(___tmul@product+1)^(0+128),w
  5997     0D69  00CE               	movwf	(?___tmul+1)^(0+128)
  5998     0D6A  0855               	movf	(___tmul@product+2)^(0+128),w
  5999     0D6B  00CF               	movwf	(?___tmul+2)^(0+128)
  6000     0D6C  0008               	return
  6001     0D6D                     __end_of___tmul:
  6002                           
  6003                           	psect	text15
  6004     0B54                     __ptext15:	
  6005 ;; *************** function _TMR4_StartTimer *****************
  6006 ;; Defined at:
  6007 ;;		line 79 in file "mcc_generated_files/tmr4.c"
  6008 ;; Parameters:    Size  Location     Type
  6009 ;;		None
  6010 ;; Auto vars:     Size  Location     Type
  6011 ;;		None
  6012 ;; Return value:  Size  Location     Type
  6013 ;;                  1    wreg      void 
  6014 ;; Registers used:
  6015 ;;		None
  6016 ;; Tracked objects:
  6017 ;;		On entry : 0/1
  6018 ;;		On exit  : 1F/8
  6019 ;;		Unchanged: 0/0
  6020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6021 ;;      Params:         0       0       0       0       0       0
  6022 ;;      Locals:         0       0       0       0       0       0
  6023 ;;      Temps:          0       0       0       0       0       0
  6024 ;;      Totals:         0       0       0       0       0       0
  6025 ;;Total ram usage:        0 bytes
  6026 ;; Hardware stack levels used: 1
  6027 ;; Hardware stack levels required when called: 5
  6028 ;; This function calls:
  6029 ;;		Nothing
  6030 ;; This function is called by:
  6031 ;;		_controlchoose
  6032 ;; This function uses a non-reentrant model
  6033 ;;
  6034                           
  6035     0B54                     _TMR4_StartTimer:	
  6036                           ;psect for function _TMR4_StartTimer
  6037                           
  6038                           
  6039                           ;mcc_generated_files/tmr4.c: 82:     T4CONbits.TMR4ON = 1;
  6040                           
  6041                           ;incstack = 0
  6042                           ; Regs used in _TMR4_StartTimer: []
  6043     0B54  0028               	movlb	8	; select bank8
  6044     0B55  1517               	bsf	23,2	;volatile
  6045     0B56  0008               	return
  6046     0B57                     __end_of_TMR4_StartTimer:
  6047                           
  6048                           	psect	text16
  6049     0513                     __ptext16:	
  6050 ;; *************** function _analisa_Rx *****************
  6051 ;; Defined at:
  6052 ;;		line 213 in file "main.c"
  6053 ;; Parameters:    Size  Location     Type
  6054 ;;		None
  6055 ;; Auto vars:     Size  Location     Type
  6056 ;;		None
  6057 ;; Return value:  Size  Location     Type
  6058 ;;                  1    wreg      void 
  6059 ;; Registers used:
  6060 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6061 ;; Tracked objects:
  6062 ;;		On entry : 1F/1
  6063 ;;		On exit  : 1F/1
  6064 ;;		Unchanged: 0/0
  6065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6066 ;;      Params:         0       0       0       0       0       0
  6067 ;;      Locals:         0       0       0       0       0       0
  6068 ;;      Temps:          0       0       0       0       0       0
  6069 ;;      Totals:         0       0       0       0       0       0
  6070 ;;Total ram usage:        0 bytes
  6071 ;; Hardware stack levels used: 1
  6072 ;; Hardware stack levels required when called: 6
  6073 ;; This function calls:
  6074 ;;		_EPWM1_LoadDutyValue
  6075 ;; This function is called by:
  6076 ;;		_main
  6077 ;; This function uses a non-reentrant model
  6078 ;;
  6079                           
  6080     0513                     _analisa_Rx:	
  6081                           ;psect for function _analisa_Rx
  6082                           
  6083                           
  6084                           ;main.c: 214:     switch(bufferRx[0]){
  6085                           
  6086                           ;incstack = 0
  6087                           ; Regs used in _analisa_Rx: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6088     0513  2DCF               	goto	l3066
  6089     0514                     l3010:
  6090                           
  6091                           ;main.c: 216:             if(countRx==7){
  6092     0514  3007               	movlw	7
  6093     0515  0021               	movlb	1	; select bank1
  6094     0516  064A               	xorwf	_countRx^(0+128),w
  6095     0517  1D03               	btfss	3,2
  6096     0518  2D46               	goto	l3026
  6097                           
  6098                           ;main.c: 217:                 controlchoice = bufferRx[0];
  6099     0519  0020               	movlb	0	; select bank0
  6100     051A  0853               	movf	_bufferRx,w
  6101     051B  0021               	movlb	1	; select bank1
  6102     051C  00CB               	movwf	_controlchoice^(0+128)
  6103                           
  6104                           ;main.c: 218:                 vRx.vH = bufferRx[3];
  6105     051D  0020               	movlb	0	; select bank0
  6106     051E  0856               	movf	_bufferRx+3,w
  6107     051F  0021               	movlb	1	; select bank1
  6108     0520  00BE               	movwf	(_vRx^(0+128)+1)
  6109                           
  6110                           ;main.c: 219:                 vRx.vL = bufferRx[4];
  6111     0521  0020               	movlb	0	; select bank0
  6112     0522  0857               	movf	_bufferRx+4,w
  6113     0523  0021               	movlb	1	; select bank1
  6114     0524  00BD               	movwf	_vRx^(0+128)
  6115                           
  6116                           ;main.c: 220:                 sp_position = vRx.v;
  6117     0525  083E               	movf	(_vRx+1)^(0+128),w
  6118     0526  00B8               	movwf	(_sp_position+1)^(0+128)
  6119     0527  083D               	movf	_vRx^(0+128),w
  6120     0528  00B7               	movwf	_sp_position^(0+128)
  6121                           
  6122                           ;main.c: 221:                 if(sp_position > 420 ) sp_position = 420;
  6123     0529  3001               	movlw	1
  6124     052A  0238               	subwf	(_sp_position+1)^(0+128),w
  6125     052B  30A5               	movlw	165
  6126     052C  1903               	skipnz
  6127     052D  0237               	subwf	_sp_position^(0+128),w
  6128     052E  1C03               	skipc
  6129     052F  2D34               	goto	l3018
  6130     0530  30A4               	movlw	164
  6131     0531  00B7               	movwf	_sp_position^(0+128)
  6132     0532  3001               	movlw	1
  6133     0533  00B8               	movwf	(_sp_position^(0+128)+1)
  6134     0534                     l3018:
  6135                           
  6136                           ;main.c: 223:                 vRx.vH = bufferRx[5];
  6137     0534  0020               	movlb	0	; select bank0
  6138     0535  0858               	movf	_bufferRx+5,w
  6139     0536  0021               	movlb	1	; select bank1
  6140     0537  00BE               	movwf	(_vRx^(0+128)+1)
  6141                           
  6142                           ;main.c: 224:                 vRx.vL = bufferRx[6];
  6143     0538  0020               	movlb	0	; select bank0
  6144     0539  0859               	movf	_bufferRx+6,w
  6145     053A  0021               	movlb	1	; select bank1
  6146     053B  00BD               	movwf	_vRx^(0+128)
  6147                           
  6148                           ;main.c: 225:                 dc = vRx.v;
  6149     053C  083E               	movf	(_vRx+1)^(0+128),w
  6150     053D  00BC               	movwf	(_dc+1)^(0+128)
  6151     053E  083D               	movf	_vRx^(0+128),w
  6152     053F  00BB               	movwf	_dc^(0+128)
  6153                           
  6154                           ;main.c: 226:                 EPWM1_LoadDutyValue(dc);
  6155     0540  083C               	movf	(_dc+1)^(0+128),w
  6156     0541  00CE               	movwf	(EPWM1_LoadDutyValue@dutyValue+1)^(0+128)
  6157     0542  083B               	movf	_dc^(0+128),w
  6158     0543  00CD               	movwf	EPWM1_LoadDutyValue@dutyValue^(0+128)
  6159     0544  318C  24C9         	fcall	_EPWM1_LoadDutyValue
  6160     0546                     l3026:
  6161                           
  6162                           ;main.c: 228:             countRx = 0;
  6163     0546  0021               	movlb	1	; select bank1
  6164     0547  01CA               	clrf	_countRx^(0+128)
  6165                           
  6166                           ;main.c: 229:             break;
  6167     0548  0008               	return
  6168     0549                     l3028:
  6169                           
  6170                           ;main.c: 231:             if(countRx==7){
  6171     0549  3007               	movlw	7
  6172     054A  0021               	movlb	1	; select bank1
  6173     054B  064A               	xorwf	_countRx^(0+128),w
  6174     054C  1D03               	btfss	3,2
  6175     054D  2D46               	goto	l3026
  6176                           
  6177                           ;main.c: 232:                 controlchoice = bufferRx[0];
  6178     054E  0020               	movlb	0	; select bank0
  6179     054F  0853               	movf	_bufferRx,w
  6180     0550  0021               	movlb	1	; select bank1
  6181     0551  00CB               	movwf	_controlchoice^(0+128)
  6182                           
  6183                           ;main.c: 233:                 vRx.vH = bufferRx[1];
  6184     0552  0020               	movlb	0	; select bank0
  6185     0553  0854               	movf	_bufferRx+1,w
  6186     0554  0021               	movlb	1	; select bank1
  6187     0555  00BE               	movwf	(_vRx^(0+128)+1)
  6188                           
  6189                           ;main.c: 234:                 vRx.vL = bufferRx[2];
  6190     0556  0020               	movlb	0	; select bank0
  6191     0557  0855               	movf	_bufferRx+2,w
  6192     0558  0021               	movlb	1	; select bank1
  6193     0559  00BD               	movwf	_vRx^(0+128)
  6194                           
  6195                           ;main.c: 235:                 sp_height = vRx.v;
  6196     055A  083E               	movf	(_vRx+1)^(0+128),w
  6197     055B  0020               	movlb	0	; select bank0
  6198     055C  00E4               	movwf	_sp_height+1
  6199     055D  0021               	movlb	1	; select bank1
  6200     055E  083D               	movf	_vRx^(0+128),w
  6201     055F  0020               	movlb	0	; select bank0
  6202     0560  00E3               	movwf	_sp_height
  6203                           
  6204                           ;main.c: 236:                 ballset = vRx.v ;
  6205     0561  0021               	movlb	1	; select bank1
  6206     0562  083D               	movf	_vRx^(0+128),w
  6207     0563  0020               	movlb	0	; select bank0
  6208     0564  00DE               	movwf	_ballset
  6209     0565  0021               	movlb	1	; select bank1
  6210     0566  083E               	movf	(_vRx+1)^(0+128),w
  6211     0567  0020               	movlb	0	; select bank0
  6212     0568  00DF               	movwf	_ballset+1
  6213     0569  01E0               	clrf	_ballset+2
  6214                           
  6215                           ;main.c: 237:                 vRx.vH = bufferRx[3];
  6216     056A  0856               	movf	_bufferRx+3,w
  6217     056B  0021               	movlb	1	; select bank1
  6218     056C  00BE               	movwf	(_vRx^(0+128)+1)
  6219                           
  6220                           ;main.c: 238:                 vRx.vL = bufferRx[4];
  6221     056D  0020               	movlb	0	; select bank0
  6222     056E  0857               	movf	_bufferRx+4,w
  6223     056F  0021               	movlb	1	; select bank1
  6224     0570  00BD               	movwf	_vRx^(0+128)
  6225                           
  6226                           ;main.c: 239:                 sp_position = vRx.v;
  6227     0571  083E               	movf	(_vRx+1)^(0+128),w
  6228     0572  00B8               	movwf	(_sp_position+1)^(0+128)
  6229     0573  083D               	movf	_vRx^(0+128),w
  6230     0574  00B7               	movwf	_sp_position^(0+128)
  6231                           
  6232                           ;main.c: 240:                 if(sp_position > 420 ) sp_position = 420;
  6233     0575  3001               	movlw	1
  6234     0576  0238               	subwf	(_sp_position+1)^(0+128),w
  6235     0577  30A5               	movlw	165
  6236     0578  1903               	skipnz
  6237     0579  0237               	subwf	_sp_position^(0+128),w
  6238     057A  1C03               	skipc
  6239     057B  2D80               	goto	l3036
  6240     057C  30A4               	movlw	164
  6241     057D  00B7               	movwf	_sp_position^(0+128)
  6242     057E  3001               	movlw	1
  6243     057F  00B8               	movwf	(_sp_position^(0+128)+1)
  6244     0580                     l3036:
  6245                           
  6246                           ;main.c: 242:                 outputsum = 0;
  6247     0580  3000               	movlw	0
  6248     0581  0021               	movlb	1	; select bank1
  6249     0582  00A7               	movwf	_outputsum^(0+128)
  6250     0583  3000               	movlw	0
  6251     0584  00A8               	movwf	(_outputsum+1)^(0+128)
  6252     0585  3000               	movlw	0
  6253     0586  00A9               	movwf	(_outputsum+2)^(0+128)
  6254                           
  6255                           ;main.c: 243:                 errorp=0;
  6256     0587  3000               	movlw	0
  6257     0588  00AD               	movwf	_errorp^(0+128)
  6258     0589  3000               	movlw	0
  6259     058A  00AE               	movwf	(_errorp+1)^(0+128)
  6260     058B  3000               	movlw	0
  6261     058C  00AF               	movwf	(_errorp+2)^(0+128)
  6262                           
  6263                           ;main.c: 244:                 error =0;
  6264     058D  3000               	movlw	0
  6265     058E  00B0               	movwf	_error^(0+128)
  6266     058F  3000               	movlw	0
  6267     0590  00B1               	movwf	(_error+1)^(0+128)
  6268     0591  3000               	movlw	0
  6269     0592  00B2               	movwf	(_error+2)^(0+128)
  6270     0593  2D46               	goto	l3026
  6271     0594                     l3044:
  6272                           
  6273                           ;main.c: 249:             if(countRx==7){
  6274     0594  3007               	movlw	7
  6275     0595  0021               	movlb	1	; select bank1
  6276     0596  064A               	xorwf	_countRx^(0+128),w
  6277     0597  1D03               	btfss	3,2
  6278     0598  2D46               	goto	l3026
  6279                           
  6280                           ;main.c: 250:                 controlchoice = bufferRx[0];
  6281     0599  0020               	movlb	0	; select bank0
  6282     059A  0853               	movf	_bufferRx,w
  6283     059B  0021               	movlb	1	; select bank1
  6284     059C  00CB               	movwf	_controlchoice^(0+128)
  6285                           
  6286                           ;main.c: 251:                 vRx.vH = bufferRx[1];
  6287     059D  0020               	movlb	0	; select bank0
  6288     059E  0854               	movf	_bufferRx+1,w
  6289     059F  0021               	movlb	1	; select bank1
  6290     05A0  00BE               	movwf	(_vRx^(0+128)+1)
  6291                           
  6292                           ;main.c: 252:                 vRx.vL = bufferRx[2];
  6293     05A1  0020               	movlb	0	; select bank0
  6294     05A2  0855               	movf	_bufferRx+2,w
  6295     05A3  0021               	movlb	1	; select bank1
  6296     05A4  00BD               	movwf	_vRx^(0+128)
  6297                           
  6298                           ;main.c: 253:                 sp_height = vRx.v;
  6299     05A5  083E               	movf	(_vRx+1)^(0+128),w
  6300     05A6  0020               	movlb	0	; select bank0
  6301     05A7  00E4               	movwf	_sp_height+1
  6302     05A8  0021               	movlb	1	; select bank1
  6303     05A9  083D               	movf	_vRx^(0+128),w
  6304     05AA  0020               	movlb	0	; select bank0
  6305     05AB  00E3               	movwf	_sp_height
  6306                           
  6307                           ;main.c: 254:                 ballset = vRx.v;
  6308     05AC  0021               	movlb	1	; select bank1
  6309     05AD  083D               	movf	_vRx^(0+128),w
  6310     05AE  0020               	movlb	0	; select bank0
  6311     05AF  00DE               	movwf	_ballset
  6312     05B0  0021               	movlb	1	; select bank1
  6313     05B1  083E               	movf	(_vRx+1)^(0+128),w
  6314     05B2  0020               	movlb	0	; select bank0
  6315     05B3  00DF               	movwf	_ballset+1
  6316     05B4  01E0               	clrf	_ballset+2
  6317                           
  6318                           ;main.c: 255:                 vRx.vH = bufferRx[5];
  6319     05B5  0858               	movf	_bufferRx+5,w
  6320     05B6  0021               	movlb	1	; select bank1
  6321     05B7  00BE               	movwf	(_vRx^(0+128)+1)
  6322                           
  6323                           ;main.c: 256:                 vRx.vL = bufferRx[6];
  6324     05B8  0020               	movlb	0	; select bank0
  6325     05B9  0859               	movf	_bufferRx+6,w
  6326     05BA  0021               	movlb	1	; select bank1
  6327     05BB  00BD               	movwf	_vRx^(0+128)
  6328                           
  6329                           ;main.c: 257:                 dc = vRx.v;
  6330     05BC  083E               	movf	(_vRx+1)^(0+128),w
  6331     05BD  00BC               	movwf	(_dc+1)^(0+128)
  6332     05BE  083D               	movf	_vRx^(0+128),w
  6333     05BF  00BB               	movwf	_dc^(0+128)
  6334                           
  6335                           ;main.c: 258:                 EPWM1_LoadDutyValue(dc);
  6336     05C0  083C               	movf	(_dc+1)^(0+128),w
  6337     05C1  00CE               	movwf	(EPWM1_LoadDutyValue@dutyValue+1)^(0+128)
  6338     05C2  083B               	movf	_dc^(0+128),w
  6339     05C3  00CD               	movwf	EPWM1_LoadDutyValue@dutyValue^(0+128)
  6340     05C4  318C  24C9  3185   	fcall	_EPWM1_LoadDutyValue
  6341     05C7  2D80               	goto	l3036
  6342     05C8                     l3058:
  6343                           
  6344                           ;main.c: 266:             if(countRx==7){
  6345     05C8  3007               	movlw	7
  6346     05C9  0021               	movlb	1	; select bank1
  6347     05CA  064A               	xorwf	_countRx^(0+128),w
  6348     05CB  1D03               	btfss	3,2
  6349     05CC  2D46               	goto	l3026
  6350     05CD  0001               	reset	;# 
  6351     05CE  2D46               	goto	l3026
  6352     05CF                     l3066:
  6353     05CF  0020               	movlb	0	; select bank0
  6354     05D0  0853               	movf	_bufferRx,w
  6355                           
  6356                           ; Switch size 1, requested type "simple"
  6357                           ; Number of cases is 4, Range of values is 0 to 3
  6358                           ; switch strategies available:
  6359                           ; Name         Instructions Cycles
  6360                           ; simple_byte           13     7 (average)
  6361                           ; direct_byte           14     6 (fixed)
  6362                           ; jumptable            260     6 (fixed)
  6363                           ;	Chosen strategy is simple_byte
  6364     05D1  3A00               	xorlw	0	; case 0
  6365     05D2  1903               	skipnz
  6366     05D3  2D14               	goto	l3010
  6367     05D4  3A01               	xorlw	1	; case 1
  6368     05D5  1903               	skipnz
  6369     05D6  2D49               	goto	l3028
  6370     05D7  3A03               	xorlw	3	; case 2
  6371     05D8  1903               	skipnz
  6372     05D9  2D94               	goto	l3044
  6373     05DA  3A01               	xorlw	1	; case 3
  6374     05DB  1903               	skipnz
  6375     05DC  2DC8               	goto	l3058
  6376     05DD  2D46               	goto	l3026
  6377     05DE  0008               	return
  6378     05DF                     __end_of_analisa_Rx:
  6379                           
  6380                           	psect	text17
  6381     0CC9                     __ptext17:	
  6382 ;; *************** function _EPWM1_LoadDutyValue *****************
  6383 ;; Defined at:
  6384 ;;		line 90 in file "mcc_generated_files/epwm1.c"
  6385 ;; Parameters:    Size  Location     Type
  6386 ;;  dutyValue       2    0[BANK1 ] unsigned short 
  6387 ;; Auto vars:     Size  Location     Type
  6388 ;;		None
  6389 ;; Return value:  Size  Location     Type
  6390 ;;                  1    wreg      void 
  6391 ;; Registers used:
  6392 ;;		wreg, status,2, status,0
  6393 ;; Tracked objects:
  6394 ;;		On entry : 1F/1
  6395 ;;		On exit  : 1F/5
  6396 ;;		Unchanged: 0/0
  6397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6398 ;;      Params:         0       0       2       0       0       0
  6399 ;;      Locals:         0       0       0       0       0       0
  6400 ;;      Temps:          0       0       2       0       0       0
  6401 ;;      Totals:         0       0       4       0       0       0
  6402 ;;Total ram usage:        4 bytes
  6403 ;; Hardware stack levels used: 1
  6404 ;; Hardware stack levels required when called: 5
  6405 ;; This function calls:
  6406 ;;		Nothing
  6407 ;; This function is called by:
  6408 ;;		_pwmcontrol
  6409 ;;		_analisa_Rx
  6410 ;; This function uses a non-reentrant model
  6411 ;;
  6412                           
  6413     0CC9                     _EPWM1_LoadDutyValue:	
  6414                           ;psect for function _EPWM1_LoadDutyValue
  6415                           
  6416                           
  6417                           ;mcc_generated_files/epwm1.c: 90: void EPWM1_LoadDutyValue(uint16_t dutyValue);mcc_gener
      +                          ated_files/epwm1.c: 91: {;mcc_generated_files/epwm1.c: 93:     CCPR1L = ((dutyValue & 0x
      +                          03FC)>>2);
  6418                           
  6419                           ;incstack = 0
  6420                           ; Regs used in _EPWM1_LoadDutyValue: [wreg+status,2+status,0]
  6421     0CC9  084E               	movf	(EPWM1_LoadDutyValue@dutyValue+1)^(0+128),w
  6422     0CCA  00D0               	movwf	(??_EPWM1_LoadDutyValue^(0+128)+1)
  6423     0CCB  084D               	movf	EPWM1_LoadDutyValue@dutyValue^(0+128),w
  6424     0CCC  00CF               	movwf	??_EPWM1_LoadDutyValue^(0+128)
  6425     0CCD  36D0               	lsrf	(??_EPWM1_LoadDutyValue^(0+128)+1),f
  6426     0CCE  0CCF               	rrf	??_EPWM1_LoadDutyValue^(0+128),f
  6427     0CCF  36D0               	lsrf	(??_EPWM1_LoadDutyValue^(0+128)+1),f
  6428     0CD0  0CCF               	rrf	??_EPWM1_LoadDutyValue^(0+128),f
  6429     0CD1  084F               	movf	??_EPWM1_LoadDutyValue^(0+128),w
  6430     0CD2  0025               	movlb	5	; select bank5
  6431     0CD3  0091               	movwf	17	;volatile
  6432                           
  6433                           ;mcc_generated_files/epwm1.c: 96:     CCP1CON = ((uint8_t)(CCP1CON & 0xCF) | ((dutyValue
      +                           & 0x0003)<<4));
  6434     0CD4  0021               	movlb	1	; select bank1
  6435     0CD5  084D               	movf	EPWM1_LoadDutyValue@dutyValue^(0+128),w
  6436     0CD6  3903               	andlw	3
  6437     0CD7  00CF               	movwf	??_EPWM1_LoadDutyValue^(0+128)
  6438     0CD8  3004               	movlw	4
  6439     0CD9                     u1595:
  6440     0CD9  35CF               	lslf	??_EPWM1_LoadDutyValue^(0+128),f
  6441     0CDA  0B89               	decfsz	9,f
  6442     0CDB  2CD9               	goto	u1595
  6443     0CDC  0025               	movlb	5	; select bank5
  6444     0CDD  0813               	movf	19,w	;volatile
  6445     0CDE  39CF               	andlw	207
  6446     0CDF  0021               	movlb	1	; select bank1
  6447     0CE0  044F               	iorwf	??_EPWM1_LoadDutyValue^(0+128),w
  6448     0CE1  0025               	movlb	5	; select bank5
  6449     0CE2  0093               	movwf	19	;volatile
  6450     0CE3  0008               	return
  6451     0CE4                     __end_of_EPWM1_LoadDutyValue:
  6452                           
  6453                           	psect	text18
  6454     0B80                     __ptext18:	
  6455 ;; *************** function _TMR6_WriteTimer *****************
  6456 ;; Defined at:
  6457 ;;		line 100 in file "mcc_generated_files/tmr6.c"
  6458 ;; Parameters:    Size  Location     Type
  6459 ;;  timerVal        1    wreg     unsigned char 
  6460 ;; Auto vars:     Size  Location     Type
  6461 ;;  timerVal        1    0[BANK1 ] unsigned char 
  6462 ;; Return value:  Size  Location     Type
  6463 ;;                  1    wreg      void 
  6464 ;; Registers used:
  6465 ;;		wreg
  6466 ;; Tracked objects:
  6467 ;;		On entry : 16/1
  6468 ;;		On exit  : 1F/8
  6469 ;;		Unchanged: 0/0
  6470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6471 ;;      Params:         0       0       0       0       0       0
  6472 ;;      Locals:         0       0       1       0       0       0
  6473 ;;      Temps:          0       0       0       0       0       0
  6474 ;;      Totals:         0       0       1       0       0       0
  6475 ;;Total ram usage:        1 bytes
  6476 ;; Hardware stack levels used: 1
  6477 ;; Hardware stack levels required when called: 5
  6478 ;; This function calls:
  6479 ;;		Nothing
  6480 ;; This function is called by:
  6481 ;;		_main
  6482 ;; This function uses a non-reentrant model
  6483 ;;
  6484                           
  6485     0B80                     _TMR6_WriteTimer:	
  6486                           ;psect for function _TMR6_WriteTimer
  6487                           
  6488                           
  6489                           ;incstack = 0
  6490                           ; Regs used in _TMR6_WriteTimer: [wreg]
  6491                           ;TMR6_WriteTimer@timerVal stored from wreg
  6492     0B80  0021               	movlb	1	; select bank1
  6493     0B81  00CD               	movwf	TMR6_WriteTimer@timerVal^(0+128)
  6494                           
  6495                           ;mcc_generated_files/tmr6.c: 100: void TMR6_WriteTimer(uint8_t timerVal);mcc_generated_f
      +                          iles/tmr6.c: 101: {;mcc_generated_files/tmr6.c: 103:     TMR6 = timerVal;
  6496     0B82  084D               	movf	TMR6_WriteTimer@timerVal^(0+128),w
  6497     0B83  0028               	movlb	8	; select bank8
  6498     0B84  009C               	movwf	28	;volatile
  6499     0B85  0008               	return
  6500     0B86                     __end_of_TMR6_WriteTimer:
  6501                           
  6502                           	psect	text19
  6503     0B7A                     __ptext19:	
  6504 ;; *************** function _TMR6_LoadPeriodRegister *****************
  6505 ;; Defined at:
  6506 ;;		line 106 in file "mcc_generated_files/tmr6.c"
  6507 ;; Parameters:    Size  Location     Type
  6508 ;;  periodVal       1    wreg     unsigned char 
  6509 ;; Auto vars:     Size  Location     Type
  6510 ;;  periodVal       1    0[BANK1 ] unsigned char 
  6511 ;; Return value:  Size  Location     Type
  6512 ;;                  1    wreg      void 
  6513 ;; Registers used:
  6514 ;;		wreg
  6515 ;; Tracked objects:
  6516 ;;		On entry : 1E/0
  6517 ;;		On exit  : 1F/8
  6518 ;;		Unchanged: 0/0
  6519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6520 ;;      Params:         0       0       0       0       0       0
  6521 ;;      Locals:         0       0       1       0       0       0
  6522 ;;      Temps:          0       0       0       0       0       0
  6523 ;;      Totals:         0       0       1       0       0       0
  6524 ;;Total ram usage:        1 bytes
  6525 ;; Hardware stack levels used: 1
  6526 ;; Hardware stack levels required when called: 5
  6527 ;; This function calls:
  6528 ;;		Nothing
  6529 ;; This function is called by:
  6530 ;;		_main
  6531 ;; This function uses a non-reentrant model
  6532 ;;
  6533                           
  6534     0B7A                     _TMR6_LoadPeriodRegister:	
  6535                           ;psect for function _TMR6_LoadPeriodRegister
  6536                           
  6537                           
  6538                           ;incstack = 0
  6539                           ; Regs used in _TMR6_LoadPeriodRegister: [wreg]
  6540                           ;TMR6_LoadPeriodRegister@periodVal stored from wreg
  6541     0B7A  0021               	movlb	1	; select bank1
  6542     0B7B  00CD               	movwf	TMR6_LoadPeriodRegister@periodVal^(0+128)
  6543                           
  6544                           ;mcc_generated_files/tmr6.c: 106: void TMR6_LoadPeriodRegister(uint8_t periodVal);mcc_ge
      +                          nerated_files/tmr6.c: 107: {;mcc_generated_files/tmr6.c: 108:    PR6 = periodVal;
  6545     0B7C  084D               	movf	TMR6_LoadPeriodRegister@periodVal^(0+128),w
  6546     0B7D  0028               	movlb	8	; select bank8
  6547     0B7E  009D               	movwf	29	;volatile
  6548     0B7F  0008               	return
  6549     0B80                     __end_of_TMR6_LoadPeriodRegister:
  6550                           
  6551                           	psect	text20
  6552     0B51                     __ptext20:	
  6553 ;; *************** function _TMR4_StopTimer *****************
  6554 ;; Defined at:
  6555 ;;		line 85 in file "mcc_generated_files/tmr4.c"
  6556 ;; Parameters:    Size  Location     Type
  6557 ;;		None
  6558 ;; Auto vars:     Size  Location     Type
  6559 ;;		None
  6560 ;; Return value:  Size  Location     Type
  6561 ;;                  1    wreg      void 
  6562 ;; Registers used:
  6563 ;;		None
  6564 ;; Tracked objects:
  6565 ;;		On entry : 1F/0
  6566 ;;		On exit  : 1F/8
  6567 ;;		Unchanged: 0/0
  6568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6569 ;;      Params:         0       0       0       0       0       0
  6570 ;;      Locals:         0       0       0       0       0       0
  6571 ;;      Temps:          0       0       0       0       0       0
  6572 ;;      Totals:         0       0       0       0       0       0
  6573 ;;Total ram usage:        0 bytes
  6574 ;; Hardware stack levels used: 1
  6575 ;; Hardware stack levels required when called: 5
  6576 ;; This function calls:
  6577 ;;		Nothing
  6578 ;; This function is called by:
  6579 ;;		_main
  6580 ;; This function uses a non-reentrant model
  6581 ;;
  6582                           
  6583     0B51                     _TMR4_StopTimer:	
  6584                           ;psect for function _TMR4_StopTimer
  6585                           
  6586                           
  6587                           ;mcc_generated_files/tmr4.c: 88:     T4CONbits.TMR4ON = 0;
  6588                           
  6589                           ;incstack = 0
  6590                           ; Regs used in _TMR4_StopTimer: []
  6591     0B51  0028               	movlb	8	; select bank8
  6592     0B52  1117               	bcf	23,2	;volatile
  6593     0B53  0008               	return
  6594     0B54                     __end_of_TMR4_StopTimer:
  6595                           
  6596                           	psect	text21
  6597     0B74                     __ptext21:	
  6598 ;; *************** function _TMR0_ReadTimer *****************
  6599 ;; Defined at:
  6600 ;;		line 80 in file "mcc_generated_files/tmr0.c"
  6601 ;; Parameters:    Size  Location     Type
  6602 ;;		None
  6603 ;; Auto vars:     Size  Location     Type
  6604 ;;  readVal         1    0[BANK1 ] unsigned char 
  6605 ;; Return value:  Size  Location     Type
  6606 ;;                  1    wreg      unsigned char 
  6607 ;; Registers used:
  6608 ;;		wreg
  6609 ;; Tracked objects:
  6610 ;;		On entry : 1D/0
  6611 ;;		On exit  : 1F/1
  6612 ;;		Unchanged: 0/0
  6613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6614 ;;      Params:         0       0       0       0       0       0
  6615 ;;      Locals:         0       0       1       0       0       0
  6616 ;;      Temps:          0       0       0       0       0       0
  6617 ;;      Totals:         0       0       1       0       0       0
  6618 ;;Total ram usage:        1 bytes
  6619 ;; Hardware stack levels used: 1
  6620 ;; Hardware stack levels required when called: 5
  6621 ;; This function calls:
  6622 ;;		Nothing
  6623 ;; This function is called by:
  6624 ;;		_main
  6625 ;; This function uses a non-reentrant model
  6626 ;;
  6627                           
  6628     0B74                     _TMR0_ReadTimer:	
  6629                           ;psect for function _TMR0_ReadTimer
  6630                           
  6631                           
  6632                           ;mcc_generated_files/tmr0.c: 82:     uint8_t readVal;;mcc_generated_files/tmr0.c: 84:   
      +                            readVal = TMR0;
  6633                           
  6634                           ;incstack = 0
  6635                           ; Regs used in _TMR0_ReadTimer: [wreg]
  6636     0B74  0020               	movlb	0	; select bank0
  6637     0B75  0815               	movf	21,w	;volatile
  6638     0B76  0021               	movlb	1	; select bank1
  6639     0B77  00CD               	movwf	TMR0_ReadTimer@readVal^(0+128)
  6640                           
  6641                           ;mcc_generated_files/tmr0.c: 86:     return readVal;
  6642     0B78  084D               	movf	TMR0_ReadTimer@readVal^(0+128),w
  6643     0B79  0008               	return
  6644     0B7A                     __end_of_TMR0_ReadTimer:
  6645                           
  6646                           	psect	text22
  6647     0D6D                     __ptext22:	
  6648 ;; *************** function _SYSTEM_Initialize *****************
  6649 ;; Defined at:
  6650 ;;		line 50 in file "mcc_generated_files/mcc.c"
  6651 ;; Parameters:    Size  Location     Type
  6652 ;;		None
  6653 ;; Auto vars:     Size  Location     Type
  6654 ;;		None
  6655 ;; Return value:  Size  Location     Type
  6656 ;;                  1    wreg      void 
  6657 ;; Registers used:
  6658 ;;		wreg, status,2, status,0, pclath, cstack
  6659 ;; Tracked objects:
  6660 ;;		On entry : B1F/0
  6661 ;;		On exit  : 1F/1
  6662 ;;		Unchanged: 0/0
  6663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6664 ;;      Params:         0       0       0       0       0       0
  6665 ;;      Locals:         0       0       0       0       0       0
  6666 ;;      Temps:          0       0       0       0       0       0
  6667 ;;      Totals:         0       0       0       0       0       0
  6668 ;;Total ram usage:        0 bytes
  6669 ;; Hardware stack levels used: 1
  6670 ;; Hardware stack levels required when called: 7
  6671 ;; This function calls:
  6672 ;;		_ADC_Initialize
  6673 ;;		_CMP1_Initialize
  6674 ;;		_DAC_Initialize
  6675 ;;		_EPWM1_Initialize
  6676 ;;		_EUSART_Initialize
  6677 ;;		_FVR_Initialize
  6678 ;;		_OSCILLATOR_Initialize
  6679 ;;		_PIN_MANAGER_Initialize
  6680 ;;		_TMR0_Initialize
  6681 ;;		_TMR1_Initialize
  6682 ;;		_TMR2_Initialize
  6683 ;;		_TMR4_Initialize
  6684 ;;		_TMR6_Initialize
  6685 ;;		_WDT_Initialize
  6686 ;; This function is called by:
  6687 ;;		_main
  6688 ;; This function uses a non-reentrant model
  6689 ;;
  6690                           
  6691     0D6D                     _SYSTEM_Initialize:	
  6692                           ;psect for function _SYSTEM_Initialize
  6693                           
  6694                           
  6695                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  6696                           
  6697                           ;incstack = 0
  6698                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6699     0D6D  318C  244D  318D   	fcall	_PIN_MANAGER_Initialize
  6700                           
  6701                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  6702     0D70  318B  2392  318D   	fcall	_OSCILLATOR_Initialize
  6703                           
  6704                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  6705     0D73  318B  2357  318D   	fcall	_WDT_Initialize
  6706                           
  6707                           ;mcc_generated_files/mcc.c: 56:     DAC_Initialize();
  6708     0D76  318B  236E  318D   	fcall	_DAC_Initialize
  6709                           
  6710                           ;mcc_generated_files/mcc.c: 57:     FVR_Initialize();
  6711     0D79  318B  234E  318D   	fcall	_FVR_Initialize
  6712                           
  6713                           ;mcc_generated_files/mcc.c: 58:     TMR4_Initialize();
  6714     0D7C  318B  23E4  318D   	fcall	_TMR4_Initialize
  6715                           
  6716                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
  6717     0D7F  318B  23C9  318D   	fcall	_TMR2_Initialize
  6718                           
  6719                           ;mcc_generated_files/mcc.c: 60:     TMR0_Initialize();
  6720     0D82  318B  23DA  318D   	fcall	_TMR0_Initialize
  6721                           
  6722                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
  6723     0D85  318B  23EE  318D   	fcall	_TMR6_Initialize
  6724                           
  6725                           ;mcc_generated_files/mcc.c: 62:     CMP1_Initialize();
  6726     0D88  318B  2368  318D   	fcall	_CMP1_Initialize
  6727                           
  6728                           ;mcc_generated_files/mcc.c: 63:     ADC_Initialize();
  6729     0D8B  318B  23A1  318D   	fcall	_ADC_Initialize
  6730                           
  6731                           ;mcc_generated_files/mcc.c: 64:     EPWM1_Initialize();
  6732     0D8E  318C  240F  318D   	fcall	_EPWM1_Initialize
  6733                           
  6734                           ;mcc_generated_files/mcc.c: 65:     TMR1_Initialize();
  6735     0D91  318C  2495  318D   	fcall	_TMR1_Initialize
  6736                           
  6737                           ;mcc_generated_files/mcc.c: 66:     EUSART_Initialize();
  6738     0D94  318D  2523         	fcall	_EUSART_Initialize
  6739     0D96  0008               	return
  6740     0D97                     __end_of_SYSTEM_Initialize:
  6741                           
  6742                           	psect	text23
  6743     0B57                     __ptext23:	
  6744 ;; *************** function _WDT_Initialize *****************
  6745 ;; Defined at:
  6746 ;;		line 79 in file "mcc_generated_files/mcc.c"
  6747 ;; Parameters:    Size  Location     Type
  6748 ;;		None
  6749 ;; Auto vars:     Size  Location     Type
  6750 ;;		None
  6751 ;; Return value:  Size  Location     Type
  6752 ;;                  1    wreg      void 
  6753 ;; Registers used:
  6754 ;;		wreg
  6755 ;; Tracked objects:
  6756 ;;		On entry : B1F/2
  6757 ;;		On exit  : B1F/1
  6758 ;;		Unchanged: B00/0
  6759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6760 ;;      Params:         0       0       0       0       0       0
  6761 ;;      Locals:         0       0       0       0       0       0
  6762 ;;      Temps:          0       0       0       0       0       0
  6763 ;;      Totals:         0       0       0       0       0       0
  6764 ;;Total ram usage:        0 bytes
  6765 ;; Hardware stack levels used: 1
  6766 ;; Hardware stack levels required when called: 5
  6767 ;; This function calls:
  6768 ;;		Nothing
  6769 ;; This function is called by:
  6770 ;;		_SYSTEM_Initialize
  6771 ;; This function uses a non-reentrant model
  6772 ;;
  6773                           
  6774     0B57                     _WDT_Initialize:	
  6775                           ;psect for function _WDT_Initialize
  6776                           
  6777                           
  6778                           ;mcc_generated_files/mcc.c: 82:     WDTCON = 0x16;
  6779                           
  6780                           ;incstack = 0
  6781                           ; Regs used in _WDT_Initialize: [wreg]
  6782     0B57  3016               	movlw	22
  6783     0B58  0021               	movlb	1	; select bank1
  6784     0B59  0097               	movwf	23	;volatile
  6785     0B5A  0008               	return
  6786     0B5B                     __end_of_WDT_Initialize:
  6787                           
  6788                           	psect	text24
  6789     0BEE                     __ptext24:	
  6790 ;; *************** function _TMR6_Initialize *****************
  6791 ;; Defined at:
  6792 ;;		line 62 in file "mcc_generated_files/tmr6.c"
  6793 ;; Parameters:    Size  Location     Type
  6794 ;;		None
  6795 ;; Auto vars:     Size  Location     Type
  6796 ;;		None
  6797 ;; Return value:  Size  Location     Type
  6798 ;;                  1    wreg      void 
  6799 ;; Registers used:
  6800 ;;		wreg, status,2
  6801 ;; Tracked objects:
  6802 ;;		On entry : B1F/0
  6803 ;;		On exit  : B1F/8
  6804 ;;		Unchanged: B00/0
  6805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6806 ;;      Params:         0       0       0       0       0       0
  6807 ;;      Locals:         0       0       0       0       0       0
  6808 ;;      Temps:          0       0       0       0       0       0
  6809 ;;      Totals:         0       0       0       0       0       0
  6810 ;;Total ram usage:        0 bytes
  6811 ;; Hardware stack levels used: 1
  6812 ;; Hardware stack levels required when called: 5
  6813 ;; This function calls:
  6814 ;;		Nothing
  6815 ;; This function is called by:
  6816 ;;		_SYSTEM_Initialize
  6817 ;; This function uses a non-reentrant model
  6818 ;;
  6819                           
  6820     0BEE                     _TMR6_Initialize:	
  6821                           ;psect for function _TMR6_Initialize
  6822                           
  6823                           
  6824                           ;mcc_generated_files/tmr6.c: 67:     PR6 = 0x4A;
  6825                           
  6826                           ;incstack = 0
  6827                           ; Regs used in _TMR6_Initialize: [wreg+status,2]
  6828     0BEE  304A               	movlw	74
  6829     0BEF  0028               	movlb	8	; select bank8
  6830     0BF0  009D               	movwf	29	;volatile
  6831                           
  6832                           ;mcc_generated_files/tmr6.c: 70:     TMR6 = 0x00;
  6833     0BF1  019C               	clrf	28	;volatile
  6834                           
  6835                           ;mcc_generated_files/tmr6.c: 73:     PIR3bits.TMR6IF = 0;
  6836     0BF2  0020               	movlb	0	; select bank0
  6837     0BF3  1193               	bcf	19,3	;volatile
  6838                           
  6839                           ;mcc_generated_files/tmr6.c: 76:     T6CON = 0x4F;
  6840     0BF4  304F               	movlw	79
  6841     0BF5  0028               	movlb	8	; select bank8
  6842     0BF6  009E               	movwf	30	;volatile
  6843     0BF7  0008               	return
  6844     0BF8                     __end_of_TMR6_Initialize:
  6845                           
  6846                           	psect	text25
  6847     0BE4                     __ptext25:	
  6848 ;; *************** function _TMR4_Initialize *****************
  6849 ;; Defined at:
  6850 ;;		line 62 in file "mcc_generated_files/tmr4.c"
  6851 ;; Parameters:    Size  Location     Type
  6852 ;;		None
  6853 ;; Auto vars:     Size  Location     Type
  6854 ;;		None
  6855 ;; Return value:  Size  Location     Type
  6856 ;;                  1    wreg      void 
  6857 ;; Registers used:
  6858 ;;		wreg, status,2
  6859 ;; Tracked objects:
  6860 ;;		On entry : B1F/2
  6861 ;;		On exit  : B1F/8
  6862 ;;		Unchanged: B00/0
  6863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6864 ;;      Params:         0       0       0       0       0       0
  6865 ;;      Locals:         0       0       0       0       0       0
  6866 ;;      Temps:          0       0       0       0       0       0
  6867 ;;      Totals:         0       0       0       0       0       0
  6868 ;;Total ram usage:        0 bytes
  6869 ;; Hardware stack levels used: 1
  6870 ;; Hardware stack levels required when called: 5
  6871 ;; This function calls:
  6872 ;;		Nothing
  6873 ;; This function is called by:
  6874 ;;		_SYSTEM_Initialize
  6875 ;; This function uses a non-reentrant model
  6876 ;;
  6877                           
  6878     0BE4                     _TMR4_Initialize:	
  6879                           ;psect for function _TMR4_Initialize
  6880                           
  6881                           
  6882                           ;mcc_generated_files/tmr4.c: 67:     PR4 = 0xF9;
  6883                           
  6884                           ;incstack = 0
  6885                           ; Regs used in _TMR4_Initialize: [wreg+status,2]
  6886     0BE4  30F9               	movlw	249
  6887     0BE5  0028               	movlb	8	; select bank8
  6888     0BE6  0096               	movwf	22	;volatile
  6889                           
  6890                           ;mcc_generated_files/tmr4.c: 70:     TMR4 = 0x00;
  6891     0BE7  0195               	clrf	21	;volatile
  6892                           
  6893                           ;mcc_generated_files/tmr4.c: 73:     PIR3bits.TMR4IF = 0;
  6894     0BE8  0020               	movlb	0	; select bank0
  6895     0BE9  1093               	bcf	19,1	;volatile
  6896                           
  6897                           ;mcc_generated_files/tmr4.c: 76:     T4CON = 0x4F;
  6898     0BEA  304F               	movlw	79
  6899     0BEB  0028               	movlb	8	; select bank8
  6900     0BEC  0097               	movwf	23	;volatile
  6901     0BED  0008               	return
  6902     0BEE                     __end_of_TMR4_Initialize:
  6903                           
  6904                           	psect	text26
  6905     0BC9                     __ptext26:	
  6906 ;; *************** function _TMR2_Initialize *****************
  6907 ;; Defined at:
  6908 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  6909 ;; Parameters:    Size  Location     Type
  6910 ;;		None
  6911 ;; Auto vars:     Size  Location     Type
  6912 ;;		None
  6913 ;; Return value:  Size  Location     Type
  6914 ;;                  1    wreg      void 
  6915 ;; Registers used:
  6916 ;;		wreg, status,2
  6917 ;; Tracked objects:
  6918 ;;		On entry : B1F/8
  6919 ;;		On exit  : B1F/0
  6920 ;;		Unchanged: B00/0
  6921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6922 ;;      Params:         0       0       0       0       0       0
  6923 ;;      Locals:         0       0       0       0       0       0
  6924 ;;      Temps:          0       0       0       0       0       0
  6925 ;;      Totals:         0       0       0       0       0       0
  6926 ;;Total ram usage:        0 bytes
  6927 ;; Hardware stack levels used: 1
  6928 ;; Hardware stack levels required when called: 5
  6929 ;; This function calls:
  6930 ;;		Nothing
  6931 ;; This function is called by:
  6932 ;;		_SYSTEM_Initialize
  6933 ;; This function uses a non-reentrant model
  6934 ;;
  6935                           
  6936     0BC9                     _TMR2_Initialize:	
  6937                           ;psect for function _TMR2_Initialize
  6938                           
  6939                           
  6940                           ;mcc_generated_files/tmr2.c: 67:     PR2 = 0xFF;
  6941                           
  6942                           ;incstack = 0
  6943                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  6944     0BC9  30FF               	movlw	255
  6945     0BCA  0020               	movlb	0	; select bank0
  6946     0BCB  009B               	movwf	27	;volatile
  6947                           
  6948                           ;mcc_generated_files/tmr2.c: 70:     TMR2 = 0x00;
  6949     0BCC  019A               	clrf	26	;volatile
  6950                           
  6951                           ;mcc_generated_files/tmr2.c: 73:     PIR1bits.TMR2IF = 0;
  6952     0BCD  1091               	bcf	17,1	;volatile
  6953                           
  6954                           ;mcc_generated_files/tmr2.c: 76:     T2CON = 0x07;
  6955     0BCE  3007               	movlw	7
  6956     0BCF  009C               	movwf	28	;volatile
  6957     0BD0  0008               	return
  6958     0BD1                     __end_of_TMR2_Initialize:
  6959                           
  6960                           	psect	text27
  6961     0C95                     __ptext27:	
  6962 ;; *************** function _TMR1_Initialize *****************
  6963 ;; Defined at:
  6964 ;;		line 65 in file "mcc_generated_files/tmr1.c"
  6965 ;; Parameters:    Size  Location     Type
  6966 ;;		None
  6967 ;; Auto vars:     Size  Location     Type
  6968 ;;		None
  6969 ;; Return value:  Size  Location     Type
  6970 ;;                  1    wreg      void 
  6971 ;; Registers used:
  6972 ;;		wreg, status,2, status,0, pclath, cstack
  6973 ;; Tracked objects:
  6974 ;;		On entry : 1F/5
  6975 ;;		On exit  : 1F/0
  6976 ;;		Unchanged: 0/0
  6977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6978 ;;      Params:         0       0       0       0       0       0
  6979 ;;      Locals:         0       0       0       0       0       0
  6980 ;;      Temps:          0       0       0       0       0       0
  6981 ;;      Totals:         0       0       0       0       0       0
  6982 ;;Total ram usage:        0 bytes
  6983 ;; Hardware stack levels used: 1
  6984 ;; Hardware stack levels required when called: 6
  6985 ;; This function calls:
  6986 ;;		_TMR1_SetGateInterruptHandler
  6987 ;; This function is called by:
  6988 ;;		_SYSTEM_Initialize
  6989 ;; This function uses a non-reentrant model
  6990 ;;
  6991                           
  6992     0C95                     _TMR1_Initialize:	
  6993                           ;psect for function _TMR1_Initialize
  6994                           
  6995                           
  6996                           ;mcc_generated_files/tmr1.c: 70:     T1GCON = 0xC0;
  6997                           
  6998                           ;incstack = 0
  6999                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7000     0C95  30C0               	movlw	192
  7001     0C96  0020               	movlb	0	; select bank0
  7002     0C97  0099               	movwf	25	;volatile
  7003                           
  7004                           ;mcc_generated_files/tmr1.c: 73:     TMR1H = 0x00;
  7005     0C98  0197               	clrf	23	;volatile
  7006                           
  7007                           ;mcc_generated_files/tmr1.c: 76:     TMR1L = 0x00;
  7008     0C99  0196               	clrf	22	;volatile
  7009                           
  7010                           ;mcc_generated_files/tmr1.c: 79:     PIR1bits.TMR1IF = 0;
  7011     0C9A  1011               	bcf	17,0	;volatile
  7012                           
  7013                           ;mcc_generated_files/tmr1.c: 82:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  7014     0C9B  0817               	movf	23,w	;volatile
  7015     0C9C  0021               	movlb	1	; select bank1
  7016     0C9D  00C4               	movwf	(_timer1ReloadVal+1)^(0+128)	;volatile
  7017     0C9E  0020               	movlb	0	; select bank0
  7018     0C9F  0816               	movf	22,w	;volatile
  7019     0CA0  0021               	movlb	1	; select bank1
  7020     0CA1  00C3               	movwf	_timer1ReloadVal^(0+128)	;volatile
  7021                           
  7022                           ;mcc_generated_files/tmr1.c: 85:     PIR1bits.TMR1GIF = 0;
  7023     0CA2  0020               	movlb	0	; select bank0
  7024     0CA3  1391               	bcf	17,7	;volatile
  7025                           
  7026                           ;mcc_generated_files/tmr1.c: 88:     PIE1bits.TMR1GIE = 1;
  7027     0CA4  0021               	movlb	1	; select bank1
  7028     0CA5  1791               	bsf	17,7	;volatile
  7029                           
  7030                           ;mcc_generated_files/tmr1.c: 91:     TMR1_SetGateInterruptHandler(TMR1_DefaultGateInterr
      +                          uptHandler);
  7031     0CA6  3003               	movlw	low _TMR1_DefaultGateInterruptHandler
  7032     0CA7  00CD               	movwf	TMR1_SetGateInterruptHandler@InterruptHandler^(0+128)
  7033     0CA8  3000               	movlw	high _TMR1_DefaultGateInterruptHandler
  7034     0CA9  00CE               	movwf	(TMR1_SetGateInterruptHandler@InterruptHandler^(0+128)+1)
  7035     0CAA  318B  23C1         	fcall	_TMR1_SetGateInterruptHandler
  7036                           
  7037                           ;mcc_generated_files/tmr1.c: 94:     T1CON = 0x01;
  7038     0CAC  3001               	movlw	1
  7039     0CAD  0098               	movwf	24	;volatile
  7040     0CAE  0008               	return
  7041     0CAF                     __end_of_TMR1_Initialize:
  7042                           
  7043                           	psect	text28
  7044     0BC1                     __ptext28:	
  7045 ;; *************** function _TMR1_SetGateInterruptHandler *****************
  7046 ;; Defined at:
  7047 ;;		line 177 in file "mcc_generated_files/tmr1.c"
  7048 ;; Parameters:    Size  Location     Type
  7049 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  7050 ;;		 -> mede_height(1), TMR1_DefaultGateInterruptHandler(1), 
  7051 ;; Auto vars:     Size  Location     Type
  7052 ;;		None
  7053 ;; Return value:  Size  Location     Type
  7054 ;;                  1    wreg      void 
  7055 ;; Registers used:
  7056 ;;		wreg
  7057 ;; Tracked objects:
  7058 ;;		On entry : 1F/1
  7059 ;;		On exit  : 1F/0
  7060 ;;		Unchanged: 0/0
  7061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7062 ;;      Params:         0       0       2       0       0       0
  7063 ;;      Locals:         0       0       0       0       0       0
  7064 ;;      Temps:          0       0       0       0       0       0
  7065 ;;      Totals:         0       0       2       0       0       0
  7066 ;;Total ram usage:        2 bytes
  7067 ;; Hardware stack levels used: 1
  7068 ;; Hardware stack levels required when called: 5
  7069 ;; This function calls:
  7070 ;;		Nothing
  7071 ;; This function is called by:
  7072 ;;		_TMR1_Initialize
  7073 ;;		_main
  7074 ;; This function uses a non-reentrant model
  7075 ;;
  7076                           
  7077     0BC1                     _TMR1_SetGateInterruptHandler:	
  7078                           ;psect for function _TMR1_SetGateInterruptHandler
  7079                           
  7080                           
  7081                           ;mcc_generated_files/tmr1.c: 178:     TMR1_GateInterruptHandler = InterruptHandler;
  7082                           
  7083                           ;incstack = 0
  7084                           ; Regs used in _TMR1_SetGateInterruptHandler: [wreg]
  7085     0BC1  084E               	movf	(TMR1_SetGateInterruptHandler@InterruptHandler+1)^(0+128),w
  7086     0BC2  0020               	movlb	0	; select bank0
  7087     0BC3  00EF               	movwf	_TMR1_GateInterruptHandler+1
  7088     0BC4  0021               	movlb	1	; select bank1
  7089     0BC5  084D               	movf	TMR1_SetGateInterruptHandler@InterruptHandler^(0+128),w
  7090     0BC6  0020               	movlb	0	; select bank0
  7091     0BC7  00EE               	movwf	_TMR1_GateInterruptHandler
  7092     0BC8  0008               	return
  7093     0BC9                     __end_of_TMR1_SetGateInterruptHandler:
  7094                           
  7095                           	psect	text29
  7096     0BDA                     __ptext29:	
  7097 ;; *************** function _TMR0_Initialize *****************
  7098 ;; Defined at:
  7099 ;;		line 63 in file "mcc_generated_files/tmr0.c"
  7100 ;; Parameters:    Size  Location     Type
  7101 ;;		None
  7102 ;; Auto vars:     Size  Location     Type
  7103 ;;		None
  7104 ;; Return value:  Size  Location     Type
  7105 ;;                  1    wreg      void 
  7106 ;; Registers used:
  7107 ;;		wreg, status,2
  7108 ;; Tracked objects:
  7109 ;;		On entry : B1F/0
  7110 ;;		On exit  : B1F/0
  7111 ;;		Unchanged: B00/0
  7112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7113 ;;      Params:         0       0       0       0       0       0
  7114 ;;      Locals:         0       0       0       0       0       0
  7115 ;;      Temps:          0       0       0       0       0       0
  7116 ;;      Totals:         0       0       0       0       0       0
  7117 ;;Total ram usage:        0 bytes
  7118 ;; Hardware stack levels used: 1
  7119 ;; Hardware stack levels required when called: 5
  7120 ;; This function calls:
  7121 ;;		Nothing
  7122 ;; This function is called by:
  7123 ;;		_SYSTEM_Initialize
  7124 ;; This function uses a non-reentrant model
  7125 ;;
  7126                           
  7127     0BDA                     _TMR0_Initialize:	
  7128                           ;psect for function _TMR0_Initialize
  7129                           
  7130                           
  7131                           ;mcc_generated_files/tmr0.c: 68:     OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | (0xD7 
      +                          & 0x3F));
  7132                           
  7133                           ;incstack = 0
  7134                           ; Regs used in _TMR0_Initialize: [wreg+status,2]
  7135     0BDA  0021               	movlb	1	; select bank1
  7136     0BDB  0815               	movf	21,w	;volatile
  7137     0BDC  39C0               	andlw	192
  7138     0BDD  3817               	iorlw	23
  7139     0BDE  0095               	movwf	21	;volatile
  7140                           
  7141                           ;mcc_generated_files/tmr0.c: 71:     TMR0 = 0x00;
  7142     0BDF  0020               	movlb	0	; select bank0
  7143     0BE0  0195               	clrf	21	;volatile
  7144                           
  7145                           ;mcc_generated_files/tmr0.c: 74:     timer0ReloadVal= 0;
  7146     0BE1  01E9               	clrf	_timer0ReloadVal	;volatile
  7147                           
  7148                           ;mcc_generated_files/tmr0.c: 77:     INTCONbits.TMR0IF = 0;
  7149     0BE2  110B               	bcf	11,2	;volatile
  7150     0BE3  0008               	return
  7151     0BE4                     __end_of_TMR0_Initialize:
  7152                           
  7153                           	psect	text30
  7154     0C4D                     __ptext30:	
  7155 ;; *************** function _PIN_MANAGER_Initialize *****************
  7156 ;; Defined at:
  7157 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  7158 ;; Parameters:    Size  Location     Type
  7159 ;;		None
  7160 ;; Auto vars:     Size  Location     Type
  7161 ;;		None
  7162 ;; Return value:  Size  Location     Type
  7163 ;;                  1    wreg      void 
  7164 ;; Registers used:
  7165 ;;		wreg, status,2
  7166 ;; Tracked objects:
  7167 ;;		On entry : B1F/0
  7168 ;;		On exit  : B1F/2
  7169 ;;		Unchanged: B00/0
  7170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7171 ;;      Params:         0       0       0       0       0       0
  7172 ;;      Locals:         0       0       0       0       0       0
  7173 ;;      Temps:          0       0       0       0       0       0
  7174 ;;      Totals:         0       0       0       0       0       0
  7175 ;;Total ram usage:        0 bytes
  7176 ;; Hardware stack levels used: 1
  7177 ;; Hardware stack levels required when called: 5
  7178 ;; This function calls:
  7179 ;;		Nothing
  7180 ;; This function is called by:
  7181 ;;		_SYSTEM_Initialize
  7182 ;; This function uses a non-reentrant model
  7183 ;;
  7184                           
  7185     0C4D                     _PIN_MANAGER_Initialize:	
  7186                           ;psect for function _PIN_MANAGER_Initialize
  7187                           
  7188                           
  7189                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  7190                           
  7191                           ;incstack = 0
  7192                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  7193     0C4D  0022               	movlb	2	; select bank2
  7194     0C4E  018C               	clrf	12	;volatile
  7195                           
  7196                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  7197     0C4F  018D               	clrf	13	;volatile
  7198                           
  7199                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0x21;
  7200     0C50  3021               	movlw	33
  7201     0C51  0021               	movlb	1	; select bank1
  7202     0C52  008C               	movwf	12	;volatile
  7203                           
  7204                           ;mcc_generated_files/pin_manager.c: 67:     TRISB = 0xF7;
  7205     0C53  30F7               	movlw	247
  7206     0C54  008D               	movwf	13	;volatile
  7207                           
  7208                           ;mcc_generated_files/pin_manager.c: 72:     ANSELB = 0xF0;
  7209     0C55  30F0               	movlw	240
  7210     0C56  0023               	movlb	3	; select bank3
  7211     0C57  008D               	movwf	13	;volatile
  7212                           
  7213                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x01;
  7214     0C58  3001               	movlw	1
  7215     0C59  008C               	movwf	12	;volatile
  7216                           
  7217                           ;mcc_generated_files/pin_manager.c: 78:     WPUB = 0x00;
  7218     0C5A  0024               	movlb	4	; select bank4
  7219     0C5B  018D               	clrf	13	;volatile
  7220                           
  7221                           ;mcc_generated_files/pin_manager.c: 79:     WPUA = 0x00;
  7222     0C5C  018C               	clrf	12	;volatile
  7223                           
  7224                           ;mcc_generated_files/pin_manager.c: 80:     OPTION_REGbits.nWPUEN = 1;
  7225     0C5D  0021               	movlb	1	; select bank1
  7226     0C5E  1795               	bsf	21,7	;volatile
  7227                           
  7228                           ;mcc_generated_files/pin_manager.c: 86:     APFCON0 = 0x00;
  7229     0C5F  0022               	movlb	2	; select bank2
  7230     0C60  019D               	clrf	29	;volatile
  7231                           
  7232                           ;mcc_generated_files/pin_manager.c: 87:     APFCON1 = 0x00;
  7233     0C61  019E               	clrf	30	;volatile
  7234                           
  7235                           ;mcc_generated_files/pin_manager.c: 94:     INTCONbits.IOCIE = 1;
  7236     0C62  158B               	bsf	11,3	;volatile
  7237     0C63  0008               	return
  7238     0C64                     __end_of_PIN_MANAGER_Initialize:
  7239                           
  7240                           	psect	text31
  7241     0B92                     __ptext31:	
  7242 ;; *************** function _OSCILLATOR_Initialize *****************
  7243 ;; Defined at:
  7244 ;;		line 69 in file "mcc_generated_files/mcc.c"
  7245 ;; Parameters:    Size  Location     Type
  7246 ;;		None
  7247 ;; Auto vars:     Size  Location     Type
  7248 ;;		None
  7249 ;; Return value:  Size  Location     Type
  7250 ;;                  1    wreg      void 
  7251 ;; Registers used:
  7252 ;;		wreg, status,2
  7253 ;; Tracked objects:
  7254 ;;		On entry : B1F/2
  7255 ;;		On exit  : B1F/2
  7256 ;;		Unchanged: B00/0
  7257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7258 ;;      Params:         0       0       0       0       0       0
  7259 ;;      Locals:         0       0       0       0       0       0
  7260 ;;      Temps:          0       0       0       0       0       0
  7261 ;;      Totals:         0       0       0       0       0       0
  7262 ;;Total ram usage:        0 bytes
  7263 ;; Hardware stack levels used: 1
  7264 ;; Hardware stack levels required when called: 5
  7265 ;; This function calls:
  7266 ;;		Nothing
  7267 ;; This function is called by:
  7268 ;;		_SYSTEM_Initialize
  7269 ;; This function uses a non-reentrant model
  7270 ;;
  7271                           
  7272     0B92                     _OSCILLATOR_Initialize:	
  7273                           ;psect for function _OSCILLATOR_Initialize
  7274                           
  7275                           
  7276                           ;mcc_generated_files/mcc.c: 72:     OSCCON = 0x78;
  7277                           
  7278                           ;incstack = 0
  7279                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  7280     0B92  3078               	movlw	120
  7281     0B93  0021               	movlb	1	; select bank1
  7282     0B94  0099               	movwf	25	;volatile
  7283                           
  7284                           ;mcc_generated_files/mcc.c: 74:     OSCTUNE = 0x00;
  7285     0B95  0198               	clrf	24	;volatile
  7286                           
  7287                           ;mcc_generated_files/mcc.c: 76:     BORCON = 0x00;
  7288     0B96  0022               	movlb	2	; select bank2
  7289     0B97  0196               	clrf	22	;volatile
  7290     0B98  0008               	return
  7291     0B99                     __end_of_OSCILLATOR_Initialize:
  7292                           
  7293                           	psect	text32
  7294     0B4E                     __ptext32:	
  7295 ;; *************** function _FVR_Initialize *****************
  7296 ;; Defined at:
  7297 ;;		line 58 in file "mcc_generated_files/fvr.c"
  7298 ;; Parameters:    Size  Location     Type
  7299 ;;		None
  7300 ;; Auto vars:     Size  Location     Type
  7301 ;;		None
  7302 ;; Return value:  Size  Location     Type
  7303 ;;                  1    wreg      void 
  7304 ;; Registers used:
  7305 ;;		wreg
  7306 ;; Tracked objects:
  7307 ;;		On entry : B1F/2
  7308 ;;		On exit  : B1F/2
  7309 ;;		Unchanged: B00/0
  7310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7311 ;;      Params:         0       0       0       0       0       0
  7312 ;;      Locals:         0       0       0       0       0       0
  7313 ;;      Temps:          0       0       0       0       0       0
  7314 ;;      Totals:         0       0       0       0       0       0
  7315 ;;Total ram usage:        0 bytes
  7316 ;; Hardware stack levels used: 1
  7317 ;; Hardware stack levels required when called: 5
  7318 ;; This function calls:
  7319 ;;		Nothing
  7320 ;; This function is called by:
  7321 ;;		_SYSTEM_Initialize
  7322 ;; This function uses a non-reentrant model
  7323 ;;
  7324                           
  7325     0B4E                     _FVR_Initialize:	
  7326                           ;psect for function _FVR_Initialize
  7327                           
  7328                           
  7329                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0x85;
  7330                           
  7331                           ;incstack = 0
  7332                           ; Regs used in _FVR_Initialize: [wreg]
  7333     0B4E  3085               	movlw	133
  7334     0B4F  0097               	movwf	23	;volatile
  7335     0B50  0008               	return
  7336     0B51                     __end_of_FVR_Initialize:
  7337                           
  7338                           	psect	text33
  7339     0D23                     __ptext33:	
  7340 ;; *************** function _EUSART_Initialize *****************
  7341 ;; Defined at:
  7342 ;;		line 66 in file "mcc_generated_files/eusart.c"
  7343 ;; Parameters:    Size  Location     Type
  7344 ;;		None
  7345 ;; Auto vars:     Size  Location     Type
  7346 ;;		None
  7347 ;; Return value:  Size  Location     Type
  7348 ;;                  1    wreg      void 
  7349 ;; Registers used:
  7350 ;;		wreg, status,2, status,0, pclath, cstack
  7351 ;; Tracked objects:
  7352 ;;		On entry : 1F/0
  7353 ;;		On exit  : 1F/1
  7354 ;;		Unchanged: 0/0
  7355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7356 ;;      Params:         0       0       0       0       0       0
  7357 ;;      Locals:         0       0       0       0       0       0
  7358 ;;      Temps:          0       0       0       0       0       0
  7359 ;;      Totals:         0       0       0       0       0       0
  7360 ;;Total ram usage:        0 bytes
  7361 ;; Hardware stack levels used: 1
  7362 ;; Hardware stack levels required when called: 6
  7363 ;; This function calls:
  7364 ;;		_EUSART_SetErrorHandler
  7365 ;;		_EUSART_SetFramingErrorHandler
  7366 ;;		_EUSART_SetOverrunErrorHandler
  7367 ;; This function is called by:
  7368 ;;		_SYSTEM_Initialize
  7369 ;; This function uses a non-reentrant model
  7370 ;;
  7371                           
  7372     0D23                     _EUSART_Initialize:	
  7373                           ;psect for function _EUSART_Initialize
  7374                           
  7375                           
  7376                           ;mcc_generated_files/eusart.c: 71:     BAUDCON = 0x08;
  7377                           
  7378                           ;incstack = 0
  7379                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7380     0D23  3008               	movlw	8
  7381     0D24  0023               	movlb	3	; select bank3
  7382     0D25  009F               	movwf	31	;volatile
  7383                           
  7384                           ;mcc_generated_files/eusart.c: 74:     RCSTA = 0x90;
  7385     0D26  3090               	movlw	144
  7386     0D27  009D               	movwf	29	;volatile
  7387                           
  7388                           ;mcc_generated_files/eusart.c: 77:     TXSTA = 0x24;
  7389     0D28  3024               	movlw	36
  7390     0D29  009E               	movwf	30	;volatile
  7391                           
  7392                           ;mcc_generated_files/eusart.c: 80:     SPBRGL = 0x22;
  7393     0D2A  3022               	movlw	34
  7394     0D2B  009B               	movwf	27	;volatile
  7395                           
  7396                           ;mcc_generated_files/eusart.c: 83:     SPBRGH = 0x00;
  7397     0D2C  019C               	clrf	28	;volatile
  7398                           
  7399                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  7400     0D2D  3000               	movlw	0
  7401     0D2E  0021               	movlb	1	; select bank1
  7402     0D2F  00CD               	movwf	EUSART_SetFramingErrorHandler@interruptHandler^(0+128)
  7403     0D30  3000               	movlw	0
  7404     0D31  00CE               	movwf	(EUSART_SetFramingErrorHandler@interruptHandler^(0+128)+1)
  7405     0D32  318B  23B1  318D   	fcall	_EUSART_SetFramingErrorHandler
  7406                           
  7407                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  7408     0D35  3000               	movlw	0
  7409     0D36  0021               	movlb	1	; select bank1
  7410     0D37  00CD               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler^(0+128)
  7411     0D38  3000               	movlw	0
  7412     0D39  00CE               	movwf	(EUSART_SetOverrunErrorHandler@interruptHandler^(0+128)+1)
  7413     0D3A  318B  23B9  318D   	fcall	_EUSART_SetOverrunErrorHandler
  7414                           
  7415                           ;mcc_generated_files/eusart.c: 88:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  7416     0D3D  3000               	movlw	0
  7417     0D3E  0021               	movlb	1	; select bank1
  7418     0D3F  00CD               	movwf	EUSART_SetErrorHandler@interruptHandler^(0+128)
  7419     0D40  3000               	movlw	0
  7420     0D41  00CE               	movwf	(EUSART_SetErrorHandler@interruptHandler^(0+128)+1)
  7421     0D42  318B  23A9         	fcall	_EUSART_SetErrorHandler
  7422                           
  7423                           ;mcc_generated_files/eusart.c: 90:     eusartRxLastError.status = 0;
  7424     0D44  0021               	movlb	1	; select bank1
  7425     0D45  01CC               	clrf	_eusartRxLastError^(0+128)	;volatile
  7426     0D46  0008               	return
  7427     0D47                     __end_of_EUSART_Initialize:
  7428                           
  7429                           	psect	text34
  7430     0BB9                     __ptext34:	
  7431 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  7432 ;; Defined at:
  7433 ;;		line 161 in file "mcc_generated_files/eusart.c"
  7434 ;; Parameters:    Size  Location     Type
  7435 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  7436 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  7437 ;; Auto vars:     Size  Location     Type
  7438 ;;		None
  7439 ;; Return value:  Size  Location     Type
  7440 ;;                  1    wreg      void 
  7441 ;; Registers used:
  7442 ;;		wreg
  7443 ;; Tracked objects:
  7444 ;;		On entry : 1F/1
  7445 ;;		On exit  : 1F/2
  7446 ;;		Unchanged: 0/0
  7447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7448 ;;      Params:         0       0       2       0       0       0
  7449 ;;      Locals:         0       0       0       0       0       0
  7450 ;;      Temps:          0       0       0       0       0       0
  7451 ;;      Totals:         0       0       2       0       0       0
  7452 ;;Total ram usage:        2 bytes
  7453 ;; Hardware stack levels used: 1
  7454 ;; Hardware stack levels required when called: 5
  7455 ;; This function calls:
  7456 ;;		Nothing
  7457 ;; This function is called by:
  7458 ;;		_EUSART_Initialize
  7459 ;; This function uses a non-reentrant model
  7460 ;;
  7461                           
  7462     0BB9                     _EUSART_SetOverrunErrorHandler:	
  7463                           ;psect for function _EUSART_SetOverrunErrorHandler
  7464                           
  7465                           
  7466                           ;mcc_generated_files/eusart.c: 162:     EUSART_OverrunErrorHandler = interruptHandler;
  7467                           
  7468                           ;incstack = 0
  7469                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  7470     0BB9  084E               	movf	(EUSART_SetOverrunErrorHandler@interruptHandler+1)^(0+128),w
  7471     0BBA  0022               	movlb	2	; select bank2
  7472     0BBB  00B2               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+256)
  7473     0BBC  0021               	movlb	1	; select bank1
  7474     0BBD  084D               	movf	EUSART_SetOverrunErrorHandler@interruptHandler^(0+128),w
  7475     0BBE  0022               	movlb	2	; select bank2
  7476     0BBF  00B1               	movwf	_EUSART_OverrunErrorHandler^(0+256)
  7477     0BC0  0008               	return
  7478     0BC1                     __end_of_EUSART_SetOverrunErrorHandler:
  7479                           
  7480                           	psect	text35
  7481     0BB1                     __ptext35:	
  7482 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  7483 ;; Defined at:
  7484 ;;		line 157 in file "mcc_generated_files/eusart.c"
  7485 ;; Parameters:    Size  Location     Type
  7486 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  7487 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  7488 ;; Auto vars:     Size  Location     Type
  7489 ;;		None
  7490 ;; Return value:  Size  Location     Type
  7491 ;;                  1    wreg      void 
  7492 ;; Registers used:
  7493 ;;		wreg
  7494 ;; Tracked objects:
  7495 ;;		On entry : 1F/1
  7496 ;;		On exit  : 1F/2
  7497 ;;		Unchanged: 0/0
  7498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7499 ;;      Params:         0       0       2       0       0       0
  7500 ;;      Locals:         0       0       0       0       0       0
  7501 ;;      Temps:          0       0       0       0       0       0
  7502 ;;      Totals:         0       0       2       0       0       0
  7503 ;;Total ram usage:        2 bytes
  7504 ;; Hardware stack levels used: 1
  7505 ;; Hardware stack levels required when called: 5
  7506 ;; This function calls:
  7507 ;;		Nothing
  7508 ;; This function is called by:
  7509 ;;		_EUSART_Initialize
  7510 ;; This function uses a non-reentrant model
  7511 ;;
  7512                           
  7513     0BB1                     _EUSART_SetFramingErrorHandler:	
  7514                           ;psect for function _EUSART_SetFramingErrorHandler
  7515                           
  7516                           
  7517                           ;mcc_generated_files/eusart.c: 158:     EUSART_FramingErrorHandler = interruptHandler;
  7518                           
  7519                           ;incstack = 0
  7520                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  7521     0BB1  084E               	movf	(EUSART_SetFramingErrorHandler@interruptHandler+1)^(0+128),w
  7522     0BB2  0022               	movlb	2	; select bank2
  7523     0BB3  00B4               	movwf	(_EUSART_FramingErrorHandler+1)^(0+256)
  7524     0BB4  0021               	movlb	1	; select bank1
  7525     0BB5  084D               	movf	EUSART_SetFramingErrorHandler@interruptHandler^(0+128),w
  7526     0BB6  0022               	movlb	2	; select bank2
  7527     0BB7  00B3               	movwf	_EUSART_FramingErrorHandler^(0+256)
  7528     0BB8  0008               	return
  7529     0BB9                     __end_of_EUSART_SetFramingErrorHandler:
  7530                           
  7531                           	psect	text36
  7532     0BA9                     __ptext36:	
  7533 ;; *************** function _EUSART_SetErrorHandler *****************
  7534 ;; Defined at:
  7535 ;;		line 165 in file "mcc_generated_files/eusart.c"
  7536 ;; Parameters:    Size  Location     Type
  7537 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  7538 ;;		 -> EUSART_DefaultErrorHandler(1), 
  7539 ;; Auto vars:     Size  Location     Type
  7540 ;;		None
  7541 ;; Return value:  Size  Location     Type
  7542 ;;                  1    wreg      void 
  7543 ;; Registers used:
  7544 ;;		wreg
  7545 ;; Tracked objects:
  7546 ;;		On entry : 1F/1
  7547 ;;		On exit  : 1F/2
  7548 ;;		Unchanged: 0/0
  7549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7550 ;;      Params:         0       0       2       0       0       0
  7551 ;;      Locals:         0       0       0       0       0       0
  7552 ;;      Temps:          0       0       0       0       0       0
  7553 ;;      Totals:         0       0       2       0       0       0
  7554 ;;Total ram usage:        2 bytes
  7555 ;; Hardware stack levels used: 1
  7556 ;; Hardware stack levels required when called: 5
  7557 ;; This function calls:
  7558 ;;		Nothing
  7559 ;; This function is called by:
  7560 ;;		_EUSART_Initialize
  7561 ;; This function uses a non-reentrant model
  7562 ;;
  7563                           
  7564     0BA9                     _EUSART_SetErrorHandler:	
  7565                           ;psect for function _EUSART_SetErrorHandler
  7566                           
  7567                           
  7568                           ;mcc_generated_files/eusart.c: 166:     EUSART_ErrorHandler = interruptHandler;
  7569                           
  7570                           ;incstack = 0
  7571                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  7572     0BA9  084E               	movf	(EUSART_SetErrorHandler@interruptHandler+1)^(0+128),w
  7573     0BAA  0022               	movlb	2	; select bank2
  7574     0BAB  00B0               	movwf	(_EUSART_ErrorHandler+1)^(0+256)
  7575     0BAC  0021               	movlb	1	; select bank1
  7576     0BAD  084D               	movf	EUSART_SetErrorHandler@interruptHandler^(0+128),w
  7577     0BAE  0022               	movlb	2	; select bank2
  7578     0BAF  00AF               	movwf	_EUSART_ErrorHandler^(0+256)
  7579     0BB0  0008               	return
  7580     0BB1                     __end_of_EUSART_SetErrorHandler:
  7581                           
  7582                           	psect	text37
  7583     0C0F                     __ptext37:	
  7584 ;; *************** function _EPWM1_Initialize *****************
  7585 ;; Defined at:
  7586 ;;		line 64 in file "mcc_generated_files/epwm1.c"
  7587 ;; Parameters:    Size  Location     Type
  7588 ;;		None
  7589 ;; Auto vars:     Size  Location     Type
  7590 ;;		None
  7591 ;; Return value:  Size  Location     Type
  7592 ;;                  1    wreg      void 
  7593 ;; Registers used:
  7594 ;;		wreg, status,2, status,0
  7595 ;; Tracked objects:
  7596 ;;		On entry : 1F/1
  7597 ;;		On exit  : 1F/5
  7598 ;;		Unchanged: 0/0
  7599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7600 ;;      Params:         0       0       0       0       0       0
  7601 ;;      Locals:         0       0       0       0       0       0
  7602 ;;      Temps:          0       0       0       0       0       0
  7603 ;;      Totals:         0       0       0       0       0       0
  7604 ;;Total ram usage:        0 bytes
  7605 ;; Hardware stack levels used: 1
  7606 ;; Hardware stack levels required when called: 5
  7607 ;; This function calls:
  7608 ;;		Nothing
  7609 ;; This function is called by:
  7610 ;;		_SYSTEM_Initialize
  7611 ;; This function uses a non-reentrant model
  7612 ;;
  7613                           
  7614     0C0F                     _EPWM1_Initialize:	
  7615                           ;psect for function _EPWM1_Initialize
  7616                           
  7617                           
  7618                           ;mcc_generated_files/epwm1.c: 69:  CCP1CON = 0x3C;
  7619                           
  7620                           ;incstack = 0
  7621                           ; Regs used in _EPWM1_Initialize: [wreg+status,2+status,0]
  7622     0C0F  303C               	movlw	60
  7623     0C10  0025               	movlb	5	; select bank5
  7624     0C11  0093               	movwf	19	;volatile
  7625                           
  7626                           ;mcc_generated_files/epwm1.c: 72:  ECCP1AS = 0x00;
  7627     0C12  0195               	clrf	21	;volatile
  7628                           
  7629                           ;mcc_generated_files/epwm1.c: 75:  PWM1CON = 0x80;
  7630     0C13  3080               	movlw	128
  7631     0C14  0094               	movwf	20	;volatile
  7632                           
  7633                           ;mcc_generated_files/epwm1.c: 78:  PSTR1CON = 0x01;
  7634     0C15  3001               	movlw	1
  7635     0C16  0096               	movwf	22	;volatile
  7636                           
  7637                           ;mcc_generated_files/epwm1.c: 81:  CCPR1H = 0x00;
  7638     0C17  0192               	clrf	18	;volatile
  7639                           
  7640                           ;mcc_generated_files/epwm1.c: 84:  CCPR1L = 0x7F;
  7641     0C18  307F               	movlw	127
  7642     0C19  0091               	movwf	17	;volatile
  7643                           
  7644                           ;mcc_generated_files/epwm1.c: 87:  CCPTMRS0bits.C1TSEL = 0x0;
  7645     0C1A  30FC               	movlw	-4
  7646     0C1B  059E               	andwf	30,f	;volatile
  7647     0C1C  0008               	return
  7648     0C1D                     __end_of_EPWM1_Initialize:
  7649                           
  7650                           	psect	text38
  7651     0B6E                     __ptext38:	
  7652 ;; *************** function _DAC_Initialize *****************
  7653 ;; Defined at:
  7654 ;;		line 58 in file "mcc_generated_files/dac.c"
  7655 ;; Parameters:    Size  Location     Type
  7656 ;;		None
  7657 ;; Auto vars:     Size  Location     Type
  7658 ;;		None
  7659 ;; Return value:  Size  Location     Type
  7660 ;;                  1    wreg      void 
  7661 ;; Registers used:
  7662 ;;		wreg
  7663 ;; Tracked objects:
  7664 ;;		On entry : B1F/1
  7665 ;;		On exit  : B1F/2
  7666 ;;		Unchanged: B00/0
  7667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7668 ;;      Params:         0       0       0       0       0       0
  7669 ;;      Locals:         0       0       0       0       0       0
  7670 ;;      Temps:          0       0       0       0       0       0
  7671 ;;      Totals:         0       0       0       0       0       0
  7672 ;;Total ram usage:        0 bytes
  7673 ;; Hardware stack levels used: 1
  7674 ;; Hardware stack levels required when called: 5
  7675 ;; This function calls:
  7676 ;;		Nothing
  7677 ;; This function is called by:
  7678 ;;		_SYSTEM_Initialize
  7679 ;; This function uses a non-reentrant model
  7680 ;;
  7681                           
  7682     0B6E                     _DAC_Initialize:	
  7683                           ;psect for function _DAC_Initialize
  7684                           
  7685                           
  7686                           ;mcc_generated_files/dac.c: 61:     DACCON0 = 0x80;
  7687                           
  7688                           ;incstack = 0
  7689                           ; Regs used in _DAC_Initialize: [wreg]
  7690     0B6E  3080               	movlw	128
  7691     0B6F  0022               	movlb	2	; select bank2
  7692     0B70  0098               	movwf	24	;volatile
  7693                           
  7694                           ;mcc_generated_files/dac.c: 63:     DACCON1 = 0x06;
  7695     0B71  3006               	movlw	6
  7696     0B72  0099               	movwf	25	;volatile
  7697     0B73  0008               	return
  7698     0B74                     __end_of_DAC_Initialize:
  7699                           
  7700                           	psect	text39
  7701     0B68                     __ptext39:	
  7702 ;; *************** function _CMP1_Initialize *****************
  7703 ;; Defined at:
  7704 ;;		line 58 in file "mcc_generated_files/cmp1.c"
  7705 ;; Parameters:    Size  Location     Type
  7706 ;;		None
  7707 ;; Auto vars:     Size  Location     Type
  7708 ;;		None
  7709 ;; Return value:  Size  Location     Type
  7710 ;;                  1    wreg      void 
  7711 ;; Registers used:
  7712 ;;		wreg
  7713 ;; Tracked objects:
  7714 ;;		On entry : B1F/8
  7715 ;;		On exit  : B1F/2
  7716 ;;		Unchanged: B00/0
  7717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7718 ;;      Params:         0       0       0       0       0       0
  7719 ;;      Locals:         0       0       0       0       0       0
  7720 ;;      Temps:          0       0       0       0       0       0
  7721 ;;      Totals:         0       0       0       0       0       0
  7722 ;;Total ram usage:        0 bytes
  7723 ;; Hardware stack levels used: 1
  7724 ;; Hardware stack levels required when called: 5
  7725 ;; This function calls:
  7726 ;;		Nothing
  7727 ;; This function is called by:
  7728 ;;		_SYSTEM_Initialize
  7729 ;; This function uses a non-reentrant model
  7730 ;;
  7731                           
  7732     0B68                     _CMP1_Initialize:	
  7733                           ;psect for function _CMP1_Initialize
  7734                           
  7735                           
  7736                           ;mcc_generated_files/cmp1.c: 62:     CM1CON0 = 0x84;
  7737                           
  7738                           ;incstack = 0
  7739                           ; Regs used in _CMP1_Initialize: [wreg]
  7740     0B68  3084               	movlw	132
  7741     0B69  0022               	movlb	2	; select bank2
  7742     0B6A  0091               	movwf	17	;volatile
  7743                           
  7744                           ;mcc_generated_files/cmp1.c: 65:     CM1CON1 = 0x10;
  7745     0B6B  3010               	movlw	16
  7746     0B6C  0092               	movwf	18	;volatile
  7747     0B6D  0008               	return
  7748     0B6E                     __end_of_CMP1_Initialize:
  7749                           
  7750                           	psect	text40
  7751     0BA1                     __ptext40:	
  7752 ;; *************** function _ADC_Initialize *****************
  7753 ;; Defined at:
  7754 ;;		line 67 in file "mcc_generated_files/adc.c"
  7755 ;; Parameters:    Size  Location     Type
  7756 ;;		None
  7757 ;; Auto vars:     Size  Location     Type
  7758 ;;		None
  7759 ;; Return value:  Size  Location     Type
  7760 ;;                  1    wreg      void 
  7761 ;; Registers used:
  7762 ;;		wreg, status,2
  7763 ;; Tracked objects:
  7764 ;;		On entry : 1F/2
  7765 ;;		On exit  : 1F/1
  7766 ;;		Unchanged: 0/0
  7767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7768 ;;      Params:         0       0       0       0       0       0
  7769 ;;      Locals:         0       0       0       0       0       0
  7770 ;;      Temps:          0       0       0       0       0       0
  7771 ;;      Totals:         0       0       0       0       0       0
  7772 ;;Total ram usage:        0 bytes
  7773 ;; Hardware stack levels used: 1
  7774 ;; Hardware stack levels required when called: 5
  7775 ;; This function calls:
  7776 ;;		Nothing
  7777 ;; This function is called by:
  7778 ;;		_SYSTEM_Initialize
  7779 ;; This function uses a non-reentrant model
  7780 ;;
  7781                           
  7782     0BA1                     _ADC_Initialize:	
  7783                           ;psect for function _ADC_Initialize
  7784                           
  7785                           
  7786                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0xD3;
  7787                           
  7788                           ;incstack = 0
  7789                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  7790     0BA1  30D3               	movlw	211
  7791     0BA2  0021               	movlb	1	; select bank1
  7792     0BA3  009E               	movwf	30	;volatile
  7793                           
  7794                           ;mcc_generated_files/adc.c: 75:     ADRESL = 0x00;
  7795     0BA4  019B               	clrf	27	;volatile
  7796                           
  7797                           ;mcc_generated_files/adc.c: 78:     ADRESH = 0x00;
  7798     0BA5  019C               	clrf	28	;volatile
  7799                           
  7800                           ;mcc_generated_files/adc.c: 81:     ADCON0 = 0x01;
  7801     0BA6  3001               	movlw	1
  7802     0BA7  009D               	movwf	29	;volatile
  7803     0BA8  0008               	return
  7804     0BA9                     __end_of_ADC_Initialize:
  7805                           
  7806                           	psect	text41
  7807     0B63                     __ptext41:	
  7808 ;; *************** function _EUSART_is_rx_ready *****************
  7809 ;; Defined at:
  7810 ;;		line 99 in file "mcc_generated_files/eusart.c"
  7811 ;; Parameters:    Size  Location     Type
  7812 ;;		None
  7813 ;; Auto vars:     Size  Location     Type
  7814 ;;		None
  7815 ;; Return value:  Size  Location     Type
  7816 ;;                  1    wreg      _Bool 
  7817 ;; Registers used:
  7818 ;;		wreg, status,2, status,0
  7819 ;; Tracked objects:
  7820 ;;		On entry : 17/0
  7821 ;;		On exit  : 1F/0
  7822 ;;		Unchanged: 0/0
  7823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7824 ;;      Params:         0       0       0       0       0       0
  7825 ;;      Locals:         0       0       0       0       0       0
  7826 ;;      Temps:          0       0       0       0       0       0
  7827 ;;      Totals:         0       0       0       0       0       0
  7828 ;;Total ram usage:        0 bytes
  7829 ;; Hardware stack levels used: 1
  7830 ;; Hardware stack levels required when called: 5
  7831 ;; This function calls:
  7832 ;;		Nothing
  7833 ;; This function is called by:
  7834 ;;		_main
  7835 ;; This function uses a non-reentrant model
  7836 ;;
  7837                           
  7838     0B63                     _EUSART_is_rx_ready:	
  7839                           ;psect for function _EUSART_is_rx_ready
  7840                           
  7841                           
  7842                           ;mcc_generated_files/eusart.c: 101:     return (_Bool)(PIR1bits.RCIF);
  7843                           
  7844                           ;incstack = 0
  7845                           ; Regs used in _EUSART_is_rx_ready: [wreg+status,2+status,0]
  7846     0B63  0020               	movlb	0	; select bank0
  7847     0B64  0E11               	swapf	17,w	;volatile
  7848     0B65  0C89               	rrf	9,f
  7849     0B66  3901               	andlw	1
  7850     0B67  0008               	return
  7851     0B68                     __end_of_EUSART_is_rx_ready:
  7852                           
  7853                           	psect	text42
  7854     0C03                     __ptext42:	
  7855 ;; *************** function _EUSART_Read *****************
  7856 ;; Defined at:
  7857 ;;		line 113 in file "mcc_generated_files/eusart.c"
  7858 ;; Parameters:    Size  Location     Type
  7859 ;;		None
  7860 ;; Auto vars:     Size  Location     Type
  7861 ;;		None
  7862 ;; Return value:  Size  Location     Type
  7863 ;;                  1    wreg      unsigned char 
  7864 ;; Registers used:
  7865 ;;		wreg, status,2
  7866 ;; Tracked objects:
  7867 ;;		On entry : 1F/1
  7868 ;;		On exit  : 1F/3
  7869 ;;		Unchanged: 0/0
  7870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7871 ;;      Params:         0       0       0       0       0       0
  7872 ;;      Locals:         0       0       0       0       0       0
  7873 ;;      Temps:          0       0       0       0       0       0
  7874 ;;      Totals:         0       0       0       0       0       0
  7875 ;;Total ram usage:        0 bytes
  7876 ;; Hardware stack levels used: 1
  7877 ;; Hardware stack levels required when called: 5
  7878 ;; This function calls:
  7879 ;;		Nothing
  7880 ;; This function is called by:
  7881 ;;		_main
  7882 ;; This function uses a non-reentrant model
  7883 ;;
  7884                           
  7885     0C03                     _EUSART_Read:	
  7886                           ;psect for function _EUSART_Read
  7887                           
  7888     0C03                     l240:	
  7889                           ;mcc_generated_files/eusart.c: 116:     {;mcc_generated_files/eusart.c: 117:     }
  7890                           
  7891                           ;incstack = 0
  7892                           ; Regs used in _EUSART_Read: [wreg+status,2]
  7893                           
  7894                           
  7895                           ;mcc_generated_files/eusart.c: 115:     while(!PIR1bits.RCIF)
  7896     0C03  0020               	movlb	0	; select bank0
  7897     0C04  1E91               	btfss	17,5	;volatile
  7898     0C05  2C03               	goto	l240
  7899                           
  7900                           ;mcc_generated_files/eusart.c: 119:     eusartRxLastError.status = 0;
  7901     0C06  0021               	movlb	1	; select bank1
  7902     0C07  01CC               	clrf	_eusartRxLastError^(0+128)	;volatile
  7903                           
  7904                           ;mcc_generated_files/eusart.c: 121:     if(1 == RCSTAbits.OERR)
  7905     0C08  0023               	movlb	3	; select bank3
  7906     0C09  1C9D               	btfss	29,1	;volatile
  7907     0C0A  2C0D               	goto	l2946
  7908                           
  7909                           ;mcc_generated_files/eusart.c: 122:     {;mcc_generated_files/eusart.c: 125:         RCS
      +                          TAbits.CREN = 0;
  7910     0C0B  121D               	bcf	29,4	;volatile
  7911                           
  7912                           ;mcc_generated_files/eusart.c: 126:         RCSTAbits.CREN = 1;
  7913     0C0C  161D               	bsf	29,4	;volatile
  7914     0C0D                     l2946:
  7915                           
  7916                           ;mcc_generated_files/eusart.c: 129:     return RCREG;
  7917     0C0D  0819               	movf	25,w	;volatile
  7918     0C0E  0008               	return
  7919     0C0F                     __end_of_EUSART_Read:
  7920                           
  7921                           	psect	text43
  7922     0C7C                     __ptext43:	
  7923 ;; *************** function _ADC_GetConversion *****************
  7924 ;; Defined at:
  7925 ;;		line 112 in file "mcc_generated_files/adc.c"
  7926 ;; Parameters:    Size  Location     Type
  7927 ;;  channel         1    wreg     enum E2495
  7928 ;; Auto vars:     Size  Location     Type
  7929 ;;  channel         1    3[BANK1 ] enum E2495
  7930 ;; Return value:  Size  Location     Type
  7931 ;;                  2    0[BANK1 ] unsigned short 
  7932 ;; Registers used:
  7933 ;;		wreg, status,2, status,0
  7934 ;; Tracked objects:
  7935 ;;		On entry : 1F/8
  7936 ;;		On exit  : 1F/1
  7937 ;;		Unchanged: 0/0
  7938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7939 ;;      Params:         0       0       2       0       0       0
  7940 ;;      Locals:         0       0       1       0       0       0
  7941 ;;      Temps:          0       0       1       0       0       0
  7942 ;;      Totals:         0       0       4       0       0       0
  7943 ;;Total ram usage:        4 bytes
  7944 ;; Hardware stack levels used: 1
  7945 ;; Hardware stack levels required when called: 5
  7946 ;; This function calls:
  7947 ;;		Nothing
  7948 ;; This function is called by:
  7949 ;;		_main
  7950 ;; This function uses a non-reentrant model
  7951 ;;
  7952                           
  7953     0C7C                     _ADC_GetConversion:	
  7954                           ;psect for function _ADC_GetConversion
  7955                           
  7956                           
  7957                           ;incstack = 0
  7958                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
  7959                           ;ADC_GetConversion@channel stored from wreg
  7960     0C7C  0021               	movlb	1	; select bank1
  7961     0C7D  00D0               	movwf	ADC_GetConversion@channel^(0+128)
  7962                           
  7963                           ;mcc_generated_files/adc.c: 112: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 113: {;mcc_generated_files/adc.c: 115:     ADCON0bits.CHS = ch
      +                          annel;
  7964     0C7E  0850               	movf	ADC_GetConversion@channel^(0+128),w
  7965     0C7F  00CF               	movwf	??_ADC_GetConversion^(0+128)
  7966     0C80  0DCF               	rlf	??_ADC_GetConversion^(0+128),f
  7967     0C81  0DCF               	rlf	??_ADC_GetConversion^(0+128),f
  7968     0C82  081D               	movf	29,w	;volatile
  7969     0C83  064F               	xorwf	??_ADC_GetConversion^(0+128),w
  7970     0C84  3983               	andlw	-125
  7971     0C85  064F               	xorwf	??_ADC_GetConversion^(0+128),w
  7972     0C86  009D               	movwf	29	;volatile
  7973                           
  7974                           ;mcc_generated_files/adc.c: 118:     ADCON0bits.ADON = 1;
  7975     0C87  141D               	bsf	29,0	;volatile
  7976                           
  7977                           ;mcc_generated_files/adc.c: 121:     _delay((unsigned long)((5)*(16000000/4000000.0)));
  7978     0C88  3006               	movlw	6
  7979     0C89                     u3117:
  7980     0C89  0B89               	decfsz	9,f
  7981     0C8A  2C89               	goto	u3117
  7982     0C8B  3200               	nop2
  7983                           
  7984                           ;mcc_generated_files/adc.c: 124:     ADCON0bits.GO_nDONE = 1;
  7985     0C8C  0021               	movlb	1	; select bank1
  7986     0C8D  149D               	bsf	29,1	;volatile
  7987     0C8E                     l333:	
  7988                           ;mcc_generated_files/adc.c: 128:     {;mcc_generated_files/adc.c: 129:     }
  7989                           
  7990                           
  7991                           ;mcc_generated_files/adc.c: 127:     while (ADCON0bits.GO_nDONE)
  7992     0C8E  189D               	btfsc	29,1	;volatile
  7993     0C8F  2C8E               	goto	l333
  7994                           
  7995                           ;mcc_generated_files/adc.c: 132:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  7996     0C90  081C               	movf	28,w	;volatile
  7997     0C91  00CE               	movwf	(?_ADC_GetConversion+1)^(0+128)
  7998     0C92  081B               	movf	27,w	;volatile
  7999     0C93  00CD               	movwf	?_ADC_GetConversion^(0+128)
  8000     0C94  0008               	return
  8001     0C95                     __end_of_ADC_GetConversion:
  8002                           
  8003                           	psect	intentry
  8004     0004                     __pintentry:	
  8005 ;; *************** function _INTERRUPT_InterruptManager *****************
  8006 ;; Defined at:
  8007 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  8008 ;; Parameters:    Size  Location     Type
  8009 ;;		None
  8010 ;; Auto vars:     Size  Location     Type
  8011 ;;		None
  8012 ;; Return value:  Size  Location     Type
  8013 ;;                  1    wreg      void 
  8014 ;; Registers used:
  8015 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8016 ;; Tracked objects:
  8017 ;;		On entry : 0/0
  8018 ;;		On exit  : 0/0
  8019 ;;		Unchanged: 0/0
  8020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8021 ;;      Params:         0       0       0       0       0       0
  8022 ;;      Locals:         0       0       0       0       0       0
  8023 ;;      Temps:          0       0       0       0       0       0
  8024 ;;      Totals:         0       0       0       0       0       0
  8025 ;;Total ram usage:        0 bytes
  8026 ;; Hardware stack levels used: 1
  8027 ;; Hardware stack levels required when called: 4
  8028 ;; This function calls:
  8029 ;;		_PIN_MANAGER_IOC
  8030 ;;		_TMR1_GATE_ISR
  8031 ;; This function is called by:
  8032 ;;		Interrupt level 1
  8033 ;; This function uses a non-reentrant model
  8034 ;;
  8035                           
  8036     0004                     _INTERRUPT_InterruptManager:
  8037                           
  8038                           ;incstack = 0
  8039     0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  8040                           
  8041                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8042     0005  3180               	pagesel	$
  8043                           
  8044                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.IOCIE == 1 && INTCONbits
      +                          .IOCIF == 1)
  8045     0006  198B               	btfsc	11,3	;volatile
  8046     0007  1C0B               	btfss	11,0	;volatile
  8047     0008  280D               	goto	i1l174
  8048                           
  8049                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         PIN_MANAGER_IOC();
  8050     0009  3180  2002  3180   	fcall	_PIN_MANAGER_IOC
  8051                           
  8052                           ;mcc_generated_files/interrupt_manager.c: 58:     }
  8053     000C  2817               	goto	i1l180
  8054     000D                     i1l174:	
  8055                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
  8056                           
  8057     000D  1F0B               	btfss	11,6	;volatile
  8058     000E  2817               	goto	i1l180
  8059                           
  8060                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE1bits.TMR1GIE == 1 && PIR1bits.TMR1GIF == 1)
  8061     000F  0021               	movlb	1	; select bank1
  8062     0010  1F91               	btfss	17,7	;volatile
  8063     0011  2817               	goto	i1l180
  8064     0012  0020               	movlb	0	; select bank0
  8065     0013  1F91               	btfss	17,7	;volatile
  8066     0014  2817               	goto	i1l180
  8067                           
  8068                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             TMR1_GATE_ISR();
  8069     0015  318B  23F8         	fcall	_TMR1_GATE_ISR
  8070     0017                     i1l180:	
  8071                           ;mcc_generated_files/interrupt_manager.c: 71:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 73:     }
  8072                           
  8073                           ;mcc_generated_files/interrupt_manager.c: 64:         }
  8074                           
  8075     0017  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  8076     0018  0009               	retfie
  8077     0019                     __end_of_INTERRUPT_InterruptManager:
  8078                           
  8079                           	psect	text45
  8080     0BF8                     __ptext45:	
  8081 ;; *************** function _TMR1_GATE_ISR *****************
  8082 ;; Defined at:
  8083 ;;		line 166 in file "mcc_generated_files/tmr1.c"
  8084 ;; Parameters:    Size  Location     Type
  8085 ;;		None
  8086 ;; Auto vars:     Size  Location     Type
  8087 ;;		None
  8088 ;; Return value:  Size  Location     Type
  8089 ;;                  1    wreg      void 
  8090 ;; Registers used:
  8091 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8092 ;; Tracked objects:
  8093 ;;		On entry : 1F/0
  8094 ;;		On exit  : 0/0
  8095 ;;		Unchanged: 0/0
  8096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8097 ;;      Params:         0       0       0       0       0       0
  8098 ;;      Locals:         0       0       0       0       0       0
  8099 ;;      Temps:          0       0       0       0       0       0
  8100 ;;      Totals:         0       0       0       0       0       0
  8101 ;;Total ram usage:        0 bytes
  8102 ;; Hardware stack levels used: 1
  8103 ;; Hardware stack levels required when called: 3
  8104 ;; This function calls:
  8105 ;;		NULL
  8106 ;;		_TMR1_DefaultGateInterruptHandler
  8107 ;;		_mede_height
  8108 ;; This function is called by:
  8109 ;;		_INTERRUPT_InterruptManager
  8110 ;; This function uses a non-reentrant model
  8111 ;;
  8112                           
  8113     0BF8                     _TMR1_GATE_ISR:	
  8114                           ;psect for function _TMR1_GATE_ISR
  8115                           
  8116                           
  8117                           ;mcc_generated_files/tmr1.c: 169:     PIR1bits.TMR1GIF = 0;
  8118                           
  8119                           ;incstack = 0
  8120                           ; Regs used in _TMR1_GATE_ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8121     0BF8  1391               	bcf	17,7	;volatile
  8122                           
  8123                           ;mcc_generated_files/tmr1.c: 171:     if(TMR1_GateInterruptHandler)
  8124     0BF9  086E               	movf	_TMR1_GateInterruptHandler,w
  8125     0BFA  046F               	iorwf	_TMR1_GateInterruptHandler+1,w
  8126     0BFB  1903               	btfsc	3,2
  8127     0BFC  0008               	return
  8128                           
  8129                           ;mcc_generated_files/tmr1.c: 172:     {;mcc_generated_files/tmr1.c: 173:         TMR1_Ga
      +                          teInterruptHandler();
  8130     0BFD  086F               	movf	_TMR1_GateInterruptHandler+1,w
  8131     0BFE  008A               	movwf	10
  8132     0BFF  086E               	movf	_TMR1_GateInterruptHandler,w
  8133     0C00  000A               	callw
  8134     0C01  318B               	pagesel	$
  8135     0C02  0008               	return
  8136     0C03                     __end_of_TMR1_GATE_ISR:
  8137                           
  8138                           	psect	text46
  8139     0003                     __ptext46:	
  8140 ;; *************** function _TMR1_DefaultGateInterruptHandler *****************
  8141 ;; Defined at:
  8142 ;;		line 181 in file "mcc_generated_files/tmr1.c"
  8143 ;; Parameters:    Size  Location     Type
  8144 ;;		None
  8145 ;; Auto vars:     Size  Location     Type
  8146 ;;		None
  8147 ;; Return value:  Size  Location     Type
  8148 ;;                  1    wreg      void 
  8149 ;; Registers used:
  8150 ;;		None
  8151 ;; Tracked objects:
  8152 ;;		On entry : 1F/0
  8153 ;;		On exit  : 1F/0
  8154 ;;		Unchanged: 1F/0
  8155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8156 ;;      Params:         0       0       0       0       0       0
  8157 ;;      Locals:         0       0       0       0       0       0
  8158 ;;      Temps:          0       0       0       0       0       0
  8159 ;;      Totals:         0       0       0       0       0       0
  8160 ;;Total ram usage:        0 bytes
  8161 ;; Hardware stack levels used: 1
  8162 ;; This function calls:
  8163 ;;		Nothing
  8164 ;; This function is called by:
  8165 ;;		_TMR1_Initialize
  8166 ;;		_TMR1_GATE_ISR
  8167 ;; This function uses a non-reentrant model
  8168 ;;
  8169                           
  8170     0003                     _TMR1_DefaultGateInterruptHandler:	
  8171                           ;psect for function _TMR1_DefaultGateInterruptHandler
  8172                           
  8173                           
  8174                           ;incstack = 0
  8175                           ; Regs used in _TMR1_DefaultGateInterruptHandler: []
  8176     0003  0008               	return
  8177     0004                     __end_of_TMR1_DefaultGateInterruptHandler:
  8178                           
  8179                           	psect	text47
  8180     05DF                     __ptext47:	
  8181 ;; *************** function _mede_height *****************
  8182 ;; Defined at:
  8183 ;;		line 301 in file "main.c"
  8184 ;; Parameters:    Size  Location     Type
  8185 ;;		None
  8186 ;; Auto vars:     Size  Location     Type
  8187 ;;		None
  8188 ;; Return value:  Size  Location     Type
  8189 ;;                  1    wreg      void 
  8190 ;; Registers used:
  8191 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8192 ;; Tracked objects:
  8193 ;;		On entry : 1F/0
  8194 ;;		On exit  : 1F/1
  8195 ;;		Unchanged: 0/0
  8196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8197 ;;      Params:         0       0       0       0       0       0
  8198 ;;      Locals:         0       0       0       0       0       0
  8199 ;;      Temps:          0       6       0       0       0       0
  8200 ;;      Totals:         0       6       0       0       0       0
  8201 ;;Total ram usage:        6 bytes
  8202 ;; Hardware stack levels used: 1
  8203 ;; Hardware stack levels required when called: 2
  8204 ;; This function calls:
  8205 ;;		_TMR1_ReadTimer
  8206 ;;		_TMR1_Reload
  8207 ;;		___flmul
  8208 ;;		___xxtofl
  8209 ;;		i1___fltol
  8210 ;;		i1___lwdiv
  8211 ;; This function is called by:
  8212 ;;		_main
  8213 ;;		_TMR1_GATE_ISR
  8214 ;; This function uses a non-reentrant model
  8215 ;;
  8216                           
  8217     05DF                     _mede_height:	
  8218                           ;psect for function _mede_height
  8219                           
  8220                           
  8221                           ;main.c: 302:     tempo_voo = TMR1_ReadTimer();
  8222                           
  8223                           ;incstack = 0
  8224                           ; Regs used in _mede_height: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8225     05DF  318C  2464  3185   	fcall	_TMR1_ReadTimer
  8226     05E2  0871               	movf	?_TMR1_ReadTimer+1,w
  8227     05E3  00E2               	movwf	_tempo_voo+1
  8228     05E4  0870               	movf	?_TMR1_ReadTimer,w
  8229     05E5  00E1               	movwf	_tempo_voo
  8230                           
  8231                           ;main.c: 303:     TMR1_Reload();
  8232     05E6  318B  2399  3185   	fcall	_TMR1_Reload
  8233                           
  8234                           ;main.c: 304:     if (first_read == 1){
  8235     05E9  036D               	decf	_first_read,w
  8236     05EA  1D03               	btfss	3,2
  8237     05EB  2E08               	goto	i1l2882
  8238                           
  8239                           ;main.c: 305:         avg_tempo_voo = tempo_voo;
  8240     05EC  0861               	movf	_tempo_voo,w
  8241     05ED  00BF               	movwf	___xxtofl@val
  8242     05EE  0862               	movf	_tempo_voo+1,w
  8243     05EF  00C0               	movwf	___xxtofl@val+1
  8244     05F0  01C1               	clrf	___xxtofl@val+2
  8245     05F1  01C2               	clrf	___xxtofl@val+3
  8246     05F2  3000               	movlw	0
  8247     05F3  3187  2739  3185   	fcall	___xxtofl
  8248     05F6  0842               	movf	?___xxtofl+3,w
  8249     05F7  0021               	movlb	1	; select bank1
  8250     05F8  00A3               	movwf	(_avg_tempo_voo+3)^(0+128)
  8251     05F9  0020               	movlb	0	; select bank0
  8252     05FA  0841               	movf	?___xxtofl+2,w
  8253     05FB  0021               	movlb	1	; select bank1
  8254     05FC  00A2               	movwf	(_avg_tempo_voo+2)^(0+128)
  8255     05FD  0020               	movlb	0	; select bank0
  8256     05FE  0840               	movf	?___xxtofl+1,w
  8257     05FF  0021               	movlb	1	; select bank1
  8258     0600  00A1               	movwf	(_avg_tempo_voo+1)^(0+128)
  8259     0601  0020               	movlb	0	; select bank0
  8260     0602  083F               	movf	?___xxtofl,w
  8261     0603  0021               	movlb	1	; select bank1
  8262     0604  00A0               	movwf	_avg_tempo_voo^(0+128)
  8263                           
  8264                           ;main.c: 306:         first_read = 0;
  8265     0605  0020               	movlb	0	; select bank0
  8266     0606  01ED               	clrf	_first_read
  8267                           
  8268                           ;main.c: 307:     }
  8269     0607  2E44               	goto	i1l2884
  8270     0608                     i1l2882:
  8271                           
  8272                           ;main.c: 309:         avg_tempo_voo = ((uint16_t)avg_tempo_voo + (tempo_voo))>>1;
  8273     0608  0021               	movlb	1	; select bank1
  8274     0609  0823               	movf	(_avg_tempo_voo+3)^(0+128),w
  8275     060A  0020               	movlb	0	; select bank0
  8276     060B  00B8               	movwf	i1___fltol@f1+3
  8277     060C  0021               	movlb	1	; select bank1
  8278     060D  0822               	movf	(_avg_tempo_voo+2)^(0+128),w
  8279     060E  0020               	movlb	0	; select bank0
  8280     060F  00B7               	movwf	i1___fltol@f1+2
  8281     0610  0021               	movlb	1	; select bank1
  8282     0611  0821               	movf	(_avg_tempo_voo+1)^(0+128),w
  8283     0612  0020               	movlb	0	; select bank0
  8284     0613  00B6               	movwf	i1___fltol@f1+1
  8285     0614  0021               	movlb	1	; select bank1
  8286     0615  0820               	movf	_avg_tempo_voo^(0+128),w
  8287     0616  0020               	movlb	0	; select bank0
  8288     0617  00B5               	movwf	i1___fltol@f1
  8289     0618  318E  2660  3185   	fcall	i1___fltol
  8290     061B  0861               	movf	_tempo_voo,w
  8291     061C  0735               	addwf	?i1___fltol,w
  8292     061D  00CD               	movwf	??_mede_height
  8293     061E  0862               	movf	_tempo_voo+1,w
  8294     061F  3D36               	addwfc	?i1___fltol+1,w
  8295     0620  00CE               	movwf	??_mede_height+1
  8296     0621  36CE               	lsrf	??_mede_height+1,f
  8297     0622  0CCD               	rrf	??_mede_height,f
  8298     0623  084D               	movf	??_mede_height,w
  8299     0624  00CF               	movwf	??_mede_height+2
  8300     0625  084E               	movf	??_mede_height+1,w
  8301     0626  00D0               	movwf	??_mede_height+3
  8302     0627  01D1               	clrf	??_mede_height+4
  8303     0628  01D2               	clrf	??_mede_height+5
  8304     0629  0852               	movf	??_mede_height+5,w
  8305     062A  00C2               	movwf	___xxtofl@val+3
  8306     062B  0851               	movf	??_mede_height+4,w
  8307     062C  00C1               	movwf	___xxtofl@val+2
  8308     062D  0850               	movf	??_mede_height+3,w
  8309     062E  00C0               	movwf	___xxtofl@val+1
  8310     062F  084F               	movf	??_mede_height+2,w
  8311     0630  00BF               	movwf	___xxtofl@val
  8312     0631  3000               	movlw	0
  8313     0632  3187  2739  3185   	fcall	___xxtofl
  8314     0635  0842               	movf	?___xxtofl+3,w
  8315     0636  0021               	movlb	1	; select bank1
  8316     0637  00A3               	movwf	(_avg_tempo_voo+3)^(0+128)
  8317     0638  0020               	movlb	0	; select bank0
  8318     0639  0841               	movf	?___xxtofl+2,w
  8319     063A  0021               	movlb	1	; select bank1
  8320     063B  00A2               	movwf	(_avg_tempo_voo+2)^(0+128)
  8321     063C  0020               	movlb	0	; select bank0
  8322     063D  0840               	movf	?___xxtofl+1,w
  8323     063E  0021               	movlb	1	; select bank1
  8324     063F  00A1               	movwf	(_avg_tempo_voo+1)^(0+128)
  8325     0640  0020               	movlb	0	; select bank0
  8326     0641  083F               	movf	?___xxtofl,w
  8327     0642  0021               	movlb	1	; select bank1
  8328     0643  00A0               	movwf	_avg_tempo_voo^(0+128)
  8329     0644                     i1l2884:
  8330                           
  8331                           ;main.c: 311:     height = (uint16_t)(avg_tempo_voo*lookupTable[(int)(adc_temp/10)]);
  8332     0644  0021               	movlb	1	; select bank1
  8333     0645  0836               	movf	(_adc_temp+1)^(0+128),w
  8334     0646  00F3               	movwf	i1___lwdiv@dividend+1
  8335     0647  0835               	movf	_adc_temp^(0+128),w
  8336     0648  00F2               	movwf	i1___lwdiv@dividend
  8337     0649  300A               	movlw	10
  8338     064A  00F0               	movwf	i1___lwdiv@divisor
  8339     064B  3000               	movlw	0
  8340     064C  00F1               	movwf	i1___lwdiv@divisor+1
  8341     064D  318D  2597  3185   	fcall	i1___lwdiv
  8342     0650  0871               	movf	?i1___lwdiv+1,w
  8343     0651  0085               	movwf	5
  8344     0652  0870               	movf	?i1___lwdiv,w
  8345     0653  0084               	movwf	4
  8346     0654  3584               	lslf	4,f
  8347     0655  0D85               	rlf	5,f
  8348     0656  3584               	lslf	4,f
  8349     0657  0D85               	rlf	5,f
  8350     0658  3047               	movlw	low _lookupTable
  8351     0659  0784               	addwf	4,f
  8352     065A  3004               	movlw	high _lookupTable
  8353     065B  3D05               	addwfc	5,w
  8354     065C  3880               	iorlw	128
  8355     065D  0085               	movwf	5
  8356     065E  3F00               	moviw [0]fsr0
  8357     065F  0020               	movlb	0	; select bank0
  8358     0660  00CD               	movwf	??_mede_height
  8359     0661  3F01               	moviw [1]fsr0
  8360     0662  00CE               	movwf	??_mede_height+1
  8361     0663  3F02               	moviw [2]fsr0
  8362     0664  00CF               	movwf	??_mede_height+2
  8363     0665  3F03               	moviw [3]fsr0
  8364     0666  00D0               	movwf	??_mede_height+3
  8365     0667  0850               	movf	??_mede_height+3,w
  8366     0668  00A7               	movwf	___flmul@a+3
  8367     0669  084F               	movf	??_mede_height+2,w
  8368     066A  00A6               	movwf	___flmul@a+2
  8369     066B  084E               	movf	??_mede_height+1,w
  8370     066C  00A5               	movwf	___flmul@a+1
  8371     066D  084D               	movf	??_mede_height,w
  8372     066E  00A4               	movwf	___flmul@a
  8373     066F  0021               	movlb	1	; select bank1
  8374     0670  0823               	movf	(_avg_tempo_voo+3)^(0+128),w
  8375     0671  0020               	movlb	0	; select bank0
  8376     0672  00A3               	movwf	___flmul@b+3
  8377     0673  0021               	movlb	1	; select bank1
  8378     0674  0822               	movf	(_avg_tempo_voo+2)^(0+128),w
  8379     0675  0020               	movlb	0	; select bank0
  8380     0676  00A2               	movwf	___flmul@b+2
  8381     0677  0021               	movlb	1	; select bank1
  8382     0678  0821               	movf	(_avg_tempo_voo+1)^(0+128),w
  8383     0679  0020               	movlb	0	; select bank0
  8384     067A  00A1               	movwf	___flmul@b+1
  8385     067B  0021               	movlb	1	; select bank1
  8386     067C  0820               	movf	_avg_tempo_voo^(0+128),w
  8387     067D  0020               	movlb	0	; select bank0
  8388     067E  00A0               	movwf	___flmul@b
  8389     067F  3180  2046  3185   	fcall	___flmul
  8390     0682  0823               	movf	?___flmul+3,w
  8391     0683  00B8               	movwf	i1___fltol@f1+3
  8392     0684  0822               	movf	?___flmul+2,w
  8393     0685  00B7               	movwf	i1___fltol@f1+2
  8394     0686  0821               	movf	?___flmul+1,w
  8395     0687  00B6               	movwf	i1___fltol@f1+1
  8396     0688  0820               	movf	?___flmul,w
  8397     0689  00B5               	movwf	i1___fltol@f1
  8398     068A  318E  2660         	fcall	i1___fltol
  8399     068C  0836               	movf	?i1___fltol+1,w
  8400     068D  0021               	movlb	1	; select bank1
  8401     068E  00B4               	movwf	(_height+1)^(0+128)
  8402     068F  0020               	movlb	0	; select bank0
  8403     0690  0835               	movf	?i1___fltol,w
  8404     0691  0021               	movlb	1	; select bank1
  8405     0692  00B3               	movwf	_height^(0+128)
  8406                           
  8407                           ;main.c: 312:     balldist = height;
  8408     0693  0833               	movf	_height^(0+128),w
  8409     0694  00AA               	movwf	_balldist^(0+128)
  8410     0695  0834               	movf	(_height+1)^(0+128),w
  8411     0696  00AB               	movwf	(_balldist+1)^(0+128)
  8412     0697  01AC               	clrf	(_balldist+2)^(0+128)
  8413     0698  0008               	return
  8414     0699                     __end_of_mede_height:
  8415                           
  8416                           	psect	text48
  8417     0D97                     __ptext48:	
  8418 ;; *************** function i1___lwdiv *****************
  8419 ;; Defined at:
  8420 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lwdiv.c"
  8421 ;; Parameters:    Size  Location     Type
  8422 ;;  divisor         2    0[COMMON] unsigned int 
  8423 ;;  dividend        2    2[COMMON] unsigned int 
  8424 ;; Auto vars:     Size  Location     Type
  8425 ;;  quotient        2    5[COMMON] unsigned int 
  8426 ;;  counter         1    7[COMMON] unsigned char 
  8427 ;; Return value:  Size  Location     Type
  8428 ;;                  2    0[COMMON] unsigned int 
  8429 ;; Registers used:
  8430 ;;		wreg, status,2, status,0
  8431 ;; Tracked objects:
  8432 ;;		On entry : 1F/1
  8433 ;;		On exit  : 1F/1
  8434 ;;		Unchanged: 1F/0
  8435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8436 ;;      Params:         4       0       0       0       0       0
  8437 ;;      Locals:         3       0       0       0       0       0
  8438 ;;      Temps:          1       0       0       0       0       0
  8439 ;;      Totals:         8       0       0       0       0       0
  8440 ;;Total ram usage:        8 bytes
  8441 ;; Hardware stack levels used: 1
  8442 ;; This function calls:
  8443 ;;		Nothing
  8444 ;; This function is called by:
  8445 ;;		_mede_height
  8446 ;; This function uses a non-reentrant model
  8447 ;;
  8448                           
  8449     0D97                     i1___lwdiv:	
  8450                           ;psect for function i1___lwdiv
  8451                           
  8452                           
  8453                           ;incstack = 0
  8454                           ; Regs used in i1___lwdiv: [wreg+status,2+status,0]
  8455     0D97  01F5               	clrf	i1___lwdiv@quotient
  8456     0D98  01F6               	clrf	i1___lwdiv@quotient+1
  8457     0D99  0870               	movf	i1___lwdiv@divisor,w
  8458     0D9A  0471               	iorwf	i1___lwdiv@divisor+1,w
  8459     0D9B  1903               	btfsc	3,2
  8460     0D9C  2DC6               	goto	i1l2674
  8461     0D9D  01F7               	clrf	i1___lwdiv@counter
  8462     0D9E  0AF7               	incf	i1___lwdiv@counter,f
  8463     0D9F                     i1l2662:
  8464     0D9F  1BF1               	btfsc	i1___lwdiv@divisor+1,7
  8465     0DA0  2DAB               	goto	i1l2664
  8466     0DA1  3001               	movlw	1
  8467     0DA2                     u233_25:
  8468     0DA2  35F0               	lslf	i1___lwdiv@divisor,f
  8469     0DA3  0DF1               	rlf	i1___lwdiv@divisor+1,f
  8470     0DA4  0B89               	decfsz	9,f
  8471     0DA5  2DA2               	goto	u233_25
  8472     0DA6  3001               	movlw	1
  8473     0DA7  00F4               	movwf	??i1___lwdiv
  8474     0DA8  0874               	movf	??i1___lwdiv,w
  8475     0DA9  07F7               	addwf	i1___lwdiv@counter,f
  8476     0DAA  2D9F               	goto	i1l2662
  8477     0DAB                     i1l2664:
  8478     0DAB  3001               	movlw	1
  8479     0DAC                     u235_25:
  8480     0DAC  35F5               	lslf	i1___lwdiv@quotient,f
  8481     0DAD  0DF6               	rlf	i1___lwdiv@quotient+1,f
  8482     0DAE  0B89               	decfsz	9,f
  8483     0DAF  2DAC               	goto	u235_25
  8484     0DB0  0871               	movf	i1___lwdiv@divisor+1,w
  8485     0DB1  0273               	subwf	i1___lwdiv@dividend+1,w
  8486     0DB2  1D03               	skipz
  8487     0DB3  2DB6               	goto	u236_25
  8488     0DB4  0870               	movf	i1___lwdiv@divisor,w
  8489     0DB5  0272               	subwf	i1___lwdiv@dividend,w
  8490     0DB6                     u236_25:
  8491     0DB6  1C03               	skipc
  8492     0DB7  2DBD               	goto	i1l2670
  8493     0DB8  0870               	movf	i1___lwdiv@divisor,w
  8494     0DB9  02F2               	subwf	i1___lwdiv@dividend,f
  8495     0DBA  0871               	movf	i1___lwdiv@divisor+1,w
  8496     0DBB  3BF3               	subwfb	i1___lwdiv@dividend+1,f
  8497     0DBC  1475               	bsf	i1___lwdiv@quotient,0
  8498     0DBD                     i1l2670:
  8499     0DBD  3001               	movlw	1
  8500     0DBE                     u237_25:
  8501     0DBE  36F1               	lsrf	i1___lwdiv@divisor+1,f
  8502     0DBF  0CF0               	rrf	i1___lwdiv@divisor,f
  8503     0DC0  0B89               	decfsz	9,f
  8504     0DC1  2DBE               	goto	u237_25
  8505     0DC2  3001               	movlw	1
  8506     0DC3  02F7               	subwf	i1___lwdiv@counter,f
  8507     0DC4  1D03               	btfss	3,2
  8508     0DC5  2DAB               	goto	i1l2664
  8509     0DC6                     i1l2674:
  8510     0DC6  0876               	movf	i1___lwdiv@quotient+1,w
  8511     0DC7  00F1               	movwf	?i1___lwdiv+1
  8512     0DC8  0875               	movf	i1___lwdiv@quotient,w
  8513     0DC9  00F0               	movwf	?i1___lwdiv
  8514     0DCA  0008               	return
  8515     0DCB                     __end_ofi1___lwdiv:
  8516                           
  8517                           	psect	text49
  8518     0E60                     __ptext49:	
  8519 ;; *************** function i1___fltol *****************
  8520 ;; Defined at:
  8521 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\fltol.c"
  8522 ;; Parameters:    Size  Location     Type
  8523 ;;  f1              4   21[BANK0 ] unsigned int 
  8524 ;; Auto vars:     Size  Location     Type
  8525 ;;  exp1            1   30[BANK0 ] unsigned char 
  8526 ;;  sign1           1   29[BANK0 ] unsigned char 
  8527 ;; Return value:  Size  Location     Type
  8528 ;;                  4   21[BANK0 ] long 
  8529 ;; Registers used:
  8530 ;;		wreg, status,2, status,0
  8531 ;; Tracked objects:
  8532 ;;		On entry : 1F/0
  8533 ;;		On exit  : 1F/0
  8534 ;;		Unchanged: 0/0
  8535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8536 ;;      Params:         0       4       0       0       0       0
  8537 ;;      Locals:         0       2       0       0       0       0
  8538 ;;      Temps:          0       4       0       0       0       0
  8539 ;;      Totals:         0      10       0       0       0       0
  8540 ;;Total ram usage:       10 bytes
  8541 ;; Hardware stack levels used: 1
  8542 ;; This function calls:
  8543 ;;		Nothing
  8544 ;; This function is called by:
  8545 ;;		_mede_height
  8546 ;; This function uses a non-reentrant model
  8547 ;;
  8548                           
  8549     0E60                     i1___fltol:	
  8550                           ;psect for function i1___fltol
  8551                           
  8552                           
  8553                           ;incstack = 0
  8554                           ; Regs used in i1___fltol: [wreg+status,2+status,0]
  8555     0E60  1003               	clrc
  8556     0E61  0D37               	rlf	i1___fltol@f1+2,w
  8557     0E62  0D38               	rlf	i1___fltol@f1+3,w
  8558     0E63  00BE               	movwf	i1___fltol@exp1
  8559     0E64  083E               	movf	i1___fltol@exp1,w
  8560     0E65  1D03               	btfss	3,2
  8561     0E66  2E70               	goto	i1l2622
  8562     0E67                     i1l2618:
  8563     0E67  3000               	movlw	0
  8564     0E68  00B8               	movwf	?i1___fltol+3
  8565     0E69  3000               	movlw	0
  8566     0E6A  00B7               	movwf	?i1___fltol+2
  8567     0E6B  3000               	movlw	0
  8568     0E6C  00B6               	movwf	?i1___fltol+1
  8569     0E6D  3000               	movlw	0
  8570     0E6E  00B5               	movwf	?i1___fltol
  8571     0E6F  0008               	return
  8572     0E70                     i1l2622:
  8573     0E70  0835               	movf	i1___fltol@f1,w
  8574     0E71  00B9               	movwf	??i1___fltol
  8575     0E72  0836               	movf	i1___fltol@f1+1,w
  8576     0E73  00BA               	movwf	??i1___fltol+1
  8577     0E74  0837               	movf	i1___fltol@f1+2,w
  8578     0E75  00BB               	movwf	??i1___fltol+2
  8579     0E76  0838               	movf	i1___fltol@f1+3,w
  8580     0E77  00BC               	movwf	??i1___fltol+3
  8581     0E78  301F               	movlw	31
  8582     0E79                     u223_25:
  8583     0E79  36BC               	lsrf	??i1___fltol+3,f
  8584     0E7A  0CBB               	rrf	??i1___fltol+2,f
  8585     0E7B  0CBA               	rrf	??i1___fltol+1,f
  8586     0E7C  0CB9               	rrf	??i1___fltol,f
  8587     0E7D  0B89               	decfsz	9,f
  8588     0E7E  2E79               	goto	u223_25
  8589     0E7F  0839               	movf	??i1___fltol,w
  8590     0E80  00BD               	movwf	i1___fltol@sign1
  8591     0E81  17B7               	bsf	i1___fltol@f1+2,7
  8592     0E82  30FF               	movlw	255
  8593     0E83  05B5               	andwf	i1___fltol@f1,f
  8594     0E84  30FF               	movlw	255
  8595     0E85  05B6               	andwf	i1___fltol@f1+1,f
  8596     0E86  30FF               	movlw	255
  8597     0E87  05B7               	andwf	i1___fltol@f1+2,f
  8598     0E88  3000               	movlw	0
  8599     0E89  05B8               	andwf	i1___fltol@f1+3,f
  8600     0E8A  3096               	movlw	150
  8601     0E8B  02BE               	subwf	i1___fltol@exp1,f
  8602     0E8C  1FBE               	btfss	i1___fltol@exp1,7
  8603     0E8D  2EA1               	goto	i1l2640
  8604     0E8E  083E               	movf	i1___fltol@exp1,w
  8605     0E8F  3A80               	xorlw	128
  8606     0E90  3E97               	addlw	151
  8607     0E91  1C03               	btfss	3,0
  8608     0E92  2E67               	goto	i1l2618
  8609     0E93                     i1l2638:
  8610     0E93  3001               	movlw	1
  8611     0E94                     u226_25:
  8612     0E94  36B8               	lsrf	i1___fltol@f1+3,f
  8613     0E95  0CB7               	rrf	i1___fltol@f1+2,f
  8614     0E96  0CB6               	rrf	i1___fltol@f1+1,f
  8615     0E97  0CB5               	rrf	i1___fltol@f1,f
  8616     0E98  0B89               	decfsz	9,f
  8617     0E99  2E94               	goto	u226_25
  8618     0E9A  3001               	movlw	1
  8619     0E9B  00B9               	movwf	??i1___fltol
  8620     0E9C  0839               	movf	??i1___fltol,w
  8621     0E9D  07BE               	addwf	i1___fltol@exp1,f
  8622     0E9E  1903               	btfsc	3,2
  8623     0E9F  2EB2               	goto	i1l2648
  8624     0EA0  2E93               	goto	i1l2638
  8625     0EA1                     i1l2640:
  8626     0EA1  3020               	movlw	32
  8627     0EA2  023E               	subwf	i1___fltol@exp1,w
  8628     0EA3  1803               	btfsc	3,0
  8629     0EA4  2E67               	goto	i1l2618
  8630     0EA5                     i1l1133:
  8631     0EA5  083E               	movf	i1___fltol@exp1,w
  8632     0EA6  1903               	btfsc	3,2
  8633     0EA7  2EB2               	goto	i1l2648
  8634     0EA8  3001               	movlw	1
  8635     0EA9                     u229_25:
  8636     0EA9  35B5               	lslf	i1___fltol@f1,f
  8637     0EAA  0DB6               	rlf	i1___fltol@f1+1,f
  8638     0EAB  0DB7               	rlf	i1___fltol@f1+2,f
  8639     0EAC  0DB8               	rlf	i1___fltol@f1+3,f
  8640     0EAD  0B89               	decfsz	9,f
  8641     0EAE  2EA9               	goto	u229_25
  8642     0EAF  3001               	movlw	1
  8643     0EB0  02BE               	subwf	i1___fltol@exp1,f
  8644     0EB1  2EA5               	goto	i1l1133
  8645     0EB2                     i1l2648:
  8646     0EB2  083D               	movf	i1___fltol@sign1,w
  8647     0EB3  1903               	btfsc	3,2
  8648     0EB4  0008               	return
  8649     0EB5  09B5               	comf	i1___fltol@f1,f
  8650     0EB6  09B6               	comf	i1___fltol@f1+1,f
  8651     0EB7  09B7               	comf	i1___fltol@f1+2,f
  8652     0EB8  09B8               	comf	i1___fltol@f1+3,f
  8653     0EB9  0AB5               	incf	i1___fltol@f1,f
  8654     0EBA  1903               	skipnz
  8655     0EBB  0AB6               	incf	i1___fltol@f1+1,f
  8656     0EBC  1903               	skipnz
  8657     0EBD  0AB7               	incf	i1___fltol@f1+2,f
  8658     0EBE  1903               	skipnz
  8659     0EBF  0AB8               	incf	i1___fltol@f1+3,f
  8660     0EC0  0008               	return
  8661     0EC1                     __end_ofi1___fltol:
  8662                           
  8663                           	psect	text50
  8664     0739                     __ptext50:	
  8665 ;; *************** function ___xxtofl *****************
  8666 ;; Defined at:
  8667 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\xxtofl.c"
  8668 ;; Parameters:    Size  Location     Type
  8669 ;;  sign            1    wreg     unsigned char 
  8670 ;;  val             4   31[BANK0 ] long 
  8671 ;; Auto vars:     Size  Location     Type
  8672 ;;  sign            1   39[BANK0 ] unsigned char 
  8673 ;;  arg             4   41[BANK0 ] unsigned long 
  8674 ;;  exp             1   40[BANK0 ] unsigned char 
  8675 ;; Return value:  Size  Location     Type
  8676 ;;                  4   31[BANK0 ] unsigned char 
  8677 ;; Registers used:
  8678 ;;		wreg, status,2, status,0
  8679 ;; Tracked objects:
  8680 ;;		On entry : 1F/0
  8681 ;;		On exit  : 1F/0
  8682 ;;		Unchanged: 0/0
  8683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8684 ;;      Params:         0       4       0       0       0       0
  8685 ;;      Locals:         0       6       0       0       0       0
  8686 ;;      Temps:          0       4       0       0       0       0
  8687 ;;      Totals:         0      14       0       0       0       0
  8688 ;;Total ram usage:       14 bytes
  8689 ;; Hardware stack levels used: 1
  8690 ;; This function calls:
  8691 ;;		Nothing
  8692 ;; This function is called by:
  8693 ;;		_mede_height
  8694 ;; This function uses a non-reentrant model
  8695 ;;
  8696                           
  8697     0739                     ___xxtofl:	
  8698                           ;psect for function ___xxtofl
  8699                           
  8700                           
  8701                           ;incstack = 0
  8702                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  8703                           ;___xxtofl@sign stored from wreg
  8704     0739  00C7               	movwf	___xxtofl@sign
  8705     073A  0847               	movf	___xxtofl@sign,w
  8706     073B  1D03               	btfss	3,2
  8707     073C  1FC2               	btfss	___xxtofl@val+3,7
  8708     073D  2F4E               	goto	i1l2578
  8709     073E  093F               	comf	___xxtofl@val,w
  8710     073F  00C9               	movwf	___xxtofl@arg
  8711     0740  0940               	comf	___xxtofl@val+1,w
  8712     0741  00CA               	movwf	___xxtofl@arg+1
  8713     0742  0941               	comf	___xxtofl@val+2,w
  8714     0743  00CB               	movwf	___xxtofl@arg+2
  8715     0744  0942               	comf	___xxtofl@val+3,w
  8716     0745  00CC               	movwf	___xxtofl@arg+3
  8717     0746  0AC9               	incf	___xxtofl@arg,f
  8718     0747  1903               	skipnz
  8719     0748  0ACA               	incf	___xxtofl@arg+1,f
  8720     0749  1903               	skipnz
  8721     074A  0ACB               	incf	___xxtofl@arg+2,f
  8722     074B  1903               	skipnz
  8723     074C  0ACC               	incf	___xxtofl@arg+3,f
  8724     074D  2F56               	goto	i1l1373
  8725     074E                     i1l2578:
  8726     074E  0842               	movf	___xxtofl@val+3,w
  8727     074F  00CC               	movwf	___xxtofl@arg+3
  8728     0750  0841               	movf	___xxtofl@val+2,w
  8729     0751  00CB               	movwf	___xxtofl@arg+2
  8730     0752  0840               	movf	___xxtofl@val+1,w
  8731     0753  00CA               	movwf	___xxtofl@arg+1
  8732     0754  083F               	movf	___xxtofl@val,w
  8733     0755  00C9               	movwf	___xxtofl@arg
  8734     0756                     i1l1373:
  8735     0756  0842               	movf	___xxtofl@val+3,w
  8736     0757  0441               	iorwf	___xxtofl@val+2,w
  8737     0758  0440               	iorwf	___xxtofl@val+1,w
  8738     0759  043F               	iorwf	___xxtofl@val,w
  8739     075A  1D03               	skipz
  8740     075B  2F65               	goto	i1l2584
  8741     075C  3000               	movlw	0
  8742     075D  00C2               	movwf	?___xxtofl+3
  8743     075E  3000               	movlw	0
  8744     075F  00C1               	movwf	?___xxtofl+2
  8745     0760  3000               	movlw	0
  8746     0761  00C0               	movwf	?___xxtofl+1
  8747     0762  3000               	movlw	0
  8748     0763  00BF               	movwf	?___xxtofl
  8749     0764  0008               	return
  8750     0765                     i1l2584:
  8751     0765  3096               	movlw	150
  8752     0766  00C8               	movwf	___xxtofl@exp
  8753     0767                     i1l2588:
  8754     0767  30FE               	movlw	254
  8755     0768  054C               	andwf	___xxtofl@arg+3,w
  8756     0769  1903               	btfsc	3,2
  8757     076A  2F8A               	goto	i1l1379
  8758     076B  3001               	movlw	1
  8759     076C  00C3               	movwf	??___xxtofl
  8760     076D  0843               	movf	??___xxtofl,w
  8761     076E  07C8               	addwf	___xxtofl@exp,f
  8762     076F  3001               	movlw	1
  8763     0770                     u211_25:
  8764     0770  36CC               	lsrf	___xxtofl@arg+3,f
  8765     0771  0CCB               	rrf	___xxtofl@arg+2,f
  8766     0772  0CCA               	rrf	___xxtofl@arg+1,f
  8767     0773  0CC9               	rrf	___xxtofl@arg,f
  8768     0774  0B89               	decfsz	9,f
  8769     0775  2F70               	goto	u211_25
  8770     0776  2F67               	goto	i1l2588
  8771     0777                     i1l2590:
  8772     0777  3001               	movlw	1
  8773     0778  00C3               	movwf	??___xxtofl
  8774     0779  0843               	movf	??___xxtofl,w
  8775     077A  07C8               	addwf	___xxtofl@exp,f
  8776     077B  3001               	movlw	1
  8777     077C  07C9               	addwf	___xxtofl@arg,f
  8778     077D  3000               	movlw	0
  8779     077E  3DCA               	addwfc	___xxtofl@arg+1,f
  8780     077F  3000               	movlw	0
  8781     0780  3DCB               	addwfc	___xxtofl@arg+2,f
  8782     0781  3000               	movlw	0
  8783     0782  3DCC               	addwfc	___xxtofl@arg+3,f
  8784     0783  3001               	movlw	1
  8785     0784                     u213_25:
  8786     0784  36CC               	lsrf	___xxtofl@arg+3,f
  8787     0785  0CCB               	rrf	___xxtofl@arg+2,f
  8788     0786  0CCA               	rrf	___xxtofl@arg+1,f
  8789     0787  0CC9               	rrf	___xxtofl@arg,f
  8790     0788  0B89               	decfsz	9,f
  8791     0789  2F84               	goto	u213_25
  8792     078A                     i1l1379:
  8793     078A  30FF               	movlw	255
  8794     078B  054C               	andwf	___xxtofl@arg+3,w
  8795     078C  1903               	btfsc	3,2
  8796     078D  2F9C               	goto	i1l2598
  8797     078E  2F77               	goto	i1l2590
  8798     078F                     i1l2600:
  8799     078F  3002               	movlw	2
  8800     0790  0248               	subwf	___xxtofl@exp,w
  8801     0791  1C03               	btfss	3,0
  8802     0792  2F9E               	goto	i1l1386
  8803     0793  3001               	movlw	1
  8804     0794  02C8               	subwf	___xxtofl@exp,f
  8805     0795  3001               	movlw	1
  8806     0796                     u215_25:
  8807     0796  35C9               	lslf	___xxtofl@arg,f
  8808     0797  0DCA               	rlf	___xxtofl@arg+1,f
  8809     0798  0DCB               	rlf	___xxtofl@arg+2,f
  8810     0799  0DCC               	rlf	___xxtofl@arg+3,f
  8811     079A  0B89               	decfsz	9,f
  8812     079B  2F96               	goto	u215_25
  8813     079C                     i1l2598:
  8814     079C  1FCB               	btfss	___xxtofl@arg+2,7
  8815     079D  2F8F               	goto	i1l2600
  8816     079E                     i1l1386:
  8817     079E  1848               	btfsc	___xxtofl@exp,0
  8818     079F  2FA8               	goto	i1l1387
  8819     07A0  30FF               	movlw	255
  8820     07A1  05C9               	andwf	___xxtofl@arg,f
  8821     07A2  30FF               	movlw	255
  8822     07A3  05CA               	andwf	___xxtofl@arg+1,f
  8823     07A4  307F               	movlw	127
  8824     07A5  05CB               	andwf	___xxtofl@arg+2,f
  8825     07A6  30FF               	movlw	255
  8826     07A7  05CC               	andwf	___xxtofl@arg+3,f
  8827     07A8                     i1l1387:
  8828     07A8  1003               	clrc
  8829     07A9  0CC8               	rrf	___xxtofl@exp,f
  8830     07AA  0848               	movf	___xxtofl@exp,w
  8831     07AB  00C3               	movwf	??___xxtofl
  8832     07AC  01C4               	clrf	??___xxtofl+1
  8833     07AD  01C5               	clrf	??___xxtofl+2
  8834     07AE  01C6               	clrf	??___xxtofl+3
  8835     07AF  3018               	movlw	24
  8836     07B0                     u219_25:
  8837     07B0  35C3               	lslf	??___xxtofl,f
  8838     07B1  0DC4               	rlf	??___xxtofl+1,f
  8839     07B2  0DC5               	rlf	??___xxtofl+2,f
  8840     07B3  0DC6               	rlf	??___xxtofl+3,f
  8841     07B4  0B89               	decfsz	9,f
  8842     07B5  2FB0               	goto	u219_25
  8843     07B6  0843               	movf	??___xxtofl,w
  8844     07B7  04C9               	iorwf	___xxtofl@arg,f
  8845     07B8  0844               	movf	??___xxtofl+1,w
  8846     07B9  04CA               	iorwf	___xxtofl@arg+1,f
  8847     07BA  0845               	movf	??___xxtofl+2,w
  8848     07BB  04CB               	iorwf	___xxtofl@arg+2,f
  8849     07BC  0846               	movf	??___xxtofl+3,w
  8850     07BD  04CC               	iorwf	___xxtofl@arg+3,f
  8851     07BE  0847               	movf	___xxtofl@sign,w
  8852     07BF  1D03               	btfss	3,2
  8853     07C0  1FC2               	btfss	___xxtofl@val+3,7
  8854     07C1  2FC3               	goto	i1l2612
  8855     07C2  17CC               	bsf	___xxtofl@arg+3,7
  8856     07C3                     i1l2612:
  8857     07C3  084C               	movf	___xxtofl@arg+3,w
  8858     07C4  00C2               	movwf	?___xxtofl+3
  8859     07C5  084B               	movf	___xxtofl@arg+2,w
  8860     07C6  00C1               	movwf	?___xxtofl+2
  8861     07C7  084A               	movf	___xxtofl@arg+1,w
  8862     07C8  00C0               	movwf	?___xxtofl+1
  8863     07C9  0849               	movf	___xxtofl@arg,w
  8864     07CA  00BF               	movwf	?___xxtofl
  8865     07CB  0008               	return
  8866     07CC                     __end_of___xxtofl:
  8867                           
  8868                           	psect	text51
  8869     0046                     __ptext51:	
  8870 ;; *************** function ___flmul *****************
  8871 ;; Defined at:
  8872 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcmul.c"
  8873 ;; Parameters:    Size  Location     Type
  8874 ;;  b               4    0[BANK0 ] unsigned char 
  8875 ;;  a               4    4[BANK0 ] unsigned char 
  8876 ;; Auto vars:     Size  Location     Type
  8877 ;;  prod            4   15[BANK0 ] struct .
  8878 ;;  grs             4   10[BANK0 ] unsigned long 
  8879 ;;  temp            2   19[BANK0 ] struct .
  8880 ;;  bexp            1   14[BANK0 ] unsigned char 
  8881 ;;  aexp            1    9[BANK0 ] unsigned char 
  8882 ;;  sign            1    8[BANK0 ] unsigned char 
  8883 ;; Return value:  Size  Location     Type
  8884 ;;                  4    0[BANK0 ] unsigned char 
  8885 ;; Registers used:
  8886 ;;		wreg, status,2, status,0, pclath, cstack
  8887 ;; Tracked objects:
  8888 ;;		On entry : 1F/0
  8889 ;;		On exit  : 1F/0
  8890 ;;		Unchanged: 0/0
  8891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8892 ;;      Params:         0       8       0       0       0       0
  8893 ;;      Locals:         0      13       0       0       0       0
  8894 ;;      Temps:          5       0       0       0       0       0
  8895 ;;      Totals:         5      21       0       0       0       0
  8896 ;;Total ram usage:       26 bytes
  8897 ;; Hardware stack levels used: 1
  8898 ;; Hardware stack levels required when called: 1
  8899 ;; This function calls:
  8900 ;;		__Umul8_16
  8901 ;; This function is called by:
  8902 ;;		_mede_height
  8903 ;; This function uses a non-reentrant model
  8904 ;;
  8905                           
  8906     0046                     ___flmul:	
  8907                           ;psect for function ___flmul
  8908                           
  8909                           
  8910                           ;incstack = 0
  8911                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  8912     0046  0823               	movf	___flmul@b+3,w
  8913     0047  3980               	andlw	128
  8914     0048  00A8               	movwf	___flmul@sign
  8915     0049  3523               	lslf	___flmul@b+3,w
  8916     004A  00AE               	movwf	___flmul@bexp
  8917     004B  1BA2               	btfsc	___flmul@b+2,7
  8918     004C  142E               	bsf	___flmul@bexp,0
  8919     004D  082E               	movf	___flmul@bexp,w
  8920     004E  1903               	btfsc	3,2
  8921     004F  285D               	goto	i1l2448
  8922     0050  0A2E               	incf	___flmul@bexp,w
  8923     0051  1D03               	btfss	3,2
  8924     0052  285B               	goto	i1l2446
  8925     0053  3000               	movlw	0
  8926     0054  00A3               	movwf	___flmul@b+3
  8927     0055  3000               	movlw	0
  8928     0056  00A2               	movwf	___flmul@b+2
  8929     0057  3000               	movlw	0
  8930     0058  00A1               	movwf	___flmul@b+1
  8931     0059  3000               	movlw	0
  8932     005A  00A0               	movwf	___flmul@b
  8933     005B                     i1l2446:
  8934     005B  17A2               	bsf	___flmul@b+2,7
  8935     005C  2865               	goto	i1l2450
  8936     005D                     i1l2448:
  8937     005D  3000               	movlw	0
  8938     005E  00A3               	movwf	___flmul@b+3
  8939     005F  3000               	movlw	0
  8940     0060  00A2               	movwf	___flmul@b+2
  8941     0061  3000               	movlw	0
  8942     0062  00A1               	movwf	___flmul@b+1
  8943     0063  3000               	movlw	0
  8944     0064  00A0               	movwf	___flmul@b
  8945     0065                     i1l2450:
  8946     0065  0827               	movf	___flmul@a+3,w
  8947     0066  3980               	andlw	128
  8948     0067  00F9               	movwf	??___flmul
  8949     0068  0879               	movf	??___flmul,w
  8950     0069  06A8               	xorwf	___flmul@sign,f
  8951     006A  3527               	lslf	___flmul@a+3,w
  8952     006B  00A9               	movwf	___flmul@aexp
  8953     006C  1BA6               	btfsc	___flmul@a+2,7
  8954     006D  1429               	bsf	___flmul@aexp,0
  8955     006E  0829               	movf	___flmul@aexp,w
  8956     006F  1903               	btfsc	3,2
  8957     0070  287E               	goto	i1l2466
  8958     0071  0A29               	incf	___flmul@aexp,w
  8959     0072  1D03               	btfss	3,2
  8960     0073  287C               	goto	i1l2464
  8961     0074  3000               	movlw	0
  8962     0075  00A7               	movwf	___flmul@a+3
  8963     0076  3000               	movlw	0
  8964     0077  00A6               	movwf	___flmul@a+2
  8965     0078  3000               	movlw	0
  8966     0079  00A5               	movwf	___flmul@a+1
  8967     007A  3000               	movlw	0
  8968     007B  00A4               	movwf	___flmul@a
  8969     007C                     i1l2464:
  8970     007C  17A6               	bsf	___flmul@a+2,7
  8971     007D  2886               	goto	i1l2468
  8972     007E                     i1l2466:
  8973     007E  3000               	movlw	0
  8974     007F  00A7               	movwf	___flmul@a+3
  8975     0080  3000               	movlw	0
  8976     0081  00A6               	movwf	___flmul@a+2
  8977     0082  3000               	movlw	0
  8978     0083  00A5               	movwf	___flmul@a+1
  8979     0084  3000               	movlw	0
  8980     0085  00A4               	movwf	___flmul@a
  8981     0086                     i1l2468:
  8982     0086  0829               	movf	___flmul@aexp,w
  8983     0087  1D03               	btfss	3,2
  8984     0088  082E               	movf	___flmul@bexp,w
  8985     0089  1D03               	btfss	3,2
  8986     008A  2894               	goto	i1l2476
  8987     008B  3000               	movlw	0
  8988     008C  00A3               	movwf	?___flmul+3
  8989     008D  3000               	movlw	0
  8990     008E  00A2               	movwf	?___flmul+2
  8991     008F  3000               	movlw	0
  8992     0090  00A1               	movwf	?___flmul+1
  8993     0091  3000               	movlw	0
  8994     0092  00A0               	movwf	?___flmul
  8995     0093  0008               	return
  8996     0094                     i1l2476:
  8997     0094  0820               	movf	___flmul@b,w
  8998     0095  00F0               	movwf	__Umul8_16@multiplicand
  8999     0096  0826               	movf	___flmul@a+2,w
  9000     0097  318C  24E4  3180   	fcall	__Umul8_16
  9001     009A  0871               	movf	?__Umul8_16+1,w
  9002     009B  00B4               	movwf	___flmul@temp+1
  9003     009C  0870               	movf	?__Umul8_16,w
  9004     009D  00B3               	movwf	___flmul@temp
  9005     009E  0833               	movf	___flmul@temp,w
  9006     009F  00F9               	movwf	??___flmul
  9007     00A0  01FA               	clrf	??___flmul+1
  9008     00A1  01FB               	clrf	??___flmul+2
  9009     00A2  01FC               	clrf	??___flmul+3
  9010     00A3  087C               	movf	??___flmul+3,w
  9011     00A4  00AD               	movwf	___flmul@grs+3
  9012     00A5  087B               	movf	??___flmul+2,w
  9013     00A6  00AC               	movwf	___flmul@grs+2
  9014     00A7  087A               	movf	??___flmul+1,w
  9015     00A8  00AB               	movwf	___flmul@grs+1
  9016     00A9  0879               	movf	??___flmul,w
  9017     00AA  00AA               	movwf	___flmul@grs
  9018     00AB  0834               	movf	___flmul@temp+1,w
  9019     00AC  00F9               	movwf	??___flmul
  9020     00AD  01FA               	clrf	??___flmul+1
  9021     00AE  01FB               	clrf	??___flmul+2
  9022     00AF  01FC               	clrf	??___flmul+3
  9023     00B0  087C               	movf	??___flmul+3,w
  9024     00B1  00B2               	movwf	___flmul@prod+3
  9025     00B2  087B               	movf	??___flmul+2,w
  9026     00B3  00B1               	movwf	___flmul@prod+2
  9027     00B4  087A               	movf	??___flmul+1,w
  9028     00B5  00B0               	movwf	___flmul@prod+1
  9029     00B6  0879               	movf	??___flmul,w
  9030     00B7  00AF               	movwf	___flmul@prod
  9031     00B8  0821               	movf	___flmul@b+1,w
  9032     00B9  00F0               	movwf	__Umul8_16@multiplicand
  9033     00BA  0825               	movf	___flmul@a+1,w
  9034     00BB  318C  24E4  3180   	fcall	__Umul8_16
  9035     00BE  0871               	movf	?__Umul8_16+1,w
  9036     00BF  00B4               	movwf	___flmul@temp+1
  9037     00C0  0870               	movf	?__Umul8_16,w
  9038     00C1  00B3               	movwf	___flmul@temp
  9039     00C2  0833               	movf	___flmul@temp,w
  9040     00C3  00F9               	movwf	??___flmul
  9041     00C4  01FA               	clrf	??___flmul+1
  9042     00C5  01FB               	clrf	??___flmul+2
  9043     00C6  01FC               	clrf	??___flmul+3
  9044     00C7  0879               	movf	??___flmul,w
  9045     00C8  07AA               	addwf	___flmul@grs,f
  9046     00C9  087A               	movf	??___flmul+1,w
  9047     00CA  3DAB               	addwfc	___flmul@grs+1,f
  9048     00CB  087B               	movf	??___flmul+2,w
  9049     00CC  3DAC               	addwfc	___flmul@grs+2,f
  9050     00CD  087C               	movf	??___flmul+3,w
  9051     00CE  3DAD               	addwfc	___flmul@grs+3,f
  9052     00CF  0834               	movf	___flmul@temp+1,w
  9053     00D0  00F9               	movwf	??___flmul
  9054     00D1  01FA               	clrf	??___flmul+1
  9055     00D2  01FB               	clrf	??___flmul+2
  9056     00D3  01FC               	clrf	??___flmul+3
  9057     00D4  0879               	movf	??___flmul,w
  9058     00D5  07AF               	addwf	___flmul@prod,f
  9059     00D6  087A               	movf	??___flmul+1,w
  9060     00D7  3DB0               	addwfc	___flmul@prod+1,f
  9061     00D8  087B               	movf	??___flmul+2,w
  9062     00D9  3DB1               	addwfc	___flmul@prod+2,f
  9063     00DA  087C               	movf	??___flmul+3,w
  9064     00DB  3DB2               	addwfc	___flmul@prod+3,f
  9065     00DC  0822               	movf	___flmul@b+2,w
  9066     00DD  00F0               	movwf	__Umul8_16@multiplicand
  9067     00DE  0824               	movf	___flmul@a,w
  9068     00DF  318C  24E4  3180   	fcall	__Umul8_16
  9069     00E2  0871               	movf	?__Umul8_16+1,w
  9070     00E3  00B4               	movwf	___flmul@temp+1
  9071     00E4  0870               	movf	?__Umul8_16,w
  9072     00E5  00B3               	movwf	___flmul@temp
  9073     00E6  0833               	movf	___flmul@temp,w
  9074     00E7  00F9               	movwf	??___flmul
  9075     00E8  01FA               	clrf	??___flmul+1
  9076     00E9  01FB               	clrf	??___flmul+2
  9077     00EA  01FC               	clrf	??___flmul+3
  9078     00EB  0879               	movf	??___flmul,w
  9079     00EC  07AA               	addwf	___flmul@grs,f
  9080     00ED  087A               	movf	??___flmul+1,w
  9081     00EE  3DAB               	addwfc	___flmul@grs+1,f
  9082     00EF  087B               	movf	??___flmul+2,w
  9083     00F0  3DAC               	addwfc	___flmul@grs+2,f
  9084     00F1  087C               	movf	??___flmul+3,w
  9085     00F2  3DAD               	addwfc	___flmul@grs+3,f
  9086     00F3  0834               	movf	___flmul@temp+1,w
  9087     00F4  00F9               	movwf	??___flmul
  9088     00F5  01FA               	clrf	??___flmul+1
  9089     00F6  01FB               	clrf	??___flmul+2
  9090     00F7  01FC               	clrf	??___flmul+3
  9091     00F8  0879               	movf	??___flmul,w
  9092     00F9  07AF               	addwf	___flmul@prod,f
  9093     00FA  087A               	movf	??___flmul+1,w
  9094     00FB  3DB0               	addwfc	___flmul@prod+1,f
  9095     00FC  087B               	movf	??___flmul+2,w
  9096     00FD  3DB1               	addwfc	___flmul@prod+2,f
  9097     00FE  087C               	movf	??___flmul+3,w
  9098     00FF  3DB2               	addwfc	___flmul@prod+3,f
  9099     0100  3008               	movlw	8
  9100     0101                     u191_25:
  9101     0101  35AA               	lslf	___flmul@grs,f
  9102     0102  0DAB               	rlf	___flmul@grs+1,f
  9103     0103  0DAC               	rlf	___flmul@grs+2,f
  9104     0104  0DAD               	rlf	___flmul@grs+3,f
  9105     0105  0B89               	decfsz	9,f
  9106     0106  2901               	goto	u191_25
  9107     0107  0821               	movf	___flmul@b+1,w
  9108     0108  00F0               	movwf	__Umul8_16@multiplicand
  9109     0109  0824               	movf	___flmul@a,w
  9110     010A  318C  24E4  3180   	fcall	__Umul8_16
  9111     010D  0871               	movf	?__Umul8_16+1,w
  9112     010E  00B4               	movwf	___flmul@temp+1
  9113     010F  0870               	movf	?__Umul8_16,w
  9114     0110  00B3               	movwf	___flmul@temp
  9115     0111  0833               	movf	___flmul@temp,w
  9116     0112  07AA               	addwf	___flmul@grs,f
  9117     0113  0834               	movf	___flmul@temp+1,w
  9118     0114  3DAB               	addwfc	___flmul@grs+1,f
  9119     0115  3000               	movlw	0
  9120     0116  3DAC               	addwfc	___flmul@grs+2,f
  9121     0117  3DAD               	addwfc	___flmul@grs+3,f
  9122     0118  0820               	movf	___flmul@b,w
  9123     0119  00F0               	movwf	__Umul8_16@multiplicand
  9124     011A  0825               	movf	___flmul@a+1,w
  9125     011B  318C  24E4  3180   	fcall	__Umul8_16
  9126     011E  0871               	movf	?__Umul8_16+1,w
  9127     011F  00B4               	movwf	___flmul@temp+1
  9128     0120  0870               	movf	?__Umul8_16,w
  9129     0121  00B3               	movwf	___flmul@temp
  9130     0122  0833               	movf	___flmul@temp,w
  9131     0123  07AA               	addwf	___flmul@grs,f
  9132     0124  0834               	movf	___flmul@temp+1,w
  9133     0125  3DAB               	addwfc	___flmul@grs+1,f
  9134     0126  3000               	movlw	0
  9135     0127  3DAC               	addwfc	___flmul@grs+2,f
  9136     0128  3DAD               	addwfc	___flmul@grs+3,f
  9137     0129  3008               	movlw	8
  9138     012A                     u192_25:
  9139     012A  35AA               	lslf	___flmul@grs,f
  9140     012B  0DAB               	rlf	___flmul@grs+1,f
  9141     012C  0DAC               	rlf	___flmul@grs+2,f
  9142     012D  0DAD               	rlf	___flmul@grs+3,f
  9143     012E  0B89               	decfsz	9,f
  9144     012F  292A               	goto	u192_25
  9145     0130  0820               	movf	___flmul@b,w
  9146     0131  00F0               	movwf	__Umul8_16@multiplicand
  9147     0132  0824               	movf	___flmul@a,w
  9148     0133  318C  24E4  3180   	fcall	__Umul8_16
  9149     0136  0871               	movf	?__Umul8_16+1,w
  9150     0137  00B4               	movwf	___flmul@temp+1
  9151     0138  0870               	movf	?__Umul8_16,w
  9152     0139  00B3               	movwf	___flmul@temp
  9153     013A  0833               	movf	___flmul@temp,w
  9154     013B  07AA               	addwf	___flmul@grs,f
  9155     013C  0834               	movf	___flmul@temp+1,w
  9156     013D  3DAB               	addwfc	___flmul@grs+1,f
  9157     013E  3000               	movlw	0
  9158     013F  3DAC               	addwfc	___flmul@grs+2,f
  9159     0140  3DAD               	addwfc	___flmul@grs+3,f
  9160     0141  0821               	movf	___flmul@b+1,w
  9161     0142  00F0               	movwf	__Umul8_16@multiplicand
  9162     0143  0826               	movf	___flmul@a+2,w
  9163     0144  318C  24E4  3180   	fcall	__Umul8_16
  9164     0147  0871               	movf	?__Umul8_16+1,w
  9165     0148  00B4               	movwf	___flmul@temp+1
  9166     0149  0870               	movf	?__Umul8_16,w
  9167     014A  00B3               	movwf	___flmul@temp
  9168     014B  0833               	movf	___flmul@temp,w
  9169     014C  07AF               	addwf	___flmul@prod,f
  9170     014D  0834               	movf	___flmul@temp+1,w
  9171     014E  3DB0               	addwfc	___flmul@prod+1,f
  9172     014F  3000               	movlw	0
  9173     0150  3DB1               	addwfc	___flmul@prod+2,f
  9174     0151  3DB2               	addwfc	___flmul@prod+3,f
  9175     0152  0822               	movf	___flmul@b+2,w
  9176     0153  00F0               	movwf	__Umul8_16@multiplicand
  9177     0154  0825               	movf	___flmul@a+1,w
  9178     0155  318C  24E4  3180   	fcall	__Umul8_16
  9179     0158  0871               	movf	?__Umul8_16+1,w
  9180     0159  00B4               	movwf	___flmul@temp+1
  9181     015A  0870               	movf	?__Umul8_16,w
  9182     015B  00B3               	movwf	___flmul@temp
  9183     015C  0833               	movf	___flmul@temp,w
  9184     015D  07AF               	addwf	___flmul@prod,f
  9185     015E  0834               	movf	___flmul@temp+1,w
  9186     015F  3DB0               	addwfc	___flmul@prod+1,f
  9187     0160  3000               	movlw	0
  9188     0161  3DB1               	addwfc	___flmul@prod+2,f
  9189     0162  3DB2               	addwfc	___flmul@prod+3,f
  9190     0163  0822               	movf	___flmul@b+2,w
  9191     0164  00F0               	movwf	__Umul8_16@multiplicand
  9192     0165  0826               	movf	___flmul@a+2,w
  9193     0166  318C  24E4  3180   	fcall	__Umul8_16
  9194     0169  0871               	movf	?__Umul8_16+1,w
  9195     016A  00B4               	movwf	___flmul@temp+1
  9196     016B  0870               	movf	?__Umul8_16,w
  9197     016C  00B3               	movwf	___flmul@temp
  9198     016D  0833               	movf	___flmul@temp,w
  9199     016E  00F9               	movwf	??___flmul
  9200     016F  0834               	movf	___flmul@temp+1,w
  9201     0170  00FA               	movwf	??___flmul+1
  9202     0171  01FB               	clrf	??___flmul+2
  9203     0172  01FC               	clrf	??___flmul+3
  9204     0173  3008               	movlw	8
  9205     0174                     u193_25:
  9206     0174  35F9               	lslf	??___flmul,f
  9207     0175  0DFA               	rlf	??___flmul+1,f
  9208     0176  0DFB               	rlf	??___flmul+2,f
  9209     0177  0DFC               	rlf	??___flmul+3,f
  9210     0178  0B89               	decfsz	9,f
  9211     0179  2974               	goto	u193_25
  9212     017A  0879               	movf	??___flmul,w
  9213     017B  07AF               	addwf	___flmul@prod,f
  9214     017C  087A               	movf	??___flmul+1,w
  9215     017D  3DB0               	addwfc	___flmul@prod+1,f
  9216     017E  087B               	movf	??___flmul+2,w
  9217     017F  3DB1               	addwfc	___flmul@prod+2,f
  9218     0180  087C               	movf	??___flmul+3,w
  9219     0181  3DB2               	addwfc	___flmul@prod+3,f
  9220     0182  082D               	movf	___flmul@grs+3,w
  9221     0183  00F9               	movwf	??___flmul
  9222     0184  01FA               	clrf	??___flmul+1
  9223     0185  01FB               	clrf	??___flmul+2
  9224     0186  01FC               	clrf	??___flmul+3
  9225     0187  0879               	movf	??___flmul,w
  9226     0188  07AF               	addwf	___flmul@prod,f
  9227     0189  087A               	movf	??___flmul+1,w
  9228     018A  3DB0               	addwfc	___flmul@prod+1,f
  9229     018B  087B               	movf	??___flmul+2,w
  9230     018C  3DB1               	addwfc	___flmul@prod+2,f
  9231     018D  087C               	movf	??___flmul+3,w
  9232     018E  3DB2               	addwfc	___flmul@prod+3,f
  9233     018F  3008               	movlw	8
  9234     0190                     u194_25:
  9235     0190  35AA               	lslf	___flmul@grs,f
  9236     0191  0DAB               	rlf	___flmul@grs+1,f
  9237     0192  0DAC               	rlf	___flmul@grs+2,f
  9238     0193  0DAD               	rlf	___flmul@grs+3,f
  9239     0194  0B89               	decfsz	9,f
  9240     0195  2990               	goto	u194_25
  9241     0196  082E               	movf	___flmul@bexp,w
  9242     0197  0729               	addwf	___flmul@aexp,w
  9243     0198  00F9               	movwf	??___flmul
  9244     0199  01FA               	clrf	??___flmul+1
  9245     019A  0DFA               	rlf	??___flmul+1,f
  9246     019B  0879               	movf	??___flmul,w
  9247     019C  3E82               	addlw	130
  9248     019D  00B3               	movwf	___flmul@temp
  9249     019E  30FF               	movlw	255
  9250     019F  3D7A               	addwfc	??___flmul+1,w
  9251     01A0  00B4               	movwf	___flmul@temp+1
  9252     01A1                     i1l2528:
  9253     01A1  1BB1               	btfsc	___flmul@prod+2,7
  9254     01A2  29B8               	goto	i1l2530
  9255     01A3  3001               	movlw	1
  9256     01A4                     u195_25:
  9257     01A4  35AF               	lslf	___flmul@prod,f
  9258     01A5  0DB0               	rlf	___flmul@prod+1,f
  9259     01A6  0DB1               	rlf	___flmul@prod+2,f
  9260     01A7  0DB2               	rlf	___flmul@prod+3,f
  9261     01A8  0B89               	decfsz	9,f
  9262     01A9  29A4               	goto	u195_25
  9263     01AA  1BAD               	btfsc	___flmul@grs+3,7
  9264     01AB  142F               	bsf	___flmul@prod,0
  9265     01AC  3001               	movlw	1
  9266     01AD                     u197_25:
  9267     01AD  35AA               	lslf	___flmul@grs,f
  9268     01AE  0DAB               	rlf	___flmul@grs+1,f
  9269     01AF  0DAC               	rlf	___flmul@grs+2,f
  9270     01B0  0DAD               	rlf	___flmul@grs+3,f
  9271     01B1  0B89               	decfsz	9,f
  9272     01B2  29AD               	goto	u197_25
  9273     01B3  30FF               	movlw	255
  9274     01B4  07B3               	addwf	___flmul@temp,f
  9275     01B5  30FF               	movlw	255
  9276     01B6  3DB4               	addwfc	___flmul@temp+1,f
  9277     01B7  29A1               	goto	i1l2528
  9278     01B8                     i1l2530:
  9279     01B8  01A9               	clrf	___flmul@aexp
  9280     01B9  1FAD               	btfss	___flmul@grs+3,7
  9281     01BA  29D1               	goto	i1l2540
  9282     01BB  30FF               	movlw	255
  9283     01BC  052A               	andwf	___flmul@grs,w
  9284     01BD  00F9               	movwf	??___flmul
  9285     01BE  30FF               	movlw	255
  9286     01BF  052B               	andwf	___flmul@grs+1,w
  9287     01C0  00FA               	movwf	??___flmul+1
  9288     01C1  30FF               	movlw	255
  9289     01C2  052C               	andwf	___flmul@grs+2,w
  9290     01C3  00FB               	movwf	??___flmul+2
  9291     01C4  307F               	movlw	127
  9292     01C5  052D               	andwf	___flmul@grs+3,w
  9293     01C6  00FC               	movwf	??___flmul+3
  9294     01C7  087C               	movf	??___flmul+3,w
  9295     01C8  047B               	iorwf	??___flmul+2,w
  9296     01C9  047A               	iorwf	??___flmul+1,w
  9297     01CA  0479               	iorwf	??___flmul,w
  9298     01CB  1903               	skipnz
  9299     01CC  182F               	btfsc	___flmul@prod,0
  9300     01CD  29CF               	goto	i1l2536
  9301     01CE  29D1               	goto	i1l2540
  9302     01CF                     i1l2536:
  9303     01CF  01A9               	clrf	___flmul@aexp
  9304     01D0  0AA9               	incf	___flmul@aexp,f
  9305     01D1                     i1l2540:
  9306     01D1  0829               	movf	___flmul@aexp,w
  9307     01D2  1903               	btfsc	3,2
  9308     01D3  29FA               	goto	i1l2550
  9309     01D4  3001               	movlw	1
  9310     01D5  07AF               	addwf	___flmul@prod,f
  9311     01D6  3000               	movlw	0
  9312     01D7  3DB0               	addwfc	___flmul@prod+1,f
  9313     01D8  3000               	movlw	0
  9314     01D9  3DB1               	addwfc	___flmul@prod+2,f
  9315     01DA  3000               	movlw	0
  9316     01DB  3DB2               	addwfc	___flmul@prod+3,f
  9317     01DC  1C32               	btfss	___flmul@prod+3,0
  9318     01DD  29FA               	goto	i1l2550
  9319     01DE  082F               	movf	___flmul@prod,w
  9320     01DF  00F9               	movwf	??___flmul
  9321     01E0  0830               	movf	___flmul@prod+1,w
  9322     01E1  00FA               	movwf	??___flmul+1
  9323     01E2  0831               	movf	___flmul@prod+2,w
  9324     01E3  00FB               	movwf	??___flmul+2
  9325     01E4  0832               	movf	___flmul@prod+3,w
  9326     01E5  00FC               	movwf	??___flmul+3
  9327     01E6  3001               	movlw	1
  9328     01E7  00FD               	movwf	??___flmul+4
  9329     01E8                     u204_25:
  9330     01E8  37FC               	asrf	??___flmul+3,f
  9331     01E9  0CFB               	rrf	??___flmul+2,f
  9332     01EA  0CFA               	rrf	??___flmul+1,f
  9333     01EB  0CF9               	rrf	??___flmul,f
  9334     01EC  0BFD               	decfsz	??___flmul+4,f
  9335     01ED  29E8               	goto	u204_25
  9336     01EE  087C               	movf	??___flmul+3,w
  9337     01EF  00B2               	movwf	___flmul@prod+3
  9338     01F0  087B               	movf	??___flmul+2,w
  9339     01F1  00B1               	movwf	___flmul@prod+2
  9340     01F2  087A               	movf	??___flmul+1,w
  9341     01F3  00B0               	movwf	___flmul@prod+1
  9342     01F4  0879               	movf	??___flmul,w
  9343     01F5  00AF               	movwf	___flmul@prod
  9344     01F6  3001               	movlw	1
  9345     01F7  07B3               	addwf	___flmul@temp,f
  9346     01F8  3000               	movlw	0
  9347     01F9  3DB4               	addwfc	___flmul@temp+1,f
  9348     01FA                     i1l2550:
  9349     01FA  0834               	movf	___flmul@temp+1,w
  9350     01FB  3A80               	xorlw	128
  9351     01FC  00F9               	movwf	??___flmul
  9352     01FD  3080               	movlw	128
  9353     01FE  0279               	subwf	??___flmul,w
  9354     01FF  1D03               	skipz
  9355     0200  2A03               	goto	u205_25
  9356     0201  30FF               	movlw	255
  9357     0202  0233               	subwf	___flmul@temp,w
  9358     0203                     u205_25:
  9359     0203  1C03               	skipc
  9360     0204  2A0F               	goto	i1l2554
  9361     0205  307F               	movlw	127
  9362     0206  0020               	movlb	0	; select bank0
  9363     0207  00B2               	movwf	___flmul@prod+3
  9364     0208  3080               	movlw	128
  9365     0209  00B1               	movwf	___flmul@prod+2
  9366     020A  3000               	movlw	0
  9367     020B  00B0               	movwf	___flmul@prod+1
  9368     020C  3000               	movlw	0
  9369     020D  00AF               	movwf	___flmul@prod
  9370     020E  2A35               	goto	i1l1341
  9371     020F                     i1l2554:
  9372     020F  0020               	movlb	0	; select bank0
  9373     0210  0834               	movf	___flmul@temp+1,w
  9374     0211  3A80               	xorlw	128
  9375     0212  00F9               	movwf	??___flmul
  9376     0213  3080               	movlw	128
  9377     0214  0279               	subwf	??___flmul,w
  9378     0215  1D03               	skipz
  9379     0216  2A19               	goto	u206_25
  9380     0217  3001               	movlw	1
  9381     0218  0233               	subwf	___flmul@temp,w
  9382     0219                     u206_25:
  9383     0219  1803               	skipnc
  9384     021A  2A26               	goto	i1l2560
  9385     021B  3000               	movlw	0
  9386     021C  0020               	movlb	0	; select bank0
  9387     021D  00B2               	movwf	___flmul@prod+3
  9388     021E  3000               	movlw	0
  9389     021F  00B1               	movwf	___flmul@prod+2
  9390     0220  3000               	movlw	0
  9391     0221  00B0               	movwf	___flmul@prod+1
  9392     0222  3000               	movlw	0
  9393     0223  00AF               	movwf	___flmul@prod
  9394     0224  01A8               	clrf	___flmul@sign
  9395     0225  2A35               	goto	i1l1341
  9396     0226                     i1l2560:
  9397     0226  0020               	movlb	0	; select bank0
  9398     0227  0833               	movf	___flmul@temp,w
  9399     0228  00AE               	movwf	___flmul@bexp
  9400     0229  30FF               	movlw	255
  9401     022A  05AF               	andwf	___flmul@prod,f
  9402     022B  30FF               	movlw	255
  9403     022C  05B0               	andwf	___flmul@prod+1,f
  9404     022D  307F               	movlw	127
  9405     022E  05B1               	andwf	___flmul@prod+2,f
  9406     022F  3000               	movlw	0
  9407     0230  05B2               	andwf	___flmul@prod+3,f
  9408     0231  182E               	btfsc	___flmul@bexp,0
  9409     0232  17B1               	bsf	___flmul@prod+2,7
  9410     0233  362E               	lsrf	___flmul@bexp,w
  9411     0234  00B2               	movwf	___flmul@prod+3
  9412     0235                     i1l1341:
  9413     0235  0828               	movf	___flmul@sign,w
  9414     0236  00F9               	movwf	??___flmul
  9415     0237  0879               	movf	??___flmul,w
  9416     0238  04B2               	iorwf	___flmul@prod+3,f
  9417     0239  0832               	movf	___flmul@prod+3,w
  9418     023A  00A3               	movwf	?___flmul+3
  9419     023B  0831               	movf	___flmul@prod+2,w
  9420     023C  00A2               	movwf	?___flmul+2
  9421     023D  0830               	movf	___flmul@prod+1,w
  9422     023E  00A1               	movwf	?___flmul+1
  9423     023F  082F               	movf	___flmul@prod,w
  9424     0240  00A0               	movwf	?___flmul
  9425     0241  0008               	return
  9426     0242                     __end_of___flmul:
  9427                           
  9428                           	psect	text52
  9429     0CE4                     __ptext52:	
  9430 ;; *************** function __Umul8_16 *****************
  9431 ;; Defined at:
  9432 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul8_16.c"
  9433 ;; Parameters:    Size  Location     Type
  9434 ;;  multiplier      1    wreg     unsigned char 
  9435 ;;  multiplicand    1    0[COMMON] unsigned char 
  9436 ;; Auto vars:     Size  Location     Type
  9437 ;;  multiplier      1    8[COMMON] unsigned char 
  9438 ;;  word_mpld       2    6[COMMON] unsigned short 
  9439 ;;  product         2    4[COMMON] unsigned short 
  9440 ;; Return value:  Size  Location     Type
  9441 ;;                  2    0[COMMON] unsigned int 
  9442 ;; Registers used:
  9443 ;;		wreg, status,2, status,0
  9444 ;; Tracked objects:
  9445 ;;		On entry : 1F/0
  9446 ;;		On exit  : 1F/0
  9447 ;;		Unchanged: 1F/0
  9448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9449 ;;      Params:         2       0       0       0       0       0
  9450 ;;      Locals:         5       0       0       0       0       0
  9451 ;;      Temps:          2       0       0       0       0       0
  9452 ;;      Totals:         9       0       0       0       0       0
  9453 ;;Total ram usage:        9 bytes
  9454 ;; Hardware stack levels used: 1
  9455 ;; This function calls:
  9456 ;;		Nothing
  9457 ;; This function is called by:
  9458 ;;		___flmul
  9459 ;; This function uses a non-reentrant model
  9460 ;;
  9461                           
  9462     0CE4                     __Umul8_16:	
  9463                           ;psect for function __Umul8_16
  9464                           
  9465                           
  9466                           ;incstack = 0
  9467                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  9468                           ;__Umul8_16@multiplier stored from wreg
  9469     0CE4  00F8               	movwf	__Umul8_16@multiplier
  9470     0CE5  01F4               	clrf	__Umul8_16@product
  9471     0CE6  01F5               	clrf	__Umul8_16@product+1
  9472     0CE7  0870               	movf	__Umul8_16@multiplicand,w
  9473     0CE8  00F2               	movwf	??__Umul8_16
  9474     0CE9  01F3               	clrf	??__Umul8_16+1
  9475     0CEA  0872               	movf	??__Umul8_16,w
  9476     0CEB  00F6               	movwf	__Umul8_16@word_mpld
  9477     0CEC  0873               	movf	??__Umul8_16+1,w
  9478     0CED  00F7               	movwf	__Umul8_16@word_mpld+1
  9479     0CEE                     i1l2306:
  9480     0CEE  1C78               	btfss	__Umul8_16@multiplier,0
  9481     0CEF  2CF4               	goto	i1l1348
  9482     0CF0  0876               	movf	__Umul8_16@word_mpld,w
  9483     0CF1  07F4               	addwf	__Umul8_16@product,f
  9484     0CF2  0877               	movf	__Umul8_16@word_mpld+1,w
  9485     0CF3  3DF5               	addwfc	__Umul8_16@product+1,f
  9486     0CF4                     i1l1348:
  9487     0CF4  3001               	movlw	1
  9488     0CF5                     u157_25:
  9489     0CF5  35F6               	lslf	__Umul8_16@word_mpld,f
  9490     0CF6  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  9491     0CF7  0B89               	decfsz	9,f
  9492     0CF8  2CF5               	goto	u157_25
  9493     0CF9  1003               	clrc
  9494     0CFA  0CF8               	rrf	__Umul8_16@multiplier,f
  9495     0CFB  0878               	movf	__Umul8_16@multiplier,w
  9496     0CFC  1D03               	btfss	3,2
  9497     0CFD  2CEE               	goto	i1l2306
  9498     0CFE  0875               	movf	__Umul8_16@product+1,w
  9499     0CFF  00F1               	movwf	?__Umul8_16+1
  9500     0D00  0874               	movf	__Umul8_16@product,w
  9501     0D01  00F0               	movwf	?__Umul8_16
  9502     0D02  0008               	return
  9503     0D03                     __end_of__Umul8_16:
  9504                           
  9505                           	psect	text53
  9506     0B99                     __ptext53:	
  9507 ;; *************** function _TMR1_Reload *****************
  9508 ;; Defined at:
  9509 ;;		line 146 in file "mcc_generated_files/tmr1.c"
  9510 ;; Parameters:    Size  Location     Type
  9511 ;;		None
  9512 ;; Auto vars:     Size  Location     Type
  9513 ;;		None
  9514 ;; Return value:  Size  Location     Type
  9515 ;;                  1    wreg      void 
  9516 ;; Registers used:
  9517 ;;		wreg, status,2, status,0, pclath, cstack
  9518 ;; Tracked objects:
  9519 ;;		On entry : 1F/0
  9520 ;;		On exit  : 1F/0
  9521 ;;		Unchanged: 0/0
  9522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9523 ;;      Params:         0       0       0       0       0       0
  9524 ;;      Locals:         0       0       0       0       0       0
  9525 ;;      Temps:          0       0       0       0       0       0
  9526 ;;      Totals:         0       0       0       0       0       0
  9527 ;;Total ram usage:        0 bytes
  9528 ;; Hardware stack levels used: 1
  9529 ;; Hardware stack levels required when called: 1
  9530 ;; This function calls:
  9531 ;;		_TMR1_WriteTimer
  9532 ;; This function is called by:
  9533 ;;		_mede_height
  9534 ;; This function uses a non-reentrant model
  9535 ;;
  9536                           
  9537     0B99                     _TMR1_Reload:	
  9538                           ;psect for function _TMR1_Reload
  9539                           
  9540                           
  9541                           ;mcc_generated_files/tmr1.c: 148:     TMR1_WriteTimer(timer1ReloadVal);
  9542                           
  9543                           ;incstack = 0
  9544                           ; Regs used in _TMR1_Reload: [wreg+status,2+status,0+pclath+cstack]
  9545     0B99  0021               	movlb	1	; select bank1
  9546     0B9A  0844               	movf	(_timer1ReloadVal+1)^(0+128),w	;volatile
  9547     0B9B  00F1               	movwf	TMR1_WriteTimer@timerVal+1
  9548     0B9C  0843               	movf	_timer1ReloadVal^(0+128),w	;volatile
  9549     0B9D  00F0               	movwf	TMR1_WriteTimer@timerVal
  9550     0B9E  318C  241D         	fcall	_TMR1_WriteTimer
  9551     0BA0  0008               	return
  9552     0BA1                     __end_of_TMR1_Reload:
  9553                           
  9554                           	psect	text54
  9555     0C1D                     __ptext54:	
  9556 ;; *************** function _TMR1_WriteTimer *****************
  9557 ;; Defined at:
  9558 ;;		line 124 in file "mcc_generated_files/tmr1.c"
  9559 ;; Parameters:    Size  Location     Type
  9560 ;;  timerVal        2    0[COMMON] unsigned short 
  9561 ;; Auto vars:     Size  Location     Type
  9562 ;;		None
  9563 ;; Return value:  Size  Location     Type
  9564 ;;                  1    wreg      void 
  9565 ;; Registers used:
  9566 ;;		wreg
  9567 ;; Tracked objects:
  9568 ;;		On entry : 1F/1
  9569 ;;		On exit  : 1F/0
  9570 ;;		Unchanged: 0/0
  9571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9572 ;;      Params:         2       0       0       0       0       0
  9573 ;;      Locals:         0       0       0       0       0       0
  9574 ;;      Temps:          0       0       0       0       0       0
  9575 ;;      Totals:         2       0       0       0       0       0
  9576 ;;Total ram usage:        2 bytes
  9577 ;; Hardware stack levels used: 1
  9578 ;; This function calls:
  9579 ;;		Nothing
  9580 ;; This function is called by:
  9581 ;;		_TMR1_Reload
  9582 ;; This function uses a non-reentrant model
  9583 ;;
  9584                           
  9585     0C1D                     _TMR1_WriteTimer:	
  9586                           ;psect for function _TMR1_WriteTimer
  9587                           
  9588                           
  9589                           ;mcc_generated_files/tmr1.c: 124: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 125: {;mcc_generated_files/tmr1.c: 126:     if (T1CONbits.nT1SYNC == 1)
  9590                           
  9591                           ;incstack = 0
  9592                           ; Regs used in _TMR1_WriteTimer: [wreg]
  9593     0C1D  0020               	movlb	0	; select bank0
  9594     0C1E  1D18               	btfss	24,2	;volatile
  9595     0C1F  2C27               	goto	i1l2300
  9596                           
  9597                           ;mcc_generated_files/tmr1.c: 127:     {;mcc_generated_files/tmr1.c: 129:         T1CONbi
      +                          ts.TMR1ON = 0;
  9598     0C20  1018               	bcf	24,0	;volatile
  9599                           
  9600                           ;mcc_generated_files/tmr1.c: 132:         TMR1H = (uint8_t)(timerVal >> 8);
  9601     0C21  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  9602     0C22  0097               	movwf	23	;volatile
  9603                           
  9604                           ;mcc_generated_files/tmr1.c: 133:         TMR1L = (uint8_t)timerVal;
  9605     0C23  0870               	movf	TMR1_WriteTimer@timerVal,w
  9606     0C24  0096               	movwf	22	;volatile
  9607                           
  9608                           ;mcc_generated_files/tmr1.c: 136:         T1CONbits.TMR1ON =1;
  9609     0C25  1418               	bsf	24,0	;volatile
  9610                           
  9611                           ;mcc_generated_files/tmr1.c: 137:     }
  9612     0C26  0008               	return
  9613     0C27                     i1l2300:
  9614                           
  9615                           ;mcc_generated_files/tmr1.c: 139:     {;mcc_generated_files/tmr1.c: 141:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
  9616     0C27  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  9617     0C28  0097               	movwf	23	;volatile
  9618                           
  9619                           ;mcc_generated_files/tmr1.c: 142:         TMR1L = (uint8_t)timerVal;
  9620     0C29  0870               	movf	TMR1_WriteTimer@timerVal,w
  9621     0C2A  0096               	movwf	22	;volatile
  9622     0C2B  0008               	return
  9623     0C2C                     __end_of_TMR1_WriteTimer:
  9624                           
  9625                           	psect	text55
  9626     0C64                     __ptext55:	
  9627 ;; *************** function _TMR1_ReadTimer *****************
  9628 ;; Defined at:
  9629 ;;		line 109 in file "mcc_generated_files/tmr1.c"
  9630 ;; Parameters:    Size  Location     Type
  9631 ;;		None
  9632 ;; Auto vars:     Size  Location     Type
  9633 ;;  readVal         2    7[COMMON] unsigned short 
  9634 ;;  readValLow      1   10[COMMON] unsigned char 
  9635 ;;  readValHigh     1    9[COMMON] unsigned char 
  9636 ;; Return value:  Size  Location     Type
  9637 ;;                  2    0[COMMON] unsigned short 
  9638 ;; Registers used:
  9639 ;;		wreg
  9640 ;; Tracked objects:
  9641 ;;		On entry : 1F/0
  9642 ;;		On exit  : 1F/0
  9643 ;;		Unchanged: 0/0
  9644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9645 ;;      Params:         2       0       0       0       0       0
  9646 ;;      Locals:         4       0       0       0       0       0
  9647 ;;      Temps:          5       0       0       0       0       0
  9648 ;;      Totals:        11       0       0       0       0       0
  9649 ;;Total ram usage:       11 bytes
  9650 ;; Hardware stack levels used: 1
  9651 ;; This function calls:
  9652 ;;		Nothing
  9653 ;; This function is called by:
  9654 ;;		_mede_height
  9655 ;; This function uses a non-reentrant model
  9656 ;;
  9657                           
  9658     0C64                     _TMR1_ReadTimer:	
  9659                           ;psect for function _TMR1_ReadTimer
  9660                           
  9661                           
  9662                           ;mcc_generated_files/tmr1.c: 111:     uint16_t readVal;;mcc_generated_files/tmr1.c: 112:
      +                               uint8_t readValHigh;;mcc_generated_files/tmr1.c: 113:     uint8_t readValLow;;mcc_g
      +                          enerated_files/tmr1.c: 116:     readValLow = TMR1L;
  9663                           
  9664                           ;incstack = 0
  9665                           ; Regs used in _TMR1_ReadTimer: [wreg]
  9666     0C64  0816               	movf	22,w	;volatile
  9667     0C65  00FA               	movwf	TMR1_ReadTimer@readValLow
  9668                           
  9669                           ;mcc_generated_files/tmr1.c: 117:     readValHigh = TMR1H;
  9670     0C66  0817               	movf	23,w	;volatile
  9671     0C67  00F9               	movwf	TMR1_ReadTimer@readValHigh
  9672                           
  9673                           ;mcc_generated_files/tmr1.c: 119:     readVal = ((uint16_t)readValHigh << 8) | readValLo
      +                          w;
  9674     0C68  087A               	movf	TMR1_ReadTimer@readValLow,w
  9675     0C69  00F2               	movwf	??_TMR1_ReadTimer
  9676     0C6A  01F3               	clrf	??_TMR1_ReadTimer+1
  9677     0C6B  0879               	movf	TMR1_ReadTimer@readValHigh,w
  9678     0C6C  00F4               	movwf	??_TMR1_ReadTimer+2
  9679     0C6D  01F5               	clrf	??_TMR1_ReadTimer+3
  9680     0C6E  0874               	movf	??_TMR1_ReadTimer+2,w
  9681     0C6F  00F5               	movwf	??_TMR1_ReadTimer+3
  9682     0C70  01F4               	clrf	??_TMR1_ReadTimer+2
  9683     0C71  0872               	movf	??_TMR1_ReadTimer,w
  9684     0C72  0474               	iorwf	??_TMR1_ReadTimer+2,w
  9685     0C73  00F7               	movwf	TMR1_ReadTimer@readVal
  9686     0C74  0873               	movf	??_TMR1_ReadTimer+1,w
  9687     0C75  0475               	iorwf	??_TMR1_ReadTimer+3,w
  9688     0C76  00F8               	movwf	TMR1_ReadTimer@readVal+1
  9689                           
  9690                           ;mcc_generated_files/tmr1.c: 121:     return readVal;
  9691     0C77  0878               	movf	TMR1_ReadTimer@readVal+1,w
  9692     0C78  00F1               	movwf	?_TMR1_ReadTimer+1
  9693     0C79  0877               	movf	TMR1_ReadTimer@readVal,w
  9694     0C7A  00F0               	movwf	?_TMR1_ReadTimer
  9695     0C7B  0008               	return
  9696     0C7C                     __end_of_TMR1_ReadTimer:
  9697                           
  9698                           	psect	text56
  9699     0002                     __ptext56:	
  9700 ;; *************** function _PIN_MANAGER_IOC *****************
  9701 ;; Defined at:
  9702 ;;		line 98 in file "mcc_generated_files/pin_manager.c"
  9703 ;; Parameters:    Size  Location     Type
  9704 ;;		None
  9705 ;; Auto vars:     Size  Location     Type
  9706 ;;		None
  9707 ;; Return value:  Size  Location     Type
  9708 ;;                  1    wreg      void 
  9709 ;; Registers used:
  9710 ;;		None
  9711 ;; Tracked objects:
  9712 ;;		On entry : 0/0
  9713 ;;		On exit  : 0/0
  9714 ;;		Unchanged: 0/0
  9715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9716 ;;      Params:         0       0       0       0       0       0
  9717 ;;      Locals:         0       0       0       0       0       0
  9718 ;;      Temps:          0       0       0       0       0       0
  9719 ;;      Totals:         0       0       0       0       0       0
  9720 ;;Total ram usage:        0 bytes
  9721 ;; Hardware stack levels used: 1
  9722 ;; This function calls:
  9723 ;;		Nothing
  9724 ;; This function is called by:
  9725 ;;		_INTERRUPT_InterruptManager
  9726 ;; This function uses a non-reentrant model
  9727 ;;
  9728                           
  9729     0002                     _PIN_MANAGER_IOC:	
  9730                           ;psect for function _PIN_MANAGER_IOC
  9731                           
  9732                           
  9733                           ;incstack = 0
  9734                           ; Regs used in _PIN_MANAGER_IOC: []
  9735     0002  0008               	return
  9736     0003                     __end_of_PIN_MANAGER_IOC:
  9737     007E                     btemp	set	126	;btemp
  9738     007E                     int$flags	set	126
  9739     007E                     wtemp0	set	126
  9740                           
  9741                           	psect	config
  9742                           
  9743                           ;Config register CONFIG1 @ 0x8007
  9744                           ;	Oscillator Selection
  9745                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  9746                           ;	Watchdog Timer Enable
  9747                           ;	WDTE = OFF, WDT disabled
  9748                           ;	Power-up Timer Enable
  9749                           ;	PWRTE = OFF, PWRT disabled
  9750                           ;	MCLR Pin Function Select
  9751                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  9752                           ;	Flash Program Memory Code Protection
  9753                           ;	CP = OFF, Program memory code protection is disabled
  9754                           ;	Data Memory Code Protection
  9755                           ;	CPD = OFF, Data memory code protection is disabled
  9756                           ;	Brown-out Reset Enable
  9757                           ;	BOREN = ON, Brown-out Reset enabled
  9758                           ;	Clock Out Enable
  9759                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  9760                           ;	Internal/External Switchover
  9761                           ;	IESO = ON, Internal/External Switchover mode is enabled
  9762                           ;	Fail-Safe Clock Monitor Enable
  9763                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  9764     8007                     	org	32775
  9765     8007  3FE4               	dw	16356
  9766                           
  9767                           ;Config register CONFIG2 @ 0x8008
  9768                           ;	Flash Memory Self-Write Protection
  9769                           ;	WRT = OFF, Write protection off
  9770                           ;	PLL Enable
  9771                           ;	PLLEN = OFF, 4x PLL disabled
  9772                           ;	Stack Overflow/Underflow Reset Enable
  9773                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  9774                           ;	Brown-out Reset Voltage Selection
  9775                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  9776                           ;	In-Circuit Debugger Mode
  9777                           ;	DEBUG = 0x1, unprogrammed default
  9778                           ;	Low-Voltage Programming Enable
  9779                           ;	LVP = ON, Low-voltage programming enabled
  9780     8008                     	org	32776
  9781     8008  3EFF               	dw	16127

Data Sizes:
    Strings     0
    Constant    204
    Data        19
    BSS         68
    Persistent  40
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     51      80
    BANK1            80     34      79
    BANK2            80      0      21
    BANK3            80      0       0
    BANK4            32      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), NULL(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), NULL(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), NULL(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    TMR1_GateInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> mede_height(), TMR1_DefaultGateInterruptHandler(), NULL(), 

    TMR1_SetGateInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> mede_height(), TMR1_DefaultGateInterruptHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _mede_height->___flmul
    i1___fltol->___flmul
    ___flmul->__Umul8_16
    _TMR1_Reload->_TMR1_WriteTimer

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _TMR1_GATE_ISR->_mede_height
    _mede_height->___xxtofl
    i1___fltol->___flmul
    ___xxtofl->i1___fltol

Critical Paths under _main in BANK1

    _setaPorta->_daUmPasso
    _fluxpos->_daUmPasso
    _daUmPasso->_definePassoMotor
    _envia_Tx->___fltol
    _controlchoose->_pwmcontrol
    _pwmcontrol->___atdiv
    ___atdiv->___tmul
    _fluxcontrol->___tmul
    _analisa_Rx->_EPWM1_LoadDutyValue
    _TMR1_Initialize->_TMR1_SetGateInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    5463
                                             33 BANK1      1     1      0
                  _ADC_GetConversion
                        _EUSART_Read
                 _EUSART_is_rx_ready
                  _SYSTEM_Initialize
                     _TMR0_ReadTimer
       _TMR1_SetGateInterruptHandler
                     _TMR4_StopTimer
            _TMR6_LoadPeriodRegister
                    _TMR6_WriteTimer
                         _analisa_Rx
                      _controlchoose
                           _envia_Tx
                            _fluxpos
                          _setaPorta
 ---------------------------------------------------------------------------------
 (1) _setaPorta                                            1     1      0     306
                                              4 BANK1      1     1      0
               _CMP1_GetOutputStatus
                          _daUmPasso
 ---------------------------------------------------------------------------------
 (2) _CMP1_GetOutputStatus                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _fluxpos                                              0     0      0     306
                          _daUmPasso
 ---------------------------------------------------------------------------------
 (2) _daUmPasso                                            1     1      0     306
                                              3 BANK1      1     1      0
                   _definePassoMotor
 ---------------------------------------------------------------------------------
 (3) _definePassoMotor                                     3     2      1     240
                                              0 BANK1      3     2      1
 ---------------------------------------------------------------------------------
 (1) _envia_Tx                                             0     0      0     427
                       _EUSART_Write
                            ___fltol
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     405
                                              0 BANK1     10     6      4
 ---------------------------------------------------------------------------------
 (2) _EUSART_Write                                         1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _controlchoose                                        0     0      0    3421
                    _TMR4_StartTimer
                        _fluxcontrol
                         _pwmcontrol
 ---------------------------------------------------------------------------------
 (2) _pwmcontrol                                          12    12      0    2281
                                             21 BANK1     12    12      0
                _EPWM1_LoadDutyValue
                            ___atdiv
                            ___lwdiv
                             ___tmul
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     414
                                              0 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (3) ___atdiv                                             12     6      6     452
                                              9 BANK1     12     6      6
                             ___tmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _fluxcontrol                                          6     6      0    1140
                                              9 BANK1      6     6      0
                             ___tmul
 ---------------------------------------------------------------------------------
 (3) ___tmul                                               9     3      6    1140
                                              0 BANK1      9     3      6
 ---------------------------------------------------------------------------------
 (2) _TMR4_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _analisa_Rx                                           0     0      0     272
                _EPWM1_LoadDutyValue
 ---------------------------------------------------------------------------------
 (3) _EPWM1_LoadDutyValue                                  4     2      2     272
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (1) _TMR6_WriteTimer                                      1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _TMR6_LoadPeriodRegister                              1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _TMR4_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR0_ReadTimer                                       1     1      0      23
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     468
                     _ADC_Initialize
                    _CMP1_Initialize
                     _DAC_Initialize
                   _EPWM1_Initialize
                  _EUSART_Initialize
                     _FVR_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
                    _TMR6_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     174
       _TMR1_SetGateInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetGateInterruptHandler                         2     0      2     174
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     294
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _EPWM1_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DAC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CMP1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_is_rx_ready                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Read                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion                                    4     2      2      22
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0    3622
                    _PIN_MANAGER_IOC
                      _TMR1_GATE_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR1_GATE_ISR                                        0     0      0    3622
                                NULL *
   _TMR1_DefaultGateInterruptHandler *
                        _mede_height *
 ---------------------------------------------------------------------------------
 (6) _mede_height                                          6     6      0    3622
                                             45 BANK0      6     6      0
                     _TMR1_ReadTimer
                        _TMR1_Reload
                            ___flmul
                           ___xxtofl
                          i1___fltol
                          i1___lwdiv
 ---------------------------------------------------------------------------------
 (7) i1___lwdiv                                            8     4      4     214
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (7) i1___fltol                                           10     6      4     281
                                             21 BANK0     10     6      4
                            ___flmul (ARG)
                          i1___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (7) ___xxtofl                                            14    10      4     474
                                             31 BANK0     14    10      4
                          i1___fltol (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flmul                                             26    18      8    2418
                                              9 COMMON     5     5      0
                                              0 BANK0     21    13      8
                          __Umul8_16
                          i1___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (8) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (7) _TMR1_Reload                                          0     0      0     166
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (8) _TMR1_WriteTimer                                      2     0      2     166
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (7) _TMR1_ReadTimer                                      11     9      2      69
                                              0 COMMON    11     9      2
 ---------------------------------------------------------------------------------
 (6) _TMR1_DefaultGateInterruptHandler                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _PIN_MANAGER_IOC                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion
   _EUSART_Read
   _EUSART_is_rx_ready
   _SYSTEM_Initialize
     _ADC_Initialize
     _CMP1_Initialize
     _DAC_Initialize
     _EPWM1_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _FVR_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
     _TMR1_Initialize
       _TMR1_SetGateInterruptHandler
     _TMR2_Initialize
     _TMR4_Initialize
     _TMR6_Initialize
     _WDT_Initialize
   _TMR0_ReadTimer
   _TMR1_SetGateInterruptHandler
   _TMR4_StopTimer
   _TMR6_LoadPeriodRegister
   _TMR6_WriteTimer
   _analisa_Rx
     _EPWM1_LoadDutyValue
   _controlchoose
     _TMR4_StartTimer
     _fluxcontrol
       ___tmul
     _pwmcontrol
       _EPWM1_LoadDutyValue
       ___atdiv
         ___tmul (ARG)
       ___lwdiv
       ___tmul
   _envia_Tx
     _EUSART_Write
     ___fltol
   _fluxpos
     _daUmPasso
       _definePassoMotor
   _setaPorta
     _CMP1_GetOutputStatus
     _daUmPasso

 _INTERRUPT_InterruptManager (ROOT)
   _PIN_MANAGER_IOC
   _TMR1_GATE_ISR
     NULL(Fake) *
     _TMR1_DefaultGateInterruptHandler *
     _mede_height *
       _TMR1_ReadTimer
       _TMR1_Reload
         _TMR1_WriteTimer
       ___flmul
         __Umul8_16
         i1___lwdiv (ARG)
       ___xxtofl
         i1___fltol (ARG)
           ___flmul (ARG)
           i1___lwdiv (ARG)
       i1___fltol
       i1___lwdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             160      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      C2       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     33      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     22      4F       8       98.8%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      15      10       26.2%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            20      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               20      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      C2      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Tue Sep 10 17:11:00 2024

                            ??_CMP1_Initialize 00CD                               ___atdiv@quotient 00DF  
                                           _dc 00BB                         __end_of_FVR_Initialize 0B51  
                              _timer0ReloadVal 0069                            __Umul8_16@word_mpld 0076  
                                          l240 0C03                                            l333 0C8E  
                                          l247 0BD2                                            l615 0E14  
                                          l712 043F                                            l633 0E1F  
                                          l609 0E10                                            l618 0E16  
                                          l723 032D                                            l627 0E1B  
                                          l655 0E3C                                            l639 0E33  
                                          l584 0CC3                                            l649 0E38  
                                          l658 0E3E                                            l667 0E43  
                                          l599 0E0B                                            l687 0E00  
                                          _PR2 001B                                            _PR4 0416  
                                          _PR6 041D                                _timer1ReloadVal 00C3  
                                          _kdf 012C                                            _kdp 0123  
                                          _kip 0126                                            _kpf 006A  
                                          _vRx 00BD                                            _vTx 00BF  
                                          _kpp 0129                 ?_EUSART_SetFramingErrorHandler 00CD  
                                 i1___fltol@f1 0035                                   ?_mede_height 0070  
                              _TMR2_Initialize 0BC9                                            wreg 0009  
                                 ___flmul@aexp 0029                                   ___flmul@bexp 002E  
     __end_of_TMR1_DefaultGateInterruptHandler 0004             ??_TMR1_DefaultGateInterruptHandler 0070  
            ?_TMR1_DefaultGateInterruptHandler 0070               _TMR1_DefaultGateInterruptHandler 0003  
                                 ___flmul@sign 0028                                   ___flmul@temp 0033  
                                 ___flmul@prod 002F                                   ?_EUSART_Read 0070  
                                 ___fltol@exp1 00D6                                           l1133 0F06  
                                         l1049 0F2F                                           l3010 0514  
                                         l3002 0C43                                           l3006 0C4A  
                                         l3018 0534                                           l3026 0546  
                                         l2402 0F85                                           l3044 0594  
                                         l3036 0580                                           l3028 0549  
                                         l2340 0E2F                                           l3124 06B7  
                                         l3116 06AD                                           l2424 07F2  
                                         l2416 07D4                                           l3136 06CD  
                                         l3058 05C8                                           l3066 05CF  
                                         l2354 0D4D                                           l2418 07E0  
                                         l2346 0E49                                           l2338 0E21  
                                         l3138 06D8                                           l3146 06C3  
                                         l2428 07FB                                           l2348 0E57  
                                         l3172 070C                                           l3148 06EA  
                                         l3156 06F7                                           l2358 0D55  
                                         l2384 0F4A                                           l2376 0F3D  
                                         l2800 0D10                                           l3192 0733  
                                         l3184 0723                                           l2394 0F70  
                                         l2386 0F57                                           l2820 02B0  
                                         l2812 026D                                           l2804 0D17  
                                         l2398 0F7A                                           l2814 0278  
                                         l2910 0EF4                                           l2806 0D1D  
                                         l2832 0335                                           l2824 02C2  
                                         l2920 0F13                                           l2912 0F02  
                                         l2850 03B3                                           l2842 036A  
                                         l2834 0346                                           l2818 02A9  
                                         l2852 03BE                                           l2836 0351  
                                         l2828 0328                                           l2838 0358  
                                         l2864 041B                                           l2856 0407  
                                         l2946 0C0D                                           l2866 0426  
                                         l2858 040B                                           l2890 0EC8  
                                         l2868 042D                                           l2894 0ED1  
                                         l2990 0DE8                                           l2976 0CAF  
                                         l2994 0DF4                                           l2986 0DDC  
                                         _LATA 010C                                           _LATB 010D  
                                         u3107 0CBD                                           u3117 0C89  
                                         u2431 0250                                           u2432 0251  
                                         u2433 025A                                           u2434 025B  
                                         u1635 0D56                                           u2531 0387  
                                         u1715 0F58                                           u2532 0388  
                                         u1645 0D5C                                           u2533 0391  
                                         u1725 0F67                                           u1805 07EB  
                                         u2534 0392                                           u1735 0F71  
                                         u1815 07F3                                           u2625 0EDA  
                                         u3097 071F                                           u1595 0CD9  
                                         u2485 02EB                                           u2805 0DFA  
                                         u1695 0F4D                                           u1775 07D7  
                                         u2655 0EF5                                           u1795 07E1  
                                         u2940 06AB                                           u2685 0F0A  
                                         u2775 0DD6                                           u2785 0DE2  
                                         u2795 0DEE                                           _TMR0 0015  
                                         _TMR2 001A                                           _TMR4 0415  
                                         _TMR6 041C                                           _WPUA 020C  
                                         _WPUB 020D                              ??_TMR6_WriteTimer 00CD  
                ?_TMR1_SetGateInterruptHandler 00CD                                           _main 0699  
                                         _flux 005B                                           fsr0h 0005  
                                         fsr1h 0007                                           indf0 0000  
                                         fsr0l 0004                                           indf1 0001  
                                         fsr1l 0006                                           btemp 007E  
                                         start 0019                          ??_EPWM1_LoadDutyValue 00CF  
                      __end_of_TMR0_Initialize 0BE4                                ?_FVR_Initialize 0070  
                                ?_EUSART_Write 0070                  __end_of_OSCILLATOR_Initialize 0B99  
                                ___fltol@sign1 00D5                                          ?_main 0070  
                              __end_of___atdiv 0F8C                                __end_of___flmul 0242  
                              __end_of___fltol 0F22                                          _T1CON 0018  
                                        _T2CON 001C                                          _T4CON 0417  
                                        _T6CON 041E                                __end_of___lwdiv 0800  
                                        i1l180 0017                                          i1l174 000D  
                                        _RCREG 0199                                          _RCSTA 019D  
                                        _TMR1H 0017                                          _TMR1L 0016  
                                        _TRISA 008C                                          _TRISB 008D  
                                 ?_fluxcontrol 0070                                          _TXREG 019A  
                                        _TXSTA 019E                                _TMR4_Initialize 0BE4  
                      __end_of_PIN_MANAGER_IOC 0003                                 _WDT_Initialize 0B57  
                                        _error 00B0                      ??_TMR6_LoadPeriodRegister 00CD  
                                        _passo 00C7                                __end_of_fluxpos 0E06  
                                _controlchoice 00CB                                  _controlchoose 0C3B  
                      __end_of_TMR1_Initialize 0CAF                                          pclath 000A  
                               i1___fltol@exp1 003E                                          status 0003  
                                        wtemp0 007E                               daUmPasso@sentido 00D0  
                              _TMR1_WriteTimer 0C1D                               ??_DAC_Initialize 00CD  
                 __end_of_CMP1_GetOutputStatus 0B5F                                __initialization 001B  
                                 __end_of_main 0739                                 ??_EUSART_Write 00CD  
                      __end_of_TMR2_Initialize 0BD1                    ?_INTERRUPT_InterruptManager 0070  
                                       ??_main 00EE                         __end_of_WDT_Initialize 0B5B  
                              _TMR6_Initialize 0BEE              _EUSART_DefaultFramingErrorHandler 0000  
                                       _ADCON0 009D                                         _ADCON1 009E  
                   _EUSART_OverrunErrorHandler 0131                                 ?_controlchoose 0070  
                                       _ADRESH 009C                                         _ADRESL 009B  
                                       _CCPR1H 0292                                         _CCPR1L 0291  
                                       _ANSELA 018C                                         _ANSELB 018D  
                   __end_of_EUSART_is_rx_ready 0B68                                         _BORCON 0116  
                                       _T1GCON 0019                        TMR1_WriteTimer@timerVal 0070  
                                       i1l1133 0EA5                                         i1l2300 0C27  
                                       i1l1341 0235                                         i1l2306 0CEE  
                                       i1l1348 0CF4                                         i1l1373 0756  
                                       i1l2600 078F                                         i1l2530 01B8  
                                       i1l2450 0065                                         i1l1386 079E  
                                       i1l1387 07A8                                         i1l1379 078A  
                                       i1l2540 01D1                                         i1l2612 07C3  
                                       i1l2550 01FA                                         i1l2446 005B  
                                       i1l2622 0E70                                         i1l2560 0226  
                                       i1l2536 01CF                                         i1l2528 01A1  
                                       i1l2464 007C                                         i1l2448 005D  
                                       i1l2640 0EA1                                         i1l2554 020F  
                                       i1l2466 007E                                         i1l2618 0E67  
                                       i1l2476 0094                                         i1l2468 0086  
                                       i1l2590 0777                                         i1l2638 0E93  
                                       i1l2670 0DBD                                         i1l2662 0D9F  
                                       i1l2584 0765                                         i1l2648 0EB2  
                                       i1l2664 0DAB                                         i1l2578 074E  
                                       i1l2674 0DC6                                         i1l2588 0767  
                                       u211_25 0770                                         i1l2598 079C  
                                       i1l2882 0608                                         i1l2884 0644  
                                       u204_25 01E8                                         u205_25 0203  
                                       u213_25 0784                                         u206_25 0219  
                                       u215_25 0796                                         u223_25 0E79  
                                       u233_25 0DA2                                         u226_25 0E94  
                                       _FVRCON 0117                                         u219_25 07B0  
                                       u235_25 0DAC                                         u236_25 0DB6  
                                       u157_25 0CF5                                         u229_25 0EA9  
                                       u237_25 0DBE                                         u191_25 0101  
                                       u192_25 012A                                         u193_25 0174  
                                       u194_25 0190                                         u195_25 01A4  
                                       u197_25 01AD                                         _OSCCON 0099  
                                       _SPBRGH 019C                                         _SPBRGL 019B  
                                       _WDTCON 0097                               __end_of___xxtofl 07CC  
                              _TMR4_StartTimer 0B54                          __end_of_TMR1_GATE_ISR 0C03  
               ??_TMR1_SetGateInterruptHandler 00CF                                   _CCPTMRS0bits 029E  
                                 ?_TMR1_Reload 0070                                         ___tmul 0D47  
                                    ??___atdiv 00DC                                      ??___flmul 0079  
                                    ??___fltol 00D1                               __end_of_envia_Tx 1000  
                                    ??___lwdiv 00D1                                         _height 00B3  
                             ?_TMR0_Initialize 0070                                         _errorp 00AD  
                      __end_of_TMR4_Initialize 0BEE                                         _outpre 00A4  
                                       _output 00C1                              __end_ofi1___fltol 0EC1  
                            __end_ofi1___lwdiv 0DCB                                      ??_fluxpos 00D1  
                              ?_WDT_Initialize 0070                                i1___fltol@sign1 003D  
                     ADC_GetConversion@channel 00D0   TMR1_SetGateInterruptHandler@InterruptHandler 00CD  
                             ?_PIN_MANAGER_IOC 0070                        __end_of_TMR1_WriteTimer 0C2C  
                             ?_TMR1_Initialize 0070                                   ___xxtofl@arg 0049  
                                 ___xxtofl@exp 0048                              _SYSTEM_Initialize 0D6D  
                                 ___xxtofl@val 003F                        __end_of__initialization 0042  
                              _CMP1_Initialize 0B68                             ?_SYSTEM_Initialize 0070  
                                   ___fltol@f1 00CD                              ?_EPWM1_Initialize 0070  
                               __pcstackCOMMON 0070                                   __pidataBANK0 0B5F  
                                 __pidataBANK2 0C2C                            ??_SYSTEM_Initialize 00CF  
                           ??_EPWM1_Initialize 00CD                               ?_TMR2_Initialize 0070  
                      __end_of_TMR6_Initialize 0BF8                                 _OPTION_REGbits 0095  
                              _TMR6_WriteTimer 0B80                                ??_controlchoose 00EE  
              ??_EUSART_SetOverrunErrorHandler 00CF                           _CMP1_GetOutputStatus 0B5B  
                      __end_of_TMR4_StartTimer 0B57                      __end_of_SYSTEM_Initialize 0D97  
                                   __pbssBANK0 0053                                     __pbssBANK1 00A0  
                         __end_of_EUSART_Write 0BDA                                     _analisa_Rx 0513  
                            __end_of__Umul8_16 0D03                               ??_FVR_Initialize 00CD  
                                   __pmaintext 0699                                        ?___tmul 00CD  
                                   __pintentry 0004                                        _DACCON0 0118  
                                      _DACCON1 0119                                        _CM1CON0 0111  
                                      _CM1CON1 0112                                        _CCP1CON 0293  
                                      _ECCP1AS 0295                                        _BAUDCON 019F  
                             ?_TMR4_Initialize 0070                              __end_of_daUmPasso 0D23  
                                      _APFCON0 011D                                        _APFCON1 011E  
                             _definePassoMotor 0E06                                      ?___xxtofl 003F  
                        ?_CMP1_GetOutputStatus 0070                                        _OSCTUNE 0098  
                                      _PWM1CON 0294                        __end_of_CMP1_Initialize 0B6E  
                     ??_EUSART_SetErrorHandler 00CF                               ?_TMR1_WriteTimer 0070  
                       definePassoMotor@passom 00CF                                      ?_envia_Tx 0070  
                  __end_of_EPWM1_LoadDutyValue 0CE4                                     _first_read 006D  
                         _ADC_InterruptHandler 0065                                        ___atdiv 0F22  
                                      ___flmul 0046                                        ___fltol 0EC1  
                                      ___lwdiv 07CC                        __end_of_TMR6_WriteTimer 0B86  
                                      _ballset 005E                               ?_TMR6_Initialize 0070  
                     TMR1_ReadTimer@readValLow 007A                                        __ptext1 0CAF  
                                      __ptext2 0B5B                                        __ptext3 0DCB  
                                      __ptext4 0D03                                        __ptext5 0E06  
                                      __ptext6 0F8C                                        __ptext7 0EC1  
                                      __ptext8 0BD1                                        __ptext9 0C3B  
                    TMR1_ReadTimer@readValHigh 0079                                      _T1CONbits 0018  
                                      _countRx 00CA                              i1___lwdiv@divisor 0070  
                        _OSCILLATOR_Initialize 0B92                              i1___lwdiv@counter 0077  
                                      _fluxpos 0DCB                                     ??___xxtofl 0043  
                                    _CMOUTbits 0115                                      _T4CONbits 0417  
                     ??_PIN_MANAGER_Initialize 00CD                                        _sentido 0068  
                                      clrloop0 0B87                               ?_TMR4_StartTimer 0070  
                                   _passo_ctrl 00C5                           end_of_initialization 0042  
                                   ??_envia_Tx 00D7          __end_of_EUSART_SetOverrunErrorHandler 0BC1  
                _EUSART_SetOverrunErrorHandler 0BB9                              __end_of_setaPorta 0CC9  
                                      init_ram 0B8C                                        initloop 0B8D  
                                  ?_analisa_Rx 0070                              _EUSART_Initialize 0D23  
                           ?_EUSART_Initialize 0070                          TMR0_ReadTimer@readVal 00CD  
                                    _RCSTAbits 019D                             _EUSART_is_rx_ready 0B63  
                               _TMR0_ReadTimer 0B74                            ??_EUSART_Initialize 00CF  
                             ??_WDT_Initialize 00CD                            ?_EUSART_is_rx_ready 0070  
                       ??_CMP1_GetOutputStatus 00CD                                 _TMR1_ReadTimer 0C64  
                     ?_TMR6_LoadPeriodRegister 0070                                  ___xxtofl@sign 0047  
                                    i1___fltol 0E60                                      i1___lwdiv 0D97  
                             ?_CMP1_Initialize 0070                                     _pwmcontrol 0242  
                                  ___flmul@grs 002A                      __end_of_EUSART_Initialize 0D47  
                         ??_EUSART_is_rx_ready 00CD                         __end_of_TMR0_ReadTimer 0B7A  
                   _EUSART_DefaultErrorHandler 0000                               ?_TMR6_WriteTimer 0070  
                               __end_of___tmul 0D6D                                   _EUSART_Write 0BD1  
                               _ADC_Initialize 0BA1                         ?_OSCILLATOR_Initialize 0070  
                       __end_of_TMR1_ReadTimer 0C7C                                  ??_mede_height 004D  
                          start_initialization 001B                                  ??_EUSART_Read 00CD  
                                   ?i1___fltol 0035                                     ?i1___lwdiv 0070  
                 EPWM1_LoadDutyValue@dutyValue 00CD                       __end_of_definePassoMotor 0E60  
               ?_EUSART_SetOverrunErrorHandler 00CD                                 _TMR4_StopTimer 0B51  
                   _EUSART_FramingErrorHandler 0133                                ?_TMR0_ReadTimer 0070  
                                     ??___tmul 00D3                         _EUSART_SetErrorHandler 0BA9  
                       __end_of_ADC_Initialize 0BA9                                      __Umul8_16 0CE4  
                                  __pdataBANK0 006A                                    __pdataBANK2 0120  
              __end_of_TMR6_LoadPeriodRegister 0B80                                 ___tmul@product 00D3  
                              ?_TMR1_ReadTimer 0070                                  ??_fluxcontrol 00D6  
                                    ___flmul@a 0024                                      _daUmPasso 0D03  
                                    ___flmul@b 0020                                      ___latbits 0001  
                                __pcstackBANK0 0020                                  __pcstackBANK1 00CD  
                        __end_of_controlchoose 0C4D                            __end_of_mede_height 0699  
                                  ?_pwmcontrol 0070                            __end_of_EUSART_Read 0C0F  
                                    __pnvBANK0 006E                                      __pnvBANK2 012F  
                       __end_of_TMR4_StopTimer 0B54                               ___lwdiv@dividend 00CF  
                       _PIN_MANAGER_Initialize 0C4D                                  _TMR1_GATE_ISR 0BF8  
                                     ?___atdiv 00D6                                       ?___flmul 0020  
                                     ?___fltol 00CD                                     ?__Umul8_16 0070  
                                     ?___lwdiv 00CD                                ?_ADC_Initialize 0070  
                                    _fim_curso 00C6                   ??_INTERRUPT_InterruptManager 007E  
                                     ?_fluxpos 0070                                     ?_daUmPasso 0070  
                                    _nao_salva 00C8                                    ??i1___fltol 0039  
                             ___lwdiv@quotient 00D2                                    ??i1___lwdiv 0074  
                                    _func_mode 0067                            __end_of_fluxcontrol 0447  
                            ??_TMR0_Initialize 00CD                                       _LATAbits 010C  
       EUSART_SetErrorHandler@interruptHandler 00CD                                   ??_analisa_Rx 00D1  
                                    clear_ram0 0B86                                       _PIE1bits 0091  
                            _eusartRxLastError 00CC                                ?_TMR4_StopTimer 0070  
                                    _setaPorta 0CAF                                 ?_TMR1_GATE_ISR 0070  
                                     _PIR1bits 0011                ??_EUSART_SetFramingErrorHandler 00CF  
                                     _PIR3bits 0013                                  ??_TMR1_Reload 0072  
                                    _sp_height 0063                                      _tempo_voo 0061  
            _EUSART_DefaultOverrunErrorHandler 0000                                       _PSTR1CON 0296  
                            ??_PIN_MANAGER_IOC 0070                      _TMR1_GateInterruptHandler 006E  
                            ??_TMR1_Initialize 00CF                                     _ADCON0bits 009D  
                               _DAC_Initialize 0B6E                                    _mede_height 05DF  
                             _EPWM1_Initialize 0C0F                        definePassoMotor@sentido 00CD  
                          ___tmul@multiplicand 00D0                                      _outputsum 00A7  
                           __end_of_analisa_Rx 05DF                                    _EUSART_Read 0C03  
                            ??_TMR2_Initialize 00CD                            __end_of_lookupTable 0513  
                                   ?_setaPorta 0070                              _ADC_GetConversion 0C7C  
                        TMR1_ReadTimer@readVal 0077                        ??_OSCILLATOR_Initialize 00CD  
                                  ??__Umul8_16 0072                            _EUSART_ErrorHandler 012F  
                           ?_ADC_GetConversion 00CD                         __end_of_DAC_Initialize 0B74  
                                     _adc_temp 00B5                            __end_of_TMR1_Reload 0BA1  
                                     _balldist 00AA                            ??_ADC_GetConversion 00CF  
                                     ___xxtofl 0739                                    ??_daUmPasso 00D0  
                                  _fluxcontrol 0379                                ___lwdiv@divisor 00CD  
                              ___lwdiv@counter 00D4                                       __ptext10 0242  
                                     __ptext11 07CC                                       __ptext20 0B51  
                                     __ptext12 0F22                                       __ptext21 0B74  
                                     __ptext13 0379                                       __ptext30 0C4D  
                                     __ptext22 0D6D                                       __ptext14 0D47  
                                     __ptext31 0B92                                       __ptext23 0B57  
                                     __ptext15 0B54                                       __ptext40 0BA1  
                                     __ptext32 0B4E                                       __ptext24 0BEE  
                                     __ptext16 0513                                       __ptext41 0B63  
                                     __ptext33 0D23                                       __ptext25 0BE4  
                                     __ptext17 0CC9                                       __ptext50 0739  
                                     __ptext42 0C03                                       __ptext34 0BB9  
                                     __ptext26 0BC9                                       __ptext18 0B80  
                                     __ptext51 0046                                       __ptext43 0C7C  
                                     __ptext35 0BB1                                       __ptext27 0C95  
                                     __ptext19 0B7A                                       __ptext52 0CE4  
                                     __ptext36 0BA9                                       __ptext28 0BC1  
                                     __ptext53 0B99                                       __ptext45 0BF8  
                                     __ptext37 0C0F                                       __ptext29 0BDA  
                                     __ptext54 0C1D                                       __ptext46 0003  
                                     __ptext38 0B6E                                       __ptext55 0C64  
                                     __ptext47 05DF                                       __ptext39 0B68  
                                     __ptext56 0002                                       __ptext48 0D97  
                                     __ptext49 0E60                                       _bufferRx 0053  
                           i1___lwdiv@dividend 0072                                       _envia_Tx 0F8C  
                                     _count_Tx 00C9                        TMR6_WriteTimer@timerVal 00CD  
             TMR6_LoadPeriodRegister@periodVal 00CD                              ??_TMR4_Initialize 00CD  
                             ??_TMR0_ReadTimer 00CD                                ??_TMR1_GATE_ISR 007E  
                    __end_of_ADC_GetConversion 0C95                        ?_EUSART_SetErrorHandler 00CD  
                            ?_definePassoMotor 00CD  EUSART_SetOverrunErrorHandler@interruptHandler 00CD  
                           ??_definePassoMotor 00CE                               ??_TMR1_ReadTimer 0072  
                                     int$flags 007E                                       _position 00B9  
           __end_of_INTERRUPT_InterruptManager 0019                     _INTERRUPT_InterruptManager 0004  
        __end_of_EUSART_SetFramingErrorHandler 0BB9                  _EUSART_SetFramingErrorHandler 0BB1  
                              ?_DAC_Initialize 0070                              ??_TMR1_WriteTimer 0072  
                           i1___lwdiv@quotient 0075                                     _INTCONbits 000B  
                                _avg_tempo_voo 00A0                                   ??_pwmcontrol 00E2  
                                  _lookupTable 0447                                       intlevel1 0000  
                      ?_PIN_MANAGER_Initialize 0070                              ??_TMR6_Initialize 00CD  
               __end_of_EUSART_SetErrorHandler 0BB1                                    ??_setaPorta 00D1  
                             ??_ADC_Initialize 00CD                                    _TMR1_Reload 0B99  
                            ___tmul@multiplier 00CD  EUSART_SetFramingErrorHandler@interruptHandler 00CD  
                            ??_TMR4_StartTimer 00CD                                  __pstringtext1 0447  
                           __end_of_pwmcontrol 0379                                 _FVR_Initialize 0B4E  
                       __Umul8_16@multiplicand 0070                                     _OPTION_REG 0095  
                              _TMR0_Initialize 0BDA                                    _timecontrol 0120  
                          _EPWM1_LoadDutyValue 0CC9                               ___atdiv@dividend 00D9  
                           EUSART_Write@txData 00CD           __end_of_TMR1_SetGateInterruptHandler 0BC9  
                 _TMR1_SetGateInterruptHandler 0BC1                 __end_of_PIN_MANAGER_Initialize 0C64  
                             ??_TMR4_StopTimer 00CD                        _TMR6_LoadPeriodRegister 0B7A  
                                  _sp_position 00B7                                ___atdiv@divisor 00D6  
                              _PIN_MANAGER_IOC 0002                           __Umul8_16@multiplier 0078  
                              ___atdiv@counter 00DD                                _TMR1_Initialize 0C95  
                     __end_of_EPWM1_Initialize 0C1D                           ?_EPWM1_LoadDutyValue 00CD  
                            __Umul8_16@product 0074                                   ___atdiv@sign 00DE  
