

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Thu Sep 05 21:17:54 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og9 
     1                           	processor	16F1827
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     6                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,noexec
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    14                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    15                           	psect	inittext,global,class=CODE,delta=2
    16                           	psect	clrtext,global,class=CODE,delta=2
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    18                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    21                           	psect	text1,local,class=CODE,merge=1,delta=2
    22                           	psect	text2,local,class=CODE,merge=1,delta=2
    23                           	psect	text3,local,class=CODE,merge=1,delta=2
    24                           	psect	text4,local,class=CODE,merge=1,delta=2
    25                           	psect	text5,local,class=CODE,merge=1,delta=2
    26                           	psect	text6,local,class=CODE,merge=1,delta=2
    27                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text8,local,class=CODE,merge=1,delta=2
    29                           	psect	text9,local,class=CODE,merge=1,delta=2
    30                           	psect	text10,local,class=CODE,merge=1,delta=2
    31                           	psect	text11,local,class=CODE,merge=1,delta=2
    32                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text14,local,class=CODE,merge=1,delta=2
    35                           	psect	text15,local,class=CODE,merge=1,delta=2
    36                           	psect	text16,local,class=CODE,merge=1,delta=2
    37                           	psect	text17,local,class=CODE,merge=1,delta=2
    38                           	psect	text18,local,class=CODE,merge=1,delta=2
    39                           	psect	text19,local,class=CODE,merge=1,delta=2
    40                           	psect	text20,local,class=CODE,merge=1,delta=2
    41                           	psect	text21,local,class=CODE,merge=1,delta=2
    42                           	psect	text22,local,class=CODE,merge=1,delta=2
    43                           	psect	text23,local,class=CODE,merge=1,delta=2
    44                           	psect	text24,local,class=CODE,merge=1,delta=2
    45                           	psect	text25,local,class=CODE,merge=1,delta=2
    46                           	psect	text26,local,class=CODE,merge=1,delta=2
    47                           	psect	text27,local,class=CODE,merge=1,delta=2
    48                           	psect	text28,local,class=CODE,merge=1,delta=2
    49                           	psect	text29,local,class=CODE,merge=1,delta=2
    50                           	psect	text30,local,class=CODE,merge=1,delta=2
    51                           	psect	text31,local,class=CODE,merge=1,delta=2
    52                           	psect	text32,local,class=CODE,merge=1,delta=2
    53                           	psect	text33,local,class=CODE,merge=1,delta=2
    54                           	psect	text34,local,class=CODE,merge=1,delta=2
    55                           	psect	text35,local,class=CODE,merge=1,delta=2
    56                           	psect	text36,local,class=CODE,merge=1,delta=2
    57                           	psect	text37,local,class=CODE,merge=1,delta=2
    58                           	psect	text38,local,class=CODE,merge=1,delta=2
    59                           	psect	text39,local,class=CODE,merge=1,delta=2
    60                           	psect	text40,local,class=CODE,merge=1,delta=2
    61                           	psect	text41,local,class=CODE,merge=1,delta=2
    62                           	psect	text42,local,class=CODE,merge=1,delta=2
    63                           	psect	intentry,global,class=CODE,delta=2
    64                           	psect	text44,local,class=CODE,merge=1,delta=2
    65                           	psect	text45,local,class=CODE,merge=1,delta=2
    66                           	psect	text46,local,class=CODE,merge=1,delta=2
    67                           	psect	text47,local,class=CODE,merge=1,delta=2
    68                           	psect	text48,local,class=CODE,merge=1,delta=2,group=1
    69                           	psect	text49,local,class=CODE,merge=1,delta=2,group=1
    70                           	psect	text50,local,class=CODE,merge=1,delta=2,group=1
    71                           	psect	text51,local,class=CODE,merge=1,delta=2,group=1
    72                           	psect	text52,local,class=CODE,merge=1,delta=2
    73                           	psect	text53,local,class=CODE,merge=1,delta=2
    74                           	psect	text54,local,class=CODE,merge=1,delta=2
    75                           	psect	text55,local,class=CODE,merge=1,delta=2
    76                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    77                           	dabs	1,0x7E,2
    78     0000                     
    79                           ; Generated 07/09/2023 GMT
    80                           ; 
    81                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    82                           ; All rights reserved.
    83                           ; 
    84                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    85                           ; 
    86                           ; Redistribution and use in source and binary forms, with or without modification, are
    87                           ; permitted provided that the following conditions are met:
    88                           ; 
    89                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    90                           ;        conditions and the following disclaimer.
    91                           ; 
    92                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    93                           ;        of conditions and the following disclaimer in the documentation and/or other
    94                           ;        materials provided with the distribution. Publication is not required when
    95                           ;        this file is used in an embedded application.
    96                           ; 
    97                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    98                           ;        software without specific prior written permission.
    99                           ; 
   100                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   101                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   102                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   103                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   104                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   105                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   106                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   107                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   108                           ; 
   109                           ; 
   110                           ; Code-generator required, PIC16F1827 Definitions
   111                           ; 
   112                           ; SFR Addresses
   113     0000                     	;# 
   114     0001                     	;# 
   115     0002                     	;# 
   116     0003                     	;# 
   117     0004                     	;# 
   118     0005                     	;# 
   119     0006                     	;# 
   120     0007                     	;# 
   121     0008                     	;# 
   122     0009                     	;# 
   123     000A                     	;# 
   124     000B                     	;# 
   125     000C                     	;# 
   126     000D                     	;# 
   127     0011                     	;# 
   128     0012                     	;# 
   129     0013                     	;# 
   130     0014                     	;# 
   131     0015                     	;# 
   132     0016                     	;# 
   133     0016                     	;# 
   134     0017                     	;# 
   135     0018                     	;# 
   136     0019                     	;# 
   137     001A                     	;# 
   138     001B                     	;# 
   139     001C                     	;# 
   140     001E                     	;# 
   141     001F                     	;# 
   142     008C                     	;# 
   143     008D                     	;# 
   144     0091                     	;# 
   145     0092                     	;# 
   146     0093                     	;# 
   147     0094                     	;# 
   148     0095                     	;# 
   149     0096                     	;# 
   150     0097                     	;# 
   151     0098                     	;# 
   152     0099                     	;# 
   153     009A                     	;# 
   154     009B                     	;# 
   155     009B                     	;# 
   156     009C                     	;# 
   157     009D                     	;# 
   158     009E                     	;# 
   159     010C                     	;# 
   160     010D                     	;# 
   161     0111                     	;# 
   162     0112                     	;# 
   163     0113                     	;# 
   164     0114                     	;# 
   165     0115                     	;# 
   166     0116                     	;# 
   167     0117                     	;# 
   168     0118                     	;# 
   169     0119                     	;# 
   170     011A                     	;# 
   171     011B                     	;# 
   172     011D                     	;# 
   173     011E                     	;# 
   174     018C                     	;# 
   175     018D                     	;# 
   176     0191                     	;# 
   177     0191                     	;# 
   178     0192                     	;# 
   179     0193                     	;# 
   180     0193                     	;# 
   181     0193                     	;# 
   182     0194                     	;# 
   183     0195                     	;# 
   184     0196                     	;# 
   185     0199                     	;# 
   186     019A                     	;# 
   187     019B                     	;# 
   188     019B                     	;# 
   189     019B                     	;# 
   190     019B                     	;# 
   191     019C                     	;# 
   192     019C                     	;# 
   193     019D                     	;# 
   194     019E                     	;# 
   195     019F                     	;# 
   196     020C                     	;# 
   197     020D                     	;# 
   198     0211                     	;# 
   199     0211                     	;# 
   200     0212                     	;# 
   201     0212                     	;# 
   202     0213                     	;# 
   203     0213                     	;# 
   204     0214                     	;# 
   205     0214                     	;# 
   206     0215                     	;# 
   207     0215                     	;# 
   208     0215                     	;# 
   209     0216                     	;# 
   210     0216                     	;# 
   211     0217                     	;# 
   212     0217                     	;# 
   213     0219                     	;# 
   214     021A                     	;# 
   215     021B                     	;# 
   216     021C                     	;# 
   217     021D                     	;# 
   218     021E                     	;# 
   219     021F                     	;# 
   220     0291                     	;# 
   221     0291                     	;# 
   222     0292                     	;# 
   223     0293                     	;# 
   224     0294                     	;# 
   225     0295                     	;# 
   226     0295                     	;# 
   227     0296                     	;# 
   228     0298                     	;# 
   229     0298                     	;# 
   230     0299                     	;# 
   231     029A                     	;# 
   232     029B                     	;# 
   233     029C                     	;# 
   234     029C                     	;# 
   235     029D                     	;# 
   236     029E                     	;# 
   237     029E                     	;# 
   238     0311                     	;# 
   239     0311                     	;# 
   240     0312                     	;# 
   241     0313                     	;# 
   242     0318                     	;# 
   243     0318                     	;# 
   244     0319                     	;# 
   245     031A                     	;# 
   246     0394                     	;# 
   247     0395                     	;# 
   248     0396                     	;# 
   249     039A                     	;# 
   250     039C                     	;# 
   251     039D                     	;# 
   252     039E                     	;# 
   253     039F                     	;# 
   254     0415                     	;# 
   255     0416                     	;# 
   256     0417                     	;# 
   257     041C                     	;# 
   258     041D                     	;# 
   259     041E                     	;# 
   260     0FE4                     	;# 
   261     0FE5                     	;# 
   262     0FE6                     	;# 
   263     0FE7                     	;# 
   264     0FE8                     	;# 
   265     0FE9                     	;# 
   266     0FEA                     	;# 
   267     0FEB                     	;# 
   268     0FED                     	;# 
   269     0FEE                     	;# 
   270     0FEF                     	;# 
   271     0000                     	;# 
   272     0001                     	;# 
   273     0002                     	;# 
   274     0003                     	;# 
   275     0004                     	;# 
   276     0005                     	;# 
   277     0006                     	;# 
   278     0007                     	;# 
   279     0008                     	;# 
   280     0009                     	;# 
   281     000A                     	;# 
   282     000B                     	;# 
   283     000C                     	;# 
   284     000D                     	;# 
   285     0011                     	;# 
   286     0012                     	;# 
   287     0013                     	;# 
   288     0014                     	;# 
   289     0015                     	;# 
   290     0016                     	;# 
   291     0016                     	;# 
   292     0017                     	;# 
   293     0018                     	;# 
   294     0019                     	;# 
   295     001A                     	;# 
   296     001B                     	;# 
   297     001C                     	;# 
   298     001E                     	;# 
   299     001F                     	;# 
   300     008C                     	;# 
   301     008D                     	;# 
   302     0091                     	;# 
   303     0092                     	;# 
   304     0093                     	;# 
   305     0094                     	;# 
   306     0095                     	;# 
   307     0096                     	;# 
   308     0097                     	;# 
   309     0098                     	;# 
   310     0099                     	;# 
   311     009A                     	;# 
   312     009B                     	;# 
   313     009B                     	;# 
   314     009C                     	;# 
   315     009D                     	;# 
   316     009E                     	;# 
   317     010C                     	;# 
   318     010D                     	;# 
   319     0111                     	;# 
   320     0112                     	;# 
   321     0113                     	;# 
   322     0114                     	;# 
   323     0115                     	;# 
   324     0116                     	;# 
   325     0117                     	;# 
   326     0118                     	;# 
   327     0119                     	;# 
   328     011A                     	;# 
   329     011B                     	;# 
   330     011D                     	;# 
   331     011E                     	;# 
   332     018C                     	;# 
   333     018D                     	;# 
   334     0191                     	;# 
   335     0191                     	;# 
   336     0192                     	;# 
   337     0193                     	;# 
   338     0193                     	;# 
   339     0193                     	;# 
   340     0194                     	;# 
   341     0195                     	;# 
   342     0196                     	;# 
   343     0199                     	;# 
   344     019A                     	;# 
   345     019B                     	;# 
   346     019B                     	;# 
   347     019B                     	;# 
   348     019B                     	;# 
   349     019C                     	;# 
   350     019C                     	;# 
   351     019D                     	;# 
   352     019E                     	;# 
   353     019F                     	;# 
   354     020C                     	;# 
   355     020D                     	;# 
   356     0211                     	;# 
   357     0211                     	;# 
   358     0212                     	;# 
   359     0212                     	;# 
   360     0213                     	;# 
   361     0213                     	;# 
   362     0214                     	;# 
   363     0214                     	;# 
   364     0215                     	;# 
   365     0215                     	;# 
   366     0215                     	;# 
   367     0216                     	;# 
   368     0216                     	;# 
   369     0217                     	;# 
   370     0217                     	;# 
   371     0219                     	;# 
   372     021A                     	;# 
   373     021B                     	;# 
   374     021C                     	;# 
   375     021D                     	;# 
   376     021E                     	;# 
   377     021F                     	;# 
   378     0291                     	;# 
   379     0291                     	;# 
   380     0292                     	;# 
   381     0293                     	;# 
   382     0294                     	;# 
   383     0295                     	;# 
   384     0295                     	;# 
   385     0296                     	;# 
   386     0298                     	;# 
   387     0298                     	;# 
   388     0299                     	;# 
   389     029A                     	;# 
   390     029B                     	;# 
   391     029C                     	;# 
   392     029C                     	;# 
   393     029D                     	;# 
   394     029E                     	;# 
   395     029E                     	;# 
   396     0311                     	;# 
   397     0311                     	;# 
   398     0312                     	;# 
   399     0313                     	;# 
   400     0318                     	;# 
   401     0318                     	;# 
   402     0319                     	;# 
   403     031A                     	;# 
   404     0394                     	;# 
   405     0395                     	;# 
   406     0396                     	;# 
   407     039A                     	;# 
   408     039C                     	;# 
   409     039D                     	;# 
   410     039E                     	;# 
   411     039F                     	;# 
   412     0415                     	;# 
   413     0416                     	;# 
   414     0417                     	;# 
   415     041C                     	;# 
   416     041D                     	;# 
   417     041E                     	;# 
   418     0FE4                     	;# 
   419     0FE5                     	;# 
   420     0FE6                     	;# 
   421     0FE7                     	;# 
   422     0FE8                     	;# 
   423     0FE9                     	;# 
   424     0FEA                     	;# 
   425     0FEB                     	;# 
   426     0FED                     	;# 
   427     0FEE                     	;# 
   428     0FEF                     	;# 
   429     0000                     	;# 
   430     0001                     	;# 
   431     0002                     	;# 
   432     0003                     	;# 
   433     0004                     	;# 
   434     0005                     	;# 
   435     0006                     	;# 
   436     0007                     	;# 
   437     0008                     	;# 
   438     0009                     	;# 
   439     000A                     	;# 
   440     000B                     	;# 
   441     000C                     	;# 
   442     000D                     	;# 
   443     0011                     	;# 
   444     0012                     	;# 
   445     0013                     	;# 
   446     0014                     	;# 
   447     0015                     	;# 
   448     0016                     	;# 
   449     0016                     	;# 
   450     0017                     	;# 
   451     0018                     	;# 
   452     0019                     	;# 
   453     001A                     	;# 
   454     001B                     	;# 
   455     001C                     	;# 
   456     001E                     	;# 
   457     001F                     	;# 
   458     008C                     	;# 
   459     008D                     	;# 
   460     0091                     	;# 
   461     0092                     	;# 
   462     0093                     	;# 
   463     0094                     	;# 
   464     0095                     	;# 
   465     0096                     	;# 
   466     0097                     	;# 
   467     0098                     	;# 
   468     0099                     	;# 
   469     009A                     	;# 
   470     009B                     	;# 
   471     009B                     	;# 
   472     009C                     	;# 
   473     009D                     	;# 
   474     009E                     	;# 
   475     010C                     	;# 
   476     010D                     	;# 
   477     0111                     	;# 
   478     0112                     	;# 
   479     0113                     	;# 
   480     0114                     	;# 
   481     0115                     	;# 
   482     0116                     	;# 
   483     0117                     	;# 
   484     0118                     	;# 
   485     0119                     	;# 
   486     011A                     	;# 
   487     011B                     	;# 
   488     011D                     	;# 
   489     011E                     	;# 
   490     018C                     	;# 
   491     018D                     	;# 
   492     0191                     	;# 
   493     0191                     	;# 
   494     0192                     	;# 
   495     0193                     	;# 
   496     0193                     	;# 
   497     0193                     	;# 
   498     0194                     	;# 
   499     0195                     	;# 
   500     0196                     	;# 
   501     0199                     	;# 
   502     019A                     	;# 
   503     019B                     	;# 
   504     019B                     	;# 
   505     019B                     	;# 
   506     019B                     	;# 
   507     019C                     	;# 
   508     019C                     	;# 
   509     019D                     	;# 
   510     019E                     	;# 
   511     019F                     	;# 
   512     020C                     	;# 
   513     020D                     	;# 
   514     0211                     	;# 
   515     0211                     	;# 
   516     0212                     	;# 
   517     0212                     	;# 
   518     0213                     	;# 
   519     0213                     	;# 
   520     0214                     	;# 
   521     0214                     	;# 
   522     0215                     	;# 
   523     0215                     	;# 
   524     0215                     	;# 
   525     0216                     	;# 
   526     0216                     	;# 
   527     0217                     	;# 
   528     0217                     	;# 
   529     0219                     	;# 
   530     021A                     	;# 
   531     021B                     	;# 
   532     021C                     	;# 
   533     021D                     	;# 
   534     021E                     	;# 
   535     021F                     	;# 
   536     0291                     	;# 
   537     0291                     	;# 
   538     0292                     	;# 
   539     0293                     	;# 
   540     0294                     	;# 
   541     0295                     	;# 
   542     0295                     	;# 
   543     0296                     	;# 
   544     0298                     	;# 
   545     0298                     	;# 
   546     0299                     	;# 
   547     029A                     	;# 
   548     029B                     	;# 
   549     029C                     	;# 
   550     029C                     	;# 
   551     029D                     	;# 
   552     029E                     	;# 
   553     029E                     	;# 
   554     0311                     	;# 
   555     0311                     	;# 
   556     0312                     	;# 
   557     0313                     	;# 
   558     0318                     	;# 
   559     0318                     	;# 
   560     0319                     	;# 
   561     031A                     	;# 
   562     0394                     	;# 
   563     0395                     	;# 
   564     0396                     	;# 
   565     039A                     	;# 
   566     039C                     	;# 
   567     039D                     	;# 
   568     039E                     	;# 
   569     039F                     	;# 
   570     0415                     	;# 
   571     0416                     	;# 
   572     0417                     	;# 
   573     041C                     	;# 
   574     041D                     	;# 
   575     041E                     	;# 
   576     0FE4                     	;# 
   577     0FE5                     	;# 
   578     0FE6                     	;# 
   579     0FE7                     	;# 
   580     0FE8                     	;# 
   581     0FE9                     	;# 
   582     0FEA                     	;# 
   583     0FEB                     	;# 
   584     0FED                     	;# 
   585     0FEE                     	;# 
   586     0FEF                     	;# 
   587     0000                     	;# 
   588     0001                     	;# 
   589     0002                     	;# 
   590     0003                     	;# 
   591     0004                     	;# 
   592     0005                     	;# 
   593     0006                     	;# 
   594     0007                     	;# 
   595     0008                     	;# 
   596     0009                     	;# 
   597     000A                     	;# 
   598     000B                     	;# 
   599     000C                     	;# 
   600     000D                     	;# 
   601     0011                     	;# 
   602     0012                     	;# 
   603     0013                     	;# 
   604     0014                     	;# 
   605     0015                     	;# 
   606     0016                     	;# 
   607     0016                     	;# 
   608     0017                     	;# 
   609     0018                     	;# 
   610     0019                     	;# 
   611     001A                     	;# 
   612     001B                     	;# 
   613     001C                     	;# 
   614     001E                     	;# 
   615     001F                     	;# 
   616     008C                     	;# 
   617     008D                     	;# 
   618     0091                     	;# 
   619     0092                     	;# 
   620     0093                     	;# 
   621     0094                     	;# 
   622     0095                     	;# 
   623     0096                     	;# 
   624     0097                     	;# 
   625     0098                     	;# 
   626     0099                     	;# 
   627     009A                     	;# 
   628     009B                     	;# 
   629     009B                     	;# 
   630     009C                     	;# 
   631     009D                     	;# 
   632     009E                     	;# 
   633     010C                     	;# 
   634     010D                     	;# 
   635     0111                     	;# 
   636     0112                     	;# 
   637     0113                     	;# 
   638     0114                     	;# 
   639     0115                     	;# 
   640     0116                     	;# 
   641     0117                     	;# 
   642     0118                     	;# 
   643     0119                     	;# 
   644     011A                     	;# 
   645     011B                     	;# 
   646     011D                     	;# 
   647     011E                     	;# 
   648     018C                     	;# 
   649     018D                     	;# 
   650     0191                     	;# 
   651     0191                     	;# 
   652     0192                     	;# 
   653     0193                     	;# 
   654     0193                     	;# 
   655     0193                     	;# 
   656     0194                     	;# 
   657     0195                     	;# 
   658     0196                     	;# 
   659     0199                     	;# 
   660     019A                     	;# 
   661     019B                     	;# 
   662     019B                     	;# 
   663     019B                     	;# 
   664     019B                     	;# 
   665     019C                     	;# 
   666     019C                     	;# 
   667     019D                     	;# 
   668     019E                     	;# 
   669     019F                     	;# 
   670     020C                     	;# 
   671     020D                     	;# 
   672     0211                     	;# 
   673     0211                     	;# 
   674     0212                     	;# 
   675     0212                     	;# 
   676     0213                     	;# 
   677     0213                     	;# 
   678     0214                     	;# 
   679     0214                     	;# 
   680     0215                     	;# 
   681     0215                     	;# 
   682     0215                     	;# 
   683     0216                     	;# 
   684     0216                     	;# 
   685     0217                     	;# 
   686     0217                     	;# 
   687     0219                     	;# 
   688     021A                     	;# 
   689     021B                     	;# 
   690     021C                     	;# 
   691     021D                     	;# 
   692     021E                     	;# 
   693     021F                     	;# 
   694     0291                     	;# 
   695     0291                     	;# 
   696     0292                     	;# 
   697     0293                     	;# 
   698     0294                     	;# 
   699     0295                     	;# 
   700     0295                     	;# 
   701     0296                     	;# 
   702     0298                     	;# 
   703     0298                     	;# 
   704     0299                     	;# 
   705     029A                     	;# 
   706     029B                     	;# 
   707     029C                     	;# 
   708     029C                     	;# 
   709     029D                     	;# 
   710     029E                     	;# 
   711     029E                     	;# 
   712     0311                     	;# 
   713     0311                     	;# 
   714     0312                     	;# 
   715     0313                     	;# 
   716     0318                     	;# 
   717     0318                     	;# 
   718     0319                     	;# 
   719     031A                     	;# 
   720     0394                     	;# 
   721     0395                     	;# 
   722     0396                     	;# 
   723     039A                     	;# 
   724     039C                     	;# 
   725     039D                     	;# 
   726     039E                     	;# 
   727     039F                     	;# 
   728     0415                     	;# 
   729     0416                     	;# 
   730     0417                     	;# 
   731     041C                     	;# 
   732     041D                     	;# 
   733     041E                     	;# 
   734     0FE4                     	;# 
   735     0FE5                     	;# 
   736     0FE6                     	;# 
   737     0FE7                     	;# 
   738     0FE8                     	;# 
   739     0FE9                     	;# 
   740     0FEA                     	;# 
   741     0FEB                     	;# 
   742     0FED                     	;# 
   743     0FEE                     	;# 
   744     0FEF                     	;# 
   745     0000                     	;# 
   746     0001                     	;# 
   747     0002                     	;# 
   748     0003                     	;# 
   749     0004                     	;# 
   750     0005                     	;# 
   751     0006                     	;# 
   752     0007                     	;# 
   753     0008                     	;# 
   754     0009                     	;# 
   755     000A                     	;# 
   756     000B                     	;# 
   757     000C                     	;# 
   758     000D                     	;# 
   759     0011                     	;# 
   760     0012                     	;# 
   761     0013                     	;# 
   762     0014                     	;# 
   763     0015                     	;# 
   764     0016                     	;# 
   765     0016                     	;# 
   766     0017                     	;# 
   767     0018                     	;# 
   768     0019                     	;# 
   769     001A                     	;# 
   770     001B                     	;# 
   771     001C                     	;# 
   772     001E                     	;# 
   773     001F                     	;# 
   774     008C                     	;# 
   775     008D                     	;# 
   776     0091                     	;# 
   777     0092                     	;# 
   778     0093                     	;# 
   779     0094                     	;# 
   780     0095                     	;# 
   781     0096                     	;# 
   782     0097                     	;# 
   783     0098                     	;# 
   784     0099                     	;# 
   785     009A                     	;# 
   786     009B                     	;# 
   787     009B                     	;# 
   788     009C                     	;# 
   789     009D                     	;# 
   790     009E                     	;# 
   791     010C                     	;# 
   792     010D                     	;# 
   793     0111                     	;# 
   794     0112                     	;# 
   795     0113                     	;# 
   796     0114                     	;# 
   797     0115                     	;# 
   798     0116                     	;# 
   799     0117                     	;# 
   800     0118                     	;# 
   801     0119                     	;# 
   802     011A                     	;# 
   803     011B                     	;# 
   804     011D                     	;# 
   805     011E                     	;# 
   806     018C                     	;# 
   807     018D                     	;# 
   808     0191                     	;# 
   809     0191                     	;# 
   810     0192                     	;# 
   811     0193                     	;# 
   812     0193                     	;# 
   813     0193                     	;# 
   814     0194                     	;# 
   815     0195                     	;# 
   816     0196                     	;# 
   817     0199                     	;# 
   818     019A                     	;# 
   819     019B                     	;# 
   820     019B                     	;# 
   821     019B                     	;# 
   822     019B                     	;# 
   823     019C                     	;# 
   824     019C                     	;# 
   825     019D                     	;# 
   826     019E                     	;# 
   827     019F                     	;# 
   828     020C                     	;# 
   829     020D                     	;# 
   830     0211                     	;# 
   831     0211                     	;# 
   832     0212                     	;# 
   833     0212                     	;# 
   834     0213                     	;# 
   835     0213                     	;# 
   836     0214                     	;# 
   837     0214                     	;# 
   838     0215                     	;# 
   839     0215                     	;# 
   840     0215                     	;# 
   841     0216                     	;# 
   842     0216                     	;# 
   843     0217                     	;# 
   844     0217                     	;# 
   845     0219                     	;# 
   846     021A                     	;# 
   847     021B                     	;# 
   848     021C                     	;# 
   849     021D                     	;# 
   850     021E                     	;# 
   851     021F                     	;# 
   852     0291                     	;# 
   853     0291                     	;# 
   854     0292                     	;# 
   855     0293                     	;# 
   856     0294                     	;# 
   857     0295                     	;# 
   858     0295                     	;# 
   859     0296                     	;# 
   860     0298                     	;# 
   861     0298                     	;# 
   862     0299                     	;# 
   863     029A                     	;# 
   864     029B                     	;# 
   865     029C                     	;# 
   866     029C                     	;# 
   867     029D                     	;# 
   868     029E                     	;# 
   869     029E                     	;# 
   870     0311                     	;# 
   871     0311                     	;# 
   872     0312                     	;# 
   873     0313                     	;# 
   874     0318                     	;# 
   875     0318                     	;# 
   876     0319                     	;# 
   877     031A                     	;# 
   878     0394                     	;# 
   879     0395                     	;# 
   880     0396                     	;# 
   881     039A                     	;# 
   882     039C                     	;# 
   883     039D                     	;# 
   884     039E                     	;# 
   885     039F                     	;# 
   886     0415                     	;# 
   887     0416                     	;# 
   888     0417                     	;# 
   889     041C                     	;# 
   890     041D                     	;# 
   891     041E                     	;# 
   892     0FE4                     	;# 
   893     0FE5                     	;# 
   894     0FE6                     	;# 
   895     0FE7                     	;# 
   896     0FE8                     	;# 
   897     0FE9                     	;# 
   898     0FEA                     	;# 
   899     0FEB                     	;# 
   900     0FED                     	;# 
   901     0FEE                     	;# 
   902     0FEF                     	;# 
   903     0000                     	;# 
   904     0001                     	;# 
   905     0002                     	;# 
   906     0003                     	;# 
   907     0004                     	;# 
   908     0005                     	;# 
   909     0006                     	;# 
   910     0007                     	;# 
   911     0008                     	;# 
   912     0009                     	;# 
   913     000A                     	;# 
   914     000B                     	;# 
   915     000C                     	;# 
   916     000D                     	;# 
   917     0011                     	;# 
   918     0012                     	;# 
   919     0013                     	;# 
   920     0014                     	;# 
   921     0015                     	;# 
   922     0016                     	;# 
   923     0016                     	;# 
   924     0017                     	;# 
   925     0018                     	;# 
   926     0019                     	;# 
   927     001A                     	;# 
   928     001B                     	;# 
   929     001C                     	;# 
   930     001E                     	;# 
   931     001F                     	;# 
   932     008C                     	;# 
   933     008D                     	;# 
   934     0091                     	;# 
   935     0092                     	;# 
   936     0093                     	;# 
   937     0094                     	;# 
   938     0095                     	;# 
   939     0096                     	;# 
   940     0097                     	;# 
   941     0098                     	;# 
   942     0099                     	;# 
   943     009A                     	;# 
   944     009B                     	;# 
   945     009B                     	;# 
   946     009C                     	;# 
   947     009D                     	;# 
   948     009E                     	;# 
   949     010C                     	;# 
   950     010D                     	;# 
   951     0111                     	;# 
   952     0112                     	;# 
   953     0113                     	;# 
   954     0114                     	;# 
   955     0115                     	;# 
   956     0116                     	;# 
   957     0117                     	;# 
   958     0118                     	;# 
   959     0119                     	;# 
   960     011A                     	;# 
   961     011B                     	;# 
   962     011D                     	;# 
   963     011E                     	;# 
   964     018C                     	;# 
   965     018D                     	;# 
   966     0191                     	;# 
   967     0191                     	;# 
   968     0192                     	;# 
   969     0193                     	;# 
   970     0193                     	;# 
   971     0193                     	;# 
   972     0194                     	;# 
   973     0195                     	;# 
   974     0196                     	;# 
   975     0199                     	;# 
   976     019A                     	;# 
   977     019B                     	;# 
   978     019B                     	;# 
   979     019B                     	;# 
   980     019B                     	;# 
   981     019C                     	;# 
   982     019C                     	;# 
   983     019D                     	;# 
   984     019E                     	;# 
   985     019F                     	;# 
   986     020C                     	;# 
   987     020D                     	;# 
   988     0211                     	;# 
   989     0211                     	;# 
   990     0212                     	;# 
   991     0212                     	;# 
   992     0213                     	;# 
   993     0213                     	;# 
   994     0214                     	;# 
   995     0214                     	;# 
   996     0215                     	;# 
   997     0215                     	;# 
   998     0215                     	;# 
   999     0216                     	;# 
  1000     0216                     	;# 
  1001     0217                     	;# 
  1002     0217                     	;# 
  1003     0219                     	;# 
  1004     021A                     	;# 
  1005     021B                     	;# 
  1006     021C                     	;# 
  1007     021D                     	;# 
  1008     021E                     	;# 
  1009     021F                     	;# 
  1010     0291                     	;# 
  1011     0291                     	;# 
  1012     0292                     	;# 
  1013     0293                     	;# 
  1014     0294                     	;# 
  1015     0295                     	;# 
  1016     0295                     	;# 
  1017     0296                     	;# 
  1018     0298                     	;# 
  1019     0298                     	;# 
  1020     0299                     	;# 
  1021     029A                     	;# 
  1022     029B                     	;# 
  1023     029C                     	;# 
  1024     029C                     	;# 
  1025     029D                     	;# 
  1026     029E                     	;# 
  1027     029E                     	;# 
  1028     0311                     	;# 
  1029     0311                     	;# 
  1030     0312                     	;# 
  1031     0313                     	;# 
  1032     0318                     	;# 
  1033     0318                     	;# 
  1034     0319                     	;# 
  1035     031A                     	;# 
  1036     0394                     	;# 
  1037     0395                     	;# 
  1038     0396                     	;# 
  1039     039A                     	;# 
  1040     039C                     	;# 
  1041     039D                     	;# 
  1042     039E                     	;# 
  1043     039F                     	;# 
  1044     0415                     	;# 
  1045     0416                     	;# 
  1046     0417                     	;# 
  1047     041C                     	;# 
  1048     041D                     	;# 
  1049     041E                     	;# 
  1050     0FE4                     	;# 
  1051     0FE5                     	;# 
  1052     0FE6                     	;# 
  1053     0FE7                     	;# 
  1054     0FE8                     	;# 
  1055     0FE9                     	;# 
  1056     0FEA                     	;# 
  1057     0FEB                     	;# 
  1058     0FED                     	;# 
  1059     0FEE                     	;# 
  1060     0FEF                     	;# 
  1061     0000                     	;# 
  1062     0001                     	;# 
  1063     0002                     	;# 
  1064     0003                     	;# 
  1065     0004                     	;# 
  1066     0005                     	;# 
  1067     0006                     	;# 
  1068     0007                     	;# 
  1069     0008                     	;# 
  1070     0009                     	;# 
  1071     000A                     	;# 
  1072     000B                     	;# 
  1073     000C                     	;# 
  1074     000D                     	;# 
  1075     0011                     	;# 
  1076     0012                     	;# 
  1077     0013                     	;# 
  1078     0014                     	;# 
  1079     0015                     	;# 
  1080     0016                     	;# 
  1081     0016                     	;# 
  1082     0017                     	;# 
  1083     0018                     	;# 
  1084     0019                     	;# 
  1085     001A                     	;# 
  1086     001B                     	;# 
  1087     001C                     	;# 
  1088     001E                     	;# 
  1089     001F                     	;# 
  1090     008C                     	;# 
  1091     008D                     	;# 
  1092     0091                     	;# 
  1093     0092                     	;# 
  1094     0093                     	;# 
  1095     0094                     	;# 
  1096     0095                     	;# 
  1097     0096                     	;# 
  1098     0097                     	;# 
  1099     0098                     	;# 
  1100     0099                     	;# 
  1101     009A                     	;# 
  1102     009B                     	;# 
  1103     009B                     	;# 
  1104     009C                     	;# 
  1105     009D                     	;# 
  1106     009E                     	;# 
  1107     010C                     	;# 
  1108     010D                     	;# 
  1109     0111                     	;# 
  1110     0112                     	;# 
  1111     0113                     	;# 
  1112     0114                     	;# 
  1113     0115                     	;# 
  1114     0116                     	;# 
  1115     0117                     	;# 
  1116     0118                     	;# 
  1117     0119                     	;# 
  1118     011A                     	;# 
  1119     011B                     	;# 
  1120     011D                     	;# 
  1121     011E                     	;# 
  1122     018C                     	;# 
  1123     018D                     	;# 
  1124     0191                     	;# 
  1125     0191                     	;# 
  1126     0192                     	;# 
  1127     0193                     	;# 
  1128     0193                     	;# 
  1129     0193                     	;# 
  1130     0194                     	;# 
  1131     0195                     	;# 
  1132     0196                     	;# 
  1133     0199                     	;# 
  1134     019A                     	;# 
  1135     019B                     	;# 
  1136     019B                     	;# 
  1137     019B                     	;# 
  1138     019B                     	;# 
  1139     019C                     	;# 
  1140     019C                     	;# 
  1141     019D                     	;# 
  1142     019E                     	;# 
  1143     019F                     	;# 
  1144     020C                     	;# 
  1145     020D                     	;# 
  1146     0211                     	;# 
  1147     0211                     	;# 
  1148     0212                     	;# 
  1149     0212                     	;# 
  1150     0213                     	;# 
  1151     0213                     	;# 
  1152     0214                     	;# 
  1153     0214                     	;# 
  1154     0215                     	;# 
  1155     0215                     	;# 
  1156     0215                     	;# 
  1157     0216                     	;# 
  1158     0216                     	;# 
  1159     0217                     	;# 
  1160     0217                     	;# 
  1161     0219                     	;# 
  1162     021A                     	;# 
  1163     021B                     	;# 
  1164     021C                     	;# 
  1165     021D                     	;# 
  1166     021E                     	;# 
  1167     021F                     	;# 
  1168     0291                     	;# 
  1169     0291                     	;# 
  1170     0292                     	;# 
  1171     0293                     	;# 
  1172     0294                     	;# 
  1173     0295                     	;# 
  1174     0295                     	;# 
  1175     0296                     	;# 
  1176     0298                     	;# 
  1177     0298                     	;# 
  1178     0299                     	;# 
  1179     029A                     	;# 
  1180     029B                     	;# 
  1181     029C                     	;# 
  1182     029C                     	;# 
  1183     029D                     	;# 
  1184     029E                     	;# 
  1185     029E                     	;# 
  1186     0311                     	;# 
  1187     0311                     	;# 
  1188     0312                     	;# 
  1189     0313                     	;# 
  1190     0318                     	;# 
  1191     0318                     	;# 
  1192     0319                     	;# 
  1193     031A                     	;# 
  1194     0394                     	;# 
  1195     0395                     	;# 
  1196     0396                     	;# 
  1197     039A                     	;# 
  1198     039C                     	;# 
  1199     039D                     	;# 
  1200     039E                     	;# 
  1201     039F                     	;# 
  1202     0415                     	;# 
  1203     0416                     	;# 
  1204     0417                     	;# 
  1205     041C                     	;# 
  1206     041D                     	;# 
  1207     041E                     	;# 
  1208     0FE4                     	;# 
  1209     0FE5                     	;# 
  1210     0FE6                     	;# 
  1211     0FE7                     	;# 
  1212     0FE8                     	;# 
  1213     0FE9                     	;# 
  1214     0FEA                     	;# 
  1215     0FEB                     	;# 
  1216     0FED                     	;# 
  1217     0FEE                     	;# 
  1218     0FEF                     	;# 
  1219     0000                     	;# 
  1220     0001                     	;# 
  1221     0002                     	;# 
  1222     0003                     	;# 
  1223     0004                     	;# 
  1224     0005                     	;# 
  1225     0006                     	;# 
  1226     0007                     	;# 
  1227     0008                     	;# 
  1228     0009                     	;# 
  1229     000A                     	;# 
  1230     000B                     	;# 
  1231     000C                     	;# 
  1232     000D                     	;# 
  1233     0011                     	;# 
  1234     0012                     	;# 
  1235     0013                     	;# 
  1236     0014                     	;# 
  1237     0015                     	;# 
  1238     0016                     	;# 
  1239     0016                     	;# 
  1240     0017                     	;# 
  1241     0018                     	;# 
  1242     0019                     	;# 
  1243     001A                     	;# 
  1244     001B                     	;# 
  1245     001C                     	;# 
  1246     001E                     	;# 
  1247     001F                     	;# 
  1248     008C                     	;# 
  1249     008D                     	;# 
  1250     0091                     	;# 
  1251     0092                     	;# 
  1252     0093                     	;# 
  1253     0094                     	;# 
  1254     0095                     	;# 
  1255     0096                     	;# 
  1256     0097                     	;# 
  1257     0098                     	;# 
  1258     0099                     	;# 
  1259     009A                     	;# 
  1260     009B                     	;# 
  1261     009B                     	;# 
  1262     009C                     	;# 
  1263     009D                     	;# 
  1264     009E                     	;# 
  1265     010C                     	;# 
  1266     010D                     	;# 
  1267     0111                     	;# 
  1268     0112                     	;# 
  1269     0113                     	;# 
  1270     0114                     	;# 
  1271     0115                     	;# 
  1272     0116                     	;# 
  1273     0117                     	;# 
  1274     0118                     	;# 
  1275     0119                     	;# 
  1276     011A                     	;# 
  1277     011B                     	;# 
  1278     011D                     	;# 
  1279     011E                     	;# 
  1280     018C                     	;# 
  1281     018D                     	;# 
  1282     0191                     	;# 
  1283     0191                     	;# 
  1284     0192                     	;# 
  1285     0193                     	;# 
  1286     0193                     	;# 
  1287     0193                     	;# 
  1288     0194                     	;# 
  1289     0195                     	;# 
  1290     0196                     	;# 
  1291     0199                     	;# 
  1292     019A                     	;# 
  1293     019B                     	;# 
  1294     019B                     	;# 
  1295     019B                     	;# 
  1296     019B                     	;# 
  1297     019C                     	;# 
  1298     019C                     	;# 
  1299     019D                     	;# 
  1300     019E                     	;# 
  1301     019F                     	;# 
  1302     020C                     	;# 
  1303     020D                     	;# 
  1304     0211                     	;# 
  1305     0211                     	;# 
  1306     0212                     	;# 
  1307     0212                     	;# 
  1308     0213                     	;# 
  1309     0213                     	;# 
  1310     0214                     	;# 
  1311     0214                     	;# 
  1312     0215                     	;# 
  1313     0215                     	;# 
  1314     0215                     	;# 
  1315     0216                     	;# 
  1316     0216                     	;# 
  1317     0217                     	;# 
  1318     0217                     	;# 
  1319     0219                     	;# 
  1320     021A                     	;# 
  1321     021B                     	;# 
  1322     021C                     	;# 
  1323     021D                     	;# 
  1324     021E                     	;# 
  1325     021F                     	;# 
  1326     0291                     	;# 
  1327     0291                     	;# 
  1328     0292                     	;# 
  1329     0293                     	;# 
  1330     0294                     	;# 
  1331     0295                     	;# 
  1332     0295                     	;# 
  1333     0296                     	;# 
  1334     0298                     	;# 
  1335     0298                     	;# 
  1336     0299                     	;# 
  1337     029A                     	;# 
  1338     029B                     	;# 
  1339     029C                     	;# 
  1340     029C                     	;# 
  1341     029D                     	;# 
  1342     029E                     	;# 
  1343     029E                     	;# 
  1344     0311                     	;# 
  1345     0311                     	;# 
  1346     0312                     	;# 
  1347     0313                     	;# 
  1348     0318                     	;# 
  1349     0318                     	;# 
  1350     0319                     	;# 
  1351     031A                     	;# 
  1352     0394                     	;# 
  1353     0395                     	;# 
  1354     0396                     	;# 
  1355     039A                     	;# 
  1356     039C                     	;# 
  1357     039D                     	;# 
  1358     039E                     	;# 
  1359     039F                     	;# 
  1360     0415                     	;# 
  1361     0416                     	;# 
  1362     0417                     	;# 
  1363     041C                     	;# 
  1364     041D                     	;# 
  1365     041E                     	;# 
  1366     0FE4                     	;# 
  1367     0FE5                     	;# 
  1368     0FE6                     	;# 
  1369     0FE7                     	;# 
  1370     0FE8                     	;# 
  1371     0FE9                     	;# 
  1372     0FEA                     	;# 
  1373     0FEB                     	;# 
  1374     0FED                     	;# 
  1375     0FEE                     	;# 
  1376     0FEF                     	;# 
  1377     0000                     	;# 
  1378     0001                     	;# 
  1379     0002                     	;# 
  1380     0003                     	;# 
  1381     0004                     	;# 
  1382     0005                     	;# 
  1383     0006                     	;# 
  1384     0007                     	;# 
  1385     0008                     	;# 
  1386     0009                     	;# 
  1387     000A                     	;# 
  1388     000B                     	;# 
  1389     000C                     	;# 
  1390     000D                     	;# 
  1391     0011                     	;# 
  1392     0012                     	;# 
  1393     0013                     	;# 
  1394     0014                     	;# 
  1395     0015                     	;# 
  1396     0016                     	;# 
  1397     0016                     	;# 
  1398     0017                     	;# 
  1399     0018                     	;# 
  1400     0019                     	;# 
  1401     001A                     	;# 
  1402     001B                     	;# 
  1403     001C                     	;# 
  1404     001E                     	;# 
  1405     001F                     	;# 
  1406     008C                     	;# 
  1407     008D                     	;# 
  1408     0091                     	;# 
  1409     0092                     	;# 
  1410     0093                     	;# 
  1411     0094                     	;# 
  1412     0095                     	;# 
  1413     0096                     	;# 
  1414     0097                     	;# 
  1415     0098                     	;# 
  1416     0099                     	;# 
  1417     009A                     	;# 
  1418     009B                     	;# 
  1419     009B                     	;# 
  1420     009C                     	;# 
  1421     009D                     	;# 
  1422     009E                     	;# 
  1423     010C                     	;# 
  1424     010D                     	;# 
  1425     0111                     	;# 
  1426     0112                     	;# 
  1427     0113                     	;# 
  1428     0114                     	;# 
  1429     0115                     	;# 
  1430     0116                     	;# 
  1431     0117                     	;# 
  1432     0118                     	;# 
  1433     0119                     	;# 
  1434     011A                     	;# 
  1435     011B                     	;# 
  1436     011D                     	;# 
  1437     011E                     	;# 
  1438     018C                     	;# 
  1439     018D                     	;# 
  1440     0191                     	;# 
  1441     0191                     	;# 
  1442     0192                     	;# 
  1443     0193                     	;# 
  1444     0193                     	;# 
  1445     0193                     	;# 
  1446     0194                     	;# 
  1447     0195                     	;# 
  1448     0196                     	;# 
  1449     0199                     	;# 
  1450     019A                     	;# 
  1451     019B                     	;# 
  1452     019B                     	;# 
  1453     019B                     	;# 
  1454     019B                     	;# 
  1455     019C                     	;# 
  1456     019C                     	;# 
  1457     019D                     	;# 
  1458     019E                     	;# 
  1459     019F                     	;# 
  1460     020C                     	;# 
  1461     020D                     	;# 
  1462     0211                     	;# 
  1463     0211                     	;# 
  1464     0212                     	;# 
  1465     0212                     	;# 
  1466     0213                     	;# 
  1467     0213                     	;# 
  1468     0214                     	;# 
  1469     0214                     	;# 
  1470     0215                     	;# 
  1471     0215                     	;# 
  1472     0215                     	;# 
  1473     0216                     	;# 
  1474     0216                     	;# 
  1475     0217                     	;# 
  1476     0217                     	;# 
  1477     0219                     	;# 
  1478     021A                     	;# 
  1479     021B                     	;# 
  1480     021C                     	;# 
  1481     021D                     	;# 
  1482     021E                     	;# 
  1483     021F                     	;# 
  1484     0291                     	;# 
  1485     0291                     	;# 
  1486     0292                     	;# 
  1487     0293                     	;# 
  1488     0294                     	;# 
  1489     0295                     	;# 
  1490     0295                     	;# 
  1491     0296                     	;# 
  1492     0298                     	;# 
  1493     0298                     	;# 
  1494     0299                     	;# 
  1495     029A                     	;# 
  1496     029B                     	;# 
  1497     029C                     	;# 
  1498     029C                     	;# 
  1499     029D                     	;# 
  1500     029E                     	;# 
  1501     029E                     	;# 
  1502     0311                     	;# 
  1503     0311                     	;# 
  1504     0312                     	;# 
  1505     0313                     	;# 
  1506     0318                     	;# 
  1507     0318                     	;# 
  1508     0319                     	;# 
  1509     031A                     	;# 
  1510     0394                     	;# 
  1511     0395                     	;# 
  1512     0396                     	;# 
  1513     039A                     	;# 
  1514     039C                     	;# 
  1515     039D                     	;# 
  1516     039E                     	;# 
  1517     039F                     	;# 
  1518     0415                     	;# 
  1519     0416                     	;# 
  1520     0417                     	;# 
  1521     041C                     	;# 
  1522     041D                     	;# 
  1523     041E                     	;# 
  1524     0FE4                     	;# 
  1525     0FE5                     	;# 
  1526     0FE6                     	;# 
  1527     0FE7                     	;# 
  1528     0FE8                     	;# 
  1529     0FE9                     	;# 
  1530     0FEA                     	;# 
  1531     0FEB                     	;# 
  1532     0FED                     	;# 
  1533     0FEE                     	;# 
  1534     0FEF                     	;# 
  1535     0000                     	;# 
  1536     0001                     	;# 
  1537     0002                     	;# 
  1538     0003                     	;# 
  1539     0004                     	;# 
  1540     0005                     	;# 
  1541     0006                     	;# 
  1542     0007                     	;# 
  1543     0008                     	;# 
  1544     0009                     	;# 
  1545     000A                     	;# 
  1546     000B                     	;# 
  1547     000C                     	;# 
  1548     000D                     	;# 
  1549     0011                     	;# 
  1550     0012                     	;# 
  1551     0013                     	;# 
  1552     0014                     	;# 
  1553     0015                     	;# 
  1554     0016                     	;# 
  1555     0016                     	;# 
  1556     0017                     	;# 
  1557     0018                     	;# 
  1558     0019                     	;# 
  1559     001A                     	;# 
  1560     001B                     	;# 
  1561     001C                     	;# 
  1562     001E                     	;# 
  1563     001F                     	;# 
  1564     008C                     	;# 
  1565     008D                     	;# 
  1566     0091                     	;# 
  1567     0092                     	;# 
  1568     0093                     	;# 
  1569     0094                     	;# 
  1570     0095                     	;# 
  1571     0096                     	;# 
  1572     0097                     	;# 
  1573     0098                     	;# 
  1574     0099                     	;# 
  1575     009A                     	;# 
  1576     009B                     	;# 
  1577     009B                     	;# 
  1578     009C                     	;# 
  1579     009D                     	;# 
  1580     009E                     	;# 
  1581     010C                     	;# 
  1582     010D                     	;# 
  1583     0111                     	;# 
  1584     0112                     	;# 
  1585     0113                     	;# 
  1586     0114                     	;# 
  1587     0115                     	;# 
  1588     0116                     	;# 
  1589     0117                     	;# 
  1590     0118                     	;# 
  1591     0119                     	;# 
  1592     011A                     	;# 
  1593     011B                     	;# 
  1594     011D                     	;# 
  1595     011E                     	;# 
  1596     018C                     	;# 
  1597     018D                     	;# 
  1598     0191                     	;# 
  1599     0191                     	;# 
  1600     0192                     	;# 
  1601     0193                     	;# 
  1602     0193                     	;# 
  1603     0193                     	;# 
  1604     0194                     	;# 
  1605     0195                     	;# 
  1606     0196                     	;# 
  1607     0199                     	;# 
  1608     019A                     	;# 
  1609     019B                     	;# 
  1610     019B                     	;# 
  1611     019B                     	;# 
  1612     019B                     	;# 
  1613     019C                     	;# 
  1614     019C                     	;# 
  1615     019D                     	;# 
  1616     019E                     	;# 
  1617     019F                     	;# 
  1618     020C                     	;# 
  1619     020D                     	;# 
  1620     0211                     	;# 
  1621     0211                     	;# 
  1622     0212                     	;# 
  1623     0212                     	;# 
  1624     0213                     	;# 
  1625     0213                     	;# 
  1626     0214                     	;# 
  1627     0214                     	;# 
  1628     0215                     	;# 
  1629     0215                     	;# 
  1630     0215                     	;# 
  1631     0216                     	;# 
  1632     0216                     	;# 
  1633     0217                     	;# 
  1634     0217                     	;# 
  1635     0219                     	;# 
  1636     021A                     	;# 
  1637     021B                     	;# 
  1638     021C                     	;# 
  1639     021D                     	;# 
  1640     021E                     	;# 
  1641     021F                     	;# 
  1642     0291                     	;# 
  1643     0291                     	;# 
  1644     0292                     	;# 
  1645     0293                     	;# 
  1646     0294                     	;# 
  1647     0295                     	;# 
  1648     0295                     	;# 
  1649     0296                     	;# 
  1650     0298                     	;# 
  1651     0298                     	;# 
  1652     0299                     	;# 
  1653     029A                     	;# 
  1654     029B                     	;# 
  1655     029C                     	;# 
  1656     029C                     	;# 
  1657     029D                     	;# 
  1658     029E                     	;# 
  1659     029E                     	;# 
  1660     0311                     	;# 
  1661     0311                     	;# 
  1662     0312                     	;# 
  1663     0313                     	;# 
  1664     0318                     	;# 
  1665     0318                     	;# 
  1666     0319                     	;# 
  1667     031A                     	;# 
  1668     0394                     	;# 
  1669     0395                     	;# 
  1670     0396                     	;# 
  1671     039A                     	;# 
  1672     039C                     	;# 
  1673     039D                     	;# 
  1674     039E                     	;# 
  1675     039F                     	;# 
  1676     0415                     	;# 
  1677     0416                     	;# 
  1678     0417                     	;# 
  1679     041C                     	;# 
  1680     041D                     	;# 
  1681     041E                     	;# 
  1682     0FE4                     	;# 
  1683     0FE5                     	;# 
  1684     0FE6                     	;# 
  1685     0FE7                     	;# 
  1686     0FE8                     	;# 
  1687     0FE9                     	;# 
  1688     0FEA                     	;# 
  1689     0FEB                     	;# 
  1690     0FED                     	;# 
  1691     0FEE                     	;# 
  1692     0FEF                     	;# 
  1693     0000                     	;# 
  1694     0001                     	;# 
  1695     0002                     	;# 
  1696     0003                     	;# 
  1697     0004                     	;# 
  1698     0005                     	;# 
  1699     0006                     	;# 
  1700     0007                     	;# 
  1701     0008                     	;# 
  1702     0009                     	;# 
  1703     000A                     	;# 
  1704     000B                     	;# 
  1705     000C                     	;# 
  1706     000D                     	;# 
  1707     0011                     	;# 
  1708     0012                     	;# 
  1709     0013                     	;# 
  1710     0014                     	;# 
  1711     0015                     	;# 
  1712     0016                     	;# 
  1713     0016                     	;# 
  1714     0017                     	;# 
  1715     0018                     	;# 
  1716     0019                     	;# 
  1717     001A                     	;# 
  1718     001B                     	;# 
  1719     001C                     	;# 
  1720     001E                     	;# 
  1721     001F                     	;# 
  1722     008C                     	;# 
  1723     008D                     	;# 
  1724     0091                     	;# 
  1725     0092                     	;# 
  1726     0093                     	;# 
  1727     0094                     	;# 
  1728     0095                     	;# 
  1729     0096                     	;# 
  1730     0097                     	;# 
  1731     0098                     	;# 
  1732     0099                     	;# 
  1733     009A                     	;# 
  1734     009B                     	;# 
  1735     009B                     	;# 
  1736     009C                     	;# 
  1737     009D                     	;# 
  1738     009E                     	;# 
  1739     010C                     	;# 
  1740     010D                     	;# 
  1741     0111                     	;# 
  1742     0112                     	;# 
  1743     0113                     	;# 
  1744     0114                     	;# 
  1745     0115                     	;# 
  1746     0116                     	;# 
  1747     0117                     	;# 
  1748     0118                     	;# 
  1749     0119                     	;# 
  1750     011A                     	;# 
  1751     011B                     	;# 
  1752     011D                     	;# 
  1753     011E                     	;# 
  1754     018C                     	;# 
  1755     018D                     	;# 
  1756     0191                     	;# 
  1757     0191                     	;# 
  1758     0192                     	;# 
  1759     0193                     	;# 
  1760     0193                     	;# 
  1761     0193                     	;# 
  1762     0194                     	;# 
  1763     0195                     	;# 
  1764     0196                     	;# 
  1765     0199                     	;# 
  1766     019A                     	;# 
  1767     019B                     	;# 
  1768     019B                     	;# 
  1769     019B                     	;# 
  1770     019B                     	;# 
  1771     019C                     	;# 
  1772     019C                     	;# 
  1773     019D                     	;# 
  1774     019E                     	;# 
  1775     019F                     	;# 
  1776     020C                     	;# 
  1777     020D                     	;# 
  1778     0211                     	;# 
  1779     0211                     	;# 
  1780     0212                     	;# 
  1781     0212                     	;# 
  1782     0213                     	;# 
  1783     0213                     	;# 
  1784     0214                     	;# 
  1785     0214                     	;# 
  1786     0215                     	;# 
  1787     0215                     	;# 
  1788     0215                     	;# 
  1789     0216                     	;# 
  1790     0216                     	;# 
  1791     0217                     	;# 
  1792     0217                     	;# 
  1793     0219                     	;# 
  1794     021A                     	;# 
  1795     021B                     	;# 
  1796     021C                     	;# 
  1797     021D                     	;# 
  1798     021E                     	;# 
  1799     021F                     	;# 
  1800     0291                     	;# 
  1801     0291                     	;# 
  1802     0292                     	;# 
  1803     0293                     	;# 
  1804     0294                     	;# 
  1805     0295                     	;# 
  1806     0295                     	;# 
  1807     0296                     	;# 
  1808     0298                     	;# 
  1809     0298                     	;# 
  1810     0299                     	;# 
  1811     029A                     	;# 
  1812     029B                     	;# 
  1813     029C                     	;# 
  1814     029C                     	;# 
  1815     029D                     	;# 
  1816     029E                     	;# 
  1817     029E                     	;# 
  1818     0311                     	;# 
  1819     0311                     	;# 
  1820     0312                     	;# 
  1821     0313                     	;# 
  1822     0318                     	;# 
  1823     0318                     	;# 
  1824     0319                     	;# 
  1825     031A                     	;# 
  1826     0394                     	;# 
  1827     0395                     	;# 
  1828     0396                     	;# 
  1829     039A                     	;# 
  1830     039C                     	;# 
  1831     039D                     	;# 
  1832     039E                     	;# 
  1833     039F                     	;# 
  1834     0415                     	;# 
  1835     0416                     	;# 
  1836     0417                     	;# 
  1837     041C                     	;# 
  1838     041D                     	;# 
  1839     041E                     	;# 
  1840     0FE4                     	;# 
  1841     0FE5                     	;# 
  1842     0FE6                     	;# 
  1843     0FE7                     	;# 
  1844     0FE8                     	;# 
  1845     0FE9                     	;# 
  1846     0FEA                     	;# 
  1847     0FEB                     	;# 
  1848     0FED                     	;# 
  1849     0FEE                     	;# 
  1850     0FEF                     	;# 
  1851     0000                     	;# 
  1852     0001                     	;# 
  1853     0002                     	;# 
  1854     0003                     	;# 
  1855     0004                     	;# 
  1856     0005                     	;# 
  1857     0006                     	;# 
  1858     0007                     	;# 
  1859     0008                     	;# 
  1860     0009                     	;# 
  1861     000A                     	;# 
  1862     000B                     	;# 
  1863     000C                     	;# 
  1864     000D                     	;# 
  1865     0011                     	;# 
  1866     0012                     	;# 
  1867     0013                     	;# 
  1868     0014                     	;# 
  1869     0015                     	;# 
  1870     0016                     	;# 
  1871     0016                     	;# 
  1872     0017                     	;# 
  1873     0018                     	;# 
  1874     0019                     	;# 
  1875     001A                     	;# 
  1876     001B                     	;# 
  1877     001C                     	;# 
  1878     001E                     	;# 
  1879     001F                     	;# 
  1880     008C                     	;# 
  1881     008D                     	;# 
  1882     0091                     	;# 
  1883     0092                     	;# 
  1884     0093                     	;# 
  1885     0094                     	;# 
  1886     0095                     	;# 
  1887     0096                     	;# 
  1888     0097                     	;# 
  1889     0098                     	;# 
  1890     0099                     	;# 
  1891     009A                     	;# 
  1892     009B                     	;# 
  1893     009B                     	;# 
  1894     009C                     	;# 
  1895     009D                     	;# 
  1896     009E                     	;# 
  1897     010C                     	;# 
  1898     010D                     	;# 
  1899     0111                     	;# 
  1900     0112                     	;# 
  1901     0113                     	;# 
  1902     0114                     	;# 
  1903     0115                     	;# 
  1904     0116                     	;# 
  1905     0117                     	;# 
  1906     0118                     	;# 
  1907     0119                     	;# 
  1908     011A                     	;# 
  1909     011B                     	;# 
  1910     011D                     	;# 
  1911     011E                     	;# 
  1912     018C                     	;# 
  1913     018D                     	;# 
  1914     0191                     	;# 
  1915     0191                     	;# 
  1916     0192                     	;# 
  1917     0193                     	;# 
  1918     0193                     	;# 
  1919     0193                     	;# 
  1920     0194                     	;# 
  1921     0195                     	;# 
  1922     0196                     	;# 
  1923     0199                     	;# 
  1924     019A                     	;# 
  1925     019B                     	;# 
  1926     019B                     	;# 
  1927     019B                     	;# 
  1928     019B                     	;# 
  1929     019C                     	;# 
  1930     019C                     	;# 
  1931     019D                     	;# 
  1932     019E                     	;# 
  1933     019F                     	;# 
  1934     020C                     	;# 
  1935     020D                     	;# 
  1936     0211                     	;# 
  1937     0211                     	;# 
  1938     0212                     	;# 
  1939     0212                     	;# 
  1940     0213                     	;# 
  1941     0213                     	;# 
  1942     0214                     	;# 
  1943     0214                     	;# 
  1944     0215                     	;# 
  1945     0215                     	;# 
  1946     0215                     	;# 
  1947     0216                     	;# 
  1948     0216                     	;# 
  1949     0217                     	;# 
  1950     0217                     	;# 
  1951     0219                     	;# 
  1952     021A                     	;# 
  1953     021B                     	;# 
  1954     021C                     	;# 
  1955     021D                     	;# 
  1956     021E                     	;# 
  1957     021F                     	;# 
  1958     0291                     	;# 
  1959     0291                     	;# 
  1960     0292                     	;# 
  1961     0293                     	;# 
  1962     0294                     	;# 
  1963     0295                     	;# 
  1964     0295                     	;# 
  1965     0296                     	;# 
  1966     0298                     	;# 
  1967     0298                     	;# 
  1968     0299                     	;# 
  1969     029A                     	;# 
  1970     029B                     	;# 
  1971     029C                     	;# 
  1972     029C                     	;# 
  1973     029D                     	;# 
  1974     029E                     	;# 
  1975     029E                     	;# 
  1976     0311                     	;# 
  1977     0311                     	;# 
  1978     0312                     	;# 
  1979     0313                     	;# 
  1980     0318                     	;# 
  1981     0318                     	;# 
  1982     0319                     	;# 
  1983     031A                     	;# 
  1984     0394                     	;# 
  1985     0395                     	;# 
  1986     0396                     	;# 
  1987     039A                     	;# 
  1988     039C                     	;# 
  1989     039D                     	;# 
  1990     039E                     	;# 
  1991     039F                     	;# 
  1992     0415                     	;# 
  1993     0416                     	;# 
  1994     0417                     	;# 
  1995     041C                     	;# 
  1996     041D                     	;# 
  1997     041E                     	;# 
  1998     0FE4                     	;# 
  1999     0FE5                     	;# 
  2000     0FE6                     	;# 
  2001     0FE7                     	;# 
  2002     0FE8                     	;# 
  2003     0FE9                     	;# 
  2004     0FEA                     	;# 
  2005     0FEB                     	;# 
  2006     0FED                     	;# 
  2007     0FEE                     	;# 
  2008     0FEF                     	;# 
  2009     0000                     	;# 
  2010     0001                     	;# 
  2011     0002                     	;# 
  2012     0003                     	;# 
  2013     0004                     	;# 
  2014     0005                     	;# 
  2015     0006                     	;# 
  2016     0007                     	;# 
  2017     0008                     	;# 
  2018     0009                     	;# 
  2019     000A                     	;# 
  2020     000B                     	;# 
  2021     000C                     	;# 
  2022     000D                     	;# 
  2023     0011                     	;# 
  2024     0012                     	;# 
  2025     0013                     	;# 
  2026     0014                     	;# 
  2027     0015                     	;# 
  2028     0016                     	;# 
  2029     0016                     	;# 
  2030     0017                     	;# 
  2031     0018                     	;# 
  2032     0019                     	;# 
  2033     001A                     	;# 
  2034     001B                     	;# 
  2035     001C                     	;# 
  2036     001E                     	;# 
  2037     001F                     	;# 
  2038     008C                     	;# 
  2039     008D                     	;# 
  2040     0091                     	;# 
  2041     0092                     	;# 
  2042     0093                     	;# 
  2043     0094                     	;# 
  2044     0095                     	;# 
  2045     0096                     	;# 
  2046     0097                     	;# 
  2047     0098                     	;# 
  2048     0099                     	;# 
  2049     009A                     	;# 
  2050     009B                     	;# 
  2051     009B                     	;# 
  2052     009C                     	;# 
  2053     009D                     	;# 
  2054     009E                     	;# 
  2055     010C                     	;# 
  2056     010D                     	;# 
  2057     0111                     	;# 
  2058     0112                     	;# 
  2059     0113                     	;# 
  2060     0114                     	;# 
  2061     0115                     	;# 
  2062     0116                     	;# 
  2063     0117                     	;# 
  2064     0118                     	;# 
  2065     0119                     	;# 
  2066     011A                     	;# 
  2067     011B                     	;# 
  2068     011D                     	;# 
  2069     011E                     	;# 
  2070     018C                     	;# 
  2071     018D                     	;# 
  2072     0191                     	;# 
  2073     0191                     	;# 
  2074     0192                     	;# 
  2075     0193                     	;# 
  2076     0193                     	;# 
  2077     0193                     	;# 
  2078     0194                     	;# 
  2079     0195                     	;# 
  2080     0196                     	;# 
  2081     0199                     	;# 
  2082     019A                     	;# 
  2083     019B                     	;# 
  2084     019B                     	;# 
  2085     019B                     	;# 
  2086     019B                     	;# 
  2087     019C                     	;# 
  2088     019C                     	;# 
  2089     019D                     	;# 
  2090     019E                     	;# 
  2091     019F                     	;# 
  2092     020C                     	;# 
  2093     020D                     	;# 
  2094     0211                     	;# 
  2095     0211                     	;# 
  2096     0212                     	;# 
  2097     0212                     	;# 
  2098     0213                     	;# 
  2099     0213                     	;# 
  2100     0214                     	;# 
  2101     0214                     	;# 
  2102     0215                     	;# 
  2103     0215                     	;# 
  2104     0215                     	;# 
  2105     0216                     	;# 
  2106     0216                     	;# 
  2107     0217                     	;# 
  2108     0217                     	;# 
  2109     0219                     	;# 
  2110     021A                     	;# 
  2111     021B                     	;# 
  2112     021C                     	;# 
  2113     021D                     	;# 
  2114     021E                     	;# 
  2115     021F                     	;# 
  2116     0291                     	;# 
  2117     0291                     	;# 
  2118     0292                     	;# 
  2119     0293                     	;# 
  2120     0294                     	;# 
  2121     0295                     	;# 
  2122     0295                     	;# 
  2123     0296                     	;# 
  2124     0298                     	;# 
  2125     0298                     	;# 
  2126     0299                     	;# 
  2127     029A                     	;# 
  2128     029B                     	;# 
  2129     029C                     	;# 
  2130     029C                     	;# 
  2131     029D                     	;# 
  2132     029E                     	;# 
  2133     029E                     	;# 
  2134     0311                     	;# 
  2135     0311                     	;# 
  2136     0312                     	;# 
  2137     0313                     	;# 
  2138     0318                     	;# 
  2139     0318                     	;# 
  2140     0319                     	;# 
  2141     031A                     	;# 
  2142     0394                     	;# 
  2143     0395                     	;# 
  2144     0396                     	;# 
  2145     039A                     	;# 
  2146     039C                     	;# 
  2147     039D                     	;# 
  2148     039E                     	;# 
  2149     039F                     	;# 
  2150     0415                     	;# 
  2151     0416                     	;# 
  2152     0417                     	;# 
  2153     041C                     	;# 
  2154     041D                     	;# 
  2155     041E                     	;# 
  2156     0FE4                     	;# 
  2157     0FE5                     	;# 
  2158     0FE6                     	;# 
  2159     0FE7                     	;# 
  2160     0FE8                     	;# 
  2161     0FE9                     	;# 
  2162     0FEA                     	;# 
  2163     0FEB                     	;# 
  2164     0FED                     	;# 
  2165     0FEE                     	;# 
  2166     0FEF                     	;# 
  2167     0000                     	;# 
  2168     0001                     	;# 
  2169     0002                     	;# 
  2170     0003                     	;# 
  2171     0004                     	;# 
  2172     0005                     	;# 
  2173     0006                     	;# 
  2174     0007                     	;# 
  2175     0008                     	;# 
  2176     0009                     	;# 
  2177     000A                     	;# 
  2178     000B                     	;# 
  2179     000C                     	;# 
  2180     000D                     	;# 
  2181     0011                     	;# 
  2182     0012                     	;# 
  2183     0013                     	;# 
  2184     0014                     	;# 
  2185     0015                     	;# 
  2186     0016                     	;# 
  2187     0016                     	;# 
  2188     0017                     	;# 
  2189     0018                     	;# 
  2190     0019                     	;# 
  2191     001A                     	;# 
  2192     001B                     	;# 
  2193     001C                     	;# 
  2194     001E                     	;# 
  2195     001F                     	;# 
  2196     008C                     	;# 
  2197     008D                     	;# 
  2198     0091                     	;# 
  2199     0092                     	;# 
  2200     0093                     	;# 
  2201     0094                     	;# 
  2202     0095                     	;# 
  2203     0096                     	;# 
  2204     0097                     	;# 
  2205     0098                     	;# 
  2206     0099                     	;# 
  2207     009A                     	;# 
  2208     009B                     	;# 
  2209     009B                     	;# 
  2210     009C                     	;# 
  2211     009D                     	;# 
  2212     009E                     	;# 
  2213     010C                     	;# 
  2214     010D                     	;# 
  2215     0111                     	;# 
  2216     0112                     	;# 
  2217     0113                     	;# 
  2218     0114                     	;# 
  2219     0115                     	;# 
  2220     0116                     	;# 
  2221     0117                     	;# 
  2222     0118                     	;# 
  2223     0119                     	;# 
  2224     011A                     	;# 
  2225     011B                     	;# 
  2226     011D                     	;# 
  2227     011E                     	;# 
  2228     018C                     	;# 
  2229     018D                     	;# 
  2230     0191                     	;# 
  2231     0191                     	;# 
  2232     0192                     	;# 
  2233     0193                     	;# 
  2234     0193                     	;# 
  2235     0193                     	;# 
  2236     0194                     	;# 
  2237     0195                     	;# 
  2238     0196                     	;# 
  2239     0199                     	;# 
  2240     019A                     	;# 
  2241     019B                     	;# 
  2242     019B                     	;# 
  2243     019B                     	;# 
  2244     019B                     	;# 
  2245     019C                     	;# 
  2246     019C                     	;# 
  2247     019D                     	;# 
  2248     019E                     	;# 
  2249     019F                     	;# 
  2250     020C                     	;# 
  2251     020D                     	;# 
  2252     0211                     	;# 
  2253     0211                     	;# 
  2254     0212                     	;# 
  2255     0212                     	;# 
  2256     0213                     	;# 
  2257     0213                     	;# 
  2258     0214                     	;# 
  2259     0214                     	;# 
  2260     0215                     	;# 
  2261     0215                     	;# 
  2262     0215                     	;# 
  2263     0216                     	;# 
  2264     0216                     	;# 
  2265     0217                     	;# 
  2266     0217                     	;# 
  2267     0219                     	;# 
  2268     021A                     	;# 
  2269     021B                     	;# 
  2270     021C                     	;# 
  2271     021D                     	;# 
  2272     021E                     	;# 
  2273     021F                     	;# 
  2274     0291                     	;# 
  2275     0291                     	;# 
  2276     0292                     	;# 
  2277     0293                     	;# 
  2278     0294                     	;# 
  2279     0295                     	;# 
  2280     0295                     	;# 
  2281     0296                     	;# 
  2282     0298                     	;# 
  2283     0298                     	;# 
  2284     0299                     	;# 
  2285     029A                     	;# 
  2286     029B                     	;# 
  2287     029C                     	;# 
  2288     029C                     	;# 
  2289     029D                     	;# 
  2290     029E                     	;# 
  2291     029E                     	;# 
  2292     0311                     	;# 
  2293     0311                     	;# 
  2294     0312                     	;# 
  2295     0313                     	;# 
  2296     0318                     	;# 
  2297     0318                     	;# 
  2298     0319                     	;# 
  2299     031A                     	;# 
  2300     0394                     	;# 
  2301     0395                     	;# 
  2302     0396                     	;# 
  2303     039A                     	;# 
  2304     039C                     	;# 
  2305     039D                     	;# 
  2306     039E                     	;# 
  2307     039F                     	;# 
  2308     0415                     	;# 
  2309     0416                     	;# 
  2310     0417                     	;# 
  2311     041C                     	;# 
  2312     041D                     	;# 
  2313     041E                     	;# 
  2314     0FE4                     	;# 
  2315     0FE5                     	;# 
  2316     0FE6                     	;# 
  2317     0FE7                     	;# 
  2318     0FE8                     	;# 
  2319     0FE9                     	;# 
  2320     0FEA                     	;# 
  2321     0FEB                     	;# 
  2322     0FED                     	;# 
  2323     0FEE                     	;# 
  2324     0FEF                     	;# 
  2325     0000                     	;# 
  2326     0001                     	;# 
  2327     0002                     	;# 
  2328     0003                     	;# 
  2329     0004                     	;# 
  2330     0005                     	;# 
  2331     0006                     	;# 
  2332     0007                     	;# 
  2333     0008                     	;# 
  2334     0009                     	;# 
  2335     000A                     	;# 
  2336     000B                     	;# 
  2337     000C                     	;# 
  2338     000D                     	;# 
  2339     0011                     	;# 
  2340     0012                     	;# 
  2341     0013                     	;# 
  2342     0014                     	;# 
  2343     0015                     	;# 
  2344     0016                     	;# 
  2345     0016                     	;# 
  2346     0017                     	;# 
  2347     0018                     	;# 
  2348     0019                     	;# 
  2349     001A                     	;# 
  2350     001B                     	;# 
  2351     001C                     	;# 
  2352     001E                     	;# 
  2353     001F                     	;# 
  2354     008C                     	;# 
  2355     008D                     	;# 
  2356     0091                     	;# 
  2357     0092                     	;# 
  2358     0093                     	;# 
  2359     0094                     	;# 
  2360     0095                     	;# 
  2361     0096                     	;# 
  2362     0097                     	;# 
  2363     0098                     	;# 
  2364     0099                     	;# 
  2365     009A                     	;# 
  2366     009B                     	;# 
  2367     009B                     	;# 
  2368     009C                     	;# 
  2369     009D                     	;# 
  2370     009E                     	;# 
  2371     010C                     	;# 
  2372     010D                     	;# 
  2373     0111                     	;# 
  2374     0112                     	;# 
  2375     0113                     	;# 
  2376     0114                     	;# 
  2377     0115                     	;# 
  2378     0116                     	;# 
  2379     0117                     	;# 
  2380     0118                     	;# 
  2381     0119                     	;# 
  2382     011A                     	;# 
  2383     011B                     	;# 
  2384     011D                     	;# 
  2385     011E                     	;# 
  2386     018C                     	;# 
  2387     018D                     	;# 
  2388     0191                     	;# 
  2389     0191                     	;# 
  2390     0192                     	;# 
  2391     0193                     	;# 
  2392     0193                     	;# 
  2393     0193                     	;# 
  2394     0194                     	;# 
  2395     0195                     	;# 
  2396     0196                     	;# 
  2397     0199                     	;# 
  2398     019A                     	;# 
  2399     019B                     	;# 
  2400     019B                     	;# 
  2401     019B                     	;# 
  2402     019B                     	;# 
  2403     019C                     	;# 
  2404     019C                     	;# 
  2405     019D                     	;# 
  2406     019E                     	;# 
  2407     019F                     	;# 
  2408     020C                     	;# 
  2409     020D                     	;# 
  2410     0211                     	;# 
  2411     0211                     	;# 
  2412     0212                     	;# 
  2413     0212                     	;# 
  2414     0213                     	;# 
  2415     0213                     	;# 
  2416     0214                     	;# 
  2417     0214                     	;# 
  2418     0215                     	;# 
  2419     0215                     	;# 
  2420     0215                     	;# 
  2421     0216                     	;# 
  2422     0216                     	;# 
  2423     0217                     	;# 
  2424     0217                     	;# 
  2425     0219                     	;# 
  2426     021A                     	;# 
  2427     021B                     	;# 
  2428     021C                     	;# 
  2429     021D                     	;# 
  2430     021E                     	;# 
  2431     021F                     	;# 
  2432     0291                     	;# 
  2433     0291                     	;# 
  2434     0292                     	;# 
  2435     0293                     	;# 
  2436     0294                     	;# 
  2437     0295                     	;# 
  2438     0295                     	;# 
  2439     0296                     	;# 
  2440     0298                     	;# 
  2441     0298                     	;# 
  2442     0299                     	;# 
  2443     029A                     	;# 
  2444     029B                     	;# 
  2445     029C                     	;# 
  2446     029C                     	;# 
  2447     029D                     	;# 
  2448     029E                     	;# 
  2449     029E                     	;# 
  2450     0311                     	;# 
  2451     0311                     	;# 
  2452     0312                     	;# 
  2453     0313                     	;# 
  2454     0318                     	;# 
  2455     0318                     	;# 
  2456     0319                     	;# 
  2457     031A                     	;# 
  2458     0394                     	;# 
  2459     0395                     	;# 
  2460     0396                     	;# 
  2461     039A                     	;# 
  2462     039C                     	;# 
  2463     039D                     	;# 
  2464     039E                     	;# 
  2465     039F                     	;# 
  2466     0415                     	;# 
  2467     0416                     	;# 
  2468     0417                     	;# 
  2469     041C                     	;# 
  2470     041D                     	;# 
  2471     041E                     	;# 
  2472     0FE4                     	;# 
  2473     0FE5                     	;# 
  2474     0FE6                     	;# 
  2475     0FE7                     	;# 
  2476     0FE8                     	;# 
  2477     0FE9                     	;# 
  2478     0FEA                     	;# 
  2479     0FEB                     	;# 
  2480     0FED                     	;# 
  2481     0FEE                     	;# 
  2482     0FEF                     	;# 
  2483     0000                     	;# 
  2484     0001                     	;# 
  2485     0002                     	;# 
  2486     0003                     	;# 
  2487     0004                     	;# 
  2488     0005                     	;# 
  2489     0006                     	;# 
  2490     0007                     	;# 
  2491     0008                     	;# 
  2492     0009                     	;# 
  2493     000A                     	;# 
  2494     000B                     	;# 
  2495     000C                     	;# 
  2496     000D                     	;# 
  2497     0011                     	;# 
  2498     0012                     	;# 
  2499     0013                     	;# 
  2500     0014                     	;# 
  2501     0015                     	;# 
  2502     0016                     	;# 
  2503     0016                     	;# 
  2504     0017                     	;# 
  2505     0018                     	;# 
  2506     0019                     	;# 
  2507     001A                     	;# 
  2508     001B                     	;# 
  2509     001C                     	;# 
  2510     001E                     	;# 
  2511     001F                     	;# 
  2512     008C                     	;# 
  2513     008D                     	;# 
  2514     0091                     	;# 
  2515     0092                     	;# 
  2516     0093                     	;# 
  2517     0094                     	;# 
  2518     0095                     	;# 
  2519     0096                     	;# 
  2520     0097                     	;# 
  2521     0098                     	;# 
  2522     0099                     	;# 
  2523     009A                     	;# 
  2524     009B                     	;# 
  2525     009B                     	;# 
  2526     009C                     	;# 
  2527     009D                     	;# 
  2528     009E                     	;# 
  2529     010C                     	;# 
  2530     010D                     	;# 
  2531     0111                     	;# 
  2532     0112                     	;# 
  2533     0113                     	;# 
  2534     0114                     	;# 
  2535     0115                     	;# 
  2536     0116                     	;# 
  2537     0117                     	;# 
  2538     0118                     	;# 
  2539     0119                     	;# 
  2540     011A                     	;# 
  2541     011B                     	;# 
  2542     011D                     	;# 
  2543     011E                     	;# 
  2544     018C                     	;# 
  2545     018D                     	;# 
  2546     0191                     	;# 
  2547     0191                     	;# 
  2548     0192                     	;# 
  2549     0193                     	;# 
  2550     0193                     	;# 
  2551     0193                     	;# 
  2552     0194                     	;# 
  2553     0195                     	;# 
  2554     0196                     	;# 
  2555     0199                     	;# 
  2556     019A                     	;# 
  2557     019B                     	;# 
  2558     019B                     	;# 
  2559     019B                     	;# 
  2560     019B                     	;# 
  2561     019C                     	;# 
  2562     019C                     	;# 
  2563     019D                     	;# 
  2564     019E                     	;# 
  2565     019F                     	;# 
  2566     020C                     	;# 
  2567     020D                     	;# 
  2568     0211                     	;# 
  2569     0211                     	;# 
  2570     0212                     	;# 
  2571     0212                     	;# 
  2572     0213                     	;# 
  2573     0213                     	;# 
  2574     0214                     	;# 
  2575     0214                     	;# 
  2576     0215                     	;# 
  2577     0215                     	;# 
  2578     0215                     	;# 
  2579     0216                     	;# 
  2580     0216                     	;# 
  2581     0217                     	;# 
  2582     0217                     	;# 
  2583     0219                     	;# 
  2584     021A                     	;# 
  2585     021B                     	;# 
  2586     021C                     	;# 
  2587     021D                     	;# 
  2588     021E                     	;# 
  2589     021F                     	;# 
  2590     0291                     	;# 
  2591     0291                     	;# 
  2592     0292                     	;# 
  2593     0293                     	;# 
  2594     0294                     	;# 
  2595     0295                     	;# 
  2596     0295                     	;# 
  2597     0296                     	;# 
  2598     0298                     	;# 
  2599     0298                     	;# 
  2600     0299                     	;# 
  2601     029A                     	;# 
  2602     029B                     	;# 
  2603     029C                     	;# 
  2604     029C                     	;# 
  2605     029D                     	;# 
  2606     029E                     	;# 
  2607     029E                     	;# 
  2608     0311                     	;# 
  2609     0311                     	;# 
  2610     0312                     	;# 
  2611     0313                     	;# 
  2612     0318                     	;# 
  2613     0318                     	;# 
  2614     0319                     	;# 
  2615     031A                     	;# 
  2616     0394                     	;# 
  2617     0395                     	;# 
  2618     0396                     	;# 
  2619     039A                     	;# 
  2620     039C                     	;# 
  2621     039D                     	;# 
  2622     039E                     	;# 
  2623     039F                     	;# 
  2624     0415                     	;# 
  2625     0416                     	;# 
  2626     0417                     	;# 
  2627     041C                     	;# 
  2628     041D                     	;# 
  2629     041E                     	;# 
  2630     0FE4                     	;# 
  2631     0FE5                     	;# 
  2632     0FE6                     	;# 
  2633     0FE7                     	;# 
  2634     0FE8                     	;# 
  2635     0FE9                     	;# 
  2636     0FEA                     	;# 
  2637     0FEB                     	;# 
  2638     0FED                     	;# 
  2639     0FEE                     	;# 
  2640     0FEF                     	;# 
  2641                           
  2642 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  2643     0000                     
  2644 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  2645     0000                     
  2646 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  2647     0000                     
  2648                           	psect	idataBANK0
  2649     0003                     __pidataBANK0:
  2650                           
  2651                           ;initializer for _first_read
  2652     0003  3401               	retlw	1
  2653                           
  2654                           	psect	idataBANK2
  2655     0C35                     __pidataBANK2:
  2656                           
  2657                           ;initializer for _timecontrol
  2658     0C35  3404               	retlw	4
  2659     0C36  3400               	retlw	0
  2660     0C37  3400               	retlw	0
  2661                           
  2662                           ;initializer for _kdp
  2663     0C38  3405               	retlw	5
  2664     0C39  3400               	retlw	0
  2665     0C3A  3400               	retlw	0
  2666                           
  2667                           ;initializer for _kip
  2668     0C3B  3496               	retlw	150
  2669     0C3C  3400               	retlw	0
  2670     0C3D  3400               	retlw	0
  2671                           
  2672                           ;initializer for _kpp
  2673     0C3E  3436               	retlw	54
  2674     0C3F  3401               	retlw	1
  2675     0C40  3400               	retlw	0
  2676                           
  2677                           ;initializer for _kif
  2678     0C41  3446               	retlw	70
  2679     0C42  3400               	retlw	0
  2680     0C43  3400               	retlw	0
  2681                           
  2682                           ;initializer for _kpf
  2683     0C44  34C8               	retlw	200
  2684     0C45  3400               	retlw	0
  2685     0C46  3400               	retlw	0
  2686                           
  2687                           	psect	stringtext1
  2688     0455                     __pstringtext1:
  2689     0455                     _lookupTable:
  2690     0455  348D               	retlw	141
  2691     0456  34B3               	retlw	179
  2692     0457  3429               	retlw	41
  2693     0458  343D               	retlw	61
  2694     0459  343E               	retlw	62
  2695     045A  3403               	retlw	3
  2696     045B  342A               	retlw	42
  2697     045C  343D               	retlw	61
  2698     045D  34F0               	retlw	240
  2699     045E  3452               	retlw	82
  2700     045F  342A               	retlw	42
  2701     0460  343D               	retlw	61
  2702     0461  3494               	retlw	148
  2703     0462  34A1               	retlw	161
  2704     0463  342A               	retlw	42
  2705     0464  343D               	retlw	61
  2706     0465  3445               	retlw	69
  2707     0466  34F1               	retlw	241
  2708     0467  342A               	retlw	42
  2709     0468  343D               	retlw	61
  2710     0469  34EA               	retlw	234
  2711     046A  343F               	retlw	63
  2712     046B  342B               	retlw	43
  2713     046C  343D               	retlw	61
  2714     046D  348F               	retlw	143
  2715     046E  348E               	retlw	142
  2716     046F  342B               	retlw	43
  2717     0470  343D               	retlw	61
  2718     0471  3433               	retlw	51
  2719     0472  34DD               	retlw	221
  2720     0473  342B               	retlw	43
  2721     0474  343D               	retlw	61
  2722     0475  34D8               	retlw	216
  2723     0476  342B               	retlw	43
  2724     0477  342C               	retlw	44
  2725     0478  343D               	retlw	61
  2726     0479  3470               	retlw	112
  2727     047A  3479               	retlw	121
  2728     047B  342C               	retlw	44
  2729     047C  343D               	retlw	61
  2730     047D  3415               	retlw	21
  2731     047E  34C8               	retlw	200
  2732     047F  342C               	retlw	44
  2733     0480  343D               	retlw	61
  2734     0481  34AD               	retlw	173
  2735     0482  3415               	retlw	21
  2736     0483  342D               	retlw	45
  2737     0484  343D               	retlw	61
  2738     0485  3452               	retlw	82
  2739     0486  3464               	retlw	100
  2740     0487  342D               	retlw	45
  2741     0488  343D               	retlw	61
  2742     0489  34EA               	retlw	234
  2743     048A  34B1               	retlw	177
  2744     048B  342D               	retlw	45
  2745     048C  343D               	retlw	61
  2746     048D  3482               	retlw	130
  2747     048E  34FF               	retlw	255
  2748     048F  342D               	retlw	45
  2749     0490  343D               	retlw	61
  2750     0491  341A               	retlw	26
  2751     0492  344D               	retlw	77
  2752     0493  342E               	retlw	46
  2753     0494  343D               	retlw	61
  2754     0495  34A6               	retlw	166
  2755     0496  3499               	retlw	153
  2756     0497  342E               	retlw	46
  2757     0498  343D               	retlw	61
  2758     0499  343E               	retlw	62
  2759     049A  34E7               	retlw	231
  2760     049B  342E               	retlw	46
  2761     049C  343D               	retlw	61
  2762     049D  34D7               	retlw	215
  2763     049E  3434               	retlw	52
  2764     049F  342F               	retlw	47
  2765     04A0  343D               	retlw	61
  2766     04A1  3462               	retlw	98
  2767     04A2  3481               	retlw	129
  2768     04A3  342F               	retlw	47
  2769     04A4  343D               	retlw	61
  2770     04A5  34EE               	retlw	238
  2771     04A6  34CD               	retlw	205
  2772     04A7  342F               	retlw	47
  2773     04A8  343D               	retlw	61
  2774     04A9  347A               	retlw	122
  2775     04AA  341A               	retlw	26
  2776     04AB  3430               	retlw	48
  2777     04AC  343D               	retlw	61
  2778     04AD  3406               	retlw	6
  2779     04AE  3467               	retlw	103
  2780     04AF  3430               	retlw	48
  2781     04B0  343D               	retlw	61
  2782     04B1  3492               	retlw	146
  2783     04B2  34B3               	retlw	179
  2784     04B3  3430               	retlw	48
  2785     04B4  343D               	retlw	61
  2786     04B5  341D               	retlw	29
  2787     04B6  3400               	retlw	0
  2788     04B7  3431               	retlw	49
  2789     04B8  343D               	retlw	61
  2790     04B9  34A9               	retlw	169
  2791     04BA  344C               	retlw	76
  2792     04BB  3431               	retlw	49
  2793     04BC  343D               	retlw	61
  2794     04BD  3429               	retlw	41
  2795     04BE  3498               	retlw	152
  2796     04BF  3431               	retlw	49
  2797     04C0  343D               	retlw	61
  2798     04C1  34B4               	retlw	180
  2799     04C2  34E4               	retlw	228
  2800     04C3  3431               	retlw	49
  2801     04C4  343D               	retlw	61
  2802     04C5  3434               	retlw	52
  2803     04C6  3430               	retlw	48
  2804     04C7  3432               	retlw	50
  2805     04C8  343D               	retlw	61
  2806     04C9  34B3               	retlw	179
  2807     04CA  347B               	retlw	123
  2808     04CB  3432               	retlw	50
  2809     04CC  343D               	retlw	61
  2810     04CD  3432               	retlw	50
  2811     04CE  34C7               	retlw	199
  2812     04CF  3432               	retlw	50
  2813     04D0  343D               	retlw	61
  2814     04D1  34B2               	retlw	178
  2815     04D2  3412               	retlw	18
  2816     04D3  3433               	retlw	51
  2817     04D4  343D               	retlw	61
  2818     04D5  3431               	retlw	49
  2819     04D6  345E               	retlw	94
  2820     04D7  3433               	retlw	51
  2821     04D8  343D               	retlw	61
  2822     04D9  34B0               	retlw	176
  2823     04DA  34A9               	retlw	169
  2824     04DB  3433               	retlw	51
  2825     04DC  343D               	retlw	61
  2826     04DD  3423               	retlw	35
  2827     04DE  34F4               	retlw	244
  2828     04DF  3433               	retlw	51
  2829     04E0  343D               	retlw	61
  2830     04E1  34A3               	retlw	163
  2831     04E2  343F               	retlw	63
  2832     04E3  3434               	retlw	52
  2833     04E4  343D               	retlw	61
  2834     04E5  3416               	retlw	22
  2835     04E6  348A               	retlw	138
  2836     04E7  3434               	retlw	52
  2837     04E8  343D               	retlw	61
  2838     04E9  3489               	retlw	137
  2839     04EA  34D4               	retlw	212
  2840     04EB  3434               	retlw	52
  2841     04EC  343D               	retlw	61
  2842     04ED  34FB               	retlw	251
  2843     04EE  341E               	retlw	30
  2844     04EF  3435               	retlw	53
  2845     04F0  343D               	retlw	61
  2846     04F1  346E               	retlw	110
  2847     04F2  3469               	retlw	105
  2848     04F3  3435               	retlw	53
  2849     04F4  343D               	retlw	61
  2850     04F5  34E1               	retlw	225
  2851     04F6  34B3               	retlw	179
  2852     04F7  3435               	retlw	53
  2853     04F8  343D               	retlw	61
  2854     04F9  3454               	retlw	84
  2855     04FA  34FE               	retlw	254
  2856     04FB  3435               	retlw	53
  2857     04FC  343D               	retlw	61
  2858     04FD  34C7               	retlw	199
  2859     04FE  3448               	retlw	72
  2860     04FF  3436               	retlw	54
  2861     0500  343D               	retlw	61
  2862     0501  342E               	retlw	46
  2863     0502  3492               	retlw	146
  2864     0503  3436               	retlw	54
  2865     0504  343D               	retlw	61
  2866     0505  34A0               	retlw	160
  2867     0506  34DC               	retlw	220
  2868     0507  3436               	retlw	54
  2869     0508  343D               	retlw	61
  2870     0509  3407               	retlw	7
  2871     050A  3426               	retlw	38
  2872     050B  3437               	retlw	55
  2873     050C  343D               	retlw	61
  2874     050D  346D               	retlw	109
  2875     050E  346F               	retlw	111
  2876     050F  3437               	retlw	55
  2877     0510  343D               	retlw	61
  2878     0511  34D4               	retlw	212
  2879     0512  34B8               	retlw	184
  2880     0513  3437               	retlw	55
  2881     0514  343D               	retlw	61
  2882     0515  343A               	retlw	58
  2883     0516  3402               	retlw	2
  2884     0517  3438               	retlw	56
  2885     0518  343D               	retlw	61
  2886     0519  34A1               	retlw	161
  2887     051A  344B               	retlw	75
  2888     051B  3438               	retlw	56
  2889     051C  343D               	retlw	61
  2890     051D  3407               	retlw	7
  2891     051E  3495               	retlw	149
  2892     051F  3438               	retlw	56
  2893     0520  343D               	retlw	61
  2894     0521                     __end_of_lookupTable:
  2895                           
  2896                           	psect	nvBANK0
  2897     006C                     __pnvBANK0:
  2898     006C                     _TMR1_GateInterruptHandler:
  2899     006C                     	ds	2
  2900                           
  2901                           	psect	nvBANK2
  2902     0132                     __pnvBANK2:
  2903     0132                     _EUSART_ErrorHandler:
  2904     0132                     	ds	2
  2905     0134                     _EUSART_OverrunErrorHandler:
  2906     0134                     	ds	2
  2907     0136                     _EUSART_FramingErrorHandler:
  2908     0136                     	ds	2
  2909     0018                     _T1CONbits	set	24
  2910     0018                     _T1CON	set	24
  2911     0016                     _TMR1L	set	22
  2912     0017                     _TMR1H	set	23
  2913     0019                     _T1GCON	set	25
  2914     0015                     _TMR0	set	21
  2915     0013                     _PIR3bits	set	19
  2916     001C                     _T2CON	set	28
  2917     0011                     _PIR1bits	set	17
  2918     001A                     _TMR2	set	26
  2919     001B                     _PR2	set	27
  2920     000B                     _INTCONbits	set	11
  2921     009D                     _ADCON0bits	set	157
  2922     009D                     _ADCON0	set	157
  2923     009C                     _ADRESH	set	156
  2924     009B                     _ADRESL	set	155
  2925     009E                     _ADCON1	set	158
  2926     0095                     _OPTION_REG	set	149
  2927     0091                     _PIE1bits	set	145
  2928     0095                     _OPTION_REGbits	set	149
  2929     008D                     _TRISB	set	141
  2930     008C                     _TRISA	set	140
  2931     0097                     _WDTCON	set	151
  2932     0098                     _OSCTUNE	set	152
  2933     0099                     _OSCCON	set	153
  2934     010C                     _LATAbits	set	268
  2935     0115                     _CMOUTbits	set	277
  2936     0112                     _CM1CON1	set	274
  2937     0111                     _CM1CON0	set	273
  2938     0119                     _DACCON1	set	281
  2939     0118                     _DACCON0	set	280
  2940     0117                     _FVRCON	set	279
  2941     011E                     _APFCON1	set	286
  2942     011D                     _APFCON0	set	285
  2943     010D                     _LATB	set	269
  2944     010C                     _LATA	set	268
  2945     0116                     _BORCON	set	278
  2946     019A                     _TXREG	set	410
  2947     0199                     _RCREG	set	409
  2948     019D                     _RCSTAbits	set	413
  2949     019C                     _SPBRGH	set	412
  2950     019B                     _SPBRGL	set	411
  2951     019E                     _TXSTA	set	414
  2952     019D                     _RCSTA	set	413
  2953     019F                     _BAUDCON	set	415
  2954     018C                     _ANSELA	set	396
  2955     018D                     _ANSELB	set	397
  2956     020C                     _WPUA	set	524
  2957     020D                     _WPUB	set	525
  2958     029E                     _CCPTMRS0bits	set	670
  2959     0291                     _CCPR1L	set	657
  2960     0292                     _CCPR1H	set	658
  2961     0296                     _PSTR1CON	set	662
  2962     0294                     _PWM1CON	set	660
  2963     0295                     _ECCP1AS	set	661
  2964     0293                     _CCP1CON	set	659
  2965     041E                     _T6CON	set	1054
  2966     041C                     _TMR6	set	1052
  2967     041D                     _PR6	set	1053
  2968     0417                     _T4CONbits	set	1047
  2969     0417                     _T4CON	set	1047
  2970     0415                     _TMR4	set	1045
  2971     0416                     _PR4	set	1046
  2972                           
  2973                           	psect	cinit
  2974     001B                     start_initialization:	
  2975                           ; #config settings
  2976                           
  2977     001B                     __initialization:
  2978                           
  2979                           ; Initialize objects allocated to BANK0
  2980     001B  3180  2003  3180   	fcall	__pidataBANK0	;fetch initializer
  2981     001E  00EE               	movwf	__pdataBANK0& (0+127)
  2982                           
  2983                           ; Initialize objects allocated to BANK2
  2984     001F  3035               	movlw	low __pidataBANK2
  2985     0020  0084               	movwf	4
  2986     0021  308C               	movlw	(high __pidataBANK2)| (0+128)
  2987     0022  0085               	movwf	5
  2988     0023  3020               	movlw	low __pdataBANK2
  2989     0024  0086               	movwf	6
  2990     0025  3001               	movlw	high __pdataBANK2
  2991     0026  0087               	movwf	7
  2992     0027  3012               	movlw	18
  2993     0028  318B  238A  3180   	fcall	init_ram
  2994                           
  2995                           ; Clear objects allocated to BANK0
  2996     002B  3053               	movlw	low __pbssBANK0
  2997     002C  0084               	movwf	4
  2998     002D  3000               	movlw	high __pbssBANK0
  2999     002E  0085               	movwf	5
  3000     002F  3019               	movlw	25
  3001     0030  318B  2384  3180   	fcall	clear_ram0
  3002                           
  3003                           ; Clear objects allocated to BANK1
  3004     0033  30A0               	movlw	low __pbssBANK1
  3005     0034  0084               	movwf	4
  3006     0035  3000               	movlw	high __pbssBANK1
  3007     0036  0085               	movwf	5
  3008     0037  302D               	movlw	45
  3009     0038  318B  2384         	fcall	clear_ram0
  3010                           
  3011                           ; Clear objects allocated to BANK2
  3012     003A  0022               	movlb	2	; select bank2
  3013     003B  01B8               	clrf	__pbssBANK2& (0+127)
  3014     003C  01B9               	clrf	(__pbssBANK2+1)& (0+127)
  3015     003D  01BA               	clrf	(__pbssBANK2+2)& (0+127)
  3016     003E                     end_of_initialization:	
  3017                           ;End of C runtime variable initialization code
  3018                           
  3019     003E                     __end_of__initialization:
  3020     003E  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3021     003F  0020               	movlb	0
  3022     0040  3186  2EA6         	ljmp	_main	;jump to C main() function
  3023                           
  3024                           	psect	bssBANK0
  3025     0053                     __pbssBANK0:
  3026     0053                     _bufferRx:
  3027     0053                     	ds	8
  3028     005B                     _flux:
  3029     005B                     	ds	3
  3030     005E                     _errorp:
  3031     005E                     	ds	3
  3032     0061                     _tempo_voo:
  3033     0061                     	ds	2
  3034     0063                     _avg_height:
  3035     0063                     	ds	2
  3036     0065                     _sp_height:
  3037     0065                     	ds	2
  3038     0067                     _ADC_InterruptHandler:
  3039     0067                     	ds	2
  3040     0069                     _func_mode:
  3041     0069                     	ds	1
  3042     006A                     _sentido:
  3043     006A                     	ds	1
  3044     006B                     _timer0ReloadVal:
  3045     006B                     	ds	1
  3046                           
  3047                           	psect	dataBANK0
  3048     006E                     __pdataBANK0:
  3049     006E                     _first_read:
  3050     006E                     	ds	1
  3051                           
  3052                           	psect	bssBANK1
  3053     00A0                     __pbssBANK1:
  3054     00A0                     _avg_tempo_voo:
  3055     00A0                     	ds	4
  3056     00A4                     _outpre:
  3057     00A4                     	ds	3
  3058     00A7                     _outputsum:
  3059     00A7                     	ds	3
  3060     00AA                     _ballset:
  3061     00AA                     	ds	3
  3062     00AD                     _balldist:
  3063     00AD                     	ds	3
  3064     00B0                     _error:
  3065     00B0                     	ds	3
  3066     00B3                     _height:
  3067     00B3                     	ds	2
  3068     00B5                     _adc_temp:
  3069     00B5                     	ds	2
  3070     00B7                     _sp_position:
  3071     00B7                     	ds	2
  3072     00B9                     _position:
  3073     00B9                     	ds	2
  3074     00BB                     _dc:
  3075     00BB                     	ds	2
  3076     00BD                     _vRx:
  3077     00BD                     	ds	2
  3078     00BF                     _vTx:
  3079     00BF                     	ds	2
  3080     00C1                     _output:
  3081     00C1                     	ds	2
  3082     00C3                     _timer1ReloadVal:
  3083     00C3                     	ds	2
  3084     00C5                     _passo_ctrl:
  3085     00C5                     	ds	1
  3086     00C6                     _fim_curso:
  3087     00C6                     	ds	1
  3088     00C7                     _passo:
  3089     00C7                     	ds	1
  3090     00C8                     _nao_salva:
  3091     00C8                     	ds	1
  3092     00C9                     _count_Tx:
  3093     00C9                     	ds	1
  3094     00CA                     _countRx:
  3095     00CA                     	ds	1
  3096     00CB                     _controlchoice:
  3097     00CB                     	ds	1
  3098     00CC                     _eusartRxLastError:
  3099     00CC                     	ds	1
  3100                           
  3101                           	psect	bssBANK2
  3102     0138                     __pbssBANK2:
  3103     0138                     _dinput:
  3104     0138                     	ds	3
  3105                           
  3106                           	psect	dataBANK2
  3107     0120                     __pdataBANK2:
  3108     0120                     _timecontrol:
  3109     0120                     	ds	3
  3110     0123                     _kdp:
  3111     0123                     	ds	3
  3112     0126                     _kip:
  3113     0126                     	ds	3
  3114     0129                     _kpp:
  3115     0129                     	ds	3
  3116     012C                     _kif:
  3117     012C                     	ds	3
  3118     012F                     _kpf:
  3119     012F                     	ds	3
  3120                           
  3121                           	psect	inittext
  3122     0B8A                     init_ram:
  3123     0B8A  00FE               	movwf	126
  3124     0B8B                     initloop:
  3125     0B8B  0012               	moviw fsr0++
  3126     0B8C  001E               	movwi fsr1++
  3127     0B8D  0BFE               	decfsz	126,f
  3128     0B8E  2B8B               	goto	initloop
  3129     0B8F  3400               	retlw	0
  3130                           
  3131                           	psect	clrtext
  3132     0B84                     clear_ram0:	
  3133                           ;	Called with FSR0 containing the base address, and
  3134                           ;	WREG with the size to clear
  3135                           
  3136     0B84  0064               	clrwdt	;clear the watchdog before getting into this loop
  3137     0B85                     clrloop0:
  3138     0B85  0180               	clrf	0	;clear RAM location pointed to by FSR
  3139     0B86  3101               	addfsr 0,1
  3140     0B87  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3141     0B88  2B85               	goto	clrloop0	;have we reached the end yet?
  3142     0B89  3400               	retlw	0	;all done for this memory range, return
  3143                           
  3144                           	psect	cstackBANK1
  3145     00CD                     __pcstackBANK1:
  3146     00CD                     ??_PIN_MANAGER_Initialize:
  3147     00CD                     ??_OSCILLATOR_Initialize:	
  3148                           ; 1 bytes @ 0x0
  3149                           
  3150     00CD                     ??_WDT_Initialize:	
  3151                           ; 1 bytes @ 0x0
  3152                           
  3153     00CD                     ??_DAC_Initialize:	
  3154                           ; 1 bytes @ 0x0
  3155                           
  3156     00CD                     ??_FVR_Initialize:	
  3157                           ; 1 bytes @ 0x0
  3158                           
  3159     00CD                     ??_TMR4_Initialize:	
  3160                           ; 1 bytes @ 0x0
  3161                           
  3162     00CD                     ??_TMR2_Initialize:	
  3163                           ; 1 bytes @ 0x0
  3164                           
  3165     00CD                     ??_TMR0_Initialize:	
  3166                           ; 1 bytes @ 0x0
  3167                           
  3168     00CD                     ??_TMR6_Initialize:	
  3169                           ; 1 bytes @ 0x0
  3170                           
  3171     00CD                     ??_CMP1_Initialize:	
  3172                           ; 1 bytes @ 0x0
  3173                           
  3174     00CD                     ??_ADC_Initialize:	
  3175                           ; 1 bytes @ 0x0
  3176                           
  3177     00CD                     ??_EPWM1_Initialize:	
  3178                           ; 1 bytes @ 0x0
  3179                           
  3180     00CD                     ?_EUSART_SetFramingErrorHandler:	
  3181                           ; 1 bytes @ 0x0
  3182                           
  3183     00CD                     ?_EUSART_SetOverrunErrorHandler:	
  3184                           ; 1 bytes @ 0x0
  3185                           
  3186     00CD                     ?_EUSART_SetErrorHandler:	
  3187                           ; 1 bytes @ 0x0
  3188                           
  3189     00CD                     ?_TMR1_SetGateInterruptHandler:	
  3190                           ; 1 bytes @ 0x0
  3191                           
  3192     00CD                     ??_TMR4_StartTimer:	
  3193                           ; 1 bytes @ 0x0
  3194                           
  3195     00CD                     ??_TMR4_StopTimer:	
  3196                           ; 1 bytes @ 0x0
  3197                           
  3198     00CD                     ?_EPWM1_LoadDutyValue:	
  3199                           ; 1 bytes @ 0x0
  3200                           
  3201     00CD                     ??_EUSART_is_rx_ready:	
  3202                           ; 1 bytes @ 0x0
  3203                           
  3204     00CD                     ??_EUSART_Read:	
  3205                           ; 1 bytes @ 0x0
  3206                           
  3207     00CD                     ??_EUSART_Write:	
  3208                           ; 1 bytes @ 0x0
  3209                           
  3210     00CD                     ??_TMR0_ReadTimer:	
  3211                           ; 1 bytes @ 0x0
  3212                           
  3213     00CD                     ??_CMP1_GetOutputStatus:	
  3214                           ; 1 bytes @ 0x0
  3215                           
  3216     00CD                     ??_TMR6_WriteTimer:	
  3217                           ; 1 bytes @ 0x0
  3218                           
  3219     00CD                     ??_TMR6_LoadPeriodRegister:	
  3220                           ; 1 bytes @ 0x0
  3221                           
  3222     00CD                     ?_definePassoMotor:	
  3223                           ; 1 bytes @ 0x0
  3224                           
  3225     00CD                     ?_ADC_GetConversion:	
  3226                           ; 1 bytes @ 0x0
  3227                           
  3228     00CD                     ?___tmul:	
  3229                           ; 2 bytes @ 0x0
  3230                           
  3231     00CD                     ?___fltol:	
  3232                           ; 3 bytes @ 0x0
  3233                           
  3234     00CD                     EUSART_Write@txData:	
  3235                           ; 4 bytes @ 0x0
  3236                           
  3237     00CD                     TMR0_ReadTimer@readVal:	
  3238                           ; 1 bytes @ 0x0
  3239                           
  3240     00CD                     TMR6_WriteTimer@timerVal:	
  3241                           ; 1 bytes @ 0x0
  3242                           
  3243     00CD                     TMR6_LoadPeriodRegister@periodVal:	
  3244                           ; 1 bytes @ 0x0
  3245                           
  3246     00CD                     definePassoMotor@sentido:	
  3247                           ; 1 bytes @ 0x0
  3248                           
  3249     00CD                     EPWM1_LoadDutyValue@dutyValue:	
  3250                           ; 1 bytes @ 0x0
  3251                           
  3252     00CD                     EUSART_SetFramingErrorHandler@interruptHandler:	
  3253                           ; 2 bytes @ 0x0
  3254                           
  3255     00CD                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  3256                           ; 2 bytes @ 0x0
  3257                           
  3258     00CD                     EUSART_SetErrorHandler@interruptHandler:	
  3259                           ; 2 bytes @ 0x0
  3260                           
  3261     00CD                     TMR1_SetGateInterruptHandler@InterruptHandler:	
  3262                           ; 2 bytes @ 0x0
  3263                           
  3264     00CD                     ___tmul@multiplier:	
  3265                           ; 2 bytes @ 0x0
  3266                           
  3267     00CD                     ___fltol@f1:	
  3268                           ; 3 bytes @ 0x0
  3269                           
  3270                           
  3271                           ; 4 bytes @ 0x0
  3272     00CD                     	ds	1
  3273     00CE                     ??_definePassoMotor:
  3274                           
  3275                           ; 1 bytes @ 0x1
  3276     00CE                     	ds	1
  3277     00CF                     ??_TMR1_Initialize:
  3278     00CF                     ??_EUSART_Initialize:	
  3279                           ; 1 bytes @ 0x2
  3280                           
  3281     00CF                     ??_EUSART_SetFramingErrorHandler:	
  3282                           ; 1 bytes @ 0x2
  3283                           
  3284     00CF                     ??_EUSART_SetOverrunErrorHandler:	
  3285                           ; 1 bytes @ 0x2
  3286                           
  3287     00CF                     ??_EUSART_SetErrorHandler:	
  3288                           ; 1 bytes @ 0x2
  3289                           
  3290     00CF                     ??_TMR1_SetGateInterruptHandler:	
  3291                           ; 1 bytes @ 0x2
  3292                           
  3293     00CF                     ??_SYSTEM_Initialize:	
  3294                           ; 1 bytes @ 0x2
  3295                           
  3296     00CF                     ??_EPWM1_LoadDutyValue:	
  3297                           ; 1 bytes @ 0x2
  3298                           
  3299     00CF                     ??_ADC_GetConversion:	
  3300                           ; 1 bytes @ 0x2
  3301                           
  3302     00CF                     definePassoMotor@passom:	
  3303                           ; 1 bytes @ 0x2
  3304                           
  3305                           
  3306                           ; 1 bytes @ 0x2
  3307     00CF                     	ds	1
  3308     00D0                     ??_daUmPasso:
  3309     00D0                     ADC_GetConversion@channel:	
  3310                           ; 1 bytes @ 0x3
  3311                           
  3312     00D0                     daUmPasso@sentido:	
  3313                           ; 1 bytes @ 0x3
  3314                           
  3315     00D0                     ___tmul@multiplicand:	
  3316                           ; 1 bytes @ 0x3
  3317                           
  3318                           
  3319                           ; 3 bytes @ 0x3
  3320     00D0                     	ds	1
  3321     00D1                     ??_fluxpos:
  3322     00D1                     ??_setaPorta:	
  3323                           ; 1 bytes @ 0x4
  3324                           
  3325     00D1                     ??_analisa_Rx:	
  3326                           ; 1 bytes @ 0x4
  3327                           
  3328     00D1                     ??___fltol:	
  3329                           ; 1 bytes @ 0x4
  3330                           
  3331                           
  3332                           ; 1 bytes @ 0x4
  3333     00D1                     	ds	2
  3334     00D3                     ??___tmul:
  3335     00D3                     ___tmul@product:	
  3336                           ; 1 bytes @ 0x6
  3337                           
  3338                           
  3339                           ; 3 bytes @ 0x6
  3340     00D3                     	ds	2
  3341     00D5                     ___fltol@sign1:
  3342                           
  3343                           ; 1 bytes @ 0x8
  3344     00D5                     	ds	1
  3345     00D6                     ?___atdiv:
  3346     00D6                     ___fltol@exp1:	
  3347                           ; 3 bytes @ 0x9
  3348                           
  3349     00D6                     ___atdiv@divisor:	
  3350                           ; 1 bytes @ 0x9
  3351                           
  3352                           
  3353                           ; 3 bytes @ 0x9
  3354     00D6                     	ds	1
  3355     00D7                     ??_envia_Tx:
  3356                           
  3357                           ; 1 bytes @ 0xA
  3358     00D7                     	ds	2
  3359     00D9                     ___atdiv@dividend:
  3360                           
  3361                           ; 3 bytes @ 0xC
  3362     00D9                     	ds	3
  3363     00DC                     ??___atdiv:
  3364                           
  3365                           ; 1 bytes @ 0xF
  3366     00DC                     	ds	1
  3367     00DD                     ___atdiv@counter:
  3368                           
  3369                           ; 1 bytes @ 0x10
  3370     00DD                     	ds	1
  3371     00DE                     ___atdiv@sign:
  3372                           
  3373                           ; 1 bytes @ 0x11
  3374     00DE                     	ds	1
  3375     00DF                     ___atdiv@quotient:
  3376                           
  3377                           ; 3 bytes @ 0x12
  3378     00DF                     	ds	3
  3379     00E2                     ??_fluxcontrol:
  3380     00E2                     ??_pwmcontrol:	
  3381                           ; 1 bytes @ 0x15
  3382                           
  3383                           
  3384                           ; 1 bytes @ 0x15
  3385     00E2                     	ds	12
  3386     00EE                     ??_controlchoose:
  3387     00EE                     ??_main:	
  3388                           ; 1 bytes @ 0x21
  3389                           
  3390                           
  3391                           ; 1 bytes @ 0x21
  3392     00EE                     	ds	1
  3393                           
  3394                           	psect	cstackCOMMON
  3395     0070                     __pcstackCOMMON:
  3396     0070                     ?_PIN_MANAGER_Initialize:
  3397     0070                     ?_OSCILLATOR_Initialize:	
  3398                           ; 1 bytes @ 0x0
  3399                           
  3400     0070                     ?_WDT_Initialize:	
  3401                           ; 1 bytes @ 0x0
  3402                           
  3403     0070                     ?_DAC_Initialize:	
  3404                           ; 1 bytes @ 0x0
  3405                           
  3406     0070                     ?_FVR_Initialize:	
  3407                           ; 1 bytes @ 0x0
  3408                           
  3409     0070                     ?_TMR4_Initialize:	
  3410                           ; 1 bytes @ 0x0
  3411                           
  3412     0070                     ?_TMR2_Initialize:	
  3413                           ; 1 bytes @ 0x0
  3414                           
  3415     0070                     ?_TMR0_Initialize:	
  3416                           ; 1 bytes @ 0x0
  3417                           
  3418     0070                     ?_TMR6_Initialize:	
  3419                           ; 1 bytes @ 0x0
  3420                           
  3421     0070                     ?_CMP1_Initialize:	
  3422                           ; 1 bytes @ 0x0
  3423                           
  3424     0070                     ?_ADC_Initialize:	
  3425                           ; 1 bytes @ 0x0
  3426                           
  3427     0070                     ?_EPWM1_Initialize:	
  3428                           ; 1 bytes @ 0x0
  3429                           
  3430     0070                     ?_TMR1_Initialize:	
  3431                           ; 1 bytes @ 0x0
  3432                           
  3433     0070                     ?_EUSART_Initialize:	
  3434                           ; 1 bytes @ 0x0
  3435                           
  3436     0070                     ?_TMR1_GATE_ISR:	
  3437                           ; 1 bytes @ 0x0
  3438                           
  3439     0070                     ?_TMR1_DefaultGateInterruptHandler:	
  3440                           ; 1 bytes @ 0x0
  3441                           
  3442     0070                     ??_TMR1_DefaultGateInterruptHandler:	
  3443                           ; 1 bytes @ 0x0
  3444                           
  3445     0070                     ?_daUmPasso:	
  3446                           ; 1 bytes @ 0x0
  3447                           
  3448     0070                     ?_SYSTEM_Initialize:	
  3449                           ; 1 bytes @ 0x0
  3450                           
  3451     0070                     ?_PIN_MANAGER_IOC:	
  3452                           ; 1 bytes @ 0x0
  3453                           
  3454     0070                     ??_PIN_MANAGER_IOC:	
  3455                           ; 1 bytes @ 0x0
  3456                           
  3457     0070                     ?_TMR4_StartTimer:	
  3458                           ; 1 bytes @ 0x0
  3459                           
  3460     0070                     ?_TMR4_StopTimer:	
  3461                           ; 1 bytes @ 0x0
  3462                           
  3463     0070                     ?_INTERRUPT_InterruptManager:	
  3464                           ; 1 bytes @ 0x0
  3465                           
  3466     0070                     ?_EUSART_is_rx_ready:	
  3467                           ; 1 bytes @ 0x0
  3468                           
  3469     0070                     ?_EUSART_Read:	
  3470                           ; 1 bytes @ 0x0
  3471                           
  3472     0070                     ?_EUSART_Write:	
  3473                           ; 1 bytes @ 0x0
  3474                           
  3475     0070                     ?_TMR0_ReadTimer:	
  3476                           ; 1 bytes @ 0x0
  3477                           
  3478     0070                     ?_CMP1_GetOutputStatus:	
  3479                           ; 1 bytes @ 0x0
  3480                           
  3481     0070                     ?_TMR6_WriteTimer:	
  3482                           ; 1 bytes @ 0x0
  3483                           
  3484     0070                     ?_TMR6_LoadPeriodRegister:	
  3485                           ; 1 bytes @ 0x0
  3486                           
  3487     0070                     ?_TMR1_WriteTimer:	
  3488                           ; 1 bytes @ 0x0
  3489                           
  3490     0070                     ?_TMR1_Reload:	
  3491                           ; 1 bytes @ 0x0
  3492                           
  3493     0070                     ?_fluxcontrol:	
  3494                           ; 1 bytes @ 0x0
  3495                           
  3496     0070                     ?_pwmcontrol:	
  3497                           ; 1 bytes @ 0x0
  3498                           
  3499     0070                     ?_fluxpos:	
  3500                           ; 1 bytes @ 0x0
  3501                           
  3502     0070                     ?_setaPorta:	
  3503                           ; 1 bytes @ 0x0
  3504                           
  3505     0070                     ?_controlchoose:	
  3506                           ; 1 bytes @ 0x0
  3507                           
  3508     0070                     ?_analisa_Rx:	
  3509                           ; 1 bytes @ 0x0
  3510                           
  3511     0070                     ?_envia_Tx:	
  3512                           ; 1 bytes @ 0x0
  3513                           
  3514     0070                     ?_mede_height:	
  3515                           ; 1 bytes @ 0x0
  3516                           
  3517     0070                     ?_main:	
  3518                           ; 1 bytes @ 0x0
  3519                           
  3520     0070                     ?__Umul8_16:	
  3521                           ; 1 bytes @ 0x0
  3522                           
  3523     0070                     ?_TMR1_ReadTimer:	
  3524                           ; 2 bytes @ 0x0
  3525                           
  3526     0070                     ?___lwdiv:	
  3527                           ; 2 bytes @ 0x0
  3528                           
  3529     0070                     __Umul8_16@multiplicand:	
  3530                           ; 2 bytes @ 0x0
  3531                           
  3532     0070                     TMR1_WriteTimer@timerVal:	
  3533                           ; 1 bytes @ 0x0
  3534                           
  3535     0070                     ___lwdiv@divisor:	
  3536                           ; 2 bytes @ 0x0
  3537                           
  3538                           
  3539                           ; 2 bytes @ 0x0
  3540     0070                     	ds	2
  3541     0072                     ??__Umul8_16:
  3542     0072                     ??_TMR1_ReadTimer:	
  3543                           ; 1 bytes @ 0x2
  3544                           
  3545     0072                     ??_TMR1_WriteTimer:	
  3546                           ; 1 bytes @ 0x2
  3547                           
  3548     0072                     ??_TMR1_Reload:	
  3549                           ; 1 bytes @ 0x2
  3550                           
  3551     0072                     ___lwdiv@dividend:	
  3552                           ; 1 bytes @ 0x2
  3553                           
  3554                           
  3555                           ; 2 bytes @ 0x2
  3556     0072                     	ds	2
  3557     0074                     ??___lwdiv:
  3558     0074                     __Umul8_16@product:	
  3559                           ; 1 bytes @ 0x4
  3560                           
  3561                           
  3562                           ; 2 bytes @ 0x4
  3563     0074                     	ds	1
  3564     0075                     ___lwdiv@quotient:
  3565                           
  3566                           ; 2 bytes @ 0x5
  3567     0075                     	ds	1
  3568     0076                     __Umul8_16@word_mpld:
  3569                           
  3570                           ; 2 bytes @ 0x6
  3571     0076                     	ds	1
  3572     0077                     ___lwdiv@counter:
  3573     0077                     TMR1_ReadTimer@readVal:	
  3574                           ; 1 bytes @ 0x7
  3575                           
  3576                           
  3577                           ; 2 bytes @ 0x7
  3578     0077                     	ds	1
  3579     0078                     __Umul8_16@multiplier:
  3580                           
  3581                           ; 1 bytes @ 0x8
  3582     0078                     	ds	1
  3583     0079                     ??___flmul:
  3584     0079                     TMR1_ReadTimer@readValHigh:	
  3585                           ; 1 bytes @ 0x9
  3586                           
  3587                           
  3588                           ; 1 bytes @ 0x9
  3589     0079                     	ds	1
  3590     007A                     TMR1_ReadTimer@readValLow:
  3591                           
  3592                           ; 1 bytes @ 0xA
  3593     007A                     	ds	4
  3594     007E                     ??_TMR1_GATE_ISR:
  3595     007E                     ??_INTERRUPT_InterruptManager:	
  3596                           ; 1 bytes @ 0xE
  3597                           
  3598                           
  3599                           	psect	cstackBANK0
  3600     0020                     __pcstackBANK0:	
  3601                           ; 1 bytes @ 0xE
  3602                           
  3603     0020                     ?___flmul:
  3604     0020                     ___flmul@b:	
  3605                           ; 4 bytes @ 0x0
  3606                           
  3607                           
  3608                           ; 4 bytes @ 0x0
  3609     0020                     	ds	4
  3610     0024                     ___flmul@a:
  3611                           
  3612                           ; 4 bytes @ 0x4
  3613     0024                     	ds	4
  3614     0028                     ___flmul@sign:
  3615                           
  3616                           ; 1 bytes @ 0x8
  3617     0028                     	ds	1
  3618     0029                     ___flmul@aexp:
  3619                           
  3620                           ; 1 bytes @ 0x9
  3621     0029                     	ds	1
  3622     002A                     ___flmul@grs:
  3623                           
  3624                           ; 4 bytes @ 0xA
  3625     002A                     	ds	4
  3626     002E                     ___flmul@bexp:
  3627                           
  3628                           ; 1 bytes @ 0xE
  3629     002E                     	ds	1
  3630     002F                     ___flmul@prod:
  3631                           
  3632                           ; 4 bytes @ 0xF
  3633     002F                     	ds	4
  3634     0033                     ___flmul@temp:
  3635                           
  3636                           ; 2 bytes @ 0x13
  3637     0033                     	ds	2
  3638     0035                     ?i1___fltol:
  3639     0035                     i1___fltol@f1:	
  3640                           ; 4 bytes @ 0x15
  3641                           
  3642                           
  3643                           ; 4 bytes @ 0x15
  3644     0035                     	ds	4
  3645     0039                     ??i1___fltol:
  3646                           
  3647                           ; 1 bytes @ 0x19
  3648     0039                     	ds	4
  3649     003D                     i1___fltol@sign1:
  3650                           
  3651                           ; 1 bytes @ 0x1D
  3652     003D                     	ds	1
  3653     003E                     i1___fltol@exp1:
  3654                           
  3655                           ; 1 bytes @ 0x1E
  3656     003E                     	ds	1
  3657     003F                     ?___xxtofl:
  3658     003F                     ___xxtofl@val:	
  3659                           ; 4 bytes @ 0x1F
  3660                           
  3661                           
  3662                           ; 4 bytes @ 0x1F
  3663     003F                     	ds	4
  3664     0043                     ??___xxtofl:
  3665                           
  3666                           ; 1 bytes @ 0x23
  3667     0043                     	ds	4
  3668     0047                     ___xxtofl@sign:
  3669                           
  3670                           ; 1 bytes @ 0x27
  3671     0047                     	ds	1
  3672     0048                     ___xxtofl@exp:
  3673                           
  3674                           ; 1 bytes @ 0x28
  3675     0048                     	ds	1
  3676     0049                     ___xxtofl@arg:
  3677                           
  3678                           ; 4 bytes @ 0x29
  3679     0049                     	ds	4
  3680     004D                     ??_mede_height:
  3681                           
  3682                           ; 1 bytes @ 0x2D
  3683     004D                     	ds	6
  3684                           
  3685                           	psect	maintext
  3686     06A6                     __pmaintext:	
  3687 ;;
  3688 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  3689 ;;
  3690 ;; *************** function _main *****************
  3691 ;; Defined at:
  3692 ;;		line 292 in file "main.c"
  3693 ;; Parameters:    Size  Location     Type
  3694 ;;		None
  3695 ;; Auto vars:     Size  Location     Type
  3696 ;;		None
  3697 ;; Return value:  Size  Location     Type
  3698 ;;                  1    wreg      void 
  3699 ;; Registers used:
  3700 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3701 ;; Tracked objects:
  3702 ;;		On entry : B1F/0
  3703 ;;		On exit  : 1E/0
  3704 ;;		Unchanged: 0/0
  3705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3706 ;;      Params:         0       0       0       0       0       0
  3707 ;;      Locals:         0       0       0       0       0       0
  3708 ;;      Temps:          0       0       1       0       0       0
  3709 ;;      Totals:         0       0       1       0       0       0
  3710 ;;Total ram usage:        1 bytes
  3711 ;; Hardware stack levels required when called: 8
  3712 ;; This function calls:
  3713 ;;		_ADC_GetConversion
  3714 ;;		_EUSART_Read
  3715 ;;		_EUSART_is_rx_ready
  3716 ;;		_SYSTEM_Initialize
  3717 ;;		_TMR0_ReadTimer
  3718 ;;		_TMR1_SetGateInterruptHandler
  3719 ;;		_TMR4_StopTimer
  3720 ;;		_TMR6_LoadPeriodRegister
  3721 ;;		_TMR6_WriteTimer
  3722 ;;		_analisa_Rx
  3723 ;;		_controlchoose
  3724 ;;		_envia_Tx
  3725 ;;		_fluxpos
  3726 ;;		_setaPorta
  3727 ;; This function is called by:
  3728 ;;		Startup code after reset
  3729 ;; This function uses a non-reentrant model
  3730 ;;
  3731                           
  3732     06A6                     _main:	
  3733                           ;psect for function _main
  3734                           
  3735                           
  3736                           ;main.c: 295:     SYSTEM_Initialize();
  3737                           
  3738                           ;incstack = 0
  3739                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3740     06A6  3187  27CF  3186   	fcall	_SYSTEM_Initialize
  3741                           
  3742                           ;main.c: 296:     TMR1_SetGateInterruptHandler(mede_height);
  3743     06A9  30EC               	movlw	low _mede_height
  3744     06AA  00CD               	movwf	TMR1_SetGateInterruptHandler@InterruptHandler^(0+128)
  3745     06AB  3005               	movlw	high _mede_height
  3746     06AC  00CE               	movwf	(TMR1_SetGateInterruptHandler@InterruptHandler^(0+128)+1)
  3747     06AD  318B  23B8  3186   	fcall	_TMR1_SetGateInterruptHandler
  3748                           
  3749                           ;main.c: 301:     (INTCONbits.GIE = 1);
  3750     06B0  178B               	bsf	11,7	;volatile
  3751                           
  3752                           ;main.c: 304:     (INTCONbits.PEIE = 1);
  3753     06B1  170B               	bsf	11,6	;volatile
  3754                           
  3755                           ;main.c: 311:     setaPorta();
  3756     06B2  318C  24A9  3186   	fcall	_setaPorta
  3757     06B5                     l3052:
  3758                           
  3759                           ;main.c: 314:     {;main.c: 317:         if(PIR3bits.TMR4IF==1){
  3760     06B5  0020               	movlb	0	; select bank0
  3761     06B6  1C93               	btfss	19,1	;volatile
  3762     06B7  2EBF               	goto	l3060
  3763                           
  3764                           ;main.c: 318:             PIR3bits.TMR4IF=0;
  3765     06B8  1093               	bcf	19,1	;volatile
  3766                           
  3767                           ;main.c: 319:             TMR4_StopTimer();
  3768     06B9  318B  2353  3186   	fcall	_TMR4_StopTimer
  3769                           
  3770                           ;main.c: 320:             controlchoose();
  3771     06BC  318C  2423  3186   	fcall	_controlchoose
  3772     06BF                     l3060:
  3773                           
  3774                           ;main.c: 328:         if (EUSART_is_rx_ready()){
  3775     06BF  318B  2361  3186   	fcall	_EUSART_is_rx_ready
  3776     06C2  3A00               	xorlw	0
  3777     06C3  1903               	skipnz
  3778     06C4  2EFF               	goto	l3092
  3779                           
  3780                           ;main.c: 329:             TMR6_LoadPeriodRegister(0xF9);
  3781     06C5  30F9               	movlw	249
  3782     06C6  318B  2378  3186   	fcall	_TMR6_LoadPeriodRegister
  3783     06C9                     l3082:	
  3784                           ;main.c: 330:             while(countRx<8 -1){
  3785                           
  3786                           
  3787                           ;main.c: 330:             while(countRx<8 -1){
  3788     06C9  3007               	movlw	7
  3789     06CA  0021               	movlb	1	; select bank1
  3790     06CB  024A               	subwf	_countRx^(0+128),w
  3791     06CC  1803               	btfsc	3,0
  3792     06CD  2EF2               	goto	l3084
  3793                           
  3794                           ;main.c: 331:                 nao_salva = 0;
  3795     06CE  01C8               	clrf	_nao_salva^(0+128)
  3796                           
  3797                           ;main.c: 332:                 TMR6_WriteTimer(0);
  3798     06CF  3000               	movlw	0
  3799     06D0  318B  237E  3186   	fcall	_TMR6_WriteTimer
  3800                           
  3801                           ;main.c: 333:                 PIR3bits.TMR6IF = 0;
  3802     06D3  0020               	movlb	0	; select bank0
  3803     06D4  1193               	bcf	19,3	;volatile
  3804     06D5                     l3072:	
  3805                           ;main.c: 334:                 while(!EUSART_is_rx_ready()){
  3806                           
  3807                           
  3808                           ;main.c: 334:                 while(!EUSART_is_rx_ready()){
  3809     06D5  318B  2361  3186   	fcall	_EUSART_is_rx_ready
  3810     06D8  3A00               	xorlw	0
  3811     06D9  1D03               	btfss	3,2
  3812     06DA  2EE0               	goto	l3074
  3813                           
  3814                           ;main.c: 335:                     if(PIR3bits.TMR6IF){
  3815     06DB  1D93               	btfss	19,3	;volatile
  3816     06DC  2ED5               	goto	l3072
  3817                           
  3818                           ;main.c: 336:                         nao_salva = 1;
  3819     06DD  0021               	movlb	1	; select bank1
  3820     06DE  01C8               	clrf	_nao_salva^(0+128)
  3821     06DF  0AC8               	incf	_nao_salva^(0+128),f
  3822     06E0                     l3074:	
  3823                           ;main.c: 337:                         break;
  3824                           
  3825                           
  3826                           ;main.c: 340:                 if(nao_salva == 1){
  3827     06E0  0021               	movlb	1	; select bank1
  3828     06E1  0348               	decf	_nao_salva^(0+128),w
  3829     06E2  1903               	btfsc	3,2
  3830     06E3  2EF2               	goto	l3084
  3831                           
  3832                           ;main.c: 343:                 bufferRx[countRx] = EUSART_Read();
  3833     06E4  084A               	movf	_countRx^(0+128),w
  3834     06E5  3E53               	addlw	(low (_bufferRx| 0))& (0+255)
  3835     06E6  0086               	movwf	6
  3836     06E7  0187               	clrf	7
  3837     06E8  318B  23FA  3186   	fcall	_EUSART_Read
  3838     06EB  0081               	movwf	1
  3839                           
  3840                           ;main.c: 344:                 countRx++;
  3841     06EC  3001               	movlw	1
  3842     06ED  0021               	movlb	1	; select bank1
  3843     06EE  00EE               	movwf	??_main^(0+128)
  3844     06EF  086E               	movf	??_main^(0+128),w
  3845     06F0  07CA               	addwf	_countRx^(0+128),f
  3846     06F1  2EC9               	goto	l3082
  3847     06F2                     l3084:
  3848                           
  3849                           ;main.c: 346:             analisa_Rx();
  3850     06F2  3185  2521  3186   	fcall	_analisa_Rx
  3851                           
  3852                           ;main.c: 347:             TMR6_LoadPeriodRegister(0x4A);
  3853     06F5  304A               	movlw	74
  3854     06F6  318B  2378  3186   	fcall	_TMR6_LoadPeriodRegister
  3855                           
  3856                           ;main.c: 348:             TMR6_WriteTimer(0);
  3857     06F9  3000               	movlw	0
  3858     06FA  318B  237E  3186   	fcall	_TMR6_WriteTimer
  3859                           
  3860                           ;main.c: 349:             PIR3bits.TMR6IF = 0;
  3861     06FD  0020               	movlb	0	; select bank0
  3862     06FE  1193               	bcf	19,3	;volatile
  3863     06FF                     l3092:
  3864                           
  3865                           ;main.c: 351:         if(INTCONbits.TMR0IF == 1){
  3866     06FF  1D0B               	btfss	11,2	;volatile
  3867     0700  2F14               	goto	l3108
  3868                           
  3869                           ;main.c: 352:             INTCONbits.TMR0IF = 0;
  3870     0701  110B               	bcf	11,2	;volatile
  3871                           
  3872                           ;main.c: 353:             fluxpos();
  3873     0702  318F  2721  3186   	fcall	_fluxpos
  3874                           
  3875                           ;main.c: 354:             passo_ctrl = 0;
  3876     0705  0021               	movlb	1	; select bank1
  3877     0706  01C5               	clrf	_passo_ctrl^(0+128)
  3878                           
  3879                           ;main.c: 355:             count_Tx ++;
  3880     0707  3001               	movlw	1
  3881     0708  00EE               	movwf	??_main^(0+128)
  3882     0709  086E               	movf	??_main^(0+128),w
  3883     070A  07C9               	addwf	_count_Tx^(0+128),f
  3884                           
  3885                           ;main.c: 356:             if (count_Tx == 6){
  3886     070B  3006               	movlw	6
  3887     070C  0649               	xorwf	_count_Tx^(0+128),w
  3888     070D  1D03               	btfss	3,2
  3889     070E  2F14               	goto	l3108
  3890                           
  3891                           ;main.c: 357:                 envia_Tx ();
  3892     070F  318F  278C  3186   	fcall	_envia_Tx
  3893                           
  3894                           ;main.c: 358:                 count_Tx = 0;
  3895     0712  0021               	movlb	1	; select bank1
  3896     0713  01C9               	clrf	_count_Tx^(0+128)
  3897     0714                     l3108:
  3898                           
  3899                           ;main.c: 361:         if(PIR3bits.TMR6IF == 1){
  3900     0714  0020               	movlb	0	; select bank0
  3901     0715  1D93               	btfss	19,3	;volatile
  3902     0716  2F2B               	goto	l3120
  3903                           
  3904                           ;main.c: 362:             PIR3bits.TMR6IF = 0;
  3905     0717  1193               	bcf	19,3	;volatile
  3906                           
  3907                           ;main.c: 363:             TMR6_WriteTimer(0);
  3908     0718  3000               	movlw	0
  3909     0719  318B  237E  3186   	fcall	_TMR6_WriteTimer
  3910                           
  3911                           ;main.c: 364:             adc_temp = ADC_GetConversion(channel_AN8);
  3912     071C  3008               	movlw	8
  3913     071D  318C  2476  3186   	fcall	_ADC_GetConversion
  3914     0720  084E               	movf	(?_ADC_GetConversion+1)^(0+128),w
  3915     0721  00B6               	movwf	(_adc_temp+1)^(0+128)
  3916     0722  084D               	movf	?_ADC_GetConversion^(0+128),w
  3917     0723  00B5               	movwf	_adc_temp^(0+128)
  3918     0724  0022               	movlb	2	; select bank2
  3919     0725  170C               	bsf	12,6	;volatile
  3920                           
  3921                           ;main.c: 366:             _delay((unsigned long)((15)*(16000000/4000000.0)));
  3922     0726  3014               	movlw	20
  3923     0727                     u2797:
  3924     0727  0B89               	decfsz	9,f
  3925     0728  2F27               	goto	u2797
  3926     0729  0022               	movlb	2	; select bank2
  3927     072A  130C               	bcf	12,6	;volatile
  3928     072B                     l3120:
  3929                           
  3930                           ;main.c: 369:         if(TMR0_ReadTimer() >= 0x7F && passo_ctrl == 0){
  3931     072B  318B  2372  3186   	fcall	_TMR0_ReadTimer
  3932     072E  00EE               	movwf	??_main^(0+128)
  3933     072F  307F               	movlw	127
  3934     0730  026E               	subwf	??_main^(0+128),w
  3935     0731  1C03               	skipc
  3936     0732  2EB5               	goto	l3052
  3937     0733  0845               	movf	_passo_ctrl^(0+128),w
  3938     0734  1D03               	btfss	3,2
  3939     0735  2EB5               	goto	l3052
  3940                           
  3941                           ;main.c: 370:             passo_ctrl = 1;
  3942     0736  01C5               	clrf	_passo_ctrl^(0+128)
  3943     0737  0AC5               	incf	_passo_ctrl^(0+128),f
  3944                           
  3945                           ;main.c: 371:             fluxpos();
  3946     0738  318F  2721  3186   	fcall	_fluxpos
  3947     073B  2EB5               	goto	l3052
  3948     073C                     __end_of_main:
  3949                           
  3950                           	psect	text1
  3951     0CA9                     __ptext1:	
  3952 ;; *************** function _setaPorta *****************
  3953 ;; Defined at:
  3954 ;;		line 94 in file "main.c"
  3955 ;; Parameters:    Size  Location     Type
  3956 ;;		None
  3957 ;; Auto vars:     Size  Location     Type
  3958 ;;		None
  3959 ;; Return value:  Size  Location     Type
  3960 ;;                  1    wreg      void 
  3961 ;; Registers used:
  3962 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3963 ;; Tracked objects:
  3964 ;;		On entry : 1F/0
  3965 ;;		On exit  : 1F/1
  3966 ;;		Unchanged: 0/0
  3967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3968 ;;      Params:         0       0       0       0       0       0
  3969 ;;      Locals:         0       0       0       0       0       0
  3970 ;;      Temps:          0       0       1       0       0       0
  3971 ;;      Totals:         0       0       1       0       0       0
  3972 ;;Total ram usage:        1 bytes
  3973 ;; Hardware stack levels used: 1
  3974 ;; Hardware stack levels required when called: 7
  3975 ;; This function calls:
  3976 ;;		_CMP1_GetOutputStatus
  3977 ;;		_daUmPasso
  3978 ;; This function is called by:
  3979 ;;		_main
  3980 ;; This function uses a non-reentrant model
  3981 ;;
  3982                           
  3983     0CA9                     _setaPorta:	
  3984                           ;psect for function _setaPorta
  3985                           
  3986     0CA9                     l2920:	
  3987                           ;main.c: 95:     while(!CMP1_GetOutputStatus()){
  3988                           
  3989                           ;incstack = 0
  3990                           ; Regs used in _setaPorta: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3991                           
  3992                           
  3993                           ;main.c: 95:     while(!CMP1_GetOutputStatus()){
  3994     0CA9  318B  235D  318C   	fcall	_CMP1_GetOutputStatus
  3995     0CAC  3A00               	xorlw	0
  3996     0CAD  1D03               	btfss	3,2
  3997     0CAE  2CBD               	goto	l617
  3998                           
  3999                           ;main.c: 96:         daUmPasso(1);
  4000     0CAF  3001               	movlw	1
  4001     0CB0  318C  24FD  318C   	fcall	_daUmPasso
  4002                           
  4003                           ;main.c: 97:         _delay((unsigned long)((6)*(16000000/4000.0)));
  4004     0CB3  3020               	movlw	32
  4005     0CB4  0021               	movlb	1	; select bank1
  4006     0CB5  00D1               	movwf	??_setaPorta^(0+128)
  4007     0CB6  3029               	movlw	41
  4008     0CB7                     u2807:
  4009     0CB7  0B89               	decfsz	9,f
  4010     0CB8  2CB7               	goto	u2807
  4011     0CB9  0BD1               	decfsz	??_setaPorta^(0+128),f
  4012     0CBA  2CB7               	goto	u2807
  4013     0CBB  3200               	nop2
  4014     0CBC  2CA9               	goto	l2920
  4015     0CBD                     l617:
  4016                           
  4017                           ;main.c: 99:     fim_curso = 1;
  4018     0CBD  0021               	movlb	1	; select bank1
  4019     0CBE  01C6               	clrf	_fim_curso^(0+128)
  4020     0CBF  0AC6               	incf	_fim_curso^(0+128),f
  4021                           
  4022                           ;main.c: 100:     position = 0;
  4023     0CC0  01B9               	clrf	_position^(0+128)
  4024     0CC1  01BA               	clrf	(_position+1)^(0+128)
  4025     0CC2  0008               	return
  4026     0CC3                     __end_of_setaPorta:
  4027                           
  4028                           	psect	text2
  4029     0B5D                     __ptext2:	
  4030 ;; *************** function _CMP1_GetOutputStatus *****************
  4031 ;; Defined at:
  4032 ;;		line 69 in file "mcc_generated_files/cmp1.c"
  4033 ;; Parameters:    Size  Location     Type
  4034 ;;		None
  4035 ;; Auto vars:     Size  Location     Type
  4036 ;;		None
  4037 ;; Return value:  Size  Location     Type
  4038 ;;                  1    wreg      _Bool 
  4039 ;; Registers used:
  4040 ;;		wreg, status,2, status,0
  4041 ;; Tracked objects:
  4042 ;;		On entry : 0/0
  4043 ;;		On exit  : 1F/2
  4044 ;;		Unchanged: 0/0
  4045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4046 ;;      Params:         0       0       0       0       0       0
  4047 ;;      Locals:         0       0       0       0       0       0
  4048 ;;      Temps:          0       0       0       0       0       0
  4049 ;;      Totals:         0       0       0       0       0       0
  4050 ;;Total ram usage:        0 bytes
  4051 ;; Hardware stack levels used: 1
  4052 ;; Hardware stack levels required when called: 5
  4053 ;; This function calls:
  4054 ;;		Nothing
  4055 ;; This function is called by:
  4056 ;;		_setaPorta
  4057 ;; This function uses a non-reentrant model
  4058 ;;
  4059                           
  4060     0B5D                     _CMP1_GetOutputStatus:	
  4061                           ;psect for function _CMP1_GetOutputStatus
  4062                           
  4063                           
  4064                           ;mcc_generated_files/cmp1.c: 71:  return (CMOUTbits.MC1OUT);
  4065                           
  4066                           ;incstack = 0
  4067                           ; Regs used in _CMP1_GetOutputStatus: [wreg+status,2+status,0]
  4068     0B5D  0022               	movlb	2	; select bank2
  4069     0B5E  0815               	movf	21,w	;volatile
  4070     0B5F  3901               	andlw	1
  4071     0B60  0008               	return
  4072     0B61                     __end_of_CMP1_GetOutputStatus:
  4073                           
  4074                           	psect	text3
  4075     0F21                     __ptext3:	
  4076 ;; *************** function _fluxpos *****************
  4077 ;; Defined at:
  4078 ;;		line 82 in file "main.c"
  4079 ;; Parameters:    Size  Location     Type
  4080 ;;		None
  4081 ;; Auto vars:     Size  Location     Type
  4082 ;;		None
  4083 ;; Return value:  Size  Location     Type
  4084 ;;                  1    wreg      void 
  4085 ;; Registers used:
  4086 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4087 ;; Tracked objects:
  4088 ;;		On entry : 1E/0
  4089 ;;		On exit  : 1E/0
  4090 ;;		Unchanged: 0/0
  4091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4092 ;;      Params:         0       0       0       0       0       0
  4093 ;;      Locals:         0       0       0       0       0       0
  4094 ;;      Temps:          0       0       4       0       0       0
  4095 ;;      Totals:         0       0       4       0       0       0
  4096 ;;Total ram usage:        4 bytes
  4097 ;; Hardware stack levels used: 1
  4098 ;; Hardware stack levels required when called: 7
  4099 ;; This function calls:
  4100 ;;		_daUmPasso
  4101 ;; This function is called by:
  4102 ;;		_main
  4103 ;; This function uses a non-reentrant model
  4104 ;;
  4105                           
  4106     0F21                     _fluxpos:	
  4107                           ;psect for function _fluxpos
  4108                           
  4109                           
  4110                           ;main.c: 83:     if(controlchoice==2){
  4111                           
  4112                           ;incstack = 0
  4113                           ; Regs used in _fluxpos: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4114     0F21  3002               	movlw	2
  4115     0F22  0021               	movlb	1	; select bank1
  4116     0F23  064B               	xorwf	_controlchoice^(0+128),w
  4117     0F24  1D03               	btfss	3,2
  4118     0F25  2F74               	goto	l2906
  4119                           
  4120                           ;main.c: 84:         flux = output - position;
  4121     0F26  0839               	movf	_position^(0+128),w
  4122     0F27  0241               	subwf	_output^(0+128),w
  4123     0F28  00D1               	movwf	??_fluxpos^(0+128)
  4124     0F29  083A               	movf	(_position+1)^(0+128),w
  4125     0F2A  3B42               	subwfb	(_output+1)^(0+128),w
  4126     0F2B  00D2               	movwf	(??_fluxpos+1)^(0+128)
  4127     0F2C  0851               	movf	??_fluxpos^(0+128),w
  4128     0F2D  0020               	movlb	0	; select bank0
  4129     0F2E  00DB               	movwf	_flux
  4130     0F2F  0021               	movlb	1	; select bank1
  4131     0F30  0852               	movf	(??_fluxpos+1)^(0+128),w
  4132     0F31  0020               	movlb	0	; select bank0
  4133     0F32  00DC               	movwf	_flux+1
  4134     0F33  01DD               	clrf	_flux+2
  4135                           
  4136                           ;main.c: 85:         if(flux>position) daUmPasso(0);
  4137     0F34  0021               	movlb	1	; select bank1
  4138     0F35  0839               	movf	_position^(0+128),w
  4139     0F36  00D1               	movwf	??_fluxpos^(0+128)
  4140     0F37  083A               	movf	(_position+1)^(0+128),w
  4141     0F38  00D2               	movwf	(??_fluxpos^(0+128)+1)
  4142     0F39  01D3               	clrf	(??_fluxpos^(0+128)+2)
  4143     0F3A  0853               	movf	(??_fluxpos+2)^(0+128),w
  4144     0F3B  3A80               	xorlw	128
  4145     0F3C  00D4               	movwf	(??_fluxpos+3)^(0+128)
  4146     0F3D  0020               	movlb	0	; select bank0
  4147     0F3E  085D               	movf	_flux+2,w
  4148     0F3F  3A80               	xorlw	128
  4149     0F40  0021               	movlb	1	; select bank1
  4150     0F41  0254               	subwf	(??_fluxpos+3)^(0+128),w
  4151     0F42  1D03               	skipz
  4152     0F43  2F4E               	goto	u2513
  4153     0F44  0020               	movlb	0	; select bank0
  4154     0F45  085C               	movf	_flux+1,w
  4155     0F46  0021               	movlb	1	; select bank1
  4156     0F47  0252               	subwf	(??_fluxpos+1)^(0+128),w
  4157     0F48  1D03               	skipz
  4158     0F49  2F4E               	goto	u2513
  4159     0F4A  0020               	movlb	0	; select bank0
  4160     0F4B  085B               	movf	_flux,w
  4161     0F4C  0021               	movlb	1	; select bank1
  4162     0F4D  0251               	subwf	??_fluxpos^(0+128),w
  4163     0F4E                     u2513:
  4164     0F4E  1803               	skipnc
  4165     0F4F  2F54               	goto	l2902
  4166     0F50  3000               	movlw	0
  4167     0F51  318C  24FD         	fcall	_daUmPasso
  4168     0F53  0008               	return
  4169     0F54                     l2902:
  4170     0F54  0839               	movf	_position^(0+128),w
  4171     0F55  00D1               	movwf	??_fluxpos^(0+128)
  4172     0F56  083A               	movf	(_position+1)^(0+128),w
  4173     0F57  00D2               	movwf	(??_fluxpos^(0+128)+1)
  4174     0F58  01D3               	clrf	(??_fluxpos^(0+128)+2)
  4175     0F59  0020               	movlb	0	; select bank0
  4176     0F5A  085D               	movf	_flux+2,w
  4177     0F5B  3A80               	xorlw	128
  4178     0F5C  0021               	movlb	1	; select bank1
  4179     0F5D  00D4               	movwf	(??_fluxpos+3)^(0+128)
  4180     0F5E  0853               	movf	(??_fluxpos+2)^(0+128),w
  4181     0F5F  3A80               	xorlw	128
  4182     0F60  0254               	subwf	(??_fluxpos+3)^(0+128),w
  4183     0F61  0020               	movlb	0	; select bank0
  4184     0F62  1D03               	skipz
  4185     0F63  2F6E               	goto	u2523
  4186     0F64  0021               	movlb	1	; select bank1
  4187     0F65  0852               	movf	(??_fluxpos+1)^(0+128),w
  4188     0F66  0020               	movlb	0	; select bank0
  4189     0F67  025C               	subwf	_flux+1,w
  4190     0F68  1D03               	skipz
  4191     0F69  2F6E               	goto	u2523
  4192     0F6A  0021               	movlb	1	; select bank1
  4193     0F6B  0851               	movf	??_fluxpos^(0+128),w
  4194     0F6C  0020               	movlb	0	; select bank0
  4195     0F6D  025B               	subwf	_flux,w
  4196     0F6E                     u2523:
  4197     0F6E  1803               	skipnc
  4198     0F6F  0008               	return
  4199     0F70  3001               	movlw	1
  4200     0F71  318C  24FD         	fcall	_daUmPasso
  4201     0F73  0008               	return
  4202     0F74                     l2906:
  4203                           
  4204                           ;main.c: 89:         if(sp_position>position) daUmPasso(0);
  4205     0F74  0838               	movf	(_sp_position+1)^(0+128),w
  4206     0F75  023A               	subwf	(_position+1)^(0+128),w
  4207     0F76  1D03               	skipz
  4208     0F77  2F7A               	goto	u2535
  4209     0F78  0837               	movf	_sp_position^(0+128),w
  4210     0F79  0239               	subwf	_position^(0+128),w
  4211     0F7A                     u2535:
  4212     0F7A  1803               	skipnc
  4213     0F7B  2F80               	goto	l2910
  4214     0F7C  3000               	movlw	0
  4215     0F7D  318C  24FD         	fcall	_daUmPasso
  4216     0F7F  0008               	return
  4217     0F80                     l2910:
  4218     0F80  083A               	movf	(_position+1)^(0+128),w
  4219     0F81  0238               	subwf	(_sp_position+1)^(0+128),w
  4220     0F82  1D03               	skipz
  4221     0F83  2F86               	goto	u2545
  4222     0F84  0839               	movf	_position^(0+128),w
  4223     0F85  0237               	subwf	_sp_position^(0+128),w
  4224     0F86                     u2545:
  4225     0F86  1803               	skipnc
  4226     0F87  0008               	return
  4227     0F88  3001               	movlw	1
  4228     0F89  318C  24FD         	fcall	_daUmPasso
  4229     0F8B  0008               	return
  4230     0F8C                     __end_of_fluxpos:
  4231                           
  4232                           	psect	text4
  4233     0CFD                     __ptext4:	
  4234 ;; *************** function _daUmPasso *****************
  4235 ;; Defined at:
  4236 ;;		line 262 in file "main.c"
  4237 ;; Parameters:    Size  Location     Type
  4238 ;;  sentido         1    wreg     unsigned char 
  4239 ;; Auto vars:     Size  Location     Type
  4240 ;;  sentido         1    3[BANK1 ] unsigned char 
  4241 ;; Return value:  Size  Location     Type
  4242 ;;                  1    wreg      void 
  4243 ;; Registers used:
  4244 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4245 ;; Tracked objects:
  4246 ;;		On entry : 1C/2
  4247 ;;		On exit  : 1F/1
  4248 ;;		Unchanged: 0/0
  4249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4250 ;;      Params:         0       0       0       0       0       0
  4251 ;;      Locals:         0       0       1       0       0       0
  4252 ;;      Temps:          0       0       0       0       0       0
  4253 ;;      Totals:         0       0       1       0       0       0
  4254 ;;Total ram usage:        1 bytes
  4255 ;; Hardware stack levels used: 1
  4256 ;; Hardware stack levels required when called: 6
  4257 ;; This function calls:
  4258 ;;		_definePassoMotor
  4259 ;; This function is called by:
  4260 ;;		_fluxpos
  4261 ;;		_setaPorta
  4262 ;; This function uses a non-reentrant model
  4263 ;;
  4264                           
  4265     0CFD                     _daUmPasso:	
  4266                           ;psect for function _daUmPasso
  4267                           
  4268                           
  4269                           ;incstack = 0
  4270                           ; Regs used in _daUmPasso: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4271                           ;daUmPasso@sentido stored from wreg
  4272     0CFD  0021               	movlb	1	; select bank1
  4273     0CFE  00D0               	movwf	daUmPasso@sentido^(0+128)
  4274                           
  4275                           ;main.c: 264:     if (fim_curso) {
  4276     0CFF  0846               	movf	_fim_curso^(0+128),w
  4277     0D00  1903               	btfsc	3,2
  4278     0D01  2D17               	goto	l2794
  4279                           
  4280                           ;main.c: 266:         if(sentido == 1){
  4281     0D02  0350               	decf	daUmPasso@sentido^(0+128),w
  4282     0D03  1D03               	btfss	3,2
  4283     0D04  2D0A               	goto	l2788
  4284                           
  4285                           ;main.c: 267:             position--;
  4286     0D05  3001               	movlw	1
  4287     0D06  02B9               	subwf	_position^(0+128),f
  4288     0D07  3000               	movlw	0
  4289     0D08  3BBA               	subwfb	(_position+1)^(0+128),f
  4290                           
  4291                           ;main.c: 268:         }
  4292     0D09  2D11               	goto	l2792
  4293     0D0A                     l2788:
  4294     0D0A  0850               	movf	daUmPasso@sentido^(0+128),w
  4295     0D0B  1D03               	btfss	3,2
  4296     0D0C  2D11               	goto	l2792
  4297                           
  4298                           ;main.c: 270:             position++;
  4299     0D0D  3001               	movlw	1
  4300     0D0E  07B9               	addwf	_position^(0+128),f
  4301     0D0F  3000               	movlw	0
  4302     0D10  3DBA               	addwfc	(_position+1)^(0+128),f
  4303     0D11                     l2792:
  4304                           
  4305                           ;main.c: 272:         definePassoMotor(passo, sentido);
  4306     0D11  0850               	movf	daUmPasso@sentido^(0+128),w
  4307     0D12  00CD               	movwf	definePassoMotor@sentido^(0+128)
  4308     0D13  0847               	movf	_passo^(0+128),w
  4309     0D14  318D  259B         	fcall	_definePassoMotor
  4310                           
  4311                           ;main.c: 273:     } else {
  4312     0D16  0008               	return
  4313     0D17                     l2794:
  4314                           
  4315                           ;main.c: 274:         definePassoMotor(passo, 1);
  4316     0D17  01CD               	clrf	definePassoMotor@sentido^(0+128)
  4317     0D18  0ACD               	incf	definePassoMotor@sentido^(0+128),f
  4318     0D19  0847               	movf	_passo^(0+128),w
  4319     0D1A  318D  259B         	fcall	_definePassoMotor
  4320     0D1C  0008               	return
  4321     0D1D                     __end_of_daUmPasso:
  4322                           
  4323                           	psect	text5
  4324     0D9B                     __ptext5:	
  4325 ;; *************** function _definePassoMotor *****************
  4326 ;; Defined at:
  4327 ;;		line 200 in file "main.c"
  4328 ;; Parameters:    Size  Location     Type
  4329 ;;  passom          1    wreg     unsigned char 
  4330 ;;  sentido         1    0[BANK1 ] unsigned char 
  4331 ;; Auto vars:     Size  Location     Type
  4332 ;;  passom          1    2[BANK1 ] unsigned char 
  4333 ;; Return value:  Size  Location     Type
  4334 ;;                  1    wreg      void 
  4335 ;; Registers used:
  4336 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4337 ;; Tracked objects:
  4338 ;;		On entry : 1F/1
  4339 ;;		On exit  : 1F/1
  4340 ;;		Unchanged: 0/0
  4341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4342 ;;      Params:         0       0       1       0       0       0
  4343 ;;      Locals:         0       0       1       0       0       0
  4344 ;;      Temps:          0       0       1       0       0       0
  4345 ;;      Totals:         0       0       3       0       0       0
  4346 ;;Total ram usage:        3 bytes
  4347 ;; Hardware stack levels used: 1
  4348 ;; Hardware stack levels required when called: 5
  4349 ;; This function calls:
  4350 ;;		Nothing
  4351 ;; This function is called by:
  4352 ;;		_daUmPasso
  4353 ;; This function uses a non-reentrant model
  4354 ;;
  4355                           
  4356     0D9B                     _definePassoMotor:	
  4357                           ;psect for function _definePassoMotor
  4358                           
  4359                           
  4360                           ;incstack = 0
  4361                           ; Regs used in _definePassoMotor: [wreg-fsr0h+status,2+status,0]
  4362                           ;definePassoMotor@passom stored from wreg
  4363     0D9B  00CF               	movwf	definePassoMotor@passom^(0+128)
  4364                           
  4365                           ;main.c: 201:     if (sentido == 1) {
  4366     0D9C  034D               	decf	definePassoMotor@sentido^(0+128),w
  4367     0D9D  1903               	btfsc	3,2
  4368     0D9E  2DB6               	goto	l2296
  4369     0D9F  2DC4               	goto	l2298
  4370     0DA0                     l649:	
  4371                           ;main.c: 204:                 do { LATAbits.LATA1 = 1; } while(0);
  4372                           
  4373     0DA0  0022               	movlb	2	; select bank2
  4374     0DA1  148C               	bsf	12,1	;volatile
  4375                           
  4376                           ;main.c: 205:                 do { LATAbits.LATA2 = 1; } while(0);
  4377     0DA2  150C               	bsf	12,2	;volatile
  4378                           
  4379                           ;main.c: 206:                 do { LATAbits.LATA3 = 0; } while(0);
  4380     0DA3  118C               	bcf	12,3	;volatile
  4381     0DA4  2DA9               	goto	l665
  4382     0DA5                     l659:	
  4383                           ;main.c: 210:                 do { LATAbits.LATA1 = 0; } while(0);
  4384                           
  4385                           ;main.c: 207:                 do { LATAbits.LATA4 = 0; } while(0);
  4386                           
  4387     0DA5  0022               	movlb	2	; select bank2
  4388     0DA6  108C               	bcf	12,1	;volatile
  4389                           
  4390                           ;main.c: 211:                 do { LATAbits.LATA2 = 1; } while(0);
  4391     0DA7  150C               	bsf	12,2	;volatile
  4392                           
  4393                           ;main.c: 212:                 do { LATAbits.LATA3 = 1; } while(0);
  4394     0DA8  158C               	bsf	12,3	;volatile
  4395     0DA9                     l665:	
  4396                           ;main.c: 213:                 do { LATAbits.LATA4 = 0; } while(0);
  4397                           
  4398     0DA9  120C               	bcf	12,4	;volatile
  4399     0DAA  2DEC               	goto	l2306
  4400     0DAB                     l668:	
  4401                           ;main.c: 216:                 do { LATAbits.LATA1 = 0; } while(0);
  4402                           
  4403     0DAB  0022               	movlb	2	; select bank2
  4404     0DAC  108C               	bcf	12,1	;volatile
  4405                           
  4406                           ;main.c: 217:                 do { LATAbits.LATA2 = 0; } while(0);
  4407     0DAD  110C               	bcf	12,2	;volatile
  4408                           
  4409                           ;main.c: 218:                 do { LATAbits.LATA3 = 1; } while(0);
  4410     0DAE  158C               	bsf	12,3	;volatile
  4411     0DAF  2DB4               	goto	l683
  4412     0DB0                     l677:	
  4413                           ;main.c: 222:                 do { LATAbits.LATA1 = 1; } while(0);
  4414                           
  4415                           ;main.c: 219:                 do { LATAbits.LATA4 = 1; } while(0);
  4416                           
  4417     0DB0  0022               	movlb	2	; select bank2
  4418     0DB1  148C               	bsf	12,1	;volatile
  4419                           
  4420                           ;main.c: 223:                 do { LATAbits.LATA2 = 0; } while(0);
  4421     0DB2  110C               	bcf	12,2	;volatile
  4422                           
  4423                           ;main.c: 224:                 do { LATAbits.LATA3 = 0; } while(0);
  4424     0DB3  118C               	bcf	12,3	;volatile
  4425     0DB4                     l683:	
  4426                           ;main.c: 225:                 do { LATAbits.LATA4 = 1; } while(0);
  4427                           
  4428     0DB4  160C               	bsf	12,4	;volatile
  4429     0DB5  2DEC               	goto	l2306
  4430     0DB6                     l2296:
  4431     0DB6  084F               	movf	definePassoMotor@passom^(0+128),w
  4432                           
  4433                           ; Switch size 1, requested type "simple"
  4434                           ; Number of cases is 4, Range of values is 0 to 3
  4435                           ; switch strategies available:
  4436                           ; Name         Instructions Cycles
  4437                           ; simple_byte           13     7 (average)
  4438                           ; direct_byte           14     6 (fixed)
  4439                           ; jumptable            260     6 (fixed)
  4440                           ;	Chosen strategy is simple_byte
  4441     0DB7  3A00               	xorlw	0	; case 0
  4442     0DB8  1903               	skipnz
  4443     0DB9  2DA0               	goto	l649
  4444     0DBA  3A01               	xorlw	1	; case 1
  4445     0DBB  1903               	skipnz
  4446     0DBC  2DA5               	goto	l659
  4447     0DBD  3A03               	xorlw	3	; case 2
  4448     0DBE  1903               	skipnz
  4449     0DBF  2DAB               	goto	l668
  4450     0DC0  3A01               	xorlw	1	; case 3
  4451     0DC1  1903               	skipnz
  4452     0DC2  2DB0               	goto	l677
  4453     0DC3  2DEC               	goto	l2306
  4454     0DC4                     l2298:
  4455     0DC4  084D               	movf	definePassoMotor@sentido^(0+128),w
  4456     0DC5  1903               	btfsc	3,2
  4457     0DC6  2DDE               	goto	l2304
  4458     0DC7  2DEC               	goto	l2306
  4459     0DC8                     l689:	
  4460                           ;main.c: 232:                 do { LATAbits.LATA4 = 1; } while(0);
  4461                           
  4462     0DC8  0022               	movlb	2	; select bank2
  4463     0DC9  160C               	bsf	12,4	;volatile
  4464                           
  4465                           ;main.c: 233:                 do { LATAbits.LATA3 = 1; } while(0);
  4466     0DCA  158C               	bsf	12,3	;volatile
  4467                           
  4468                           ;main.c: 234:                 do { LATAbits.LATA2 = 0; } while(0);
  4469     0DCB  110C               	bcf	12,2	;volatile
  4470     0DCC  2DD1               	goto	l705
  4471     0DCD                     l699:	
  4472                           ;main.c: 238:                 do { LATAbits.LATA4 = 0; } while(0);
  4473                           
  4474                           ;main.c: 235:                 do { LATAbits.LATA1 = 0; } while(0);
  4475                           
  4476     0DCD  0022               	movlb	2	; select bank2
  4477     0DCE  120C               	bcf	12,4	;volatile
  4478                           
  4479                           ;main.c: 239:                 do { LATAbits.LATA3 = 1; } while(0);
  4480     0DCF  158C               	bsf	12,3	;volatile
  4481                           
  4482                           ;main.c: 240:                 do { LATAbits.LATA2 = 1; } while(0);
  4483     0DD0  150C               	bsf	12,2	;volatile
  4484     0DD1                     l705:	
  4485                           ;main.c: 241:                 do { LATAbits.LATA1 = 0; } while(0);
  4486                           
  4487     0DD1  108C               	bcf	12,1	;volatile
  4488     0DD2  2DEC               	goto	l2306
  4489     0DD3                     l708:	
  4490                           ;main.c: 244:                 do { LATAbits.LATA4 = 0; } while(0);
  4491                           
  4492     0DD3  0022               	movlb	2	; select bank2
  4493     0DD4  120C               	bcf	12,4	;volatile
  4494                           
  4495                           ;main.c: 245:                 do { LATAbits.LATA3 = 0; } while(0);
  4496     0DD5  118C               	bcf	12,3	;volatile
  4497                           
  4498                           ;main.c: 246:                 do { LATAbits.LATA2 = 1; } while(0);
  4499     0DD6  150C               	bsf	12,2	;volatile
  4500     0DD7  2DDC               	goto	L2
  4501     0DD8                     l717:	
  4502                           ;main.c: 250:                 do { LATAbits.LATA4 = 1; } while(0);
  4503                           
  4504                           ;main.c: 247:                 do { LATAbits.LATA1 = 1; } while(0);
  4505                           
  4506     0DD8  0022               	movlb	2	; select bank2
  4507     0DD9  160C               	bsf	12,4	;volatile
  4508                           
  4509                           ;main.c: 251:                 do { LATAbits.LATA3 = 0; } while(0);
  4510     0DDA  118C               	bcf	12,3	;volatile
  4511                           
  4512                           ;main.c: 252:                 do { LATAbits.LATA2 = 0; } while(0);
  4513     0DDB  110C               	bcf	12,2	;volatile
  4514     0DDC                     L2:
  4515                           
  4516                           ;main.c: 253:                 do { LATAbits.LATA1 = 1; } while(0);
  4517     0DDC  148C               	bsf	12,1	;volatile
  4518     0DDD  2DEC               	goto	l2306
  4519     0DDE                     l2304:
  4520     0DDE  084F               	movf	definePassoMotor@passom^(0+128),w
  4521                           
  4522                           ; Switch size 1, requested type "simple"
  4523                           ; Number of cases is 4, Range of values is 0 to 3
  4524                           ; switch strategies available:
  4525                           ; Name         Instructions Cycles
  4526                           ; simple_byte           13     7 (average)
  4527                           ; direct_byte           14     6 (fixed)
  4528                           ; jumptable            260     6 (fixed)
  4529                           ;	Chosen strategy is simple_byte
  4530     0DDF  3A00               	xorlw	0	; case 0
  4531     0DE0  1903               	skipnz
  4532     0DE1  2DC8               	goto	l689
  4533     0DE2  3A01               	xorlw	1	; case 1
  4534     0DE3  1903               	skipnz
  4535     0DE4  2DCD               	goto	l699
  4536     0DE5  3A03               	xorlw	3	; case 2
  4537     0DE6  1903               	skipnz
  4538     0DE7  2DD3               	goto	l708
  4539     0DE8  3A01               	xorlw	1	; case 3
  4540     0DE9  1903               	skipnz
  4541     0DEA  2DD8               	goto	l717
  4542     0DEB  2DEC               	goto	l2306
  4543     0DEC                     l2306:
  4544                           
  4545                           ;main.c: 258:     passo++;
  4546     0DEC  3001               	movlw	1
  4547     0DED  0021               	movlb	1	; select bank1
  4548     0DEE  00CE               	movwf	??_definePassoMotor^(0+128)
  4549     0DEF  084E               	movf	??_definePassoMotor^(0+128),w
  4550     0DF0  07C7               	addwf	_passo^(0+128),f
  4551                           
  4552                           ;main.c: 259:     passo = passo & 0x03;
  4553     0DF1  0847               	movf	_passo^(0+128),w
  4554     0DF2  3903               	andlw	3
  4555     0DF3  00C7               	movwf	_passo^(0+128)
  4556     0DF4  0008               	return
  4557     0DF5                     __end_of_definePassoMotor:
  4558                           
  4559                           	psect	text6
  4560     0F8C                     __ptext6:	
  4561 ;; *************** function _envia_Tx *****************
  4562 ;; Defined at:
  4563 ;;		line 173 in file "main.c"
  4564 ;; Parameters:    Size  Location     Type
  4565 ;;		None
  4566 ;; Auto vars:     Size  Location     Type
  4567 ;;		None
  4568 ;; Return value:  Size  Location     Type
  4569 ;;                  1    wreg      void 
  4570 ;; Registers used:
  4571 ;;		wreg, status,2, status,0, pclath, cstack
  4572 ;; Tracked objects:
  4573 ;;		On entry : 1F/1
  4574 ;;		On exit  : 1F/3
  4575 ;;		Unchanged: 0/0
  4576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4577 ;;      Params:         0       0       0       0       0       0
  4578 ;;      Locals:         0       0       0       0       0       0
  4579 ;;      Temps:          0       0       0       0       0       0
  4580 ;;      Totals:         0       0       0       0       0       0
  4581 ;;Total ram usage:        0 bytes
  4582 ;; Hardware stack levels used: 1
  4583 ;; Hardware stack levels required when called: 6
  4584 ;; This function calls:
  4585 ;;		_EUSART_Write
  4586 ;;		___fltol
  4587 ;; This function is called by:
  4588 ;;		_main
  4589 ;; This function uses a non-reentrant model
  4590 ;;
  4591                           
  4592     0F8C                     _envia_Tx:	
  4593                           ;psect for function _envia_Tx
  4594                           
  4595                           
  4596                           ;main.c: 174:     EUSART_Write(controlchoice);
  4597                           
  4598                           ;incstack = 0
  4599                           ; Regs used in _envia_Tx: [wreg+status,2+status,0+pclath+cstack]
  4600     0F8C  084B               	movf	_controlchoice^(0+128),w
  4601     0F8D  318B  23C8  318F   	fcall	_EUSART_Write
  4602                           
  4603                           ;main.c: 175:     vTx.v = sp_height;
  4604     0F90  0020               	movlb	0	; select bank0
  4605     0F91  0866               	movf	_sp_height+1,w
  4606     0F92  0021               	movlb	1	; select bank1
  4607     0F93  00C0               	movwf	(_vTx+1)^(0+128)
  4608     0F94  0020               	movlb	0	; select bank0
  4609     0F95  0865               	movf	_sp_height,w
  4610     0F96  0021               	movlb	1	; select bank1
  4611     0F97  00BF               	movwf	_vTx^(0+128)
  4612                           
  4613                           ;main.c: 176:     EUSART_Write(vTx.vH);
  4614     0F98  0840               	movf	(_vTx^(0+128)+1),w
  4615     0F99  318B  23C8  318F   	fcall	_EUSART_Write
  4616                           
  4617                           ;main.c: 177:     EUSART_Write(vTx.vL);
  4618     0F9C  0021               	movlb	1	; select bank1
  4619     0F9D  083F               	movf	_vTx^(0+128),w
  4620     0F9E  318B  23C8  318F   	fcall	_EUSART_Write
  4621                           
  4622                           ;main.c: 178:     vTx.v = height;
  4623     0FA1  0021               	movlb	1	; select bank1
  4624     0FA2  0834               	movf	(_height+1)^(0+128),w
  4625     0FA3  00C0               	movwf	(_vTx+1)^(0+128)
  4626     0FA4  0833               	movf	_height^(0+128),w
  4627     0FA5  00BF               	movwf	_vTx^(0+128)
  4628                           
  4629                           ;main.c: 179:     EUSART_Write(vTx.vH);
  4630     0FA6  0840               	movf	(_vTx^(0+128)+1),w
  4631     0FA7  318B  23C8  318F   	fcall	_EUSART_Write
  4632                           
  4633                           ;main.c: 180:     EUSART_Write(vTx.vL);
  4634     0FAA  0021               	movlb	1	; select bank1
  4635     0FAB  083F               	movf	_vTx^(0+128),w
  4636     0FAC  318B  23C8  318F   	fcall	_EUSART_Write
  4637                           
  4638                           ;main.c: 181:     vTx.v = avg_tempo_voo;
  4639     0FAF  0021               	movlb	1	; select bank1
  4640     0FB0  0823               	movf	(_avg_tempo_voo+3)^(0+128),w
  4641     0FB1  00D0               	movwf	(___fltol@f1+3)^(0+128)
  4642     0FB2  0822               	movf	(_avg_tempo_voo+2)^(0+128),w
  4643     0FB3  00CF               	movwf	(___fltol@f1+2)^(0+128)
  4644     0FB4  0821               	movf	(_avg_tempo_voo+1)^(0+128),w
  4645     0FB5  00CE               	movwf	(___fltol@f1+1)^(0+128)
  4646     0FB6  0820               	movf	_avg_tempo_voo^(0+128),w
  4647     0FB7  00CD               	movwf	___fltol@f1^(0+128)
  4648     0FB8  318E  2656  318F   	fcall	___fltol
  4649     0FBB  084E               	movf	(?___fltol+1)^(0+128),w
  4650     0FBC  00C0               	movwf	(_vTx+1)^(0+128)
  4651     0FBD  084D               	movf	?___fltol^(0+128),w
  4652     0FBE  00BF               	movwf	_vTx^(0+128)
  4653                           
  4654                           ;main.c: 182:     EUSART_Write(vTx.vH);
  4655     0FBF  0840               	movf	(_vTx^(0+128)+1),w
  4656     0FC0  318B  23C8  318F   	fcall	_EUSART_Write
  4657                           
  4658                           ;main.c: 183:     EUSART_Write(vTx.vL);
  4659     0FC3  0021               	movlb	1	; select bank1
  4660     0FC4  083F               	movf	_vTx^(0+128),w
  4661     0FC5  318B  23C8  318F   	fcall	_EUSART_Write
  4662                           
  4663                           ;main.c: 184:     vTx.v = adc_temp;
  4664     0FC8  0021               	movlb	1	; select bank1
  4665     0FC9  0836               	movf	(_adc_temp+1)^(0+128),w
  4666     0FCA  00C0               	movwf	(_vTx+1)^(0+128)
  4667     0FCB  0835               	movf	_adc_temp^(0+128),w
  4668     0FCC  00BF               	movwf	_vTx^(0+128)
  4669                           
  4670                           ;main.c: 185:     EUSART_Write(vTx.vH);
  4671     0FCD  0840               	movf	(_vTx^(0+128)+1),w
  4672     0FCE  318B  23C8  318F   	fcall	_EUSART_Write
  4673                           
  4674                           ;main.c: 186:     EUSART_Write(vTx.vL);
  4675     0FD1  0021               	movlb	1	; select bank1
  4676     0FD2  083F               	movf	_vTx^(0+128),w
  4677     0FD3  318B  23C8  318F   	fcall	_EUSART_Write
  4678                           
  4679                           ;main.c: 187:     vTx.v = sp_position;
  4680     0FD6  0021               	movlb	1	; select bank1
  4681     0FD7  0838               	movf	(_sp_position+1)^(0+128),w
  4682     0FD8  00C0               	movwf	(_vTx+1)^(0+128)
  4683     0FD9  0837               	movf	_sp_position^(0+128),w
  4684     0FDA  00BF               	movwf	_vTx^(0+128)
  4685                           
  4686                           ;main.c: 188:     EUSART_Write(vTx.vH);
  4687     0FDB  0840               	movf	(_vTx^(0+128)+1),w
  4688     0FDC  318B  23C8  318F   	fcall	_EUSART_Write
  4689                           
  4690                           ;main.c: 189:     EUSART_Write(vTx.vL);
  4691     0FDF  0021               	movlb	1	; select bank1
  4692     0FE0  083F               	movf	_vTx^(0+128),w
  4693     0FE1  318B  23C8  318F   	fcall	_EUSART_Write
  4694                           
  4695                           ;main.c: 190:     vTx.v = position;
  4696     0FE4  0021               	movlb	1	; select bank1
  4697     0FE5  083A               	movf	(_position+1)^(0+128),w
  4698     0FE6  00C0               	movwf	(_vTx+1)^(0+128)
  4699     0FE7  0839               	movf	_position^(0+128),w
  4700     0FE8  00BF               	movwf	_vTx^(0+128)
  4701                           
  4702                           ;main.c: 191:     EUSART_Write(vTx.vH);
  4703     0FE9  0840               	movf	(_vTx^(0+128)+1),w
  4704     0FEA  318B  23C8  318F   	fcall	_EUSART_Write
  4705                           
  4706                           ;main.c: 192:     EUSART_Write(vTx.vL);
  4707     0FED  0021               	movlb	1	; select bank1
  4708     0FEE  083F               	movf	_vTx^(0+128),w
  4709     0FEF  318B  23C8  318F   	fcall	_EUSART_Write
  4710                           
  4711                           ;main.c: 193:     vTx.v = dc;
  4712     0FF2  0021               	movlb	1	; select bank1
  4713     0FF3  083C               	movf	(_dc+1)^(0+128),w
  4714     0FF4  00C0               	movwf	(_vTx+1)^(0+128)
  4715     0FF5  083B               	movf	_dc^(0+128),w
  4716     0FF6  00BF               	movwf	_vTx^(0+128)
  4717                           
  4718                           ;main.c: 194:     EUSART_Write(vTx.vH);
  4719     0FF7  0840               	movf	(_vTx^(0+128)+1),w
  4720     0FF8  318B  23C8  318F   	fcall	_EUSART_Write
  4721                           
  4722                           ;main.c: 195:     EUSART_Write(vTx.vL);
  4723     0FFB  0021               	movlb	1	; select bank1
  4724     0FFC  083F               	movf	_vTx^(0+128),w
  4725     0FFD  318B  23C8         	fcall	_EUSART_Write
  4726     0FFF  0008               	return
  4727     1000                     __end_of_envia_Tx:
  4728                           
  4729                           	psect	text7
  4730     0E56                     __ptext7:	
  4731 ;; *************** function ___fltol *****************
  4732 ;; Defined at:
  4733 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\fltol.c"
  4734 ;; Parameters:    Size  Location     Type
  4735 ;;  f1              4    0[BANK1 ] void 
  4736 ;; Auto vars:     Size  Location     Type
  4737 ;;  exp1            1    9[BANK1 ] unsigned char 
  4738 ;;  sign1           1    8[BANK1 ] unsigned char 
  4739 ;; Return value:  Size  Location     Type
  4740 ;;                  4    0[BANK1 ] long 
  4741 ;; Registers used:
  4742 ;;		wreg, status,2, status,0
  4743 ;; Tracked objects:
  4744 ;;		On entry : 1F/1
  4745 ;;		On exit  : 1F/1
  4746 ;;		Unchanged: 0/0
  4747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4748 ;;      Params:         0       0       4       0       0       0
  4749 ;;      Locals:         0       0       2       0       0       0
  4750 ;;      Temps:          0       0       4       0       0       0
  4751 ;;      Totals:         0       0      10       0       0       0
  4752 ;;Total ram usage:       10 bytes
  4753 ;; Hardware stack levels used: 1
  4754 ;; Hardware stack levels required when called: 5
  4755 ;; This function calls:
  4756 ;;		Nothing
  4757 ;; This function is called by:
  4758 ;;		_envia_Tx
  4759 ;; This function uses a non-reentrant model
  4760 ;;
  4761                           
  4762     0E56                     ___fltol:	
  4763                           ;psect for function ___fltol
  4764                           
  4765                           
  4766                           ;incstack = 0
  4767                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  4768     0E56  1003               	clrc
  4769     0E57  0D4F               	rlf	(___fltol@f1+2)^(0+128),w
  4770     0E58  0D50               	rlf	(___fltol@f1+3)^(0+128),w
  4771     0E59  00D6               	movwf	___fltol@exp1^(0+128)
  4772     0E5A  0856               	movf	___fltol@exp1^(0+128),w
  4773     0E5B  1D03               	btfss	3,2
  4774     0E5C  2E66               	goto	l2818
  4775     0E5D                     l2814:
  4776     0E5D  3000               	movlw	0
  4777     0E5E  00D0               	movwf	(?___fltol+3)^(0+128)
  4778     0E5F  3000               	movlw	0
  4779     0E60  00CF               	movwf	(?___fltol+2)^(0+128)
  4780     0E61  3000               	movlw	0
  4781     0E62  00CE               	movwf	(?___fltol+1)^(0+128)
  4782     0E63  3000               	movlw	0
  4783     0E64  00CD               	movwf	?___fltol^(0+128)
  4784     0E65  0008               	return
  4785     0E66                     l2818:
  4786     0E66  084D               	movf	___fltol@f1^(0+128),w
  4787     0E67  00D1               	movwf	??___fltol^(0+128)
  4788     0E68  084E               	movf	(___fltol@f1+1)^(0+128),w
  4789     0E69  00D2               	movwf	(??___fltol^(0+128)+1)
  4790     0E6A  084F               	movf	(___fltol@f1+2)^(0+128),w
  4791     0E6B  00D3               	movwf	(??___fltol^(0+128)+2)
  4792     0E6C  0850               	movf	(___fltol@f1+3)^(0+128),w
  4793     0E6D  00D4               	movwf	(??___fltol^(0+128)+3)
  4794     0E6E  301F               	movlw	31
  4795     0E6F                     u2375:
  4796     0E6F  36D4               	lsrf	(??___fltol^(0+128)+3),f
  4797     0E70  0CD3               	rrf	(??___fltol^(0+128)+2),f
  4798     0E71  0CD2               	rrf	(??___fltol^(0+128)+1),f
  4799     0E72  0CD1               	rrf	??___fltol^(0+128),f
  4800     0E73  0B89               	decfsz	9,f
  4801     0E74  2E6F               	goto	u2375
  4802     0E75  0851               	movf	??___fltol^(0+128),w
  4803     0E76  00D5               	movwf	___fltol@sign1^(0+128)
  4804     0E77  17CF               	bsf	(___fltol@f1^(0+128)+2),7
  4805     0E78  30FF               	movlw	255
  4806     0E79  05CD               	andwf	___fltol@f1^(0+128),f
  4807     0E7A  30FF               	movlw	255
  4808     0E7B  05CE               	andwf	(___fltol@f1+1)^(0+128),f
  4809     0E7C  30FF               	movlw	255
  4810     0E7D  05CF               	andwf	(___fltol@f1+2)^(0+128),f
  4811     0E7E  3000               	movlw	0
  4812     0E7F  05D0               	andwf	(___fltol@f1+3)^(0+128),f
  4813     0E80  3096               	movlw	150
  4814     0E81  02D6               	subwf	___fltol@exp1^(0+128),f
  4815     0E82  1FD6               	btfss	___fltol@exp1^(0+128),7
  4816     0E83  2E97               	goto	l2836
  4817     0E84  0856               	movf	___fltol@exp1^(0+128),w
  4818     0E85  3A80               	xorlw	128
  4819     0E86  3E97               	addlw	151
  4820     0E87  1C03               	btfss	3,0
  4821     0E88  2E5D               	goto	l2814
  4822     0E89                     l2834:
  4823     0E89  3001               	movlw	1
  4824     0E8A                     u2405:
  4825     0E8A  36D0               	lsrf	(___fltol@f1+3)^(0+128),f
  4826     0E8B  0CCF               	rrf	(___fltol@f1+2)^(0+128),f
  4827     0E8C  0CCE               	rrf	(___fltol@f1+1)^(0+128),f
  4828     0E8D  0CCD               	rrf	___fltol@f1^(0+128),f
  4829     0E8E  0B89               	decfsz	9,f
  4830     0E8F  2E8A               	goto	u2405
  4831     0E90  3001               	movlw	1
  4832     0E91  00D1               	movwf	??___fltol^(0+128)
  4833     0E92  0851               	movf	??___fltol^(0+128),w
  4834     0E93  07D6               	addwf	___fltol@exp1^(0+128),f
  4835     0E94  1903               	btfsc	3,2
  4836     0E95  2EA8               	goto	l2844
  4837     0E96  2E89               	goto	l2834
  4838     0E97                     l2836:
  4839     0E97  3020               	movlw	32
  4840     0E98  0256               	subwf	___fltol@exp1^(0+128),w
  4841     0E99  1803               	btfsc	3,0
  4842     0E9A  2E5D               	goto	l2814
  4843     0E9B                     l1115:
  4844     0E9B  0856               	movf	___fltol@exp1^(0+128),w
  4845     0E9C  1903               	btfsc	3,2
  4846     0E9D  2EA8               	goto	l2844
  4847     0E9E  3001               	movlw	1
  4848     0E9F                     u2435:
  4849     0E9F  35CD               	lslf	___fltol@f1^(0+128),f
  4850     0EA0  0DCE               	rlf	(___fltol@f1+1)^(0+128),f
  4851     0EA1  0DCF               	rlf	(___fltol@f1+2)^(0+128),f
  4852     0EA2  0DD0               	rlf	(___fltol@f1+3)^(0+128),f
  4853     0EA3  0B89               	decfsz	9,f
  4854     0EA4  2E9F               	goto	u2435
  4855     0EA5  3001               	movlw	1
  4856     0EA6  02D6               	subwf	___fltol@exp1^(0+128),f
  4857     0EA7  2E9B               	goto	l1115
  4858     0EA8                     l2844:
  4859     0EA8  0855               	movf	___fltol@sign1^(0+128),w
  4860     0EA9  1903               	btfsc	3,2
  4861     0EAA  0008               	return
  4862     0EAB  09CD               	comf	___fltol@f1^(0+128),f
  4863     0EAC  09CE               	comf	(___fltol@f1+1)^(0+128),f
  4864     0EAD  09CF               	comf	(___fltol@f1+2)^(0+128),f
  4865     0EAE  09D0               	comf	(___fltol@f1+3)^(0+128),f
  4866     0EAF  0ACD               	incf	___fltol@f1^(0+128),f
  4867     0EB0  1903               	skipnz
  4868     0EB1  0ACE               	incf	(___fltol@f1+1)^(0+128),f
  4869     0EB2  1903               	skipnz
  4870     0EB3  0ACF               	incf	(___fltol@f1+2)^(0+128),f
  4871     0EB4  1903               	skipnz
  4872     0EB5  0AD0               	incf	(___fltol@f1+3)^(0+128),f
  4873     0EB6  0008               	return
  4874     0EB7                     __end_of___fltol:
  4875                           
  4876                           	psect	text8
  4877     0BC8                     __ptext8:	
  4878 ;; *************** function _EUSART_Write *****************
  4879 ;; Defined at:
  4880 ;;		line 132 in file "mcc_generated_files/eusart.c"
  4881 ;; Parameters:    Size  Location     Type
  4882 ;;  txData          1    wreg     unsigned char 
  4883 ;; Auto vars:     Size  Location     Type
  4884 ;;  txData          1    0[BANK1 ] unsigned char 
  4885 ;; Return value:  Size  Location     Type
  4886 ;;                  1    wreg      void 
  4887 ;; Registers used:
  4888 ;;		wreg
  4889 ;; Tracked objects:
  4890 ;;		On entry : 1F/1
  4891 ;;		On exit  : 1F/3
  4892 ;;		Unchanged: 0/0
  4893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4894 ;;      Params:         0       0       0       0       0       0
  4895 ;;      Locals:         0       0       1       0       0       0
  4896 ;;      Temps:          0       0       0       0       0       0
  4897 ;;      Totals:         0       0       1       0       0       0
  4898 ;;Total ram usage:        1 bytes
  4899 ;; Hardware stack levels used: 1
  4900 ;; Hardware stack levels required when called: 5
  4901 ;; This function calls:
  4902 ;;		Nothing
  4903 ;; This function is called by:
  4904 ;;		_envia_Tx
  4905 ;; This function uses a non-reentrant model
  4906 ;;
  4907                           
  4908     0BC8                     _EUSART_Write:	
  4909                           ;psect for function _EUSART_Write
  4910                           
  4911                           
  4912                           ;incstack = 0
  4913                           ; Regs used in _EUSART_Write: [wreg]
  4914                           ;EUSART_Write@txData stored from wreg
  4915     0BC8  00CD               	movwf	EUSART_Write@txData^(0+128)
  4916     0BC9                     l247:	
  4917                           ;mcc_generated_files/eusart.c: 135:     {;mcc_generated_files/eusart.c: 136:     }
  4918                           
  4919                           
  4920                           ;mcc_generated_files/eusart.c: 134:     while(0 == PIR1bits.TXIF)
  4921     0BC9  0020               	movlb	0	; select bank0
  4922     0BCA  1E11               	btfss	17,4	;volatile
  4923     0BCB  2BC9               	goto	l247
  4924                           
  4925                           ;mcc_generated_files/eusart.c: 138:     TXREG = txData;
  4926     0BCC  0021               	movlb	1	; select bank1
  4927     0BCD  084D               	movf	EUSART_Write@txData^(0+128),w
  4928     0BCE  0023               	movlb	3	; select bank3
  4929     0BCF  009A               	movwf	26	;volatile
  4930     0BD0  0008               	return
  4931     0BD1                     __end_of_EUSART_Write:
  4932                           
  4933                           	psect	text9
  4934     0C23                     __ptext9:	
  4935 ;; *************** function _controlchoose *****************
  4936 ;; Defined at:
  4937 ;;		line 103 in file "main.c"
  4938 ;; Parameters:    Size  Location     Type
  4939 ;;		None
  4940 ;; Auto vars:     Size  Location     Type
  4941 ;;		None
  4942 ;; Return value:  Size  Location     Type
  4943 ;;                  1    wreg      void 
  4944 ;; Registers used:
  4945 ;;		wreg, status,2, status,0, pclath, cstack
  4946 ;; Tracked objects:
  4947 ;;		On entry : 1F/8
  4948 ;;		On exit  : 1F/8
  4949 ;;		Unchanged: 0/0
  4950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4951 ;;      Params:         0       0       0       0       0       0
  4952 ;;      Locals:         0       0       0       0       0       0
  4953 ;;      Temps:          0       0       0       0       0       0
  4954 ;;      Totals:         0       0       0       0       0       0
  4955 ;;Total ram usage:        0 bytes
  4956 ;; Hardware stack levels used: 1
  4957 ;; Hardware stack levels required when called: 7
  4958 ;; This function calls:
  4959 ;;		_TMR4_StartTimer
  4960 ;;		_fluxcontrol
  4961 ;;		_pwmcontrol
  4962 ;; This function is called by:
  4963 ;;		_main
  4964 ;; This function uses a non-reentrant model
  4965 ;;
  4966                           
  4967     0C23                     _controlchoose:	
  4968                           ;psect for function _controlchoose
  4969                           
  4970                           
  4971                           ;main.c: 104:     if (controlchoice == 1){
  4972                           
  4973                           ;incstack = 0
  4974                           ; Regs used in _controlchoose: [wreg+status,2+status,0+pclath+cstack]
  4975     0C23  0021               	movlb	1	; select bank1
  4976     0C24  034B               	decf	_controlchoice^(0+128),w
  4977     0C25  1D03               	btfss	3,2
  4978     0C26  2C2B               	goto	l2928
  4979                           
  4980                           ;main.c: 105:         pwmcontrol ();
  4981     0C27  3182  223E  318C   	fcall	_pwmcontrol
  4982                           
  4983                           ;main.c: 106:     } else if(controlchoice == 2){
  4984     0C2A  2C32               	goto	l2932
  4985     0C2B                     l2928:
  4986     0C2B  3002               	movlw	2
  4987     0C2C  064B               	xorwf	_controlchoice^(0+128),w
  4988     0C2D  1D03               	btfss	3,2
  4989     0C2E  2C32               	goto	l2932
  4990                           
  4991                           ;main.c: 107:         fluxcontrol ();
  4992     0C2F  3183  236D  318C   	fcall	_fluxcontrol
  4993     0C32                     l2932:
  4994                           
  4995                           ;main.c: 109:     TMR4_StartTimer();
  4996     0C32  318B  2356         	fcall	_TMR4_StartTimer
  4997     0C34  0008               	return
  4998     0C35                     __end_of_controlchoose:
  4999                           
  5000                           	psect	text10
  5001     023E                     __ptext10:	
  5002 ;; *************** function _pwmcontrol *****************
  5003 ;; Defined at:
  5004 ;;		line 66 in file "main.c"
  5005 ;; Parameters:    Size  Location     Type
  5006 ;;		None
  5007 ;; Auto vars:     Size  Location     Type
  5008 ;;		None
  5009 ;; Return value:  Size  Location     Type
  5010 ;;                  1    wreg      void 
  5011 ;; Registers used:
  5012 ;;		wreg, status,2, status,0, pclath, cstack
  5013 ;; Tracked objects:
  5014 ;;		On entry : 1F/1
  5015 ;;		On exit  : 0/0
  5016 ;;		Unchanged: 0/0
  5017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5018 ;;      Params:         0       0       0       0       0       0
  5019 ;;      Locals:         0       0       0       0       0       0
  5020 ;;      Temps:          0       0      12       0       0       0
  5021 ;;      Totals:         0       0      12       0       0       0
  5022 ;;Total ram usage:       12 bytes
  5023 ;; Hardware stack levels used: 1
  5024 ;; Hardware stack levels required when called: 6
  5025 ;; This function calls:
  5026 ;;		_EPWM1_LoadDutyValue
  5027 ;;		___atdiv
  5028 ;;		___tmul
  5029 ;; This function is called by:
  5030 ;;		_controlchoose
  5031 ;; This function uses a non-reentrant model
  5032 ;;
  5033                           
  5034     023E                     _pwmcontrol:	
  5035                           ;psect for function _pwmcontrol
  5036                           
  5037                           
  5038                           ;main.c: 67:     error = (ballset-balldist)*10;
  5039                           
  5040                           ;incstack = 0
  5041                           ; Regs used in _pwmcontrol: [wreg+status,2+status,0+pclath+cstack]
  5042     023E  082D               	movf	_balldist^(0+128),w
  5043     023F  022A               	subwf	_ballset^(0+128),w
  5044     0240  00E2               	movwf	??_pwmcontrol^(0+128)
  5045     0241  082B               	movf	(_ballset+1)^(0+128),w
  5046     0242  00E3               	movwf	(??_pwmcontrol^(0+128)+1)
  5047     0243  082E               	movf	(_balldist+1)^(0+128),w
  5048     0244  1C03               	skipc
  5049     0245  0F2E               	incfsz	(_balldist+1)^(0+128),w
  5050     0246  2A48               	goto	u2251
  5051     0247  2A49               	goto	u2252
  5052     0248                     u2251:
  5053     0248  02E3               	subwf	(??_pwmcontrol^(0+128)+1),f
  5054     0249                     u2252:
  5055     0249  082C               	movf	(_ballset+2)^(0+128),w
  5056     024A  00E4               	movwf	(??_pwmcontrol^(0+128)+2)
  5057     024B  082F               	movf	(_balldist+2)^(0+128),w
  5058     024C  1C03               	skipc
  5059     024D  0F2F               	incfsz	(_balldist+2)^(0+128),w
  5060     024E  2A50               	goto	u2253
  5061     024F  2A51               	goto	u2254
  5062     0250                     u2253:
  5063     0250  02E4               	subwf	(??_pwmcontrol^(0+128)+2),f
  5064     0251                     u2254:
  5065     0251  0862               	movf	??_pwmcontrol^(0+128),w
  5066     0252  00CD               	movwf	___tmul@multiplier^(0+128)
  5067     0253  0863               	movf	(??_pwmcontrol+1)^(0+128),w
  5068     0254  00CE               	movwf	(___tmul@multiplier+1)^(0+128)
  5069     0255  0864               	movf	(??_pwmcontrol+2)^(0+128),w
  5070     0256  00CF               	movwf	(___tmul@multiplier+2)^(0+128)
  5071     0257  300A               	movlw	10
  5072     0258  00D0               	movwf	___tmul@multiplicand^(0+128)
  5073     0259  3000               	movlw	0
  5074     025A  00D1               	movwf	(___tmul@multiplicand+1)^(0+128)
  5075     025B  3000               	movlw	0
  5076     025C  00D2               	movwf	(___tmul@multiplicand+2)^(0+128)
  5077     025D  318D  2541  3182   	fcall	___tmul
  5078     0260  084D               	movf	?___tmul^(0+128),w
  5079     0261  00B0               	movwf	_error^(0+128)
  5080     0262  084E               	movf	(?___tmul+1)^(0+128),w
  5081     0263  00B1               	movwf	(_error+1)^(0+128)
  5082     0264  084F               	movf	(?___tmul+2)^(0+128),w
  5083     0265  00B2               	movwf	(_error+2)^(0+128)
  5084                           
  5085                           ;main.c: 68:     if(error > 150 || error < 150){
  5086     0266  1BB2               	btfsc	(_error+2)^(0+128),7
  5087     0267  2A72               	goto	l2756
  5088     0268  0832               	movf	(_error+2)^(0+128),w
  5089     0269  1D03               	btfss	3,2
  5090     026A  2A7F               	goto	l2758
  5091     026B  0831               	movf	(_error+1)^(0+128),w
  5092     026C  1D03               	btfss	3,2
  5093     026D  2A7F               	goto	l2758
  5094     026E  3097               	movlw	151
  5095     026F  0230               	subwf	_error^(0+128),w
  5096     0270  1803               	btfsc	3,0
  5097     0271  2A7F               	goto	l2758
  5098     0272                     l2756:
  5099     0272  0021               	movlb	1	; select bank1
  5100     0273  1BB2               	btfsc	(_error+2)^(0+128),7
  5101     0274  2A7F               	goto	l2758
  5102     0275  0832               	movf	(_error+2)^(0+128),w
  5103     0276  1D03               	btfss	3,2
  5104     0277  0008               	return
  5105     0278  0831               	movf	(_error+1)^(0+128),w
  5106     0279  1D03               	btfss	3,2
  5107     027A  0008               	return
  5108     027B  3096               	movlw	150
  5109     027C  0230               	subwf	_error^(0+128),w
  5110     027D  1803               	btfsc	3,0
  5111     027E  0008               	return
  5112     027F                     l2758:
  5113     027F  0021               	movlb	1	; select bank1
  5114     0280  0830               	movf	_error^(0+128),w
  5115     0281  00CD               	movwf	___tmul@multiplier^(0+128)
  5116     0282  0831               	movf	(_error+1)^(0+128),w
  5117     0283  00CE               	movwf	(___tmul@multiplier+1)^(0+128)
  5118     0284  0832               	movf	(_error+2)^(0+128),w
  5119     0285  00CF               	movwf	(___tmul@multiplier+2)^(0+128)
  5120     0286  3058               	movlw	88
  5121     0287  00D0               	movwf	___tmul@multiplicand^(0+128)
  5122     0288  3002               	movlw	2
  5123     0289  00D1               	movwf	(___tmul@multiplicand+1)^(0+128)
  5124     028A  3000               	movlw	0
  5125     028B  00D2               	movwf	(___tmul@multiplicand+2)^(0+128)
  5126     028C  318D  2541  3182   	fcall	___tmul
  5127     028F  084D               	movf	?___tmul^(0+128),w
  5128     0290  07A7               	addwf	_outputsum^(0+128),f
  5129     0291  084E               	movf	(?___tmul+1)^(0+128),w
  5130     0292  3DA8               	addwfc	(_outputsum+1)^(0+128),f
  5131     0293  084F               	movf	(?___tmul+2)^(0+128),w
  5132     0294  3DA9               	addwfc	(_outputsum+2)^(0+128),f
  5133                           
  5134                           ;main.c: 70:         if (outputsum > 1000) outputsum = 1000;
  5135     0295  1BA9               	btfsc	(_outputsum+2)^(0+128),7
  5136     0296  2AA7               	goto	l2764
  5137     0297  0829               	movf	(_outputsum+2)^(0+128),w
  5138     0298  1D03               	btfss	3,2
  5139     0299  2AA0               	goto	l2762
  5140     029A  30E9               	movlw	233
  5141     029B  0227               	subwf	_outputsum^(0+128),w
  5142     029C  3003               	movlw	3
  5143     029D  3B28               	subwfb	(_outputsum+1)^(0+128),w
  5144     029E  1C03               	btfss	3,0
  5145     029F  2AA7               	goto	l2764
  5146     02A0                     l2762:
  5147     02A0  30E8               	movlw	232
  5148     02A1  0021               	movlb	1	; select bank1
  5149     02A2  00A7               	movwf	_outputsum^(0+128)
  5150     02A3  3003               	movlw	3
  5151     02A4  00A8               	movwf	(_outputsum+1)^(0+128)
  5152     02A5  3000               	movlw	0
  5153     02A6  2AB8               	goto	L3
  5154     02A7                     l2764:
  5155     02A7  0021               	movlb	1	; select bank1
  5156     02A8  1FA9               	btfss	(_outputsum+2)^(0+128),7
  5157     02A9  2AB9               	goto	l2768
  5158     02AA  3018               	movlw	24
  5159     02AB  0227               	subwf	_outputsum^(0+128),w
  5160     02AC  30FC               	movlw	252
  5161     02AD  3B28               	subwfb	(_outputsum+1)^(0+128),w
  5162     02AE  30FF               	movlw	255
  5163     02AF  3B29               	subwfb	(_outputsum+2)^(0+128),w
  5164     02B0  1803               	btfsc	3,0
  5165     02B1  2AB9               	goto	l2768
  5166     02B2  3018               	movlw	24
  5167     02B3  0021               	movlb	1	; select bank1
  5168     02B4  00A7               	movwf	_outputsum^(0+128)
  5169     02B5  30FC               	movlw	252
  5170     02B6  00A8               	movwf	(_outputsum+1)^(0+128)
  5171     02B7  30FF               	movlw	255
  5172     02B8                     L3:
  5173     02B8  00A9               	movwf	(_outputsum+2)^(0+128)
  5174     02B9                     l2768:
  5175                           
  5176                           ;main.c: 72:         outpre = (kpp*error + outputsum + (kdp*(error-errorp)+outpre*10)/10
      +                          );
  5177     02B9  0021               	movlb	1	; select bank1
  5178     02BA  0827               	movf	_outputsum^(0+128),w
  5179     02BB  00E2               	movwf	??_pwmcontrol^(0+128)
  5180     02BC  0828               	movf	(_outputsum+1)^(0+128),w
  5181     02BD  00E3               	movwf	(??_pwmcontrol^(0+128)+1)
  5182     02BE  0829               	movf	(_outputsum+2)^(0+128),w
  5183     02BF  00E4               	movwf	(??_pwmcontrol^(0+128)+2)
  5184     02C0  300A               	movlw	10
  5185     02C1  00D6               	movwf	___atdiv@divisor^(0+128)
  5186     02C2  3000               	movlw	0
  5187     02C3  00D7               	movwf	(___atdiv@divisor+1)^(0+128)
  5188     02C4  3000               	movlw	0
  5189     02C5  00D8               	movwf	(___atdiv@divisor+2)^(0+128)
  5190     02C6  0020               	movlb	0	; select bank0
  5191     02C7  085E               	movf	_errorp,w
  5192     02C8  0021               	movlb	1	; select bank1
  5193     02C9  00CD               	movwf	___tmul@multiplier^(0+128)
  5194     02CA  0020               	movlb	0	; select bank0
  5195     02CB  085F               	movf	_errorp+1,w
  5196     02CC  0021               	movlb	1	; select bank1
  5197     02CD  00CE               	movwf	(___tmul@multiplier+1)^(0+128)
  5198     02CE  0020               	movlb	0	; select bank0
  5199     02CF  0860               	movf	_errorp+2,w
  5200     02D0  0021               	movlb	1	; select bank1
  5201     02D1  00CF               	movwf	(___tmul@multiplier+2)^(0+128)
  5202     02D2  30FB               	movlw	251
  5203     02D3  00D0               	movwf	___tmul@multiplicand^(0+128)
  5204     02D4  30FF               	movlw	255
  5205     02D5  00D1               	movwf	(___tmul@multiplicand+1)^(0+128)
  5206     02D6  30FF               	movlw	255
  5207     02D7  00D2               	movwf	(___tmul@multiplicand+2)^(0+128)
  5208     02D8  318D  2541  3182   	fcall	___tmul
  5209     02DB  084D               	movf	?___tmul^(0+128),w
  5210     02DC  00E5               	movwf	(??_pwmcontrol+3)^(0+128)
  5211     02DD  084E               	movf	(?___tmul+1)^(0+128),w
  5212     02DE  00E6               	movwf	((??_pwmcontrol+3)^(0+128)+1)
  5213     02DF  084F               	movf	(?___tmul+2)^(0+128),w
  5214     02E0  00E7               	movwf	((??_pwmcontrol+3)^(0+128)+2)
  5215     02E1  0830               	movf	_error^(0+128),w
  5216     02E2  00CD               	movwf	___tmul@multiplier^(0+128)
  5217     02E3  0831               	movf	(_error+1)^(0+128),w
  5218     02E4  00CE               	movwf	(___tmul@multiplier+1)^(0+128)
  5219     02E5  0832               	movf	(_error+2)^(0+128),w
  5220     02E6  00CF               	movwf	(___tmul@multiplier+2)^(0+128)
  5221     02E7  3005               	movlw	5
  5222     02E8  00D0               	movwf	___tmul@multiplicand^(0+128)
  5223     02E9  3000               	movlw	0
  5224     02EA  00D1               	movwf	(___tmul@multiplicand+1)^(0+128)
  5225     02EB  3000               	movlw	0
  5226     02EC  00D2               	movwf	(___tmul@multiplicand+2)^(0+128)
  5227     02ED  318D  2541  3182   	fcall	___tmul
  5228     02F0  084D               	movf	?___tmul^(0+128),w
  5229     02F1  00E8               	movwf	(??_pwmcontrol+6)^(0+128)
  5230     02F2  084E               	movf	(?___tmul+1)^(0+128),w
  5231     02F3  00E9               	movwf	((??_pwmcontrol+6)^(0+128)+1)
  5232     02F4  084F               	movf	(?___tmul+2)^(0+128),w
  5233     02F5  00EA               	movwf	((??_pwmcontrol+6)^(0+128)+2)
  5234     02F6  0824               	movf	_outpre^(0+128),w
  5235     02F7  00CD               	movwf	___tmul@multiplier^(0+128)
  5236     02F8  0825               	movf	(_outpre+1)^(0+128),w
  5237     02F9  00CE               	movwf	(___tmul@multiplier+1)^(0+128)
  5238     02FA  0826               	movf	(_outpre+2)^(0+128),w
  5239     02FB  00CF               	movwf	(___tmul@multiplier+2)^(0+128)
  5240     02FC  300A               	movlw	10
  5241     02FD  00D0               	movwf	___tmul@multiplicand^(0+128)
  5242     02FE  3000               	movlw	0
  5243     02FF  00D1               	movwf	(___tmul@multiplicand+1)^(0+128)
  5244     0300  3000               	movlw	0
  5245     0301  00D2               	movwf	(___tmul@multiplicand+2)^(0+128)
  5246     0302  318D  2541  3182   	fcall	___tmul
  5247     0305  084D               	movf	?___tmul^(0+128),w
  5248     0306  07E8               	addwf	(??_pwmcontrol+6)^(0+128),f
  5249     0307  084E               	movf	(?___tmul+1)^(0+128),w
  5250     0308  3DE9               	addwfc	((??_pwmcontrol+6)^(0+128)+1),f
  5251     0309  084F               	movf	(?___tmul+2)^(0+128),w
  5252     030A  3DEA               	addwfc	((??_pwmcontrol+6)^(0+128)+2),f
  5253     030B  0868               	movf	(??_pwmcontrol+6)^(0+128),w
  5254     030C  07E5               	addwf	(??_pwmcontrol+3)^(0+128),f
  5255     030D  0869               	movf	(??_pwmcontrol+7)^(0+128),w
  5256     030E  3DE6               	addwfc	((??_pwmcontrol+3)^(0+128)+1),f
  5257     030F  086A               	movf	(??_pwmcontrol+8)^(0+128),w
  5258     0310  3DE7               	addwfc	((??_pwmcontrol+3)^(0+128)+2),f
  5259     0311  0865               	movf	(??_pwmcontrol+3)^(0+128),w
  5260     0312  00D9               	movwf	___atdiv@dividend^(0+128)
  5261     0313  0866               	movf	(??_pwmcontrol+4)^(0+128),w
  5262     0314  00DA               	movwf	(___atdiv@dividend+1)^(0+128)
  5263     0315  0867               	movf	(??_pwmcontrol+5)^(0+128),w
  5264     0316  00DB               	movwf	(___atdiv@dividend+2)^(0+128)
  5265     0317  318E  26B7  3182   	fcall	___atdiv
  5266     031A  0856               	movf	?___atdiv^(0+128),w
  5267     031B  00EB               	movwf	(??_pwmcontrol+9)^(0+128)
  5268     031C  0857               	movf	(?___atdiv+1)^(0+128),w
  5269     031D  00EC               	movwf	((??_pwmcontrol+9)^(0+128)+1)
  5270     031E  0858               	movf	(?___atdiv+2)^(0+128),w
  5271     031F  00ED               	movwf	((??_pwmcontrol+9)^(0+128)+2)
  5272     0320  0830               	movf	_error^(0+128),w
  5273     0321  00CD               	movwf	___tmul@multiplier^(0+128)
  5274     0322  0831               	movf	(_error+1)^(0+128),w
  5275     0323  00CE               	movwf	(___tmul@multiplier+1)^(0+128)
  5276     0324  0832               	movf	(_error+2)^(0+128),w
  5277     0325  00CF               	movwf	(___tmul@multiplier+2)^(0+128)
  5278     0326  3036               	movlw	54
  5279     0327  00D0               	movwf	___tmul@multiplicand^(0+128)
  5280     0328  3001               	movlw	1
  5281     0329  00D1               	movwf	(___tmul@multiplicand+1)^(0+128)
  5282     032A  3000               	movlw	0
  5283     032B  00D2               	movwf	(___tmul@multiplicand+2)^(0+128)
  5284     032C  318D  2541  3182   	fcall	___tmul
  5285     032F  084D               	movf	?___tmul^(0+128),w
  5286     0330  07EB               	addwf	(??_pwmcontrol+9)^(0+128),f
  5287     0331  084E               	movf	(?___tmul+1)^(0+128),w
  5288     0332  3DEC               	addwfc	((??_pwmcontrol+9)^(0+128)+1),f
  5289     0333  084F               	movf	(?___tmul+2)^(0+128),w
  5290     0334  3DED               	addwfc	((??_pwmcontrol+9)^(0+128)+2),f
  5291     0335  086B               	movf	(??_pwmcontrol+9)^(0+128),w
  5292     0336  07E2               	addwf	??_pwmcontrol^(0+128),f
  5293     0337  086C               	movf	(??_pwmcontrol+10)^(0+128),w
  5294     0338  3DE3               	addwfc	(??_pwmcontrol^(0+128)+1),f
  5295     0339  086D               	movf	(??_pwmcontrol+11)^(0+128),w
  5296     033A  3DE4               	addwfc	(??_pwmcontrol^(0+128)+2),f
  5297     033B  0862               	movf	??_pwmcontrol^(0+128),w
  5298     033C  00A4               	movwf	_outpre^(0+128)
  5299     033D  0863               	movf	(??_pwmcontrol+1)^(0+128),w
  5300     033E  00A5               	movwf	(_outpre+1)^(0+128)
  5301     033F  0864               	movf	(??_pwmcontrol+2)^(0+128),w
  5302     0340  00A6               	movwf	(_outpre+2)^(0+128)
  5303                           
  5304                           ;main.c: 73:         if(outpre > 1023) output = 1023;
  5305     0341  1BA6               	btfsc	(_outpre+2)^(0+128),7
  5306     0342  2B50               	goto	l597
  5307     0343  0826               	movf	(_outpre+2)^(0+128),w
  5308     0344  1D03               	btfss	3,2
  5309     0345  2B4A               	goto	l2772
  5310     0346  3004               	movlw	4
  5311     0347  0225               	subwf	(_outpre+1)^(0+128),w
  5312     0348  1C03               	btfss	3,0
  5313     0349  2B50               	goto	l597
  5314     034A                     l2772:
  5315     034A  30FF               	movlw	255
  5316     034B  0021               	movlb	1	; select bank1
  5317     034C  00C1               	movwf	_output^(0+128)
  5318     034D  3003               	movlw	3
  5319     034E  00C2               	movwf	(_output^(0+128)+1)
  5320     034F  2B5A               	goto	l2778
  5321     0350                     l597:	
  5322                           ;main.c: 74:         else if(outpre <0) output= 0;
  5323                           
  5324     0350  0021               	movlb	1	; select bank1
  5325     0351  1FA6               	btfss	(_outpre+2)^(0+128),7
  5326     0352  2B56               	goto	l2776
  5327     0353  01C1               	clrf	_output^(0+128)
  5328     0354  01C2               	clrf	(_output+1)^(0+128)
  5329     0355  2B5A               	goto	l2778
  5330     0356                     l2776:
  5331     0356  0825               	movf	(_outpre+1)^(0+128),w
  5332     0357  00C2               	movwf	(_output+1)^(0+128)
  5333     0358  0824               	movf	_outpre^(0+128),w
  5334     0359  00C1               	movwf	_output^(0+128)
  5335     035A                     l2778:
  5336                           
  5337                           ;main.c: 76:         EPWM1_LoadDutyValue(output);
  5338     035A  0842               	movf	(_output+1)^(0+128),w
  5339     035B  00CE               	movwf	(EPWM1_LoadDutyValue@dutyValue+1)^(0+128)
  5340     035C  0841               	movf	_output^(0+128),w
  5341     035D  00CD               	movwf	EPWM1_LoadDutyValue@dutyValue^(0+128)
  5342     035E  318C  24C3         	fcall	_EPWM1_LoadDutyValue
  5343                           
  5344                           ;main.c: 77:         errorp = error;
  5345     0360  0021               	movlb	1	; select bank1
  5346     0361  0830               	movf	_error^(0+128),w
  5347     0362  0020               	movlb	0	; select bank0
  5348     0363  00DE               	movwf	_errorp
  5349     0364  0021               	movlb	1	; select bank1
  5350     0365  0831               	movf	(_error+1)^(0+128),w
  5351     0366  0020               	movlb	0	; select bank0
  5352     0367  00DF               	movwf	_errorp+1
  5353     0368  0021               	movlb	1	; select bank1
  5354     0369  0832               	movf	(_error+2)^(0+128),w
  5355     036A  0020               	movlb	0	; select bank0
  5356     036B  00E0               	movwf	_errorp+2
  5357     036C  0008               	return
  5358     036D                     __end_of_pwmcontrol:
  5359                           
  5360                           	psect	text11
  5361     036D                     __ptext11:	
  5362 ;; *************** function _fluxcontrol *****************
  5363 ;; Defined at:
  5364 ;;		line 51 in file "main.c"
  5365 ;; Parameters:    Size  Location     Type
  5366 ;;		None
  5367 ;; Auto vars:     Size  Location     Type
  5368 ;;		None
  5369 ;; Return value:  Size  Location     Type
  5370 ;;                  1    wreg      void 
  5371 ;; Registers used:
  5372 ;;		wreg, status,2, status,0, pclath, cstack
  5373 ;; Tracked objects:
  5374 ;;		On entry : 1F/1
  5375 ;;		On exit  : 0/0
  5376 ;;		Unchanged: 0/0
  5377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5378 ;;      Params:         0       0       0       0       0       0
  5379 ;;      Locals:         0       0       0       0       0       0
  5380 ;;      Temps:          0       0       6       0       0       0
  5381 ;;      Totals:         0       0       6       0       0       0
  5382 ;;Total ram usage:        6 bytes
  5383 ;; Hardware stack levels used: 1
  5384 ;; Hardware stack levels required when called: 6
  5385 ;; This function calls:
  5386 ;;		___atdiv
  5387 ;;		___tmul
  5388 ;; This function is called by:
  5389 ;;		_controlchoose
  5390 ;; This function uses a non-reentrant model
  5391 ;;
  5392                           
  5393     036D                     _fluxcontrol:	
  5394                           ;psect for function _fluxcontrol
  5395                           
  5396                           
  5397                           ;main.c: 52:     error = (ballset-balldist)*100;
  5398                           
  5399                           ;incstack = 0
  5400                           ; Regs used in _fluxcontrol: [wreg+status,2+status,0+pclath+cstack]
  5401     036D  082D               	movf	_balldist^(0+128),w
  5402     036E  022A               	subwf	_ballset^(0+128),w
  5403     036F  00E2               	movwf	??_fluxcontrol^(0+128)
  5404     0370  082B               	movf	(_ballset+1)^(0+128),w
  5405     0371  00E3               	movwf	(??_fluxcontrol^(0+128)+1)
  5406     0372  082E               	movf	(_balldist+1)^(0+128),w
  5407     0373  1C03               	skipc
  5408     0374  0F2E               	incfsz	(_balldist+1)^(0+128),w
  5409     0375  2B77               	goto	u2181
  5410     0376  2B78               	goto	u2182
  5411     0377                     u2181:
  5412     0377  02E3               	subwf	(??_fluxcontrol^(0+128)+1),f
  5413     0378                     u2182:
  5414     0378  082C               	movf	(_ballset+2)^(0+128),w
  5415     0379  00E4               	movwf	(??_fluxcontrol^(0+128)+2)
  5416     037A  082F               	movf	(_balldist+2)^(0+128),w
  5417     037B  1C03               	skipc
  5418     037C  0F2F               	incfsz	(_balldist+2)^(0+128),w
  5419     037D  2B7F               	goto	u2183
  5420     037E  2B80               	goto	u2184
  5421     037F                     u2183:
  5422     037F  02E4               	subwf	(??_fluxcontrol^(0+128)+2),f
  5423     0380                     u2184:
  5424     0380  0862               	movf	??_fluxcontrol^(0+128),w
  5425     0381  00CD               	movwf	___tmul@multiplier^(0+128)
  5426     0382  0863               	movf	(??_fluxcontrol+1)^(0+128),w
  5427     0383  00CE               	movwf	(___tmul@multiplier+1)^(0+128)
  5428     0384  0864               	movf	(??_fluxcontrol+2)^(0+128),w
  5429     0385  00CF               	movwf	(___tmul@multiplier+2)^(0+128)
  5430     0386  3064               	movlw	100
  5431     0387  00D0               	movwf	___tmul@multiplicand^(0+128)
  5432     0388  3000               	movlw	0
  5433     0389  00D1               	movwf	(___tmul@multiplicand+1)^(0+128)
  5434     038A  3000               	movlw	0
  5435     038B  00D2               	movwf	(___tmul@multiplicand+2)^(0+128)
  5436     038C  318D  2541  3183   	fcall	___tmul
  5437     038F  084D               	movf	?___tmul^(0+128),w
  5438     0390  00B0               	movwf	_error^(0+128)
  5439     0391  084E               	movf	(?___tmul+1)^(0+128),w
  5440     0392  00B1               	movwf	(_error+1)^(0+128)
  5441     0393  084F               	movf	(?___tmul+2)^(0+128),w
  5442     0394  00B2               	movwf	(_error+2)^(0+128)
  5443                           
  5444                           ;main.c: 53:     if(error > 150 || error < 150){
  5445     0395  1BB2               	btfsc	(_error+2)^(0+128),7
  5446     0396  2BA1               	goto	l2730
  5447     0397  0832               	movf	(_error+2)^(0+128),w
  5448     0398  1D03               	btfss	3,2
  5449     0399  2BAE               	goto	l2732
  5450     039A  0831               	movf	(_error+1)^(0+128),w
  5451     039B  1D03               	btfss	3,2
  5452     039C  2BAE               	goto	l2732
  5453     039D  3097               	movlw	151
  5454     039E  0230               	subwf	_error^(0+128),w
  5455     039F  1803               	btfsc	3,0
  5456     03A0  2BAE               	goto	l2732
  5457     03A1                     l2730:
  5458     03A1  0021               	movlb	1	; select bank1
  5459     03A2  1BB2               	btfsc	(_error+2)^(0+128),7
  5460     03A3  2BAE               	goto	l2732
  5461     03A4  0832               	movf	(_error+2)^(0+128),w
  5462     03A5  1D03               	btfss	3,2
  5463     03A6  0008               	return
  5464     03A7  0831               	movf	(_error+1)^(0+128),w
  5465     03A8  1D03               	btfss	3,2
  5466     03A9  0008               	return
  5467     03AA  3096               	movlw	150
  5468     03AB  0230               	subwf	_error^(0+128),w
  5469     03AC  1803               	btfsc	3,0
  5470     03AD  0008               	return
  5471     03AE                     l2732:
  5472     03AE  3064               	movlw	100
  5473     03AF  0021               	movlb	1	; select bank1
  5474     03B0  00D6               	movwf	___atdiv@divisor^(0+128)
  5475     03B1  3000               	movlw	0
  5476     03B2  00D7               	movwf	(___atdiv@divisor+1)^(0+128)
  5477     03B3  3000               	movlw	0
  5478     03B4  00D8               	movwf	(___atdiv@divisor+2)^(0+128)
  5479     03B5  0830               	movf	_error^(0+128),w
  5480     03B6  00CD               	movwf	___tmul@multiplier^(0+128)
  5481     03B7  0831               	movf	(_error+1)^(0+128),w
  5482     03B8  00CE               	movwf	(___tmul@multiplier+1)^(0+128)
  5483     03B9  0832               	movf	(_error+2)^(0+128),w
  5484     03BA  00CF               	movwf	(___tmul@multiplier+2)^(0+128)
  5485     03BB  3018               	movlw	24
  5486     03BC  00D0               	movwf	___tmul@multiplicand^(0+128)
  5487     03BD  3001               	movlw	1
  5488     03BE  00D1               	movwf	(___tmul@multiplicand+1)^(0+128)
  5489     03BF  3000               	movlw	0
  5490     03C0  00D2               	movwf	(___tmul@multiplicand+2)^(0+128)
  5491     03C1  318D  2541  3183   	fcall	___tmul
  5492     03C4  084D               	movf	?___tmul^(0+128),w
  5493     03C5  00D9               	movwf	___atdiv@dividend^(0+128)
  5494     03C6  084E               	movf	(?___tmul+1)^(0+128),w
  5495     03C7  00DA               	movwf	(___atdiv@dividend+1)^(0+128)
  5496     03C8  084F               	movf	(?___tmul+2)^(0+128),w
  5497     03C9  00DB               	movwf	(___atdiv@dividend+2)^(0+128)
  5498     03CA  318E  26B7  3183   	fcall	___atdiv
  5499     03CD  0856               	movf	?___atdiv^(0+128),w
  5500     03CE  07A7               	addwf	_outputsum^(0+128),f
  5501     03CF  0857               	movf	(?___atdiv+1)^(0+128),w
  5502     03D0  3DA8               	addwfc	(_outputsum+1)^(0+128),f
  5503     03D1  0858               	movf	(?___atdiv+2)^(0+128),w
  5504     03D2  3DA9               	addwfc	(_outputsum+2)^(0+128),f
  5505                           
  5506                           ;main.c: 55:         if (outputsum > 4500) outputsum = 4500;
  5507     03D3  1BA9               	btfsc	(_outputsum+2)^(0+128),7
  5508     03D4  2BE5               	goto	l2738
  5509     03D5  0829               	movf	(_outputsum+2)^(0+128),w
  5510     03D6  1D03               	btfss	3,2
  5511     03D7  2BDE               	goto	l2736
  5512     03D8  3095               	movlw	149
  5513     03D9  0227               	subwf	_outputsum^(0+128),w
  5514     03DA  3011               	movlw	17
  5515     03DB  3B28               	subwfb	(_outputsum+1)^(0+128),w
  5516     03DC  1C03               	btfss	3,0
  5517     03DD  2BE5               	goto	l2738
  5518     03DE                     l2736:
  5519     03DE  3094               	movlw	148
  5520     03DF  0021               	movlb	1	; select bank1
  5521     03E0  00A7               	movwf	_outputsum^(0+128)
  5522     03E1  3011               	movlw	17
  5523     03E2  00A8               	movwf	(_outputsum+1)^(0+128)
  5524     03E3  3000               	movlw	0
  5525     03E4  2BF6               	goto	L4
  5526     03E5                     l2738:
  5527     03E5  0021               	movlb	1	; select bank1
  5528     03E6  1FA9               	btfss	(_outputsum+2)^(0+128),7
  5529     03E7  2BF7               	goto	l2742
  5530     03E8  3018               	movlw	24
  5531     03E9  0227               	subwf	_outputsum^(0+128),w
  5532     03EA  30FC               	movlw	252
  5533     03EB  3B28               	subwfb	(_outputsum+1)^(0+128),w
  5534     03EC  30FF               	movlw	255
  5535     03ED  3B29               	subwfb	(_outputsum+2)^(0+128),w
  5536     03EE  1803               	btfsc	3,0
  5537     03EF  2BF7               	goto	l2742
  5538     03F0  3018               	movlw	24
  5539     03F1  0021               	movlb	1	; select bank1
  5540     03F2  00A7               	movwf	_outputsum^(0+128)
  5541     03F3  30FC               	movlw	252
  5542     03F4  00A8               	movwf	(_outputsum+1)^(0+128)
  5543     03F5  30FF               	movlw	255
  5544     03F6                     L4:
  5545     03F6  00A9               	movwf	(_outputsum+2)^(0+128)
  5546     03F7                     l2742:
  5547                           
  5548                           ;main.c: 57:         outpre = ((kpf*error + outputsum)/100)+outpre;
  5549     03F7  3064               	movlw	100
  5550     03F8  0021               	movlb	1	; select bank1
  5551     03F9  00D6               	movwf	___atdiv@divisor^(0+128)
  5552     03FA  3000               	movlw	0
  5553     03FB  00D7               	movwf	(___atdiv@divisor+1)^(0+128)
  5554     03FC  3000               	movlw	0
  5555     03FD  00D8               	movwf	(___atdiv@divisor+2)^(0+128)
  5556     03FE  0830               	movf	_error^(0+128),w
  5557     03FF  00CD               	movwf	___tmul@multiplier^(0+128)
  5558     0400  0831               	movf	(_error+1)^(0+128),w
  5559     0401  00CE               	movwf	(___tmul@multiplier+1)^(0+128)
  5560     0402  0832               	movf	(_error+2)^(0+128),w
  5561     0403  00CF               	movwf	(___tmul@multiplier+2)^(0+128)
  5562     0404  30C8               	movlw	200
  5563     0405  00D0               	movwf	___tmul@multiplicand^(0+128)
  5564     0406  3000               	movlw	0
  5565     0407  00D1               	movwf	(___tmul@multiplicand+1)^(0+128)
  5566     0408  3000               	movlw	0
  5567     0409  00D2               	movwf	(___tmul@multiplicand+2)^(0+128)
  5568     040A  318D  2541  3183   	fcall	___tmul
  5569     040D  084D               	movf	?___tmul^(0+128),w
  5570     040E  0727               	addwf	_outputsum^(0+128),w
  5571     040F  00E2               	movwf	??_fluxcontrol^(0+128)
  5572     0410  084E               	movf	(?___tmul+1)^(0+128),w
  5573     0411  3D28               	addwfc	(_outputsum+1)^(0+128),w
  5574     0412  00E3               	movwf	(??_fluxcontrol^(0+128)+1)
  5575     0413  084F               	movf	(?___tmul+2)^(0+128),w
  5576     0414  3D29               	addwfc	(_outputsum+2)^(0+128),w
  5577     0415  00E4               	movwf	(??_fluxcontrol^(0+128)+2)
  5578     0416  0862               	movf	??_fluxcontrol^(0+128),w
  5579     0417  00D9               	movwf	___atdiv@dividend^(0+128)
  5580     0418  0863               	movf	(??_fluxcontrol+1)^(0+128),w
  5581     0419  00DA               	movwf	(___atdiv@dividend+1)^(0+128)
  5582     041A  0864               	movf	(??_fluxcontrol+2)^(0+128),w
  5583     041B  00DB               	movwf	(___atdiv@dividend+2)^(0+128)
  5584     041C  318E  26B7  3183   	fcall	___atdiv
  5585     041F  0856               	movf	?___atdiv^(0+128),w
  5586     0420  0724               	addwf	_outpre^(0+128),w
  5587     0421  00E5               	movwf	(??_fluxcontrol+3)^(0+128)
  5588     0422  0857               	movf	(?___atdiv+1)^(0+128),w
  5589     0423  3D25               	addwfc	(_outpre+1)^(0+128),w
  5590     0424  00E6               	movwf	((??_fluxcontrol+3)^(0+128)+1)
  5591     0425  0858               	movf	(?___atdiv+2)^(0+128),w
  5592     0426  3D26               	addwfc	(_outpre+2)^(0+128),w
  5593     0427  00E7               	movwf	((??_fluxcontrol+3)^(0+128)+2)
  5594     0428  0865               	movf	(??_fluxcontrol+3)^(0+128),w
  5595     0429  00A4               	movwf	_outpre^(0+128)
  5596     042A  0866               	movf	(??_fluxcontrol+4)^(0+128),w
  5597     042B  00A5               	movwf	(_outpre+1)^(0+128)
  5598     042C  0867               	movf	(??_fluxcontrol+5)^(0+128),w
  5599     042D  00A6               	movwf	(_outpre+2)^(0+128)
  5600                           
  5601                           ;main.c: 58:         if (outpre > 380) output = 380;
  5602     042E  1BA6               	btfsc	(_outpre+2)^(0+128),7
  5603     042F  2C3F               	goto	l584
  5604     0430  0826               	movf	(_outpre+2)^(0+128),w
  5605     0431  1D03               	btfss	3,2
  5606     0432  2C39               	goto	l2746
  5607     0433  307D               	movlw	125
  5608     0434  0224               	subwf	_outpre^(0+128),w
  5609     0435  3001               	movlw	1
  5610     0436  3B25               	subwfb	(_outpre+1)^(0+128),w
  5611     0437  1C03               	btfss	3,0
  5612     0438  2C3F               	goto	l584
  5613     0439                     l2746:
  5614     0439  307C               	movlw	124
  5615     043A  0021               	movlb	1	; select bank1
  5616     043B  00C1               	movwf	_output^(0+128)
  5617     043C  3001               	movlw	1
  5618     043D  00C2               	movwf	(_output^(0+128)+1)
  5619     043E  2C49               	goto	l585
  5620     043F                     l584:	
  5621                           ;main.c: 59:         else if(outpre <0 ) output = 0;
  5622                           
  5623     043F  0021               	movlb	1	; select bank1
  5624     0440  1FA6               	btfss	(_outpre+2)^(0+128),7
  5625     0441  2C45               	goto	l2750
  5626     0442  01C1               	clrf	_output^(0+128)
  5627     0443  01C2               	clrf	(_output+1)^(0+128)
  5628     0444  2C49               	goto	l585
  5629     0445                     l2750:
  5630     0445  0825               	movf	(_outpre+1)^(0+128),w
  5631     0446  00C2               	movwf	(_output+1)^(0+128)
  5632     0447  0824               	movf	_outpre^(0+128),w
  5633     0448  00C1               	movwf	_output^(0+128)
  5634     0449                     l585:
  5635                           
  5636                           ;main.c: 61:         errorp = error;
  5637     0449  0830               	movf	_error^(0+128),w
  5638     044A  0020               	movlb	0	; select bank0
  5639     044B  00DE               	movwf	_errorp
  5640     044C  0021               	movlb	1	; select bank1
  5641     044D  0831               	movf	(_error+1)^(0+128),w
  5642     044E  0020               	movlb	0	; select bank0
  5643     044F  00DF               	movwf	_errorp+1
  5644     0450  0021               	movlb	1	; select bank1
  5645     0451  0832               	movf	(_error+2)^(0+128),w
  5646     0452  0020               	movlb	0	; select bank0
  5647     0453  00E0               	movwf	_errorp+2
  5648     0454  0008               	return
  5649     0455                     __end_of_fluxcontrol:
  5650                           
  5651                           	psect	text12
  5652     0D41                     __ptext12:	
  5653 ;; *************** function ___tmul *****************
  5654 ;; Defined at:
  5655 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul24.c"
  5656 ;; Parameters:    Size  Location     Type
  5657 ;;  multiplier      3    0[BANK1 ] unsigned um
  5658 ;;  multiplicand    3    3[BANK1 ] unsigned um
  5659 ;; Auto vars:     Size  Location     Type
  5660 ;;  product         3    6[BANK1 ] unsigned um
  5661 ;; Return value:  Size  Location     Type
  5662 ;;                  3    0[BANK1 ] unsigned um
  5663 ;; Registers used:
  5664 ;;		wreg, status,2, status,0
  5665 ;; Tracked objects:
  5666 ;;		On entry : 1F/1
  5667 ;;		On exit  : 1F/1
  5668 ;;		Unchanged: 0/0
  5669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5670 ;;      Params:         0       0       6       0       0       0
  5671 ;;      Locals:         0       0       3       0       0       0
  5672 ;;      Temps:          0       0       0       0       0       0
  5673 ;;      Totals:         0       0       9       0       0       0
  5674 ;;Total ram usage:        9 bytes
  5675 ;; Hardware stack levels used: 1
  5676 ;; Hardware stack levels required when called: 5
  5677 ;; This function calls:
  5678 ;;		Nothing
  5679 ;; This function is called by:
  5680 ;;		_fluxcontrol
  5681 ;;		_pwmcontrol
  5682 ;; This function uses a non-reentrant model
  5683 ;;
  5684                           
  5685     0D41                     ___tmul:	
  5686                           ;psect for function ___tmul
  5687                           
  5688                           
  5689                           ;incstack = 0
  5690                           ; Regs used in ___tmul: [wreg+status,2+status,0]
  5691     0D41  3000               	movlw	0
  5692     0D42  00D3               	movwf	___tmul@product^(0+128)
  5693     0D43  3000               	movlw	0
  5694     0D44  00D4               	movwf	(___tmul@product+1)^(0+128)
  5695     0D45  3000               	movlw	0
  5696     0D46  00D5               	movwf	(___tmul@product+2)^(0+128)
  5697     0D47                     l2312:
  5698     0D47  1C4D               	btfss	___tmul@multiplier^(0+128),0
  5699     0D48  2D4F               	goto	l2316
  5700     0D49  0850               	movf	___tmul@multiplicand^(0+128),w
  5701     0D4A  07D3               	addwf	___tmul@product^(0+128),f
  5702     0D4B  0851               	movf	(___tmul@multiplicand+1)^(0+128),w
  5703     0D4C  3DD4               	addwfc	(___tmul@product+1)^(0+128),f
  5704     0D4D  0852               	movf	(___tmul@multiplicand+2)^(0+128),w
  5705     0D4E  3DD5               	addwfc	(___tmul@product+2)^(0+128),f
  5706     0D4F                     l2316:
  5707     0D4F  3001               	movlw	1
  5708     0D50                     u1485:
  5709     0D50  35D0               	lslf	___tmul@multiplicand^(0+128),f
  5710     0D51  0DD1               	rlf	(___tmul@multiplicand+1)^(0+128),f
  5711     0D52  0DD2               	rlf	(___tmul@multiplicand+2)^(0+128),f
  5712     0D53  0B89               	decfsz	9,f
  5713     0D54  2D50               	goto	u1485
  5714     0D55  3001               	movlw	1
  5715     0D56                     u1495:
  5716     0D56  36CF               	lsrf	(___tmul@multiplier+2)^(0+128),f
  5717     0D57  0CCE               	rrf	(___tmul@multiplier+1)^(0+128),f
  5718     0D58  0CCD               	rrf	___tmul@multiplier^(0+128),f
  5719     0D59  0B89               	decfsz	9,f
  5720     0D5A  2D56               	goto	u1495
  5721     0D5B  084F               	movf	(___tmul@multiplier+2)^(0+128),w
  5722     0D5C  044E               	iorwf	(___tmul@multiplier+1)^(0+128),w
  5723     0D5D  044D               	iorwf	___tmul@multiplier^(0+128),w
  5724     0D5E  1D03               	skipz
  5725     0D5F  2D47               	goto	l2312
  5726     0D60  0853               	movf	___tmul@product^(0+128),w
  5727     0D61  00CD               	movwf	?___tmul^(0+128)
  5728     0D62  0854               	movf	(___tmul@product+1)^(0+128),w
  5729     0D63  00CE               	movwf	(?___tmul+1)^(0+128)
  5730     0D64  0855               	movf	(___tmul@product+2)^(0+128),w
  5731     0D65  00CF               	movwf	(?___tmul+2)^(0+128)
  5732     0D66  0008               	return
  5733     0D67                     __end_of___tmul:
  5734                           
  5735                           	psect	text13
  5736     0EB7                     __ptext13:	
  5737 ;; *************** function ___atdiv *****************
  5738 ;; Defined at:
  5739 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\atdiv.c"
  5740 ;; Parameters:    Size  Location     Type
  5741 ;;  divisor         3    9[BANK1 ] m
  5742 ;;  dividend        3   12[BANK1 ] m
  5743 ;; Auto vars:     Size  Location     Type
  5744 ;;  quotient        3   18[BANK1 ] m
  5745 ;;  sign            1   17[BANK1 ] unsigned char 
  5746 ;;  counter         1   16[BANK1 ] unsigned char 
  5747 ;; Return value:  Size  Location     Type
  5748 ;;                  3    9[BANK1 ] m
  5749 ;; Registers used:
  5750 ;;		wreg, status,2, status,0
  5751 ;; Tracked objects:
  5752 ;;		On entry : 1F/1
  5753 ;;		On exit  : 1F/1
  5754 ;;		Unchanged: 0/0
  5755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5756 ;;      Params:         0       0       6       0       0       0
  5757 ;;      Locals:         0       0       5       0       0       0
  5758 ;;      Temps:          0       0       1       0       0       0
  5759 ;;      Totals:         0       0      12       0       0       0
  5760 ;;Total ram usage:       12 bytes
  5761 ;; Hardware stack levels used: 1
  5762 ;; Hardware stack levels required when called: 5
  5763 ;; This function calls:
  5764 ;;		Nothing
  5765 ;; This function is called by:
  5766 ;;		_fluxcontrol
  5767 ;;		_pwmcontrol
  5768 ;; This function uses a non-reentrant model
  5769 ;;
  5770                           
  5771     0EB7                     ___atdiv:	
  5772                           ;psect for function ___atdiv
  5773                           
  5774                           
  5775                           ;incstack = 0
  5776                           ; Regs used in ___atdiv: [wreg+status,2+status,0]
  5777     0EB7  01DE               	clrf	___atdiv@sign^(0+128)
  5778     0EB8  1FD8               	btfss	(___atdiv@divisor+2)^(0+128),7
  5779     0EB9  2EC4               	goto	l1031
  5780     0EBA  09D6               	comf	___atdiv@divisor^(0+128),f
  5781     0EBB  09D7               	comf	(___atdiv@divisor+1)^(0+128),f
  5782     0EBC  09D8               	comf	(___atdiv@divisor+2)^(0+128),f
  5783     0EBD  0AD6               	incf	___atdiv@divisor^(0+128),f
  5784     0EBE  1903               	skipnz
  5785     0EBF  0AD7               	incf	(___atdiv@divisor+1)^(0+128),f
  5786     0EC0  1903               	skipnz
  5787     0EC1  0AD8               	incf	(___atdiv@divisor+2)^(0+128),f
  5788     0EC2  01DE               	clrf	___atdiv@sign^(0+128)
  5789     0EC3  0ADE               	incf	___atdiv@sign^(0+128),f
  5790     0EC4                     l1031:
  5791     0EC4  1FDB               	btfss	(___atdiv@dividend+2)^(0+128),7
  5792     0EC5  2ED2               	goto	l2334
  5793     0EC6  09D9               	comf	___atdiv@dividend^(0+128),f
  5794     0EC7  09DA               	comf	(___atdiv@dividend+1)^(0+128),f
  5795     0EC8  09DB               	comf	(___atdiv@dividend+2)^(0+128),f
  5796     0EC9  0AD9               	incf	___atdiv@dividend^(0+128),f
  5797     0ECA  1903               	skipnz
  5798     0ECB  0ADA               	incf	(___atdiv@dividend+1)^(0+128),f
  5799     0ECC  1903               	skipnz
  5800     0ECD  0ADB               	incf	(___atdiv@dividend+2)^(0+128),f
  5801     0ECE  3001               	movlw	1
  5802     0ECF  00DC               	movwf	??___atdiv^(0+128)
  5803     0ED0  085C               	movf	??___atdiv^(0+128),w
  5804     0ED1  06DE               	xorwf	___atdiv@sign^(0+128),f
  5805     0ED2                     l2334:
  5806     0ED2  3000               	movlw	0
  5807     0ED3  00DF               	movwf	___atdiv@quotient^(0+128)
  5808     0ED4  3000               	movlw	0
  5809     0ED5  00E0               	movwf	(___atdiv@quotient+1)^(0+128)
  5810     0ED6  3000               	movlw	0
  5811     0ED7  00E1               	movwf	(___atdiv@quotient+2)^(0+128)
  5812     0ED8  0858               	movf	(___atdiv@divisor+2)^(0+128),w
  5813     0ED9  0457               	iorwf	(___atdiv@divisor+1)^(0+128),w
  5814     0EDA  0456               	iorwf	___atdiv@divisor^(0+128),w
  5815     0EDB  1903               	skipnz
  5816     0EDC  2F0F               	goto	l2356
  5817     0EDD  01DD               	clrf	___atdiv@counter^(0+128)
  5818     0EDE  0ADD               	incf	___atdiv@counter^(0+128),f
  5819     0EDF                     l2342:
  5820     0EDF  1BD8               	btfsc	(___atdiv@divisor+2)^(0+128),7
  5821     0EE0  2EEC               	goto	l2344
  5822     0EE1  3001               	movlw	1
  5823     0EE2                     u1545:
  5824     0EE2  35D6               	lslf	___atdiv@divisor^(0+128),f
  5825     0EE3  0DD7               	rlf	(___atdiv@divisor+1)^(0+128),f
  5826     0EE4  0DD8               	rlf	(___atdiv@divisor+2)^(0+128),f
  5827     0EE5  0B89               	decfsz	9,f
  5828     0EE6  2EE2               	goto	u1545
  5829     0EE7  3001               	movlw	1
  5830     0EE8  00DC               	movwf	??___atdiv^(0+128)
  5831     0EE9  085C               	movf	??___atdiv^(0+128),w
  5832     0EEA  07DD               	addwf	___atdiv@counter^(0+128),f
  5833     0EEB  2EDF               	goto	l2342
  5834     0EEC                     l2344:
  5835     0EEC  3001               	movlw	1
  5836     0EED                     u1565:
  5837     0EED  35DF               	lslf	___atdiv@quotient^(0+128),f
  5838     0EEE  0DE0               	rlf	(___atdiv@quotient+1)^(0+128),f
  5839     0EEF  0DE1               	rlf	(___atdiv@quotient+2)^(0+128),f
  5840     0EF0  0B89               	decfsz	9,f
  5841     0EF1  2EED               	goto	u1565
  5842     0EF2  0858               	movf	(___atdiv@divisor+2)^(0+128),w
  5843     0EF3  025B               	subwf	(___atdiv@dividend+2)^(0+128),w
  5844     0EF4  1D03               	skipz
  5845     0EF5  2EFC               	goto	u1575
  5846     0EF6  0857               	movf	(___atdiv@divisor+1)^(0+128),w
  5847     0EF7  025A               	subwf	(___atdiv@dividend+1)^(0+128),w
  5848     0EF8  1D03               	skipz
  5849     0EF9  2EFC               	goto	u1575
  5850     0EFA  0856               	movf	___atdiv@divisor^(0+128),w
  5851     0EFB  0259               	subwf	___atdiv@dividend^(0+128),w
  5852     0EFC                     u1575:
  5853     0EFC  1C03               	skipc
  5854     0EFD  2F05               	goto	l2352
  5855     0EFE  0856               	movf	___atdiv@divisor^(0+128),w
  5856     0EFF  02D9               	subwf	___atdiv@dividend^(0+128),f
  5857     0F00  0857               	movf	(___atdiv@divisor+1)^(0+128),w
  5858     0F01  3BDA               	subwfb	(___atdiv@dividend+1)^(0+128),f
  5859     0F02  0858               	movf	(___atdiv@divisor+2)^(0+128),w
  5860     0F03  3BDB               	subwfb	(___atdiv@dividend+2)^(0+128),f
  5861     0F04  145F               	bsf	___atdiv@quotient^(0+128),0
  5862     0F05                     l2352:
  5863     0F05  3001               	movlw	1
  5864     0F06                     u1585:
  5865     0F06  36D8               	lsrf	(___atdiv@divisor+2)^(0+128),f
  5866     0F07  0CD7               	rrf	(___atdiv@divisor+1)^(0+128),f
  5867     0F08  0CD6               	rrf	___atdiv@divisor^(0+128),f
  5868     0F09  0B89               	decfsz	9,f
  5869     0F0A  2F06               	goto	u1585
  5870     0F0B  3001               	movlw	1
  5871     0F0C  02DD               	subwf	___atdiv@counter^(0+128),f
  5872     0F0D  1D03               	btfss	3,2
  5873     0F0E  2EEC               	goto	l2344
  5874     0F0F                     l2356:
  5875     0F0F  085E               	movf	___atdiv@sign^(0+128),w
  5876     0F10  1903               	btfsc	3,2
  5877     0F11  2F1A               	goto	l2360
  5878     0F12  09DF               	comf	___atdiv@quotient^(0+128),f
  5879     0F13  09E0               	comf	(___atdiv@quotient+1)^(0+128),f
  5880     0F14  09E1               	comf	(___atdiv@quotient+2)^(0+128),f
  5881     0F15  0ADF               	incf	___atdiv@quotient^(0+128),f
  5882     0F16  1903               	skipnz
  5883     0F17  0AE0               	incf	(___atdiv@quotient+1)^(0+128),f
  5884     0F18  1903               	skipnz
  5885     0F19  0AE1               	incf	(___atdiv@quotient+2)^(0+128),f
  5886     0F1A                     l2360:
  5887     0F1A  085F               	movf	___atdiv@quotient^(0+128),w
  5888     0F1B  00D6               	movwf	?___atdiv^(0+128)
  5889     0F1C  0860               	movf	(___atdiv@quotient+1)^(0+128),w
  5890     0F1D  00D7               	movwf	(?___atdiv+1)^(0+128)
  5891     0F1E  0861               	movf	(___atdiv@quotient+2)^(0+128),w
  5892     0F1F  00D8               	movwf	(?___atdiv+2)^(0+128)
  5893     0F20  0008               	return
  5894     0F21                     __end_of___atdiv:
  5895                           
  5896                           	psect	text14
  5897     0B56                     __ptext14:	
  5898 ;; *************** function _TMR4_StartTimer *****************
  5899 ;; Defined at:
  5900 ;;		line 79 in file "mcc_generated_files/tmr4.c"
  5901 ;; Parameters:    Size  Location     Type
  5902 ;;		None
  5903 ;; Auto vars:     Size  Location     Type
  5904 ;;		None
  5905 ;; Return value:  Size  Location     Type
  5906 ;;                  1    wreg      void 
  5907 ;; Registers used:
  5908 ;;		None
  5909 ;; Tracked objects:
  5910 ;;		On entry : 0/1
  5911 ;;		On exit  : 1F/8
  5912 ;;		Unchanged: 0/0
  5913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5914 ;;      Params:         0       0       0       0       0       0
  5915 ;;      Locals:         0       0       0       0       0       0
  5916 ;;      Temps:          0       0       0       0       0       0
  5917 ;;      Totals:         0       0       0       0       0       0
  5918 ;;Total ram usage:        0 bytes
  5919 ;; Hardware stack levels used: 1
  5920 ;; Hardware stack levels required when called: 5
  5921 ;; This function calls:
  5922 ;;		Nothing
  5923 ;; This function is called by:
  5924 ;;		_controlchoose
  5925 ;; This function uses a non-reentrant model
  5926 ;;
  5927                           
  5928     0B56                     _TMR4_StartTimer:	
  5929                           ;psect for function _TMR4_StartTimer
  5930                           
  5931                           
  5932                           ;mcc_generated_files/tmr4.c: 82:     T4CONbits.TMR4ON = 1;
  5933                           
  5934                           ;incstack = 0
  5935                           ; Regs used in _TMR4_StartTimer: []
  5936     0B56  0028               	movlb	8	; select bank8
  5937     0B57  1517               	bsf	23,2	;volatile
  5938     0B58  0008               	return
  5939     0B59                     __end_of_TMR4_StartTimer:
  5940                           
  5941                           	psect	text15
  5942     0521                     __ptext15:	
  5943 ;; *************** function _analisa_Rx *****************
  5944 ;; Defined at:
  5945 ;;		line 112 in file "main.c"
  5946 ;; Parameters:    Size  Location     Type
  5947 ;;		None
  5948 ;; Auto vars:     Size  Location     Type
  5949 ;;		None
  5950 ;; Return value:  Size  Location     Type
  5951 ;;                  1    wreg      void 
  5952 ;; Registers used:
  5953 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5954 ;; Tracked objects:
  5955 ;;		On entry : 1F/1
  5956 ;;		On exit  : 1F/1
  5957 ;;		Unchanged: 0/0
  5958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5959 ;;      Params:         0       0       0       0       0       0
  5960 ;;      Locals:         0       0       0       0       0       0
  5961 ;;      Temps:          0       0       2       0       0       0
  5962 ;;      Totals:         0       0       2       0       0       0
  5963 ;;Total ram usage:        2 bytes
  5964 ;; Hardware stack levels used: 1
  5965 ;; Hardware stack levels required when called: 6
  5966 ;; This function calls:
  5967 ;;		_EPWM1_LoadDutyValue
  5968 ;; This function is called by:
  5969 ;;		_main
  5970 ;; This function uses a non-reentrant model
  5971 ;;
  5972                           
  5973     0521                     _analisa_Rx:	
  5974                           ;psect for function _analisa_Rx
  5975                           
  5976                           
  5977                           ;main.c: 113:     switch(bufferRx[0]){
  5978                           
  5979                           ;incstack = 0
  5980                           ; Regs used in _analisa_Rx: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5981     0521  2DDC               	goto	l3004
  5982     0522                     l2936:
  5983                           
  5984                           ;main.c: 115:             if(countRx==7){
  5985     0522  3007               	movlw	7
  5986     0523  0021               	movlb	1	; select bank1
  5987     0524  064A               	xorwf	_countRx^(0+128),w
  5988     0525  1D03               	btfss	3,2
  5989     0526  2D54               	goto	l2952
  5990                           
  5991                           ;main.c: 116:                 controlchoice = bufferRx[0];
  5992     0527  0020               	movlb	0	; select bank0
  5993     0528  0853               	movf	_bufferRx,w
  5994     0529  0021               	movlb	1	; select bank1
  5995     052A  00CB               	movwf	_controlchoice^(0+128)
  5996                           
  5997                           ;main.c: 117:                 vRx.vH = bufferRx[3];
  5998     052B  0020               	movlb	0	; select bank0
  5999     052C  0856               	movf	_bufferRx+3,w
  6000     052D  0021               	movlb	1	; select bank1
  6001     052E  00BE               	movwf	(_vRx^(0+128)+1)
  6002                           
  6003                           ;main.c: 118:                 vRx.vL = bufferRx[4];
  6004     052F  0020               	movlb	0	; select bank0
  6005     0530  0857               	movf	_bufferRx+4,w
  6006     0531  0021               	movlb	1	; select bank1
  6007     0532  00BD               	movwf	_vRx^(0+128)
  6008                           
  6009                           ;main.c: 119:                 sp_position = vRx.v;
  6010     0533  083E               	movf	(_vRx+1)^(0+128),w
  6011     0534  00B8               	movwf	(_sp_position+1)^(0+128)
  6012     0535  083D               	movf	_vRx^(0+128),w
  6013     0536  00B7               	movwf	_sp_position^(0+128)
  6014                           
  6015                           ;main.c: 120:                 if(sp_position > 380 ) sp_position = 380;
  6016     0537  3001               	movlw	1
  6017     0538  0238               	subwf	(_sp_position+1)^(0+128),w
  6018     0539  307D               	movlw	125
  6019     053A  1903               	skipnz
  6020     053B  0237               	subwf	_sp_position^(0+128),w
  6021     053C  1C03               	skipc
  6022     053D  2D42               	goto	l2944
  6023     053E  307C               	movlw	124
  6024     053F  00B7               	movwf	_sp_position^(0+128)
  6025     0540  3001               	movlw	1
  6026     0541  00B8               	movwf	(_sp_position^(0+128)+1)
  6027     0542                     l2944:
  6028                           
  6029                           ;main.c: 122:                 vRx.vH = bufferRx[5];
  6030     0542  0020               	movlb	0	; select bank0
  6031     0543  0858               	movf	_bufferRx+5,w
  6032     0544  0021               	movlb	1	; select bank1
  6033     0545  00BE               	movwf	(_vRx^(0+128)+1)
  6034                           
  6035                           ;main.c: 123:                 vRx.vL = bufferRx[6];
  6036     0546  0020               	movlb	0	; select bank0
  6037     0547  0859               	movf	_bufferRx+6,w
  6038     0548  0021               	movlb	1	; select bank1
  6039     0549  00BD               	movwf	_vRx^(0+128)
  6040                           
  6041                           ;main.c: 124:                 dc = vRx.v;
  6042     054A  083E               	movf	(_vRx+1)^(0+128),w
  6043     054B  00BC               	movwf	(_dc+1)^(0+128)
  6044     054C  083D               	movf	_vRx^(0+128),w
  6045     054D  00BB               	movwf	_dc^(0+128)
  6046                           
  6047                           ;main.c: 125:                 EPWM1_LoadDutyValue(dc);
  6048     054E  083C               	movf	(_dc+1)^(0+128),w
  6049     054F  00CE               	movwf	(EPWM1_LoadDutyValue@dutyValue+1)^(0+128)
  6050     0550  083B               	movf	_dc^(0+128),w
  6051     0551  00CD               	movwf	EPWM1_LoadDutyValue@dutyValue^(0+128)
  6052     0552  318C  24C3         	fcall	_EPWM1_LoadDutyValue
  6053     0554                     l2952:
  6054                           
  6055                           ;main.c: 127:             countRx = 0;
  6056     0554  0021               	movlb	1	; select bank1
  6057     0555  01CA               	clrf	_countRx^(0+128)
  6058                           
  6059                           ;main.c: 128:             break;
  6060     0556  0008               	return
  6061     0557                     l2954:
  6062                           
  6063                           ;main.c: 130:             if(countRx==7){
  6064     0557  3007               	movlw	7
  6065     0558  0021               	movlb	1	; select bank1
  6066     0559  064A               	xorwf	_countRx^(0+128),w
  6067     055A  1D03               	btfss	3,2
  6068     055B  2D54               	goto	l2952
  6069                           
  6070                           ;main.c: 131:                 controlchoice = bufferRx[0];
  6071     055C  0020               	movlb	0	; select bank0
  6072     055D  0853               	movf	_bufferRx,w
  6073     055E  0021               	movlb	1	; select bank1
  6074     055F  00CB               	movwf	_controlchoice^(0+128)
  6075                           
  6076                           ;main.c: 132:                 vRx.vH = bufferRx[1];
  6077     0560  0020               	movlb	0	; select bank0
  6078     0561  0854               	movf	_bufferRx+1,w
  6079     0562  0021               	movlb	1	; select bank1
  6080     0563  00BE               	movwf	(_vRx^(0+128)+1)
  6081                           
  6082                           ;main.c: 133:                 vRx.vL = bufferRx[2];
  6083     0564  0020               	movlb	0	; select bank0
  6084     0565  0855               	movf	_bufferRx+2,w
  6085     0566  0021               	movlb	1	; select bank1
  6086     0567  00BD               	movwf	_vRx^(0+128)
  6087                           
  6088                           ;main.c: 134:                 sp_height = vRx.v;
  6089     0568  083E               	movf	(_vRx+1)^(0+128),w
  6090     0569  0020               	movlb	0	; select bank0
  6091     056A  00E6               	movwf	_sp_height+1
  6092     056B  0021               	movlb	1	; select bank1
  6093     056C  083D               	movf	_vRx^(0+128),w
  6094     056D  0020               	movlb	0	; select bank0
  6095     056E  00E5               	movwf	_sp_height
  6096                           
  6097                           ;main.c: 135:                 ballset = vRx.v / 2;
  6098     056F  0021               	movlb	1	; select bank1
  6099     0570  083E               	movf	(_vRx+1)^(0+128),w
  6100     0571  00D2               	movwf	(??_analisa_Rx^(0+128)+1)
  6101     0572  083D               	movf	_vRx^(0+128),w
  6102     0573  00D1               	movwf	??_analisa_Rx^(0+128)
  6103     0574  36D2               	lsrf	(??_analisa_Rx^(0+128)+1),f
  6104     0575  0CD1               	rrf	??_analisa_Rx^(0+128),f
  6105     0576  0851               	movf	??_analisa_Rx^(0+128),w
  6106     0577  00AA               	movwf	_ballset^(0+128)
  6107     0578  0852               	movf	(??_analisa_Rx+1)^(0+128),w
  6108     0579  00AB               	movwf	(_ballset+1)^(0+128)
  6109     057A  01AC               	clrf	(_ballset+2)^(0+128)
  6110                           
  6111                           ;main.c: 136:                 vRx.vH = bufferRx[3];
  6112     057B  0020               	movlb	0	; select bank0
  6113     057C  0856               	movf	_bufferRx+3,w
  6114     057D  0021               	movlb	1	; select bank1
  6115     057E  00BE               	movwf	(_vRx^(0+128)+1)
  6116                           
  6117                           ;main.c: 137:                 vRx.vL = bufferRx[4];
  6118     057F  0020               	movlb	0	; select bank0
  6119     0580  0857               	movf	_bufferRx+4,w
  6120     0581  0021               	movlb	1	; select bank1
  6121     0582  00BD               	movwf	_vRx^(0+128)
  6122                           
  6123                           ;main.c: 138:                 sp_position = vRx.v;
  6124     0583  083E               	movf	(_vRx+1)^(0+128),w
  6125     0584  00B8               	movwf	(_sp_position+1)^(0+128)
  6126     0585  083D               	movf	_vRx^(0+128),w
  6127     0586  00B7               	movwf	_sp_position^(0+128)
  6128     0587                     l2966:
  6129                           
  6130                           ;main.c: 139:                 outputsum = 0;
  6131     0587  3000               	movlw	0
  6132     0588  0021               	movlb	1	; select bank1
  6133     0589  00A7               	movwf	_outputsum^(0+128)
  6134     058A  3000               	movlw	0
  6135     058B  00A8               	movwf	(_outputsum+1)^(0+128)
  6136     058C  3000               	movlw	0
  6137     058D  00A9               	movwf	(_outputsum+2)^(0+128)
  6138                           
  6139                           ;main.c: 140:                 errorp=0;
  6140     058E  3000               	movlw	0
  6141     058F  0020               	movlb	0	; select bank0
  6142     0590  00DE               	movwf	_errorp
  6143     0591  3000               	movlw	0
  6144     0592  00DF               	movwf	_errorp+1
  6145     0593  3000               	movlw	0
  6146     0594  00E0               	movwf	_errorp+2
  6147                           
  6148                           ;main.c: 141:                 error =0;
  6149     0595  3000               	movlw	0
  6150     0596  0021               	movlb	1	; select bank1
  6151     0597  00B0               	movwf	_error^(0+128)
  6152     0598  3000               	movlw	0
  6153     0599  00B1               	movwf	(_error+1)^(0+128)
  6154     059A  3000               	movlw	0
  6155     059B  00B2               	movwf	(_error+2)^(0+128)
  6156     059C  2D54               	goto	l2952
  6157     059D                     l2974:
  6158                           
  6159                           ;main.c: 146:             if(countRx==7){
  6160     059D  3007               	movlw	7
  6161     059E  0021               	movlb	1	; select bank1
  6162     059F  064A               	xorwf	_countRx^(0+128),w
  6163     05A0  1D03               	btfss	3,2
  6164     05A1  2D54               	goto	l2952
  6165                           
  6166                           ;main.c: 147:                 controlchoice = bufferRx[0];
  6167     05A2  0020               	movlb	0	; select bank0
  6168     05A3  0853               	movf	_bufferRx,w
  6169     05A4  0021               	movlb	1	; select bank1
  6170     05A5  00CB               	movwf	_controlchoice^(0+128)
  6171                           
  6172                           ;main.c: 148:                 vRx.vH = bufferRx[1];
  6173     05A6  0020               	movlb	0	; select bank0
  6174     05A7  0854               	movf	_bufferRx+1,w
  6175     05A8  0021               	movlb	1	; select bank1
  6176     05A9  00BE               	movwf	(_vRx^(0+128)+1)
  6177                           
  6178                           ;main.c: 149:                 vRx.vL = bufferRx[2];
  6179     05AA  0020               	movlb	0	; select bank0
  6180     05AB  0855               	movf	_bufferRx+2,w
  6181     05AC  0021               	movlb	1	; select bank1
  6182     05AD  00BD               	movwf	_vRx^(0+128)
  6183                           
  6184                           ;main.c: 150:                 sp_height = vRx.v;
  6185     05AE  083E               	movf	(_vRx+1)^(0+128),w
  6186     05AF  0020               	movlb	0	; select bank0
  6187     05B0  00E6               	movwf	_sp_height+1
  6188     05B1  0021               	movlb	1	; select bank1
  6189     05B2  083D               	movf	_vRx^(0+128),w
  6190     05B3  0020               	movlb	0	; select bank0
  6191     05B4  00E5               	movwf	_sp_height
  6192                           
  6193                           ;main.c: 151:                 ballset = vRx.v / 2;
  6194     05B5  0021               	movlb	1	; select bank1
  6195     05B6  083E               	movf	(_vRx+1)^(0+128),w
  6196     05B7  00D2               	movwf	(??_analisa_Rx^(0+128)+1)
  6197     05B8  083D               	movf	_vRx^(0+128),w
  6198     05B9  00D1               	movwf	??_analisa_Rx^(0+128)
  6199     05BA  36D2               	lsrf	(??_analisa_Rx^(0+128)+1),f
  6200     05BB  0CD1               	rrf	??_analisa_Rx^(0+128),f
  6201     05BC  0851               	movf	??_analisa_Rx^(0+128),w
  6202     05BD  00AA               	movwf	_ballset^(0+128)
  6203     05BE  0852               	movf	(??_analisa_Rx+1)^(0+128),w
  6204     05BF  00AB               	movwf	(_ballset+1)^(0+128)
  6205     05C0  01AC               	clrf	(_ballset+2)^(0+128)
  6206                           
  6207                           ;main.c: 152:                 vRx.vH = bufferRx[5];
  6208     05C1  0020               	movlb	0	; select bank0
  6209     05C2  0858               	movf	_bufferRx+5,w
  6210     05C3  0021               	movlb	1	; select bank1
  6211     05C4  00BE               	movwf	(_vRx^(0+128)+1)
  6212                           
  6213                           ;main.c: 153:                 vRx.vL = bufferRx[6];
  6214     05C5  0020               	movlb	0	; select bank0
  6215     05C6  0859               	movf	_bufferRx+6,w
  6216     05C7  0021               	movlb	1	; select bank1
  6217     05C8  00BD               	movwf	_vRx^(0+128)
  6218                           
  6219                           ;main.c: 154:                 dc = vRx.v;
  6220     05C9  083E               	movf	(_vRx+1)^(0+128),w
  6221     05CA  00BC               	movwf	(_dc+1)^(0+128)
  6222     05CB  083D               	movf	_vRx^(0+128),w
  6223     05CC  00BB               	movwf	_dc^(0+128)
  6224                           
  6225                           ;main.c: 155:                 EPWM1_LoadDutyValue(dc);
  6226     05CD  083C               	movf	(_dc+1)^(0+128),w
  6227     05CE  00CE               	movwf	(EPWM1_LoadDutyValue@dutyValue+1)^(0+128)
  6228     05CF  083B               	movf	_dc^(0+128),w
  6229     05D0  00CD               	movwf	EPWM1_LoadDutyValue@dutyValue^(0+128)
  6230     05D1  318C  24C3  3185   	fcall	_EPWM1_LoadDutyValue
  6231     05D4  2D87               	goto	l2966
  6232     05D5                     l2996:
  6233                           
  6234                           ;main.c: 163:             if(countRx==7){
  6235     05D5  3007               	movlw	7
  6236     05D6  0021               	movlb	1	; select bank1
  6237     05D7  064A               	xorwf	_countRx^(0+128),w
  6238     05D8  1D03               	btfss	3,2
  6239     05D9  2D54               	goto	l2952
  6240     05DA  0001               	reset	;# 
  6241     05DB  2D54               	goto	l2952
  6242     05DC                     l3004:
  6243     05DC  0020               	movlb	0	; select bank0
  6244     05DD  0853               	movf	_bufferRx,w
  6245                           
  6246                           ; Switch size 1, requested type "simple"
  6247                           ; Number of cases is 4, Range of values is 0 to 3
  6248                           ; switch strategies available:
  6249                           ; Name         Instructions Cycles
  6250                           ; simple_byte           13     7 (average)
  6251                           ; direct_byte           14     6 (fixed)
  6252                           ; jumptable            260     6 (fixed)
  6253                           ;	Chosen strategy is simple_byte
  6254     05DE  3A00               	xorlw	0	; case 0
  6255     05DF  1903               	skipnz
  6256     05E0  2D22               	goto	l2936
  6257     05E1  3A01               	xorlw	1	; case 1
  6258     05E2  1903               	skipnz
  6259     05E3  2D57               	goto	l2954
  6260     05E4  3A03               	xorlw	3	; case 2
  6261     05E5  1903               	skipnz
  6262     05E6  2D9D               	goto	l2974
  6263     05E7  3A01               	xorlw	1	; case 3
  6264     05E8  1903               	skipnz
  6265     05E9  2DD5               	goto	l2996
  6266     05EA  2D54               	goto	l2952
  6267     05EB  0008               	return
  6268     05EC                     __end_of_analisa_Rx:
  6269                           
  6270                           	psect	text16
  6271     0CC3                     __ptext16:	
  6272 ;; *************** function _EPWM1_LoadDutyValue *****************
  6273 ;; Defined at:
  6274 ;;		line 90 in file "mcc_generated_files/epwm1.c"
  6275 ;; Parameters:    Size  Location     Type
  6276 ;;  dutyValue       2    0[BANK1 ] unsigned short 
  6277 ;; Auto vars:     Size  Location     Type
  6278 ;;		None
  6279 ;; Return value:  Size  Location     Type
  6280 ;;                  1    wreg      void 
  6281 ;; Registers used:
  6282 ;;		wreg, status,2, status,0
  6283 ;; Tracked objects:
  6284 ;;		On entry : 1F/1
  6285 ;;		On exit  : 1F/5
  6286 ;;		Unchanged: 0/0
  6287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6288 ;;      Params:         0       0       2       0       0       0
  6289 ;;      Locals:         0       0       0       0       0       0
  6290 ;;      Temps:          0       0       2       0       0       0
  6291 ;;      Totals:         0       0       4       0       0       0
  6292 ;;Total ram usage:        4 bytes
  6293 ;; Hardware stack levels used: 1
  6294 ;; Hardware stack levels required when called: 5
  6295 ;; This function calls:
  6296 ;;		Nothing
  6297 ;; This function is called by:
  6298 ;;		_pwmcontrol
  6299 ;;		_analisa_Rx
  6300 ;; This function uses a non-reentrant model
  6301 ;;
  6302                           
  6303     0CC3                     _EPWM1_LoadDutyValue:	
  6304                           ;psect for function _EPWM1_LoadDutyValue
  6305                           
  6306                           
  6307                           ;mcc_generated_files/epwm1.c: 90: void EPWM1_LoadDutyValue(uint16_t dutyValue);mcc_gener
      +                          ated_files/epwm1.c: 91: {;mcc_generated_files/epwm1.c: 93:     CCPR1L = ((dutyValue & 0x
      +                          03FC)>>2);
  6308                           
  6309                           ;incstack = 0
  6310                           ; Regs used in _EPWM1_LoadDutyValue: [wreg+status,2+status,0]
  6311     0CC3  084E               	movf	(EPWM1_LoadDutyValue@dutyValue+1)^(0+128),w
  6312     0CC4  00D0               	movwf	(??_EPWM1_LoadDutyValue^(0+128)+1)
  6313     0CC5  084D               	movf	EPWM1_LoadDutyValue@dutyValue^(0+128),w
  6314     0CC6  00CF               	movwf	??_EPWM1_LoadDutyValue^(0+128)
  6315     0CC7  36D0               	lsrf	(??_EPWM1_LoadDutyValue^(0+128)+1),f
  6316     0CC8  0CCF               	rrf	??_EPWM1_LoadDutyValue^(0+128),f
  6317     0CC9  36D0               	lsrf	(??_EPWM1_LoadDutyValue^(0+128)+1),f
  6318     0CCA  0CCF               	rrf	??_EPWM1_LoadDutyValue^(0+128),f
  6319     0CCB  084F               	movf	??_EPWM1_LoadDutyValue^(0+128),w
  6320     0CCC  0025               	movlb	5	; select bank5
  6321     0CCD  0091               	movwf	17	;volatile
  6322                           
  6323                           ;mcc_generated_files/epwm1.c: 96:     CCP1CON = ((uint8_t)(CCP1CON & 0xCF) | ((dutyValue
      +                           & 0x0003)<<4));
  6324     0CCE  0021               	movlb	1	; select bank1
  6325     0CCF  084D               	movf	EPWM1_LoadDutyValue@dutyValue^(0+128),w
  6326     0CD0  3903               	andlw	3
  6327     0CD1  00CF               	movwf	??_EPWM1_LoadDutyValue^(0+128)
  6328     0CD2  3004               	movlw	4
  6329     0CD3                     u1445:
  6330     0CD3  35CF               	lslf	??_EPWM1_LoadDutyValue^(0+128),f
  6331     0CD4  0B89               	decfsz	9,f
  6332     0CD5  2CD3               	goto	u1445
  6333     0CD6  0025               	movlb	5	; select bank5
  6334     0CD7  0813               	movf	19,w	;volatile
  6335     0CD8  39CF               	andlw	207
  6336     0CD9  0021               	movlb	1	; select bank1
  6337     0CDA  044F               	iorwf	??_EPWM1_LoadDutyValue^(0+128),w
  6338     0CDB  0025               	movlb	5	; select bank5
  6339     0CDC  0093               	movwf	19	;volatile
  6340     0CDD  0008               	return
  6341     0CDE                     __end_of_EPWM1_LoadDutyValue:
  6342                           
  6343                           	psect	text17
  6344     0B7E                     __ptext17:	
  6345 ;; *************** function _TMR6_WriteTimer *****************
  6346 ;; Defined at:
  6347 ;;		line 100 in file "mcc_generated_files/tmr6.c"
  6348 ;; Parameters:    Size  Location     Type
  6349 ;;  timerVal        1    wreg     unsigned char 
  6350 ;; Auto vars:     Size  Location     Type
  6351 ;;  timerVal        1    0[BANK1 ] unsigned char 
  6352 ;; Return value:  Size  Location     Type
  6353 ;;                  1    wreg      void 
  6354 ;; Registers used:
  6355 ;;		wreg
  6356 ;; Tracked objects:
  6357 ;;		On entry : 16/1
  6358 ;;		On exit  : 1F/8
  6359 ;;		Unchanged: 0/0
  6360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6361 ;;      Params:         0       0       0       0       0       0
  6362 ;;      Locals:         0       0       1       0       0       0
  6363 ;;      Temps:          0       0       0       0       0       0
  6364 ;;      Totals:         0       0       1       0       0       0
  6365 ;;Total ram usage:        1 bytes
  6366 ;; Hardware stack levels used: 1
  6367 ;; Hardware stack levels required when called: 5
  6368 ;; This function calls:
  6369 ;;		Nothing
  6370 ;; This function is called by:
  6371 ;;		_main
  6372 ;; This function uses a non-reentrant model
  6373 ;;
  6374                           
  6375     0B7E                     _TMR6_WriteTimer:	
  6376                           ;psect for function _TMR6_WriteTimer
  6377                           
  6378                           
  6379                           ;incstack = 0
  6380                           ; Regs used in _TMR6_WriteTimer: [wreg]
  6381                           ;TMR6_WriteTimer@timerVal stored from wreg
  6382     0B7E  0021               	movlb	1	; select bank1
  6383     0B7F  00CD               	movwf	TMR6_WriteTimer@timerVal^(0+128)
  6384                           
  6385                           ;mcc_generated_files/tmr6.c: 100: void TMR6_WriteTimer(uint8_t timerVal);mcc_generated_f
      +                          iles/tmr6.c: 101: {;mcc_generated_files/tmr6.c: 103:     TMR6 = timerVal;
  6386     0B80  084D               	movf	TMR6_WriteTimer@timerVal^(0+128),w
  6387     0B81  0028               	movlb	8	; select bank8
  6388     0B82  009C               	movwf	28	;volatile
  6389     0B83  0008               	return
  6390     0B84                     __end_of_TMR6_WriteTimer:
  6391                           
  6392                           	psect	text18
  6393     0B78                     __ptext18:	
  6394 ;; *************** function _TMR6_LoadPeriodRegister *****************
  6395 ;; Defined at:
  6396 ;;		line 106 in file "mcc_generated_files/tmr6.c"
  6397 ;; Parameters:    Size  Location     Type
  6398 ;;  periodVal       1    wreg     unsigned char 
  6399 ;; Auto vars:     Size  Location     Type
  6400 ;;  periodVal       1    0[BANK1 ] unsigned char 
  6401 ;; Return value:  Size  Location     Type
  6402 ;;                  1    wreg      void 
  6403 ;; Registers used:
  6404 ;;		wreg
  6405 ;; Tracked objects:
  6406 ;;		On entry : 1E/0
  6407 ;;		On exit  : 1F/8
  6408 ;;		Unchanged: 0/0
  6409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6410 ;;      Params:         0       0       0       0       0       0
  6411 ;;      Locals:         0       0       1       0       0       0
  6412 ;;      Temps:          0       0       0       0       0       0
  6413 ;;      Totals:         0       0       1       0       0       0
  6414 ;;Total ram usage:        1 bytes
  6415 ;; Hardware stack levels used: 1
  6416 ;; Hardware stack levels required when called: 5
  6417 ;; This function calls:
  6418 ;;		Nothing
  6419 ;; This function is called by:
  6420 ;;		_main
  6421 ;; This function uses a non-reentrant model
  6422 ;;
  6423                           
  6424     0B78                     _TMR6_LoadPeriodRegister:	
  6425                           ;psect for function _TMR6_LoadPeriodRegister
  6426                           
  6427                           
  6428                           ;incstack = 0
  6429                           ; Regs used in _TMR6_LoadPeriodRegister: [wreg]
  6430                           ;TMR6_LoadPeriodRegister@periodVal stored from wreg
  6431     0B78  0021               	movlb	1	; select bank1
  6432     0B79  00CD               	movwf	TMR6_LoadPeriodRegister@periodVal^(0+128)
  6433                           
  6434                           ;mcc_generated_files/tmr6.c: 106: void TMR6_LoadPeriodRegister(uint8_t periodVal);mcc_ge
      +                          nerated_files/tmr6.c: 107: {;mcc_generated_files/tmr6.c: 108:    PR6 = periodVal;
  6435     0B7A  084D               	movf	TMR6_LoadPeriodRegister@periodVal^(0+128),w
  6436     0B7B  0028               	movlb	8	; select bank8
  6437     0B7C  009D               	movwf	29	;volatile
  6438     0B7D  0008               	return
  6439     0B7E                     __end_of_TMR6_LoadPeriodRegister:
  6440                           
  6441                           	psect	text19
  6442     0B53                     __ptext19:	
  6443 ;; *************** function _TMR4_StopTimer *****************
  6444 ;; Defined at:
  6445 ;;		line 85 in file "mcc_generated_files/tmr4.c"
  6446 ;; Parameters:    Size  Location     Type
  6447 ;;		None
  6448 ;; Auto vars:     Size  Location     Type
  6449 ;;		None
  6450 ;; Return value:  Size  Location     Type
  6451 ;;                  1    wreg      void 
  6452 ;; Registers used:
  6453 ;;		None
  6454 ;; Tracked objects:
  6455 ;;		On entry : 1F/0
  6456 ;;		On exit  : 1F/8
  6457 ;;		Unchanged: 0/0
  6458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6459 ;;      Params:         0       0       0       0       0       0
  6460 ;;      Locals:         0       0       0       0       0       0
  6461 ;;      Temps:          0       0       0       0       0       0
  6462 ;;      Totals:         0       0       0       0       0       0
  6463 ;;Total ram usage:        0 bytes
  6464 ;; Hardware stack levels used: 1
  6465 ;; Hardware stack levels required when called: 5
  6466 ;; This function calls:
  6467 ;;		Nothing
  6468 ;; This function is called by:
  6469 ;;		_main
  6470 ;; This function uses a non-reentrant model
  6471 ;;
  6472                           
  6473     0B53                     _TMR4_StopTimer:	
  6474                           ;psect for function _TMR4_StopTimer
  6475                           
  6476                           
  6477                           ;mcc_generated_files/tmr4.c: 88:     T4CONbits.TMR4ON = 0;
  6478                           
  6479                           ;incstack = 0
  6480                           ; Regs used in _TMR4_StopTimer: []
  6481     0B53  0028               	movlb	8	; select bank8
  6482     0B54  1117               	bcf	23,2	;volatile
  6483     0B55  0008               	return
  6484     0B56                     __end_of_TMR4_StopTimer:
  6485                           
  6486                           	psect	text20
  6487     0B72                     __ptext20:	
  6488 ;; *************** function _TMR0_ReadTimer *****************
  6489 ;; Defined at:
  6490 ;;		line 80 in file "mcc_generated_files/tmr0.c"
  6491 ;; Parameters:    Size  Location     Type
  6492 ;;		None
  6493 ;; Auto vars:     Size  Location     Type
  6494 ;;  readVal         1    0[BANK1 ] unsigned char 
  6495 ;; Return value:  Size  Location     Type
  6496 ;;                  1    wreg      unsigned char 
  6497 ;; Registers used:
  6498 ;;		wreg
  6499 ;; Tracked objects:
  6500 ;;		On entry : 1D/0
  6501 ;;		On exit  : 1F/1
  6502 ;;		Unchanged: 0/0
  6503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6504 ;;      Params:         0       0       0       0       0       0
  6505 ;;      Locals:         0       0       1       0       0       0
  6506 ;;      Temps:          0       0       0       0       0       0
  6507 ;;      Totals:         0       0       1       0       0       0
  6508 ;;Total ram usage:        1 bytes
  6509 ;; Hardware stack levels used: 1
  6510 ;; Hardware stack levels required when called: 5
  6511 ;; This function calls:
  6512 ;;		Nothing
  6513 ;; This function is called by:
  6514 ;;		_main
  6515 ;; This function uses a non-reentrant model
  6516 ;;
  6517                           
  6518     0B72                     _TMR0_ReadTimer:	
  6519                           ;psect for function _TMR0_ReadTimer
  6520                           
  6521                           
  6522                           ;mcc_generated_files/tmr0.c: 82:     uint8_t readVal;;mcc_generated_files/tmr0.c: 84:   
      +                            readVal = TMR0;
  6523                           
  6524                           ;incstack = 0
  6525                           ; Regs used in _TMR0_ReadTimer: [wreg]
  6526     0B72  0020               	movlb	0	; select bank0
  6527     0B73  0815               	movf	21,w	;volatile
  6528     0B74  0021               	movlb	1	; select bank1
  6529     0B75  00CD               	movwf	TMR0_ReadTimer@readVal^(0+128)
  6530                           
  6531                           ;mcc_generated_files/tmr0.c: 86:     return readVal;
  6532     0B76  084D               	movf	TMR0_ReadTimer@readVal^(0+128),w
  6533     0B77  0008               	return
  6534     0B78                     __end_of_TMR0_ReadTimer:
  6535                           
  6536                           	psect	text21
  6537     07CF                     __ptext21:	
  6538 ;; *************** function _SYSTEM_Initialize *****************
  6539 ;; Defined at:
  6540 ;;		line 50 in file "mcc_generated_files/mcc.c"
  6541 ;; Parameters:    Size  Location     Type
  6542 ;;		None
  6543 ;; Auto vars:     Size  Location     Type
  6544 ;;		None
  6545 ;; Return value:  Size  Location     Type
  6546 ;;                  1    wreg      void 
  6547 ;; Registers used:
  6548 ;;		wreg, status,2, status,0, pclath, cstack
  6549 ;; Tracked objects:
  6550 ;;		On entry : B1F/0
  6551 ;;		On exit  : 1F/1
  6552 ;;		Unchanged: 0/0
  6553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6554 ;;      Params:         0       0       0       0       0       0
  6555 ;;      Locals:         0       0       0       0       0       0
  6556 ;;      Temps:          0       0       0       0       0       0
  6557 ;;      Totals:         0       0       0       0       0       0
  6558 ;;Total ram usage:        0 bytes
  6559 ;; Hardware stack levels used: 1
  6560 ;; Hardware stack levels required when called: 7
  6561 ;; This function calls:
  6562 ;;		_ADC_Initialize
  6563 ;;		_CMP1_Initialize
  6564 ;;		_DAC_Initialize
  6565 ;;		_EPWM1_Initialize
  6566 ;;		_EUSART_Initialize
  6567 ;;		_FVR_Initialize
  6568 ;;		_OSCILLATOR_Initialize
  6569 ;;		_PIN_MANAGER_Initialize
  6570 ;;		_TMR0_Initialize
  6571 ;;		_TMR1_Initialize
  6572 ;;		_TMR2_Initialize
  6573 ;;		_TMR4_Initialize
  6574 ;;		_TMR6_Initialize
  6575 ;;		_WDT_Initialize
  6576 ;; This function is called by:
  6577 ;;		_main
  6578 ;; This function uses a non-reentrant model
  6579 ;;
  6580                           
  6581     07CF                     _SYSTEM_Initialize:	
  6582                           ;psect for function _SYSTEM_Initialize
  6583                           
  6584                           
  6585                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  6586                           
  6587                           ;incstack = 0
  6588                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6589     07CF  318C  2447  3187   	fcall	_PIN_MANAGER_Initialize
  6590                           
  6591                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  6592     07D2  3187  27F9  3187   	fcall	_OSCILLATOR_Initialize
  6593                           
  6594                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  6595     07D5  318B  2359  3187   	fcall	_WDT_Initialize
  6596                           
  6597                           ;mcc_generated_files/mcc.c: 56:     DAC_Initialize();
  6598     07D8  318B  236C  3187   	fcall	_DAC_Initialize
  6599                           
  6600                           ;mcc_generated_files/mcc.c: 57:     FVR_Initialize();
  6601     07DB  318B  2350  3187   	fcall	_FVR_Initialize
  6602                           
  6603                           ;mcc_generated_files/mcc.c: 58:     TMR4_Initialize();
  6604     07DE  318B  23DB  3187   	fcall	_TMR4_Initialize
  6605                           
  6606                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
  6607     07E1  318B  23C0  3187   	fcall	_TMR2_Initialize
  6608                           
  6609                           ;mcc_generated_files/mcc.c: 60:     TMR0_Initialize();
  6610     07E4  318B  23D1  3187   	fcall	_TMR0_Initialize
  6611                           
  6612                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
  6613     07E7  318B  23E5  3187   	fcall	_TMR6_Initialize
  6614                           
  6615                           ;mcc_generated_files/mcc.c: 62:     CMP1_Initialize();
  6616     07EA  318B  2366  3187   	fcall	_CMP1_Initialize
  6617                           
  6618                           ;mcc_generated_files/mcc.c: 63:     ADC_Initialize();
  6619     07ED  318B  2398  3187   	fcall	_ADC_Initialize
  6620                           
  6621                           ;mcc_generated_files/mcc.c: 64:     EPWM1_Initialize();
  6622     07F0  318C  2406  3187   	fcall	_EPWM1_Initialize
  6623                           
  6624                           ;mcc_generated_files/mcc.c: 65:     TMR1_Initialize();
  6625     07F3  318C  248F  3187   	fcall	_TMR1_Initialize
  6626                           
  6627                           ;mcc_generated_files/mcc.c: 66:     EUSART_Initialize();
  6628     07F6  318D  251D         	fcall	_EUSART_Initialize
  6629     07F8  0008               	return
  6630     07F9                     __end_of_SYSTEM_Initialize:
  6631                           
  6632                           	psect	text22
  6633     0B59                     __ptext22:	
  6634 ;; *************** function _WDT_Initialize *****************
  6635 ;; Defined at:
  6636 ;;		line 79 in file "mcc_generated_files/mcc.c"
  6637 ;; Parameters:    Size  Location     Type
  6638 ;;		None
  6639 ;; Auto vars:     Size  Location     Type
  6640 ;;		None
  6641 ;; Return value:  Size  Location     Type
  6642 ;;                  1    wreg      void 
  6643 ;; Registers used:
  6644 ;;		wreg
  6645 ;; Tracked objects:
  6646 ;;		On entry : B1F/2
  6647 ;;		On exit  : B1F/1
  6648 ;;		Unchanged: B00/0
  6649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6650 ;;      Params:         0       0       0       0       0       0
  6651 ;;      Locals:         0       0       0       0       0       0
  6652 ;;      Temps:          0       0       0       0       0       0
  6653 ;;      Totals:         0       0       0       0       0       0
  6654 ;;Total ram usage:        0 bytes
  6655 ;; Hardware stack levels used: 1
  6656 ;; Hardware stack levels required when called: 5
  6657 ;; This function calls:
  6658 ;;		Nothing
  6659 ;; This function is called by:
  6660 ;;		_SYSTEM_Initialize
  6661 ;; This function uses a non-reentrant model
  6662 ;;
  6663                           
  6664     0B59                     _WDT_Initialize:	
  6665                           ;psect for function _WDT_Initialize
  6666                           
  6667                           
  6668                           ;mcc_generated_files/mcc.c: 82:     WDTCON = 0x16;
  6669                           
  6670                           ;incstack = 0
  6671                           ; Regs used in _WDT_Initialize: [wreg]
  6672     0B59  3016               	movlw	22
  6673     0B5A  0021               	movlb	1	; select bank1
  6674     0B5B  0097               	movwf	23	;volatile
  6675     0B5C  0008               	return
  6676     0B5D                     __end_of_WDT_Initialize:
  6677                           
  6678                           	psect	text23
  6679     0BE5                     __ptext23:	
  6680 ;; *************** function _TMR6_Initialize *****************
  6681 ;; Defined at:
  6682 ;;		line 62 in file "mcc_generated_files/tmr6.c"
  6683 ;; Parameters:    Size  Location     Type
  6684 ;;		None
  6685 ;; Auto vars:     Size  Location     Type
  6686 ;;		None
  6687 ;; Return value:  Size  Location     Type
  6688 ;;                  1    wreg      void 
  6689 ;; Registers used:
  6690 ;;		wreg, status,2
  6691 ;; Tracked objects:
  6692 ;;		On entry : B1F/0
  6693 ;;		On exit  : B1F/8
  6694 ;;		Unchanged: B00/0
  6695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6696 ;;      Params:         0       0       0       0       0       0
  6697 ;;      Locals:         0       0       0       0       0       0
  6698 ;;      Temps:          0       0       0       0       0       0
  6699 ;;      Totals:         0       0       0       0       0       0
  6700 ;;Total ram usage:        0 bytes
  6701 ;; Hardware stack levels used: 1
  6702 ;; Hardware stack levels required when called: 5
  6703 ;; This function calls:
  6704 ;;		Nothing
  6705 ;; This function is called by:
  6706 ;;		_SYSTEM_Initialize
  6707 ;; This function uses a non-reentrant model
  6708 ;;
  6709                           
  6710     0BE5                     _TMR6_Initialize:	
  6711                           ;psect for function _TMR6_Initialize
  6712                           
  6713                           
  6714                           ;mcc_generated_files/tmr6.c: 67:     PR6 = 0x4A;
  6715                           
  6716                           ;incstack = 0
  6717                           ; Regs used in _TMR6_Initialize: [wreg+status,2]
  6718     0BE5  304A               	movlw	74
  6719     0BE6  0028               	movlb	8	; select bank8
  6720     0BE7  009D               	movwf	29	;volatile
  6721                           
  6722                           ;mcc_generated_files/tmr6.c: 70:     TMR6 = 0x00;
  6723     0BE8  019C               	clrf	28	;volatile
  6724                           
  6725                           ;mcc_generated_files/tmr6.c: 73:     PIR3bits.TMR6IF = 0;
  6726     0BE9  0020               	movlb	0	; select bank0
  6727     0BEA  1193               	bcf	19,3	;volatile
  6728                           
  6729                           ;mcc_generated_files/tmr6.c: 76:     T6CON = 0x4F;
  6730     0BEB  304F               	movlw	79
  6731     0BEC  0028               	movlb	8	; select bank8
  6732     0BED  009E               	movwf	30	;volatile
  6733     0BEE  0008               	return
  6734     0BEF                     __end_of_TMR6_Initialize:
  6735                           
  6736                           	psect	text24
  6737     0BDB                     __ptext24:	
  6738 ;; *************** function _TMR4_Initialize *****************
  6739 ;; Defined at:
  6740 ;;		line 62 in file "mcc_generated_files/tmr4.c"
  6741 ;; Parameters:    Size  Location     Type
  6742 ;;		None
  6743 ;; Auto vars:     Size  Location     Type
  6744 ;;		None
  6745 ;; Return value:  Size  Location     Type
  6746 ;;                  1    wreg      void 
  6747 ;; Registers used:
  6748 ;;		wreg, status,2
  6749 ;; Tracked objects:
  6750 ;;		On entry : B1F/2
  6751 ;;		On exit  : B1F/8
  6752 ;;		Unchanged: B00/0
  6753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6754 ;;      Params:         0       0       0       0       0       0
  6755 ;;      Locals:         0       0       0       0       0       0
  6756 ;;      Temps:          0       0       0       0       0       0
  6757 ;;      Totals:         0       0       0       0       0       0
  6758 ;;Total ram usage:        0 bytes
  6759 ;; Hardware stack levels used: 1
  6760 ;; Hardware stack levels required when called: 5
  6761 ;; This function calls:
  6762 ;;		Nothing
  6763 ;; This function is called by:
  6764 ;;		_SYSTEM_Initialize
  6765 ;; This function uses a non-reentrant model
  6766 ;;
  6767                           
  6768     0BDB                     _TMR4_Initialize:	
  6769                           ;psect for function _TMR4_Initialize
  6770                           
  6771                           
  6772                           ;mcc_generated_files/tmr4.c: 67:     PR4 = 0xFF;
  6773                           
  6774                           ;incstack = 0
  6775                           ; Regs used in _TMR4_Initialize: [wreg+status,2]
  6776     0BDB  30FF               	movlw	255
  6777     0BDC  0028               	movlb	8	; select bank8
  6778     0BDD  0096               	movwf	22	;volatile
  6779                           
  6780                           ;mcc_generated_files/tmr4.c: 70:     TMR4 = 0x00;
  6781     0BDE  0195               	clrf	21	;volatile
  6782                           
  6783                           ;mcc_generated_files/tmr4.c: 73:     PIR3bits.TMR4IF = 0;
  6784     0BDF  0020               	movlb	0	; select bank0
  6785     0BE0  1093               	bcf	19,1	;volatile
  6786                           
  6787                           ;mcc_generated_files/tmr4.c: 76:     T4CON = 0x07;
  6788     0BE1  3007               	movlw	7
  6789     0BE2  0028               	movlb	8	; select bank8
  6790     0BE3  0097               	movwf	23	;volatile
  6791     0BE4  0008               	return
  6792     0BE5                     __end_of_TMR4_Initialize:
  6793                           
  6794                           	psect	text25
  6795     0BC0                     __ptext25:	
  6796 ;; *************** function _TMR2_Initialize *****************
  6797 ;; Defined at:
  6798 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  6799 ;; Parameters:    Size  Location     Type
  6800 ;;		None
  6801 ;; Auto vars:     Size  Location     Type
  6802 ;;		None
  6803 ;; Return value:  Size  Location     Type
  6804 ;;                  1    wreg      void 
  6805 ;; Registers used:
  6806 ;;		wreg, status,2
  6807 ;; Tracked objects:
  6808 ;;		On entry : B1F/8
  6809 ;;		On exit  : B1F/0
  6810 ;;		Unchanged: B00/0
  6811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6812 ;;      Params:         0       0       0       0       0       0
  6813 ;;      Locals:         0       0       0       0       0       0
  6814 ;;      Temps:          0       0       0       0       0       0
  6815 ;;      Totals:         0       0       0       0       0       0
  6816 ;;Total ram usage:        0 bytes
  6817 ;; Hardware stack levels used: 1
  6818 ;; Hardware stack levels required when called: 5
  6819 ;; This function calls:
  6820 ;;		Nothing
  6821 ;; This function is called by:
  6822 ;;		_SYSTEM_Initialize
  6823 ;; This function uses a non-reentrant model
  6824 ;;
  6825                           
  6826     0BC0                     _TMR2_Initialize:	
  6827                           ;psect for function _TMR2_Initialize
  6828                           
  6829                           
  6830                           ;mcc_generated_files/tmr2.c: 67:     PR2 = 0xFF;
  6831                           
  6832                           ;incstack = 0
  6833                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  6834     0BC0  30FF               	movlw	255
  6835     0BC1  0020               	movlb	0	; select bank0
  6836     0BC2  009B               	movwf	27	;volatile
  6837                           
  6838                           ;mcc_generated_files/tmr2.c: 70:     TMR2 = 0x00;
  6839     0BC3  019A               	clrf	26	;volatile
  6840                           
  6841                           ;mcc_generated_files/tmr2.c: 73:     PIR1bits.TMR2IF = 0;
  6842     0BC4  1091               	bcf	17,1	;volatile
  6843                           
  6844                           ;mcc_generated_files/tmr2.c: 76:     T2CON = 0x04;
  6845     0BC5  3004               	movlw	4
  6846     0BC6  009C               	movwf	28	;volatile
  6847     0BC7  0008               	return
  6848     0BC8                     __end_of_TMR2_Initialize:
  6849                           
  6850                           	psect	text26
  6851     0C8F                     __ptext26:	
  6852 ;; *************** function _TMR1_Initialize *****************
  6853 ;; Defined at:
  6854 ;;		line 65 in file "mcc_generated_files/tmr1.c"
  6855 ;; Parameters:    Size  Location     Type
  6856 ;;		None
  6857 ;; Auto vars:     Size  Location     Type
  6858 ;;		None
  6859 ;; Return value:  Size  Location     Type
  6860 ;;                  1    wreg      void 
  6861 ;; Registers used:
  6862 ;;		wreg, status,2, status,0, pclath, cstack
  6863 ;; Tracked objects:
  6864 ;;		On entry : 1F/5
  6865 ;;		On exit  : 1F/0
  6866 ;;		Unchanged: 0/0
  6867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6868 ;;      Params:         0       0       0       0       0       0
  6869 ;;      Locals:         0       0       0       0       0       0
  6870 ;;      Temps:          0       0       0       0       0       0
  6871 ;;      Totals:         0       0       0       0       0       0
  6872 ;;Total ram usage:        0 bytes
  6873 ;; Hardware stack levels used: 1
  6874 ;; Hardware stack levels required when called: 6
  6875 ;; This function calls:
  6876 ;;		_TMR1_SetGateInterruptHandler
  6877 ;; This function is called by:
  6878 ;;		_SYSTEM_Initialize
  6879 ;; This function uses a non-reentrant model
  6880 ;;
  6881                           
  6882     0C8F                     _TMR1_Initialize:	
  6883                           ;psect for function _TMR1_Initialize
  6884                           
  6885                           
  6886                           ;mcc_generated_files/tmr1.c: 70:     T1GCON = 0xC0;
  6887                           
  6888                           ;incstack = 0
  6889                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6890     0C8F  30C0               	movlw	192
  6891     0C90  0020               	movlb	0	; select bank0
  6892     0C91  0099               	movwf	25	;volatile
  6893                           
  6894                           ;mcc_generated_files/tmr1.c: 73:     TMR1H = 0x00;
  6895     0C92  0197               	clrf	23	;volatile
  6896                           
  6897                           ;mcc_generated_files/tmr1.c: 76:     TMR1L = 0x00;
  6898     0C93  0196               	clrf	22	;volatile
  6899                           
  6900                           ;mcc_generated_files/tmr1.c: 79:     PIR1bits.TMR1IF = 0;
  6901     0C94  1011               	bcf	17,0	;volatile
  6902                           
  6903                           ;mcc_generated_files/tmr1.c: 82:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  6904     0C95  0817               	movf	23,w	;volatile
  6905     0C96  0021               	movlb	1	; select bank1
  6906     0C97  00C4               	movwf	(_timer1ReloadVal+1)^(0+128)	;volatile
  6907     0C98  0020               	movlb	0	; select bank0
  6908     0C99  0816               	movf	22,w	;volatile
  6909     0C9A  0021               	movlb	1	; select bank1
  6910     0C9B  00C3               	movwf	_timer1ReloadVal^(0+128)	;volatile
  6911                           
  6912                           ;mcc_generated_files/tmr1.c: 85:     PIR1bits.TMR1GIF = 0;
  6913     0C9C  0020               	movlb	0	; select bank0
  6914     0C9D  1391               	bcf	17,7	;volatile
  6915                           
  6916                           ;mcc_generated_files/tmr1.c: 88:     PIE1bits.TMR1GIE = 1;
  6917     0C9E  0021               	movlb	1	; select bank1
  6918     0C9F  1791               	bsf	17,7	;volatile
  6919                           
  6920                           ;mcc_generated_files/tmr1.c: 91:     TMR1_SetGateInterruptHandler(TMR1_DefaultGateInterr
      +                          uptHandler);
  6921     0CA0  3002               	movlw	low _TMR1_DefaultGateInterruptHandler
  6922     0CA1  00CD               	movwf	TMR1_SetGateInterruptHandler@InterruptHandler^(0+128)
  6923     0CA2  3000               	movlw	high _TMR1_DefaultGateInterruptHandler
  6924     0CA3  00CE               	movwf	(TMR1_SetGateInterruptHandler@InterruptHandler^(0+128)+1)
  6925     0CA4  318B  23B8         	fcall	_TMR1_SetGateInterruptHandler
  6926                           
  6927                           ;mcc_generated_files/tmr1.c: 94:     T1CON = 0x01;
  6928     0CA6  3001               	movlw	1
  6929     0CA7  0098               	movwf	24	;volatile
  6930     0CA8  0008               	return
  6931     0CA9                     __end_of_TMR1_Initialize:
  6932                           
  6933                           	psect	text27
  6934     0BB8                     __ptext27:	
  6935 ;; *************** function _TMR1_SetGateInterruptHandler *****************
  6936 ;; Defined at:
  6937 ;;		line 177 in file "mcc_generated_files/tmr1.c"
  6938 ;; Parameters:    Size  Location     Type
  6939 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  6940 ;;		 -> mede_height(1), TMR1_DefaultGateInterruptHandler(1), 
  6941 ;; Auto vars:     Size  Location     Type
  6942 ;;		None
  6943 ;; Return value:  Size  Location     Type
  6944 ;;                  1    wreg      void 
  6945 ;; Registers used:
  6946 ;;		wreg
  6947 ;; Tracked objects:
  6948 ;;		On entry : 1F/1
  6949 ;;		On exit  : 1F/0
  6950 ;;		Unchanged: 0/0
  6951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6952 ;;      Params:         0       0       2       0       0       0
  6953 ;;      Locals:         0       0       0       0       0       0
  6954 ;;      Temps:          0       0       0       0       0       0
  6955 ;;      Totals:         0       0       2       0       0       0
  6956 ;;Total ram usage:        2 bytes
  6957 ;; Hardware stack levels used: 1
  6958 ;; Hardware stack levels required when called: 5
  6959 ;; This function calls:
  6960 ;;		Nothing
  6961 ;; This function is called by:
  6962 ;;		_TMR1_Initialize
  6963 ;;		_main
  6964 ;; This function uses a non-reentrant model
  6965 ;;
  6966                           
  6967     0BB8                     _TMR1_SetGateInterruptHandler:	
  6968                           ;psect for function _TMR1_SetGateInterruptHandler
  6969                           
  6970                           
  6971                           ;mcc_generated_files/tmr1.c: 178:     TMR1_GateInterruptHandler = InterruptHandler;
  6972                           
  6973                           ;incstack = 0
  6974                           ; Regs used in _TMR1_SetGateInterruptHandler: [wreg]
  6975     0BB8  084E               	movf	(TMR1_SetGateInterruptHandler@InterruptHandler+1)^(0+128),w
  6976     0BB9  0020               	movlb	0	; select bank0
  6977     0BBA  00ED               	movwf	_TMR1_GateInterruptHandler+1
  6978     0BBB  0021               	movlb	1	; select bank1
  6979     0BBC  084D               	movf	TMR1_SetGateInterruptHandler@InterruptHandler^(0+128),w
  6980     0BBD  0020               	movlb	0	; select bank0
  6981     0BBE  00EC               	movwf	_TMR1_GateInterruptHandler
  6982     0BBF  0008               	return
  6983     0BC0                     __end_of_TMR1_SetGateInterruptHandler:
  6984                           
  6985                           	psect	text28
  6986     0BD1                     __ptext28:	
  6987 ;; *************** function _TMR0_Initialize *****************
  6988 ;; Defined at:
  6989 ;;		line 63 in file "mcc_generated_files/tmr0.c"
  6990 ;; Parameters:    Size  Location     Type
  6991 ;;		None
  6992 ;; Auto vars:     Size  Location     Type
  6993 ;;		None
  6994 ;; Return value:  Size  Location     Type
  6995 ;;                  1    wreg      void 
  6996 ;; Registers used:
  6997 ;;		wreg, status,2
  6998 ;; Tracked objects:
  6999 ;;		On entry : B1F/0
  7000 ;;		On exit  : B1F/0
  7001 ;;		Unchanged: B00/0
  7002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7003 ;;      Params:         0       0       0       0       0       0
  7004 ;;      Locals:         0       0       0       0       0       0
  7005 ;;      Temps:          0       0       0       0       0       0
  7006 ;;      Totals:         0       0       0       0       0       0
  7007 ;;Total ram usage:        0 bytes
  7008 ;; Hardware stack levels used: 1
  7009 ;; Hardware stack levels required when called: 5
  7010 ;; This function calls:
  7011 ;;		Nothing
  7012 ;; This function is called by:
  7013 ;;		_SYSTEM_Initialize
  7014 ;; This function uses a non-reentrant model
  7015 ;;
  7016                           
  7017     0BD1                     _TMR0_Initialize:	
  7018                           ;psect for function _TMR0_Initialize
  7019                           
  7020                           
  7021                           ;mcc_generated_files/tmr0.c: 68:     OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | (0xD7 
      +                          & 0x3F));
  7022                           
  7023                           ;incstack = 0
  7024                           ; Regs used in _TMR0_Initialize: [wreg+status,2]
  7025     0BD1  0021               	movlb	1	; select bank1
  7026     0BD2  0815               	movf	21,w	;volatile
  7027     0BD3  39C0               	andlw	192
  7028     0BD4  3817               	iorlw	23
  7029     0BD5  0095               	movwf	21	;volatile
  7030                           
  7031                           ;mcc_generated_files/tmr0.c: 71:     TMR0 = 0x00;
  7032     0BD6  0020               	movlb	0	; select bank0
  7033     0BD7  0195               	clrf	21	;volatile
  7034                           
  7035                           ;mcc_generated_files/tmr0.c: 74:     timer0ReloadVal= 0;
  7036     0BD8  01EB               	clrf	_timer0ReloadVal	;volatile
  7037                           
  7038                           ;mcc_generated_files/tmr0.c: 77:     INTCONbits.TMR0IF = 0;
  7039     0BD9  110B               	bcf	11,2	;volatile
  7040     0BDA  0008               	return
  7041     0BDB                     __end_of_TMR0_Initialize:
  7042                           
  7043                           	psect	text29
  7044     0C47                     __ptext29:	
  7045 ;; *************** function _PIN_MANAGER_Initialize *****************
  7046 ;; Defined at:
  7047 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  7048 ;; Parameters:    Size  Location     Type
  7049 ;;		None
  7050 ;; Auto vars:     Size  Location     Type
  7051 ;;		None
  7052 ;; Return value:  Size  Location     Type
  7053 ;;                  1    wreg      void 
  7054 ;; Registers used:
  7055 ;;		wreg, status,2
  7056 ;; Tracked objects:
  7057 ;;		On entry : B1F/0
  7058 ;;		On exit  : B1F/2
  7059 ;;		Unchanged: B00/0
  7060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7061 ;;      Params:         0       0       0       0       0       0
  7062 ;;      Locals:         0       0       0       0       0       0
  7063 ;;      Temps:          0       0       0       0       0       0
  7064 ;;      Totals:         0       0       0       0       0       0
  7065 ;;Total ram usage:        0 bytes
  7066 ;; Hardware stack levels used: 1
  7067 ;; Hardware stack levels required when called: 5
  7068 ;; This function calls:
  7069 ;;		Nothing
  7070 ;; This function is called by:
  7071 ;;		_SYSTEM_Initialize
  7072 ;; This function uses a non-reentrant model
  7073 ;;
  7074                           
  7075     0C47                     _PIN_MANAGER_Initialize:	
  7076                           ;psect for function _PIN_MANAGER_Initialize
  7077                           
  7078                           
  7079                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  7080                           
  7081                           ;incstack = 0
  7082                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  7083     0C47  0022               	movlb	2	; select bank2
  7084     0C48  018C               	clrf	12	;volatile
  7085                           
  7086                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  7087     0C49  018D               	clrf	13	;volatile
  7088                           
  7089                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0xA1;
  7090     0C4A  30A1               	movlw	161
  7091     0C4B  0021               	movlb	1	; select bank1
  7092     0C4C  008C               	movwf	12	;volatile
  7093                           
  7094                           ;mcc_generated_files/pin_manager.c: 67:     TRISB = 0xF7;
  7095     0C4D  30F7               	movlw	247
  7096     0C4E  008D               	movwf	13	;volatile
  7097                           
  7098                           ;mcc_generated_files/pin_manager.c: 72:     ANSELB = 0xF0;
  7099     0C4F  30F0               	movlw	240
  7100     0C50  0023               	movlb	3	; select bank3
  7101     0C51  008D               	movwf	13	;volatile
  7102                           
  7103                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x01;
  7104     0C52  3001               	movlw	1
  7105     0C53  008C               	movwf	12	;volatile
  7106                           
  7107                           ;mcc_generated_files/pin_manager.c: 78:     WPUB = 0x00;
  7108     0C54  0024               	movlb	4	; select bank4
  7109     0C55  018D               	clrf	13	;volatile
  7110                           
  7111                           ;mcc_generated_files/pin_manager.c: 79:     WPUA = 0x00;
  7112     0C56  018C               	clrf	12	;volatile
  7113                           
  7114                           ;mcc_generated_files/pin_manager.c: 80:     OPTION_REGbits.nWPUEN = 1;
  7115     0C57  0021               	movlb	1	; select bank1
  7116     0C58  1795               	bsf	21,7	;volatile
  7117                           
  7118                           ;mcc_generated_files/pin_manager.c: 86:     APFCON0 = 0x00;
  7119     0C59  0022               	movlb	2	; select bank2
  7120     0C5A  019D               	clrf	29	;volatile
  7121                           
  7122                           ;mcc_generated_files/pin_manager.c: 87:     APFCON1 = 0x00;
  7123     0C5B  019E               	clrf	30	;volatile
  7124                           
  7125                           ;mcc_generated_files/pin_manager.c: 94:     INTCONbits.IOCIE = 1;
  7126     0C5C  158B               	bsf	11,3	;volatile
  7127     0C5D  0008               	return
  7128     0C5E                     __end_of_PIN_MANAGER_Initialize:
  7129                           
  7130                           	psect	text30
  7131     07F9                     __ptext30:	
  7132 ;; *************** function _OSCILLATOR_Initialize *****************
  7133 ;; Defined at:
  7134 ;;		line 69 in file "mcc_generated_files/mcc.c"
  7135 ;; Parameters:    Size  Location     Type
  7136 ;;		None
  7137 ;; Auto vars:     Size  Location     Type
  7138 ;;		None
  7139 ;; Return value:  Size  Location     Type
  7140 ;;                  1    wreg      void 
  7141 ;; Registers used:
  7142 ;;		wreg, status,2
  7143 ;; Tracked objects:
  7144 ;;		On entry : B1F/2
  7145 ;;		On exit  : B1F/2
  7146 ;;		Unchanged: B00/0
  7147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7148 ;;      Params:         0       0       0       0       0       0
  7149 ;;      Locals:         0       0       0       0       0       0
  7150 ;;      Temps:          0       0       0       0       0       0
  7151 ;;      Totals:         0       0       0       0       0       0
  7152 ;;Total ram usage:        0 bytes
  7153 ;; Hardware stack levels used: 1
  7154 ;; Hardware stack levels required when called: 5
  7155 ;; This function calls:
  7156 ;;		Nothing
  7157 ;; This function is called by:
  7158 ;;		_SYSTEM_Initialize
  7159 ;; This function uses a non-reentrant model
  7160 ;;
  7161                           
  7162     07F9                     _OSCILLATOR_Initialize:	
  7163                           ;psect for function _OSCILLATOR_Initialize
  7164                           
  7165                           
  7166                           ;mcc_generated_files/mcc.c: 72:     OSCCON = 0x78;
  7167                           
  7168                           ;incstack = 0
  7169                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  7170     07F9  3078               	movlw	120
  7171     07FA  0021               	movlb	1	; select bank1
  7172     07FB  0099               	movwf	25	;volatile
  7173                           
  7174                           ;mcc_generated_files/mcc.c: 74:     OSCTUNE = 0x00;
  7175     07FC  0198               	clrf	24	;volatile
  7176                           
  7177                           ;mcc_generated_files/mcc.c: 76:     BORCON = 0x00;
  7178     07FD  0022               	movlb	2	; select bank2
  7179     07FE  0196               	clrf	22	;volatile
  7180     07FF  0008               	return
  7181     0800                     __end_of_OSCILLATOR_Initialize:
  7182                           
  7183                           	psect	text31
  7184     0B50                     __ptext31:	
  7185 ;; *************** function _FVR_Initialize *****************
  7186 ;; Defined at:
  7187 ;;		line 58 in file "mcc_generated_files/fvr.c"
  7188 ;; Parameters:    Size  Location     Type
  7189 ;;		None
  7190 ;; Auto vars:     Size  Location     Type
  7191 ;;		None
  7192 ;; Return value:  Size  Location     Type
  7193 ;;                  1    wreg      void 
  7194 ;; Registers used:
  7195 ;;		wreg
  7196 ;; Tracked objects:
  7197 ;;		On entry : B1F/2
  7198 ;;		On exit  : B1F/2
  7199 ;;		Unchanged: B00/0
  7200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7201 ;;      Params:         0       0       0       0       0       0
  7202 ;;      Locals:         0       0       0       0       0       0
  7203 ;;      Temps:          0       0       0       0       0       0
  7204 ;;      Totals:         0       0       0       0       0       0
  7205 ;;Total ram usage:        0 bytes
  7206 ;; Hardware stack levels used: 1
  7207 ;; Hardware stack levels required when called: 5
  7208 ;; This function calls:
  7209 ;;		Nothing
  7210 ;; This function is called by:
  7211 ;;		_SYSTEM_Initialize
  7212 ;; This function uses a non-reentrant model
  7213 ;;
  7214                           
  7215     0B50                     _FVR_Initialize:	
  7216                           ;psect for function _FVR_Initialize
  7217                           
  7218                           
  7219                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0x84;
  7220                           
  7221                           ;incstack = 0
  7222                           ; Regs used in _FVR_Initialize: [wreg]
  7223     0B50  3084               	movlw	132
  7224     0B51  0097               	movwf	23	;volatile
  7225     0B52  0008               	return
  7226     0B53                     __end_of_FVR_Initialize:
  7227                           
  7228                           	psect	text32
  7229     0D1D                     __ptext32:	
  7230 ;; *************** function _EUSART_Initialize *****************
  7231 ;; Defined at:
  7232 ;;		line 66 in file "mcc_generated_files/eusart.c"
  7233 ;; Parameters:    Size  Location     Type
  7234 ;;		None
  7235 ;; Auto vars:     Size  Location     Type
  7236 ;;		None
  7237 ;; Return value:  Size  Location     Type
  7238 ;;                  1    wreg      void 
  7239 ;; Registers used:
  7240 ;;		wreg, status,2, status,0, pclath, cstack
  7241 ;; Tracked objects:
  7242 ;;		On entry : 1F/0
  7243 ;;		On exit  : 1F/1
  7244 ;;		Unchanged: 0/0
  7245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7246 ;;      Params:         0       0       0       0       0       0
  7247 ;;      Locals:         0       0       0       0       0       0
  7248 ;;      Temps:          0       0       0       0       0       0
  7249 ;;      Totals:         0       0       0       0       0       0
  7250 ;;Total ram usage:        0 bytes
  7251 ;; Hardware stack levels used: 1
  7252 ;; Hardware stack levels required when called: 6
  7253 ;; This function calls:
  7254 ;;		_EUSART_SetErrorHandler
  7255 ;;		_EUSART_SetFramingErrorHandler
  7256 ;;		_EUSART_SetOverrunErrorHandler
  7257 ;; This function is called by:
  7258 ;;		_SYSTEM_Initialize
  7259 ;; This function uses a non-reentrant model
  7260 ;;
  7261                           
  7262     0D1D                     _EUSART_Initialize:	
  7263                           ;psect for function _EUSART_Initialize
  7264                           
  7265                           
  7266                           ;mcc_generated_files/eusart.c: 71:     BAUDCON = 0x08;
  7267                           
  7268                           ;incstack = 0
  7269                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7270     0D1D  3008               	movlw	8
  7271     0D1E  0023               	movlb	3	; select bank3
  7272     0D1F  009F               	movwf	31	;volatile
  7273                           
  7274                           ;mcc_generated_files/eusart.c: 74:     RCSTA = 0x90;
  7275     0D20  3090               	movlw	144
  7276     0D21  009D               	movwf	29	;volatile
  7277                           
  7278                           ;mcc_generated_files/eusart.c: 77:     TXSTA = 0x24;
  7279     0D22  3024               	movlw	36
  7280     0D23  009E               	movwf	30	;volatile
  7281                           
  7282                           ;mcc_generated_files/eusart.c: 80:     SPBRGL = 0x22;
  7283     0D24  3022               	movlw	34
  7284     0D25  009B               	movwf	27	;volatile
  7285                           
  7286                           ;mcc_generated_files/eusart.c: 83:     SPBRGH = 0x00;
  7287     0D26  019C               	clrf	28	;volatile
  7288                           
  7289                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  7290     0D27  3000               	movlw	0
  7291     0D28  0021               	movlb	1	; select bank1
  7292     0D29  00CD               	movwf	EUSART_SetFramingErrorHandler@interruptHandler^(0+128)
  7293     0D2A  3000               	movlw	0
  7294     0D2B  00CE               	movwf	(EUSART_SetFramingErrorHandler@interruptHandler^(0+128)+1)
  7295     0D2C  318B  23A8  318D   	fcall	_EUSART_SetFramingErrorHandler
  7296                           
  7297                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  7298     0D2F  3000               	movlw	0
  7299     0D30  0021               	movlb	1	; select bank1
  7300     0D31  00CD               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler^(0+128)
  7301     0D32  3000               	movlw	0
  7302     0D33  00CE               	movwf	(EUSART_SetOverrunErrorHandler@interruptHandler^(0+128)+1)
  7303     0D34  318B  23B0  318D   	fcall	_EUSART_SetOverrunErrorHandler
  7304                           
  7305                           ;mcc_generated_files/eusart.c: 88:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  7306     0D37  3000               	movlw	0
  7307     0D38  0021               	movlb	1	; select bank1
  7308     0D39  00CD               	movwf	EUSART_SetErrorHandler@interruptHandler^(0+128)
  7309     0D3A  3000               	movlw	0
  7310     0D3B  00CE               	movwf	(EUSART_SetErrorHandler@interruptHandler^(0+128)+1)
  7311     0D3C  318B  23A0         	fcall	_EUSART_SetErrorHandler
  7312                           
  7313                           ;mcc_generated_files/eusart.c: 90:     eusartRxLastError.status = 0;
  7314     0D3E  0021               	movlb	1	; select bank1
  7315     0D3F  01CC               	clrf	_eusartRxLastError^(0+128)	;volatile
  7316     0D40  0008               	return
  7317     0D41                     __end_of_EUSART_Initialize:
  7318                           
  7319                           	psect	text33
  7320     0BB0                     __ptext33:	
  7321 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  7322 ;; Defined at:
  7323 ;;		line 161 in file "mcc_generated_files/eusart.c"
  7324 ;; Parameters:    Size  Location     Type
  7325 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  7326 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  7327 ;; Auto vars:     Size  Location     Type
  7328 ;;		None
  7329 ;; Return value:  Size  Location     Type
  7330 ;;                  1    wreg      void 
  7331 ;; Registers used:
  7332 ;;		wreg
  7333 ;; Tracked objects:
  7334 ;;		On entry : 1F/1
  7335 ;;		On exit  : 1F/2
  7336 ;;		Unchanged: 0/0
  7337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7338 ;;      Params:         0       0       2       0       0       0
  7339 ;;      Locals:         0       0       0       0       0       0
  7340 ;;      Temps:          0       0       0       0       0       0
  7341 ;;      Totals:         0       0       2       0       0       0
  7342 ;;Total ram usage:        2 bytes
  7343 ;; Hardware stack levels used: 1
  7344 ;; Hardware stack levels required when called: 5
  7345 ;; This function calls:
  7346 ;;		Nothing
  7347 ;; This function is called by:
  7348 ;;		_EUSART_Initialize
  7349 ;; This function uses a non-reentrant model
  7350 ;;
  7351                           
  7352     0BB0                     _EUSART_SetOverrunErrorHandler:	
  7353                           ;psect for function _EUSART_SetOverrunErrorHandler
  7354                           
  7355                           
  7356                           ;mcc_generated_files/eusart.c: 162:     EUSART_OverrunErrorHandler = interruptHandler;
  7357                           
  7358                           ;incstack = 0
  7359                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  7360     0BB0  084E               	movf	(EUSART_SetOverrunErrorHandler@interruptHandler+1)^(0+128),w
  7361     0BB1  0022               	movlb	2	; select bank2
  7362     0BB2  00B5               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+256)
  7363     0BB3  0021               	movlb	1	; select bank1
  7364     0BB4  084D               	movf	EUSART_SetOverrunErrorHandler@interruptHandler^(0+128),w
  7365     0BB5  0022               	movlb	2	; select bank2
  7366     0BB6  00B4               	movwf	_EUSART_OverrunErrorHandler^(0+256)
  7367     0BB7  0008               	return
  7368     0BB8                     __end_of_EUSART_SetOverrunErrorHandler:
  7369                           
  7370                           	psect	text34
  7371     0BA8                     __ptext34:	
  7372 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  7373 ;; Defined at:
  7374 ;;		line 157 in file "mcc_generated_files/eusart.c"
  7375 ;; Parameters:    Size  Location     Type
  7376 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  7377 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  7378 ;; Auto vars:     Size  Location     Type
  7379 ;;		None
  7380 ;; Return value:  Size  Location     Type
  7381 ;;                  1    wreg      void 
  7382 ;; Registers used:
  7383 ;;		wreg
  7384 ;; Tracked objects:
  7385 ;;		On entry : 1F/1
  7386 ;;		On exit  : 1F/2
  7387 ;;		Unchanged: 0/0
  7388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7389 ;;      Params:         0       0       2       0       0       0
  7390 ;;      Locals:         0       0       0       0       0       0
  7391 ;;      Temps:          0       0       0       0       0       0
  7392 ;;      Totals:         0       0       2       0       0       0
  7393 ;;Total ram usage:        2 bytes
  7394 ;; Hardware stack levels used: 1
  7395 ;; Hardware stack levels required when called: 5
  7396 ;; This function calls:
  7397 ;;		Nothing
  7398 ;; This function is called by:
  7399 ;;		_EUSART_Initialize
  7400 ;; This function uses a non-reentrant model
  7401 ;;
  7402                           
  7403     0BA8                     _EUSART_SetFramingErrorHandler:	
  7404                           ;psect for function _EUSART_SetFramingErrorHandler
  7405                           
  7406                           
  7407                           ;mcc_generated_files/eusart.c: 158:     EUSART_FramingErrorHandler = interruptHandler;
  7408                           
  7409                           ;incstack = 0
  7410                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  7411     0BA8  084E               	movf	(EUSART_SetFramingErrorHandler@interruptHandler+1)^(0+128),w
  7412     0BA9  0022               	movlb	2	; select bank2
  7413     0BAA  00B7               	movwf	(_EUSART_FramingErrorHandler+1)^(0+256)
  7414     0BAB  0021               	movlb	1	; select bank1
  7415     0BAC  084D               	movf	EUSART_SetFramingErrorHandler@interruptHandler^(0+128),w
  7416     0BAD  0022               	movlb	2	; select bank2
  7417     0BAE  00B6               	movwf	_EUSART_FramingErrorHandler^(0+256)
  7418     0BAF  0008               	return
  7419     0BB0                     __end_of_EUSART_SetFramingErrorHandler:
  7420                           
  7421                           	psect	text35
  7422     0BA0                     __ptext35:	
  7423 ;; *************** function _EUSART_SetErrorHandler *****************
  7424 ;; Defined at:
  7425 ;;		line 165 in file "mcc_generated_files/eusart.c"
  7426 ;; Parameters:    Size  Location     Type
  7427 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  7428 ;;		 -> EUSART_DefaultErrorHandler(1), 
  7429 ;; Auto vars:     Size  Location     Type
  7430 ;;		None
  7431 ;; Return value:  Size  Location     Type
  7432 ;;                  1    wreg      void 
  7433 ;; Registers used:
  7434 ;;		wreg
  7435 ;; Tracked objects:
  7436 ;;		On entry : 1F/1
  7437 ;;		On exit  : 1F/2
  7438 ;;		Unchanged: 0/0
  7439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7440 ;;      Params:         0       0       2       0       0       0
  7441 ;;      Locals:         0       0       0       0       0       0
  7442 ;;      Temps:          0       0       0       0       0       0
  7443 ;;      Totals:         0       0       2       0       0       0
  7444 ;;Total ram usage:        2 bytes
  7445 ;; Hardware stack levels used: 1
  7446 ;; Hardware stack levels required when called: 5
  7447 ;; This function calls:
  7448 ;;		Nothing
  7449 ;; This function is called by:
  7450 ;;		_EUSART_Initialize
  7451 ;; This function uses a non-reentrant model
  7452 ;;
  7453                           
  7454     0BA0                     _EUSART_SetErrorHandler:	
  7455                           ;psect for function _EUSART_SetErrorHandler
  7456                           
  7457                           
  7458                           ;mcc_generated_files/eusart.c: 166:     EUSART_ErrorHandler = interruptHandler;
  7459                           
  7460                           ;incstack = 0
  7461                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  7462     0BA0  084E               	movf	(EUSART_SetErrorHandler@interruptHandler+1)^(0+128),w
  7463     0BA1  0022               	movlb	2	; select bank2
  7464     0BA2  00B3               	movwf	(_EUSART_ErrorHandler+1)^(0+256)
  7465     0BA3  0021               	movlb	1	; select bank1
  7466     0BA4  084D               	movf	EUSART_SetErrorHandler@interruptHandler^(0+128),w
  7467     0BA5  0022               	movlb	2	; select bank2
  7468     0BA6  00B2               	movwf	_EUSART_ErrorHandler^(0+256)
  7469     0BA7  0008               	return
  7470     0BA8                     __end_of_EUSART_SetErrorHandler:
  7471                           
  7472                           	psect	text36
  7473     0C06                     __ptext36:	
  7474 ;; *************** function _EPWM1_Initialize *****************
  7475 ;; Defined at:
  7476 ;;		line 64 in file "mcc_generated_files/epwm1.c"
  7477 ;; Parameters:    Size  Location     Type
  7478 ;;		None
  7479 ;; Auto vars:     Size  Location     Type
  7480 ;;		None
  7481 ;; Return value:  Size  Location     Type
  7482 ;;                  1    wreg      void 
  7483 ;; Registers used:
  7484 ;;		wreg, status,2, status,0
  7485 ;; Tracked objects:
  7486 ;;		On entry : 1F/1
  7487 ;;		On exit  : 1F/5
  7488 ;;		Unchanged: 0/0
  7489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7490 ;;      Params:         0       0       0       0       0       0
  7491 ;;      Locals:         0       0       0       0       0       0
  7492 ;;      Temps:          0       0       0       0       0       0
  7493 ;;      Totals:         0       0       0       0       0       0
  7494 ;;Total ram usage:        0 bytes
  7495 ;; Hardware stack levels used: 1
  7496 ;; Hardware stack levels required when called: 5
  7497 ;; This function calls:
  7498 ;;		Nothing
  7499 ;; This function is called by:
  7500 ;;		_SYSTEM_Initialize
  7501 ;; This function uses a non-reentrant model
  7502 ;;
  7503                           
  7504     0C06                     _EPWM1_Initialize:	
  7505                           ;psect for function _EPWM1_Initialize
  7506                           
  7507                           
  7508                           ;mcc_generated_files/epwm1.c: 69:  CCP1CON = 0x3C;
  7509                           
  7510                           ;incstack = 0
  7511                           ; Regs used in _EPWM1_Initialize: [wreg+status,2+status,0]
  7512     0C06  303C               	movlw	60
  7513     0C07  0025               	movlb	5	; select bank5
  7514     0C08  0093               	movwf	19	;volatile
  7515                           
  7516                           ;mcc_generated_files/epwm1.c: 72:  ECCP1AS = 0x00;
  7517     0C09  0195               	clrf	21	;volatile
  7518                           
  7519                           ;mcc_generated_files/epwm1.c: 75:  PWM1CON = 0x80;
  7520     0C0A  3080               	movlw	128
  7521     0C0B  0094               	movwf	20	;volatile
  7522                           
  7523                           ;mcc_generated_files/epwm1.c: 78:  PSTR1CON = 0x01;
  7524     0C0C  3001               	movlw	1
  7525     0C0D  0096               	movwf	22	;volatile
  7526                           
  7527                           ;mcc_generated_files/epwm1.c: 81:  CCPR1H = 0x00;
  7528     0C0E  0192               	clrf	18	;volatile
  7529                           
  7530                           ;mcc_generated_files/epwm1.c: 84:  CCPR1L = 0x7F;
  7531     0C0F  307F               	movlw	127
  7532     0C10  0091               	movwf	17	;volatile
  7533                           
  7534                           ;mcc_generated_files/epwm1.c: 87:  CCPTMRS0bits.C1TSEL = 0x0;
  7535     0C11  30FC               	movlw	-4
  7536     0C12  059E               	andwf	30,f	;volatile
  7537     0C13  0008               	return
  7538     0C14                     __end_of_EPWM1_Initialize:
  7539                           
  7540                           	psect	text37
  7541     0B6C                     __ptext37:	
  7542 ;; *************** function _DAC_Initialize *****************
  7543 ;; Defined at:
  7544 ;;		line 58 in file "mcc_generated_files/dac.c"
  7545 ;; Parameters:    Size  Location     Type
  7546 ;;		None
  7547 ;; Auto vars:     Size  Location     Type
  7548 ;;		None
  7549 ;; Return value:  Size  Location     Type
  7550 ;;                  1    wreg      void 
  7551 ;; Registers used:
  7552 ;;		wreg
  7553 ;; Tracked objects:
  7554 ;;		On entry : B1F/1
  7555 ;;		On exit  : B1F/2
  7556 ;;		Unchanged: B00/0
  7557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7558 ;;      Params:         0       0       0       0       0       0
  7559 ;;      Locals:         0       0       0       0       0       0
  7560 ;;      Temps:          0       0       0       0       0       0
  7561 ;;      Totals:         0       0       0       0       0       0
  7562 ;;Total ram usage:        0 bytes
  7563 ;; Hardware stack levels used: 1
  7564 ;; Hardware stack levels required when called: 5
  7565 ;; This function calls:
  7566 ;;		Nothing
  7567 ;; This function is called by:
  7568 ;;		_SYSTEM_Initialize
  7569 ;; This function uses a non-reentrant model
  7570 ;;
  7571                           
  7572     0B6C                     _DAC_Initialize:	
  7573                           ;psect for function _DAC_Initialize
  7574                           
  7575                           
  7576                           ;mcc_generated_files/dac.c: 61:     DACCON0 = 0x80;
  7577                           
  7578                           ;incstack = 0
  7579                           ; Regs used in _DAC_Initialize: [wreg]
  7580     0B6C  3080               	movlw	128
  7581     0B6D  0022               	movlb	2	; select bank2
  7582     0B6E  0098               	movwf	24	;volatile
  7583                           
  7584                           ;mcc_generated_files/dac.c: 63:     DACCON1 = 0x06;
  7585     0B6F  3006               	movlw	6
  7586     0B70  0099               	movwf	25	;volatile
  7587     0B71  0008               	return
  7588     0B72                     __end_of_DAC_Initialize:
  7589                           
  7590                           	psect	text38
  7591     0B66                     __ptext38:	
  7592 ;; *************** function _CMP1_Initialize *****************
  7593 ;; Defined at:
  7594 ;;		line 58 in file "mcc_generated_files/cmp1.c"
  7595 ;; Parameters:    Size  Location     Type
  7596 ;;		None
  7597 ;; Auto vars:     Size  Location     Type
  7598 ;;		None
  7599 ;; Return value:  Size  Location     Type
  7600 ;;                  1    wreg      void 
  7601 ;; Registers used:
  7602 ;;		wreg
  7603 ;; Tracked objects:
  7604 ;;		On entry : B1F/8
  7605 ;;		On exit  : B1F/2
  7606 ;;		Unchanged: B00/0
  7607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7608 ;;      Params:         0       0       0       0       0       0
  7609 ;;      Locals:         0       0       0       0       0       0
  7610 ;;      Temps:          0       0       0       0       0       0
  7611 ;;      Totals:         0       0       0       0       0       0
  7612 ;;Total ram usage:        0 bytes
  7613 ;; Hardware stack levels used: 1
  7614 ;; Hardware stack levels required when called: 5
  7615 ;; This function calls:
  7616 ;;		Nothing
  7617 ;; This function is called by:
  7618 ;;		_SYSTEM_Initialize
  7619 ;; This function uses a non-reentrant model
  7620 ;;
  7621                           
  7622     0B66                     _CMP1_Initialize:	
  7623                           ;psect for function _CMP1_Initialize
  7624                           
  7625                           
  7626                           ;mcc_generated_files/cmp1.c: 62:     CM1CON0 = 0x84;
  7627                           
  7628                           ;incstack = 0
  7629                           ; Regs used in _CMP1_Initialize: [wreg]
  7630     0B66  3084               	movlw	132
  7631     0B67  0022               	movlb	2	; select bank2
  7632     0B68  0091               	movwf	17	;volatile
  7633                           
  7634                           ;mcc_generated_files/cmp1.c: 65:     CM1CON1 = 0x10;
  7635     0B69  3010               	movlw	16
  7636     0B6A  0092               	movwf	18	;volatile
  7637     0B6B  0008               	return
  7638     0B6C                     __end_of_CMP1_Initialize:
  7639                           
  7640                           	psect	text39
  7641     0B98                     __ptext39:	
  7642 ;; *************** function _ADC_Initialize *****************
  7643 ;; Defined at:
  7644 ;;		line 67 in file "mcc_generated_files/adc.c"
  7645 ;; Parameters:    Size  Location     Type
  7646 ;;		None
  7647 ;; Auto vars:     Size  Location     Type
  7648 ;;		None
  7649 ;; Return value:  Size  Location     Type
  7650 ;;                  1    wreg      void 
  7651 ;; Registers used:
  7652 ;;		wreg, status,2
  7653 ;; Tracked objects:
  7654 ;;		On entry : 1F/2
  7655 ;;		On exit  : 1F/1
  7656 ;;		Unchanged: 0/0
  7657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7658 ;;      Params:         0       0       0       0       0       0
  7659 ;;      Locals:         0       0       0       0       0       0
  7660 ;;      Temps:          0       0       0       0       0       0
  7661 ;;      Totals:         0       0       0       0       0       0
  7662 ;;Total ram usage:        0 bytes
  7663 ;; Hardware stack levels used: 1
  7664 ;; Hardware stack levels required when called: 5
  7665 ;; This function calls:
  7666 ;;		Nothing
  7667 ;; This function is called by:
  7668 ;;		_SYSTEM_Initialize
  7669 ;; This function uses a non-reentrant model
  7670 ;;
  7671                           
  7672     0B98                     _ADC_Initialize:	
  7673                           ;psect for function _ADC_Initialize
  7674                           
  7675                           
  7676                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0xD3;
  7677                           
  7678                           ;incstack = 0
  7679                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  7680     0B98  30D3               	movlw	211
  7681     0B99  0021               	movlb	1	; select bank1
  7682     0B9A  009E               	movwf	30	;volatile
  7683                           
  7684                           ;mcc_generated_files/adc.c: 75:     ADRESL = 0x00;
  7685     0B9B  019B               	clrf	27	;volatile
  7686                           
  7687                           ;mcc_generated_files/adc.c: 78:     ADRESH = 0x00;
  7688     0B9C  019C               	clrf	28	;volatile
  7689                           
  7690                           ;mcc_generated_files/adc.c: 81:     ADCON0 = 0x01;
  7691     0B9D  3001               	movlw	1
  7692     0B9E  009D               	movwf	29	;volatile
  7693     0B9F  0008               	return
  7694     0BA0                     __end_of_ADC_Initialize:
  7695                           
  7696                           	psect	text40
  7697     0B61                     __ptext40:	
  7698 ;; *************** function _EUSART_is_rx_ready *****************
  7699 ;; Defined at:
  7700 ;;		line 99 in file "mcc_generated_files/eusart.c"
  7701 ;; Parameters:    Size  Location     Type
  7702 ;;		None
  7703 ;; Auto vars:     Size  Location     Type
  7704 ;;		None
  7705 ;; Return value:  Size  Location     Type
  7706 ;;                  1    wreg      _Bool 
  7707 ;; Registers used:
  7708 ;;		wreg, status,2, status,0
  7709 ;; Tracked objects:
  7710 ;;		On entry : 17/0
  7711 ;;		On exit  : 1F/0
  7712 ;;		Unchanged: 0/0
  7713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7714 ;;      Params:         0       0       0       0       0       0
  7715 ;;      Locals:         0       0       0       0       0       0
  7716 ;;      Temps:          0       0       0       0       0       0
  7717 ;;      Totals:         0       0       0       0       0       0
  7718 ;;Total ram usage:        0 bytes
  7719 ;; Hardware stack levels used: 1
  7720 ;; Hardware stack levels required when called: 5
  7721 ;; This function calls:
  7722 ;;		Nothing
  7723 ;; This function is called by:
  7724 ;;		_main
  7725 ;; This function uses a non-reentrant model
  7726 ;;
  7727                           
  7728     0B61                     _EUSART_is_rx_ready:	
  7729                           ;psect for function _EUSART_is_rx_ready
  7730                           
  7731                           
  7732                           ;mcc_generated_files/eusart.c: 101:     return (_Bool)(PIR1bits.RCIF);
  7733                           
  7734                           ;incstack = 0
  7735                           ; Regs used in _EUSART_is_rx_ready: [wreg+status,2+status,0]
  7736     0B61  0020               	movlb	0	; select bank0
  7737     0B62  0E11               	swapf	17,w	;volatile
  7738     0B63  0C89               	rrf	9,f
  7739     0B64  3901               	andlw	1
  7740     0B65  0008               	return
  7741     0B66                     __end_of_EUSART_is_rx_ready:
  7742                           
  7743                           	psect	text41
  7744     0BFA                     __ptext41:	
  7745 ;; *************** function _EUSART_Read *****************
  7746 ;; Defined at:
  7747 ;;		line 113 in file "mcc_generated_files/eusart.c"
  7748 ;; Parameters:    Size  Location     Type
  7749 ;;		None
  7750 ;; Auto vars:     Size  Location     Type
  7751 ;;		None
  7752 ;; Return value:  Size  Location     Type
  7753 ;;                  1    wreg      unsigned char 
  7754 ;; Registers used:
  7755 ;;		wreg, status,2
  7756 ;; Tracked objects:
  7757 ;;		On entry : 1F/1
  7758 ;;		On exit  : 1F/3
  7759 ;;		Unchanged: 0/0
  7760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7761 ;;      Params:         0       0       0       0       0       0
  7762 ;;      Locals:         0       0       0       0       0       0
  7763 ;;      Temps:          0       0       0       0       0       0
  7764 ;;      Totals:         0       0       0       0       0       0
  7765 ;;Total ram usage:        0 bytes
  7766 ;; Hardware stack levels used: 1
  7767 ;; Hardware stack levels required when called: 5
  7768 ;; This function calls:
  7769 ;;		Nothing
  7770 ;; This function is called by:
  7771 ;;		_main
  7772 ;; This function uses a non-reentrant model
  7773 ;;
  7774                           
  7775     0BFA                     _EUSART_Read:	
  7776                           ;psect for function _EUSART_Read
  7777                           
  7778     0BFA                     l240:	
  7779                           ;mcc_generated_files/eusart.c: 116:     {;mcc_generated_files/eusart.c: 117:     }
  7780                           
  7781                           ;incstack = 0
  7782                           ; Regs used in _EUSART_Read: [wreg+status,2]
  7783                           
  7784                           
  7785                           ;mcc_generated_files/eusart.c: 115:     while(!PIR1bits.RCIF)
  7786     0BFA  0020               	movlb	0	; select bank0
  7787     0BFB  1E91               	btfss	17,5	;volatile
  7788     0BFC  2BFA               	goto	l240
  7789                           
  7790                           ;mcc_generated_files/eusart.c: 119:     eusartRxLastError.status = 0;
  7791     0BFD  0021               	movlb	1	; select bank1
  7792     0BFE  01CC               	clrf	_eusartRxLastError^(0+128)	;volatile
  7793                           
  7794                           ;mcc_generated_files/eusart.c: 121:     if(1 == RCSTAbits.OERR)
  7795     0BFF  0023               	movlb	3	; select bank3
  7796     0C00  1C9D               	btfss	29,1	;volatile
  7797     0C01  2C04               	goto	l2870
  7798                           
  7799                           ;mcc_generated_files/eusart.c: 122:     {;mcc_generated_files/eusart.c: 125:         RCS
      +                          TAbits.CREN = 0;
  7800     0C02  121D               	bcf	29,4	;volatile
  7801                           
  7802                           ;mcc_generated_files/eusart.c: 126:         RCSTAbits.CREN = 1;
  7803     0C03  161D               	bsf	29,4	;volatile
  7804     0C04                     l2870:
  7805                           
  7806                           ;mcc_generated_files/eusart.c: 129:     return RCREG;
  7807     0C04  0819               	movf	25,w	;volatile
  7808     0C05  0008               	return
  7809     0C06                     __end_of_EUSART_Read:
  7810                           
  7811                           	psect	text42
  7812     0C76                     __ptext42:	
  7813 ;; *************** function _ADC_GetConversion *****************
  7814 ;; Defined at:
  7815 ;;		line 112 in file "mcc_generated_files/adc.c"
  7816 ;; Parameters:    Size  Location     Type
  7817 ;;  channel         1    wreg     enum E2495
  7818 ;; Auto vars:     Size  Location     Type
  7819 ;;  channel         1    3[BANK1 ] enum E2495
  7820 ;; Return value:  Size  Location     Type
  7821 ;;                  2    0[BANK1 ] unsigned short 
  7822 ;; Registers used:
  7823 ;;		wreg, status,2, status,0
  7824 ;; Tracked objects:
  7825 ;;		On entry : 1F/8
  7826 ;;		On exit  : 1F/1
  7827 ;;		Unchanged: 0/0
  7828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7829 ;;      Params:         0       0       2       0       0       0
  7830 ;;      Locals:         0       0       1       0       0       0
  7831 ;;      Temps:          0       0       1       0       0       0
  7832 ;;      Totals:         0       0       4       0       0       0
  7833 ;;Total ram usage:        4 bytes
  7834 ;; Hardware stack levels used: 1
  7835 ;; Hardware stack levels required when called: 5
  7836 ;; This function calls:
  7837 ;;		Nothing
  7838 ;; This function is called by:
  7839 ;;		_main
  7840 ;; This function uses a non-reentrant model
  7841 ;;
  7842                           
  7843     0C76                     _ADC_GetConversion:	
  7844                           ;psect for function _ADC_GetConversion
  7845                           
  7846                           
  7847                           ;incstack = 0
  7848                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
  7849                           ;ADC_GetConversion@channel stored from wreg
  7850     0C76  0021               	movlb	1	; select bank1
  7851     0C77  00D0               	movwf	ADC_GetConversion@channel^(0+128)
  7852                           
  7853                           ;mcc_generated_files/adc.c: 112: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 113: {;mcc_generated_files/adc.c: 115:     ADCON0bits.CHS = ch
      +                          annel;
  7854     0C78  0850               	movf	ADC_GetConversion@channel^(0+128),w
  7855     0C79  00CF               	movwf	??_ADC_GetConversion^(0+128)
  7856     0C7A  0DCF               	rlf	??_ADC_GetConversion^(0+128),f
  7857     0C7B  0DCF               	rlf	??_ADC_GetConversion^(0+128),f
  7858     0C7C  081D               	movf	29,w	;volatile
  7859     0C7D  064F               	xorwf	??_ADC_GetConversion^(0+128),w
  7860     0C7E  3983               	andlw	-125
  7861     0C7F  064F               	xorwf	??_ADC_GetConversion^(0+128),w
  7862     0C80  009D               	movwf	29	;volatile
  7863                           
  7864                           ;mcc_generated_files/adc.c: 118:     ADCON0bits.ADON = 1;
  7865     0C81  141D               	bsf	29,0	;volatile
  7866                           
  7867                           ;mcc_generated_files/adc.c: 121:     _delay((unsigned long)((5)*(16000000/4000000.0)));
  7868     0C82  3006               	movlw	6
  7869     0C83                     u2817:
  7870     0C83  0B89               	decfsz	9,f
  7871     0C84  2C83               	goto	u2817
  7872     0C85  3200               	nop2
  7873                           
  7874                           ;mcc_generated_files/adc.c: 124:     ADCON0bits.GO_nDONE = 1;
  7875     0C86  0021               	movlb	1	; select bank1
  7876     0C87  149D               	bsf	29,1	;volatile
  7877     0C88                     l333:	
  7878                           ;mcc_generated_files/adc.c: 128:     {;mcc_generated_files/adc.c: 129:     }
  7879                           
  7880                           
  7881                           ;mcc_generated_files/adc.c: 127:     while (ADCON0bits.GO_nDONE)
  7882     0C88  189D               	btfsc	29,1	;volatile
  7883     0C89  2C88               	goto	l333
  7884                           
  7885                           ;mcc_generated_files/adc.c: 132:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  7886     0C8A  081C               	movf	28,w	;volatile
  7887     0C8B  00CE               	movwf	(?_ADC_GetConversion+1)^(0+128)
  7888     0C8C  081B               	movf	27,w	;volatile
  7889     0C8D  00CD               	movwf	?_ADC_GetConversion^(0+128)
  7890     0C8E  0008               	return
  7891     0C8F                     __end_of_ADC_GetConversion:
  7892                           
  7893                           	psect	intentry
  7894     0004                     __pintentry:	
  7895 ;; *************** function _INTERRUPT_InterruptManager *****************
  7896 ;; Defined at:
  7897 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  7898 ;; Parameters:    Size  Location     Type
  7899 ;;		None
  7900 ;; Auto vars:     Size  Location     Type
  7901 ;;		None
  7902 ;; Return value:  Size  Location     Type
  7903 ;;                  1    wreg      void 
  7904 ;; Registers used:
  7905 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7906 ;; Tracked objects:
  7907 ;;		On entry : 0/0
  7908 ;;		On exit  : 0/0
  7909 ;;		Unchanged: 0/0
  7910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7911 ;;      Params:         0       0       0       0       0       0
  7912 ;;      Locals:         0       0       0       0       0       0
  7913 ;;      Temps:          0       0       0       0       0       0
  7914 ;;      Totals:         0       0       0       0       0       0
  7915 ;;Total ram usage:        0 bytes
  7916 ;; Hardware stack levels used: 1
  7917 ;; Hardware stack levels required when called: 4
  7918 ;; This function calls:
  7919 ;;		_PIN_MANAGER_IOC
  7920 ;;		_TMR1_GATE_ISR
  7921 ;; This function is called by:
  7922 ;;		Interrupt level 1
  7923 ;; This function uses a non-reentrant model
  7924 ;;
  7925                           
  7926     0004                     _INTERRUPT_InterruptManager:
  7927                           
  7928                           ;incstack = 0
  7929     0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  7930                           
  7931                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7932     0005  3180               	pagesel	$
  7933                           
  7934                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.IOCIE == 1 && INTCONbits
      +                          .IOCIF == 1)
  7935     0006  198B               	btfsc	11,3	;volatile
  7936     0007  1C0B               	btfss	11,0	;volatile
  7937     0008  280D               	goto	i1l174
  7938                           
  7939                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         PIN_MANAGER_IOC();
  7940     0009  318B  234F  3180   	fcall	_PIN_MANAGER_IOC
  7941                           
  7942                           ;mcc_generated_files/interrupt_manager.c: 58:     }
  7943     000C  2817               	goto	i1l180
  7944     000D                     i1l174:	
  7945                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
  7946                           
  7947     000D  1F0B               	btfss	11,6	;volatile
  7948     000E  2817               	goto	i1l180
  7949                           
  7950                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE1bits.TMR1GIE == 1 && PIR1bits.TMR1GIF == 1)
  7951     000F  0021               	movlb	1	; select bank1
  7952     0010  1F91               	btfss	17,7	;volatile
  7953     0011  2817               	goto	i1l180
  7954     0012  0020               	movlb	0	; select bank0
  7955     0013  1F91               	btfss	17,7	;volatile
  7956     0014  2817               	goto	i1l180
  7957                           
  7958                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             TMR1_GATE_ISR();
  7959     0015  318B  23EF         	fcall	_TMR1_GATE_ISR
  7960     0017                     i1l180:	
  7961                           ;mcc_generated_files/interrupt_manager.c: 71:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 73:     }
  7962                           
  7963                           ;mcc_generated_files/interrupt_manager.c: 64:         }
  7964                           
  7965     0017  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  7966     0018  0009               	retfie
  7967     0019                     __end_of_INTERRUPT_InterruptManager:
  7968                           
  7969                           	psect	text44
  7970     0BEF                     __ptext44:	
  7971 ;; *************** function _TMR1_GATE_ISR *****************
  7972 ;; Defined at:
  7973 ;;		line 166 in file "mcc_generated_files/tmr1.c"
  7974 ;; Parameters:    Size  Location     Type
  7975 ;;		None
  7976 ;; Auto vars:     Size  Location     Type
  7977 ;;		None
  7978 ;; Return value:  Size  Location     Type
  7979 ;;                  1    wreg      void 
  7980 ;; Registers used:
  7981 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7982 ;; Tracked objects:
  7983 ;;		On entry : 1F/0
  7984 ;;		On exit  : 0/0
  7985 ;;		Unchanged: 0/0
  7986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7987 ;;      Params:         0       0       0       0       0       0
  7988 ;;      Locals:         0       0       0       0       0       0
  7989 ;;      Temps:          0       0       0       0       0       0
  7990 ;;      Totals:         0       0       0       0       0       0
  7991 ;;Total ram usage:        0 bytes
  7992 ;; Hardware stack levels used: 1
  7993 ;; Hardware stack levels required when called: 3
  7994 ;; This function calls:
  7995 ;;		NULL
  7996 ;;		_TMR1_DefaultGateInterruptHandler
  7997 ;;		_mede_height
  7998 ;; This function is called by:
  7999 ;;		_INTERRUPT_InterruptManager
  8000 ;; This function uses a non-reentrant model
  8001 ;;
  8002                           
  8003     0BEF                     _TMR1_GATE_ISR:	
  8004                           ;psect for function _TMR1_GATE_ISR
  8005                           
  8006                           
  8007                           ;mcc_generated_files/tmr1.c: 169:     PIR1bits.TMR1GIF = 0;
  8008                           
  8009                           ;incstack = 0
  8010                           ; Regs used in _TMR1_GATE_ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8011     0BEF  1391               	bcf	17,7	;volatile
  8012                           
  8013                           ;mcc_generated_files/tmr1.c: 171:     if(TMR1_GateInterruptHandler)
  8014     0BF0  086C               	movf	_TMR1_GateInterruptHandler,w
  8015     0BF1  046D               	iorwf	_TMR1_GateInterruptHandler+1,w
  8016     0BF2  1903               	btfsc	3,2
  8017     0BF3  0008               	return
  8018                           
  8019                           ;mcc_generated_files/tmr1.c: 172:     {;mcc_generated_files/tmr1.c: 173:         TMR1_Ga
      +                          teInterruptHandler();
  8020     0BF4  086D               	movf	_TMR1_GateInterruptHandler+1,w
  8021     0BF5  008A               	movwf	10
  8022     0BF6  086C               	movf	_TMR1_GateInterruptHandler,w
  8023     0BF7  000A               	callw
  8024     0BF8  318B               	pagesel	$
  8025     0BF9  0008               	return
  8026     0BFA                     __end_of_TMR1_GATE_ISR:
  8027                           
  8028                           	psect	text45
  8029     0002                     __ptext45:	
  8030 ;; *************** function _TMR1_DefaultGateInterruptHandler *****************
  8031 ;; Defined at:
  8032 ;;		line 181 in file "mcc_generated_files/tmr1.c"
  8033 ;; Parameters:    Size  Location     Type
  8034 ;;		None
  8035 ;; Auto vars:     Size  Location     Type
  8036 ;;		None
  8037 ;; Return value:  Size  Location     Type
  8038 ;;                  1    wreg      void 
  8039 ;; Registers used:
  8040 ;;		None
  8041 ;; Tracked objects:
  8042 ;;		On entry : 1F/0
  8043 ;;		On exit  : 1F/0
  8044 ;;		Unchanged: 1F/0
  8045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8046 ;;      Params:         0       0       0       0       0       0
  8047 ;;      Locals:         0       0       0       0       0       0
  8048 ;;      Temps:          0       0       0       0       0       0
  8049 ;;      Totals:         0       0       0       0       0       0
  8050 ;;Total ram usage:        0 bytes
  8051 ;; Hardware stack levels used: 1
  8052 ;; This function calls:
  8053 ;;		Nothing
  8054 ;; This function is called by:
  8055 ;;		_TMR1_Initialize
  8056 ;;		_TMR1_GATE_ISR
  8057 ;; This function uses a non-reentrant model
  8058 ;;
  8059                           
  8060     0002                     _TMR1_DefaultGateInterruptHandler:	
  8061                           ;psect for function _TMR1_DefaultGateInterruptHandler
  8062                           
  8063                           
  8064                           ;incstack = 0
  8065                           ; Regs used in _TMR1_DefaultGateInterruptHandler: []
  8066     0002  0008               	return
  8067     0003                     __end_of_TMR1_DefaultGateInterruptHandler:
  8068                           
  8069                           	psect	text46
  8070     05EC                     __ptext46:	
  8071 ;; *************** function _mede_height *****************
  8072 ;; Defined at:
  8073 ;;		line 278 in file "main.c"
  8074 ;; Parameters:    Size  Location     Type
  8075 ;;		None
  8076 ;; Auto vars:     Size  Location     Type
  8077 ;;		None
  8078 ;; Return value:  Size  Location     Type
  8079 ;;                  1    wreg      void 
  8080 ;; Registers used:
  8081 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8082 ;; Tracked objects:
  8083 ;;		On entry : 1F/0
  8084 ;;		On exit  : 1F/1
  8085 ;;		Unchanged: 0/0
  8086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8087 ;;      Params:         0       0       0       0       0       0
  8088 ;;      Locals:         0       0       0       0       0       0
  8089 ;;      Temps:          0       6       0       0       0       0
  8090 ;;      Totals:         0       6       0       0       0       0
  8091 ;;Total ram usage:        6 bytes
  8092 ;; Hardware stack levels used: 1
  8093 ;; Hardware stack levels required when called: 2
  8094 ;; This function calls:
  8095 ;;		_TMR1_ReadTimer
  8096 ;;		_TMR1_Reload
  8097 ;;		___flmul
  8098 ;;		___lwdiv
  8099 ;;		___xxtofl
  8100 ;;		i1___fltol
  8101 ;; This function is called by:
  8102 ;;		_main
  8103 ;;		_TMR1_GATE_ISR
  8104 ;; This function uses a non-reentrant model
  8105 ;;
  8106                           
  8107     05EC                     _mede_height:	
  8108                           ;psect for function _mede_height
  8109                           
  8110                           
  8111                           ;main.c: 279:     tempo_voo = TMR1_ReadTimer();
  8112                           
  8113                           ;incstack = 0
  8114                           ; Regs used in _mede_height: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8115     05EC  318C  245E  3185   	fcall	_TMR1_ReadTimer
  8116     05EF  0871               	movf	?_TMR1_ReadTimer+1,w
  8117     05F0  00E2               	movwf	_tempo_voo+1
  8118     05F1  0870               	movf	?_TMR1_ReadTimer,w
  8119     05F2  00E1               	movwf	_tempo_voo
  8120                           
  8121                           ;main.c: 280:     TMR1_Reload();
  8122     05F3  318B  2390  3185   	fcall	_TMR1_Reload
  8123                           
  8124                           ;main.c: 281:     if (first_read == 1){
  8125     05F6  036E               	decf	_first_read,w
  8126     05F7  1D03               	btfss	3,2
  8127     05F8  2E15               	goto	i1l2806
  8128                           
  8129                           ;main.c: 282:         avg_tempo_voo = tempo_voo;
  8130     05F9  0861               	movf	_tempo_voo,w
  8131     05FA  00BF               	movwf	___xxtofl@val
  8132     05FB  0862               	movf	_tempo_voo+1,w
  8133     05FC  00C0               	movwf	___xxtofl@val+1
  8134     05FD  01C1               	clrf	___xxtofl@val+2
  8135     05FE  01C2               	clrf	___xxtofl@val+3
  8136     05FF  3000               	movlw	0
  8137     0600  3187  273C  3185   	fcall	___xxtofl
  8138     0603  0842               	movf	?___xxtofl+3,w
  8139     0604  0021               	movlb	1	; select bank1
  8140     0605  00A3               	movwf	(_avg_tempo_voo+3)^(0+128)
  8141     0606  0020               	movlb	0	; select bank0
  8142     0607  0841               	movf	?___xxtofl+2,w
  8143     0608  0021               	movlb	1	; select bank1
  8144     0609  00A2               	movwf	(_avg_tempo_voo+2)^(0+128)
  8145     060A  0020               	movlb	0	; select bank0
  8146     060B  0840               	movf	?___xxtofl+1,w
  8147     060C  0021               	movlb	1	; select bank1
  8148     060D  00A1               	movwf	(_avg_tempo_voo+1)^(0+128)
  8149     060E  0020               	movlb	0	; select bank0
  8150     060F  083F               	movf	?___xxtofl,w
  8151     0610  0021               	movlb	1	; select bank1
  8152     0611  00A0               	movwf	_avg_tempo_voo^(0+128)
  8153                           
  8154                           ;main.c: 283:         first_read = 0;
  8155     0612  0020               	movlb	0	; select bank0
  8156     0613  01EE               	clrf	_first_read
  8157                           
  8158                           ;main.c: 284:     }
  8159     0614  2E51               	goto	i1l2808
  8160     0615                     i1l2806:
  8161                           
  8162                           ;main.c: 286:         avg_tempo_voo = ((uint16_t)avg_tempo_voo + (tempo_voo))>>1;
  8163     0615  0021               	movlb	1	; select bank1
  8164     0616  0823               	movf	(_avg_tempo_voo+3)^(0+128),w
  8165     0617  0020               	movlb	0	; select bank0
  8166     0618  00B8               	movwf	i1___fltol@f1+3
  8167     0619  0021               	movlb	1	; select bank1
  8168     061A  0822               	movf	(_avg_tempo_voo+2)^(0+128),w
  8169     061B  0020               	movlb	0	; select bank0
  8170     061C  00B7               	movwf	i1___fltol@f1+2
  8171     061D  0021               	movlb	1	; select bank1
  8172     061E  0821               	movf	(_avg_tempo_voo+1)^(0+128),w
  8173     061F  0020               	movlb	0	; select bank0
  8174     0620  00B6               	movwf	i1___fltol@f1+1
  8175     0621  0021               	movlb	1	; select bank1
  8176     0622  0820               	movf	_avg_tempo_voo^(0+128),w
  8177     0623  0020               	movlb	0	; select bank0
  8178     0624  00B5               	movwf	i1___fltol@f1
  8179     0625  318D  25F5  3185   	fcall	i1___fltol
  8180     0628  0861               	movf	_tempo_voo,w
  8181     0629  0735               	addwf	?i1___fltol,w
  8182     062A  00CD               	movwf	??_mede_height
  8183     062B  0862               	movf	_tempo_voo+1,w
  8184     062C  3D36               	addwfc	?i1___fltol+1,w
  8185     062D  00CE               	movwf	??_mede_height+1
  8186     062E  36CE               	lsrf	??_mede_height+1,f
  8187     062F  0CCD               	rrf	??_mede_height,f
  8188     0630  084D               	movf	??_mede_height,w
  8189     0631  00CF               	movwf	??_mede_height+2
  8190     0632  084E               	movf	??_mede_height+1,w
  8191     0633  00D0               	movwf	??_mede_height+3
  8192     0634  01D1               	clrf	??_mede_height+4
  8193     0635  01D2               	clrf	??_mede_height+5
  8194     0636  0852               	movf	??_mede_height+5,w
  8195     0637  00C2               	movwf	___xxtofl@val+3
  8196     0638  0851               	movf	??_mede_height+4,w
  8197     0639  00C1               	movwf	___xxtofl@val+2
  8198     063A  0850               	movf	??_mede_height+3,w
  8199     063B  00C0               	movwf	___xxtofl@val+1
  8200     063C  084F               	movf	??_mede_height+2,w
  8201     063D  00BF               	movwf	___xxtofl@val
  8202     063E  3000               	movlw	0
  8203     063F  3187  273C  3185   	fcall	___xxtofl
  8204     0642  0842               	movf	?___xxtofl+3,w
  8205     0643  0021               	movlb	1	; select bank1
  8206     0644  00A3               	movwf	(_avg_tempo_voo+3)^(0+128)
  8207     0645  0020               	movlb	0	; select bank0
  8208     0646  0841               	movf	?___xxtofl+2,w
  8209     0647  0021               	movlb	1	; select bank1
  8210     0648  00A2               	movwf	(_avg_tempo_voo+2)^(0+128)
  8211     0649  0020               	movlb	0	; select bank0
  8212     064A  0840               	movf	?___xxtofl+1,w
  8213     064B  0021               	movlb	1	; select bank1
  8214     064C  00A1               	movwf	(_avg_tempo_voo+1)^(0+128)
  8215     064D  0020               	movlb	0	; select bank0
  8216     064E  083F               	movf	?___xxtofl,w
  8217     064F  0021               	movlb	1	; select bank1
  8218     0650  00A0               	movwf	_avg_tempo_voo^(0+128)
  8219     0651                     i1l2808:
  8220                           
  8221                           ;main.c: 288:     height = (uint16_t)(avg_tempo_voo*lookupTable[(int)(adc_temp/10)]);
  8222     0651  0021               	movlb	1	; select bank1
  8223     0652  0836               	movf	(_adc_temp+1)^(0+128),w
  8224     0653  00F3               	movwf	___lwdiv@dividend+1
  8225     0654  0835               	movf	_adc_temp^(0+128),w
  8226     0655  00F2               	movwf	___lwdiv@dividend
  8227     0656  300A               	movlw	10
  8228     0657  00F0               	movwf	___lwdiv@divisor
  8229     0658  3000               	movlw	0
  8230     0659  00F1               	movwf	___lwdiv@divisor+1
  8231     065A  318D  2567  3185   	fcall	___lwdiv
  8232     065D  0871               	movf	?___lwdiv+1,w
  8233     065E  0085               	movwf	5
  8234     065F  0870               	movf	?___lwdiv,w
  8235     0660  0084               	movwf	4
  8236     0661  3584               	lslf	4,f
  8237     0662  0D85               	rlf	5,f
  8238     0663  3584               	lslf	4,f
  8239     0664  0D85               	rlf	5,f
  8240     0665  3055               	movlw	low _lookupTable
  8241     0666  0784               	addwf	4,f
  8242     0667  3004               	movlw	high _lookupTable
  8243     0668  3D05               	addwfc	5,w
  8244     0669  3880               	iorlw	128
  8245     066A  0085               	movwf	5
  8246     066B  3F00               	moviw [0]fsr0
  8247     066C  0020               	movlb	0	; select bank0
  8248     066D  00CD               	movwf	??_mede_height
  8249     066E  3F01               	moviw [1]fsr0
  8250     066F  00CE               	movwf	??_mede_height+1
  8251     0670  3F02               	moviw [2]fsr0
  8252     0671  00CF               	movwf	??_mede_height+2
  8253     0672  3F03               	moviw [3]fsr0
  8254     0673  00D0               	movwf	??_mede_height+3
  8255     0674  0850               	movf	??_mede_height+3,w
  8256     0675  00A7               	movwf	___flmul@a+3
  8257     0676  084F               	movf	??_mede_height+2,w
  8258     0677  00A6               	movwf	___flmul@a+2
  8259     0678  084E               	movf	??_mede_height+1,w
  8260     0679  00A5               	movwf	___flmul@a+1
  8261     067A  084D               	movf	??_mede_height,w
  8262     067B  00A4               	movwf	___flmul@a
  8263     067C  0021               	movlb	1	; select bank1
  8264     067D  0823               	movf	(_avg_tempo_voo+3)^(0+128),w
  8265     067E  0020               	movlb	0	; select bank0
  8266     067F  00A3               	movwf	___flmul@b+3
  8267     0680  0021               	movlb	1	; select bank1
  8268     0681  0822               	movf	(_avg_tempo_voo+2)^(0+128),w
  8269     0682  0020               	movlb	0	; select bank0
  8270     0683  00A2               	movwf	___flmul@b+2
  8271     0684  0021               	movlb	1	; select bank1
  8272     0685  0821               	movf	(_avg_tempo_voo+1)^(0+128),w
  8273     0686  0020               	movlb	0	; select bank0
  8274     0687  00A1               	movwf	___flmul@b+1
  8275     0688  0021               	movlb	1	; select bank1
  8276     0689  0820               	movf	_avg_tempo_voo^(0+128),w
  8277     068A  0020               	movlb	0	; select bank0
  8278     068B  00A0               	movwf	___flmul@b
  8279     068C  3180  2042  3185   	fcall	___flmul
  8280     068F  0823               	movf	?___flmul+3,w
  8281     0690  00B8               	movwf	i1___fltol@f1+3
  8282     0691  0822               	movf	?___flmul+2,w
  8283     0692  00B7               	movwf	i1___fltol@f1+2
  8284     0693  0821               	movf	?___flmul+1,w
  8285     0694  00B6               	movwf	i1___fltol@f1+1
  8286     0695  0820               	movf	?___flmul,w
  8287     0696  00B5               	movwf	i1___fltol@f1
  8288     0697  318D  25F5         	fcall	i1___fltol
  8289     0699  0836               	movf	?i1___fltol+1,w
  8290     069A  0021               	movlb	1	; select bank1
  8291     069B  00B4               	movwf	(_height+1)^(0+128)
  8292     069C  0020               	movlb	0	; select bank0
  8293     069D  0835               	movf	?i1___fltol,w
  8294     069E  0021               	movlb	1	; select bank1
  8295     069F  00B3               	movwf	_height^(0+128)
  8296                           
  8297                           ;main.c: 289:     balldist = height;
  8298     06A0  0833               	movf	_height^(0+128),w
  8299     06A1  00AD               	movwf	_balldist^(0+128)
  8300     06A2  0834               	movf	(_height+1)^(0+128),w
  8301     06A3  00AE               	movwf	(_balldist+1)^(0+128)
  8302     06A4  01AF               	clrf	(_balldist+2)^(0+128)
  8303     06A5  0008               	return
  8304     06A6                     __end_of_mede_height:
  8305                           
  8306                           	psect	text47
  8307     0DF5                     __ptext47:	
  8308 ;; *************** function i1___fltol *****************
  8309 ;; Defined at:
  8310 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\fltol.c"
  8311 ;; Parameters:    Size  Location     Type
  8312 ;;  f1              4   21[BANK0 ] void 
  8313 ;; Auto vars:     Size  Location     Type
  8314 ;;  exp1            1   30[BANK0 ] unsigned char 
  8315 ;;  sign1           1   29[BANK0 ] unsigned char 
  8316 ;; Return value:  Size  Location     Type
  8317 ;;                  4   21[BANK0 ] long 
  8318 ;; Registers used:
  8319 ;;		wreg, status,2, status,0
  8320 ;; Tracked objects:
  8321 ;;		On entry : 1F/0
  8322 ;;		On exit  : 1F/0
  8323 ;;		Unchanged: 0/0
  8324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8325 ;;      Params:         0       4       0       0       0       0
  8326 ;;      Locals:         0       2       0       0       0       0
  8327 ;;      Temps:          0       4       0       0       0       0
  8328 ;;      Totals:         0      10       0       0       0       0
  8329 ;;Total ram usage:       10 bytes
  8330 ;; Hardware stack levels used: 1
  8331 ;; This function calls:
  8332 ;;		Nothing
  8333 ;; This function is called by:
  8334 ;;		_mede_height
  8335 ;; This function uses a non-reentrant model
  8336 ;;
  8337                           
  8338     0DF5                     i1___fltol:	
  8339                           ;psect for function i1___fltol
  8340                           
  8341                           
  8342                           ;incstack = 0
  8343                           ; Regs used in i1___fltol: [wreg+status,2+status,0]
  8344     0DF5  1003               	clrc
  8345     0DF6  0D37               	rlf	i1___fltol@f1+2,w
  8346     0DF7  0D38               	rlf	i1___fltol@f1+3,w
  8347     0DF8  00BE               	movwf	i1___fltol@exp1
  8348     0DF9  083E               	movf	i1___fltol@exp1,w
  8349     0DFA  1D03               	btfss	3,2
  8350     0DFB  2E05               	goto	i1l2580
  8351     0DFC                     i1l2576:
  8352     0DFC  3000               	movlw	0
  8353     0DFD  00B8               	movwf	?i1___fltol+3
  8354     0DFE  3000               	movlw	0
  8355     0DFF  00B7               	movwf	?i1___fltol+2
  8356     0E00  3000               	movlw	0
  8357     0E01  00B6               	movwf	?i1___fltol+1
  8358     0E02  3000               	movlw	0
  8359     0E03  00B5               	movwf	?i1___fltol
  8360     0E04  0008               	return
  8361     0E05                     i1l2580:
  8362     0E05  0835               	movf	i1___fltol@f1,w
  8363     0E06  00B9               	movwf	??i1___fltol
  8364     0E07  0836               	movf	i1___fltol@f1+1,w
  8365     0E08  00BA               	movwf	??i1___fltol+1
  8366     0E09  0837               	movf	i1___fltol@f1+2,w
  8367     0E0A  00BB               	movwf	??i1___fltol+2
  8368     0E0B  0838               	movf	i1___fltol@f1+3,w
  8369     0E0C  00BC               	movwf	??i1___fltol+3
  8370     0E0D  301F               	movlw	31
  8371     0E0E                     u208_25:
  8372     0E0E  36BC               	lsrf	??i1___fltol+3,f
  8373     0E0F  0CBB               	rrf	??i1___fltol+2,f
  8374     0E10  0CBA               	rrf	??i1___fltol+1,f
  8375     0E11  0CB9               	rrf	??i1___fltol,f
  8376     0E12  0B89               	decfsz	9,f
  8377     0E13  2E0E               	goto	u208_25
  8378     0E14  0839               	movf	??i1___fltol,w
  8379     0E15  00BD               	movwf	i1___fltol@sign1
  8380     0E16  17B7               	bsf	i1___fltol@f1+2,7
  8381     0E17  30FF               	movlw	255
  8382     0E18  05B5               	andwf	i1___fltol@f1,f
  8383     0E19  30FF               	movlw	255
  8384     0E1A  05B6               	andwf	i1___fltol@f1+1,f
  8385     0E1B  30FF               	movlw	255
  8386     0E1C  05B7               	andwf	i1___fltol@f1+2,f
  8387     0E1D  3000               	movlw	0
  8388     0E1E  05B8               	andwf	i1___fltol@f1+3,f
  8389     0E1F  3096               	movlw	150
  8390     0E20  02BE               	subwf	i1___fltol@exp1,f
  8391     0E21  1FBE               	btfss	i1___fltol@exp1,7
  8392     0E22  2E36               	goto	i1l2598
  8393     0E23  083E               	movf	i1___fltol@exp1,w
  8394     0E24  3A80               	xorlw	128
  8395     0E25  3E97               	addlw	151
  8396     0E26  1C03               	btfss	3,0
  8397     0E27  2DFC               	goto	i1l2576
  8398     0E28                     i1l2596:
  8399     0E28  3001               	movlw	1
  8400     0E29                     u211_25:
  8401     0E29  36B8               	lsrf	i1___fltol@f1+3,f
  8402     0E2A  0CB7               	rrf	i1___fltol@f1+2,f
  8403     0E2B  0CB6               	rrf	i1___fltol@f1+1,f
  8404     0E2C  0CB5               	rrf	i1___fltol@f1,f
  8405     0E2D  0B89               	decfsz	9,f
  8406     0E2E  2E29               	goto	u211_25
  8407     0E2F  3001               	movlw	1
  8408     0E30  00B9               	movwf	??i1___fltol
  8409     0E31  0839               	movf	??i1___fltol,w
  8410     0E32  07BE               	addwf	i1___fltol@exp1,f
  8411     0E33  1903               	btfsc	3,2
  8412     0E34  2E47               	goto	i1l2606
  8413     0E35  2E28               	goto	i1l2596
  8414     0E36                     i1l2598:
  8415     0E36  3020               	movlw	32
  8416     0E37  023E               	subwf	i1___fltol@exp1,w
  8417     0E38  1803               	btfsc	3,0
  8418     0E39  2DFC               	goto	i1l2576
  8419     0E3A                     i1l1115:
  8420     0E3A  083E               	movf	i1___fltol@exp1,w
  8421     0E3B  1903               	btfsc	3,2
  8422     0E3C  2E47               	goto	i1l2606
  8423     0E3D  3001               	movlw	1
  8424     0E3E                     u214_25:
  8425     0E3E  35B5               	lslf	i1___fltol@f1,f
  8426     0E3F  0DB6               	rlf	i1___fltol@f1+1,f
  8427     0E40  0DB7               	rlf	i1___fltol@f1+2,f
  8428     0E41  0DB8               	rlf	i1___fltol@f1+3,f
  8429     0E42  0B89               	decfsz	9,f
  8430     0E43  2E3E               	goto	u214_25
  8431     0E44  3001               	movlw	1
  8432     0E45  02BE               	subwf	i1___fltol@exp1,f
  8433     0E46  2E3A               	goto	i1l1115
  8434     0E47                     i1l2606:
  8435     0E47  083D               	movf	i1___fltol@sign1,w
  8436     0E48  1903               	btfsc	3,2
  8437     0E49  0008               	return
  8438     0E4A  09B5               	comf	i1___fltol@f1,f
  8439     0E4B  09B6               	comf	i1___fltol@f1+1,f
  8440     0E4C  09B7               	comf	i1___fltol@f1+2,f
  8441     0E4D  09B8               	comf	i1___fltol@f1+3,f
  8442     0E4E  0AB5               	incf	i1___fltol@f1,f
  8443     0E4F  1903               	skipnz
  8444     0E50  0AB6               	incf	i1___fltol@f1+1,f
  8445     0E51  1903               	skipnz
  8446     0E52  0AB7               	incf	i1___fltol@f1+2,f
  8447     0E53  1903               	skipnz
  8448     0E54  0AB8               	incf	i1___fltol@f1+3,f
  8449     0E55  0008               	return
  8450     0E56                     __end_ofi1___fltol:
  8451                           
  8452                           	psect	text48
  8453     073C                     __ptext48:	
  8454 ;; *************** function ___xxtofl *****************
  8455 ;; Defined at:
  8456 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\xxtofl.c"
  8457 ;; Parameters:    Size  Location     Type
  8458 ;;  sign            1    wreg     unsigned char 
  8459 ;;  val             4   31[BANK0 ] long 
  8460 ;; Auto vars:     Size  Location     Type
  8461 ;;  sign            1   39[BANK0 ] unsigned char 
  8462 ;;  arg             4   41[BANK0 ] unsigned long 
  8463 ;;  exp             1   40[BANK0 ] unsigned char 
  8464 ;; Return value:  Size  Location     Type
  8465 ;;                  4   31[BANK0 ] unsigned char 
  8466 ;; Registers used:
  8467 ;;		wreg, status,2, status,0
  8468 ;; Tracked objects:
  8469 ;;		On entry : 1F/0
  8470 ;;		On exit  : 1F/0
  8471 ;;		Unchanged: 0/0
  8472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8473 ;;      Params:         0       4       0       0       0       0
  8474 ;;      Locals:         0       6       0       0       0       0
  8475 ;;      Temps:          0       4       0       0       0       0
  8476 ;;      Totals:         0      14       0       0       0       0
  8477 ;;Total ram usage:       14 bytes
  8478 ;; Hardware stack levels used: 1
  8479 ;; This function calls:
  8480 ;;		Nothing
  8481 ;; This function is called by:
  8482 ;;		_mede_height
  8483 ;; This function uses a non-reentrant model
  8484 ;;
  8485                           
  8486     073C                     ___xxtofl:	
  8487                           ;psect for function ___xxtofl
  8488                           
  8489                           
  8490                           ;incstack = 0
  8491                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  8492                           ;___xxtofl@sign stored from wreg
  8493     073C  00C7               	movwf	___xxtofl@sign
  8494     073D  0847               	movf	___xxtofl@sign,w
  8495     073E  1D03               	btfss	3,2
  8496     073F  1FC2               	btfss	___xxtofl@val+3,7
  8497     0740  2F51               	goto	i1l2536
  8498     0741  093F               	comf	___xxtofl@val,w
  8499     0742  00C9               	movwf	___xxtofl@arg
  8500     0743  0940               	comf	___xxtofl@val+1,w
  8501     0744  00CA               	movwf	___xxtofl@arg+1
  8502     0745  0941               	comf	___xxtofl@val+2,w
  8503     0746  00CB               	movwf	___xxtofl@arg+2
  8504     0747  0942               	comf	___xxtofl@val+3,w
  8505     0748  00CC               	movwf	___xxtofl@arg+3
  8506     0749  0AC9               	incf	___xxtofl@arg,f
  8507     074A  1903               	skipnz
  8508     074B  0ACA               	incf	___xxtofl@arg+1,f
  8509     074C  1903               	skipnz
  8510     074D  0ACB               	incf	___xxtofl@arg+2,f
  8511     074E  1903               	skipnz
  8512     074F  0ACC               	incf	___xxtofl@arg+3,f
  8513     0750  2F59               	goto	i1l1355
  8514     0751                     i1l2536:
  8515     0751  0842               	movf	___xxtofl@val+3,w
  8516     0752  00CC               	movwf	___xxtofl@arg+3
  8517     0753  0841               	movf	___xxtofl@val+2,w
  8518     0754  00CB               	movwf	___xxtofl@arg+2
  8519     0755  0840               	movf	___xxtofl@val+1,w
  8520     0756  00CA               	movwf	___xxtofl@arg+1
  8521     0757  083F               	movf	___xxtofl@val,w
  8522     0758  00C9               	movwf	___xxtofl@arg
  8523     0759                     i1l1355:
  8524     0759  0842               	movf	___xxtofl@val+3,w
  8525     075A  0441               	iorwf	___xxtofl@val+2,w
  8526     075B  0440               	iorwf	___xxtofl@val+1,w
  8527     075C  043F               	iorwf	___xxtofl@val,w
  8528     075D  1D03               	skipz
  8529     075E  2F68               	goto	i1l2542
  8530     075F  3000               	movlw	0
  8531     0760  00C2               	movwf	?___xxtofl+3
  8532     0761  3000               	movlw	0
  8533     0762  00C1               	movwf	?___xxtofl+2
  8534     0763  3000               	movlw	0
  8535     0764  00C0               	movwf	?___xxtofl+1
  8536     0765  3000               	movlw	0
  8537     0766  00BF               	movwf	?___xxtofl
  8538     0767  0008               	return
  8539     0768                     i1l2542:
  8540     0768  3096               	movlw	150
  8541     0769  00C8               	movwf	___xxtofl@exp
  8542     076A                     i1l2546:
  8543     076A  30FE               	movlw	254
  8544     076B  054C               	andwf	___xxtofl@arg+3,w
  8545     076C  1903               	btfsc	3,2
  8546     076D  2F8D               	goto	i1l1361
  8547     076E  3001               	movlw	1
  8548     076F  00C3               	movwf	??___xxtofl
  8549     0770  0843               	movf	??___xxtofl,w
  8550     0771  07C8               	addwf	___xxtofl@exp,f
  8551     0772  3001               	movlw	1
  8552     0773                     u196_25:
  8553     0773  36CC               	lsrf	___xxtofl@arg+3,f
  8554     0774  0CCB               	rrf	___xxtofl@arg+2,f
  8555     0775  0CCA               	rrf	___xxtofl@arg+1,f
  8556     0776  0CC9               	rrf	___xxtofl@arg,f
  8557     0777  0B89               	decfsz	9,f
  8558     0778  2F73               	goto	u196_25
  8559     0779  2F6A               	goto	i1l2546
  8560     077A                     i1l2548:
  8561     077A  3001               	movlw	1
  8562     077B  00C3               	movwf	??___xxtofl
  8563     077C  0843               	movf	??___xxtofl,w
  8564     077D  07C8               	addwf	___xxtofl@exp,f
  8565     077E  3001               	movlw	1
  8566     077F  07C9               	addwf	___xxtofl@arg,f
  8567     0780  3000               	movlw	0
  8568     0781  3DCA               	addwfc	___xxtofl@arg+1,f
  8569     0782  3000               	movlw	0
  8570     0783  3DCB               	addwfc	___xxtofl@arg+2,f
  8571     0784  3000               	movlw	0
  8572     0785  3DCC               	addwfc	___xxtofl@arg+3,f
  8573     0786  3001               	movlw	1
  8574     0787                     u198_25:
  8575     0787  36CC               	lsrf	___xxtofl@arg+3,f
  8576     0788  0CCB               	rrf	___xxtofl@arg+2,f
  8577     0789  0CCA               	rrf	___xxtofl@arg+1,f
  8578     078A  0CC9               	rrf	___xxtofl@arg,f
  8579     078B  0B89               	decfsz	9,f
  8580     078C  2F87               	goto	u198_25
  8581     078D                     i1l1361:
  8582     078D  30FF               	movlw	255
  8583     078E  054C               	andwf	___xxtofl@arg+3,w
  8584     078F  1903               	btfsc	3,2
  8585     0790  2F9F               	goto	i1l2556
  8586     0791  2F7A               	goto	i1l2548
  8587     0792                     i1l2558:
  8588     0792  3002               	movlw	2
  8589     0793  0248               	subwf	___xxtofl@exp,w
  8590     0794  1C03               	btfss	3,0
  8591     0795  2FA1               	goto	i1l1368
  8592     0796  3001               	movlw	1
  8593     0797  02C8               	subwf	___xxtofl@exp,f
  8594     0798  3001               	movlw	1
  8595     0799                     u200_25:
  8596     0799  35C9               	lslf	___xxtofl@arg,f
  8597     079A  0DCA               	rlf	___xxtofl@arg+1,f
  8598     079B  0DCB               	rlf	___xxtofl@arg+2,f
  8599     079C  0DCC               	rlf	___xxtofl@arg+3,f
  8600     079D  0B89               	decfsz	9,f
  8601     079E  2F99               	goto	u200_25
  8602     079F                     i1l2556:
  8603     079F  1FCB               	btfss	___xxtofl@arg+2,7
  8604     07A0  2F92               	goto	i1l2558
  8605     07A1                     i1l1368:
  8606     07A1  1848               	btfsc	___xxtofl@exp,0
  8607     07A2  2FAB               	goto	i1l1369
  8608     07A3  30FF               	movlw	255
  8609     07A4  05C9               	andwf	___xxtofl@arg,f
  8610     07A5  30FF               	movlw	255
  8611     07A6  05CA               	andwf	___xxtofl@arg+1,f
  8612     07A7  307F               	movlw	127
  8613     07A8  05CB               	andwf	___xxtofl@arg+2,f
  8614     07A9  30FF               	movlw	255
  8615     07AA  05CC               	andwf	___xxtofl@arg+3,f
  8616     07AB                     i1l1369:
  8617     07AB  1003               	clrc
  8618     07AC  0CC8               	rrf	___xxtofl@exp,f
  8619     07AD  0848               	movf	___xxtofl@exp,w
  8620     07AE  00C3               	movwf	??___xxtofl
  8621     07AF  01C4               	clrf	??___xxtofl+1
  8622     07B0  01C5               	clrf	??___xxtofl+2
  8623     07B1  01C6               	clrf	??___xxtofl+3
  8624     07B2  3018               	movlw	24
  8625     07B3                     u204_25:
  8626     07B3  35C3               	lslf	??___xxtofl,f
  8627     07B4  0DC4               	rlf	??___xxtofl+1,f
  8628     07B5  0DC5               	rlf	??___xxtofl+2,f
  8629     07B6  0DC6               	rlf	??___xxtofl+3,f
  8630     07B7  0B89               	decfsz	9,f
  8631     07B8  2FB3               	goto	u204_25
  8632     07B9  0843               	movf	??___xxtofl,w
  8633     07BA  04C9               	iorwf	___xxtofl@arg,f
  8634     07BB  0844               	movf	??___xxtofl+1,w
  8635     07BC  04CA               	iorwf	___xxtofl@arg+1,f
  8636     07BD  0845               	movf	??___xxtofl+2,w
  8637     07BE  04CB               	iorwf	___xxtofl@arg+2,f
  8638     07BF  0846               	movf	??___xxtofl+3,w
  8639     07C0  04CC               	iorwf	___xxtofl@arg+3,f
  8640     07C1  0847               	movf	___xxtofl@sign,w
  8641     07C2  1D03               	btfss	3,2
  8642     07C3  1FC2               	btfss	___xxtofl@val+3,7
  8643     07C4  2FC6               	goto	i1l2570
  8644     07C5  17CC               	bsf	___xxtofl@arg+3,7
  8645     07C6                     i1l2570:
  8646     07C6  084C               	movf	___xxtofl@arg+3,w
  8647     07C7  00C2               	movwf	?___xxtofl+3
  8648     07C8  084B               	movf	___xxtofl@arg+2,w
  8649     07C9  00C1               	movwf	?___xxtofl+2
  8650     07CA  084A               	movf	___xxtofl@arg+1,w
  8651     07CB  00C0               	movwf	?___xxtofl+1
  8652     07CC  0849               	movf	___xxtofl@arg,w
  8653     07CD  00BF               	movwf	?___xxtofl
  8654     07CE  0008               	return
  8655     07CF                     __end_of___xxtofl:
  8656                           
  8657                           	psect	text49
  8658     0D67                     __ptext49:	
  8659 ;; *************** function ___lwdiv *****************
  8660 ;; Defined at:
  8661 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lwdiv.c"
  8662 ;; Parameters:    Size  Location     Type
  8663 ;;  divisor         2    0[COMMON] unsigned int 
  8664 ;;  dividend        2    2[COMMON] unsigned int 
  8665 ;; Auto vars:     Size  Location     Type
  8666 ;;  quotient        2    5[COMMON] unsigned int 
  8667 ;;  counter         1    7[COMMON] unsigned char 
  8668 ;; Return value:  Size  Location     Type
  8669 ;;                  2    0[COMMON] unsigned int 
  8670 ;; Registers used:
  8671 ;;		wreg, status,2, status,0
  8672 ;; Tracked objects:
  8673 ;;		On entry : 1F/1
  8674 ;;		On exit  : 1F/1
  8675 ;;		Unchanged: 1F/0
  8676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8677 ;;      Params:         4       0       0       0       0       0
  8678 ;;      Locals:         3       0       0       0       0       0
  8679 ;;      Temps:          1       0       0       0       0       0
  8680 ;;      Totals:         8       0       0       0       0       0
  8681 ;;Total ram usage:        8 bytes
  8682 ;; Hardware stack levels used: 1
  8683 ;; This function calls:
  8684 ;;		Nothing
  8685 ;; This function is called by:
  8686 ;;		_mede_height
  8687 ;; This function uses a non-reentrant model
  8688 ;;
  8689                           
  8690     0D67                     ___lwdiv:	
  8691                           ;psect for function ___lwdiv
  8692                           
  8693                           
  8694                           ;incstack = 0
  8695                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  8696     0D67  01F5               	clrf	___lwdiv@quotient
  8697     0D68  01F6               	clrf	___lwdiv@quotient+1
  8698     0D69  0870               	movf	___lwdiv@divisor,w
  8699     0D6A  0471               	iorwf	___lwdiv@divisor+1,w
  8700     0D6B  1903               	btfsc	3,2
  8701     0D6C  2D96               	goto	i1l2386
  8702     0D6D  01F7               	clrf	___lwdiv@counter
  8703     0D6E  0AF7               	incf	___lwdiv@counter,f
  8704     0D6F                     i1l2374:
  8705     0D6F  1BF1               	btfsc	___lwdiv@divisor+1,7
  8706     0D70  2D7B               	goto	i1l2376
  8707     0D71  3001               	movlw	1
  8708     0D72                     u162_25:
  8709     0D72  35F0               	lslf	___lwdiv@divisor,f
  8710     0D73  0DF1               	rlf	___lwdiv@divisor+1,f
  8711     0D74  0B89               	decfsz	9,f
  8712     0D75  2D72               	goto	u162_25
  8713     0D76  3001               	movlw	1
  8714     0D77  00F4               	movwf	??___lwdiv
  8715     0D78  0874               	movf	??___lwdiv,w
  8716     0D79  07F7               	addwf	___lwdiv@counter,f
  8717     0D7A  2D6F               	goto	i1l2374
  8718     0D7B                     i1l2376:
  8719     0D7B  3001               	movlw	1
  8720     0D7C                     u164_25:
  8721     0D7C  35F5               	lslf	___lwdiv@quotient,f
  8722     0D7D  0DF6               	rlf	___lwdiv@quotient+1,f
  8723     0D7E  0B89               	decfsz	9,f
  8724     0D7F  2D7C               	goto	u164_25
  8725     0D80  0871               	movf	___lwdiv@divisor+1,w
  8726     0D81  0273               	subwf	___lwdiv@dividend+1,w
  8727     0D82  1D03               	skipz
  8728     0D83  2D86               	goto	u165_25
  8729     0D84  0870               	movf	___lwdiv@divisor,w
  8730     0D85  0272               	subwf	___lwdiv@dividend,w
  8731     0D86                     u165_25:
  8732     0D86  1C03               	skipc
  8733     0D87  2D8D               	goto	i1l2382
  8734     0D88  0870               	movf	___lwdiv@divisor,w
  8735     0D89  02F2               	subwf	___lwdiv@dividend,f
  8736     0D8A  0871               	movf	___lwdiv@divisor+1,w
  8737     0D8B  3BF3               	subwfb	___lwdiv@dividend+1,f
  8738     0D8C  1475               	bsf	___lwdiv@quotient,0
  8739     0D8D                     i1l2382:
  8740     0D8D  3001               	movlw	1
  8741     0D8E                     u166_25:
  8742     0D8E  36F1               	lsrf	___lwdiv@divisor+1,f
  8743     0D8F  0CF0               	rrf	___lwdiv@divisor,f
  8744     0D90  0B89               	decfsz	9,f
  8745     0D91  2D8E               	goto	u166_25
  8746     0D92  3001               	movlw	1
  8747     0D93  02F7               	subwf	___lwdiv@counter,f
  8748     0D94  1D03               	btfss	3,2
  8749     0D95  2D7B               	goto	i1l2376
  8750     0D96                     i1l2386:
  8751     0D96  0876               	movf	___lwdiv@quotient+1,w
  8752     0D97  00F1               	movwf	?___lwdiv+1
  8753     0D98  0875               	movf	___lwdiv@quotient,w
  8754     0D99  00F0               	movwf	?___lwdiv
  8755     0D9A  0008               	return
  8756     0D9B                     __end_of___lwdiv:
  8757                           
  8758                           	psect	text50
  8759     0042                     __ptext50:	
  8760 ;; *************** function ___flmul *****************
  8761 ;; Defined at:
  8762 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcmul.c"
  8763 ;; Parameters:    Size  Location     Type
  8764 ;;  b               4    0[BANK0 ] unsigned int 
  8765 ;;  a               4    4[BANK0 ] unsigned int 
  8766 ;; Auto vars:     Size  Location     Type
  8767 ;;  prod            4   15[BANK0 ] struct .
  8768 ;;  grs             4   10[BANK0 ] unsigned long 
  8769 ;;  temp            2   19[BANK0 ] struct .
  8770 ;;  bexp            1   14[BANK0 ] unsigned char 
  8771 ;;  aexp            1    9[BANK0 ] unsigned char 
  8772 ;;  sign            1    8[BANK0 ] unsigned char 
  8773 ;; Return value:  Size  Location     Type
  8774 ;;                  4    0[BANK0 ] unsigned char 
  8775 ;; Registers used:
  8776 ;;		wreg, status,2, status,0, pclath, cstack
  8777 ;; Tracked objects:
  8778 ;;		On entry : 1F/0
  8779 ;;		On exit  : 1F/0
  8780 ;;		Unchanged: 0/0
  8781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8782 ;;      Params:         0       8       0       0       0       0
  8783 ;;      Locals:         0      13       0       0       0       0
  8784 ;;      Temps:          5       0       0       0       0       0
  8785 ;;      Totals:         5      21       0       0       0       0
  8786 ;;Total ram usage:       26 bytes
  8787 ;; Hardware stack levels used: 1
  8788 ;; Hardware stack levels required when called: 1
  8789 ;; This function calls:
  8790 ;;		__Umul8_16
  8791 ;; This function is called by:
  8792 ;;		_mede_height
  8793 ;; This function uses a non-reentrant model
  8794 ;;
  8795                           
  8796     0042                     ___flmul:	
  8797                           ;psect for function ___flmul
  8798                           
  8799                           
  8800                           ;incstack = 0
  8801                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  8802     0042  0823               	movf	___flmul@b+3,w
  8803     0043  3980               	andlw	128
  8804     0044  00A8               	movwf	___flmul@sign
  8805     0045  3523               	lslf	___flmul@b+3,w
  8806     0046  00AE               	movwf	___flmul@bexp
  8807     0047  1BA2               	btfsc	___flmul@b+2,7
  8808     0048  142E               	bsf	___flmul@bexp,0
  8809     0049  082E               	movf	___flmul@bexp,w
  8810     004A  1903               	btfsc	3,2
  8811     004B  2859               	goto	i1l2406
  8812     004C  0A2E               	incf	___flmul@bexp,w
  8813     004D  1D03               	btfss	3,2
  8814     004E  2857               	goto	i1l2404
  8815     004F  3000               	movlw	0
  8816     0050  00A3               	movwf	___flmul@b+3
  8817     0051  3000               	movlw	0
  8818     0052  00A2               	movwf	___flmul@b+2
  8819     0053  3000               	movlw	0
  8820     0054  00A1               	movwf	___flmul@b+1
  8821     0055  3000               	movlw	0
  8822     0056  00A0               	movwf	___flmul@b
  8823     0057                     i1l2404:
  8824     0057  17A2               	bsf	___flmul@b+2,7
  8825     0058  2861               	goto	i1l2408
  8826     0059                     i1l2406:
  8827     0059  3000               	movlw	0
  8828     005A  00A3               	movwf	___flmul@b+3
  8829     005B  3000               	movlw	0
  8830     005C  00A2               	movwf	___flmul@b+2
  8831     005D  3000               	movlw	0
  8832     005E  00A1               	movwf	___flmul@b+1
  8833     005F  3000               	movlw	0
  8834     0060  00A0               	movwf	___flmul@b
  8835     0061                     i1l2408:
  8836     0061  0827               	movf	___flmul@a+3,w
  8837     0062  3980               	andlw	128
  8838     0063  00F9               	movwf	??___flmul
  8839     0064  0879               	movf	??___flmul,w
  8840     0065  06A8               	xorwf	___flmul@sign,f
  8841     0066  3527               	lslf	___flmul@a+3,w
  8842     0067  00A9               	movwf	___flmul@aexp
  8843     0068  1BA6               	btfsc	___flmul@a+2,7
  8844     0069  1429               	bsf	___flmul@aexp,0
  8845     006A  0829               	movf	___flmul@aexp,w
  8846     006B  1903               	btfsc	3,2
  8847     006C  287A               	goto	i1l2424
  8848     006D  0A29               	incf	___flmul@aexp,w
  8849     006E  1D03               	btfss	3,2
  8850     006F  2878               	goto	i1l2422
  8851     0070  3000               	movlw	0
  8852     0071  00A7               	movwf	___flmul@a+3
  8853     0072  3000               	movlw	0
  8854     0073  00A6               	movwf	___flmul@a+2
  8855     0074  3000               	movlw	0
  8856     0075  00A5               	movwf	___flmul@a+1
  8857     0076  3000               	movlw	0
  8858     0077  00A4               	movwf	___flmul@a
  8859     0078                     i1l2422:
  8860     0078  17A6               	bsf	___flmul@a+2,7
  8861     0079  2882               	goto	i1l2426
  8862     007A                     i1l2424:
  8863     007A  3000               	movlw	0
  8864     007B  00A7               	movwf	___flmul@a+3
  8865     007C  3000               	movlw	0
  8866     007D  00A6               	movwf	___flmul@a+2
  8867     007E  3000               	movlw	0
  8868     007F  00A5               	movwf	___flmul@a+1
  8869     0080  3000               	movlw	0
  8870     0081  00A4               	movwf	___flmul@a
  8871     0082                     i1l2426:
  8872     0082  0829               	movf	___flmul@aexp,w
  8873     0083  1D03               	btfss	3,2
  8874     0084  082E               	movf	___flmul@bexp,w
  8875     0085  1D03               	btfss	3,2
  8876     0086  2890               	goto	i1l2434
  8877     0087  3000               	movlw	0
  8878     0088  00A3               	movwf	?___flmul+3
  8879     0089  3000               	movlw	0
  8880     008A  00A2               	movwf	?___flmul+2
  8881     008B  3000               	movlw	0
  8882     008C  00A1               	movwf	?___flmul+1
  8883     008D  3000               	movlw	0
  8884     008E  00A0               	movwf	?___flmul
  8885     008F  0008               	return
  8886     0090                     i1l2434:
  8887     0090  0820               	movf	___flmul@b,w
  8888     0091  00F0               	movwf	__Umul8_16@multiplicand
  8889     0092  0826               	movf	___flmul@a+2,w
  8890     0093  318C  24DE  3180   	fcall	__Umul8_16
  8891     0096  0871               	movf	?__Umul8_16+1,w
  8892     0097  00B4               	movwf	___flmul@temp+1
  8893     0098  0870               	movf	?__Umul8_16,w
  8894     0099  00B3               	movwf	___flmul@temp
  8895     009A  0833               	movf	___flmul@temp,w
  8896     009B  00F9               	movwf	??___flmul
  8897     009C  01FA               	clrf	??___flmul+1
  8898     009D  01FB               	clrf	??___flmul+2
  8899     009E  01FC               	clrf	??___flmul+3
  8900     009F  087C               	movf	??___flmul+3,w
  8901     00A0  00AD               	movwf	___flmul@grs+3
  8902     00A1  087B               	movf	??___flmul+2,w
  8903     00A2  00AC               	movwf	___flmul@grs+2
  8904     00A3  087A               	movf	??___flmul+1,w
  8905     00A4  00AB               	movwf	___flmul@grs+1
  8906     00A5  0879               	movf	??___flmul,w
  8907     00A6  00AA               	movwf	___flmul@grs
  8908     00A7  0834               	movf	___flmul@temp+1,w
  8909     00A8  00F9               	movwf	??___flmul
  8910     00A9  01FA               	clrf	??___flmul+1
  8911     00AA  01FB               	clrf	??___flmul+2
  8912     00AB  01FC               	clrf	??___flmul+3
  8913     00AC  087C               	movf	??___flmul+3,w
  8914     00AD  00B2               	movwf	___flmul@prod+3
  8915     00AE  087B               	movf	??___flmul+2,w
  8916     00AF  00B1               	movwf	___flmul@prod+2
  8917     00B0  087A               	movf	??___flmul+1,w
  8918     00B1  00B0               	movwf	___flmul@prod+1
  8919     00B2  0879               	movf	??___flmul,w
  8920     00B3  00AF               	movwf	___flmul@prod
  8921     00B4  0821               	movf	___flmul@b+1,w
  8922     00B5  00F0               	movwf	__Umul8_16@multiplicand
  8923     00B6  0825               	movf	___flmul@a+1,w
  8924     00B7  318C  24DE  3180   	fcall	__Umul8_16
  8925     00BA  0871               	movf	?__Umul8_16+1,w
  8926     00BB  00B4               	movwf	___flmul@temp+1
  8927     00BC  0870               	movf	?__Umul8_16,w
  8928     00BD  00B3               	movwf	___flmul@temp
  8929     00BE  0833               	movf	___flmul@temp,w
  8930     00BF  00F9               	movwf	??___flmul
  8931     00C0  01FA               	clrf	??___flmul+1
  8932     00C1  01FB               	clrf	??___flmul+2
  8933     00C2  01FC               	clrf	??___flmul+3
  8934     00C3  0879               	movf	??___flmul,w
  8935     00C4  07AA               	addwf	___flmul@grs,f
  8936     00C5  087A               	movf	??___flmul+1,w
  8937     00C6  3DAB               	addwfc	___flmul@grs+1,f
  8938     00C7  087B               	movf	??___flmul+2,w
  8939     00C8  3DAC               	addwfc	___flmul@grs+2,f
  8940     00C9  087C               	movf	??___flmul+3,w
  8941     00CA  3DAD               	addwfc	___flmul@grs+3,f
  8942     00CB  0834               	movf	___flmul@temp+1,w
  8943     00CC  00F9               	movwf	??___flmul
  8944     00CD  01FA               	clrf	??___flmul+1
  8945     00CE  01FB               	clrf	??___flmul+2
  8946     00CF  01FC               	clrf	??___flmul+3
  8947     00D0  0879               	movf	??___flmul,w
  8948     00D1  07AF               	addwf	___flmul@prod,f
  8949     00D2  087A               	movf	??___flmul+1,w
  8950     00D3  3DB0               	addwfc	___flmul@prod+1,f
  8951     00D4  087B               	movf	??___flmul+2,w
  8952     00D5  3DB1               	addwfc	___flmul@prod+2,f
  8953     00D6  087C               	movf	??___flmul+3,w
  8954     00D7  3DB2               	addwfc	___flmul@prod+3,f
  8955     00D8  0822               	movf	___flmul@b+2,w
  8956     00D9  00F0               	movwf	__Umul8_16@multiplicand
  8957     00DA  0824               	movf	___flmul@a,w
  8958     00DB  318C  24DE  3180   	fcall	__Umul8_16
  8959     00DE  0871               	movf	?__Umul8_16+1,w
  8960     00DF  00B4               	movwf	___flmul@temp+1
  8961     00E0  0870               	movf	?__Umul8_16,w
  8962     00E1  00B3               	movwf	___flmul@temp
  8963     00E2  0833               	movf	___flmul@temp,w
  8964     00E3  00F9               	movwf	??___flmul
  8965     00E4  01FA               	clrf	??___flmul+1
  8966     00E5  01FB               	clrf	??___flmul+2
  8967     00E6  01FC               	clrf	??___flmul+3
  8968     00E7  0879               	movf	??___flmul,w
  8969     00E8  07AA               	addwf	___flmul@grs,f
  8970     00E9  087A               	movf	??___flmul+1,w
  8971     00EA  3DAB               	addwfc	___flmul@grs+1,f
  8972     00EB  087B               	movf	??___flmul+2,w
  8973     00EC  3DAC               	addwfc	___flmul@grs+2,f
  8974     00ED  087C               	movf	??___flmul+3,w
  8975     00EE  3DAD               	addwfc	___flmul@grs+3,f
  8976     00EF  0834               	movf	___flmul@temp+1,w
  8977     00F0  00F9               	movwf	??___flmul
  8978     00F1  01FA               	clrf	??___flmul+1
  8979     00F2  01FB               	clrf	??___flmul+2
  8980     00F3  01FC               	clrf	??___flmul+3
  8981     00F4  0879               	movf	??___flmul,w
  8982     00F5  07AF               	addwf	___flmul@prod,f
  8983     00F6  087A               	movf	??___flmul+1,w
  8984     00F7  3DB0               	addwfc	___flmul@prod+1,f
  8985     00F8  087B               	movf	??___flmul+2,w
  8986     00F9  3DB1               	addwfc	___flmul@prod+2,f
  8987     00FA  087C               	movf	??___flmul+3,w
  8988     00FB  3DB2               	addwfc	___flmul@prod+3,f
  8989     00FC  3008               	movlw	8
  8990     00FD                     u176_25:
  8991     00FD  35AA               	lslf	___flmul@grs,f
  8992     00FE  0DAB               	rlf	___flmul@grs+1,f
  8993     00FF  0DAC               	rlf	___flmul@grs+2,f
  8994     0100  0DAD               	rlf	___flmul@grs+3,f
  8995     0101  0B89               	decfsz	9,f
  8996     0102  28FD               	goto	u176_25
  8997     0103  0821               	movf	___flmul@b+1,w
  8998     0104  00F0               	movwf	__Umul8_16@multiplicand
  8999     0105  0824               	movf	___flmul@a,w
  9000     0106  318C  24DE  3180   	fcall	__Umul8_16
  9001     0109  0871               	movf	?__Umul8_16+1,w
  9002     010A  00B4               	movwf	___flmul@temp+1
  9003     010B  0870               	movf	?__Umul8_16,w
  9004     010C  00B3               	movwf	___flmul@temp
  9005     010D  0833               	movf	___flmul@temp,w
  9006     010E  07AA               	addwf	___flmul@grs,f
  9007     010F  0834               	movf	___flmul@temp+1,w
  9008     0110  3DAB               	addwfc	___flmul@grs+1,f
  9009     0111  3000               	movlw	0
  9010     0112  3DAC               	addwfc	___flmul@grs+2,f
  9011     0113  3DAD               	addwfc	___flmul@grs+3,f
  9012     0114  0820               	movf	___flmul@b,w
  9013     0115  00F0               	movwf	__Umul8_16@multiplicand
  9014     0116  0825               	movf	___flmul@a+1,w
  9015     0117  318C  24DE  3180   	fcall	__Umul8_16
  9016     011A  0871               	movf	?__Umul8_16+1,w
  9017     011B  00B4               	movwf	___flmul@temp+1
  9018     011C  0870               	movf	?__Umul8_16,w
  9019     011D  00B3               	movwf	___flmul@temp
  9020     011E  0833               	movf	___flmul@temp,w
  9021     011F  07AA               	addwf	___flmul@grs,f
  9022     0120  0834               	movf	___flmul@temp+1,w
  9023     0121  3DAB               	addwfc	___flmul@grs+1,f
  9024     0122  3000               	movlw	0
  9025     0123  3DAC               	addwfc	___flmul@grs+2,f
  9026     0124  3DAD               	addwfc	___flmul@grs+3,f
  9027     0125  3008               	movlw	8
  9028     0126                     u177_25:
  9029     0126  35AA               	lslf	___flmul@grs,f
  9030     0127  0DAB               	rlf	___flmul@grs+1,f
  9031     0128  0DAC               	rlf	___flmul@grs+2,f
  9032     0129  0DAD               	rlf	___flmul@grs+3,f
  9033     012A  0B89               	decfsz	9,f
  9034     012B  2926               	goto	u177_25
  9035     012C  0820               	movf	___flmul@b,w
  9036     012D  00F0               	movwf	__Umul8_16@multiplicand
  9037     012E  0824               	movf	___flmul@a,w
  9038     012F  318C  24DE  3180   	fcall	__Umul8_16
  9039     0132  0871               	movf	?__Umul8_16+1,w
  9040     0133  00B4               	movwf	___flmul@temp+1
  9041     0134  0870               	movf	?__Umul8_16,w
  9042     0135  00B3               	movwf	___flmul@temp
  9043     0136  0833               	movf	___flmul@temp,w
  9044     0137  07AA               	addwf	___flmul@grs,f
  9045     0138  0834               	movf	___flmul@temp+1,w
  9046     0139  3DAB               	addwfc	___flmul@grs+1,f
  9047     013A  3000               	movlw	0
  9048     013B  3DAC               	addwfc	___flmul@grs+2,f
  9049     013C  3DAD               	addwfc	___flmul@grs+3,f
  9050     013D  0821               	movf	___flmul@b+1,w
  9051     013E  00F0               	movwf	__Umul8_16@multiplicand
  9052     013F  0826               	movf	___flmul@a+2,w
  9053     0140  318C  24DE  3180   	fcall	__Umul8_16
  9054     0143  0871               	movf	?__Umul8_16+1,w
  9055     0144  00B4               	movwf	___flmul@temp+1
  9056     0145  0870               	movf	?__Umul8_16,w
  9057     0146  00B3               	movwf	___flmul@temp
  9058     0147  0833               	movf	___flmul@temp,w
  9059     0148  07AF               	addwf	___flmul@prod,f
  9060     0149  0834               	movf	___flmul@temp+1,w
  9061     014A  3DB0               	addwfc	___flmul@prod+1,f
  9062     014B  3000               	movlw	0
  9063     014C  3DB1               	addwfc	___flmul@prod+2,f
  9064     014D  3DB2               	addwfc	___flmul@prod+3,f
  9065     014E  0822               	movf	___flmul@b+2,w
  9066     014F  00F0               	movwf	__Umul8_16@multiplicand
  9067     0150  0825               	movf	___flmul@a+1,w
  9068     0151  318C  24DE  3180   	fcall	__Umul8_16
  9069     0154  0871               	movf	?__Umul8_16+1,w
  9070     0155  00B4               	movwf	___flmul@temp+1
  9071     0156  0870               	movf	?__Umul8_16,w
  9072     0157  00B3               	movwf	___flmul@temp
  9073     0158  0833               	movf	___flmul@temp,w
  9074     0159  07AF               	addwf	___flmul@prod,f
  9075     015A  0834               	movf	___flmul@temp+1,w
  9076     015B  3DB0               	addwfc	___flmul@prod+1,f
  9077     015C  3000               	movlw	0
  9078     015D  3DB1               	addwfc	___flmul@prod+2,f
  9079     015E  3DB2               	addwfc	___flmul@prod+3,f
  9080     015F  0822               	movf	___flmul@b+2,w
  9081     0160  00F0               	movwf	__Umul8_16@multiplicand
  9082     0161  0826               	movf	___flmul@a+2,w
  9083     0162  318C  24DE  3180   	fcall	__Umul8_16
  9084     0165  0871               	movf	?__Umul8_16+1,w
  9085     0166  00B4               	movwf	___flmul@temp+1
  9086     0167  0870               	movf	?__Umul8_16,w
  9087     0168  00B3               	movwf	___flmul@temp
  9088     0169  0833               	movf	___flmul@temp,w
  9089     016A  00F9               	movwf	??___flmul
  9090     016B  0834               	movf	___flmul@temp+1,w
  9091     016C  00FA               	movwf	??___flmul+1
  9092     016D  01FB               	clrf	??___flmul+2
  9093     016E  01FC               	clrf	??___flmul+3
  9094     016F  3008               	movlw	8
  9095     0170                     u178_25:
  9096     0170  35F9               	lslf	??___flmul,f
  9097     0171  0DFA               	rlf	??___flmul+1,f
  9098     0172  0DFB               	rlf	??___flmul+2,f
  9099     0173  0DFC               	rlf	??___flmul+3,f
  9100     0174  0B89               	decfsz	9,f
  9101     0175  2970               	goto	u178_25
  9102     0176  0879               	movf	??___flmul,w
  9103     0177  07AF               	addwf	___flmul@prod,f
  9104     0178  087A               	movf	??___flmul+1,w
  9105     0179  3DB0               	addwfc	___flmul@prod+1,f
  9106     017A  087B               	movf	??___flmul+2,w
  9107     017B  3DB1               	addwfc	___flmul@prod+2,f
  9108     017C  087C               	movf	??___flmul+3,w
  9109     017D  3DB2               	addwfc	___flmul@prod+3,f
  9110     017E  082D               	movf	___flmul@grs+3,w
  9111     017F  00F9               	movwf	??___flmul
  9112     0180  01FA               	clrf	??___flmul+1
  9113     0181  01FB               	clrf	??___flmul+2
  9114     0182  01FC               	clrf	??___flmul+3
  9115     0183  0879               	movf	??___flmul,w
  9116     0184  07AF               	addwf	___flmul@prod,f
  9117     0185  087A               	movf	??___flmul+1,w
  9118     0186  3DB0               	addwfc	___flmul@prod+1,f
  9119     0187  087B               	movf	??___flmul+2,w
  9120     0188  3DB1               	addwfc	___flmul@prod+2,f
  9121     0189  087C               	movf	??___flmul+3,w
  9122     018A  3DB2               	addwfc	___flmul@prod+3,f
  9123     018B  3008               	movlw	8
  9124     018C                     u179_25:
  9125     018C  35AA               	lslf	___flmul@grs,f
  9126     018D  0DAB               	rlf	___flmul@grs+1,f
  9127     018E  0DAC               	rlf	___flmul@grs+2,f
  9128     018F  0DAD               	rlf	___flmul@grs+3,f
  9129     0190  0B89               	decfsz	9,f
  9130     0191  298C               	goto	u179_25
  9131     0192  082E               	movf	___flmul@bexp,w
  9132     0193  0729               	addwf	___flmul@aexp,w
  9133     0194  00F9               	movwf	??___flmul
  9134     0195  01FA               	clrf	??___flmul+1
  9135     0196  0DFA               	rlf	??___flmul+1,f
  9136     0197  0879               	movf	??___flmul,w
  9137     0198  3E82               	addlw	130
  9138     0199  00B3               	movwf	___flmul@temp
  9139     019A  30FF               	movlw	255
  9140     019B  3D7A               	addwfc	??___flmul+1,w
  9141     019C  00B4               	movwf	___flmul@temp+1
  9142     019D                     i1l2486:
  9143     019D  1BB1               	btfsc	___flmul@prod+2,7
  9144     019E  29B4               	goto	i1l2488
  9145     019F  3001               	movlw	1
  9146     01A0                     u180_25:
  9147     01A0  35AF               	lslf	___flmul@prod,f
  9148     01A1  0DB0               	rlf	___flmul@prod+1,f
  9149     01A2  0DB1               	rlf	___flmul@prod+2,f
  9150     01A3  0DB2               	rlf	___flmul@prod+3,f
  9151     01A4  0B89               	decfsz	9,f
  9152     01A5  29A0               	goto	u180_25
  9153     01A6  1BAD               	btfsc	___flmul@grs+3,7
  9154     01A7  142F               	bsf	___flmul@prod,0
  9155     01A8  3001               	movlw	1
  9156     01A9                     u182_25:
  9157     01A9  35AA               	lslf	___flmul@grs,f
  9158     01AA  0DAB               	rlf	___flmul@grs+1,f
  9159     01AB  0DAC               	rlf	___flmul@grs+2,f
  9160     01AC  0DAD               	rlf	___flmul@grs+3,f
  9161     01AD  0B89               	decfsz	9,f
  9162     01AE  29A9               	goto	u182_25
  9163     01AF  30FF               	movlw	255
  9164     01B0  07B3               	addwf	___flmul@temp,f
  9165     01B1  30FF               	movlw	255
  9166     01B2  3DB4               	addwfc	___flmul@temp+1,f
  9167     01B3  299D               	goto	i1l2486
  9168     01B4                     i1l2488:
  9169     01B4  01A9               	clrf	___flmul@aexp
  9170     01B5  1FAD               	btfss	___flmul@grs+3,7
  9171     01B6  29CD               	goto	i1l2498
  9172     01B7  30FF               	movlw	255
  9173     01B8  052A               	andwf	___flmul@grs,w
  9174     01B9  00F9               	movwf	??___flmul
  9175     01BA  30FF               	movlw	255
  9176     01BB  052B               	andwf	___flmul@grs+1,w
  9177     01BC  00FA               	movwf	??___flmul+1
  9178     01BD  30FF               	movlw	255
  9179     01BE  052C               	andwf	___flmul@grs+2,w
  9180     01BF  00FB               	movwf	??___flmul+2
  9181     01C0  307F               	movlw	127
  9182     01C1  052D               	andwf	___flmul@grs+3,w
  9183     01C2  00FC               	movwf	??___flmul+3
  9184     01C3  087C               	movf	??___flmul+3,w
  9185     01C4  047B               	iorwf	??___flmul+2,w
  9186     01C5  047A               	iorwf	??___flmul+1,w
  9187     01C6  0479               	iorwf	??___flmul,w
  9188     01C7  1903               	skipnz
  9189     01C8  182F               	btfsc	___flmul@prod,0
  9190     01C9  29CB               	goto	i1l2494
  9191     01CA  29CD               	goto	i1l2498
  9192     01CB                     i1l2494:
  9193     01CB  01A9               	clrf	___flmul@aexp
  9194     01CC  0AA9               	incf	___flmul@aexp,f
  9195     01CD                     i1l2498:
  9196     01CD  0829               	movf	___flmul@aexp,w
  9197     01CE  1903               	btfsc	3,2
  9198     01CF  29F6               	goto	i1l2508
  9199     01D0  3001               	movlw	1
  9200     01D1  07AF               	addwf	___flmul@prod,f
  9201     01D2  3000               	movlw	0
  9202     01D3  3DB0               	addwfc	___flmul@prod+1,f
  9203     01D4  3000               	movlw	0
  9204     01D5  3DB1               	addwfc	___flmul@prod+2,f
  9205     01D6  3000               	movlw	0
  9206     01D7  3DB2               	addwfc	___flmul@prod+3,f
  9207     01D8  1C32               	btfss	___flmul@prod+3,0
  9208     01D9  29F6               	goto	i1l2508
  9209     01DA  082F               	movf	___flmul@prod,w
  9210     01DB  00F9               	movwf	??___flmul
  9211     01DC  0830               	movf	___flmul@prod+1,w
  9212     01DD  00FA               	movwf	??___flmul+1
  9213     01DE  0831               	movf	___flmul@prod+2,w
  9214     01DF  00FB               	movwf	??___flmul+2
  9215     01E0  0832               	movf	___flmul@prod+3,w
  9216     01E1  00FC               	movwf	??___flmul+3
  9217     01E2  3001               	movlw	1
  9218     01E3  00FD               	movwf	??___flmul+4
  9219     01E4                     u189_25:
  9220     01E4  37FC               	asrf	??___flmul+3,f
  9221     01E5  0CFB               	rrf	??___flmul+2,f
  9222     01E6  0CFA               	rrf	??___flmul+1,f
  9223     01E7  0CF9               	rrf	??___flmul,f
  9224     01E8  0BFD               	decfsz	??___flmul+4,f
  9225     01E9  29E4               	goto	u189_25
  9226     01EA  087C               	movf	??___flmul+3,w
  9227     01EB  00B2               	movwf	___flmul@prod+3
  9228     01EC  087B               	movf	??___flmul+2,w
  9229     01ED  00B1               	movwf	___flmul@prod+2
  9230     01EE  087A               	movf	??___flmul+1,w
  9231     01EF  00B0               	movwf	___flmul@prod+1
  9232     01F0  0879               	movf	??___flmul,w
  9233     01F1  00AF               	movwf	___flmul@prod
  9234     01F2  3001               	movlw	1
  9235     01F3  07B3               	addwf	___flmul@temp,f
  9236     01F4  3000               	movlw	0
  9237     01F5  3DB4               	addwfc	___flmul@temp+1,f
  9238     01F6                     i1l2508:
  9239     01F6  0834               	movf	___flmul@temp+1,w
  9240     01F7  3A80               	xorlw	128
  9241     01F8  00F9               	movwf	??___flmul
  9242     01F9  3080               	movlw	128
  9243     01FA  0279               	subwf	??___flmul,w
  9244     01FB  1D03               	skipz
  9245     01FC  29FF               	goto	u190_25
  9246     01FD  30FF               	movlw	255
  9247     01FE  0233               	subwf	___flmul@temp,w
  9248     01FF                     u190_25:
  9249     01FF  1C03               	skipc
  9250     0200  2A0B               	goto	i1l2512
  9251     0201  307F               	movlw	127
  9252     0202  0020               	movlb	0	; select bank0
  9253     0203  00B2               	movwf	___flmul@prod+3
  9254     0204  3080               	movlw	128
  9255     0205  00B1               	movwf	___flmul@prod+2
  9256     0206  3000               	movlw	0
  9257     0207  00B0               	movwf	___flmul@prod+1
  9258     0208  3000               	movlw	0
  9259     0209  00AF               	movwf	___flmul@prod
  9260     020A  2A31               	goto	i1l1323
  9261     020B                     i1l2512:
  9262     020B  0020               	movlb	0	; select bank0
  9263     020C  0834               	movf	___flmul@temp+1,w
  9264     020D  3A80               	xorlw	128
  9265     020E  00F9               	movwf	??___flmul
  9266     020F  3080               	movlw	128
  9267     0210  0279               	subwf	??___flmul,w
  9268     0211  1D03               	skipz
  9269     0212  2A15               	goto	u191_25
  9270     0213  3001               	movlw	1
  9271     0214  0233               	subwf	___flmul@temp,w
  9272     0215                     u191_25:
  9273     0215  1803               	skipnc
  9274     0216  2A22               	goto	i1l2518
  9275     0217  3000               	movlw	0
  9276     0218  0020               	movlb	0	; select bank0
  9277     0219  00B2               	movwf	___flmul@prod+3
  9278     021A  3000               	movlw	0
  9279     021B  00B1               	movwf	___flmul@prod+2
  9280     021C  3000               	movlw	0
  9281     021D  00B0               	movwf	___flmul@prod+1
  9282     021E  3000               	movlw	0
  9283     021F  00AF               	movwf	___flmul@prod
  9284     0220  01A8               	clrf	___flmul@sign
  9285     0221  2A31               	goto	i1l1323
  9286     0222                     i1l2518:
  9287     0222  0020               	movlb	0	; select bank0
  9288     0223  0833               	movf	___flmul@temp,w
  9289     0224  00AE               	movwf	___flmul@bexp
  9290     0225  30FF               	movlw	255
  9291     0226  05AF               	andwf	___flmul@prod,f
  9292     0227  30FF               	movlw	255
  9293     0228  05B0               	andwf	___flmul@prod+1,f
  9294     0229  307F               	movlw	127
  9295     022A  05B1               	andwf	___flmul@prod+2,f
  9296     022B  3000               	movlw	0
  9297     022C  05B2               	andwf	___flmul@prod+3,f
  9298     022D  182E               	btfsc	___flmul@bexp,0
  9299     022E  17B1               	bsf	___flmul@prod+2,7
  9300     022F  362E               	lsrf	___flmul@bexp,w
  9301     0230  00B2               	movwf	___flmul@prod+3
  9302     0231                     i1l1323:
  9303     0231  0828               	movf	___flmul@sign,w
  9304     0232  00F9               	movwf	??___flmul
  9305     0233  0879               	movf	??___flmul,w
  9306     0234  04B2               	iorwf	___flmul@prod+3,f
  9307     0235  0832               	movf	___flmul@prod+3,w
  9308     0236  00A3               	movwf	?___flmul+3
  9309     0237  0831               	movf	___flmul@prod+2,w
  9310     0238  00A2               	movwf	?___flmul+2
  9311     0239  0830               	movf	___flmul@prod+1,w
  9312     023A  00A1               	movwf	?___flmul+1
  9313     023B  082F               	movf	___flmul@prod,w
  9314     023C  00A0               	movwf	?___flmul
  9315     023D  0008               	return
  9316     023E                     __end_of___flmul:
  9317                           
  9318                           	psect	text51
  9319     0CDE                     __ptext51:	
  9320 ;; *************** function __Umul8_16 *****************
  9321 ;; Defined at:
  9322 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul8_16.c"
  9323 ;; Parameters:    Size  Location     Type
  9324 ;;  multiplier      1    wreg     unsigned char 
  9325 ;;  multiplicand    1    0[COMMON] unsigned char 
  9326 ;; Auto vars:     Size  Location     Type
  9327 ;;  multiplier      1    8[COMMON] unsigned char 
  9328 ;;  word_mpld       2    6[COMMON] unsigned short 
  9329 ;;  product         2    4[COMMON] unsigned short 
  9330 ;; Return value:  Size  Location     Type
  9331 ;;                  2    0[COMMON] unsigned int 
  9332 ;; Registers used:
  9333 ;;		wreg, status,2, status,0
  9334 ;; Tracked objects:
  9335 ;;		On entry : 1F/0
  9336 ;;		On exit  : 1F/0
  9337 ;;		Unchanged: 1F/0
  9338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9339 ;;      Params:         2       0       0       0       0       0
  9340 ;;      Locals:         5       0       0       0       0       0
  9341 ;;      Temps:          2       0       0       0       0       0
  9342 ;;      Totals:         9       0       0       0       0       0
  9343 ;;Total ram usage:        9 bytes
  9344 ;; Hardware stack levels used: 1
  9345 ;; This function calls:
  9346 ;;		Nothing
  9347 ;; This function is called by:
  9348 ;;		___flmul
  9349 ;; This function uses a non-reentrant model
  9350 ;;
  9351                           
  9352     0CDE                     __Umul8_16:	
  9353                           ;psect for function __Umul8_16
  9354                           
  9355                           
  9356                           ;incstack = 0
  9357                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  9358                           ;__Umul8_16@multiplier stored from wreg
  9359     0CDE  00F8               	movwf	__Umul8_16@multiplier
  9360     0CDF  01F4               	clrf	__Umul8_16@product
  9361     0CE0  01F5               	clrf	__Umul8_16@product+1
  9362     0CE1  0870               	movf	__Umul8_16@multiplicand,w
  9363     0CE2  00F2               	movwf	??__Umul8_16
  9364     0CE3  01F3               	clrf	??__Umul8_16+1
  9365     0CE4  0872               	movf	??__Umul8_16,w
  9366     0CE5  00F6               	movwf	__Umul8_16@word_mpld
  9367     0CE6  0873               	movf	??__Umul8_16+1,w
  9368     0CE7  00F7               	movwf	__Umul8_16@word_mpld+1
  9369     0CE8                     i1l2264:
  9370     0CE8  1C78               	btfss	__Umul8_16@multiplier,0
  9371     0CE9  2CEE               	goto	i1l1330
  9372     0CEA  0876               	movf	__Umul8_16@word_mpld,w
  9373     0CEB  07F4               	addwf	__Umul8_16@product,f
  9374     0CEC  0877               	movf	__Umul8_16@word_mpld+1,w
  9375     0CED  3DF5               	addwfc	__Umul8_16@product+1,f
  9376     0CEE                     i1l1330:
  9377     0CEE  3001               	movlw	1
  9378     0CEF                     u142_25:
  9379     0CEF  35F6               	lslf	__Umul8_16@word_mpld,f
  9380     0CF0  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  9381     0CF1  0B89               	decfsz	9,f
  9382     0CF2  2CEF               	goto	u142_25
  9383     0CF3  1003               	clrc
  9384     0CF4  0CF8               	rrf	__Umul8_16@multiplier,f
  9385     0CF5  0878               	movf	__Umul8_16@multiplier,w
  9386     0CF6  1D03               	btfss	3,2
  9387     0CF7  2CE8               	goto	i1l2264
  9388     0CF8  0875               	movf	__Umul8_16@product+1,w
  9389     0CF9  00F1               	movwf	?__Umul8_16+1
  9390     0CFA  0874               	movf	__Umul8_16@product,w
  9391     0CFB  00F0               	movwf	?__Umul8_16
  9392     0CFC  0008               	return
  9393     0CFD                     __end_of__Umul8_16:
  9394                           
  9395                           	psect	text52
  9396     0B90                     __ptext52:	
  9397 ;; *************** function _TMR1_Reload *****************
  9398 ;; Defined at:
  9399 ;;		line 146 in file "mcc_generated_files/tmr1.c"
  9400 ;; Parameters:    Size  Location     Type
  9401 ;;		None
  9402 ;; Auto vars:     Size  Location     Type
  9403 ;;		None
  9404 ;; Return value:  Size  Location     Type
  9405 ;;                  1    wreg      void 
  9406 ;; Registers used:
  9407 ;;		wreg, status,2, status,0, pclath, cstack
  9408 ;; Tracked objects:
  9409 ;;		On entry : 1F/0
  9410 ;;		On exit  : 1F/0
  9411 ;;		Unchanged: 0/0
  9412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9413 ;;      Params:         0       0       0       0       0       0
  9414 ;;      Locals:         0       0       0       0       0       0
  9415 ;;      Temps:          0       0       0       0       0       0
  9416 ;;      Totals:         0       0       0       0       0       0
  9417 ;;Total ram usage:        0 bytes
  9418 ;; Hardware stack levels used: 1
  9419 ;; Hardware stack levels required when called: 1
  9420 ;; This function calls:
  9421 ;;		_TMR1_WriteTimer
  9422 ;; This function is called by:
  9423 ;;		_mede_height
  9424 ;; This function uses a non-reentrant model
  9425 ;;
  9426                           
  9427     0B90                     _TMR1_Reload:	
  9428                           ;psect for function _TMR1_Reload
  9429                           
  9430                           
  9431                           ;mcc_generated_files/tmr1.c: 148:     TMR1_WriteTimer(timer1ReloadVal);
  9432                           
  9433                           ;incstack = 0
  9434                           ; Regs used in _TMR1_Reload: [wreg+status,2+status,0+pclath+cstack]
  9435     0B90  0021               	movlb	1	; select bank1
  9436     0B91  0844               	movf	(_timer1ReloadVal+1)^(0+128),w	;volatile
  9437     0B92  00F1               	movwf	TMR1_WriteTimer@timerVal+1
  9438     0B93  0843               	movf	_timer1ReloadVal^(0+128),w	;volatile
  9439     0B94  00F0               	movwf	TMR1_WriteTimer@timerVal
  9440     0B95  318C  2414         	fcall	_TMR1_WriteTimer
  9441     0B97  0008               	return
  9442     0B98                     __end_of_TMR1_Reload:
  9443                           
  9444                           	psect	text53
  9445     0C14                     __ptext53:	
  9446 ;; *************** function _TMR1_WriteTimer *****************
  9447 ;; Defined at:
  9448 ;;		line 124 in file "mcc_generated_files/tmr1.c"
  9449 ;; Parameters:    Size  Location     Type
  9450 ;;  timerVal        2    0[COMMON] unsigned short 
  9451 ;; Auto vars:     Size  Location     Type
  9452 ;;		None
  9453 ;; Return value:  Size  Location     Type
  9454 ;;                  1    wreg      void 
  9455 ;; Registers used:
  9456 ;;		wreg
  9457 ;; Tracked objects:
  9458 ;;		On entry : 1F/1
  9459 ;;		On exit  : 1F/0
  9460 ;;		Unchanged: 0/0
  9461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9462 ;;      Params:         2       0       0       0       0       0
  9463 ;;      Locals:         0       0       0       0       0       0
  9464 ;;      Temps:          0       0       0       0       0       0
  9465 ;;      Totals:         2       0       0       0       0       0
  9466 ;;Total ram usage:        2 bytes
  9467 ;; Hardware stack levels used: 1
  9468 ;; This function calls:
  9469 ;;		Nothing
  9470 ;; This function is called by:
  9471 ;;		_TMR1_Reload
  9472 ;; This function uses a non-reentrant model
  9473 ;;
  9474                           
  9475     0C14                     _TMR1_WriteTimer:	
  9476                           ;psect for function _TMR1_WriteTimer
  9477                           
  9478                           
  9479                           ;mcc_generated_files/tmr1.c: 124: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 125: {;mcc_generated_files/tmr1.c: 126:     if (T1CONbits.nT1SYNC == 1)
  9480                           
  9481                           ;incstack = 0
  9482                           ; Regs used in _TMR1_WriteTimer: [wreg]
  9483     0C14  0020               	movlb	0	; select bank0
  9484     0C15  1D18               	btfss	24,2	;volatile
  9485     0C16  2C1E               	goto	i1l2258
  9486                           
  9487                           ;mcc_generated_files/tmr1.c: 127:     {;mcc_generated_files/tmr1.c: 129:         T1CONbi
      +                          ts.TMR1ON = 0;
  9488     0C17  1018               	bcf	24,0	;volatile
  9489                           
  9490                           ;mcc_generated_files/tmr1.c: 132:         TMR1H = (uint8_t)(timerVal >> 8);
  9491     0C18  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  9492     0C19  0097               	movwf	23	;volatile
  9493                           
  9494                           ;mcc_generated_files/tmr1.c: 133:         TMR1L = (uint8_t)timerVal;
  9495     0C1A  0870               	movf	TMR1_WriteTimer@timerVal,w
  9496     0C1B  0096               	movwf	22	;volatile
  9497                           
  9498                           ;mcc_generated_files/tmr1.c: 136:         T1CONbits.TMR1ON =1;
  9499     0C1C  1418               	bsf	24,0	;volatile
  9500                           
  9501                           ;mcc_generated_files/tmr1.c: 137:     }
  9502     0C1D  0008               	return
  9503     0C1E                     i1l2258:
  9504                           
  9505                           ;mcc_generated_files/tmr1.c: 139:     {;mcc_generated_files/tmr1.c: 141:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
  9506     0C1E  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  9507     0C1F  0097               	movwf	23	;volatile
  9508                           
  9509                           ;mcc_generated_files/tmr1.c: 142:         TMR1L = (uint8_t)timerVal;
  9510     0C20  0870               	movf	TMR1_WriteTimer@timerVal,w
  9511     0C21  0096               	movwf	22	;volatile
  9512     0C22  0008               	return
  9513     0C23                     __end_of_TMR1_WriteTimer:
  9514                           
  9515                           	psect	text54
  9516     0C5E                     __ptext54:	
  9517 ;; *************** function _TMR1_ReadTimer *****************
  9518 ;; Defined at:
  9519 ;;		line 109 in file "mcc_generated_files/tmr1.c"
  9520 ;; Parameters:    Size  Location     Type
  9521 ;;		None
  9522 ;; Auto vars:     Size  Location     Type
  9523 ;;  readVal         2    7[COMMON] unsigned short 
  9524 ;;  readValLow      1   10[COMMON] unsigned char 
  9525 ;;  readValHigh     1    9[COMMON] unsigned char 
  9526 ;; Return value:  Size  Location     Type
  9527 ;;                  2    0[COMMON] unsigned short 
  9528 ;; Registers used:
  9529 ;;		wreg
  9530 ;; Tracked objects:
  9531 ;;		On entry : 1F/0
  9532 ;;		On exit  : 1F/0
  9533 ;;		Unchanged: 0/0
  9534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9535 ;;      Params:         2       0       0       0       0       0
  9536 ;;      Locals:         4       0       0       0       0       0
  9537 ;;      Temps:          5       0       0       0       0       0
  9538 ;;      Totals:        11       0       0       0       0       0
  9539 ;;Total ram usage:       11 bytes
  9540 ;; Hardware stack levels used: 1
  9541 ;; This function calls:
  9542 ;;		Nothing
  9543 ;; This function is called by:
  9544 ;;		_mede_height
  9545 ;; This function uses a non-reentrant model
  9546 ;;
  9547                           
  9548     0C5E                     _TMR1_ReadTimer:	
  9549                           ;psect for function _TMR1_ReadTimer
  9550                           
  9551                           
  9552                           ;mcc_generated_files/tmr1.c: 111:     uint16_t readVal;;mcc_generated_files/tmr1.c: 112:
      +                               uint8_t readValHigh;;mcc_generated_files/tmr1.c: 113:     uint8_t readValLow;;mcc_g
      +                          enerated_files/tmr1.c: 116:     readValLow = TMR1L;
  9553                           
  9554                           ;incstack = 0
  9555                           ; Regs used in _TMR1_ReadTimer: [wreg]
  9556     0C5E  0816               	movf	22,w	;volatile
  9557     0C5F  00FA               	movwf	TMR1_ReadTimer@readValLow
  9558                           
  9559                           ;mcc_generated_files/tmr1.c: 117:     readValHigh = TMR1H;
  9560     0C60  0817               	movf	23,w	;volatile
  9561     0C61  00F9               	movwf	TMR1_ReadTimer@readValHigh
  9562                           
  9563                           ;mcc_generated_files/tmr1.c: 119:     readVal = ((uint16_t)readValHigh << 8) | readValLo
      +                          w;
  9564     0C62  087A               	movf	TMR1_ReadTimer@readValLow,w
  9565     0C63  00F2               	movwf	??_TMR1_ReadTimer
  9566     0C64  01F3               	clrf	??_TMR1_ReadTimer+1
  9567     0C65  0879               	movf	TMR1_ReadTimer@readValHigh,w
  9568     0C66  00F4               	movwf	??_TMR1_ReadTimer+2
  9569     0C67  01F5               	clrf	??_TMR1_ReadTimer+3
  9570     0C68  0874               	movf	??_TMR1_ReadTimer+2,w
  9571     0C69  00F5               	movwf	??_TMR1_ReadTimer+3
  9572     0C6A  01F4               	clrf	??_TMR1_ReadTimer+2
  9573     0C6B  0872               	movf	??_TMR1_ReadTimer,w
  9574     0C6C  0474               	iorwf	??_TMR1_ReadTimer+2,w
  9575     0C6D  00F7               	movwf	TMR1_ReadTimer@readVal
  9576     0C6E  0873               	movf	??_TMR1_ReadTimer+1,w
  9577     0C6F  0475               	iorwf	??_TMR1_ReadTimer+3,w
  9578     0C70  00F8               	movwf	TMR1_ReadTimer@readVal+1
  9579                           
  9580                           ;mcc_generated_files/tmr1.c: 121:     return readVal;
  9581     0C71  0878               	movf	TMR1_ReadTimer@readVal+1,w
  9582     0C72  00F1               	movwf	?_TMR1_ReadTimer+1
  9583     0C73  0877               	movf	TMR1_ReadTimer@readVal,w
  9584     0C74  00F0               	movwf	?_TMR1_ReadTimer
  9585     0C75  0008               	return
  9586     0C76                     __end_of_TMR1_ReadTimer:
  9587                           
  9588                           	psect	text55
  9589     0B4F                     __ptext55:	
  9590 ;; *************** function _PIN_MANAGER_IOC *****************
  9591 ;; Defined at:
  9592 ;;		line 98 in file "mcc_generated_files/pin_manager.c"
  9593 ;; Parameters:    Size  Location     Type
  9594 ;;		None
  9595 ;; Auto vars:     Size  Location     Type
  9596 ;;		None
  9597 ;; Return value:  Size  Location     Type
  9598 ;;                  1    wreg      void 
  9599 ;; Registers used:
  9600 ;;		None
  9601 ;; Tracked objects:
  9602 ;;		On entry : 0/0
  9603 ;;		On exit  : 0/0
  9604 ;;		Unchanged: 0/0
  9605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9606 ;;      Params:         0       0       0       0       0       0
  9607 ;;      Locals:         0       0       0       0       0       0
  9608 ;;      Temps:          0       0       0       0       0       0
  9609 ;;      Totals:         0       0       0       0       0       0
  9610 ;;Total ram usage:        0 bytes
  9611 ;; Hardware stack levels used: 1
  9612 ;; This function calls:
  9613 ;;		Nothing
  9614 ;; This function is called by:
  9615 ;;		_INTERRUPT_InterruptManager
  9616 ;; This function uses a non-reentrant model
  9617 ;;
  9618                           
  9619     0B4F                     _PIN_MANAGER_IOC:	
  9620                           ;psect for function _PIN_MANAGER_IOC
  9621                           
  9622                           
  9623                           ;incstack = 0
  9624                           ; Regs used in _PIN_MANAGER_IOC: []
  9625     0B4F  0008               	return
  9626     0B50                     __end_of_PIN_MANAGER_IOC:
  9627     007E                     btemp	set	126	;btemp
  9628     007E                     int$flags	set	126
  9629     007E                     wtemp0	set	126
  9630                           
  9631                           	psect	config
  9632                           
  9633                           ;Config register CONFIG1 @ 0x8007
  9634                           ;	Oscillator Selection
  9635                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  9636                           ;	Watchdog Timer Enable
  9637                           ;	WDTE = OFF, WDT disabled
  9638                           ;	Power-up Timer Enable
  9639                           ;	PWRTE = OFF, PWRT disabled
  9640                           ;	MCLR Pin Function Select
  9641                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  9642                           ;	Flash Program Memory Code Protection
  9643                           ;	CP = OFF, Program memory code protection is disabled
  9644                           ;	Data Memory Code Protection
  9645                           ;	CPD = OFF, Data memory code protection is disabled
  9646                           ;	Brown-out Reset Enable
  9647                           ;	BOREN = ON, Brown-out Reset enabled
  9648                           ;	Clock Out Enable
  9649                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  9650                           ;	Internal/External Switchover
  9651                           ;	IESO = ON, Internal/External Switchover mode is enabled
  9652                           ;	Fail-Safe Clock Monitor Enable
  9653                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  9654     8007                     	org	32775
  9655     8007  3FE4               	dw	16356
  9656                           
  9657                           ;Config register CONFIG2 @ 0x8008
  9658                           ;	Flash Memory Self-Write Protection
  9659                           ;	WRT = OFF, Write protection off
  9660                           ;	PLL Enable
  9661                           ;	PLLEN = OFF, 4x PLL disabled
  9662                           ;	Stack Overflow/Underflow Reset Enable
  9663                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  9664                           ;	Brown-out Reset Voltage Selection
  9665                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  9666                           ;	In-Circuit Debugger Mode
  9667                           ;	DEBUG = 0x1, unprogrammed default
  9668                           ;	Low-Voltage Programming Enable
  9669                           ;	LVP = ON, Low-voltage programming enabled
  9670     8008                     	org	32776
  9671     8008  3EFF               	dw	16127

Data Sizes:
    Strings     0
    Constant    204
    Data        19
    BSS         73
    Persistent  40
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     51      79
    BANK1            80     34      79
    BANK2            80      0      27
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), NULL(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), NULL(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), NULL(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    TMR1_GateInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> mede_height(), TMR1_DefaultGateInterruptHandler(), NULL(), 

    TMR1_SetGateInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> mede_height(), TMR1_DefaultGateInterruptHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _mede_height->___flmul
    i1___fltol->___flmul
    ___flmul->__Umul8_16
    _TMR1_Reload->_TMR1_WriteTimer

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _TMR1_GATE_ISR->_mede_height
    _mede_height->___xxtofl
    i1___fltol->___flmul
    ___xxtofl->i1___fltol

Critical Paths under _main in BANK1

    _setaPorta->_daUmPasso
    _fluxpos->_daUmPasso
    _daUmPasso->_definePassoMotor
    _envia_Tx->___fltol
    _controlchoose->_pwmcontrol
    _pwmcontrol->___atdiv
    _fluxcontrol->___atdiv
    ___atdiv->___tmul
    _analisa_Rx->_EPWM1_LoadDutyValue
    _TMR1_Initialize->_TMR1_SetGateInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    7024
                                             33 BANK1      1     1      0
                  _ADC_GetConversion
                        _EUSART_Read
                 _EUSART_is_rx_ready
                  _SYSTEM_Initialize
                     _TMR0_ReadTimer
       _TMR1_SetGateInterruptHandler
                     _TMR4_StopTimer
            _TMR6_LoadPeriodRegister
                    _TMR6_WriteTimer
                         _analisa_Rx
                      _controlchoose
                           _envia_Tx
                            _fluxpos
                          _setaPorta
 ---------------------------------------------------------------------------------
 (1) _setaPorta                                            1     1      0     306
                                              4 BANK1      1     1      0
               _CMP1_GetOutputStatus
                          _daUmPasso
 ---------------------------------------------------------------------------------
 (2) _CMP1_GetOutputStatus                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _fluxpos                                              4     4      0     306
                                              4 BANK1      4     4      0
                          _daUmPasso
 ---------------------------------------------------------------------------------
 (2) _daUmPasso                                            1     1      0     306
                                              3 BANK1      1     1      0
                   _definePassoMotor
 ---------------------------------------------------------------------------------
 (3) _definePassoMotor                                     3     2      1     240
                                              0 BANK1      3     2      1
 ---------------------------------------------------------------------------------
 (1) _envia_Tx                                             0     0      0     427
                       _EUSART_Write
                            ___fltol
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     405
                                              0 BANK1     10     6      4
 ---------------------------------------------------------------------------------
 (2) _EUSART_Write                                         1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _controlchoose                                        0     0      0    4982
                    _TMR4_StartTimer
                        _fluxcontrol
                         _pwmcontrol
 ---------------------------------------------------------------------------------
 (2) _pwmcontrol                                          12    12      0    2627
                                             21 BANK1     12    12      0
                _EPWM1_LoadDutyValue
                            ___atdiv
                             ___tmul
 ---------------------------------------------------------------------------------
 (2) _fluxcontrol                                          6     6      0    2355
                                             21 BANK1      6     6      0
                            ___atdiv
                             ___tmul
 ---------------------------------------------------------------------------------
 (3) ___tmul                                               9     3      6    1596
                                              0 BANK1      9     3      6
 ---------------------------------------------------------------------------------
 (3) ___atdiv                                             12     6      6     756
                                              9 BANK1     12     6      6
                             ___tmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _TMR4_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _analisa_Rx                                           2     2      0     272
                                              4 BANK1      2     2      0
                _EPWM1_LoadDutyValue
 ---------------------------------------------------------------------------------
 (3) _EPWM1_LoadDutyValue                                  4     2      2     272
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (1) _TMR6_WriteTimer                                      1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _TMR6_LoadPeriodRegister                              1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _TMR4_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR0_ReadTimer                                       1     1      0      23
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     468
                     _ADC_Initialize
                    _CMP1_Initialize
                     _DAC_Initialize
                   _EPWM1_Initialize
                  _EUSART_Initialize
                     _FVR_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
                    _TMR6_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     174
       _TMR1_SetGateInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetGateInterruptHandler                         2     0      2     174
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     294
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _EPWM1_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DAC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CMP1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_is_rx_ready                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Read                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion                                    4     2      2      22
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0    3722
                    _PIN_MANAGER_IOC
                      _TMR1_GATE_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR1_GATE_ISR                                        0     0      0    3722
                                NULL *
   _TMR1_DefaultGateInterruptHandler *
                        _mede_height *
 ---------------------------------------------------------------------------------
 (6) _mede_height                                          6     6      0    3722
                                             45 BANK0      6     6      0
                     _TMR1_ReadTimer
                        _TMR1_Reload
                            ___flmul
                            ___lwdiv
                           ___xxtofl
                          i1___fltol
 ---------------------------------------------------------------------------------
 (7) i1___fltol                                           10     6      4     281
                                             21 BANK0     10     6      4
                            ___flmul (ARG)
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (7) ___xxtofl                                            14    10      4     474
                                             31 BANK0     14    10      4
                          i1___fltol (ARG)
 ---------------------------------------------------------------------------------
 (7) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (7) ___flmul                                             26    18      8    2418
                                              9 COMMON     5     5      0
                                              0 BANK0     21    13      8
                          __Umul8_16
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (8) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (7) _TMR1_Reload                                          0     0      0     166
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (8) _TMR1_WriteTimer                                      2     0      2     166
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (7) _TMR1_ReadTimer                                      11     9      2      69
                                              0 COMMON    11     9      2
 ---------------------------------------------------------------------------------
 (6) _TMR1_DefaultGateInterruptHandler                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _PIN_MANAGER_IOC                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion
   _EUSART_Read
   _EUSART_is_rx_ready
   _SYSTEM_Initialize
     _ADC_Initialize
     _CMP1_Initialize
     _DAC_Initialize
     _EPWM1_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _FVR_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
     _TMR1_Initialize
       _TMR1_SetGateInterruptHandler
     _TMR2_Initialize
     _TMR4_Initialize
     _TMR6_Initialize
     _WDT_Initialize
   _TMR0_ReadTimer
   _TMR1_SetGateInterruptHandler
   _TMR4_StopTimer
   _TMR6_LoadPeriodRegister
   _TMR6_WriteTimer
   _analisa_Rx
     _EPWM1_LoadDutyValue
   _controlchoose
     _TMR4_StartTimer
     _fluxcontrol
       ___atdiv
         ___tmul (ARG)
       ___tmul
     _pwmcontrol
       _EPWM1_LoadDutyValue
       ___atdiv
       ___tmul
   _envia_Tx
     _EUSART_Write
     ___fltol
   _fluxpos
     _daUmPasso
       _definePassoMotor
   _setaPorta
     _CMP1_GetOutputStatus
     _daUmPasso

 _INTERRUPT_InterruptManager (ROOT)
   _PIN_MANAGER_IOC
   _TMR1_GATE_ISR
     NULL(Fake) *
     _TMR1_DefaultGateInterruptHandler *
     _mede_height *
       _TMR1_ReadTimer
       _TMR1_Reload
         _TMR1_WriteTimer
       ___flmul
         __Umul8_16
         ___lwdiv (ARG)
       ___lwdiv
       ___xxtofl
         i1___fltol (ARG)
           ___flmul (ARG)
           ___lwdiv (ARG)
       i1___fltol

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      C7       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     33      4F       6       98.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     22      4F       8       98.8%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      1B      10       33.8%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      C7      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Thu Sep 05 21:17:54 2024

                            ??_CMP1_Initialize 00CD                               ___atdiv@quotient 00DF  
                                           _dc 00BB                         __end_of_FVR_Initialize 0B53  
                              _timer0ReloadVal 006B                            __Umul8_16@word_mpld 0076  
                                          l240 0BFA                                            l333 0C88  
                                          l247 0BC9                                            l705 0DD1  
                                          l617 0CBD                                            l708 0DD3  
                                          l717 0DD8                                            l584 043F  
                                          l585 0449                                            l665 0DA9  
                                          l649 0DA0                                            l683 0DB4  
                                          l659 0DA5                                            l668 0DAB  
                                          l597 0350                                            l677 0DB0  
                                          l689 0DC8                                            l699 0DCD  
                                          _PR2 001B                                            _PR4 0416  
                                          _PR6 041D                                _timer1ReloadVal 00C3  
                                          _kif 012C                                            _kdp 0123  
                                          _kip 0126                                            _kpf 012F  
                                          _vRx 00BD                                            _vTx 00BF  
                                          _kpp 0129                 ?_EUSART_SetFramingErrorHandler 00CD  
                                 i1___fltol@f1 0035                                   ?_mede_height 0070  
                              _TMR2_Initialize 0BC0                                            wreg 0009  
                                 ___flmul@aexp 0029                                   ___flmul@bexp 002E  
     __end_of_TMR1_DefaultGateInterruptHandler 0003             ??_TMR1_DefaultGateInterruptHandler 0070  
            ?_TMR1_DefaultGateInterruptHandler 0070               _TMR1_DefaultGateInterruptHandler 0002  
                                 ___flmul@sign 0028                                   ___flmul@temp 0033  
                                 ___flmul@prod 002F                                   ?_EUSART_Read 0070  
                                 ___fltol@exp1 00D6                                           l1031 0EC4  
                                         l1115 0E9B                                           l3004 05DC  
                                         l2312 0D47                                           l2304 0DDE  
                                         l3120 072B                                           l2306 0DEC  
                                         l2316 0D4F                                           l3108 0714  
                                         l3060 06BF                                           l3052 06B5  
                                         l2342 0EDF                                           l2334 0ED2  
                                         l2360 0F1A                                           l2352 0F05  
                                         l2344 0EEC                                           l3072 06D5  
                                         l3074 06E0                                           l3082 06C9  
                                         l2356 0F0F                                           l3084 06F2  
                                         l3092 06FF                                           l2296 0DB6  
                                         l2730 03A1                                           l2298 0DC4  
                                         l2732 03AE                                           l2750 0445  
                                         l2742 03F7                                           l2814 0E5D  
                                         l2910 0F80                                           l2902 0F54  
                                         l2736 03DE                                           l2920 0CA9  
                                         l2746 0439                                           l2738 03E5  
                                         l2762 02A0                                           l2834 0E89  
                                         l2818 0E66                                           l2906 0F74  
                                         l2772 034A                                           l2764 02A7  
                                         l2756 0272                                           l2932 0C32  
                                         l2844 0EA8                                           l2836 0E97  
                                         l2870 0C04                                           l2758 027F  
                                         l2944 0542                                           l2952 0554  
                                         l2936 0522                                           l2776 0356  
                                         l2768 02B9                                           l2928 0C2B  
                                         l2792 0D11                                           l2954 0557  
                                         l2778 035A                                           l2794 0D17  
                                         l2788 0D0A                                           l2974 059D  
                                         l2966 0587                                           l2996 05D5  
                                         _LATA 010C                                           _LATB 010D  
                                         u2251 0248                                           u2252 0249  
                                         u1445 0CD3                                           u2181 0377  
                                         u2253 0250                                           u2405 0E8A  
                                         u2182 0378                                           u2254 0251  
                                         u2183 037F                                           u2184 0380  
                                         u1545 0EE2                                           u2513 0F4E  
                                         u2435 0E9F                                           u2523 0F6E  
                                         u1565 0EED                                           u1485 0D50  
                                         u1575 0EFC                                           u1495 0D56  
                                         u2375 0E6F                                           u2535 0F7A  
                                         u1585 0F06                                           u2545 0F86  
                                         u2807 0CB7                                           u2817 0C83  
                                         u2797 0727                                           _TMR0 0015  
                                         _TMR2 001A                                           _TMR4 0415  
                                         _TMR6 041C                                           _WPUA 020C  
                                         _WPUB 020D                              ??_TMR6_WriteTimer 00CD  
                ?_TMR1_SetGateInterruptHandler 00CD                                           _main 06A6  
                                         _flux 005B                                           fsr0h 0005  
                                         fsr1h 0007                                           indf0 0000  
                                         fsr0l 0004                                           indf1 0001  
                                         fsr1l 0006                                           btemp 007E  
                                         start 0019                          ??_EPWM1_LoadDutyValue 00CF  
                      __end_of_TMR0_Initialize 0BDB                                ?_FVR_Initialize 0070  
                                ?_EUSART_Write 0070                  __end_of_OSCILLATOR_Initialize 0800  
                                ___fltol@sign1 00D5                                          ?_main 0070  
                              __end_of___atdiv 0F21                                __end_of___flmul 023E  
                              __end_of___fltol 0EB7                                          _T1CON 0018  
                                        _T2CON 001C                                          _T4CON 0417  
                                        _T6CON 041E                                __end_of___lwdiv 0D9B  
                                        i1l180 0017                                          i1l174 000D  
                                        _RCREG 0199                                          _RCSTA 019D  
                                        _TMR1H 0017                                          _TMR1L 0016  
                                        _TRISA 008C                                          _TRISB 008D  
                                 ?_fluxcontrol 0070                                          _TXREG 019A  
                                        _TXSTA 019E                                _TMR4_Initialize 0BDB  
                      __end_of_PIN_MANAGER_IOC 0B50                                 _WDT_Initialize 0B59  
                                        _error 00B0                      ??_TMR6_LoadPeriodRegister 00CD  
                                        _passo 00C7                                __end_of_fluxpos 0F8C  
                                _controlchoice 00CB                                  _controlchoose 0C23  
                      __end_of_TMR1_Initialize 0CA9                                          pclath 000A  
                               i1___fltol@exp1 003E                                          status 0003  
                                        wtemp0 007E                               daUmPasso@sentido 00D0  
                              _TMR1_WriteTimer 0C14                               ??_DAC_Initialize 00CD  
                 __end_of_CMP1_GetOutputStatus 0B61                                __initialization 001B  
                                 __end_of_main 073C                                 ??_EUSART_Write 00CD  
                      __end_of_TMR2_Initialize 0BC8                    ?_INTERRUPT_InterruptManager 0070  
                                       ??_main 00EE                         __end_of_WDT_Initialize 0B5D  
                              _TMR6_Initialize 0BE5              _EUSART_DefaultFramingErrorHandler 0000  
                                       _ADCON0 009D                                         _ADCON1 009E  
                   _EUSART_OverrunErrorHandler 0134                                 ?_controlchoose 0070  
                                       _ADRESH 009C                                         _ADRESL 009B  
                                       _CCPR1H 0292                                         _CCPR1L 0291  
                                       _ANSELA 018C                                         _ANSELB 018D  
                   __end_of_EUSART_is_rx_ready 0B66                                         _BORCON 0116  
                                       _T1GCON 0019                        TMR1_WriteTimer@timerVal 0070  
                                       i1l1115 0E3A                                         i1l1330 0CEE  
                                       i1l1323 0231                                         i1l1361 078D  
                                       i1l1355 0759                                         i1l2404 0057  
                                       u200_25 0799                                         i1l2422 0078  
                                       i1l2406 0059                                         i1l2264 0CE8  
                                       i1l2512 020B                                         i1l2424 007A  
                                       i1l2408 0061                                         i1l1368 07A1  
                                       i1l1369 07AB                                         i1l2258 0C1E  
                                       i1l2434 0090                                         i1l2426 0082  
                                       i1l2508 01F6                                         i1l2518 0222  
                                       i1l2382 0D8D                                         i1l2374 0D6F  
                                       i1l2542 0768                                         i1l2606 0E47  
                                       i1l2376 0D7B                                         i1l2536 0751  
                                       i1l2386 0D96                                         i1l2570 07C6  
                                       i1l2546 076A                                         i1l2556 079F  
                                       i1l2548 077A                                         i1l2580 0E05  
                                       i1l2494 01CB                                         i1l2486 019D  
                                       i1l2558 0792                                         i1l2806 0615  
                                       i1l2488 01B4                                         i1l2576 0DFC  
                                       i1l2808 0651                                         i1l2498 01CD  
                                       i1l2596 0E28                                         u211_25 0E29  
                                       i1l2598 0E36                                         u204_25 07B3  
                                       u142_25 0CEF                                         u214_25 0E3E  
                                       u208_25 0E0E                                         u162_25 0D72  
                                       _FVRCON 0117                                         u180_25 01A0  
                                       u164_25 0D7C                                         u165_25 0D86  
                                       u190_25 01FF                                         u182_25 01A9  
                                       u166_25 0D8E                                         u191_25 0215  
                                       u176_25 00FD                                         u177_25 0126  
                                       u178_25 0170                                         u179_25 018C  
                                       u196_25 0773                                         u189_25 01E4  
                                       u198_25 0787                                         _OSCCON 0099  
                                       _SPBRGH 019C                                         _SPBRGL 019B  
                                       _WDTCON 0097                               __end_of___xxtofl 07CF  
                              _TMR4_StartTimer 0B56                          __end_of_TMR1_GATE_ISR 0BFA  
               ??_TMR1_SetGateInterruptHandler 00CF                                   _CCPTMRS0bits 029E  
                                 ?_TMR1_Reload 0070                                         ___tmul 0D41  
                                    ??___atdiv 00DC                                      ??___flmul 0079  
                                    ??___fltol 00D1                               __end_of_envia_Tx 1000  
                                    ??___lwdiv 0074                                         _height 00B3  
                                       _dinput 0138                               ?_TMR0_Initialize 0070  
                                       _errorp 005E                        __end_of_TMR4_Initialize 0BE5  
                                       _outpre 00A4                                         _output 00C1  
                            __end_ofi1___fltol 0E56                                      ??_fluxpos 00D1  
                              ?_WDT_Initialize 0070                                i1___fltol@sign1 003D  
                     ADC_GetConversion@channel 00D0   TMR1_SetGateInterruptHandler@InterruptHandler 00CD  
                             ?_PIN_MANAGER_IOC 0070                        __end_of_TMR1_WriteTimer 0C23  
                             ?_TMR1_Initialize 0070                                   ___xxtofl@arg 0049  
                                 ___xxtofl@exp 0048                              _SYSTEM_Initialize 07CF  
                                 ___xxtofl@val 003F                        __end_of__initialization 003E  
                              _CMP1_Initialize 0B66                             ?_SYSTEM_Initialize 0070  
                                   ___fltol@f1 00CD                              ?_EPWM1_Initialize 0070  
                               __pcstackCOMMON 0070                                   __pidataBANK0 0003  
                                 __pidataBANK2 0C35                            ??_SYSTEM_Initialize 00CF  
                           ??_EPWM1_Initialize 00CD                               ?_TMR2_Initialize 0070  
                      __end_of_TMR6_Initialize 0BEF                                 _OPTION_REGbits 0095  
                              _TMR6_WriteTimer 0B7E                                ??_controlchoose 00EE  
              ??_EUSART_SetOverrunErrorHandler 00CF                           _CMP1_GetOutputStatus 0B5D  
                      __end_of_TMR4_StartTimer 0B59                      __end_of_SYSTEM_Initialize 07F9  
                                   __pbssBANK0 0053                                     __pbssBANK1 00A0  
                                   __pbssBANK2 0138                           __end_of_EUSART_Write 0BD1  
                                   _analisa_Rx 0521                              __end_of__Umul8_16 0CFD  
                             ??_FVR_Initialize 00CD                                     __pmaintext 06A6  
                                      ?___tmul 00CD                                     __pintentry 0004  
                                      _DACCON0 0118                                        _DACCON1 0119  
                                      _CM1CON0 0111                                        _CM1CON1 0112  
                                      _CCP1CON 0293                                        _ECCP1AS 0295  
                                      _BAUDCON 019F                               ?_TMR4_Initialize 0070  
                            __end_of_daUmPasso 0D1D                                        _APFCON0 011D  
                                      _APFCON1 011E                                     _avg_height 0063  
                             _definePassoMotor 0D9B                                      ?___xxtofl 003F  
                        ?_CMP1_GetOutputStatus 0070                                        _OSCTUNE 0098  
                                      _PWM1CON 0294                        __end_of_CMP1_Initialize 0B6C  
                     ??_EUSART_SetErrorHandler 00CF                               ?_TMR1_WriteTimer 0070  
                       definePassoMotor@passom 00CF                                      ?_envia_Tx 0070  
                  __end_of_EPWM1_LoadDutyValue 0CDE                                     _first_read 006E  
                         _ADC_InterruptHandler 0067                                        ___atdiv 0EB7  
                                      ___flmul 0042                                        ___fltol 0E56  
                                      ___lwdiv 0D67                        __end_of_TMR6_WriteTimer 0B84  
                                      _ballset 00AA                               ?_TMR6_Initialize 0070  
                     TMR1_ReadTimer@readValLow 007A                                        __ptext1 0CA9  
                                      __ptext2 0B5D                                        __ptext3 0F21  
                                      __ptext4 0CFD                                        __ptext5 0D9B  
                                      __ptext6 0F8C                                        __ptext7 0E56  
                                      __ptext8 0BC8                                        __ptext9 0C23  
                    TMR1_ReadTimer@readValHigh 0079                                      _T1CONbits 0018  
                                      _countRx 00CA                          _OSCILLATOR_Initialize 07F9  
                                      _fluxpos 0F21                                     ??___xxtofl 0043  
                                    _CMOUTbits 0115                                      _T4CONbits 0417  
                     ??_PIN_MANAGER_Initialize 00CD                                        _sentido 006A  
                                      clrloop0 0B85                               ?_TMR4_StartTimer 0070  
                                   _passo_ctrl 00C5                           end_of_initialization 003E  
                                   ??_envia_Tx 00D7          __end_of_EUSART_SetOverrunErrorHandler 0BB8  
                _EUSART_SetOverrunErrorHandler 0BB0                              __end_of_setaPorta 0CC3  
                                      init_ram 0B8A                                        initloop 0B8B  
                                  ?_analisa_Rx 0070                              _EUSART_Initialize 0D1D  
                           ?_EUSART_Initialize 0070                          TMR0_ReadTimer@readVal 00CD  
                                    _RCSTAbits 019D                             _EUSART_is_rx_ready 0B61  
                               _TMR0_ReadTimer 0B72                            ??_EUSART_Initialize 00CF  
                             ??_WDT_Initialize 00CD                            ?_EUSART_is_rx_ready 0070  
                       ??_CMP1_GetOutputStatus 00CD                                 _TMR1_ReadTimer 0C5E  
                     ?_TMR6_LoadPeriodRegister 0070                                  ___xxtofl@sign 0047  
                                    i1___fltol 0DF5                               ?_CMP1_Initialize 0070  
                                   _pwmcontrol 023E                                    ___flmul@grs 002A  
                    __end_of_EUSART_Initialize 0D41                           ??_EUSART_is_rx_ready 00CD  
                       __end_of_TMR0_ReadTimer 0B78                     _EUSART_DefaultErrorHandler 0000  
                             ?_TMR6_WriteTimer 0070                                 __end_of___tmul 0D67  
                                 _EUSART_Write 0BC8                                 _ADC_Initialize 0B98  
                       ?_OSCILLATOR_Initialize 0070                         __end_of_TMR1_ReadTimer 0C76  
                                ??_mede_height 004D                            start_initialization 001B  
                                ??_EUSART_Read 00CD                                     ?i1___fltol 0035  
                 EPWM1_LoadDutyValue@dutyValue 00CD                       __end_of_definePassoMotor 0DF5  
               ?_EUSART_SetOverrunErrorHandler 00CD                                 _TMR4_StopTimer 0B53  
                   _EUSART_FramingErrorHandler 0136                                ?_TMR0_ReadTimer 0070  
                                     ??___tmul 00D3                         _EUSART_SetErrorHandler 0BA0  
                       __end_of_ADC_Initialize 0BA0                                      __Umul8_16 0CDE  
                                  __pdataBANK0 006E                                    __pdataBANK2 0120  
              __end_of_TMR6_LoadPeriodRegister 0B7E                                 ___tmul@product 00D3  
                              ?_TMR1_ReadTimer 0070                                  ??_fluxcontrol 00E2  
                                    ___flmul@a 0024                                      _daUmPasso 0CFD  
                                    ___flmul@b 0020                                      ___latbits 0001  
                                __pcstackBANK0 0020                                  __pcstackBANK1 00CD  
                        __end_of_controlchoose 0C35                            __end_of_mede_height 06A6  
                                  ?_pwmcontrol 0070                            __end_of_EUSART_Read 0C06  
                                    __pnvBANK0 006C                                      __pnvBANK2 0132  
                       __end_of_TMR4_StopTimer 0B56                               ___lwdiv@dividend 0072  
                       _PIN_MANAGER_Initialize 0C47                                  _TMR1_GATE_ISR 0BEF  
                                     ?___atdiv 00D6                                       ?___flmul 0020  
                                     ?___fltol 00CD                                     ?__Umul8_16 0070  
                                     ?___lwdiv 0070                                ?_ADC_Initialize 0070  
                                    _fim_curso 00C6                   ??_INTERRUPT_InterruptManager 007E  
                                     ?_fluxpos 0070                                     ?_daUmPasso 0070  
                                    _nao_salva 00C8                                    ??i1___fltol 0039  
                             ___lwdiv@quotient 0075                                      _func_mode 0069  
                          __end_of_fluxcontrol 0455                              ??_TMR0_Initialize 00CD  
                                     _LATAbits 010C         EUSART_SetErrorHandler@interruptHandler 00CD  
                                 ??_analisa_Rx 00D1                                      clear_ram0 0B84  
                                     _PIE1bits 0091                              _eusartRxLastError 00CC  
                              ?_TMR4_StopTimer 0070                                      _setaPorta 0CA9  
                               ?_TMR1_GATE_ISR 0070                                       _PIR1bits 0011  
              ??_EUSART_SetFramingErrorHandler 00CF                                       _PIR3bits 0013  
                                ??_TMR1_Reload 0072                                      _sp_height 0065  
                                    _tempo_voo 0061              _EUSART_DefaultOverrunErrorHandler 0000  
                                     _PSTR1CON 0296                              ??_PIN_MANAGER_IOC 0070  
                    _TMR1_GateInterruptHandler 006C                              ??_TMR1_Initialize 00CF  
                                   _ADCON0bits 009D                                 _DAC_Initialize 0B6C  
                                  _mede_height 05EC                               _EPWM1_Initialize 0C06  
                      definePassoMotor@sentido 00CD                            ___tmul@multiplicand 00D0  
                                    _outputsum 00A7                             __end_of_analisa_Rx 05EC  
                                  _EUSART_Read 0BFA                              ??_TMR2_Initialize 00CD  
                          __end_of_lookupTable 0521                                     ?_setaPorta 0070  
                            _ADC_GetConversion 0C76                          TMR1_ReadTimer@readVal 0077  
                      ??_OSCILLATOR_Initialize 00CD                                    ??__Umul8_16 0072  
                          _EUSART_ErrorHandler 0132                             ?_ADC_GetConversion 00CD  
                       __end_of_DAC_Initialize 0B72                                       _adc_temp 00B5  
                          __end_of_TMR1_Reload 0B98                                       _balldist 00AD  
                          ??_ADC_GetConversion 00CF                                       ___xxtofl 073C  
                                  ??_daUmPasso 00D0                                    _fluxcontrol 036D  
                              ___lwdiv@divisor 0070                                ___lwdiv@counter 0077  
                                     __ptext10 023E                                       __ptext11 036D  
                                     __ptext20 0B72                                       __ptext12 0D41  
                                     __ptext21 07CF                                       __ptext13 0EB7  
                                     __ptext30 07F9                                       __ptext22 0B59  
                                     __ptext14 0B56                                       __ptext31 0B50  
                                     __ptext23 0BE5                                       __ptext15 0521  
                                     __ptext40 0B61                                       __ptext32 0D1D  
                                     __ptext24 0BDB                                       __ptext16 0CC3  
                                     __ptext41 0BFA                                       __ptext33 0BB0  
                                     __ptext25 0BC0                                       __ptext17 0B7E  
                                     __ptext50 0042                                       __ptext42 0C76  
                                     __ptext34 0BA8                                       __ptext26 0C8F  
                                     __ptext18 0B78                                       __ptext51 0CDE  
                                     __ptext35 0BA0                                       __ptext27 0BB8  
                                     __ptext19 0B53                                       __ptext52 0B90  
                                     __ptext44 0BEF                                       __ptext36 0C06  
                                     __ptext28 0BD1                                       __ptext53 0C14  
                                     __ptext45 0002                                       __ptext37 0B6C  
                                     __ptext29 0C47                                       __ptext54 0C5E  
                                     __ptext46 05EC                                       __ptext38 0B66  
                                     __ptext55 0B4F                                       __ptext47 0DF5  
                                     __ptext39 0B98                                       __ptext48 073C  
                                     __ptext49 0D67                                       _bufferRx 0053  
                                     _envia_Tx 0F8C                                       _count_Tx 00C9  
                      TMR6_WriteTimer@timerVal 00CD               TMR6_LoadPeriodRegister@periodVal 00CD  
                            ??_TMR4_Initialize 00CD                               ??_TMR0_ReadTimer 00CD  
                              ??_TMR1_GATE_ISR 007E                      __end_of_ADC_GetConversion 0C8F  
                      ?_EUSART_SetErrorHandler 00CD                              ?_definePassoMotor 00CD  
EUSART_SetOverrunErrorHandler@interruptHandler 00CD                             ??_definePassoMotor 00CE  
                             ??_TMR1_ReadTimer 0072                                       int$flags 007E  
                                     _position 00B9             __end_of_INTERRUPT_InterruptManager 0019  
                   _INTERRUPT_InterruptManager 0004          __end_of_EUSART_SetFramingErrorHandler 0BB0  
                _EUSART_SetFramingErrorHandler 0BA8                                ?_DAC_Initialize 0070  
                            ??_TMR1_WriteTimer 0072                                     _INTCONbits 000B  
                                _avg_tempo_voo 00A0                                   ??_pwmcontrol 00E2  
                                  _lookupTable 0455                                       intlevel1 0000  
                      ?_PIN_MANAGER_Initialize 0070                              ??_TMR6_Initialize 00CD  
               __end_of_EUSART_SetErrorHandler 0BA8                                    ??_setaPorta 00D1  
                             ??_ADC_Initialize 00CD                                    _TMR1_Reload 0B90  
                            ___tmul@multiplier 00CD  EUSART_SetFramingErrorHandler@interruptHandler 00CD  
                            ??_TMR4_StartTimer 00CD                                  __pstringtext1 0455  
                           __end_of_pwmcontrol 036D                                 _FVR_Initialize 0B50  
                       __Umul8_16@multiplicand 0070                                     _OPTION_REG 0095  
                              _TMR0_Initialize 0BD1                                    _timecontrol 0120  
                          _EPWM1_LoadDutyValue 0CC3                               ___atdiv@dividend 00D9  
                           EUSART_Write@txData 00CD           __end_of_TMR1_SetGateInterruptHandler 0BC0  
                 _TMR1_SetGateInterruptHandler 0BB8                 __end_of_PIN_MANAGER_Initialize 0C5E  
                             ??_TMR4_StopTimer 00CD                        _TMR6_LoadPeriodRegister 0B78  
                                  _sp_position 00B7                                ___atdiv@divisor 00D6  
                              _PIN_MANAGER_IOC 0B4F                           __Umul8_16@multiplier 0078  
                              ___atdiv@counter 00DD                                _TMR1_Initialize 0C8F  
                     __end_of_EPWM1_Initialize 0C14                           ?_EPWM1_LoadDutyValue 00CD  
                            __Umul8_16@product 0074                                   ___atdiv@sign 00DE  
