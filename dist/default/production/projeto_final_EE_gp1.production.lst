

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sat Aug 31 10:31:55 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F1827
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2
    42                           	psect	text26,local,class=CODE,merge=1,delta=2
    43                           	psect	text27,local,class=CODE,merge=1,delta=2
    44                           	psect	text28,local,class=CODE,merge=1,delta=2
    45                           	psect	text29,local,class=CODE,merge=1,delta=2
    46                           	psect	text30,local,class=CODE,merge=1,delta=2
    47                           	psect	text31,local,class=CODE,merge=1,delta=2
    48                           	psect	intentry,global,class=CODE,delta=2
    49                           	psect	text33,local,class=CODE,merge=1,delta=2
    50                           	psect	text34,local,class=CODE,merge=1,delta=2
    51                           	psect	text35,local,class=CODE,merge=1,delta=2
    52                           	psect	text36,local,class=CODE,merge=1,delta=2
    53                           	psect	text37,local,class=CODE,merge=1,delta=2
    54                           	psect	text38,local,class=CODE,merge=1,delta=2
    55                           	psect	text39,local,class=CODE,merge=1,delta=2
    56                           	psect	text40,local,class=CODE,merge=1,delta=2
    57                           	psect	text41,local,class=CODE,merge=1,delta=2
    58                           	psect	text42,local,class=CODE,merge=1,delta=2
    59                           	psect	text43,local,class=CODE,merge=1,delta=2
    60                           	psect	text44,local,class=CODE,merge=1,delta=2
    61                           	psect	text45,local,class=CODE,merge=1,delta=2
    62                           	psect	text46,local,class=CODE,merge=1,delta=2
    63                           	psect	text47,local,class=CODE,merge=1,delta=2
    64                           	psect	text48,local,class=CODE,merge=1,delta=2
    65                           	psect	text49,local,class=CODE,merge=1,delta=2
    66                           	psect	text50,local,class=CODE,merge=1,delta=2
    67                           	psect	text51,local,class=CODE,merge=1,delta=2
    68                           	psect	text52,local,class=CODE,merge=1,delta=2
    69                           	psect	text53,local,class=CODE,merge=1,delta=2
    70                           	psect	text54,local,class=CODE,merge=1,delta=2
    71                           	psect	text55,local,class=CODE,merge=1,delta=2
    72                           	psect	text56,local,class=CODE,merge=1,delta=2
    73                           	psect	text57,local,class=CODE,merge=1,delta=2
    74                           	psect	text58,local,class=CODE,merge=1,delta=2
    75                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    76                           	dabs	1,0x7E,2
    77     0000                     
    78                           ; Generated 07/09/2023 GMT
    79                           ; 
    80                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    81                           ; All rights reserved.
    82                           ; 
    83                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    84                           ; 
    85                           ; Redistribution and use in source and binary forms, with or without modification, are
    86                           ; permitted provided that the following conditions are met:
    87                           ; 
    88                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    89                           ;        conditions and the following disclaimer.
    90                           ; 
    91                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    92                           ;        of conditions and the following disclaimer in the documentation and/or other
    93                           ;        materials provided with the distribution. Publication is not required when
    94                           ;        this file is used in an embedded application.
    95                           ; 
    96                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    97                           ;        software without specific prior written permission.
    98                           ; 
    99                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   100                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   101                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   102                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   103                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   104                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   105                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   106                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   107                           ; 
   108                           ; 
   109                           ; Code-generator required, PIC16F1827 Definitions
   110                           ; 
   111                           ; SFR Addresses
   112     0000                     	;# 
   113     0001                     	;# 
   114     0002                     	;# 
   115     0003                     	;# 
   116     0004                     	;# 
   117     0005                     	;# 
   118     0006                     	;# 
   119     0007                     	;# 
   120     0008                     	;# 
   121     0009                     	;# 
   122     000A                     	;# 
   123     000B                     	;# 
   124     000C                     	;# 
   125     000D                     	;# 
   126     0011                     	;# 
   127     0012                     	;# 
   128     0013                     	;# 
   129     0014                     	;# 
   130     0015                     	;# 
   131     0016                     	;# 
   132     0016                     	;# 
   133     0017                     	;# 
   134     0018                     	;# 
   135     0019                     	;# 
   136     001A                     	;# 
   137     001B                     	;# 
   138     001C                     	;# 
   139     001E                     	;# 
   140     001F                     	;# 
   141     008C                     	;# 
   142     008D                     	;# 
   143     0091                     	;# 
   144     0092                     	;# 
   145     0093                     	;# 
   146     0094                     	;# 
   147     0095                     	;# 
   148     0096                     	;# 
   149     0097                     	;# 
   150     0098                     	;# 
   151     0099                     	;# 
   152     009A                     	;# 
   153     009B                     	;# 
   154     009B                     	;# 
   155     009C                     	;# 
   156     009D                     	;# 
   157     009E                     	;# 
   158     010C                     	;# 
   159     010D                     	;# 
   160     0111                     	;# 
   161     0112                     	;# 
   162     0113                     	;# 
   163     0114                     	;# 
   164     0115                     	;# 
   165     0116                     	;# 
   166     0117                     	;# 
   167     0118                     	;# 
   168     0119                     	;# 
   169     011A                     	;# 
   170     011B                     	;# 
   171     011D                     	;# 
   172     011E                     	;# 
   173     018C                     	;# 
   174     018D                     	;# 
   175     0191                     	;# 
   176     0191                     	;# 
   177     0192                     	;# 
   178     0193                     	;# 
   179     0193                     	;# 
   180     0193                     	;# 
   181     0194                     	;# 
   182     0195                     	;# 
   183     0196                     	;# 
   184     0199                     	;# 
   185     019A                     	;# 
   186     019B                     	;# 
   187     019B                     	;# 
   188     019B                     	;# 
   189     019B                     	;# 
   190     019C                     	;# 
   191     019C                     	;# 
   192     019D                     	;# 
   193     019E                     	;# 
   194     019F                     	;# 
   195     020C                     	;# 
   196     020D                     	;# 
   197     0211                     	;# 
   198     0211                     	;# 
   199     0212                     	;# 
   200     0212                     	;# 
   201     0213                     	;# 
   202     0213                     	;# 
   203     0214                     	;# 
   204     0214                     	;# 
   205     0215                     	;# 
   206     0215                     	;# 
   207     0215                     	;# 
   208     0216                     	;# 
   209     0216                     	;# 
   210     0217                     	;# 
   211     0217                     	;# 
   212     0219                     	;# 
   213     021A                     	;# 
   214     021B                     	;# 
   215     021C                     	;# 
   216     021D                     	;# 
   217     021E                     	;# 
   218     021F                     	;# 
   219     0291                     	;# 
   220     0291                     	;# 
   221     0292                     	;# 
   222     0293                     	;# 
   223     0294                     	;# 
   224     0295                     	;# 
   225     0295                     	;# 
   226     0296                     	;# 
   227     0298                     	;# 
   228     0298                     	;# 
   229     0299                     	;# 
   230     029A                     	;# 
   231     029B                     	;# 
   232     029C                     	;# 
   233     029C                     	;# 
   234     029D                     	;# 
   235     029E                     	;# 
   236     029E                     	;# 
   237     0311                     	;# 
   238     0311                     	;# 
   239     0312                     	;# 
   240     0313                     	;# 
   241     0318                     	;# 
   242     0318                     	;# 
   243     0319                     	;# 
   244     031A                     	;# 
   245     0394                     	;# 
   246     0395                     	;# 
   247     0396                     	;# 
   248     039A                     	;# 
   249     039C                     	;# 
   250     039D                     	;# 
   251     039E                     	;# 
   252     039F                     	;# 
   253     0415                     	;# 
   254     0416                     	;# 
   255     0417                     	;# 
   256     041C                     	;# 
   257     041D                     	;# 
   258     041E                     	;# 
   259     0FE4                     	;# 
   260     0FE5                     	;# 
   261     0FE6                     	;# 
   262     0FE7                     	;# 
   263     0FE8                     	;# 
   264     0FE9                     	;# 
   265     0FEA                     	;# 
   266     0FEB                     	;# 
   267     0FED                     	;# 
   268     0FEE                     	;# 
   269     0FEF                     	;# 
   270     0000                     	;# 
   271     0001                     	;# 
   272     0002                     	;# 
   273     0003                     	;# 
   274     0004                     	;# 
   275     0005                     	;# 
   276     0006                     	;# 
   277     0007                     	;# 
   278     0008                     	;# 
   279     0009                     	;# 
   280     000A                     	;# 
   281     000B                     	;# 
   282     000C                     	;# 
   283     000D                     	;# 
   284     0011                     	;# 
   285     0012                     	;# 
   286     0013                     	;# 
   287     0014                     	;# 
   288     0015                     	;# 
   289     0016                     	;# 
   290     0016                     	;# 
   291     0017                     	;# 
   292     0018                     	;# 
   293     0019                     	;# 
   294     001A                     	;# 
   295     001B                     	;# 
   296     001C                     	;# 
   297     001E                     	;# 
   298     001F                     	;# 
   299     008C                     	;# 
   300     008D                     	;# 
   301     0091                     	;# 
   302     0092                     	;# 
   303     0093                     	;# 
   304     0094                     	;# 
   305     0095                     	;# 
   306     0096                     	;# 
   307     0097                     	;# 
   308     0098                     	;# 
   309     0099                     	;# 
   310     009A                     	;# 
   311     009B                     	;# 
   312     009B                     	;# 
   313     009C                     	;# 
   314     009D                     	;# 
   315     009E                     	;# 
   316     010C                     	;# 
   317     010D                     	;# 
   318     0111                     	;# 
   319     0112                     	;# 
   320     0113                     	;# 
   321     0114                     	;# 
   322     0115                     	;# 
   323     0116                     	;# 
   324     0117                     	;# 
   325     0118                     	;# 
   326     0119                     	;# 
   327     011A                     	;# 
   328     011B                     	;# 
   329     011D                     	;# 
   330     011E                     	;# 
   331     018C                     	;# 
   332     018D                     	;# 
   333     0191                     	;# 
   334     0191                     	;# 
   335     0192                     	;# 
   336     0193                     	;# 
   337     0193                     	;# 
   338     0193                     	;# 
   339     0194                     	;# 
   340     0195                     	;# 
   341     0196                     	;# 
   342     0199                     	;# 
   343     019A                     	;# 
   344     019B                     	;# 
   345     019B                     	;# 
   346     019B                     	;# 
   347     019B                     	;# 
   348     019C                     	;# 
   349     019C                     	;# 
   350     019D                     	;# 
   351     019E                     	;# 
   352     019F                     	;# 
   353     020C                     	;# 
   354     020D                     	;# 
   355     0211                     	;# 
   356     0211                     	;# 
   357     0212                     	;# 
   358     0212                     	;# 
   359     0213                     	;# 
   360     0213                     	;# 
   361     0214                     	;# 
   362     0214                     	;# 
   363     0215                     	;# 
   364     0215                     	;# 
   365     0215                     	;# 
   366     0216                     	;# 
   367     0216                     	;# 
   368     0217                     	;# 
   369     0217                     	;# 
   370     0219                     	;# 
   371     021A                     	;# 
   372     021B                     	;# 
   373     021C                     	;# 
   374     021D                     	;# 
   375     021E                     	;# 
   376     021F                     	;# 
   377     0291                     	;# 
   378     0291                     	;# 
   379     0292                     	;# 
   380     0293                     	;# 
   381     0294                     	;# 
   382     0295                     	;# 
   383     0295                     	;# 
   384     0296                     	;# 
   385     0298                     	;# 
   386     0298                     	;# 
   387     0299                     	;# 
   388     029A                     	;# 
   389     029B                     	;# 
   390     029C                     	;# 
   391     029C                     	;# 
   392     029D                     	;# 
   393     029E                     	;# 
   394     029E                     	;# 
   395     0311                     	;# 
   396     0311                     	;# 
   397     0312                     	;# 
   398     0313                     	;# 
   399     0318                     	;# 
   400     0318                     	;# 
   401     0319                     	;# 
   402     031A                     	;# 
   403     0394                     	;# 
   404     0395                     	;# 
   405     0396                     	;# 
   406     039A                     	;# 
   407     039C                     	;# 
   408     039D                     	;# 
   409     039E                     	;# 
   410     039F                     	;# 
   411     0415                     	;# 
   412     0416                     	;# 
   413     0417                     	;# 
   414     041C                     	;# 
   415     041D                     	;# 
   416     041E                     	;# 
   417     0FE4                     	;# 
   418     0FE5                     	;# 
   419     0FE6                     	;# 
   420     0FE7                     	;# 
   421     0FE8                     	;# 
   422     0FE9                     	;# 
   423     0FEA                     	;# 
   424     0FEB                     	;# 
   425     0FED                     	;# 
   426     0FEE                     	;# 
   427     0FEF                     	;# 
   428     0000                     	;# 
   429     0001                     	;# 
   430     0002                     	;# 
   431     0003                     	;# 
   432     0004                     	;# 
   433     0005                     	;# 
   434     0006                     	;# 
   435     0007                     	;# 
   436     0008                     	;# 
   437     0009                     	;# 
   438     000A                     	;# 
   439     000B                     	;# 
   440     000C                     	;# 
   441     000D                     	;# 
   442     0011                     	;# 
   443     0012                     	;# 
   444     0013                     	;# 
   445     0014                     	;# 
   446     0015                     	;# 
   447     0016                     	;# 
   448     0016                     	;# 
   449     0017                     	;# 
   450     0018                     	;# 
   451     0019                     	;# 
   452     001A                     	;# 
   453     001B                     	;# 
   454     001C                     	;# 
   455     001E                     	;# 
   456     001F                     	;# 
   457     008C                     	;# 
   458     008D                     	;# 
   459     0091                     	;# 
   460     0092                     	;# 
   461     0093                     	;# 
   462     0094                     	;# 
   463     0095                     	;# 
   464     0096                     	;# 
   465     0097                     	;# 
   466     0098                     	;# 
   467     0099                     	;# 
   468     009A                     	;# 
   469     009B                     	;# 
   470     009B                     	;# 
   471     009C                     	;# 
   472     009D                     	;# 
   473     009E                     	;# 
   474     010C                     	;# 
   475     010D                     	;# 
   476     0111                     	;# 
   477     0112                     	;# 
   478     0113                     	;# 
   479     0114                     	;# 
   480     0115                     	;# 
   481     0116                     	;# 
   482     0117                     	;# 
   483     0118                     	;# 
   484     0119                     	;# 
   485     011A                     	;# 
   486     011B                     	;# 
   487     011D                     	;# 
   488     011E                     	;# 
   489     018C                     	;# 
   490     018D                     	;# 
   491     0191                     	;# 
   492     0191                     	;# 
   493     0192                     	;# 
   494     0193                     	;# 
   495     0193                     	;# 
   496     0193                     	;# 
   497     0194                     	;# 
   498     0195                     	;# 
   499     0196                     	;# 
   500     0199                     	;# 
   501     019A                     	;# 
   502     019B                     	;# 
   503     019B                     	;# 
   504     019B                     	;# 
   505     019B                     	;# 
   506     019C                     	;# 
   507     019C                     	;# 
   508     019D                     	;# 
   509     019E                     	;# 
   510     019F                     	;# 
   511     020C                     	;# 
   512     020D                     	;# 
   513     0211                     	;# 
   514     0211                     	;# 
   515     0212                     	;# 
   516     0212                     	;# 
   517     0213                     	;# 
   518     0213                     	;# 
   519     0214                     	;# 
   520     0214                     	;# 
   521     0215                     	;# 
   522     0215                     	;# 
   523     0215                     	;# 
   524     0216                     	;# 
   525     0216                     	;# 
   526     0217                     	;# 
   527     0217                     	;# 
   528     0219                     	;# 
   529     021A                     	;# 
   530     021B                     	;# 
   531     021C                     	;# 
   532     021D                     	;# 
   533     021E                     	;# 
   534     021F                     	;# 
   535     0291                     	;# 
   536     0291                     	;# 
   537     0292                     	;# 
   538     0293                     	;# 
   539     0294                     	;# 
   540     0295                     	;# 
   541     0295                     	;# 
   542     0296                     	;# 
   543     0298                     	;# 
   544     0298                     	;# 
   545     0299                     	;# 
   546     029A                     	;# 
   547     029B                     	;# 
   548     029C                     	;# 
   549     029C                     	;# 
   550     029D                     	;# 
   551     029E                     	;# 
   552     029E                     	;# 
   553     0311                     	;# 
   554     0311                     	;# 
   555     0312                     	;# 
   556     0313                     	;# 
   557     0318                     	;# 
   558     0318                     	;# 
   559     0319                     	;# 
   560     031A                     	;# 
   561     0394                     	;# 
   562     0395                     	;# 
   563     0396                     	;# 
   564     039A                     	;# 
   565     039C                     	;# 
   566     039D                     	;# 
   567     039E                     	;# 
   568     039F                     	;# 
   569     0415                     	;# 
   570     0416                     	;# 
   571     0417                     	;# 
   572     041C                     	;# 
   573     041D                     	;# 
   574     041E                     	;# 
   575     0FE4                     	;# 
   576     0FE5                     	;# 
   577     0FE6                     	;# 
   578     0FE7                     	;# 
   579     0FE8                     	;# 
   580     0FE9                     	;# 
   581     0FEA                     	;# 
   582     0FEB                     	;# 
   583     0FED                     	;# 
   584     0FEE                     	;# 
   585     0FEF                     	;# 
   586     0000                     	;# 
   587     0001                     	;# 
   588     0002                     	;# 
   589     0003                     	;# 
   590     0004                     	;# 
   591     0005                     	;# 
   592     0006                     	;# 
   593     0007                     	;# 
   594     0008                     	;# 
   595     0009                     	;# 
   596     000A                     	;# 
   597     000B                     	;# 
   598     000C                     	;# 
   599     000D                     	;# 
   600     0011                     	;# 
   601     0012                     	;# 
   602     0013                     	;# 
   603     0014                     	;# 
   604     0015                     	;# 
   605     0016                     	;# 
   606     0016                     	;# 
   607     0017                     	;# 
   608     0018                     	;# 
   609     0019                     	;# 
   610     001A                     	;# 
   611     001B                     	;# 
   612     001C                     	;# 
   613     001E                     	;# 
   614     001F                     	;# 
   615     008C                     	;# 
   616     008D                     	;# 
   617     0091                     	;# 
   618     0092                     	;# 
   619     0093                     	;# 
   620     0094                     	;# 
   621     0095                     	;# 
   622     0096                     	;# 
   623     0097                     	;# 
   624     0098                     	;# 
   625     0099                     	;# 
   626     009A                     	;# 
   627     009B                     	;# 
   628     009B                     	;# 
   629     009C                     	;# 
   630     009D                     	;# 
   631     009E                     	;# 
   632     010C                     	;# 
   633     010D                     	;# 
   634     0111                     	;# 
   635     0112                     	;# 
   636     0113                     	;# 
   637     0114                     	;# 
   638     0115                     	;# 
   639     0116                     	;# 
   640     0117                     	;# 
   641     0118                     	;# 
   642     0119                     	;# 
   643     011A                     	;# 
   644     011B                     	;# 
   645     011D                     	;# 
   646     011E                     	;# 
   647     018C                     	;# 
   648     018D                     	;# 
   649     0191                     	;# 
   650     0191                     	;# 
   651     0192                     	;# 
   652     0193                     	;# 
   653     0193                     	;# 
   654     0193                     	;# 
   655     0194                     	;# 
   656     0195                     	;# 
   657     0196                     	;# 
   658     0199                     	;# 
   659     019A                     	;# 
   660     019B                     	;# 
   661     019B                     	;# 
   662     019B                     	;# 
   663     019B                     	;# 
   664     019C                     	;# 
   665     019C                     	;# 
   666     019D                     	;# 
   667     019E                     	;# 
   668     019F                     	;# 
   669     020C                     	;# 
   670     020D                     	;# 
   671     0211                     	;# 
   672     0211                     	;# 
   673     0212                     	;# 
   674     0212                     	;# 
   675     0213                     	;# 
   676     0213                     	;# 
   677     0214                     	;# 
   678     0214                     	;# 
   679     0215                     	;# 
   680     0215                     	;# 
   681     0215                     	;# 
   682     0216                     	;# 
   683     0216                     	;# 
   684     0217                     	;# 
   685     0217                     	;# 
   686     0219                     	;# 
   687     021A                     	;# 
   688     021B                     	;# 
   689     021C                     	;# 
   690     021D                     	;# 
   691     021E                     	;# 
   692     021F                     	;# 
   693     0291                     	;# 
   694     0291                     	;# 
   695     0292                     	;# 
   696     0293                     	;# 
   697     0294                     	;# 
   698     0295                     	;# 
   699     0295                     	;# 
   700     0296                     	;# 
   701     0298                     	;# 
   702     0298                     	;# 
   703     0299                     	;# 
   704     029A                     	;# 
   705     029B                     	;# 
   706     029C                     	;# 
   707     029C                     	;# 
   708     029D                     	;# 
   709     029E                     	;# 
   710     029E                     	;# 
   711     0311                     	;# 
   712     0311                     	;# 
   713     0312                     	;# 
   714     0313                     	;# 
   715     0318                     	;# 
   716     0318                     	;# 
   717     0319                     	;# 
   718     031A                     	;# 
   719     0394                     	;# 
   720     0395                     	;# 
   721     0396                     	;# 
   722     039A                     	;# 
   723     039C                     	;# 
   724     039D                     	;# 
   725     039E                     	;# 
   726     039F                     	;# 
   727     0415                     	;# 
   728     0416                     	;# 
   729     0417                     	;# 
   730     041C                     	;# 
   731     041D                     	;# 
   732     041E                     	;# 
   733     0FE4                     	;# 
   734     0FE5                     	;# 
   735     0FE6                     	;# 
   736     0FE7                     	;# 
   737     0FE8                     	;# 
   738     0FE9                     	;# 
   739     0FEA                     	;# 
   740     0FEB                     	;# 
   741     0FED                     	;# 
   742     0FEE                     	;# 
   743     0FEF                     	;# 
   744     0000                     	;# 
   745     0001                     	;# 
   746     0002                     	;# 
   747     0003                     	;# 
   748     0004                     	;# 
   749     0005                     	;# 
   750     0006                     	;# 
   751     0007                     	;# 
   752     0008                     	;# 
   753     0009                     	;# 
   754     000A                     	;# 
   755     000B                     	;# 
   756     000C                     	;# 
   757     000D                     	;# 
   758     0011                     	;# 
   759     0012                     	;# 
   760     0013                     	;# 
   761     0014                     	;# 
   762     0015                     	;# 
   763     0016                     	;# 
   764     0016                     	;# 
   765     0017                     	;# 
   766     0018                     	;# 
   767     0019                     	;# 
   768     001A                     	;# 
   769     001B                     	;# 
   770     001C                     	;# 
   771     001E                     	;# 
   772     001F                     	;# 
   773     008C                     	;# 
   774     008D                     	;# 
   775     0091                     	;# 
   776     0092                     	;# 
   777     0093                     	;# 
   778     0094                     	;# 
   779     0095                     	;# 
   780     0096                     	;# 
   781     0097                     	;# 
   782     0098                     	;# 
   783     0099                     	;# 
   784     009A                     	;# 
   785     009B                     	;# 
   786     009B                     	;# 
   787     009C                     	;# 
   788     009D                     	;# 
   789     009E                     	;# 
   790     010C                     	;# 
   791     010D                     	;# 
   792     0111                     	;# 
   793     0112                     	;# 
   794     0113                     	;# 
   795     0114                     	;# 
   796     0115                     	;# 
   797     0116                     	;# 
   798     0117                     	;# 
   799     0118                     	;# 
   800     0119                     	;# 
   801     011A                     	;# 
   802     011B                     	;# 
   803     011D                     	;# 
   804     011E                     	;# 
   805     018C                     	;# 
   806     018D                     	;# 
   807     0191                     	;# 
   808     0191                     	;# 
   809     0192                     	;# 
   810     0193                     	;# 
   811     0193                     	;# 
   812     0193                     	;# 
   813     0194                     	;# 
   814     0195                     	;# 
   815     0196                     	;# 
   816     0199                     	;# 
   817     019A                     	;# 
   818     019B                     	;# 
   819     019B                     	;# 
   820     019B                     	;# 
   821     019B                     	;# 
   822     019C                     	;# 
   823     019C                     	;# 
   824     019D                     	;# 
   825     019E                     	;# 
   826     019F                     	;# 
   827     020C                     	;# 
   828     020D                     	;# 
   829     0211                     	;# 
   830     0211                     	;# 
   831     0212                     	;# 
   832     0212                     	;# 
   833     0213                     	;# 
   834     0213                     	;# 
   835     0214                     	;# 
   836     0214                     	;# 
   837     0215                     	;# 
   838     0215                     	;# 
   839     0215                     	;# 
   840     0216                     	;# 
   841     0216                     	;# 
   842     0217                     	;# 
   843     0217                     	;# 
   844     0219                     	;# 
   845     021A                     	;# 
   846     021B                     	;# 
   847     021C                     	;# 
   848     021D                     	;# 
   849     021E                     	;# 
   850     021F                     	;# 
   851     0291                     	;# 
   852     0291                     	;# 
   853     0292                     	;# 
   854     0293                     	;# 
   855     0294                     	;# 
   856     0295                     	;# 
   857     0295                     	;# 
   858     0296                     	;# 
   859     0298                     	;# 
   860     0298                     	;# 
   861     0299                     	;# 
   862     029A                     	;# 
   863     029B                     	;# 
   864     029C                     	;# 
   865     029C                     	;# 
   866     029D                     	;# 
   867     029E                     	;# 
   868     029E                     	;# 
   869     0311                     	;# 
   870     0311                     	;# 
   871     0312                     	;# 
   872     0313                     	;# 
   873     0318                     	;# 
   874     0318                     	;# 
   875     0319                     	;# 
   876     031A                     	;# 
   877     0394                     	;# 
   878     0395                     	;# 
   879     0396                     	;# 
   880     039A                     	;# 
   881     039C                     	;# 
   882     039D                     	;# 
   883     039E                     	;# 
   884     039F                     	;# 
   885     0415                     	;# 
   886     0416                     	;# 
   887     0417                     	;# 
   888     041C                     	;# 
   889     041D                     	;# 
   890     041E                     	;# 
   891     0FE4                     	;# 
   892     0FE5                     	;# 
   893     0FE6                     	;# 
   894     0FE7                     	;# 
   895     0FE8                     	;# 
   896     0FE9                     	;# 
   897     0FEA                     	;# 
   898     0FEB                     	;# 
   899     0FED                     	;# 
   900     0FEE                     	;# 
   901     0FEF                     	;# 
   902     0000                     	;# 
   903     0001                     	;# 
   904     0002                     	;# 
   905     0003                     	;# 
   906     0004                     	;# 
   907     0005                     	;# 
   908     0006                     	;# 
   909     0007                     	;# 
   910     0008                     	;# 
   911     0009                     	;# 
   912     000A                     	;# 
   913     000B                     	;# 
   914     000C                     	;# 
   915     000D                     	;# 
   916     0011                     	;# 
   917     0012                     	;# 
   918     0013                     	;# 
   919     0014                     	;# 
   920     0015                     	;# 
   921     0016                     	;# 
   922     0016                     	;# 
   923     0017                     	;# 
   924     0018                     	;# 
   925     0019                     	;# 
   926     001A                     	;# 
   927     001B                     	;# 
   928     001C                     	;# 
   929     001E                     	;# 
   930     001F                     	;# 
   931     008C                     	;# 
   932     008D                     	;# 
   933     0091                     	;# 
   934     0092                     	;# 
   935     0093                     	;# 
   936     0094                     	;# 
   937     0095                     	;# 
   938     0096                     	;# 
   939     0097                     	;# 
   940     0098                     	;# 
   941     0099                     	;# 
   942     009A                     	;# 
   943     009B                     	;# 
   944     009B                     	;# 
   945     009C                     	;# 
   946     009D                     	;# 
   947     009E                     	;# 
   948     010C                     	;# 
   949     010D                     	;# 
   950     0111                     	;# 
   951     0112                     	;# 
   952     0113                     	;# 
   953     0114                     	;# 
   954     0115                     	;# 
   955     0116                     	;# 
   956     0117                     	;# 
   957     0118                     	;# 
   958     0119                     	;# 
   959     011A                     	;# 
   960     011B                     	;# 
   961     011D                     	;# 
   962     011E                     	;# 
   963     018C                     	;# 
   964     018D                     	;# 
   965     0191                     	;# 
   966     0191                     	;# 
   967     0192                     	;# 
   968     0193                     	;# 
   969     0193                     	;# 
   970     0193                     	;# 
   971     0194                     	;# 
   972     0195                     	;# 
   973     0196                     	;# 
   974     0199                     	;# 
   975     019A                     	;# 
   976     019B                     	;# 
   977     019B                     	;# 
   978     019B                     	;# 
   979     019B                     	;# 
   980     019C                     	;# 
   981     019C                     	;# 
   982     019D                     	;# 
   983     019E                     	;# 
   984     019F                     	;# 
   985     020C                     	;# 
   986     020D                     	;# 
   987     0211                     	;# 
   988     0211                     	;# 
   989     0212                     	;# 
   990     0212                     	;# 
   991     0213                     	;# 
   992     0213                     	;# 
   993     0214                     	;# 
   994     0214                     	;# 
   995     0215                     	;# 
   996     0215                     	;# 
   997     0215                     	;# 
   998     0216                     	;# 
   999     0216                     	;# 
  1000     0217                     	;# 
  1001     0217                     	;# 
  1002     0219                     	;# 
  1003     021A                     	;# 
  1004     021B                     	;# 
  1005     021C                     	;# 
  1006     021D                     	;# 
  1007     021E                     	;# 
  1008     021F                     	;# 
  1009     0291                     	;# 
  1010     0291                     	;# 
  1011     0292                     	;# 
  1012     0293                     	;# 
  1013     0294                     	;# 
  1014     0295                     	;# 
  1015     0295                     	;# 
  1016     0296                     	;# 
  1017     0298                     	;# 
  1018     0298                     	;# 
  1019     0299                     	;# 
  1020     029A                     	;# 
  1021     029B                     	;# 
  1022     029C                     	;# 
  1023     029C                     	;# 
  1024     029D                     	;# 
  1025     029E                     	;# 
  1026     029E                     	;# 
  1027     0311                     	;# 
  1028     0311                     	;# 
  1029     0312                     	;# 
  1030     0313                     	;# 
  1031     0318                     	;# 
  1032     0318                     	;# 
  1033     0319                     	;# 
  1034     031A                     	;# 
  1035     0394                     	;# 
  1036     0395                     	;# 
  1037     0396                     	;# 
  1038     039A                     	;# 
  1039     039C                     	;# 
  1040     039D                     	;# 
  1041     039E                     	;# 
  1042     039F                     	;# 
  1043     0415                     	;# 
  1044     0416                     	;# 
  1045     0417                     	;# 
  1046     041C                     	;# 
  1047     041D                     	;# 
  1048     041E                     	;# 
  1049     0FE4                     	;# 
  1050     0FE5                     	;# 
  1051     0FE6                     	;# 
  1052     0FE7                     	;# 
  1053     0FE8                     	;# 
  1054     0FE9                     	;# 
  1055     0FEA                     	;# 
  1056     0FEB                     	;# 
  1057     0FED                     	;# 
  1058     0FEE                     	;# 
  1059     0FEF                     	;# 
  1060     0000                     	;# 
  1061     0001                     	;# 
  1062     0002                     	;# 
  1063     0003                     	;# 
  1064     0004                     	;# 
  1065     0005                     	;# 
  1066     0006                     	;# 
  1067     0007                     	;# 
  1068     0008                     	;# 
  1069     0009                     	;# 
  1070     000A                     	;# 
  1071     000B                     	;# 
  1072     000C                     	;# 
  1073     000D                     	;# 
  1074     0011                     	;# 
  1075     0012                     	;# 
  1076     0013                     	;# 
  1077     0014                     	;# 
  1078     0015                     	;# 
  1079     0016                     	;# 
  1080     0016                     	;# 
  1081     0017                     	;# 
  1082     0018                     	;# 
  1083     0019                     	;# 
  1084     001A                     	;# 
  1085     001B                     	;# 
  1086     001C                     	;# 
  1087     001E                     	;# 
  1088     001F                     	;# 
  1089     008C                     	;# 
  1090     008D                     	;# 
  1091     0091                     	;# 
  1092     0092                     	;# 
  1093     0093                     	;# 
  1094     0094                     	;# 
  1095     0095                     	;# 
  1096     0096                     	;# 
  1097     0097                     	;# 
  1098     0098                     	;# 
  1099     0099                     	;# 
  1100     009A                     	;# 
  1101     009B                     	;# 
  1102     009B                     	;# 
  1103     009C                     	;# 
  1104     009D                     	;# 
  1105     009E                     	;# 
  1106     010C                     	;# 
  1107     010D                     	;# 
  1108     0111                     	;# 
  1109     0112                     	;# 
  1110     0113                     	;# 
  1111     0114                     	;# 
  1112     0115                     	;# 
  1113     0116                     	;# 
  1114     0117                     	;# 
  1115     0118                     	;# 
  1116     0119                     	;# 
  1117     011A                     	;# 
  1118     011B                     	;# 
  1119     011D                     	;# 
  1120     011E                     	;# 
  1121     018C                     	;# 
  1122     018D                     	;# 
  1123     0191                     	;# 
  1124     0191                     	;# 
  1125     0192                     	;# 
  1126     0193                     	;# 
  1127     0193                     	;# 
  1128     0193                     	;# 
  1129     0194                     	;# 
  1130     0195                     	;# 
  1131     0196                     	;# 
  1132     0199                     	;# 
  1133     019A                     	;# 
  1134     019B                     	;# 
  1135     019B                     	;# 
  1136     019B                     	;# 
  1137     019B                     	;# 
  1138     019C                     	;# 
  1139     019C                     	;# 
  1140     019D                     	;# 
  1141     019E                     	;# 
  1142     019F                     	;# 
  1143     020C                     	;# 
  1144     020D                     	;# 
  1145     0211                     	;# 
  1146     0211                     	;# 
  1147     0212                     	;# 
  1148     0212                     	;# 
  1149     0213                     	;# 
  1150     0213                     	;# 
  1151     0214                     	;# 
  1152     0214                     	;# 
  1153     0215                     	;# 
  1154     0215                     	;# 
  1155     0215                     	;# 
  1156     0216                     	;# 
  1157     0216                     	;# 
  1158     0217                     	;# 
  1159     0217                     	;# 
  1160     0219                     	;# 
  1161     021A                     	;# 
  1162     021B                     	;# 
  1163     021C                     	;# 
  1164     021D                     	;# 
  1165     021E                     	;# 
  1166     021F                     	;# 
  1167     0291                     	;# 
  1168     0291                     	;# 
  1169     0292                     	;# 
  1170     0293                     	;# 
  1171     0294                     	;# 
  1172     0295                     	;# 
  1173     0295                     	;# 
  1174     0296                     	;# 
  1175     0298                     	;# 
  1176     0298                     	;# 
  1177     0299                     	;# 
  1178     029A                     	;# 
  1179     029B                     	;# 
  1180     029C                     	;# 
  1181     029C                     	;# 
  1182     029D                     	;# 
  1183     029E                     	;# 
  1184     029E                     	;# 
  1185     0311                     	;# 
  1186     0311                     	;# 
  1187     0312                     	;# 
  1188     0313                     	;# 
  1189     0318                     	;# 
  1190     0318                     	;# 
  1191     0319                     	;# 
  1192     031A                     	;# 
  1193     0394                     	;# 
  1194     0395                     	;# 
  1195     0396                     	;# 
  1196     039A                     	;# 
  1197     039C                     	;# 
  1198     039D                     	;# 
  1199     039E                     	;# 
  1200     039F                     	;# 
  1201     0415                     	;# 
  1202     0416                     	;# 
  1203     0417                     	;# 
  1204     041C                     	;# 
  1205     041D                     	;# 
  1206     041E                     	;# 
  1207     0FE4                     	;# 
  1208     0FE5                     	;# 
  1209     0FE6                     	;# 
  1210     0FE7                     	;# 
  1211     0FE8                     	;# 
  1212     0FE9                     	;# 
  1213     0FEA                     	;# 
  1214     0FEB                     	;# 
  1215     0FED                     	;# 
  1216     0FEE                     	;# 
  1217     0FEF                     	;# 
  1218     0000                     	;# 
  1219     0001                     	;# 
  1220     0002                     	;# 
  1221     0003                     	;# 
  1222     0004                     	;# 
  1223     0005                     	;# 
  1224     0006                     	;# 
  1225     0007                     	;# 
  1226     0008                     	;# 
  1227     0009                     	;# 
  1228     000A                     	;# 
  1229     000B                     	;# 
  1230     000C                     	;# 
  1231     000D                     	;# 
  1232     0011                     	;# 
  1233     0012                     	;# 
  1234     0013                     	;# 
  1235     0014                     	;# 
  1236     0015                     	;# 
  1237     0016                     	;# 
  1238     0016                     	;# 
  1239     0017                     	;# 
  1240     0018                     	;# 
  1241     0019                     	;# 
  1242     001A                     	;# 
  1243     001B                     	;# 
  1244     001C                     	;# 
  1245     001E                     	;# 
  1246     001F                     	;# 
  1247     008C                     	;# 
  1248     008D                     	;# 
  1249     0091                     	;# 
  1250     0092                     	;# 
  1251     0093                     	;# 
  1252     0094                     	;# 
  1253     0095                     	;# 
  1254     0096                     	;# 
  1255     0097                     	;# 
  1256     0098                     	;# 
  1257     0099                     	;# 
  1258     009A                     	;# 
  1259     009B                     	;# 
  1260     009B                     	;# 
  1261     009C                     	;# 
  1262     009D                     	;# 
  1263     009E                     	;# 
  1264     010C                     	;# 
  1265     010D                     	;# 
  1266     0111                     	;# 
  1267     0112                     	;# 
  1268     0113                     	;# 
  1269     0114                     	;# 
  1270     0115                     	;# 
  1271     0116                     	;# 
  1272     0117                     	;# 
  1273     0118                     	;# 
  1274     0119                     	;# 
  1275     011A                     	;# 
  1276     011B                     	;# 
  1277     011D                     	;# 
  1278     011E                     	;# 
  1279     018C                     	;# 
  1280     018D                     	;# 
  1281     0191                     	;# 
  1282     0191                     	;# 
  1283     0192                     	;# 
  1284     0193                     	;# 
  1285     0193                     	;# 
  1286     0193                     	;# 
  1287     0194                     	;# 
  1288     0195                     	;# 
  1289     0196                     	;# 
  1290     0199                     	;# 
  1291     019A                     	;# 
  1292     019B                     	;# 
  1293     019B                     	;# 
  1294     019B                     	;# 
  1295     019B                     	;# 
  1296     019C                     	;# 
  1297     019C                     	;# 
  1298     019D                     	;# 
  1299     019E                     	;# 
  1300     019F                     	;# 
  1301     020C                     	;# 
  1302     020D                     	;# 
  1303     0211                     	;# 
  1304     0211                     	;# 
  1305     0212                     	;# 
  1306     0212                     	;# 
  1307     0213                     	;# 
  1308     0213                     	;# 
  1309     0214                     	;# 
  1310     0214                     	;# 
  1311     0215                     	;# 
  1312     0215                     	;# 
  1313     0215                     	;# 
  1314     0216                     	;# 
  1315     0216                     	;# 
  1316     0217                     	;# 
  1317     0217                     	;# 
  1318     0219                     	;# 
  1319     021A                     	;# 
  1320     021B                     	;# 
  1321     021C                     	;# 
  1322     021D                     	;# 
  1323     021E                     	;# 
  1324     021F                     	;# 
  1325     0291                     	;# 
  1326     0291                     	;# 
  1327     0292                     	;# 
  1328     0293                     	;# 
  1329     0294                     	;# 
  1330     0295                     	;# 
  1331     0295                     	;# 
  1332     0296                     	;# 
  1333     0298                     	;# 
  1334     0298                     	;# 
  1335     0299                     	;# 
  1336     029A                     	;# 
  1337     029B                     	;# 
  1338     029C                     	;# 
  1339     029C                     	;# 
  1340     029D                     	;# 
  1341     029E                     	;# 
  1342     029E                     	;# 
  1343     0311                     	;# 
  1344     0311                     	;# 
  1345     0312                     	;# 
  1346     0313                     	;# 
  1347     0318                     	;# 
  1348     0318                     	;# 
  1349     0319                     	;# 
  1350     031A                     	;# 
  1351     0394                     	;# 
  1352     0395                     	;# 
  1353     0396                     	;# 
  1354     039A                     	;# 
  1355     039C                     	;# 
  1356     039D                     	;# 
  1357     039E                     	;# 
  1358     039F                     	;# 
  1359     0415                     	;# 
  1360     0416                     	;# 
  1361     0417                     	;# 
  1362     041C                     	;# 
  1363     041D                     	;# 
  1364     041E                     	;# 
  1365     0FE4                     	;# 
  1366     0FE5                     	;# 
  1367     0FE6                     	;# 
  1368     0FE7                     	;# 
  1369     0FE8                     	;# 
  1370     0FE9                     	;# 
  1371     0FEA                     	;# 
  1372     0FEB                     	;# 
  1373     0FED                     	;# 
  1374     0FEE                     	;# 
  1375     0FEF                     	;# 
  1376     0000                     	;# 
  1377     0001                     	;# 
  1378     0002                     	;# 
  1379     0003                     	;# 
  1380     0004                     	;# 
  1381     0005                     	;# 
  1382     0006                     	;# 
  1383     0007                     	;# 
  1384     0008                     	;# 
  1385     0009                     	;# 
  1386     000A                     	;# 
  1387     000B                     	;# 
  1388     000C                     	;# 
  1389     000D                     	;# 
  1390     0011                     	;# 
  1391     0012                     	;# 
  1392     0013                     	;# 
  1393     0014                     	;# 
  1394     0015                     	;# 
  1395     0016                     	;# 
  1396     0016                     	;# 
  1397     0017                     	;# 
  1398     0018                     	;# 
  1399     0019                     	;# 
  1400     001A                     	;# 
  1401     001B                     	;# 
  1402     001C                     	;# 
  1403     001E                     	;# 
  1404     001F                     	;# 
  1405     008C                     	;# 
  1406     008D                     	;# 
  1407     0091                     	;# 
  1408     0092                     	;# 
  1409     0093                     	;# 
  1410     0094                     	;# 
  1411     0095                     	;# 
  1412     0096                     	;# 
  1413     0097                     	;# 
  1414     0098                     	;# 
  1415     0099                     	;# 
  1416     009A                     	;# 
  1417     009B                     	;# 
  1418     009B                     	;# 
  1419     009C                     	;# 
  1420     009D                     	;# 
  1421     009E                     	;# 
  1422     010C                     	;# 
  1423     010D                     	;# 
  1424     0111                     	;# 
  1425     0112                     	;# 
  1426     0113                     	;# 
  1427     0114                     	;# 
  1428     0115                     	;# 
  1429     0116                     	;# 
  1430     0117                     	;# 
  1431     0118                     	;# 
  1432     0119                     	;# 
  1433     011A                     	;# 
  1434     011B                     	;# 
  1435     011D                     	;# 
  1436     011E                     	;# 
  1437     018C                     	;# 
  1438     018D                     	;# 
  1439     0191                     	;# 
  1440     0191                     	;# 
  1441     0192                     	;# 
  1442     0193                     	;# 
  1443     0193                     	;# 
  1444     0193                     	;# 
  1445     0194                     	;# 
  1446     0195                     	;# 
  1447     0196                     	;# 
  1448     0199                     	;# 
  1449     019A                     	;# 
  1450     019B                     	;# 
  1451     019B                     	;# 
  1452     019B                     	;# 
  1453     019B                     	;# 
  1454     019C                     	;# 
  1455     019C                     	;# 
  1456     019D                     	;# 
  1457     019E                     	;# 
  1458     019F                     	;# 
  1459     020C                     	;# 
  1460     020D                     	;# 
  1461     0211                     	;# 
  1462     0211                     	;# 
  1463     0212                     	;# 
  1464     0212                     	;# 
  1465     0213                     	;# 
  1466     0213                     	;# 
  1467     0214                     	;# 
  1468     0214                     	;# 
  1469     0215                     	;# 
  1470     0215                     	;# 
  1471     0215                     	;# 
  1472     0216                     	;# 
  1473     0216                     	;# 
  1474     0217                     	;# 
  1475     0217                     	;# 
  1476     0219                     	;# 
  1477     021A                     	;# 
  1478     021B                     	;# 
  1479     021C                     	;# 
  1480     021D                     	;# 
  1481     021E                     	;# 
  1482     021F                     	;# 
  1483     0291                     	;# 
  1484     0291                     	;# 
  1485     0292                     	;# 
  1486     0293                     	;# 
  1487     0294                     	;# 
  1488     0295                     	;# 
  1489     0295                     	;# 
  1490     0296                     	;# 
  1491     0298                     	;# 
  1492     0298                     	;# 
  1493     0299                     	;# 
  1494     029A                     	;# 
  1495     029B                     	;# 
  1496     029C                     	;# 
  1497     029C                     	;# 
  1498     029D                     	;# 
  1499     029E                     	;# 
  1500     029E                     	;# 
  1501     0311                     	;# 
  1502     0311                     	;# 
  1503     0312                     	;# 
  1504     0313                     	;# 
  1505     0318                     	;# 
  1506     0318                     	;# 
  1507     0319                     	;# 
  1508     031A                     	;# 
  1509     0394                     	;# 
  1510     0395                     	;# 
  1511     0396                     	;# 
  1512     039A                     	;# 
  1513     039C                     	;# 
  1514     039D                     	;# 
  1515     039E                     	;# 
  1516     039F                     	;# 
  1517     0415                     	;# 
  1518     0416                     	;# 
  1519     0417                     	;# 
  1520     041C                     	;# 
  1521     041D                     	;# 
  1522     041E                     	;# 
  1523     0FE4                     	;# 
  1524     0FE5                     	;# 
  1525     0FE6                     	;# 
  1526     0FE7                     	;# 
  1527     0FE8                     	;# 
  1528     0FE9                     	;# 
  1529     0FEA                     	;# 
  1530     0FEB                     	;# 
  1531     0FED                     	;# 
  1532     0FEE                     	;# 
  1533     0FEF                     	;# 
  1534     0000                     	;# 
  1535     0001                     	;# 
  1536     0002                     	;# 
  1537     0003                     	;# 
  1538     0004                     	;# 
  1539     0005                     	;# 
  1540     0006                     	;# 
  1541     0007                     	;# 
  1542     0008                     	;# 
  1543     0009                     	;# 
  1544     000A                     	;# 
  1545     000B                     	;# 
  1546     000C                     	;# 
  1547     000D                     	;# 
  1548     0011                     	;# 
  1549     0012                     	;# 
  1550     0013                     	;# 
  1551     0014                     	;# 
  1552     0015                     	;# 
  1553     0016                     	;# 
  1554     0016                     	;# 
  1555     0017                     	;# 
  1556     0018                     	;# 
  1557     0019                     	;# 
  1558     001A                     	;# 
  1559     001B                     	;# 
  1560     001C                     	;# 
  1561     001E                     	;# 
  1562     001F                     	;# 
  1563     008C                     	;# 
  1564     008D                     	;# 
  1565     0091                     	;# 
  1566     0092                     	;# 
  1567     0093                     	;# 
  1568     0094                     	;# 
  1569     0095                     	;# 
  1570     0096                     	;# 
  1571     0097                     	;# 
  1572     0098                     	;# 
  1573     0099                     	;# 
  1574     009A                     	;# 
  1575     009B                     	;# 
  1576     009B                     	;# 
  1577     009C                     	;# 
  1578     009D                     	;# 
  1579     009E                     	;# 
  1580     010C                     	;# 
  1581     010D                     	;# 
  1582     0111                     	;# 
  1583     0112                     	;# 
  1584     0113                     	;# 
  1585     0114                     	;# 
  1586     0115                     	;# 
  1587     0116                     	;# 
  1588     0117                     	;# 
  1589     0118                     	;# 
  1590     0119                     	;# 
  1591     011A                     	;# 
  1592     011B                     	;# 
  1593     011D                     	;# 
  1594     011E                     	;# 
  1595     018C                     	;# 
  1596     018D                     	;# 
  1597     0191                     	;# 
  1598     0191                     	;# 
  1599     0192                     	;# 
  1600     0193                     	;# 
  1601     0193                     	;# 
  1602     0193                     	;# 
  1603     0194                     	;# 
  1604     0195                     	;# 
  1605     0196                     	;# 
  1606     0199                     	;# 
  1607     019A                     	;# 
  1608     019B                     	;# 
  1609     019B                     	;# 
  1610     019B                     	;# 
  1611     019B                     	;# 
  1612     019C                     	;# 
  1613     019C                     	;# 
  1614     019D                     	;# 
  1615     019E                     	;# 
  1616     019F                     	;# 
  1617     020C                     	;# 
  1618     020D                     	;# 
  1619     0211                     	;# 
  1620     0211                     	;# 
  1621     0212                     	;# 
  1622     0212                     	;# 
  1623     0213                     	;# 
  1624     0213                     	;# 
  1625     0214                     	;# 
  1626     0214                     	;# 
  1627     0215                     	;# 
  1628     0215                     	;# 
  1629     0215                     	;# 
  1630     0216                     	;# 
  1631     0216                     	;# 
  1632     0217                     	;# 
  1633     0217                     	;# 
  1634     0219                     	;# 
  1635     021A                     	;# 
  1636     021B                     	;# 
  1637     021C                     	;# 
  1638     021D                     	;# 
  1639     021E                     	;# 
  1640     021F                     	;# 
  1641     0291                     	;# 
  1642     0291                     	;# 
  1643     0292                     	;# 
  1644     0293                     	;# 
  1645     0294                     	;# 
  1646     0295                     	;# 
  1647     0295                     	;# 
  1648     0296                     	;# 
  1649     0298                     	;# 
  1650     0298                     	;# 
  1651     0299                     	;# 
  1652     029A                     	;# 
  1653     029B                     	;# 
  1654     029C                     	;# 
  1655     029C                     	;# 
  1656     029D                     	;# 
  1657     029E                     	;# 
  1658     029E                     	;# 
  1659     0311                     	;# 
  1660     0311                     	;# 
  1661     0312                     	;# 
  1662     0313                     	;# 
  1663     0318                     	;# 
  1664     0318                     	;# 
  1665     0319                     	;# 
  1666     031A                     	;# 
  1667     0394                     	;# 
  1668     0395                     	;# 
  1669     0396                     	;# 
  1670     039A                     	;# 
  1671     039C                     	;# 
  1672     039D                     	;# 
  1673     039E                     	;# 
  1674     039F                     	;# 
  1675     0415                     	;# 
  1676     0416                     	;# 
  1677     0417                     	;# 
  1678     041C                     	;# 
  1679     041D                     	;# 
  1680     041E                     	;# 
  1681     0FE4                     	;# 
  1682     0FE5                     	;# 
  1683     0FE6                     	;# 
  1684     0FE7                     	;# 
  1685     0FE8                     	;# 
  1686     0FE9                     	;# 
  1687     0FEA                     	;# 
  1688     0FEB                     	;# 
  1689     0FED                     	;# 
  1690     0FEE                     	;# 
  1691     0FEF                     	;# 
  1692     0000                     	;# 
  1693     0001                     	;# 
  1694     0002                     	;# 
  1695     0003                     	;# 
  1696     0004                     	;# 
  1697     0005                     	;# 
  1698     0006                     	;# 
  1699     0007                     	;# 
  1700     0008                     	;# 
  1701     0009                     	;# 
  1702     000A                     	;# 
  1703     000B                     	;# 
  1704     000C                     	;# 
  1705     000D                     	;# 
  1706     0011                     	;# 
  1707     0012                     	;# 
  1708     0013                     	;# 
  1709     0014                     	;# 
  1710     0015                     	;# 
  1711     0016                     	;# 
  1712     0016                     	;# 
  1713     0017                     	;# 
  1714     0018                     	;# 
  1715     0019                     	;# 
  1716     001A                     	;# 
  1717     001B                     	;# 
  1718     001C                     	;# 
  1719     001E                     	;# 
  1720     001F                     	;# 
  1721     008C                     	;# 
  1722     008D                     	;# 
  1723     0091                     	;# 
  1724     0092                     	;# 
  1725     0093                     	;# 
  1726     0094                     	;# 
  1727     0095                     	;# 
  1728     0096                     	;# 
  1729     0097                     	;# 
  1730     0098                     	;# 
  1731     0099                     	;# 
  1732     009A                     	;# 
  1733     009B                     	;# 
  1734     009B                     	;# 
  1735     009C                     	;# 
  1736     009D                     	;# 
  1737     009E                     	;# 
  1738     010C                     	;# 
  1739     010D                     	;# 
  1740     0111                     	;# 
  1741     0112                     	;# 
  1742     0113                     	;# 
  1743     0114                     	;# 
  1744     0115                     	;# 
  1745     0116                     	;# 
  1746     0117                     	;# 
  1747     0118                     	;# 
  1748     0119                     	;# 
  1749     011A                     	;# 
  1750     011B                     	;# 
  1751     011D                     	;# 
  1752     011E                     	;# 
  1753     018C                     	;# 
  1754     018D                     	;# 
  1755     0191                     	;# 
  1756     0191                     	;# 
  1757     0192                     	;# 
  1758     0193                     	;# 
  1759     0193                     	;# 
  1760     0193                     	;# 
  1761     0194                     	;# 
  1762     0195                     	;# 
  1763     0196                     	;# 
  1764     0199                     	;# 
  1765     019A                     	;# 
  1766     019B                     	;# 
  1767     019B                     	;# 
  1768     019B                     	;# 
  1769     019B                     	;# 
  1770     019C                     	;# 
  1771     019C                     	;# 
  1772     019D                     	;# 
  1773     019E                     	;# 
  1774     019F                     	;# 
  1775     020C                     	;# 
  1776     020D                     	;# 
  1777     0211                     	;# 
  1778     0211                     	;# 
  1779     0212                     	;# 
  1780     0212                     	;# 
  1781     0213                     	;# 
  1782     0213                     	;# 
  1783     0214                     	;# 
  1784     0214                     	;# 
  1785     0215                     	;# 
  1786     0215                     	;# 
  1787     0215                     	;# 
  1788     0216                     	;# 
  1789     0216                     	;# 
  1790     0217                     	;# 
  1791     0217                     	;# 
  1792     0219                     	;# 
  1793     021A                     	;# 
  1794     021B                     	;# 
  1795     021C                     	;# 
  1796     021D                     	;# 
  1797     021E                     	;# 
  1798     021F                     	;# 
  1799     0291                     	;# 
  1800     0291                     	;# 
  1801     0292                     	;# 
  1802     0293                     	;# 
  1803     0294                     	;# 
  1804     0295                     	;# 
  1805     0295                     	;# 
  1806     0296                     	;# 
  1807     0298                     	;# 
  1808     0298                     	;# 
  1809     0299                     	;# 
  1810     029A                     	;# 
  1811     029B                     	;# 
  1812     029C                     	;# 
  1813     029C                     	;# 
  1814     029D                     	;# 
  1815     029E                     	;# 
  1816     029E                     	;# 
  1817     0311                     	;# 
  1818     0311                     	;# 
  1819     0312                     	;# 
  1820     0313                     	;# 
  1821     0318                     	;# 
  1822     0318                     	;# 
  1823     0319                     	;# 
  1824     031A                     	;# 
  1825     0394                     	;# 
  1826     0395                     	;# 
  1827     0396                     	;# 
  1828     039A                     	;# 
  1829     039C                     	;# 
  1830     039D                     	;# 
  1831     039E                     	;# 
  1832     039F                     	;# 
  1833     0415                     	;# 
  1834     0416                     	;# 
  1835     0417                     	;# 
  1836     041C                     	;# 
  1837     041D                     	;# 
  1838     041E                     	;# 
  1839     0FE4                     	;# 
  1840     0FE5                     	;# 
  1841     0FE6                     	;# 
  1842     0FE7                     	;# 
  1843     0FE8                     	;# 
  1844     0FE9                     	;# 
  1845     0FEA                     	;# 
  1846     0FEB                     	;# 
  1847     0FED                     	;# 
  1848     0FEE                     	;# 
  1849     0FEF                     	;# 
  1850     0000                     	;# 
  1851     0001                     	;# 
  1852     0002                     	;# 
  1853     0003                     	;# 
  1854     0004                     	;# 
  1855     0005                     	;# 
  1856     0006                     	;# 
  1857     0007                     	;# 
  1858     0008                     	;# 
  1859     0009                     	;# 
  1860     000A                     	;# 
  1861     000B                     	;# 
  1862     000C                     	;# 
  1863     000D                     	;# 
  1864     0011                     	;# 
  1865     0012                     	;# 
  1866     0013                     	;# 
  1867     0014                     	;# 
  1868     0015                     	;# 
  1869     0016                     	;# 
  1870     0016                     	;# 
  1871     0017                     	;# 
  1872     0018                     	;# 
  1873     0019                     	;# 
  1874     001A                     	;# 
  1875     001B                     	;# 
  1876     001C                     	;# 
  1877     001E                     	;# 
  1878     001F                     	;# 
  1879     008C                     	;# 
  1880     008D                     	;# 
  1881     0091                     	;# 
  1882     0092                     	;# 
  1883     0093                     	;# 
  1884     0094                     	;# 
  1885     0095                     	;# 
  1886     0096                     	;# 
  1887     0097                     	;# 
  1888     0098                     	;# 
  1889     0099                     	;# 
  1890     009A                     	;# 
  1891     009B                     	;# 
  1892     009B                     	;# 
  1893     009C                     	;# 
  1894     009D                     	;# 
  1895     009E                     	;# 
  1896     010C                     	;# 
  1897     010D                     	;# 
  1898     0111                     	;# 
  1899     0112                     	;# 
  1900     0113                     	;# 
  1901     0114                     	;# 
  1902     0115                     	;# 
  1903     0116                     	;# 
  1904     0117                     	;# 
  1905     0118                     	;# 
  1906     0119                     	;# 
  1907     011A                     	;# 
  1908     011B                     	;# 
  1909     011D                     	;# 
  1910     011E                     	;# 
  1911     018C                     	;# 
  1912     018D                     	;# 
  1913     0191                     	;# 
  1914     0191                     	;# 
  1915     0192                     	;# 
  1916     0193                     	;# 
  1917     0193                     	;# 
  1918     0193                     	;# 
  1919     0194                     	;# 
  1920     0195                     	;# 
  1921     0196                     	;# 
  1922     0199                     	;# 
  1923     019A                     	;# 
  1924     019B                     	;# 
  1925     019B                     	;# 
  1926     019B                     	;# 
  1927     019B                     	;# 
  1928     019C                     	;# 
  1929     019C                     	;# 
  1930     019D                     	;# 
  1931     019E                     	;# 
  1932     019F                     	;# 
  1933     020C                     	;# 
  1934     020D                     	;# 
  1935     0211                     	;# 
  1936     0211                     	;# 
  1937     0212                     	;# 
  1938     0212                     	;# 
  1939     0213                     	;# 
  1940     0213                     	;# 
  1941     0214                     	;# 
  1942     0214                     	;# 
  1943     0215                     	;# 
  1944     0215                     	;# 
  1945     0215                     	;# 
  1946     0216                     	;# 
  1947     0216                     	;# 
  1948     0217                     	;# 
  1949     0217                     	;# 
  1950     0219                     	;# 
  1951     021A                     	;# 
  1952     021B                     	;# 
  1953     021C                     	;# 
  1954     021D                     	;# 
  1955     021E                     	;# 
  1956     021F                     	;# 
  1957     0291                     	;# 
  1958     0291                     	;# 
  1959     0292                     	;# 
  1960     0293                     	;# 
  1961     0294                     	;# 
  1962     0295                     	;# 
  1963     0295                     	;# 
  1964     0296                     	;# 
  1965     0298                     	;# 
  1966     0298                     	;# 
  1967     0299                     	;# 
  1968     029A                     	;# 
  1969     029B                     	;# 
  1970     029C                     	;# 
  1971     029C                     	;# 
  1972     029D                     	;# 
  1973     029E                     	;# 
  1974     029E                     	;# 
  1975     0311                     	;# 
  1976     0311                     	;# 
  1977     0312                     	;# 
  1978     0313                     	;# 
  1979     0318                     	;# 
  1980     0318                     	;# 
  1981     0319                     	;# 
  1982     031A                     	;# 
  1983     0394                     	;# 
  1984     0395                     	;# 
  1985     0396                     	;# 
  1986     039A                     	;# 
  1987     039C                     	;# 
  1988     039D                     	;# 
  1989     039E                     	;# 
  1990     039F                     	;# 
  1991     0415                     	;# 
  1992     0416                     	;# 
  1993     0417                     	;# 
  1994     041C                     	;# 
  1995     041D                     	;# 
  1996     041E                     	;# 
  1997     0FE4                     	;# 
  1998     0FE5                     	;# 
  1999     0FE6                     	;# 
  2000     0FE7                     	;# 
  2001     0FE8                     	;# 
  2002     0FE9                     	;# 
  2003     0FEA                     	;# 
  2004     0FEB                     	;# 
  2005     0FED                     	;# 
  2006     0FEE                     	;# 
  2007     0FEF                     	;# 
  2008     0000                     	;# 
  2009     0001                     	;# 
  2010     0002                     	;# 
  2011     0003                     	;# 
  2012     0004                     	;# 
  2013     0005                     	;# 
  2014     0006                     	;# 
  2015     0007                     	;# 
  2016     0008                     	;# 
  2017     0009                     	;# 
  2018     000A                     	;# 
  2019     000B                     	;# 
  2020     000C                     	;# 
  2021     000D                     	;# 
  2022     0011                     	;# 
  2023     0012                     	;# 
  2024     0013                     	;# 
  2025     0014                     	;# 
  2026     0015                     	;# 
  2027     0016                     	;# 
  2028     0016                     	;# 
  2029     0017                     	;# 
  2030     0018                     	;# 
  2031     0019                     	;# 
  2032     001A                     	;# 
  2033     001B                     	;# 
  2034     001C                     	;# 
  2035     001E                     	;# 
  2036     001F                     	;# 
  2037     008C                     	;# 
  2038     008D                     	;# 
  2039     0091                     	;# 
  2040     0092                     	;# 
  2041     0093                     	;# 
  2042     0094                     	;# 
  2043     0095                     	;# 
  2044     0096                     	;# 
  2045     0097                     	;# 
  2046     0098                     	;# 
  2047     0099                     	;# 
  2048     009A                     	;# 
  2049     009B                     	;# 
  2050     009B                     	;# 
  2051     009C                     	;# 
  2052     009D                     	;# 
  2053     009E                     	;# 
  2054     010C                     	;# 
  2055     010D                     	;# 
  2056     0111                     	;# 
  2057     0112                     	;# 
  2058     0113                     	;# 
  2059     0114                     	;# 
  2060     0115                     	;# 
  2061     0116                     	;# 
  2062     0117                     	;# 
  2063     0118                     	;# 
  2064     0119                     	;# 
  2065     011A                     	;# 
  2066     011B                     	;# 
  2067     011D                     	;# 
  2068     011E                     	;# 
  2069     018C                     	;# 
  2070     018D                     	;# 
  2071     0191                     	;# 
  2072     0191                     	;# 
  2073     0192                     	;# 
  2074     0193                     	;# 
  2075     0193                     	;# 
  2076     0193                     	;# 
  2077     0194                     	;# 
  2078     0195                     	;# 
  2079     0196                     	;# 
  2080     0199                     	;# 
  2081     019A                     	;# 
  2082     019B                     	;# 
  2083     019B                     	;# 
  2084     019B                     	;# 
  2085     019B                     	;# 
  2086     019C                     	;# 
  2087     019C                     	;# 
  2088     019D                     	;# 
  2089     019E                     	;# 
  2090     019F                     	;# 
  2091     020C                     	;# 
  2092     020D                     	;# 
  2093     0211                     	;# 
  2094     0211                     	;# 
  2095     0212                     	;# 
  2096     0212                     	;# 
  2097     0213                     	;# 
  2098     0213                     	;# 
  2099     0214                     	;# 
  2100     0214                     	;# 
  2101     0215                     	;# 
  2102     0215                     	;# 
  2103     0215                     	;# 
  2104     0216                     	;# 
  2105     0216                     	;# 
  2106     0217                     	;# 
  2107     0217                     	;# 
  2108     0219                     	;# 
  2109     021A                     	;# 
  2110     021B                     	;# 
  2111     021C                     	;# 
  2112     021D                     	;# 
  2113     021E                     	;# 
  2114     021F                     	;# 
  2115     0291                     	;# 
  2116     0291                     	;# 
  2117     0292                     	;# 
  2118     0293                     	;# 
  2119     0294                     	;# 
  2120     0295                     	;# 
  2121     0295                     	;# 
  2122     0296                     	;# 
  2123     0298                     	;# 
  2124     0298                     	;# 
  2125     0299                     	;# 
  2126     029A                     	;# 
  2127     029B                     	;# 
  2128     029C                     	;# 
  2129     029C                     	;# 
  2130     029D                     	;# 
  2131     029E                     	;# 
  2132     029E                     	;# 
  2133     0311                     	;# 
  2134     0311                     	;# 
  2135     0312                     	;# 
  2136     0313                     	;# 
  2137     0318                     	;# 
  2138     0318                     	;# 
  2139     0319                     	;# 
  2140     031A                     	;# 
  2141     0394                     	;# 
  2142     0395                     	;# 
  2143     0396                     	;# 
  2144     039A                     	;# 
  2145     039C                     	;# 
  2146     039D                     	;# 
  2147     039E                     	;# 
  2148     039F                     	;# 
  2149     0415                     	;# 
  2150     0416                     	;# 
  2151     0417                     	;# 
  2152     041C                     	;# 
  2153     041D                     	;# 
  2154     041E                     	;# 
  2155     0FE4                     	;# 
  2156     0FE5                     	;# 
  2157     0FE6                     	;# 
  2158     0FE7                     	;# 
  2159     0FE8                     	;# 
  2160     0FE9                     	;# 
  2161     0FEA                     	;# 
  2162     0FEB                     	;# 
  2163     0FED                     	;# 
  2164     0FEE                     	;# 
  2165     0FEF                     	;# 
  2166     0000                     	;# 
  2167     0001                     	;# 
  2168     0002                     	;# 
  2169     0003                     	;# 
  2170     0004                     	;# 
  2171     0005                     	;# 
  2172     0006                     	;# 
  2173     0007                     	;# 
  2174     0008                     	;# 
  2175     0009                     	;# 
  2176     000A                     	;# 
  2177     000B                     	;# 
  2178     000C                     	;# 
  2179     000D                     	;# 
  2180     0011                     	;# 
  2181     0012                     	;# 
  2182     0013                     	;# 
  2183     0014                     	;# 
  2184     0015                     	;# 
  2185     0016                     	;# 
  2186     0016                     	;# 
  2187     0017                     	;# 
  2188     0018                     	;# 
  2189     0019                     	;# 
  2190     001A                     	;# 
  2191     001B                     	;# 
  2192     001C                     	;# 
  2193     001E                     	;# 
  2194     001F                     	;# 
  2195     008C                     	;# 
  2196     008D                     	;# 
  2197     0091                     	;# 
  2198     0092                     	;# 
  2199     0093                     	;# 
  2200     0094                     	;# 
  2201     0095                     	;# 
  2202     0096                     	;# 
  2203     0097                     	;# 
  2204     0098                     	;# 
  2205     0099                     	;# 
  2206     009A                     	;# 
  2207     009B                     	;# 
  2208     009B                     	;# 
  2209     009C                     	;# 
  2210     009D                     	;# 
  2211     009E                     	;# 
  2212     010C                     	;# 
  2213     010D                     	;# 
  2214     0111                     	;# 
  2215     0112                     	;# 
  2216     0113                     	;# 
  2217     0114                     	;# 
  2218     0115                     	;# 
  2219     0116                     	;# 
  2220     0117                     	;# 
  2221     0118                     	;# 
  2222     0119                     	;# 
  2223     011A                     	;# 
  2224     011B                     	;# 
  2225     011D                     	;# 
  2226     011E                     	;# 
  2227     018C                     	;# 
  2228     018D                     	;# 
  2229     0191                     	;# 
  2230     0191                     	;# 
  2231     0192                     	;# 
  2232     0193                     	;# 
  2233     0193                     	;# 
  2234     0193                     	;# 
  2235     0194                     	;# 
  2236     0195                     	;# 
  2237     0196                     	;# 
  2238     0199                     	;# 
  2239     019A                     	;# 
  2240     019B                     	;# 
  2241     019B                     	;# 
  2242     019B                     	;# 
  2243     019B                     	;# 
  2244     019C                     	;# 
  2245     019C                     	;# 
  2246     019D                     	;# 
  2247     019E                     	;# 
  2248     019F                     	;# 
  2249     020C                     	;# 
  2250     020D                     	;# 
  2251     0211                     	;# 
  2252     0211                     	;# 
  2253     0212                     	;# 
  2254     0212                     	;# 
  2255     0213                     	;# 
  2256     0213                     	;# 
  2257     0214                     	;# 
  2258     0214                     	;# 
  2259     0215                     	;# 
  2260     0215                     	;# 
  2261     0215                     	;# 
  2262     0216                     	;# 
  2263     0216                     	;# 
  2264     0217                     	;# 
  2265     0217                     	;# 
  2266     0219                     	;# 
  2267     021A                     	;# 
  2268     021B                     	;# 
  2269     021C                     	;# 
  2270     021D                     	;# 
  2271     021E                     	;# 
  2272     021F                     	;# 
  2273     0291                     	;# 
  2274     0291                     	;# 
  2275     0292                     	;# 
  2276     0293                     	;# 
  2277     0294                     	;# 
  2278     0295                     	;# 
  2279     0295                     	;# 
  2280     0296                     	;# 
  2281     0298                     	;# 
  2282     0298                     	;# 
  2283     0299                     	;# 
  2284     029A                     	;# 
  2285     029B                     	;# 
  2286     029C                     	;# 
  2287     029C                     	;# 
  2288     029D                     	;# 
  2289     029E                     	;# 
  2290     029E                     	;# 
  2291     0311                     	;# 
  2292     0311                     	;# 
  2293     0312                     	;# 
  2294     0313                     	;# 
  2295     0318                     	;# 
  2296     0318                     	;# 
  2297     0319                     	;# 
  2298     031A                     	;# 
  2299     0394                     	;# 
  2300     0395                     	;# 
  2301     0396                     	;# 
  2302     039A                     	;# 
  2303     039C                     	;# 
  2304     039D                     	;# 
  2305     039E                     	;# 
  2306     039F                     	;# 
  2307     0415                     	;# 
  2308     0416                     	;# 
  2309     0417                     	;# 
  2310     041C                     	;# 
  2311     041D                     	;# 
  2312     041E                     	;# 
  2313     0FE4                     	;# 
  2314     0FE5                     	;# 
  2315     0FE6                     	;# 
  2316     0FE7                     	;# 
  2317     0FE8                     	;# 
  2318     0FE9                     	;# 
  2319     0FEA                     	;# 
  2320     0FEB                     	;# 
  2321     0FED                     	;# 
  2322     0FEE                     	;# 
  2323     0FEF                     	;# 
  2324     0000                     	;# 
  2325     0001                     	;# 
  2326     0002                     	;# 
  2327     0003                     	;# 
  2328     0004                     	;# 
  2329     0005                     	;# 
  2330     0006                     	;# 
  2331     0007                     	;# 
  2332     0008                     	;# 
  2333     0009                     	;# 
  2334     000A                     	;# 
  2335     000B                     	;# 
  2336     000C                     	;# 
  2337     000D                     	;# 
  2338     0011                     	;# 
  2339     0012                     	;# 
  2340     0013                     	;# 
  2341     0014                     	;# 
  2342     0015                     	;# 
  2343     0016                     	;# 
  2344     0016                     	;# 
  2345     0017                     	;# 
  2346     0018                     	;# 
  2347     0019                     	;# 
  2348     001A                     	;# 
  2349     001B                     	;# 
  2350     001C                     	;# 
  2351     001E                     	;# 
  2352     001F                     	;# 
  2353     008C                     	;# 
  2354     008D                     	;# 
  2355     0091                     	;# 
  2356     0092                     	;# 
  2357     0093                     	;# 
  2358     0094                     	;# 
  2359     0095                     	;# 
  2360     0096                     	;# 
  2361     0097                     	;# 
  2362     0098                     	;# 
  2363     0099                     	;# 
  2364     009A                     	;# 
  2365     009B                     	;# 
  2366     009B                     	;# 
  2367     009C                     	;# 
  2368     009D                     	;# 
  2369     009E                     	;# 
  2370     010C                     	;# 
  2371     010D                     	;# 
  2372     0111                     	;# 
  2373     0112                     	;# 
  2374     0113                     	;# 
  2375     0114                     	;# 
  2376     0115                     	;# 
  2377     0116                     	;# 
  2378     0117                     	;# 
  2379     0118                     	;# 
  2380     0119                     	;# 
  2381     011A                     	;# 
  2382     011B                     	;# 
  2383     011D                     	;# 
  2384     011E                     	;# 
  2385     018C                     	;# 
  2386     018D                     	;# 
  2387     0191                     	;# 
  2388     0191                     	;# 
  2389     0192                     	;# 
  2390     0193                     	;# 
  2391     0193                     	;# 
  2392     0193                     	;# 
  2393     0194                     	;# 
  2394     0195                     	;# 
  2395     0196                     	;# 
  2396     0199                     	;# 
  2397     019A                     	;# 
  2398     019B                     	;# 
  2399     019B                     	;# 
  2400     019B                     	;# 
  2401     019B                     	;# 
  2402     019C                     	;# 
  2403     019C                     	;# 
  2404     019D                     	;# 
  2405     019E                     	;# 
  2406     019F                     	;# 
  2407     020C                     	;# 
  2408     020D                     	;# 
  2409     0211                     	;# 
  2410     0211                     	;# 
  2411     0212                     	;# 
  2412     0212                     	;# 
  2413     0213                     	;# 
  2414     0213                     	;# 
  2415     0214                     	;# 
  2416     0214                     	;# 
  2417     0215                     	;# 
  2418     0215                     	;# 
  2419     0215                     	;# 
  2420     0216                     	;# 
  2421     0216                     	;# 
  2422     0217                     	;# 
  2423     0217                     	;# 
  2424     0219                     	;# 
  2425     021A                     	;# 
  2426     021B                     	;# 
  2427     021C                     	;# 
  2428     021D                     	;# 
  2429     021E                     	;# 
  2430     021F                     	;# 
  2431     0291                     	;# 
  2432     0291                     	;# 
  2433     0292                     	;# 
  2434     0293                     	;# 
  2435     0294                     	;# 
  2436     0295                     	;# 
  2437     0295                     	;# 
  2438     0296                     	;# 
  2439     0298                     	;# 
  2440     0298                     	;# 
  2441     0299                     	;# 
  2442     029A                     	;# 
  2443     029B                     	;# 
  2444     029C                     	;# 
  2445     029C                     	;# 
  2446     029D                     	;# 
  2447     029E                     	;# 
  2448     029E                     	;# 
  2449     0311                     	;# 
  2450     0311                     	;# 
  2451     0312                     	;# 
  2452     0313                     	;# 
  2453     0318                     	;# 
  2454     0318                     	;# 
  2455     0319                     	;# 
  2456     031A                     	;# 
  2457     0394                     	;# 
  2458     0395                     	;# 
  2459     0396                     	;# 
  2460     039A                     	;# 
  2461     039C                     	;# 
  2462     039D                     	;# 
  2463     039E                     	;# 
  2464     039F                     	;# 
  2465     0415                     	;# 
  2466     0416                     	;# 
  2467     0417                     	;# 
  2468     041C                     	;# 
  2469     041D                     	;# 
  2470     041E                     	;# 
  2471     0FE4                     	;# 
  2472     0FE5                     	;# 
  2473     0FE6                     	;# 
  2474     0FE7                     	;# 
  2475     0FE8                     	;# 
  2476     0FE9                     	;# 
  2477     0FEA                     	;# 
  2478     0FEB                     	;# 
  2479     0FED                     	;# 
  2480     0FEE                     	;# 
  2481     0FEF                     	;# 
  2482                           
  2483                           	psect	idataBANK0
  2484     06F1                     __pidataBANK0:
  2485                           
  2486                           ;initializer for _kdp
  2487     06F1  3401               	retlw	1
  2488     06F2  3400               	retlw	0
  2489                           
  2490                           ;initializer for _kip
  2491     06F3  3413               	retlw	19
  2492     06F4  3400               	retlw	0
  2493                           
  2494                           ;initializer for _kpp
  2495     06F5  340C               	retlw	12
  2496     06F6  3400               	retlw	0
  2497                           
  2498                           ;initializer for _kif
  2499     06F7  3469               	retlw	105
  2500     06F8  3400               	retlw	0
  2501                           
  2502                           ;initializer for _kpf
  2503     06F9  342D               	retlw	45
  2504     06FA  3400               	retlw	0
  2505                           
  2506                           ;initializer for _incPos
  2507     06FB  3401               	retlw	1
  2508                           
  2509                           ;initializer for _controlchoice
  2510     06FC  3401               	retlw	1
  2511                           
  2512                           	psect	nvBANK0
  2513     0066                     __pnvBANK0:
  2514     0066                     _TMR6_InterruptHandler:
  2515     0066                     	ds	2
  2516     0068                     _TMR0_InterruptHandler:
  2517     0068                     	ds	2
  2518     006A                     _EUSART_TxDefaultInterruptHandler:
  2519     006A                     	ds	2
  2520                           
  2521                           	psect	nvBANK1
  2522     00C4                     __pnvBANK1:
  2523     00C4                     _adc_temp:
  2524     00C4                     	ds	2
  2525     00C6                     _EUSART_ErrorHandler:
  2526     00C6                     	ds	2
  2527     00C8                     _EUSART_OverrunErrorHandler:
  2528     00C8                     	ds	2
  2529     00CA                     _EUSART_FramingErrorHandler:
  2530     00CA                     	ds	2
  2531     00CC                     _EUSART_RxDefaultInterruptHandler:
  2532     00CC                     	ds	2
  2533     0015                     _TMR0	set	21
  2534     0013                     _PIR3bits	set	19
  2535     001C                     _T2CONbits	set	28
  2536     001C                     _T2CON	set	28
  2537     0011                     _PIR1bits	set	17
  2538     001A                     _TMR2	set	26
  2539     001B                     _PR2	set	27
  2540     000B                     _INTCONbits	set	11
  2541     009D                     _ADCON0bits	set	157
  2542     009D                     _ADCON0	set	157
  2543     009C                     _ADRESH	set	156
  2544     009B                     _ADRESL	set	155
  2545     009E                     _ADCON1	set	158
  2546     0095                     _OPTION_REG	set	149
  2547     0091                     _PIE1bits	set	145
  2548     0093                     _PIE3bits	set	147
  2549     0095                     _OPTION_REGbits	set	149
  2550     008D                     _TRISB	set	141
  2551     008C                     _TRISA	set	140
  2552     0097                     _WDTCON	set	151
  2553     0098                     _OSCTUNE	set	152
  2554     0099                     _OSCCON	set	153
  2555     010C                     _LATAbits	set	268
  2556     0115                     _CMOUTbits	set	277
  2557     0112                     _CM1CON1	set	274
  2558     0111                     _CM1CON0	set	273
  2559     0119                     _DACCON1	set	281
  2560     0118                     _DACCON0	set	280
  2561     0117                     _FVRCONbits	set	279
  2562     0117                     _FVRCON	set	279
  2563     011E                     _APFCON1	set	286
  2564     011D                     _APFCON0	set	285
  2565     010D                     _LATB	set	269
  2566     010C                     _LATA	set	268
  2567     0116                     _BORCON	set	278
  2568     0199                     _RCREG	set	409
  2569     019D                     _RCSTAbits	set	413
  2570     019A                     _TXREG	set	410
  2571     019E                     _TXSTAbits	set	414
  2572     019C                     _SPBRGH	set	412
  2573     019B                     _SPBRGL	set	411
  2574     019E                     _TXSTA	set	414
  2575     019D                     _RCSTA	set	413
  2576     019F                     _BAUDCON	set	415
  2577     018C                     _ANSELA	set	396
  2578     018D                     _ANSELB	set	397
  2579     020C                     _WPUA	set	524
  2580     020D                     _WPUB	set	525
  2581     029E                     _CCPTMRS0bits	set	670
  2582     0291                     _CCPR1L	set	657
  2583     0292                     _CCPR1H	set	658
  2584     0296                     _PSTR1CON	set	662
  2585     0294                     _PWM1CON	set	660
  2586     0295                     _ECCP1AS	set	661
  2587     0293                     _CCP1CON	set	659
  2588     041E                     _T6CONbits	set	1054
  2589     041E                     _T6CON	set	1054
  2590     041C                     _TMR6	set	1052
  2591     041D                     _PR6	set	1053
  2592     0417                     _T4CONbits	set	1047
  2593     0417                     _T4CON	set	1047
  2594     0415                     _TMR4	set	1045
  2595     0416                     _PR4	set	1046
  2596                           
  2597                           	psect	cinit
  2598     0055                     start_initialization:	
  2599                           ; #config settings
  2600                           
  2601     0055                     __initialization:
  2602                           
  2603                           ; Initialize objects allocated to BANK0
  2604     0055  30F1               	movlw	low __pidataBANK0
  2605     0056  0084               	movwf	4
  2606     0057  3086               	movlw	(high __pidataBANK0)| (0+128)
  2607     0058  0085               	movwf	5
  2608     0059  305A               	movlw	low __pdataBANK0
  2609     005A  0086               	movwf	6
  2610     005B  3000               	movlw	high __pdataBANK0
  2611     005C  0087               	movwf	7
  2612     005D  300C               	movlw	12
  2613     005E  3187  2742  3180   	fcall	init_ram
  2614                           
  2615                           ; Clear objects allocated to BANK0
  2616     0061  3020               	movlw	low __pbssBANK0
  2617     0062  0084               	movwf	4
  2618     0063  3000               	movlw	high __pbssBANK0
  2619     0064  0085               	movwf	5
  2620     0065  3028               	movlw	40
  2621     0066  3187  2748  3180   	fcall	clear_ram0
  2622                           
  2623                           ; Clear objects allocated to BANK1
  2624     0069  30A0               	movlw	low __pbssBANK1
  2625     006A  0084               	movwf	4
  2626     006B  3000               	movlw	high __pbssBANK1
  2627     006C  0085               	movwf	5
  2628     006D  3024               	movlw	36
  2629     006E  3187  2748  3180   	fcall	clear_ram0
  2630     0071                     end_of_initialization:	
  2631                           ;End of C runtime variable initialization code
  2632                           
  2633     0071                     __end_of__initialization:
  2634     0071  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2635     0072  0020               	movlb	0
  2636     0073  3183  2BBA         	ljmp	_main	;jump to C main() function
  2637                           
  2638                           	psect	bssBANK0
  2639     0020                     __pbssBANK0:
  2640     0020                     _dcRx:
  2641     0020                     	ds	2
  2642     0022                     _dRx:
  2643     0022                     	ds	2
  2644     0024                     _dTx:
  2645     0024                     	ds	2
  2646     0026                     _tTx:
  2647     0026                     	ds	2
  2648     0028                     _output:
  2649     0028                     	ds	2
  2650     002A                     _outputsum:
  2651     002A                     	ds	2
  2652     002C                     _dinput:
  2653     002C                     	ds	2
  2654     002E                     _flux:
  2655     002E                     	ds	2
  2656     0030                     _ballset:
  2657     0030                     	ds	2
  2658     0032                     _balldist:
  2659     0032                     	ds	2
  2660     0034                     _error:
  2661     0034                     	ds	2
  2662     0036                     _ADC_InterruptHandler:
  2663     0036                     	ds	2
  2664     0038                     TMR0_ISR@CountCallBack:
  2665     0038                     	ds	2
  2666     003A                     _pas:
  2667     003A                     	ds	1
  2668     003B                     _fim_curso:
  2669     003B                     	ds	1
  2670     003C                     _passo:
  2671     003C                     	ds	1
  2672     003D                     _position:
  2673     003D                     	ds	1
  2674     003E                     _countRx:
  2675     003E                     	ds	1
  2676     003F                     _timecontrol:
  2677     003F                     	ds	1
  2678     0040                     _timer0ReloadVal:
  2679     0040                     	ds	1
  2680     0041                     _eusartRxLastError:
  2681     0041                     	ds	1
  2682     0042                     _eusartRxCount:
  2683     0042                     	ds	1
  2684     0043                     _eusartRxTail:
  2685     0043                     	ds	1
  2686     0044                     _eusartRxHead:
  2687     0044                     	ds	1
  2688     0045                     _eusartTxBufferRemaining:
  2689     0045                     	ds	1
  2690     0046                     _eusartTxTail:
  2691     0046                     	ds	1
  2692     0047                     _eusartTxHead:
  2693     0047                     	ds	1
  2694                           
  2695                           	psect	dataBANK0
  2696     005A                     __pdataBANK0:
  2697     005A                     _kdp:
  2698     005A                     	ds	2
  2699     005C                     _kip:
  2700     005C                     	ds	2
  2701     005E                     _kpp:
  2702     005E                     	ds	2
  2703     0060                     _kif:
  2704     0060                     	ds	2
  2705     0062                     _kpf:
  2706     0062                     	ds	2
  2707     0064                     _incPos:
  2708     0064                     	ds	1
  2709     0065                     _controlchoice:
  2710     0065                     	ds	1
  2711                           
  2712                           	psect	bssBANK1
  2713     00A0                     __pbssBANK1:
  2714     00A0                     _bufferRx:
  2715     00A0                     	ds	8
  2716     00A8                     _eusartRxStatusBuffer:
  2717     00A8                     	ds	8
  2718     00B0                     _eusartRxBuffer:
  2719     00B0                     	ds	8
  2720     00B8                     _eusartTxBuffer:
  2721     00B8                     	ds	8
  2722     00C0                     _float_temp:
  2723     00C0                     	ds	4
  2724                           
  2725                           	psect	inittext
  2726     0742                     init_ram:
  2727     0742  00FE               	movwf	btemp
  2728     0743                     initloop:
  2729     0743  0012               	moviw fsr0++
  2730     0744  001E               	movwi fsr1++
  2731     0745  0BFE               	decfsz	btemp,f
  2732     0746  2F43               	goto	initloop
  2733     0747  3400               	retlw	0
  2734                           
  2735                           	psect	clrtext
  2736     0748                     clear_ram0:	
  2737                           ;	Called with FSR0 containing the base address, and
  2738                           ;	WREG with the size to clear
  2739                           
  2740     0748  0064               	clrwdt	;clear the watchdog before getting into this loop
  2741     0749                     clrloop0:
  2742     0749  0180               	clrf	0	;clear RAM location pointed to by FSR
  2743     074A  3101               	addfsr 0,1
  2744     074B  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2745     074C  2F49               	goto	clrloop0	;have we reached the end yet?
  2746     074D  3400               	retlw	0	;all done for this memory range, return
  2747                           
  2748                           	psect	cstackBANK1
  2749     00CE                     __pcstackBANK1:
  2750     00CE                     ??_pwmcontrol:
  2751                           
  2752                           ; 1 bytes @ 0x0
  2753     00CE                     	ds	2
  2754     00D0                     _pwmcontrol$1940:
  2755                           
  2756                           ; 2 bytes @ 0x2
  2757     00D0                     	ds	2
  2758                           
  2759                           	psect	cstackCOMMON
  2760     0070                     __pcstackCOMMON:
  2761     0070                     ?_PIN_MANAGER_Initialize:
  2762     0070                     ?_OSCILLATOR_Initialize:	
  2763                           ; 1 bytes @ 0x0
  2764                           
  2765     0070                     ?_WDT_Initialize:	
  2766                           ; 1 bytes @ 0x0
  2767                           
  2768     0070                     ?_DAC_Initialize:	
  2769                           ; 1 bytes @ 0x0
  2770                           
  2771     0070                     ?_FVR_Initialize:	
  2772                           ; 1 bytes @ 0x0
  2773                           
  2774     0070                     ?_TMR4_Initialize:	
  2775                           ; 1 bytes @ 0x0
  2776                           
  2777     0070                     ?_TMR2_Initialize:	
  2778                           ; 1 bytes @ 0x0
  2779                           
  2780     0070                     ?_TMR0_Initialize:	
  2781                           ; 1 bytes @ 0x0
  2782                           
  2783     0070                     ?_TMR6_Initialize:	
  2784                           ; 1 bytes @ 0x0
  2785                           
  2786     0070                     ?_CMP1_Initialize:	
  2787                           ; 1 bytes @ 0x0
  2788                           
  2789     0070                     ?_ADC_Initialize:	
  2790                           ; 1 bytes @ 0x0
  2791                           
  2792     0070                     ?_EPWM1_Initialize:	
  2793                           ; 1 bytes @ 0x0
  2794                           
  2795     0070                     ?_EUSART_Initialize:	
  2796                           ; 1 bytes @ 0x0
  2797                           
  2798     0070                     ?_TMR0_ISR:	
  2799                           ; 1 bytes @ 0x0
  2800                           
  2801     0070                     ?_TMR6_ISR:	
  2802                           ; 1 bytes @ 0x0
  2803                           
  2804     0070                     ?_EUSART_Receive_ISR:	
  2805                           ; 1 bytes @ 0x0
  2806                           
  2807     0070                     ?_EUSART_Transmit_ISR:	
  2808                           ; 1 bytes @ 0x0
  2809                           
  2810     0070                     ??_EUSART_Transmit_ISR:	
  2811                           ; 1 bytes @ 0x0
  2812                           
  2813     0070                     ?_EUSART_DefaultFramingErrorHandler:	
  2814                           ; 1 bytes @ 0x0
  2815                           
  2816     0070                     ??_EUSART_DefaultFramingErrorHandler:	
  2817                           ; 1 bytes @ 0x0
  2818                           
  2819     0070                     ?_EUSART_DefaultOverrunErrorHandler:	
  2820                           ; 1 bytes @ 0x0
  2821                           
  2822     0070                     ??_EUSART_DefaultOverrunErrorHandler:	
  2823                           ; 1 bytes @ 0x0
  2824                           
  2825     0070                     ?_EUSART_DefaultErrorHandler:	
  2826                           ; 1 bytes @ 0x0
  2827                           
  2828     0070                     ?_EUSART_RxDataHandler:	
  2829                           ; 1 bytes @ 0x0
  2830                           
  2831     0070                     ??_EUSART_RxDataHandler:	
  2832                           ; 1 bytes @ 0x0
  2833                           
  2834     0070                     ?_TMR0_DefaultInterruptHandler:	
  2835                           ; 1 bytes @ 0x0
  2836                           
  2837     0070                     ??_TMR0_DefaultInterruptHandler:	
  2838                           ; 1 bytes @ 0x0
  2839                           
  2840     0070                     ?_TMR0_CallBack:	
  2841                           ; 1 bytes @ 0x0
  2842                           
  2843     0070                     ?_fluxpos:	
  2844                           ; 1 bytes @ 0x0
  2845                           
  2846     0070                     ?_daUmPasso:	
  2847                           ; 1 bytes @ 0x0
  2848                           
  2849     0070                     ??_daUmPasso:	
  2850                           ; 1 bytes @ 0x0
  2851                           
  2852     0070                     ?_ascii_bin:	
  2853                           ; 1 bytes @ 0x0
  2854                           
  2855     0070                     ??_ascii_bin:	
  2856                           ; 1 bytes @ 0x0
  2857                           
  2858     0070                     ?_bin_ascii:	
  2859                           ; 1 bytes @ 0x0
  2860                           
  2861     0070                     ??_bin_ascii:	
  2862                           ; 1 bytes @ 0x0
  2863                           
  2864     0070                     ?_TMR6_DefaultInterruptHandler:	
  2865                           ; 1 bytes @ 0x0
  2866                           
  2867     0070                     ??_TMR6_DefaultInterruptHandler:	
  2868                           ; 1 bytes @ 0x0
  2869                           
  2870     0070                     ?_SYSTEM_Initialize:	
  2871                           ; 1 bytes @ 0x0
  2872                           
  2873     0070                     ?_PIN_MANAGER_IOC:	
  2874                           ; 1 bytes @ 0x0
  2875                           
  2876     0070                     ??_PIN_MANAGER_IOC:	
  2877                           ; 1 bytes @ 0x0
  2878                           
  2879     0070                     ?_TMR4_StartTimer:	
  2880                           ; 1 bytes @ 0x0
  2881                           
  2882     0070                     ?_TMR4_StopTimer:	
  2883                           ; 1 bytes @ 0x0
  2884                           
  2885     0070                     ?_TMR4_ReadTimer:	
  2886                           ; 1 bytes @ 0x0
  2887                           
  2888     0070                     ?_TMR4_LoadPeriodRegister:	
  2889                           ; 1 bytes @ 0x0
  2890                           
  2891     0070                     ?_INTERRUPT_InterruptManager:	
  2892                           ; 1 bytes @ 0x0
  2893                           
  2894     0070                     ?_EUSART_Read:	
  2895                           ; 1 bytes @ 0x0
  2896                           
  2897     0070                     ??_EUSART_Read:	
  2898                           ; 1 bytes @ 0x0
  2899                           
  2900     0070                     ?_EUSART_Write:	
  2901                           ; 1 bytes @ 0x0
  2902                           
  2903     0070                     ??_EUSART_Write:	
  2904                           ; 1 bytes @ 0x0
  2905                           
  2906     0070                     ?_CMP1_GetOutputStatus:	
  2907                           ; 1 bytes @ 0x0
  2908                           
  2909     0070                     ??_CMP1_GetOutputStatus:	
  2910                           ; 1 bytes @ 0x0
  2911                           
  2912     0070                     ?_fluxcontrol:	
  2913                           ; 1 bytes @ 0x0
  2914                           
  2915     0070                     ?_pwmcontrol:	
  2916                           ; 1 bytes @ 0x0
  2917                           
  2918     0070                     ?_controlchoose:	
  2919                           ; 1 bytes @ 0x0
  2920                           
  2921     0070                     ?_analisa_Rx:	
  2922                           ; 1 bytes @ 0x0
  2923                           
  2924     0070                     ?_envia_Tx:	
  2925                           ; 1 bytes @ 0x0
  2926                           
  2927     0070                     ?_receive:	
  2928                           ; 1 bytes @ 0x0
  2929                           
  2930     0070                     ?_main:	
  2931                           ; 1 bytes @ 0x0
  2932                           
  2933     0070                     ?i1_EPWM1_LoadDutyValue:	
  2934                           ; 1 bytes @ 0x0
  2935                           
  2936     0070                     ?i1___wmul:	
  2937                           ; 1 bytes @ 0x0
  2938                           
  2939     0070                     bin_ascii@vBin:	
  2940                           ; 2 bytes @ 0x0
  2941                           
  2942     0070                     ascii_bin@vAscii:	
  2943                           ; 1 bytes @ 0x0
  2944                           
  2945     0070                     i1EPWM1_LoadDutyValue@dutyValue:	
  2946                           ; 1 bytes @ 0x0
  2947                           
  2948     0070                     i1___wmul@multiplier:	
  2949                           ; 2 bytes @ 0x0
  2950                           
  2951                           
  2952                           ; 2 bytes @ 0x0
  2953     0070                     	ds	1
  2954     0071                     ??_EUSART_Receive_ISR:
  2955     0071                     ??_EUSART_DefaultErrorHandler:	
  2956                           ; 1 bytes @ 0x1
  2957                           
  2958     0071                     EUSART_Read@readValue:	
  2959                           ; 1 bytes @ 0x1
  2960                           
  2961     0071                     EUSART_Write@txData:	
  2962                           ; 1 bytes @ 0x1
  2963                           
  2964                           
  2965                           ; 1 bytes @ 0x1
  2966     0071                     	ds	1
  2967     0072                     ??_TMR0_ISR:
  2968     0072                     ??_TMR0_CallBack:	
  2969                           ; 1 bytes @ 0x2
  2970                           
  2971     0072                     ??_envia_Tx:	
  2972                           ; 1 bytes @ 0x2
  2973                           
  2974     0072                     ??i1_EPWM1_LoadDutyValue:	
  2975                           ; 1 bytes @ 0x2
  2976                           
  2977     0072                     i1___wmul@multiplicand:	
  2978                           ; 1 bytes @ 0x2
  2979                           
  2980                           
  2981                           ; 2 bytes @ 0x2
  2982     0072                     	ds	2
  2983     0074                     ??i1___wmul:
  2984     0074                     i1___wmul@product:	
  2985                           ; 1 bytes @ 0x4
  2986                           
  2987                           
  2988                           ; 2 bytes @ 0x4
  2989     0074                     	ds	2
  2990     0076                     ?i1___lwdiv:
  2991     0076                     daUmPasso@sentido:	
  2992                           ; 2 bytes @ 0x6
  2993                           
  2994     0076                     i1___lwdiv@divisor:	
  2995                           ; 1 bytes @ 0x6
  2996                           
  2997                           
  2998                           ; 2 bytes @ 0x6
  2999     0076                     	ds	1
  3000     0077                     ??_fluxpos:
  3001                           
  3002                           ; 1 bytes @ 0x7
  3003     0077                     	ds	1
  3004     0078                     i1___lwdiv@dividend:
  3005                           
  3006                           ; 2 bytes @ 0x8
  3007     0078                     	ds	2
  3008     007A                     ??i1___lwdiv:
  3009                           
  3010                           ; 1 bytes @ 0xA
  3011     007A                     	ds	1
  3012     007B                     i1___lwdiv@quotient:
  3013                           
  3014                           ; 2 bytes @ 0xB
  3015     007B                     	ds	2
  3016     007D                     i1___lwdiv@counter:
  3017                           
  3018                           ; 1 bytes @ 0xD
  3019     007D                     	ds	1
  3020     007E                     ??_TMR6_ISR:
  3021     007E                     ??_INTERRUPT_InterruptManager:	
  3022                           ; 1 bytes @ 0xE
  3023                           
  3024                           
  3025                           	psect	cstackBANK0
  3026     0048                     __pcstackBANK0:	
  3027                           ; 1 bytes @ 0xE
  3028                           
  3029     0048                     ??_fluxcontrol:
  3030     0048                     ??_analisa_Rx:	
  3031                           ; 1 bytes @ 0x0
  3032                           
  3033                           
  3034                           ; 1 bytes @ 0x0
  3035     0048                     	ds	1
  3036     0049                     ??_receive:
  3037                           
  3038                           ; 1 bytes @ 0x1
  3039     0049                     	ds	1
  3040     004A                     receive@rx_byte:
  3041     004A                     _fluxcontrol$1962:	
  3042                           ; 1 bytes @ 0x2
  3043                           
  3044                           
  3045                           ; 2 bytes @ 0x2
  3046     004A                     	ds	2
  3047     004C                     ??_PIN_MANAGER_Initialize:
  3048     004C                     ??_OSCILLATOR_Initialize:	
  3049                           ; 1 bytes @ 0x4
  3050                           
  3051     004C                     ??_WDT_Initialize:	
  3052                           ; 1 bytes @ 0x4
  3053                           
  3054     004C                     ??_DAC_Initialize:	
  3055                           ; 1 bytes @ 0x4
  3056                           
  3057     004C                     ??_FVR_Initialize:	
  3058                           ; 1 bytes @ 0x4
  3059                           
  3060     004C                     ??_TMR4_Initialize:	
  3061                           ; 1 bytes @ 0x4
  3062                           
  3063     004C                     ??_TMR2_Initialize:	
  3064                           ; 1 bytes @ 0x4
  3065                           
  3066     004C                     ??_CMP1_Initialize:	
  3067                           ; 1 bytes @ 0x4
  3068                           
  3069     004C                     ??_ADC_Initialize:	
  3070                           ; 1 bytes @ 0x4
  3071                           
  3072     004C                     ??_EPWM1_Initialize:	
  3073                           ; 1 bytes @ 0x4
  3074                           
  3075     004C                     ?_EUSART_SetRxInterruptHandler:	
  3076                           ; 1 bytes @ 0x4
  3077                           
  3078     004C                     ?_EUSART_SetTxInterruptHandler:	
  3079                           ; 1 bytes @ 0x4
  3080                           
  3081     004C                     ?_EUSART_SetFramingErrorHandler:	
  3082                           ; 1 bytes @ 0x4
  3083                           
  3084     004C                     ?_EUSART_SetOverrunErrorHandler:	
  3085                           ; 1 bytes @ 0x4
  3086                           
  3087     004C                     ?_EUSART_SetErrorHandler:	
  3088                           ; 1 bytes @ 0x4
  3089                           
  3090     004C                     ?_TMR0_SetInterruptHandler:	
  3091                           ; 1 bytes @ 0x4
  3092                           
  3093     004C                     ?_TMR6_SetInterruptHandler:	
  3094                           ; 1 bytes @ 0x4
  3095                           
  3096     004C                     ??_TMR4_StartTimer:	
  3097                           ; 1 bytes @ 0x4
  3098                           
  3099     004C                     ??_TMR4_StopTimer:	
  3100                           ; 1 bytes @ 0x4
  3101                           
  3102     004C                     ??_TMR4_ReadTimer:	
  3103                           ; 1 bytes @ 0x4
  3104                           
  3105     004C                     ??_TMR4_LoadPeriodRegister:	
  3106                           ; 1 bytes @ 0x4
  3107                           
  3108     004C                     ?_EPWM1_LoadDutyValue:	
  3109                           ; 1 bytes @ 0x4
  3110                           
  3111     004C                     ?_ADC_GetConversion:	
  3112                           ; 1 bytes @ 0x4
  3113                           
  3114     004C                     ?___wmul:	
  3115                           ; 2 bytes @ 0x4
  3116                           
  3117     004C                     TMR4_ReadTimer@readVal:	
  3118                           ; 2 bytes @ 0x4
  3119                           
  3120     004C                     TMR4_LoadPeriodRegister@periodVal:	
  3121                           ; 1 bytes @ 0x4
  3122                           
  3123     004C                     EPWM1_LoadDutyValue@dutyValue:	
  3124                           ; 1 bytes @ 0x4
  3125                           
  3126     004C                     EUSART_SetFramingErrorHandler@interruptHandler:	
  3127                           ; 2 bytes @ 0x4
  3128                           
  3129     004C                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  3130                           ; 2 bytes @ 0x4
  3131                           
  3132     004C                     EUSART_SetErrorHandler@interruptHandler:	
  3133                           ; 2 bytes @ 0x4
  3134                           
  3135     004C                     EUSART_SetTxInterruptHandler@interruptHandler:	
  3136                           ; 2 bytes @ 0x4
  3137                           
  3138     004C                     EUSART_SetRxInterruptHandler@interruptHandler:	
  3139                           ; 2 bytes @ 0x4
  3140                           
  3141     004C                     TMR0_SetInterruptHandler@InterruptHandler:	
  3142                           ; 2 bytes @ 0x4
  3143                           
  3144     004C                     TMR6_SetInterruptHandler@InterruptHandler:	
  3145                           ; 2 bytes @ 0x4
  3146                           
  3147     004C                     ___wmul@multiplier:	
  3148                           ; 2 bytes @ 0x4
  3149                           
  3150                           
  3151                           ; 2 bytes @ 0x4
  3152     004C                     	ds	2
  3153     004E                     ??_TMR0_Initialize:
  3154     004E                     ??_TMR6_Initialize:	
  3155                           ; 1 bytes @ 0x6
  3156                           
  3157     004E                     ??_EUSART_Initialize:	
  3158                           ; 1 bytes @ 0x6
  3159                           
  3160     004E                     ??_EUSART_SetRxInterruptHandler:	
  3161                           ; 1 bytes @ 0x6
  3162                           
  3163     004E                     ??_EUSART_SetTxInterruptHandler:	
  3164                           ; 1 bytes @ 0x6
  3165                           
  3166     004E                     ??_EUSART_SetFramingErrorHandler:	
  3167                           ; 1 bytes @ 0x6
  3168                           
  3169     004E                     ??_EUSART_SetOverrunErrorHandler:	
  3170                           ; 1 bytes @ 0x6
  3171                           
  3172     004E                     ??_EUSART_SetErrorHandler:	
  3173                           ; 1 bytes @ 0x6
  3174                           
  3175     004E                     ??_TMR0_SetInterruptHandler:	
  3176                           ; 1 bytes @ 0x6
  3177                           
  3178     004E                     ??_TMR6_SetInterruptHandler:	
  3179                           ; 1 bytes @ 0x6
  3180                           
  3181     004E                     ??_SYSTEM_Initialize:	
  3182                           ; 1 bytes @ 0x6
  3183                           
  3184     004E                     ??_EPWM1_LoadDutyValue:	
  3185                           ; 1 bytes @ 0x6
  3186                           
  3187     004E                     ??_ADC_GetConversion:	
  3188                           ; 1 bytes @ 0x6
  3189                           
  3190     004E                     ___wmul@multiplicand:	
  3191                           ; 1 bytes @ 0x6
  3192                           
  3193                           
  3194                           ; 2 bytes @ 0x6
  3195     004E                     	ds	1
  3196     004F                     ADC_GetConversion@channel:
  3197                           
  3198                           ; 1 bytes @ 0x7
  3199     004F                     	ds	1
  3200     0050                     ??___wmul:
  3201     0050                     ___wmul@product:	
  3202                           ; 1 bytes @ 0x8
  3203                           
  3204                           
  3205                           ; 2 bytes @ 0x8
  3206     0050                     	ds	2
  3207     0052                     ?___lwdiv:
  3208     0052                     ___lwdiv@divisor:	
  3209                           ; 2 bytes @ 0xA
  3210                           
  3211                           
  3212                           ; 2 bytes @ 0xA
  3213     0052                     	ds	2
  3214     0054                     ___lwdiv@dividend:
  3215                           
  3216                           ; 2 bytes @ 0xC
  3217     0054                     	ds	2
  3218     0056                     ??___lwdiv:
  3219                           
  3220                           ; 1 bytes @ 0xE
  3221     0056                     	ds	1
  3222     0057                     ___lwdiv@counter:
  3223                           
  3224                           ; 1 bytes @ 0xF
  3225     0057                     	ds	1
  3226     0058                     ___lwdiv@quotient:
  3227                           
  3228                           ; 2 bytes @ 0x10
  3229     0058                     	ds	2
  3230     005A                     ??_controlchoose:
  3231     005A                     ??_main:	
  3232                           ; 1 bytes @ 0x12
  3233                           
  3234                           
  3235                           	psect	maintext
  3236     03BA                     __pmaintext:	
  3237                           ; 1 bytes @ 0x12
  3238 ;;
  3239 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3240 ;;
  3241 ;; *************** function _main *****************
  3242 ;; Defined at:
  3243 ;;		line 321 in file "main.c"
  3244 ;; Parameters:    Size  Location     Type
  3245 ;;		None
  3246 ;; Auto vars:     Size  Location     Type
  3247 ;;		None
  3248 ;; Return value:  Size  Location     Type
  3249 ;;                  1    wreg      void 
  3250 ;; Registers used:
  3251 ;;		wreg, status,2, status,0, pclath, cstack
  3252 ;; Tracked objects:
  3253 ;;		On entry : B1F/0
  3254 ;;		On exit  : 0/0
  3255 ;;		Unchanged: 0/0
  3256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3257 ;;      Params:         0       0       0       0       0       0
  3258 ;;      Locals:         0       0       0       0       0       0
  3259 ;;      Temps:          0       0       0       0       0       0
  3260 ;;      Totals:         0       0       0       0       0       0
  3261 ;;Total ram usage:        0 bytes
  3262 ;; Hardware stack levels required when called: 9
  3263 ;; This function calls:
  3264 ;;		_ADC_GetConversion
  3265 ;;		_EUSART_SetRxInterruptHandler
  3266 ;;		_SYSTEM_Initialize
  3267 ;;		_TMR0_SetInterruptHandler
  3268 ;;		_TMR4_ReadTimer
  3269 ;;		_TMR4_StopTimer
  3270 ;;		_TMR6_SetInterruptHandler
  3271 ;;		_controlchoose
  3272 ;; This function is called by:
  3273 ;;		Startup code after reset
  3274 ;; This function uses a non-reentrant model
  3275 ;;
  3276                           
  3277     03BA                     _main:	
  3278                           ;psect for function _main
  3279                           
  3280     03BA                     l2917:	
  3281                           ;incstack = 0
  3282                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  3283                           
  3284                           
  3285                           ;main.c: 324:     SYSTEM_Initialize();
  3286     03BA  3184  24AD  3183   	fcall	_SYSTEM_Initialize
  3287                           
  3288                           ;main.c: 325:     TMR0_SetInterruptHandler(envia_Tx);
  3289     03BD  302B               	movlw	low _envia_Tx
  3290     03BE  0020               	movlb	0	; select bank0
  3291     03BF  00CC               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  3292     03C0  3003               	movlw	high _envia_Tx
  3293     03C1  00CD               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  3294     03C2  3187  2760  3183   	fcall	_TMR0_SetInterruptHandler
  3295                           
  3296                           ;main.c: 326:     EUSART_SetRxInterruptHandler(receive);
  3297     03C5  30D5               	movlw	low _receive
  3298     03C6  0020               	movlb	0	; select bank0
  3299     03C7  00CC               	movwf	EUSART_SetRxInterruptHandler@interruptHandler
  3300     03C8  3004               	movlw	high _receive
  3301     03C9  00CD               	movwf	EUSART_SetRxInterruptHandler@interruptHandler+1
  3302     03CA  3187  2707  3183   	fcall	_EUSART_SetRxInterruptHandler
  3303                           
  3304                           ;main.c: 327:     TMR6_SetInterruptHandler(fluxcontrol);
  3305     03CD  3092               	movlw	low _fluxcontrol
  3306     03CE  0020               	movlb	0	; select bank0
  3307     03CF  00CC               	movwf	TMR6_SetInterruptHandler@InterruptHandler
  3308     03D0  3002               	movlw	high _fluxcontrol
  3309     03D1  00CD               	movwf	TMR6_SetInterruptHandler@InterruptHandler+1
  3310     03D2  3187  275A  3183   	fcall	_TMR6_SetInterruptHandler
  3311     03D5                     l2919:
  3312                           
  3313                           ;main.c: 332:     (INTCONbits.GIE = 1);
  3314     03D5  178B               	bsf	11,7	;volatile
  3315     03D6                     l2921:
  3316                           
  3317                           ;main.c: 335:     (INTCONbits.PEIE = 1);
  3318     03D6  170B               	bsf	11,6	;volatile
  3319     03D7                     l765:	
  3320                           ;main.c: 343:     while (1)
  3321                           
  3322                           
  3323                           ;main.c: 344:     {;main.c: 346:         adc_temp = ADC_GetConversion(channel_AN8);
  3324     03D7  3008               	movlw	8
  3325     03D8  3185  2593  3183   	fcall	_ADC_GetConversion
  3326     03DB  0020               	movlb	0	; select bank0
  3327     03DC  084D               	movf	?_ADC_GetConversion+1,w
  3328     03DD  0021               	movlb	1	; select bank1
  3329     03DE  00C5               	movwf	(_adc_temp+1)^(0+128)
  3330     03DF  0020               	movlb	0	; select bank0
  3331     03E0  084C               	movf	?_ADC_GetConversion,w
  3332     03E1  0021               	movlb	1	; select bank1
  3333     03E2  00C4               	movwf	_adc_temp^(0+128)
  3334     03E3                     l2923:
  3335                           
  3336                           ;main.c: 347:         if((timecontrol = TMR4_ReadTimer()) >= 209){
  3337     03E3  3187  2754  3183   	fcall	_TMR4_ReadTimer
  3338     03E6  0020               	movlb	0	; select bank0
  3339     03E7  00BF               	movwf	_timecontrol
  3340     03E8  30D1               	movlw	209
  3341     03E9  023F               	subwf	_timecontrol,w
  3342     03EA  1C03               	skipc
  3343     03EB  2BED               	goto	u2291
  3344     03EC  2BEE               	goto	u2290
  3345     03ED                     u2291:
  3346     03ED  2BD7               	goto	l765
  3347     03EE                     u2290:
  3348     03EE                     l2925:
  3349                           
  3350                           ;main.c: 348:             TMR4_StopTimer();
  3351     03EE  3187  278F  3183   	fcall	_TMR4_StopTimer
  3352     03F1                     l2927:
  3353                           
  3354                           ;main.c: 349:             controlchoose();
  3355     03F1  3186  26A7  3183   	fcall	_controlchoose
  3356     03F4  2BD7               	goto	l765
  3357     03F5  3180  2853         	ljmp	start
  3358     03F7                     __end_of_main:
  3359                           
  3360                           	psect	text1
  3361     06A7                     __ptext1:	
  3362 ;; *************** function _controlchoose *****************
  3363 ;; Defined at:
  3364 ;;		line 80 in file "main.c"
  3365 ;; Parameters:    Size  Location     Type
  3366 ;;		None
  3367 ;; Auto vars:     Size  Location     Type
  3368 ;;		None
  3369 ;; Return value:  Size  Location     Type
  3370 ;;                  1    wreg      void 
  3371 ;; Registers used:
  3372 ;;		wreg, status,2, status,0, pclath, cstack
  3373 ;; Tracked objects:
  3374 ;;		On entry : 0/0
  3375 ;;		On exit  : 0/0
  3376 ;;		Unchanged: 0/0
  3377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3378 ;;      Params:         0       0       0       0       0       0
  3379 ;;      Locals:         0       0       0       0       0       0
  3380 ;;      Temps:          0       0       0       0       0       0
  3381 ;;      Totals:         0       0       0       0       0       0
  3382 ;;Total ram usage:        0 bytes
  3383 ;; Hardware stack levels used: 1
  3384 ;; Hardware stack levels required when called: 8
  3385 ;; This function calls:
  3386 ;;		_TMR4_LoadPeriodRegister
  3387 ;;		_TMR4_StartTimer
  3388 ;;		_pwmcontrol
  3389 ;; This function is called by:
  3390 ;;		_main
  3391 ;; This function uses a non-reentrant model
  3392 ;;
  3393                           
  3394     06A7                     _controlchoose:	
  3395                           ;psect for function _controlchoose
  3396                           
  3397     06A7                     l2911:	
  3398                           ;incstack = 0
  3399                           ; Regs used in _controlchoose: [wreg+status,2+status,0+pclath+cstack]
  3400                           
  3401                           
  3402                           ;main.c: 81:     if (controlchoice == 1){
  3403     06A7  0020               	movlb	0	; select bank0
  3404     06A8  0365               	decf	_controlchoice,w
  3405     06A9  1D03               	btfss	3,2
  3406     06AA  2EAC               	goto	u2281
  3407     06AB  2EAD               	goto	u2280
  3408     06AC                     u2281:
  3409     06AC  2EB0               	goto	l574
  3410     06AD                     u2280:
  3411     06AD                     l2913:
  3412                           
  3413                           ;main.c: 82:         pwmcontrol ();
  3414     06AD  3181  21F0  3186   	fcall	_pwmcontrol
  3415     06B0                     l574:	
  3416                           ;main.c: 83:     }
  3417                           
  3418                           
  3419                           ;main.c: 87:     TMR4_LoadPeriodRegister(0);
  3420     06B0  3000               	movlw	0
  3421     06B1  3187  274E  3186   	fcall	_TMR4_LoadPeriodRegister
  3422     06B4                     l2915:
  3423                           
  3424                           ;main.c: 88:     TMR4_StartTimer();
  3425     06B4  3187  278C  3186   	fcall	_TMR4_StartTimer
  3426     06B7                     l575:
  3427     06B7  0008               	return
  3428     06B8                     __end_of_controlchoose:
  3429                           
  3430                           	psect	text2
  3431     01F0                     __ptext2:	
  3432 ;; *************** function _pwmcontrol *****************
  3433 ;; Defined at:
  3434 ;;		line 62 in file "main.c"
  3435 ;; Parameters:    Size  Location     Type
  3436 ;;		None
  3437 ;; Auto vars:     Size  Location     Type
  3438 ;;		None
  3439 ;; Return value:  Size  Location     Type
  3440 ;;                  1    wreg      void 
  3441 ;; Registers used:
  3442 ;;		wreg, status,2, status,0, pclath, cstack
  3443 ;; Tracked objects:
  3444 ;;		On entry : 0/0
  3445 ;;		On exit  : 0/0
  3446 ;;		Unchanged: 0/0
  3447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3448 ;;      Params:         0       0       0       0       0       0
  3449 ;;      Locals:         0       0       2       0       0       0
  3450 ;;      Temps:          0       0       2       0       0       0
  3451 ;;      Totals:         0       0       4       0       0       0
  3452 ;;Total ram usage:        4 bytes
  3453 ;; Hardware stack levels used: 1
  3454 ;; Hardware stack levels required when called: 7
  3455 ;; This function calls:
  3456 ;;		_EPWM1_LoadDutyValue
  3457 ;;		___lwdiv
  3458 ;;		___wmul
  3459 ;; This function is called by:
  3460 ;;		_controlchoose
  3461 ;; This function uses a non-reentrant model
  3462 ;;
  3463                           
  3464     01F0                     _pwmcontrol:	
  3465                           ;psect for function _pwmcontrol
  3466                           
  3467     01F0                     l2891:	
  3468                           ;incstack = 0
  3469                           ; Regs used in _pwmcontrol: [wreg+status,2+status,0+pclath+cstack]
  3470                           
  3471                           
  3472                           ;main.c: 63:     error = ballset-balldist;
  3473     01F0  0020               	movlb	0	; select bank0
  3474     01F1  0832               	movf	_balldist,w
  3475     01F2  0230               	subwf	_ballset,w
  3476     01F3  00B4               	movwf	_error
  3477     01F4  0833               	movf	_balldist+1,w
  3478     01F5  3B31               	subwfb	_ballset+1,w
  3479     01F6  00B5               	movwf	_error+1
  3480     01F7                     l2893:
  3481                           
  3482                           ;main.c: 64:     if(error > 150 || error < 150){
  3483     01F7  0835               	movf	_error+1,w
  3484     01F8  3A80               	xorlw	128
  3485     01F9  0021               	movlb	1	; select bank1
  3486     01FA  00CE               	movwf	??_pwmcontrol^(0+128)
  3487     01FB  3080               	movlw	128
  3488     01FC  024E               	subwf	??_pwmcontrol^(0+128),w
  3489     01FD  1D03               	skipz
  3490     01FE  2A02               	goto	u2245
  3491     01FF  3097               	movlw	151
  3492     0200  0020               	movlb	0	; select bank0
  3493     0201  0234               	subwf	_error,w
  3494     0202                     u2245:
  3495     0202  1803               	skipnc
  3496     0203  2A05               	goto	u2241
  3497     0204  2A06               	goto	u2240
  3498     0205                     u2241:
  3499     0205  2A16               	goto	l2897
  3500     0206                     u2240:
  3501     0206                     l2895:
  3502     0206  0020               	movlb	0	; select bank0
  3503     0207  0835               	movf	_error+1,w
  3504     0208  3A80               	xorlw	128
  3505     0209  0021               	movlb	1	; select bank1
  3506     020A  00CE               	movwf	??_pwmcontrol^(0+128)
  3507     020B  3080               	movlw	128
  3508     020C  024E               	subwf	??_pwmcontrol^(0+128),w
  3509     020D  1D03               	skipz
  3510     020E  2A12               	goto	u2255
  3511     020F  3096               	movlw	150
  3512     0210  0020               	movlb	0	; select bank0
  3513     0211  0234               	subwf	_error,w
  3514     0212                     u2255:
  3515     0212  1803               	skipnc
  3516     0213  2A15               	goto	u2251
  3517     0214  2A16               	goto	u2250
  3518     0215                     u2251:
  3519     0215  2A91               	goto	l565
  3520     0216                     u2250:
  3521     0216                     l2897:
  3522     0216  0020               	movlb	0	; select bank0
  3523     0217  083F               	movf	_timecontrol,w
  3524     0218  0021               	movlb	1	; select bank1
  3525     0219  00CE               	movwf	??_pwmcontrol^(0+128)
  3526     021A  01CF               	clrf	(??_pwmcontrol^(0+128)+1)
  3527     021B  084E               	movf	??_pwmcontrol^(0+128),w
  3528     021C  0020               	movlb	0	; select bank0
  3529     021D  00CC               	movwf	___wmul@multiplier
  3530     021E  0021               	movlb	1	; select bank1
  3531     021F  084F               	movf	(??_pwmcontrol+1)^(0+128),w
  3532     0220  0020               	movlb	0	; select bank0
  3533     0221  00CD               	movwf	___wmul@multiplier+1
  3534     0222  0835               	movf	_error+1,w
  3535     0223  00CF               	movwf	___wmul@multiplicand+1
  3536     0224  0834               	movf	_error,w
  3537     0225  00CE               	movwf	___wmul@multiplicand
  3538     0226  3185  25B4  3181   	fcall	___wmul
  3539     0229  0020               	movlb	0	; select bank0
  3540     022A  084D               	movf	?___wmul+1,w
  3541     022B  0021               	movlb	1	; select bank1
  3542     022C  00D1               	movwf	(_pwmcontrol$1940+1)^(0+128)
  3543     022D  0020               	movlb	0	; select bank0
  3544     022E  084C               	movf	?___wmul,w
  3545     022F  0021               	movlb	1	; select bank1
  3546     0230  00D0               	movwf	_pwmcontrol$1940^(0+128)
  3547     0231  30E8               	movlw	232
  3548     0232  0020               	movlb	0	; select bank0
  3549     0233  00D2               	movwf	___lwdiv@divisor
  3550     0234  3003               	movlw	3
  3551     0235  00D3               	movwf	___lwdiv@divisor+1
  3552     0236  0021               	movlb	1	; select bank1
  3553     0237  0851               	movf	(_pwmcontrol$1940+1)^(0+128),w
  3554     0238  0020               	movlb	0	; select bank0
  3555     0239  00CD               	movwf	___wmul@multiplier+1
  3556     023A  0021               	movlb	1	; select bank1
  3557     023B  0850               	movf	_pwmcontrol$1940^(0+128),w
  3558     023C  0020               	movlb	0	; select bank0
  3559     023D  00CC               	movwf	___wmul@multiplier
  3560     023E  3013               	movlw	19
  3561     023F  00CE               	movwf	___wmul@multiplicand
  3562     0240  3000               	movlw	0
  3563     0241  00CF               	movwf	___wmul@multiplicand+1
  3564     0242  3185  25B4  3181   	fcall	___wmul
  3565     0245  0020               	movlb	0	; select bank0
  3566     0246  084D               	movf	?___wmul+1,w
  3567     0247  00D5               	movwf	___lwdiv@dividend+1
  3568     0248  084C               	movf	?___wmul,w
  3569     0249  00D4               	movwf	___lwdiv@dividend
  3570     024A  3183  23F7  3181   	fcall	___lwdiv
  3571     024D  0020               	movlb	0	; select bank0
  3572     024E  0852               	movf	?___lwdiv,w
  3573     024F  07AA               	addwf	_outputsum,f
  3574     0250  0853               	movf	?___lwdiv+1,w
  3575     0251  3DAB               	addwfc	_outputsum+1,f
  3576     0252                     l2899:
  3577                           
  3578                           ;main.c: 66:         if (outputsum > 10230) outputsum = 10230;
  3579     0252  3027               	movlw	39
  3580     0253  022B               	subwf	_outputsum+1,w
  3581     0254  30F7               	movlw	247
  3582     0255  1903               	skipnz
  3583     0256  022A               	subwf	_outputsum,w
  3584     0257  1C03               	skipc
  3585     0258  2A5A               	goto	u2261
  3586     0259  2A5B               	goto	u2260
  3587     025A                     u2261:
  3588     025A  2A5F               	goto	l2903
  3589     025B                     u2260:
  3590     025B                     l2901:
  3591     025B  30F6               	movlw	246
  3592     025C  00AA               	movwf	_outputsum
  3593     025D  3027               	movlw	39
  3594     025E  00AB               	movwf	_outputsum+1
  3595     025F                     l2903:
  3596                           
  3597                           ;main.c: 67:         output = ((kpp*error + outputsum)/10);
  3598     025F  300A               	movlw	10
  3599     0260  00D2               	movwf	___lwdiv@divisor
  3600     0261  3000               	movlw	0
  3601     0262  00D3               	movwf	___lwdiv@divisor+1
  3602     0263  0835               	movf	_error+1,w
  3603     0264  00CD               	movwf	___wmul@multiplier+1
  3604     0265  0834               	movf	_error,w
  3605     0266  00CC               	movwf	___wmul@multiplier
  3606     0267  300C               	movlw	12
  3607     0268  00CE               	movwf	___wmul@multiplicand
  3608     0269  3000               	movlw	0
  3609     026A  00CF               	movwf	___wmul@multiplicand+1
  3610     026B  3185  25B4  3181   	fcall	___wmul
  3611     026E  0020               	movlb	0	; select bank0
  3612     026F  082A               	movf	_outputsum,w
  3613     0270  074C               	addwf	?___wmul,w
  3614     0271  00D4               	movwf	___lwdiv@dividend
  3615     0272  082B               	movf	_outputsum+1,w
  3616     0273  3D4D               	addwfc	?___wmul+1,w
  3617     0274  00D5               	movwf	___lwdiv@dividend+1
  3618     0275  3183  23F7  3181   	fcall	___lwdiv
  3619     0278  0020               	movlb	0	; select bank0
  3620     0279  0853               	movf	?___lwdiv+1,w
  3621     027A  00A9               	movwf	_output+1
  3622     027B  0852               	movf	?___lwdiv,w
  3623     027C  00A8               	movwf	_output
  3624     027D                     l2905:
  3625                           
  3626                           ;main.c: 68:         if(output > 1023) output = 1023;
  3627     027D  3004               	movlw	4
  3628     027E  0229               	subwf	_output+1,w
  3629     027F  3000               	movlw	0
  3630     0280  1903               	skipnz
  3631     0281  0228               	subwf	_output,w
  3632     0282  1C03               	skipc
  3633     0283  2A85               	goto	u2271
  3634     0284  2A86               	goto	u2270
  3635     0285                     u2271:
  3636     0285  2A8A               	goto	l2909
  3637     0286                     u2270:
  3638     0286                     l2907:
  3639     0286  30FF               	movlw	255
  3640     0287  00A8               	movwf	_output
  3641     0288  3003               	movlw	3
  3642     0289  00A9               	movwf	_output+1
  3643     028A                     l2909:
  3644                           
  3645                           ;main.c: 69:         EPWM1_LoadDutyValue(output);
  3646     028A  0829               	movf	_output+1,w
  3647     028B  00CD               	movwf	EPWM1_LoadDutyValue@dutyValue+1
  3648     028C  0828               	movf	_output,w
  3649     028D  00CC               	movwf	EPWM1_LoadDutyValue@dutyValue
  3650     028E  3185  25F3  3181   	fcall	_EPWM1_LoadDutyValue
  3651     0291                     l565:
  3652     0291  0008               	return
  3653     0292                     __end_of_pwmcontrol:
  3654                           
  3655                           	psect	text3
  3656     05B4                     __ptext3:	
  3657 ;; *************** function ___wmul *****************
  3658 ;; Defined at:
  3659 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul16.c"
  3660 ;; Parameters:    Size  Location     Type
  3661 ;;  multiplier      2    4[BANK0 ] unsigned int 
  3662 ;;  multiplicand    2    6[BANK0 ] unsigned int 
  3663 ;; Auto vars:     Size  Location     Type
  3664 ;;  product         2    8[BANK0 ] unsigned int 
  3665 ;; Return value:  Size  Location     Type
  3666 ;;                  2    4[BANK0 ] unsigned int 
  3667 ;; Registers used:
  3668 ;;		wreg, status,2, status,0
  3669 ;; Tracked objects:
  3670 ;;		On entry : 0/0
  3671 ;;		On exit  : 0/0
  3672 ;;		Unchanged: 0/0
  3673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3674 ;;      Params:         0       4       0       0       0       0
  3675 ;;      Locals:         0       2       0       0       0       0
  3676 ;;      Temps:          0       0       0       0       0       0
  3677 ;;      Totals:         0       6       0       0       0       0
  3678 ;;Total ram usage:        6 bytes
  3679 ;; Hardware stack levels used: 1
  3680 ;; Hardware stack levels required when called: 6
  3681 ;; This function calls:
  3682 ;;		Nothing
  3683 ;; This function is called by:
  3684 ;;		_pwmcontrol
  3685 ;; This function uses a non-reentrant model
  3686 ;;
  3687                           
  3688     05B4                     ___wmul:	
  3689                           ;psect for function ___wmul
  3690                           
  3691     05B4                     l2851:	
  3692                           ;incstack = 0
  3693                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3694                           
  3695     05B4  0020               	movlb	0	; select bank0
  3696     05B5  01D0               	clrf	___wmul@product
  3697     05B6  01D1               	clrf	___wmul@product+1
  3698     05B7                     l2853:
  3699     05B7  1C4C               	btfss	___wmul@multiplier,0
  3700     05B8  2DBA               	goto	u2131
  3701     05B9  2DBB               	goto	u2130
  3702     05BA                     u2131:
  3703     05BA  2DBF               	goto	l965
  3704     05BB                     u2130:
  3705     05BB                     l2855:
  3706     05BB  084E               	movf	___wmul@multiplicand,w
  3707     05BC  07D0               	addwf	___wmul@product,f
  3708     05BD  084F               	movf	___wmul@multiplicand+1,w
  3709     05BE  3DD1               	addwfc	___wmul@product+1,f
  3710     05BF                     l965:
  3711     05BF  3001               	movlw	1
  3712     05C0                     u2145:
  3713     05C0  35CE               	lslf	___wmul@multiplicand,f
  3714     05C1  0DCF               	rlf	___wmul@multiplicand+1,f
  3715     05C2  0B89               	decfsz	9,f
  3716     05C3  2DC0               	goto	u2145
  3717     05C4                     l2857:
  3718     05C4  3001               	movlw	1
  3719     05C5                     u2155:
  3720     05C5  36CD               	lsrf	___wmul@multiplier+1,f
  3721     05C6  0CCC               	rrf	___wmul@multiplier,f
  3722     05C7  0B89               	decfsz	9,f
  3723     05C8  2DC5               	goto	u2155
  3724     05C9                     l2859:
  3725     05C9  084C               	movf	___wmul@multiplier,w
  3726     05CA  044D               	iorwf	___wmul@multiplier+1,w
  3727     05CB  1D03               	btfss	3,2
  3728     05CC  2DCE               	goto	u2161
  3729     05CD  2DCF               	goto	u2160
  3730     05CE                     u2161:
  3731     05CE  2DB7               	goto	l2853
  3732     05CF                     u2160:
  3733     05CF                     l2861:
  3734     05CF  0851               	movf	___wmul@product+1,w
  3735     05D0  00CD               	movwf	?___wmul+1
  3736     05D1  0850               	movf	___wmul@product,w
  3737     05D2  00CC               	movwf	?___wmul
  3738     05D3                     l967:
  3739     05D3  0008               	return
  3740     05D4                     __end_of___wmul:
  3741                           
  3742                           	psect	text4
  3743     03F7                     __ptext4:	
  3744 ;; *************** function ___lwdiv *****************
  3745 ;; Defined at:
  3746 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lwdiv.c"
  3747 ;; Parameters:    Size  Location     Type
  3748 ;;  divisor         2   10[BANK0 ] unsigned int 
  3749 ;;  dividend        2   12[BANK0 ] unsigned int 
  3750 ;; Auto vars:     Size  Location     Type
  3751 ;;  quotient        2   16[BANK0 ] unsigned int 
  3752 ;;  counter         1   15[BANK0 ] unsigned char 
  3753 ;; Return value:  Size  Location     Type
  3754 ;;                  2   10[BANK0 ] unsigned int 
  3755 ;; Registers used:
  3756 ;;		wreg, status,2, status,0
  3757 ;; Tracked objects:
  3758 ;;		On entry : 0/0
  3759 ;;		On exit  : 0/0
  3760 ;;		Unchanged: 0/0
  3761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3762 ;;      Params:         0       4       0       0       0       0
  3763 ;;      Locals:         0       3       0       0       0       0
  3764 ;;      Temps:          0       1       0       0       0       0
  3765 ;;      Totals:         0       8       0       0       0       0
  3766 ;;Total ram usage:        8 bytes
  3767 ;; Hardware stack levels used: 1
  3768 ;; Hardware stack levels required when called: 6
  3769 ;; This function calls:
  3770 ;;		Nothing
  3771 ;; This function is called by:
  3772 ;;		_pwmcontrol
  3773 ;; This function uses a non-reentrant model
  3774 ;;
  3775                           
  3776     03F7                     ___lwdiv:	
  3777                           ;psect for function ___lwdiv
  3778                           
  3779     03F7                     l2865:	
  3780                           ;incstack = 0
  3781                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3782                           
  3783     03F7  0020               	movlb	0	; select bank0
  3784     03F8  01D8               	clrf	___lwdiv@quotient
  3785     03F9  01D9               	clrf	___lwdiv@quotient+1
  3786     03FA                     l2867:
  3787     03FA  0852               	movf	___lwdiv@divisor,w
  3788     03FB  0453               	iorwf	___lwdiv@divisor+1,w
  3789     03FC  1903               	btfsc	3,2
  3790     03FD  2BFF               	goto	u2171
  3791     03FE  2C00               	goto	u2170
  3792     03FF                     u2171:
  3793     03FF  2C2F               	goto	l2887
  3794     0400                     u2170:
  3795     0400                     l2869:
  3796     0400  01D7               	clrf	___lwdiv@counter
  3797     0401  0AD7               	incf	___lwdiv@counter,f
  3798     0402  2C0C               	goto	l2875
  3799     0403                     l2871:
  3800     0403  3001               	movlw	1
  3801     0404                     u2185:
  3802     0404  35D2               	lslf	___lwdiv@divisor,f
  3803     0405  0DD3               	rlf	___lwdiv@divisor+1,f
  3804     0406  0B89               	decfsz	9,f
  3805     0407  2C04               	goto	u2185
  3806     0408                     l2873:
  3807     0408  3001               	movlw	1
  3808     0409  00D6               	movwf	??___lwdiv
  3809     040A  0856               	movf	??___lwdiv,w
  3810     040B  07D7               	addwf	___lwdiv@counter,f
  3811     040C                     l2875:
  3812     040C  1FD3               	btfss	___lwdiv@divisor+1,7
  3813     040D  2C0F               	goto	u2191
  3814     040E  2C10               	goto	u2190
  3815     040F                     u2191:
  3816     040F  2C03               	goto	l2871
  3817     0410                     u2190:
  3818     0410                     l2877:
  3819     0410  3001               	movlw	1
  3820     0411                     u2205:
  3821     0411  35D8               	lslf	___lwdiv@quotient,f
  3822     0412  0DD9               	rlf	___lwdiv@quotient+1,f
  3823     0413  0B89               	decfsz	9,f
  3824     0414  2C11               	goto	u2205
  3825     0415  0853               	movf	___lwdiv@divisor+1,w
  3826     0416  0255               	subwf	___lwdiv@dividend+1,w
  3827     0417  1D03               	skipz
  3828     0418  2C1B               	goto	u2215
  3829     0419  0852               	movf	___lwdiv@divisor,w
  3830     041A  0254               	subwf	___lwdiv@dividend,w
  3831     041B                     u2215:
  3832     041B  1C03               	skipc
  3833     041C  2C1E               	goto	u2211
  3834     041D  2C1F               	goto	u2210
  3835     041E                     u2211:
  3836     041E  2C24               	goto	l2883
  3837     041F                     u2210:
  3838     041F                     l2879:
  3839     041F  0852               	movf	___lwdiv@divisor,w
  3840     0420  02D4               	subwf	___lwdiv@dividend,f
  3841     0421  0853               	movf	___lwdiv@divisor+1,w
  3842     0422  3BD5               	subwfb	___lwdiv@dividend+1,f
  3843     0423                     l2881:
  3844     0423  1458               	bsf	___lwdiv@quotient,0
  3845     0424                     l2883:
  3846     0424  3001               	movlw	1
  3847     0425                     u2225:
  3848     0425  36D3               	lsrf	___lwdiv@divisor+1,f
  3849     0426  0CD2               	rrf	___lwdiv@divisor,f
  3850     0427  0B89               	decfsz	9,f
  3851     0428  2C25               	goto	u2225
  3852     0429                     l2885:
  3853     0429  3001               	movlw	1
  3854     042A  02D7               	subwf	___lwdiv@counter,f
  3855     042B  1D03               	btfss	3,2
  3856     042C  2C2E               	goto	u2231
  3857     042D  2C2F               	goto	u2230
  3858     042E                     u2231:
  3859     042E  2C10               	goto	l2877
  3860     042F                     u2230:
  3861     042F                     l2887:
  3862     042F  0859               	movf	___lwdiv@quotient+1,w
  3863     0430  00D3               	movwf	?___lwdiv+1
  3864     0431  0858               	movf	___lwdiv@quotient,w
  3865     0432  00D2               	movwf	?___lwdiv
  3866     0433                     l1245:
  3867     0433  0008               	return
  3868     0434                     __end_of___lwdiv:
  3869                           
  3870                           	psect	text5
  3871     05F3                     __ptext5:	
  3872 ;; *************** function _EPWM1_LoadDutyValue *****************
  3873 ;; Defined at:
  3874 ;;		line 90 in file "mcc_generated_files/epwm1.c"
  3875 ;; Parameters:    Size  Location     Type
  3876 ;;  dutyValue       2    4[BANK0 ] unsigned short 
  3877 ;; Auto vars:     Size  Location     Type
  3878 ;;		None
  3879 ;; Return value:  Size  Location     Type
  3880 ;;                  1    wreg      void 
  3881 ;; Registers used:
  3882 ;;		wreg, status,2, status,0
  3883 ;; Tracked objects:
  3884 ;;		On entry : 0/0
  3885 ;;		On exit  : 0/0
  3886 ;;		Unchanged: 0/0
  3887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3888 ;;      Params:         0       2       0       0       0       0
  3889 ;;      Locals:         0       0       0       0       0       0
  3890 ;;      Temps:          0       2       0       0       0       0
  3891 ;;      Totals:         0       4       0       0       0       0
  3892 ;;Total ram usage:        4 bytes
  3893 ;; Hardware stack levels used: 1
  3894 ;; Hardware stack levels required when called: 6
  3895 ;; This function calls:
  3896 ;;		Nothing
  3897 ;; This function is called by:
  3898 ;;		_pwmcontrol
  3899 ;; This function uses a non-reentrant model
  3900 ;;
  3901                           
  3902     05F3                     _EPWM1_LoadDutyValue:	
  3903                           ;psect for function _EPWM1_LoadDutyValue
  3904                           
  3905     05F3                     l2849:	
  3906                           ;incstack = 0
  3907                           ; Regs used in _EPWM1_LoadDutyValue: [wreg+status,2+status,0]
  3908                           
  3909                           
  3910                           ;mcc_generated_files/epwm1.c: 90: void EPWM1_LoadDutyValue(uint16_t dutyValue);mcc_gener
      +                          ated_files/epwm1.c: 91: {;mcc_generated_files/epwm1.c: 93:     CCPR1L = ((dutyValue & 0x
      +                          03FC)>>2);
  3911     05F3  0020               	movlb	0	; select bank0
  3912     05F4  084D               	movf	EPWM1_LoadDutyValue@dutyValue+1,w
  3913     05F5  00CF               	movwf	??_EPWM1_LoadDutyValue+1
  3914     05F6  084C               	movf	EPWM1_LoadDutyValue@dutyValue,w
  3915     05F7  00CE               	movwf	??_EPWM1_LoadDutyValue
  3916     05F8  36CF               	lsrf	??_EPWM1_LoadDutyValue+1,f
  3917     05F9  0CCE               	rrf	??_EPWM1_LoadDutyValue,f
  3918     05FA  36CF               	lsrf	??_EPWM1_LoadDutyValue+1,f
  3919     05FB  0CCE               	rrf	??_EPWM1_LoadDutyValue,f
  3920     05FC  084E               	movf	??_EPWM1_LoadDutyValue,w
  3921     05FD  0025               	movlb	5	; select bank5
  3922     05FE  0091               	movwf	17	;volatile
  3923                           
  3924                           ;mcc_generated_files/epwm1.c: 96:     CCP1CON = ((uint8_t)(CCP1CON & 0xCF) | ((dutyValue
      +                           & 0x0003)<<4));
  3925     05FF  0020               	movlb	0	; select bank0
  3926     0600  084C               	movf	EPWM1_LoadDutyValue@dutyValue,w
  3927     0601  3903               	andlw	3
  3928     0602  00CE               	movwf	??_EPWM1_LoadDutyValue
  3929     0603  3004               	movlw	4
  3930     0604                     u2125:
  3931     0604  35CE               	lslf	??_EPWM1_LoadDutyValue,f
  3932     0605  0B89               	decfsz	9,f
  3933     0606  2E04               	goto	u2125
  3934     0607  0025               	movlb	5	; select bank5
  3935     0608  0813               	movf	19,w	;volatile
  3936     0609  39CF               	andlw	207
  3937     060A  0020               	movlb	0	; select bank0
  3938     060B  044E               	iorwf	??_EPWM1_LoadDutyValue,w
  3939     060C  0025               	movlb	5	; select bank5
  3940     060D  0093               	movwf	19	;volatile
  3941     060E                     l157:
  3942     060E  0008               	return
  3943     060F                     __end_of_EPWM1_LoadDutyValue:
  3944                           
  3945                           	psect	text6
  3946     078C                     __ptext6:	
  3947 ;; *************** function _TMR4_StartTimer *****************
  3948 ;; Defined at:
  3949 ;;		line 79 in file "mcc_generated_files/tmr4.c"
  3950 ;; Parameters:    Size  Location     Type
  3951 ;;		None
  3952 ;; Auto vars:     Size  Location     Type
  3953 ;;		None
  3954 ;; Return value:  Size  Location     Type
  3955 ;;                  1    wreg      void 
  3956 ;; Registers used:
  3957 ;;		None
  3958 ;; Tracked objects:
  3959 ;;		On entry : 0/0
  3960 ;;		On exit  : 0/0
  3961 ;;		Unchanged: 0/0
  3962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3963 ;;      Params:         0       0       0       0       0       0
  3964 ;;      Locals:         0       0       0       0       0       0
  3965 ;;      Temps:          0       0       0       0       0       0
  3966 ;;      Totals:         0       0       0       0       0       0
  3967 ;;Total ram usage:        0 bytes
  3968 ;; Hardware stack levels used: 1
  3969 ;; Hardware stack levels required when called: 6
  3970 ;; This function calls:
  3971 ;;		Nothing
  3972 ;; This function is called by:
  3973 ;;		_controlchoose
  3974 ;; This function uses a non-reentrant model
  3975 ;;
  3976                           
  3977     078C                     _TMR4_StartTimer:	
  3978                           ;psect for function _TMR4_StartTimer
  3979                           
  3980     078C                     l2393:	
  3981                           ;incstack = 0
  3982                           ; Regs used in _TMR4_StartTimer: []
  3983                           
  3984                           
  3985                           ;mcc_generated_files/tmr4.c: 82:     T4CONbits.TMR4ON = 1;
  3986     078C  0028               	movlb	8	; select bank8
  3987     078D  1517               	bsf	23,2	;volatile
  3988     078E                     l121:
  3989     078E  0008               	return
  3990     078F                     __end_of_TMR4_StartTimer:
  3991                           
  3992                           	psect	text7
  3993     074E                     __ptext7:	
  3994 ;; *************** function _TMR4_LoadPeriodRegister *****************
  3995 ;; Defined at:
  3996 ;;		line 106 in file "mcc_generated_files/tmr4.c"
  3997 ;; Parameters:    Size  Location     Type
  3998 ;;  periodVal       1    wreg     unsigned char 
  3999 ;; Auto vars:     Size  Location     Type
  4000 ;;  periodVal       1    4[BANK0 ] unsigned char 
  4001 ;; Return value:  Size  Location     Type
  4002 ;;                  1    wreg      void 
  4003 ;; Registers used:
  4004 ;;		wreg
  4005 ;; Tracked objects:
  4006 ;;		On entry : 0/0
  4007 ;;		On exit  : 0/0
  4008 ;;		Unchanged: 0/0
  4009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4010 ;;      Params:         0       0       0       0       0       0
  4011 ;;      Locals:         0       1       0       0       0       0
  4012 ;;      Temps:          0       0       0       0       0       0
  4013 ;;      Totals:         0       1       0       0       0       0
  4014 ;;Total ram usage:        1 bytes
  4015 ;; Hardware stack levels used: 1
  4016 ;; Hardware stack levels required when called: 6
  4017 ;; This function calls:
  4018 ;;		Nothing
  4019 ;; This function is called by:
  4020 ;;		_controlchoose
  4021 ;; This function uses a non-reentrant model
  4022 ;;
  4023                           
  4024     074E                     _TMR4_LoadPeriodRegister:	
  4025                           ;psect for function _TMR4_LoadPeriodRegister
  4026                           
  4027                           
  4028                           ;incstack = 0
  4029                           ; Regs used in _TMR4_LoadPeriodRegister: [wreg]
  4030                           ;TMR4_LoadPeriodRegister@periodVal stored from wreg
  4031     074E  0020               	movlb	0	; select bank0
  4032     074F  00CC               	movwf	TMR4_LoadPeriodRegister@periodVal
  4033     0750                     l2395:
  4034                           
  4035                           ;mcc_generated_files/tmr4.c: 106: void TMR4_LoadPeriodRegister(uint8_t periodVal);mcc_ge
      +                          nerated_files/tmr4.c: 107: {;mcc_generated_files/tmr4.c: 108:    PR4 = periodVal;
  4036     0750  084C               	movf	TMR4_LoadPeriodRegister@periodVal,w
  4037     0751  0028               	movlb	8	; select bank8
  4038     0752  0096               	movwf	22	;volatile
  4039     0753                     l133:
  4040     0753  0008               	return
  4041     0754                     __end_of_TMR4_LoadPeriodRegister:
  4042                           
  4043                           	psect	text8
  4044     078F                     __ptext8:	
  4045 ;; *************** function _TMR4_StopTimer *****************
  4046 ;; Defined at:
  4047 ;;		line 85 in file "mcc_generated_files/tmr4.c"
  4048 ;; Parameters:    Size  Location     Type
  4049 ;;		None
  4050 ;; Auto vars:     Size  Location     Type
  4051 ;;		None
  4052 ;; Return value:  Size  Location     Type
  4053 ;;                  1    wreg      void 
  4054 ;; Registers used:
  4055 ;;		None
  4056 ;; Tracked objects:
  4057 ;;		On entry : 0/0
  4058 ;;		On exit  : 0/0
  4059 ;;		Unchanged: 0/0
  4060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4061 ;;      Params:         0       0       0       0       0       0
  4062 ;;      Locals:         0       0       0       0       0       0
  4063 ;;      Temps:          0       0       0       0       0       0
  4064 ;;      Totals:         0       0       0       0       0       0
  4065 ;;Total ram usage:        0 bytes
  4066 ;; Hardware stack levels used: 1
  4067 ;; Hardware stack levels required when called: 6
  4068 ;; This function calls:
  4069 ;;		Nothing
  4070 ;; This function is called by:
  4071 ;;		_main
  4072 ;; This function uses a non-reentrant model
  4073 ;;
  4074                           
  4075     078F                     _TMR4_StopTimer:	
  4076                           ;psect for function _TMR4_StopTimer
  4077                           
  4078     078F                     l2491:	
  4079                           ;incstack = 0
  4080                           ; Regs used in _TMR4_StopTimer: []
  4081                           
  4082                           
  4083                           ;mcc_generated_files/tmr4.c: 88:     T4CONbits.TMR4ON = 0;
  4084     078F  0028               	movlb	8	; select bank8
  4085     0790  1117               	bcf	23,2	;volatile
  4086     0791                     l124:
  4087     0791  0008               	return
  4088     0792                     __end_of_TMR4_StopTimer:
  4089                           
  4090                           	psect	text9
  4091     0754                     __ptext9:	
  4092 ;; *************** function _TMR4_ReadTimer *****************
  4093 ;; Defined at:
  4094 ;;		line 91 in file "mcc_generated_files/tmr4.c"
  4095 ;; Parameters:    Size  Location     Type
  4096 ;;		None
  4097 ;; Auto vars:     Size  Location     Type
  4098 ;;  readVal         1    4[BANK0 ] unsigned char 
  4099 ;; Return value:  Size  Location     Type
  4100 ;;                  1    wreg      unsigned char 
  4101 ;; Registers used:
  4102 ;;		wreg
  4103 ;; Tracked objects:
  4104 ;;		On entry : 0/0
  4105 ;;		On exit  : 0/0
  4106 ;;		Unchanged: 0/0
  4107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4108 ;;      Params:         0       0       0       0       0       0
  4109 ;;      Locals:         0       1       0       0       0       0
  4110 ;;      Temps:          0       0       0       0       0       0
  4111 ;;      Totals:         0       1       0       0       0       0
  4112 ;;Total ram usage:        1 bytes
  4113 ;; Hardware stack levels used: 1
  4114 ;; Hardware stack levels required when called: 6
  4115 ;; This function calls:
  4116 ;;		Nothing
  4117 ;; This function is called by:
  4118 ;;		_main
  4119 ;; This function uses a non-reentrant model
  4120 ;;
  4121                           
  4122     0754                     _TMR4_ReadTimer:	
  4123                           ;psect for function _TMR4_ReadTimer
  4124                           
  4125     0754                     l2493:	
  4126                           ;incstack = 0
  4127                           ; Regs used in _TMR4_ReadTimer: [wreg]
  4128                           
  4129                           
  4130                           ;mcc_generated_files/tmr4.c: 93:     uint8_t readVal;;mcc_generated_files/tmr4.c: 95:   
      +                            readVal = TMR4;
  4131     0754  0028               	movlb	8	; select bank8
  4132     0755  0815               	movf	21,w	;volatile
  4133     0756  0020               	movlb	0	; select bank0
  4134     0757  00CC               	movwf	TMR4_ReadTimer@readVal
  4135                           
  4136                           ;mcc_generated_files/tmr4.c: 97:     return readVal;
  4137     0758  084C               	movf	TMR4_ReadTimer@readVal,w
  4138     0759                     l127:
  4139     0759  0008               	return
  4140     075A                     __end_of_TMR4_ReadTimer:
  4141                           
  4142                           	psect	text10
  4143     04AD                     __ptext10:	
  4144 ;; *************** function _SYSTEM_Initialize *****************
  4145 ;; Defined at:
  4146 ;;		line 50 in file "mcc_generated_files/mcc.c"
  4147 ;; Parameters:    Size  Location     Type
  4148 ;;		None
  4149 ;; Auto vars:     Size  Location     Type
  4150 ;;		None
  4151 ;; Return value:  Size  Location     Type
  4152 ;;                  1    wreg      void 
  4153 ;; Registers used:
  4154 ;;		wreg, status,2, status,0, pclath, cstack
  4155 ;; Tracked objects:
  4156 ;;		On entry : 0/0
  4157 ;;		On exit  : 0/0
  4158 ;;		Unchanged: 0/0
  4159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4160 ;;      Params:         0       0       0       0       0       0
  4161 ;;      Locals:         0       0       0       0       0       0
  4162 ;;      Temps:          0       0       0       0       0       0
  4163 ;;      Totals:         0       0       0       0       0       0
  4164 ;;Total ram usage:        0 bytes
  4165 ;; Hardware stack levels used: 1
  4166 ;; Hardware stack levels required when called: 8
  4167 ;; This function calls:
  4168 ;;		_ADC_Initialize
  4169 ;;		_CMP1_Initialize
  4170 ;;		_DAC_Initialize
  4171 ;;		_EPWM1_Initialize
  4172 ;;		_EUSART_Initialize
  4173 ;;		_FVR_Initialize
  4174 ;;		_OSCILLATOR_Initialize
  4175 ;;		_PIN_MANAGER_Initialize
  4176 ;;		_TMR0_Initialize
  4177 ;;		_TMR2_Initialize
  4178 ;;		_TMR4_Initialize
  4179 ;;		_TMR6_Initialize
  4180 ;;		_WDT_Initialize
  4181 ;; This function is called by:
  4182 ;;		_main
  4183 ;; This function uses a non-reentrant model
  4184 ;;
  4185                           
  4186     04AD                     _SYSTEM_Initialize:	
  4187                           ;psect for function _SYSTEM_Initialize
  4188                           
  4189     04AD                     l2489:	
  4190                           ;incstack = 0
  4191                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4192                           
  4193                           
  4194                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  4195     04AD  3186  2640  3184   	fcall	_PIN_MANAGER_Initialize
  4196                           
  4197                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  4198     04B0  3187  273B  3184   	fcall	_OSCILLATOR_Initialize
  4199                           
  4200                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  4201     04B3  3187  2778  3184   	fcall	_WDT_Initialize
  4202                           
  4203                           ;mcc_generated_files/mcc.c: 56:     DAC_Initialize();
  4204     04B6  3187  276C  3184   	fcall	_DAC_Initialize
  4205                           
  4206                           ;mcc_generated_files/mcc.c: 57:     FVR_Initialize();
  4207     04B9  3187  277C  3184   	fcall	_FVR_Initialize
  4208                           
  4209                           ;mcc_generated_files/mcc.c: 58:     TMR4_Initialize();
  4210     04BC  3186  26FD  3184   	fcall	_TMR4_Initialize
  4211                           
  4212                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
  4213     04BF  3187  272B  3184   	fcall	_TMR2_Initialize
  4214                           
  4215                           ;mcc_generated_files/mcc.c: 60:     TMR0_Initialize();
  4216     04C2  3186  2695  3184   	fcall	_TMR0_Initialize
  4217                           
  4218                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
  4219     04C5  3186  266E  3184   	fcall	_TMR6_Initialize
  4220                           
  4221                           ;mcc_generated_files/mcc.c: 62:     CMP1_Initialize();
  4222     04C8  3187  2772  3184   	fcall	_CMP1_Initialize
  4223                           
  4224                           ;mcc_generated_files/mcc.c: 63:     ADC_Initialize();
  4225     04CB  3187  2733  3184   	fcall	_ADC_Initialize
  4226                           
  4227                           ;mcc_generated_files/mcc.c: 64:     EPWM1_Initialize();
  4228     04CE  3186  26C8  3184   	fcall	_EPWM1_Initialize
  4229                           
  4230                           ;mcc_generated_files/mcc.c: 65:     EUSART_Initialize();
  4231     04D1  3183  2378  3184   	fcall	_EUSART_Initialize
  4232     04D4                     l37:
  4233     04D4  0008               	return
  4234     04D5                     __end_of_SYSTEM_Initialize:
  4235                           
  4236                           	psect	text11
  4237     0778                     __ptext11:	
  4238 ;; *************** function _WDT_Initialize *****************
  4239 ;; Defined at:
  4240 ;;		line 78 in file "mcc_generated_files/mcc.c"
  4241 ;; Parameters:    Size  Location     Type
  4242 ;;		None
  4243 ;; Auto vars:     Size  Location     Type
  4244 ;;		None
  4245 ;; Return value:  Size  Location     Type
  4246 ;;                  1    wreg      void 
  4247 ;; Registers used:
  4248 ;;		wreg
  4249 ;; Tracked objects:
  4250 ;;		On entry : 0/0
  4251 ;;		On exit  : 0/0
  4252 ;;		Unchanged: 0/0
  4253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4254 ;;      Params:         0       0       0       0       0       0
  4255 ;;      Locals:         0       0       0       0       0       0
  4256 ;;      Temps:          0       0       0       0       0       0
  4257 ;;      Totals:         0       0       0       0       0       0
  4258 ;;Total ram usage:        0 bytes
  4259 ;; Hardware stack levels used: 1
  4260 ;; Hardware stack levels required when called: 6
  4261 ;; This function calls:
  4262 ;;		Nothing
  4263 ;; This function is called by:
  4264 ;;		_SYSTEM_Initialize
  4265 ;; This function uses a non-reentrant model
  4266 ;;
  4267                           
  4268     0778                     _WDT_Initialize:	
  4269                           ;psect for function _WDT_Initialize
  4270                           
  4271     0778                     l2295:	
  4272                           ;incstack = 0
  4273                           ; Regs used in _WDT_Initialize: [wreg]
  4274                           
  4275                           
  4276                           ;mcc_generated_files/mcc.c: 81:     WDTCON = 0x16;
  4277     0778  3016               	movlw	22
  4278     0779  0021               	movlb	1	; select bank1
  4279     077A  0097               	movwf	23	;volatile
  4280     077B                     l43:
  4281     077B  0008               	return
  4282     077C                     __end_of_WDT_Initialize:
  4283                           
  4284                           	psect	text12
  4285     066E                     __ptext12:	
  4286 ;; *************** function _TMR6_Initialize *****************
  4287 ;; Defined at:
  4288 ;;		line 64 in file "mcc_generated_files/tmr6.c"
  4289 ;; Parameters:    Size  Location     Type
  4290 ;;		None
  4291 ;; Auto vars:     Size  Location     Type
  4292 ;;		None
  4293 ;; Return value:  Size  Location     Type
  4294 ;;                  1    wreg      void 
  4295 ;; Registers used:
  4296 ;;		wreg, status,2, status,0, pclath, cstack
  4297 ;; Tracked objects:
  4298 ;;		On entry : 0/0
  4299 ;;		On exit  : 0/0
  4300 ;;		Unchanged: 0/0
  4301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4302 ;;      Params:         0       0       0       0       0       0
  4303 ;;      Locals:         0       0       0       0       0       0
  4304 ;;      Temps:          0       0       0       0       0       0
  4305 ;;      Totals:         0       0       0       0       0       0
  4306 ;;Total ram usage:        0 bytes
  4307 ;; Hardware stack levels used: 1
  4308 ;; Hardware stack levels required when called: 7
  4309 ;; This function calls:
  4310 ;;		_TMR6_SetInterruptHandler
  4311 ;; This function is called by:
  4312 ;;		_SYSTEM_Initialize
  4313 ;; This function uses a non-reentrant model
  4314 ;;
  4315                           
  4316     066E                     _TMR6_Initialize:	
  4317                           ;psect for function _TMR6_Initialize
  4318                           
  4319     066E                     l2329:	
  4320                           ;incstack = 0
  4321                           ; Regs used in _TMR6_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4322                           
  4323                           
  4324                           ;mcc_generated_files/tmr6.c: 69:     PR6 = 0xBB;
  4325     066E  30BB               	movlw	187
  4326     066F  0028               	movlb	8	; select bank8
  4327     0670  009D               	movwf	29	;volatile
  4328     0671                     l2331:
  4329                           
  4330                           ;mcc_generated_files/tmr6.c: 72:     TMR6 = 0x00;
  4331     0671  019C               	clrf	28	;volatile
  4332     0672                     l2333:
  4333                           
  4334                           ;mcc_generated_files/tmr6.c: 75:     PIR3bits.TMR6IF = 0;
  4335     0672  0020               	movlb	0	; select bank0
  4336     0673  1193               	bcf	19,3	;volatile
  4337     0674                     l2335:
  4338                           
  4339                           ;mcc_generated_files/tmr6.c: 78:     PIE3bits.TMR6IE = 1;
  4340     0674  0021               	movlb	1	; select bank1
  4341     0675  1593               	bsf	19,3	;volatile
  4342     0676                     l2337:
  4343                           
  4344                           ;mcc_generated_files/tmr6.c: 81:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
  4345     0676  3092               	movlw	low _TMR6_DefaultInterruptHandler
  4346     0677  0020               	movlb	0	; select bank0
  4347     0678  00CC               	movwf	TMR6_SetInterruptHandler@InterruptHandler
  4348     0679  3007               	movlw	high _TMR6_DefaultInterruptHandler
  4349     067A  00CD               	movwf	TMR6_SetInterruptHandler@InterruptHandler+1
  4350     067B  3187  275A  3186   	fcall	_TMR6_SetInterruptHandler
  4351     067E                     l2339:
  4352                           
  4353                           ;mcc_generated_files/tmr6.c: 84:     T6CON = 0x0F;
  4354     067E  300F               	movlw	15
  4355     067F  0028               	movlb	8	; select bank8
  4356     0680  009E               	movwf	30	;volatile
  4357     0681                     l790:
  4358     0681  0008               	return
  4359     0682                     __end_of_TMR6_Initialize:
  4360                           
  4361                           	psect	text13
  4362     075A                     __ptext13:	
  4363 ;; *************** function _TMR6_SetInterruptHandler *****************
  4364 ;; Defined at:
  4365 ;;		line 132 in file "mcc_generated_files/tmr6.c"
  4366 ;; Parameters:    Size  Location     Type
  4367 ;;  InterruptHan    2    4[BANK0 ] PTR FTN()void 
  4368 ;;		 -> TMR6_DefaultInterruptHandler(1), fluxcontrol(1), 
  4369 ;; Auto vars:     Size  Location     Type
  4370 ;;		None
  4371 ;; Return value:  Size  Location     Type
  4372 ;;                  1    wreg      void 
  4373 ;; Registers used:
  4374 ;;		wreg
  4375 ;; Tracked objects:
  4376 ;;		On entry : 0/0
  4377 ;;		On exit  : 0/0
  4378 ;;		Unchanged: 0/0
  4379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4380 ;;      Params:         0       2       0       0       0       0
  4381 ;;      Locals:         0       0       0       0       0       0
  4382 ;;      Temps:          0       0       0       0       0       0
  4383 ;;      Totals:         0       2       0       0       0       0
  4384 ;;Total ram usage:        2 bytes
  4385 ;; Hardware stack levels used: 1
  4386 ;; Hardware stack levels required when called: 6
  4387 ;; This function calls:
  4388 ;;		Nothing
  4389 ;; This function is called by:
  4390 ;;		_main
  4391 ;;		_TMR6_Initialize
  4392 ;; This function uses a non-reentrant model
  4393 ;;
  4394                           
  4395     075A                     _TMR6_SetInterruptHandler:	
  4396                           ;psect for function _TMR6_SetInterruptHandler
  4397                           
  4398     075A                     l2191:	
  4399                           ;incstack = 0
  4400                           ; Regs used in _TMR6_SetInterruptHandler: [wreg]
  4401                           
  4402                           
  4403                           ;mcc_generated_files/tmr6.c: 133:     TMR6_InterruptHandler = InterruptHandler;
  4404     075A  0020               	movlb	0	; select bank0
  4405     075B  084D               	movf	TMR6_SetInterruptHandler@InterruptHandler+1,w
  4406     075C  00E7               	movwf	_TMR6_InterruptHandler+1
  4407     075D  084C               	movf	TMR6_SetInterruptHandler@InterruptHandler,w
  4408     075E  00E6               	movwf	_TMR6_InterruptHandler
  4409     075F                     l812:
  4410     075F  0008               	return
  4411     0760                     __end_of_TMR6_SetInterruptHandler:
  4412                           
  4413                           	psect	text14
  4414     06FD                     __ptext14:	
  4415 ;; *************** function _TMR4_Initialize *****************
  4416 ;; Defined at:
  4417 ;;		line 62 in file "mcc_generated_files/tmr4.c"
  4418 ;; Parameters:    Size  Location     Type
  4419 ;;		None
  4420 ;; Auto vars:     Size  Location     Type
  4421 ;;		None
  4422 ;; Return value:  Size  Location     Type
  4423 ;;                  1    wreg      void 
  4424 ;; Registers used:
  4425 ;;		wreg, status,2
  4426 ;; Tracked objects:
  4427 ;;		On entry : 0/0
  4428 ;;		On exit  : 0/0
  4429 ;;		Unchanged: 0/0
  4430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4431 ;;      Params:         0       0       0       0       0       0
  4432 ;;      Locals:         0       0       0       0       0       0
  4433 ;;      Temps:          0       0       0       0       0       0
  4434 ;;      Totals:         0       0       0       0       0       0
  4435 ;;Total ram usage:        0 bytes
  4436 ;; Hardware stack levels used: 1
  4437 ;; Hardware stack levels required when called: 6
  4438 ;; This function calls:
  4439 ;;		Nothing
  4440 ;; This function is called by:
  4441 ;;		_SYSTEM_Initialize
  4442 ;; This function uses a non-reentrant model
  4443 ;;
  4444                           
  4445     06FD                     _TMR4_Initialize:	
  4446                           ;psect for function _TMR4_Initialize
  4447                           
  4448     06FD                     l2301:	
  4449                           ;incstack = 0
  4450                           ; Regs used in _TMR4_Initialize: [wreg+status,2]
  4451                           
  4452                           
  4453                           ;mcc_generated_files/tmr4.c: 67:     PR4 = 0xFA;
  4454     06FD  30FA               	movlw	250
  4455     06FE  0028               	movlb	8	; select bank8
  4456     06FF  0096               	movwf	22	;volatile
  4457     0700                     l2303:
  4458                           
  4459                           ;mcc_generated_files/tmr4.c: 70:     TMR4 = 0x00;
  4460     0700  0195               	clrf	21	;volatile
  4461     0701                     l2305:
  4462                           
  4463                           ;mcc_generated_files/tmr4.c: 73:     PIR3bits.TMR4IF = 0;
  4464     0701  0020               	movlb	0	; select bank0
  4465     0702  1093               	bcf	19,1	;volatile
  4466     0703                     l2307:
  4467                           
  4468                           ;mcc_generated_files/tmr4.c: 76:     T4CON = 0x2F;
  4469     0703  302F               	movlw	47
  4470     0704  0028               	movlb	8	; select bank8
  4471     0705  0097               	movwf	23	;volatile
  4472     0706                     l118:
  4473     0706  0008               	return
  4474     0707                     __end_of_TMR4_Initialize:
  4475                           
  4476                           	psect	text15
  4477     072B                     __ptext15:	
  4478 ;; *************** function _TMR2_Initialize *****************
  4479 ;; Defined at:
  4480 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  4481 ;; Parameters:    Size  Location     Type
  4482 ;;		None
  4483 ;; Auto vars:     Size  Location     Type
  4484 ;;		None
  4485 ;; Return value:  Size  Location     Type
  4486 ;;                  1    wreg      void 
  4487 ;; Registers used:
  4488 ;;		wreg, status,2
  4489 ;; Tracked objects:
  4490 ;;		On entry : 0/0
  4491 ;;		On exit  : 0/0
  4492 ;;		Unchanged: 0/0
  4493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4494 ;;      Params:         0       0       0       0       0       0
  4495 ;;      Locals:         0       0       0       0       0       0
  4496 ;;      Temps:          0       0       0       0       0       0
  4497 ;;      Totals:         0       0       0       0       0       0
  4498 ;;Total ram usage:        0 bytes
  4499 ;; Hardware stack levels used: 1
  4500 ;; Hardware stack levels required when called: 6
  4501 ;; This function calls:
  4502 ;;		Nothing
  4503 ;; This function is called by:
  4504 ;;		_SYSTEM_Initialize
  4505 ;; This function uses a non-reentrant model
  4506 ;;
  4507                           
  4508     072B                     _TMR2_Initialize:	
  4509                           ;psect for function _TMR2_Initialize
  4510                           
  4511     072B                     l2309:	
  4512                           ;incstack = 0
  4513                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  4514                           
  4515                           
  4516                           ;mcc_generated_files/tmr2.c: 67:     PR2 = 0xFF;
  4517     072B  30FF               	movlw	255
  4518     072C  0020               	movlb	0	; select bank0
  4519     072D  009B               	movwf	27	;volatile
  4520     072E                     l2311:
  4521                           
  4522                           ;mcc_generated_files/tmr2.c: 70:     TMR2 = 0x00;
  4523     072E  019A               	clrf	26	;volatile
  4524     072F                     l2313:
  4525                           
  4526                           ;mcc_generated_files/tmr2.c: 73:     PIR1bits.TMR2IF = 0;
  4527     072F  1091               	bcf	17,1	;volatile
  4528     0730                     l2315:
  4529                           
  4530                           ;mcc_generated_files/tmr2.c: 76:     T2CON = 0x04;
  4531     0730  3004               	movlw	4
  4532     0731  009C               	movwf	28	;volatile
  4533     0732                     l86:
  4534     0732  0008               	return
  4535     0733                     __end_of_TMR2_Initialize:
  4536                           
  4537                           	psect	text16
  4538     0695                     __ptext16:	
  4539 ;; *************** function _TMR0_Initialize *****************
  4540 ;; Defined at:
  4541 ;;		line 64 in file "mcc_generated_files/tmr0.c"
  4542 ;; Parameters:    Size  Location     Type
  4543 ;;		None
  4544 ;; Auto vars:     Size  Location     Type
  4545 ;;		None
  4546 ;; Return value:  Size  Location     Type
  4547 ;;                  1    wreg      void 
  4548 ;; Registers used:
  4549 ;;		wreg, status,2, status,0, pclath, cstack
  4550 ;; Tracked objects:
  4551 ;;		On entry : 0/0
  4552 ;;		On exit  : 0/0
  4553 ;;		Unchanged: 0/0
  4554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4555 ;;      Params:         0       0       0       0       0       0
  4556 ;;      Locals:         0       0       0       0       0       0
  4557 ;;      Temps:          0       0       0       0       0       0
  4558 ;;      Totals:         0       0       0       0       0       0
  4559 ;;Total ram usage:        0 bytes
  4560 ;; Hardware stack levels used: 1
  4561 ;; Hardware stack levels required when called: 7
  4562 ;; This function calls:
  4563 ;;		_TMR0_SetInterruptHandler
  4564 ;; This function is called by:
  4565 ;;		_SYSTEM_Initialize
  4566 ;; This function uses a non-reentrant model
  4567 ;;
  4568                           
  4569     0695                     _TMR0_Initialize:	
  4570                           ;psect for function _TMR0_Initialize
  4571                           
  4572     0695                     l2317:	
  4573                           ;incstack = 0
  4574                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4575                           
  4576                           
  4577                           ;mcc_generated_files/tmr0.c: 69:     OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | (0xD7 
      +                          & 0x3F));
  4578     0695  0021               	movlb	1	; select bank1
  4579     0696  0815               	movf	21,w	;volatile
  4580     0697  39C0               	andlw	192
  4581     0698  3817               	iorlw	23
  4582     0699  0095               	movwf	21	;volatile
  4583     069A                     l2319:
  4584                           
  4585                           ;mcc_generated_files/tmr0.c: 72:     TMR0 = 0x00;
  4586     069A  0020               	movlb	0	; select bank0
  4587     069B  0195               	clrf	21	;volatile
  4588     069C                     l2321:
  4589                           
  4590                           ;mcc_generated_files/tmr0.c: 75:     timer0ReloadVal= 0;
  4591     069C  01C0               	clrf	_timer0ReloadVal	;volatile
  4592     069D                     l2323:
  4593                           
  4594                           ;mcc_generated_files/tmr0.c: 78:     INTCONbits.TMR0IF = 0;
  4595     069D  110B               	bcf	11,2	;volatile
  4596     069E                     l2325:
  4597                           
  4598                           ;mcc_generated_files/tmr0.c: 81:     INTCONbits.TMR0IE = 1;
  4599     069E  168B               	bsf	11,5	;volatile
  4600     069F                     l2327:
  4601                           
  4602                           ;mcc_generated_files/tmr0.c: 84:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  4603     069F  3093               	movlw	low _TMR0_DefaultInterruptHandler
  4604     06A0  00CC               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  4605     06A1  3007               	movlw	high _TMR0_DefaultInterruptHandler
  4606     06A2  00CD               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  4607     06A3  3187  2760  3186   	fcall	_TMR0_SetInterruptHandler
  4608     06A6                     l357:
  4609     06A6  0008               	return
  4610     06A7                     __end_of_TMR0_Initialize:
  4611                           
  4612                           	psect	text17
  4613     0760                     __ptext17:	
  4614 ;; *************** function _TMR0_SetInterruptHandler *****************
  4615 ;; Defined at:
  4616 ;;		line 140 in file "mcc_generated_files/tmr0.c"
  4617 ;; Parameters:    Size  Location     Type
  4618 ;;  InterruptHan    2    4[BANK0 ] PTR FTN()void 
  4619 ;;		 -> envia_Tx(1), TMR0_DefaultInterruptHandler(1), 
  4620 ;; Auto vars:     Size  Location     Type
  4621 ;;		None
  4622 ;; Return value:  Size  Location     Type
  4623 ;;                  1    wreg      void 
  4624 ;; Registers used:
  4625 ;;		wreg
  4626 ;; Tracked objects:
  4627 ;;		On entry : 0/0
  4628 ;;		On exit  : 0/0
  4629 ;;		Unchanged: 0/0
  4630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4631 ;;      Params:         0       2       0       0       0       0
  4632 ;;      Locals:         0       0       0       0       0       0
  4633 ;;      Temps:          0       0       0       0       0       0
  4634 ;;      Totals:         0       2       0       0       0       0
  4635 ;;Total ram usage:        2 bytes
  4636 ;; Hardware stack levels used: 1
  4637 ;; Hardware stack levels required when called: 6
  4638 ;; This function calls:
  4639 ;;		Nothing
  4640 ;; This function is called by:
  4641 ;;		_TMR0_Initialize
  4642 ;;		_main
  4643 ;; This function uses a non-reentrant model
  4644 ;;
  4645                           
  4646     0760                     _TMR0_SetInterruptHandler:	
  4647                           ;psect for function _TMR0_SetInterruptHandler
  4648                           
  4649     0760                     l2169:	
  4650                           ;incstack = 0
  4651                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  4652                           
  4653                           
  4654                           ;mcc_generated_files/tmr0.c: 141:     TMR0_InterruptHandler = InterruptHandler;
  4655     0760  0020               	movlb	0	; select bank0
  4656     0761  084D               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  4657     0762  00E9               	movwf	_TMR0_InterruptHandler+1
  4658     0763  084C               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  4659     0764  00E8               	movwf	_TMR0_InterruptHandler
  4660     0765                     l379:
  4661     0765  0008               	return
  4662     0766                     __end_of_TMR0_SetInterruptHandler:
  4663                           
  4664                           	psect	text18
  4665     0640                     __ptext18:	
  4666 ;; *************** function _PIN_MANAGER_Initialize *****************
  4667 ;; Defined at:
  4668 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  4669 ;; Parameters:    Size  Location     Type
  4670 ;;		None
  4671 ;; Auto vars:     Size  Location     Type
  4672 ;;		None
  4673 ;; Return value:  Size  Location     Type
  4674 ;;                  1    wreg      void 
  4675 ;; Registers used:
  4676 ;;		wreg, status,2
  4677 ;; Tracked objects:
  4678 ;;		On entry : 0/0
  4679 ;;		On exit  : 0/0
  4680 ;;		Unchanged: 0/0
  4681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4682 ;;      Params:         0       0       0       0       0       0
  4683 ;;      Locals:         0       0       0       0       0       0
  4684 ;;      Temps:          0       0       0       0       0       0
  4685 ;;      Totals:         0       0       0       0       0       0
  4686 ;;Total ram usage:        0 bytes
  4687 ;; Hardware stack levels used: 1
  4688 ;; Hardware stack levels required when called: 6
  4689 ;; This function calls:
  4690 ;;		Nothing
  4691 ;; This function is called by:
  4692 ;;		_SYSTEM_Initialize
  4693 ;; This function uses a non-reentrant model
  4694 ;;
  4695                           
  4696     0640                     _PIN_MANAGER_Initialize:	
  4697                           ;psect for function _PIN_MANAGER_Initialize
  4698                           
  4699     0640                     l2275:	
  4700                           ;incstack = 0
  4701                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  4702                           
  4703                           
  4704                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  4705     0640  0022               	movlb	2	; select bank2
  4706     0641  018C               	clrf	12	;volatile
  4707                           
  4708                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  4709     0642  018D               	clrf	13	;volatile
  4710     0643                     l2277:
  4711                           
  4712                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0xE1;
  4713     0643  30E1               	movlw	225
  4714     0644  0021               	movlb	1	; select bank1
  4715     0645  008C               	movwf	12	;volatile
  4716     0646                     l2279:
  4717                           
  4718                           ;mcc_generated_files/pin_manager.c: 67:     TRISB = 0xF7;
  4719     0646  30F7               	movlw	247
  4720     0647  008D               	movwf	13	;volatile
  4721     0648                     l2281:
  4722                           
  4723                           ;mcc_generated_files/pin_manager.c: 72:     ANSELB = 0xF0;
  4724     0648  30F0               	movlw	240
  4725     0649  0023               	movlb	3	; select bank3
  4726     064A  008D               	movwf	13	;volatile
  4727     064B                     l2283:
  4728                           
  4729                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x01;
  4730     064B  3001               	movlw	1
  4731     064C  008C               	movwf	12	;volatile
  4732                           
  4733                           ;mcc_generated_files/pin_manager.c: 78:     WPUB = 0x00;
  4734     064D  0024               	movlb	4	; select bank4
  4735     064E  018D               	clrf	13	;volatile
  4736                           
  4737                           ;mcc_generated_files/pin_manager.c: 79:     WPUA = 0x00;
  4738     064F  018C               	clrf	12	;volatile
  4739     0650                     l2285:
  4740                           
  4741                           ;mcc_generated_files/pin_manager.c: 80:     OPTION_REGbits.nWPUEN = 1;
  4742     0650  0021               	movlb	1	; select bank1
  4743     0651  1795               	bsf	21,7	;volatile
  4744                           
  4745                           ;mcc_generated_files/pin_manager.c: 86:     APFCON0 = 0x00;
  4746     0652  0022               	movlb	2	; select bank2
  4747     0653  019D               	clrf	29	;volatile
  4748                           
  4749                           ;mcc_generated_files/pin_manager.c: 87:     APFCON1 = 0x00;
  4750     0654  019E               	clrf	30	;volatile
  4751     0655                     l2287:
  4752                           
  4753                           ;mcc_generated_files/pin_manager.c: 94:     INTCONbits.IOCIE = 1;
  4754     0655  158B               	bsf	11,3	;volatile
  4755     0656                     l70:
  4756     0656  0008               	return
  4757     0657                     __end_of_PIN_MANAGER_Initialize:
  4758                           
  4759                           	psect	text19
  4760     073B                     __ptext19:	
  4761 ;; *************** function _OSCILLATOR_Initialize *****************
  4762 ;; Defined at:
  4763 ;;		line 68 in file "mcc_generated_files/mcc.c"
  4764 ;; Parameters:    Size  Location     Type
  4765 ;;		None
  4766 ;; Auto vars:     Size  Location     Type
  4767 ;;		None
  4768 ;; Return value:  Size  Location     Type
  4769 ;;                  1    wreg      void 
  4770 ;; Registers used:
  4771 ;;		wreg, status,2
  4772 ;; Tracked objects:
  4773 ;;		On entry : 0/0
  4774 ;;		On exit  : 0/0
  4775 ;;		Unchanged: 0/0
  4776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4777 ;;      Params:         0       0       0       0       0       0
  4778 ;;      Locals:         0       0       0       0       0       0
  4779 ;;      Temps:          0       0       0       0       0       0
  4780 ;;      Totals:         0       0       0       0       0       0
  4781 ;;Total ram usage:        0 bytes
  4782 ;; Hardware stack levels used: 1
  4783 ;; Hardware stack levels required when called: 6
  4784 ;; This function calls:
  4785 ;;		Nothing
  4786 ;; This function is called by:
  4787 ;;		_SYSTEM_Initialize
  4788 ;; This function uses a non-reentrant model
  4789 ;;
  4790                           
  4791     073B                     _OSCILLATOR_Initialize:	
  4792                           ;psect for function _OSCILLATOR_Initialize
  4793                           
  4794     073B                     l2289:	
  4795                           ;incstack = 0
  4796                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  4797                           
  4798                           
  4799                           ;mcc_generated_files/mcc.c: 71:     OSCCON = 0x78;
  4800     073B  3078               	movlw	120
  4801     073C  0021               	movlb	1	; select bank1
  4802     073D  0099               	movwf	25	;volatile
  4803     073E                     l2291:
  4804                           
  4805                           ;mcc_generated_files/mcc.c: 73:     OSCTUNE = 0x00;
  4806     073E  0198               	clrf	24	;volatile
  4807     073F                     l2293:
  4808                           
  4809                           ;mcc_generated_files/mcc.c: 75:     BORCON = 0x00;
  4810     073F  0022               	movlb	2	; select bank2
  4811     0740  0196               	clrf	22	;volatile
  4812     0741                     l40:
  4813     0741  0008               	return
  4814     0742                     __end_of_OSCILLATOR_Initialize:
  4815                           
  4816                           	psect	text20
  4817     077C                     __ptext20:	
  4818 ;; *************** function _FVR_Initialize *****************
  4819 ;; Defined at:
  4820 ;;		line 58 in file "mcc_generated_files/fvr.c"
  4821 ;; Parameters:    Size  Location     Type
  4822 ;;		None
  4823 ;; Auto vars:     Size  Location     Type
  4824 ;;		None
  4825 ;; Return value:  Size  Location     Type
  4826 ;;                  1    wreg      void 
  4827 ;; Registers used:
  4828 ;;		wreg
  4829 ;; Tracked objects:
  4830 ;;		On entry : 0/0
  4831 ;;		On exit  : 0/0
  4832 ;;		Unchanged: 0/0
  4833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4834 ;;      Params:         0       0       0       0       0       0
  4835 ;;      Locals:         0       0       0       0       0       0
  4836 ;;      Temps:          0       0       0       0       0       0
  4837 ;;      Totals:         0       0       0       0       0       0
  4838 ;;Total ram usage:        0 bytes
  4839 ;; Hardware stack levels used: 1
  4840 ;; Hardware stack levels required when called: 6
  4841 ;; This function calls:
  4842 ;;		Nothing
  4843 ;; This function is called by:
  4844 ;;		_SYSTEM_Initialize
  4845 ;; This function uses a non-reentrant model
  4846 ;;
  4847                           
  4848     077C                     _FVR_Initialize:	
  4849                           ;psect for function _FVR_Initialize
  4850                           
  4851     077C                     l2299:	
  4852                           ;incstack = 0
  4853                           ; Regs used in _FVR_Initialize: [wreg]
  4854                           
  4855                           
  4856                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0x84;
  4857     077C  3084               	movlw	132
  4858     077D  0022               	movlb	2	; select bank2
  4859     077E  0097               	movwf	23	;volatile
  4860     077F                     l389:
  4861     077F  0008               	return
  4862     0780                     __end_of_FVR_Initialize:
  4863                           
  4864                           	psect	text21
  4865     0378                     __ptext21:	
  4866 ;; *************** function _EUSART_Initialize *****************
  4867 ;; Defined at:
  4868 ;;		line 88 in file "mcc_generated_files/eusart.c"
  4869 ;; Parameters:    Size  Location     Type
  4870 ;;		None
  4871 ;; Auto vars:     Size  Location     Type
  4872 ;;		None
  4873 ;; Return value:  Size  Location     Type
  4874 ;;                  1    wreg      void 
  4875 ;; Registers used:
  4876 ;;		wreg, status,2, status,0, pclath, cstack
  4877 ;; Tracked objects:
  4878 ;;		On entry : 0/0
  4879 ;;		On exit  : 0/0
  4880 ;;		Unchanged: 0/0
  4881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4882 ;;      Params:         0       0       0       0       0       0
  4883 ;;      Locals:         0       0       0       0       0       0
  4884 ;;      Temps:          0       0       0       0       0       0
  4885 ;;      Totals:         0       0       0       0       0       0
  4886 ;;Total ram usage:        0 bytes
  4887 ;; Hardware stack levels used: 1
  4888 ;; Hardware stack levels required when called: 7
  4889 ;; This function calls:
  4890 ;;		_EUSART_SetErrorHandler
  4891 ;;		_EUSART_SetFramingErrorHandler
  4892 ;;		_EUSART_SetOverrunErrorHandler
  4893 ;;		_EUSART_SetRxInterruptHandler
  4894 ;;		_EUSART_SetTxInterruptHandler
  4895 ;; This function is called by:
  4896 ;;		_SYSTEM_Initialize
  4897 ;; This function uses a non-reentrant model
  4898 ;;
  4899                           
  4900     0378                     _EUSART_Initialize:	
  4901                           ;psect for function _EUSART_Initialize
  4902                           
  4903     0378                     l2361:	
  4904                           ;incstack = 0
  4905                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4906                           
  4907                           
  4908                           ;mcc_generated_files/eusart.c: 91:     PIE1bits.RCIE = 0;
  4909     0378  0021               	movlb	1	; select bank1
  4910     0379  1291               	bcf	17,5	;volatile
  4911     037A                     l2363:
  4912                           
  4913                           ;mcc_generated_files/eusart.c: 92:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
  4914     037A  3034               	movlw	low _EUSART_Receive_ISR
  4915     037B  0020               	movlb	0	; select bank0
  4916     037C  00CC               	movwf	EUSART_SetRxInterruptHandler@interruptHandler
  4917     037D  3004               	movlw	high _EUSART_Receive_ISR
  4918     037E  00CD               	movwf	EUSART_SetRxInterruptHandler@interruptHandler+1
  4919     037F  3187  2707  3183   	fcall	_EUSART_SetRxInterruptHandler
  4920     0382                     l2365:
  4921                           
  4922                           ;mcc_generated_files/eusart.c: 93:     PIE1bits.TXIE = 0;
  4923     0382  0021               	movlb	1	; select bank1
  4924     0383  1211               	bcf	17,4	;volatile
  4925                           
  4926                           ;mcc_generated_files/eusart.c: 94:     EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR)
      +                          ;
  4927     0384  3071               	movlw	low _EUSART_Transmit_ISR
  4928     0385  0020               	movlb	0	; select bank0
  4929     0386  00CC               	movwf	EUSART_SetTxInterruptHandler@interruptHandler
  4930     0387  3005               	movlw	high _EUSART_Transmit_ISR
  4931     0388  00CD               	movwf	EUSART_SetTxInterruptHandler@interruptHandler+1
  4932     0389  3187  2766  3183   	fcall	_EUSART_SetTxInterruptHandler
  4933     038C                     l2367:
  4934                           
  4935                           ;mcc_generated_files/eusart.c: 98:     BAUDCON = 0x08;
  4936     038C  3008               	movlw	8
  4937     038D  0023               	movlb	3	; select bank3
  4938     038E  009F               	movwf	31	;volatile
  4939     038F                     l2369:
  4940                           
  4941                           ;mcc_generated_files/eusart.c: 101:     RCSTA = 0x90;
  4942     038F  3090               	movlw	144
  4943     0390  009D               	movwf	29	;volatile
  4944     0391                     l2371:
  4945                           
  4946                           ;mcc_generated_files/eusart.c: 104:     TXSTA = 0x24;
  4947     0391  3024               	movlw	36
  4948     0392  009E               	movwf	30	;volatile
  4949     0393                     l2373:
  4950                           
  4951                           ;mcc_generated_files/eusart.c: 107:     SPBRGL = 0x22;
  4952     0393  3022               	movlw	34
  4953     0394  009B               	movwf	27	;volatile
  4954     0395                     l2375:
  4955                           
  4956                           ;mcc_generated_files/eusart.c: 110:     SPBRGH = 0x00;
  4957     0395  019C               	clrf	28	;volatile
  4958     0396                     l2377:
  4959                           
  4960                           ;mcc_generated_files/eusart.c: 113:     EUSART_SetFramingErrorHandler(EUSART_DefaultFram
      +                          ingErrorHandler);
  4961     0396  3095               	movlw	low _EUSART_DefaultFramingErrorHandler
  4962     0397  0020               	movlb	0	; select bank0
  4963     0398  00CC               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  4964     0399  3007               	movlw	high _EUSART_DefaultFramingErrorHandler
  4965     039A  00CD               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  4966     039B  3187  2719  3183   	fcall	_EUSART_SetFramingErrorHandler
  4967     039E                     l2379:
  4968                           
  4969                           ;mcc_generated_files/eusart.c: 114:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOver
      +                          runErrorHandler);
  4970     039E  3084               	movlw	low _EUSART_DefaultOverrunErrorHandler
  4971     039F  0020               	movlb	0	; select bank0
  4972     03A0  00CC               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  4973     03A1  3007               	movlw	high _EUSART_DefaultOverrunErrorHandler
  4974     03A2  00CD               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  4975     03A3  3187  2710  3183   	fcall	_EUSART_SetOverrunErrorHandler
  4976     03A6                     l2381:
  4977                           
  4978                           ;mcc_generated_files/eusart.c: 115:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandle
      +                          r);
  4979     03A6  3088               	movlw	low _EUSART_DefaultErrorHandler
  4980     03A7  0020               	movlb	0	; select bank0
  4981     03A8  00CC               	movwf	EUSART_SetErrorHandler@interruptHandler
  4982     03A9  3007               	movlw	high _EUSART_DefaultErrorHandler
  4983     03AA  00CD               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  4984     03AB  3187  2722  3183   	fcall	_EUSART_SetErrorHandler
  4985                           
  4986                           ;mcc_generated_files/eusart.c: 117:     eusartRxLastError.status = 0;
  4987     03AE  0020               	movlb	0	; select bank0
  4988     03AF  01C1               	clrf	_eusartRxLastError	;volatile
  4989                           
  4990                           ;mcc_generated_files/eusart.c: 120:     eusartTxHead = 0;
  4991     03B0  01C7               	clrf	_eusartTxHead	;volatile
  4992                           
  4993                           ;mcc_generated_files/eusart.c: 121:     eusartTxTail = 0;
  4994     03B1  01C6               	clrf	_eusartTxTail	;volatile
  4995     03B2                     l2383:
  4996                           
  4997                           ;mcc_generated_files/eusart.c: 122:     eusartTxBufferRemaining = sizeof(eusartTxBuffer)
      +                          ;
  4998     03B2  3008               	movlw	8
  4999     03B3  00C5               	movwf	_eusartTxBufferRemaining	;volatile
  5000     03B4                     l2385:
  5001                           
  5002                           ;mcc_generated_files/eusart.c: 124:     eusartRxHead = 0;
  5003     03B4  01C4               	clrf	_eusartRxHead	;volatile
  5004     03B5                     l2387:
  5005                           
  5006                           ;mcc_generated_files/eusart.c: 125:     eusartRxTail = 0;
  5007     03B5  01C3               	clrf	_eusartRxTail	;volatile
  5008     03B6                     l2389:
  5009                           
  5010                           ;mcc_generated_files/eusart.c: 126:     eusartRxCount = 0;
  5011     03B6  01C2               	clrf	_eusartRxCount	;volatile
  5012     03B7                     l2391:
  5013                           
  5014                           ;mcc_generated_files/eusart.c: 129:     PIE1bits.RCIE = 1;
  5015     03B7  0021               	movlb	1	; select bank1
  5016     03B8  1691               	bsf	17,5	;volatile
  5017     03B9                     l269:
  5018     03B9  0008               	return
  5019     03BA                     __end_of_EUSART_Initialize:
  5020                           
  5021                           	psect	text22
  5022     0766                     __ptext22:	
  5023 ;; *************** function _EUSART_SetTxInterruptHandler *****************
  5024 ;; Defined at:
  5025 ;;		line 276 in file "mcc_generated_files/eusart.c"
  5026 ;; Parameters:    Size  Location     Type
  5027 ;;  interruptHan    2    4[BANK0 ] PTR FTN()void 
  5028 ;;		 -> EUSART_Transmit_ISR(1), 
  5029 ;; Auto vars:     Size  Location     Type
  5030 ;;		None
  5031 ;; Return value:  Size  Location     Type
  5032 ;;                  1    wreg      void 
  5033 ;; Registers used:
  5034 ;;		wreg
  5035 ;; Tracked objects:
  5036 ;;		On entry : 0/0
  5037 ;;		On exit  : 0/0
  5038 ;;		Unchanged: 0/0
  5039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5040 ;;      Params:         0       2       0       0       0       0
  5041 ;;      Locals:         0       0       0       0       0       0
  5042 ;;      Temps:          0       0       0       0       0       0
  5043 ;;      Totals:         0       2       0       0       0       0
  5044 ;;Total ram usage:        2 bytes
  5045 ;; Hardware stack levels used: 1
  5046 ;; Hardware stack levels required when called: 6
  5047 ;; This function calls:
  5048 ;;		Nothing
  5049 ;; This function is called by:
  5050 ;;		_EUSART_Initialize
  5051 ;; This function uses a non-reentrant model
  5052 ;;
  5053                           
  5054     0766                     _EUSART_SetTxInterruptHandler:	
  5055                           ;psect for function _EUSART_SetTxInterruptHandler
  5056                           
  5057     0766                     l2151:	
  5058                           ;incstack = 0
  5059                           ; Regs used in _EUSART_SetTxInterruptHandler: [wreg]
  5060                           
  5061                           
  5062                           ;mcc_generated_files/eusart.c: 277:     EUSART_TxDefaultInterruptHandler = interruptHand
      +                          ler;
  5063     0766  0020               	movlb	0	; select bank0
  5064     0767  084D               	movf	EUSART_SetTxInterruptHandler@interruptHandler+1,w
  5065     0768  00EB               	movwf	_EUSART_TxDefaultInterruptHandler+1
  5066     0769  084C               	movf	EUSART_SetTxInterruptHandler@interruptHandler,w
  5067     076A  00EA               	movwf	_EUSART_TxDefaultInterruptHandler
  5068     076B                     l335:
  5069     076B  0008               	return
  5070     076C                     __end_of_EUSART_SetTxInterruptHandler:
  5071                           
  5072                           	psect	text23
  5073     0707                     __ptext23:	
  5074 ;; *************** function _EUSART_SetRxInterruptHandler *****************
  5075 ;; Defined at:
  5076 ;;		line 280 in file "mcc_generated_files/eusart.c"
  5077 ;; Parameters:    Size  Location     Type
  5078 ;;  interruptHan    2    4[BANK0 ] PTR FTN()void 
  5079 ;;		 -> receive(1), EUSART_Receive_ISR(1), 
  5080 ;; Auto vars:     Size  Location     Type
  5081 ;;		None
  5082 ;; Return value:  Size  Location     Type
  5083 ;;                  1    wreg      void 
  5084 ;; Registers used:
  5085 ;;		wreg
  5086 ;; Tracked objects:
  5087 ;;		On entry : 0/0
  5088 ;;		On exit  : 0/0
  5089 ;;		Unchanged: 0/0
  5090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5091 ;;      Params:         0       2       0       0       0       0
  5092 ;;      Locals:         0       0       0       0       0       0
  5093 ;;      Temps:          0       0       0       0       0       0
  5094 ;;      Totals:         0       2       0       0       0       0
  5095 ;;Total ram usage:        2 bytes
  5096 ;; Hardware stack levels used: 1
  5097 ;; Hardware stack levels required when called: 6
  5098 ;; This function calls:
  5099 ;;		Nothing
  5100 ;; This function is called by:
  5101 ;;		_EUSART_Initialize
  5102 ;;		_main
  5103 ;; This function uses a non-reentrant model
  5104 ;;
  5105                           
  5106     0707                     _EUSART_SetRxInterruptHandler:	
  5107                           ;psect for function _EUSART_SetRxInterruptHandler
  5108                           
  5109     0707                     l2149:	
  5110                           ;incstack = 0
  5111                           ; Regs used in _EUSART_SetRxInterruptHandler: [wreg]
  5112                           
  5113                           
  5114                           ;mcc_generated_files/eusart.c: 281:     EUSART_RxDefaultInterruptHandler = interruptHand
      +                          ler;
  5115     0707  0020               	movlb	0	; select bank0
  5116     0708  084D               	movf	EUSART_SetRxInterruptHandler@interruptHandler+1,w
  5117     0709  0021               	movlb	1	; select bank1
  5118     070A  00CD               	movwf	(_EUSART_RxDefaultInterruptHandler+1)^(0+128)
  5119     070B  0020               	movlb	0	; select bank0
  5120     070C  084C               	movf	EUSART_SetRxInterruptHandler@interruptHandler,w
  5121     070D  0021               	movlb	1	; select bank1
  5122     070E  00CC               	movwf	_EUSART_RxDefaultInterruptHandler^(0+128)
  5123     070F                     l338:
  5124     070F  0008               	return
  5125     0710                     __end_of_EUSART_SetRxInterruptHandler:
  5126                           
  5127                           	psect	text24
  5128     0710                     __ptext24:	
  5129 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  5130 ;; Defined at:
  5131 ;;		line 268 in file "mcc_generated_files/eusart.c"
  5132 ;; Parameters:    Size  Location     Type
  5133 ;;  interruptHan    2    4[BANK0 ] PTR FTN()void 
  5134 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  5135 ;; Auto vars:     Size  Location     Type
  5136 ;;		None
  5137 ;; Return value:  Size  Location     Type
  5138 ;;                  1    wreg      void 
  5139 ;; Registers used:
  5140 ;;		wreg
  5141 ;; Tracked objects:
  5142 ;;		On entry : 0/0
  5143 ;;		On exit  : 0/0
  5144 ;;		Unchanged: 0/0
  5145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5146 ;;      Params:         0       2       0       0       0       0
  5147 ;;      Locals:         0       0       0       0       0       0
  5148 ;;      Temps:          0       0       0       0       0       0
  5149 ;;      Totals:         0       2       0       0       0       0
  5150 ;;Total ram usage:        2 bytes
  5151 ;; Hardware stack levels used: 1
  5152 ;; Hardware stack levels required when called: 6
  5153 ;; This function calls:
  5154 ;;		Nothing
  5155 ;; This function is called by:
  5156 ;;		_EUSART_Initialize
  5157 ;; This function uses a non-reentrant model
  5158 ;;
  5159                           
  5160     0710                     _EUSART_SetOverrunErrorHandler:	
  5161                           ;psect for function _EUSART_SetOverrunErrorHandler
  5162                           
  5163     0710                     l2155:	
  5164                           ;incstack = 0
  5165                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  5166                           
  5167                           
  5168                           ;mcc_generated_files/eusart.c: 269:     EUSART_OverrunErrorHandler = interruptHandler;
  5169     0710  0020               	movlb	0	; select bank0
  5170     0711  084D               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  5171     0712  0021               	movlb	1	; select bank1
  5172     0713  00C9               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+128)
  5173     0714  0020               	movlb	0	; select bank0
  5174     0715  084C               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  5175     0716  0021               	movlb	1	; select bank1
  5176     0717  00C8               	movwf	_EUSART_OverrunErrorHandler^(0+128)
  5177     0718                     l329:
  5178     0718  0008               	return
  5179     0719                     __end_of_EUSART_SetOverrunErrorHandler:
  5180                           
  5181                           	psect	text25
  5182     0719                     __ptext25:	
  5183 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  5184 ;; Defined at:
  5185 ;;		line 264 in file "mcc_generated_files/eusart.c"
  5186 ;; Parameters:    Size  Location     Type
  5187 ;;  interruptHan    2    4[BANK0 ] PTR FTN()void 
  5188 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  5189 ;; Auto vars:     Size  Location     Type
  5190 ;;		None
  5191 ;; Return value:  Size  Location     Type
  5192 ;;                  1    wreg      void 
  5193 ;; Registers used:
  5194 ;;		wreg
  5195 ;; Tracked objects:
  5196 ;;		On entry : 0/0
  5197 ;;		On exit  : 0/0
  5198 ;;		Unchanged: 0/0
  5199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5200 ;;      Params:         0       2       0       0       0       0
  5201 ;;      Locals:         0       0       0       0       0       0
  5202 ;;      Temps:          0       0       0       0       0       0
  5203 ;;      Totals:         0       2       0       0       0       0
  5204 ;;Total ram usage:        2 bytes
  5205 ;; Hardware stack levels used: 1
  5206 ;; Hardware stack levels required when called: 6
  5207 ;; This function calls:
  5208 ;;		Nothing
  5209 ;; This function is called by:
  5210 ;;		_EUSART_Initialize
  5211 ;; This function uses a non-reentrant model
  5212 ;;
  5213                           
  5214     0719                     _EUSART_SetFramingErrorHandler:	
  5215                           ;psect for function _EUSART_SetFramingErrorHandler
  5216                           
  5217     0719                     l2153:	
  5218                           ;incstack = 0
  5219                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  5220                           
  5221                           
  5222                           ;mcc_generated_files/eusart.c: 265:     EUSART_FramingErrorHandler = interruptHandler;
  5223     0719  0020               	movlb	0	; select bank0
  5224     071A  084D               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  5225     071B  0021               	movlb	1	; select bank1
  5226     071C  00CB               	movwf	(_EUSART_FramingErrorHandler+1)^(0+128)
  5227     071D  0020               	movlb	0	; select bank0
  5228     071E  084C               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  5229     071F  0021               	movlb	1	; select bank1
  5230     0720  00CA               	movwf	_EUSART_FramingErrorHandler^(0+128)
  5231     0721                     l326:
  5232     0721  0008               	return
  5233     0722                     __end_of_EUSART_SetFramingErrorHandler:
  5234                           
  5235                           	psect	text26
  5236     0722                     __ptext26:	
  5237 ;; *************** function _EUSART_SetErrorHandler *****************
  5238 ;; Defined at:
  5239 ;;		line 272 in file "mcc_generated_files/eusart.c"
  5240 ;; Parameters:    Size  Location     Type
  5241 ;;  interruptHan    2    4[BANK0 ] PTR FTN()void 
  5242 ;;		 -> EUSART_DefaultErrorHandler(1), 
  5243 ;; Auto vars:     Size  Location     Type
  5244 ;;		None
  5245 ;; Return value:  Size  Location     Type
  5246 ;;                  1    wreg      void 
  5247 ;; Registers used:
  5248 ;;		wreg
  5249 ;; Tracked objects:
  5250 ;;		On entry : 0/0
  5251 ;;		On exit  : 0/0
  5252 ;;		Unchanged: 0/0
  5253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5254 ;;      Params:         0       2       0       0       0       0
  5255 ;;      Locals:         0       0       0       0       0       0
  5256 ;;      Temps:          0       0       0       0       0       0
  5257 ;;      Totals:         0       2       0       0       0       0
  5258 ;;Total ram usage:        2 bytes
  5259 ;; Hardware stack levels used: 1
  5260 ;; Hardware stack levels required when called: 6
  5261 ;; This function calls:
  5262 ;;		Nothing
  5263 ;; This function is called by:
  5264 ;;		_EUSART_Initialize
  5265 ;; This function uses a non-reentrant model
  5266 ;;
  5267                           
  5268     0722                     _EUSART_SetErrorHandler:	
  5269                           ;psect for function _EUSART_SetErrorHandler
  5270                           
  5271     0722                     l2157:	
  5272                           ;incstack = 0
  5273                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  5274                           
  5275                           
  5276                           ;mcc_generated_files/eusart.c: 273:     EUSART_ErrorHandler = interruptHandler;
  5277     0722  0020               	movlb	0	; select bank0
  5278     0723  084D               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  5279     0724  0021               	movlb	1	; select bank1
  5280     0725  00C7               	movwf	(_EUSART_ErrorHandler+1)^(0+128)
  5281     0726  0020               	movlb	0	; select bank0
  5282     0727  084C               	movf	EUSART_SetErrorHandler@interruptHandler,w
  5283     0728  0021               	movlb	1	; select bank1
  5284     0729  00C6               	movwf	_EUSART_ErrorHandler^(0+128)
  5285     072A                     l332:
  5286     072A  0008               	return
  5287     072B                     __end_of_EUSART_SetErrorHandler:
  5288                           
  5289                           	psect	text27
  5290     06C8                     __ptext27:	
  5291 ;; *************** function _EPWM1_Initialize *****************
  5292 ;; Defined at:
  5293 ;;		line 64 in file "mcc_generated_files/epwm1.c"
  5294 ;; Parameters:    Size  Location     Type
  5295 ;;		None
  5296 ;; Auto vars:     Size  Location     Type
  5297 ;;		None
  5298 ;; Return value:  Size  Location     Type
  5299 ;;                  1    wreg      void 
  5300 ;; Registers used:
  5301 ;;		wreg, status,2, status,0
  5302 ;; Tracked objects:
  5303 ;;		On entry : 0/0
  5304 ;;		On exit  : 0/0
  5305 ;;		Unchanged: 0/0
  5306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5307 ;;      Params:         0       0       0       0       0       0
  5308 ;;      Locals:         0       0       0       0       0       0
  5309 ;;      Temps:          0       0       0       0       0       0
  5310 ;;      Totals:         0       0       0       0       0       0
  5311 ;;Total ram usage:        0 bytes
  5312 ;; Hardware stack levels used: 1
  5313 ;; Hardware stack levels required when called: 6
  5314 ;; This function calls:
  5315 ;;		Nothing
  5316 ;; This function is called by:
  5317 ;;		_SYSTEM_Initialize
  5318 ;; This function uses a non-reentrant model
  5319 ;;
  5320                           
  5321     06C8                     _EPWM1_Initialize:	
  5322                           ;psect for function _EPWM1_Initialize
  5323                           
  5324     06C8                     l2349:	
  5325                           ;incstack = 0
  5326                           ; Regs used in _EPWM1_Initialize: [wreg+status,2+status,0]
  5327                           
  5328                           
  5329                           ;mcc_generated_files/epwm1.c: 69:  CCP1CON = 0x3C;
  5330     06C8  303C               	movlw	60
  5331     06C9  0025               	movlb	5	; select bank5
  5332     06CA  0093               	movwf	19	;volatile
  5333     06CB                     l2351:
  5334                           
  5335                           ;mcc_generated_files/epwm1.c: 72:  ECCP1AS = 0x00;
  5336     06CB  0195               	clrf	21	;volatile
  5337     06CC                     l2353:
  5338                           
  5339                           ;mcc_generated_files/epwm1.c: 75:  PWM1CON = 0x80;
  5340     06CC  3080               	movlw	128
  5341     06CD  0094               	movwf	20	;volatile
  5342     06CE                     l2355:
  5343                           
  5344                           ;mcc_generated_files/epwm1.c: 78:  PSTR1CON = 0x01;
  5345     06CE  3001               	movlw	1
  5346     06CF  0096               	movwf	22	;volatile
  5347     06D0                     l2357:
  5348                           
  5349                           ;mcc_generated_files/epwm1.c: 81:  CCPR1H = 0x00;
  5350     06D0  0192               	clrf	18	;volatile
  5351                           
  5352                           ;mcc_generated_files/epwm1.c: 84:  CCPR1L = 0x7F;
  5353     06D1  307F               	movlw	127
  5354     06D2  0091               	movwf	17	;volatile
  5355     06D3                     l2359:
  5356                           
  5357                           ;mcc_generated_files/epwm1.c: 87:  CCPTMRS0bits.C1TSEL = 0x0;
  5358     06D3  30FC               	movlw	-4
  5359     06D4  059E               	andwf	30,f	;volatile
  5360     06D5                     l154:
  5361     06D5  0008               	return
  5362     06D6                     __end_of_EPWM1_Initialize:
  5363                           
  5364                           	psect	text28
  5365     076C                     __ptext28:	
  5366 ;; *************** function _DAC_Initialize *****************
  5367 ;; Defined at:
  5368 ;;		line 58 in file "mcc_generated_files/dac.c"
  5369 ;; Parameters:    Size  Location     Type
  5370 ;;		None
  5371 ;; Auto vars:     Size  Location     Type
  5372 ;;		None
  5373 ;; Return value:  Size  Location     Type
  5374 ;;                  1    wreg      void 
  5375 ;; Registers used:
  5376 ;;		wreg
  5377 ;; Tracked objects:
  5378 ;;		On entry : 0/0
  5379 ;;		On exit  : 0/0
  5380 ;;		Unchanged: 0/0
  5381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5382 ;;      Params:         0       0       0       0       0       0
  5383 ;;      Locals:         0       0       0       0       0       0
  5384 ;;      Temps:          0       0       0       0       0       0
  5385 ;;      Totals:         0       0       0       0       0       0
  5386 ;;Total ram usage:        0 bytes
  5387 ;; Hardware stack levels used: 1
  5388 ;; Hardware stack levels required when called: 6
  5389 ;; This function calls:
  5390 ;;		Nothing
  5391 ;; This function is called by:
  5392 ;;		_SYSTEM_Initialize
  5393 ;; This function uses a non-reentrant model
  5394 ;;
  5395                           
  5396     076C                     _DAC_Initialize:	
  5397                           ;psect for function _DAC_Initialize
  5398                           
  5399     076C                     l2297:	
  5400                           ;incstack = 0
  5401                           ; Regs used in _DAC_Initialize: [wreg]
  5402                           
  5403                           
  5404                           ;mcc_generated_files/dac.c: 61:     DACCON0 = 0x80;
  5405     076C  3080               	movlw	128
  5406     076D  0022               	movlb	2	; select bank2
  5407     076E  0098               	movwf	24	;volatile
  5408                           
  5409                           ;mcc_generated_files/dac.c: 63:     DACCON1 = 0x06;
  5410     076F  3006               	movlw	6
  5411     0770  0099               	movwf	25	;volatile
  5412     0771                     l437:
  5413     0771  0008               	return
  5414     0772                     __end_of_DAC_Initialize:
  5415                           
  5416                           	psect	text29
  5417     0772                     __ptext29:	
  5418 ;; *************** function _CMP1_Initialize *****************
  5419 ;; Defined at:
  5420 ;;		line 58 in file "mcc_generated_files/cmp1.c"
  5421 ;; Parameters:    Size  Location     Type
  5422 ;;		None
  5423 ;; Auto vars:     Size  Location     Type
  5424 ;;		None
  5425 ;; Return value:  Size  Location     Type
  5426 ;;                  1    wreg      void 
  5427 ;; Registers used:
  5428 ;;		wreg
  5429 ;; Tracked objects:
  5430 ;;		On entry : 0/0
  5431 ;;		On exit  : 0/0
  5432 ;;		Unchanged: 0/0
  5433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5434 ;;      Params:         0       0       0       0       0       0
  5435 ;;      Locals:         0       0       0       0       0       0
  5436 ;;      Temps:          0       0       0       0       0       0
  5437 ;;      Totals:         0       0       0       0       0       0
  5438 ;;Total ram usage:        0 bytes
  5439 ;; Hardware stack levels used: 1
  5440 ;; Hardware stack levels required when called: 6
  5441 ;; This function calls:
  5442 ;;		Nothing
  5443 ;; This function is called by:
  5444 ;;		_SYSTEM_Initialize
  5445 ;; This function uses a non-reentrant model
  5446 ;;
  5447                           
  5448     0772                     _CMP1_Initialize:	
  5449                           ;psect for function _CMP1_Initialize
  5450                           
  5451     0772                     l2341:	
  5452                           ;incstack = 0
  5453                           ; Regs used in _CMP1_Initialize: [wreg]
  5454                           
  5455                           
  5456                           ;mcc_generated_files/cmp1.c: 62:     CM1CON0 = 0x84;
  5457     0772  3084               	movlw	132
  5458     0773  0022               	movlb	2	; select bank2
  5459     0774  0091               	movwf	17	;volatile
  5460                           
  5461                           ;mcc_generated_files/cmp1.c: 65:     CM1CON1 = 0x10;
  5462     0775  3010               	movlw	16
  5463     0776  0092               	movwf	18	;volatile
  5464     0777                     l452:
  5465     0777  0008               	return
  5466     0778                     __end_of_CMP1_Initialize:
  5467                           
  5468                           	psect	text30
  5469     0733                     __ptext30:	
  5470 ;; *************** function _ADC_Initialize *****************
  5471 ;; Defined at:
  5472 ;;		line 67 in file "mcc_generated_files/adc.c"
  5473 ;; Parameters:    Size  Location     Type
  5474 ;;		None
  5475 ;; Auto vars:     Size  Location     Type
  5476 ;;		None
  5477 ;; Return value:  Size  Location     Type
  5478 ;;                  1    wreg      void 
  5479 ;; Registers used:
  5480 ;;		wreg, status,2
  5481 ;; Tracked objects:
  5482 ;;		On entry : 0/0
  5483 ;;		On exit  : 0/0
  5484 ;;		Unchanged: 0/0
  5485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5486 ;;      Params:         0       0       0       0       0       0
  5487 ;;      Locals:         0       0       0       0       0       0
  5488 ;;      Temps:          0       0       0       0       0       0
  5489 ;;      Totals:         0       0       0       0       0       0
  5490 ;;Total ram usage:        0 bytes
  5491 ;; Hardware stack levels used: 1
  5492 ;; Hardware stack levels required when called: 6
  5493 ;; This function calls:
  5494 ;;		Nothing
  5495 ;; This function is called by:
  5496 ;;		_SYSTEM_Initialize
  5497 ;; This function uses a non-reentrant model
  5498 ;;
  5499                           
  5500     0733                     _ADC_Initialize:	
  5501                           ;psect for function _ADC_Initialize
  5502                           
  5503     0733                     l2343:	
  5504                           ;incstack = 0
  5505                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  5506                           
  5507                           
  5508                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0xD3;
  5509     0733  30D3               	movlw	211
  5510     0734  0021               	movlb	1	; select bank1
  5511     0735  009E               	movwf	30	;volatile
  5512     0736                     l2345:
  5513                           
  5514                           ;mcc_generated_files/adc.c: 75:     ADRESL = 0x00;
  5515     0736  019B               	clrf	27	;volatile
  5516     0737                     l2347:
  5517                           
  5518                           ;mcc_generated_files/adc.c: 78:     ADRESH = 0x00;
  5519     0737  019C               	clrf	28	;volatile
  5520                           
  5521                           ;mcc_generated_files/adc.c: 81:     ADCON0 = 0x01;
  5522     0738  3001               	movlw	1
  5523     0739  009D               	movwf	29	;volatile
  5524     073A                     l409:
  5525     073A  0008               	return
  5526     073B                     __end_of_ADC_Initialize:
  5527                           
  5528                           	psect	text31
  5529     0593                     __ptext31:	
  5530 ;; *************** function _ADC_GetConversion *****************
  5531 ;; Defined at:
  5532 ;;		line 112 in file "mcc_generated_files/adc.c"
  5533 ;; Parameters:    Size  Location     Type
  5534 ;;  channel         1    wreg     enum E2495
  5535 ;; Auto vars:     Size  Location     Type
  5536 ;;  channel         1    7[BANK0 ] enum E2495
  5537 ;; Return value:  Size  Location     Type
  5538 ;;                  2    4[BANK0 ] unsigned short 
  5539 ;; Registers used:
  5540 ;;		wreg, status,2, status,0
  5541 ;; Tracked objects:
  5542 ;;		On entry : 0/0
  5543 ;;		On exit  : 0/0
  5544 ;;		Unchanged: 0/0
  5545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5546 ;;      Params:         0       2       0       0       0       0
  5547 ;;      Locals:         0       1       0       0       0       0
  5548 ;;      Temps:          0       1       0       0       0       0
  5549 ;;      Totals:         0       4       0       0       0       0
  5550 ;;Total ram usage:        4 bytes
  5551 ;; Hardware stack levels used: 1
  5552 ;; Hardware stack levels required when called: 6
  5553 ;; This function calls:
  5554 ;;		Nothing
  5555 ;; This function is called by:
  5556 ;;		_main
  5557 ;; This function uses a non-reentrant model
  5558 ;;
  5559                           
  5560     0593                     _ADC_GetConversion:	
  5561                           ;psect for function _ADC_GetConversion
  5562                           
  5563                           
  5564                           ;incstack = 0
  5565                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
  5566                           ;ADC_GetConversion@channel stored from wreg
  5567     0593  0020               	movlb	0	; select bank0
  5568     0594  00CF               	movwf	ADC_GetConversion@channel
  5569     0595                     l2543:
  5570                           
  5571                           ;mcc_generated_files/adc.c: 112: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 113: {;mcc_generated_files/adc.c: 115:     ADCON0bits.CHS = ch
      +                          annel;
  5572     0595  084F               	movf	ADC_GetConversion@channel,w
  5573     0596  00CE               	movwf	??_ADC_GetConversion
  5574     0597  0DCE               	rlf	??_ADC_GetConversion,f
  5575     0598  0DCE               	rlf	??_ADC_GetConversion,f
  5576     0599  0021               	movlb	1	; select bank1
  5577     059A  081D               	movf	29,w	;volatile
  5578     059B  0020               	movlb	0	; select bank0
  5579     059C  064E               	xorwf	??_ADC_GetConversion,w
  5580     059D  3983               	andlw	-125
  5581     059E  064E               	xorwf	??_ADC_GetConversion,w
  5582     059F  0021               	movlb	1	; select bank1
  5583     05A0  009D               	movwf	29	;volatile
  5584     05A1                     l2545:
  5585                           
  5586                           ;mcc_generated_files/adc.c: 118:     ADCON0bits.ADON = 1;
  5587     05A1  141D               	bsf	29,0	;volatile
  5588     05A2                     l2547:
  5589                           
  5590                           ;mcc_generated_files/adc.c: 121:     _delay((unsigned long)((5)*(16000000/4000000.0)));
  5591     05A2  3006               	movlw	6
  5592     05A3                     u2307:
  5593     05A3  0B89               	decfsz	9,f
  5594     05A4  2DA3               	goto	u2307
  5595     05A5  3200               	nop2
  5596     05A6                     l2549:
  5597                           
  5598                           ;mcc_generated_files/adc.c: 124:     ADCON0bits.GO_nDONE = 1;
  5599     05A6  0021               	movlb	1	; select bank1
  5600     05A7  149D               	bsf	29,1	;volatile
  5601     05A8                     l424:	
  5602                           ;mcc_generated_files/adc.c: 128:     {;mcc_generated_files/adc.c: 129:     }
  5603                           
  5604                           
  5605                           ;mcc_generated_files/adc.c: 127:     while (ADCON0bits.GO_nDONE)
  5606     05A8  189D               	btfsc	29,1	;volatile
  5607     05A9  2DAB               	goto	u1481
  5608     05AA  2DAC               	goto	u1480
  5609     05AB                     u1481:
  5610     05AB  2DA8               	goto	l424
  5611     05AC                     u1480:
  5612     05AC                     l2551:
  5613                           
  5614                           ;mcc_generated_files/adc.c: 132:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  5615     05AC  081C               	movf	28,w	;volatile
  5616     05AD  0020               	movlb	0	; select bank0
  5617     05AE  00CD               	movwf	?_ADC_GetConversion+1
  5618     05AF  0021               	movlb	1	; select bank1
  5619     05B0  081B               	movf	27,w	;volatile
  5620     05B1  0020               	movlb	0	; select bank0
  5621     05B2  00CC               	movwf	?_ADC_GetConversion
  5622     05B3                     l427:
  5623     05B3  0008               	return
  5624     05B4                     __end_of_ADC_GetConversion:
  5625                           
  5626                           	psect	intentry
  5627     0004                     __pintentry:	
  5628 ;; *************** function _INTERRUPT_InterruptManager *****************
  5629 ;; Defined at:
  5630 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  5631 ;; Parameters:    Size  Location     Type
  5632 ;;		None
  5633 ;; Auto vars:     Size  Location     Type
  5634 ;;		None
  5635 ;; Return value:  Size  Location     Type
  5636 ;;                  1    wreg      void 
  5637 ;; Registers used:
  5638 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5639 ;; Tracked objects:
  5640 ;;		On entry : 0/0
  5641 ;;		On exit  : 0/0
  5642 ;;		Unchanged: 0/0
  5643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5644 ;;      Params:         0       0       0       0       0       0
  5645 ;;      Locals:         0       0       0       0       0       0
  5646 ;;      Temps:          0       0       0       0       0       0
  5647 ;;      Totals:         0       0       0       0       0       0
  5648 ;;Total ram usage:        0 bytes
  5649 ;; Hardware stack levels used: 1
  5650 ;; Hardware stack levels required when called: 5
  5651 ;; This function calls:
  5652 ;;		NULL
  5653 ;;		_EUSART_Receive_ISR
  5654 ;;		_EUSART_Transmit_ISR
  5655 ;;		_PIN_MANAGER_IOC
  5656 ;;		_TMR0_ISR
  5657 ;;		_TMR6_ISR
  5658 ;;		_receive
  5659 ;; This function is called by:
  5660 ;;		Interrupt level 1
  5661 ;; This function uses a non-reentrant model
  5662 ;;
  5663                           
  5664     0004                     _INTERRUPT_InterruptManager:
  5665                           
  5666                           ;incstack = 0
  5667     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  5668                           
  5669                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5670     0005  3180               	pagesel	$
  5671     0006                     i1l2577:
  5672                           
  5673                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  5674     0006  1E8B               	btfss	11,5	;volatile
  5675     0007  2809               	goto	u153_21
  5676     0008  280A               	goto	u153_20
  5677     0009                     u153_21:
  5678     0009  2812               	goto	i1l182
  5679     000A                     u153_20:
  5680     000A                     i1l2579:
  5681     000A  1D0B               	btfss	11,2	;volatile
  5682     000B  280D               	goto	u154_21
  5683     000C  280E               	goto	u154_20
  5684     000D                     u154_21:
  5685     000D  2812               	goto	i1l182
  5686     000E                     u154_20:
  5687     000E                     i1l2581:
  5688                           
  5689                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
  5690     000E  3186  2628  3180   	fcall	_TMR0_ISR
  5691                           
  5692                           ;mcc_generated_files/interrupt_manager.c: 58:     }
  5693     0011  2851               	goto	i1l194
  5694     0012                     i1l182:	
  5695                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.IOCIE == 1 && INTCO
      +                          Nbits.IOCIF == 1)
  5696                           
  5697     0012  1D8B               	btfss	11,3	;volatile
  5698     0013  2815               	goto	u155_21
  5699     0014  2816               	goto	u155_20
  5700     0015                     u155_21:
  5701     0015  281E               	goto	i1l184
  5702     0016                     u155_20:
  5703     0016                     i1l2583:
  5704     0016  1C0B               	btfss	11,0	;volatile
  5705     0017  2819               	goto	u156_21
  5706     0018  281A               	goto	u156_20
  5707     0019                     u156_21:
  5708     0019  281E               	goto	i1l184
  5709     001A                     u156_20:
  5710     001A                     i1l2585:
  5711                           
  5712                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         PIN_MANAGER_IOC();
  5713     001A  3187  2794  3180   	fcall	_PIN_MANAGER_IOC
  5714                           
  5715                           ;mcc_generated_files/interrupt_manager.c: 62:     }
  5716     001D  2851               	goto	i1l194
  5717     001E                     i1l184:	
  5718                           ;mcc_generated_files/interrupt_manager.c: 63:     else if(INTCONbits.PEIE == 1)
  5719                           
  5720     001E  1F0B               	btfss	11,6	;volatile
  5721     001F  2821               	goto	u157_21
  5722     0020  2822               	goto	u157_20
  5723     0021                     u157_21:
  5724     0021  2851               	goto	i1l188
  5725     0022                     u157_20:
  5726     0022                     i1l2587:
  5727                           
  5728                           ;mcc_generated_files/interrupt_manager.c: 64:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 65:         if(PIE3bits.TMR6IE == 1 && PIR3bits.TMR6IF == 1)
  5729     0022  0021               	movlb	1	; select bank1
  5730     0023  1D93               	btfss	19,3	;volatile
  5731     0024  2826               	goto	u158_21
  5732     0025  2827               	goto	u158_20
  5733     0026                     u158_21:
  5734     0026  2830               	goto	i1l187
  5735     0027                     u158_20:
  5736     0027                     i1l2589:
  5737     0027  0020               	movlb	0	; select bank0
  5738     0028  1D93               	btfss	19,3	;volatile
  5739     0029  282B               	goto	u159_21
  5740     002A  282C               	goto	u159_20
  5741     002B                     u159_21:
  5742     002B  2830               	goto	i1l187
  5743     002C                     u159_20:
  5744     002C                     i1l2591:
  5745                           
  5746                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             TMR6_ISR();
  5747     002C  3186  26D6  3180   	fcall	_TMR6_ISR
  5748                           
  5749                           ;mcc_generated_files/interrupt_manager.c: 68:         }
  5750     002F  2851               	goto	i1l194
  5751     0030                     i1l187:	
  5752                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE1bits.TXIE == 1 && PIR1
      +                          bits.TXIF == 1)
  5753                           
  5754     0030  0021               	movlb	1	; select bank1
  5755     0031  1E11               	btfss	17,4	;volatile
  5756     0032  2834               	goto	u160_21
  5757     0033  2835               	goto	u160_20
  5758     0034                     u160_21:
  5759     0034  2840               	goto	i1l189
  5760     0035                     u160_20:
  5761     0035                     i1l2593:
  5762     0035  0020               	movlb	0	; select bank0
  5763     0036  1E11               	btfss	17,4	;volatile
  5764     0037  2839               	goto	u161_21
  5765     0038  283A               	goto	u161_20
  5766     0039                     u161_21:
  5767     0039  2840               	goto	i1l189
  5768     003A                     u161_20:
  5769     003A                     i1l2595:
  5770                           
  5771                           ;mcc_generated_files/interrupt_manager.c: 70:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 71:             EUSART_TxDefaultInterruptHandler();
  5772     003A  086B               	movf	_EUSART_TxDefaultInterruptHandler+1,w
  5773     003B  008A               	movwf	10
  5774     003C  086A               	movf	_EUSART_TxDefaultInterruptHandler,w
  5775     003D  000A               	callw
  5776     003E  3180               	pagesel	$
  5777                           
  5778                           ;mcc_generated_files/interrupt_manager.c: 72:         }
  5779     003F  2851               	goto	i1l194
  5780     0040                     i1l189:	
  5781                           ;mcc_generated_files/interrupt_manager.c: 73:         else if(PIE1bits.RCIE == 1 && PIR1
      +                          bits.RCIF == 1)
  5782                           
  5783     0040  0021               	movlb	1	; select bank1
  5784     0041  1E91               	btfss	17,5	;volatile
  5785     0042  2844               	goto	u162_21
  5786     0043  2845               	goto	u162_20
  5787     0044                     u162_21:
  5788     0044  2851               	goto	i1l188
  5789     0045                     u162_20:
  5790     0045                     i1l2597:
  5791     0045  0020               	movlb	0	; select bank0
  5792     0046  1E91               	btfss	17,5	;volatile
  5793     0047  2849               	goto	u163_21
  5794     0048  284A               	goto	u163_20
  5795     0049                     u163_21:
  5796     0049  2851               	goto	i1l188
  5797     004A                     u163_20:
  5798     004A                     i1l2599:
  5799                           
  5800                           ;mcc_generated_files/interrupt_manager.c: 74:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 75:             EUSART_RxDefaultInterruptHandler();
  5801     004A  0021               	movlb	1	; select bank1
  5802     004B  084D               	movf	(_EUSART_RxDefaultInterruptHandler+1)^(0+128),w
  5803     004C  008A               	movwf	10
  5804     004D  084C               	movf	_EUSART_RxDefaultInterruptHandler^(0+128),w
  5805     004E  000A               	callw
  5806     004F  3180               	pagesel	$
  5807                           
  5808                           ;mcc_generated_files/interrupt_manager.c: 76:         }
  5809     0050  2851               	goto	i1l194
  5810     0051                     i1l188:
  5811     0051                     i1l194:	
  5812                           ;mcc_generated_files/interrupt_manager.c: 81:     }
  5813                           
  5814     0051  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  5815     0052  0009               	retfie
  5816     0053                     __end_of_INTERRUPT_InterruptManager:
  5817                           
  5818                           	psect	text33
  5819     0434                     __ptext33:	
  5820 ;; *************** function _EUSART_Receive_ISR *****************
  5821 ;; Defined at:
  5822 ;;		line 216 in file "mcc_generated_files/eusart.c"
  5823 ;; Parameters:    Size  Location     Type
  5824 ;;		None
  5825 ;; Auto vars:     Size  Location     Type
  5826 ;;		None
  5827 ;; Return value:  Size  Location     Type
  5828 ;;                  1    wreg      void 
  5829 ;; Registers used:
  5830 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5831 ;; Tracked objects:
  5832 ;;		On entry : 0/0
  5833 ;;		On exit  : 0/0
  5834 ;;		Unchanged: 0/0
  5835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5836 ;;      Params:         0       0       0       0       0       0
  5837 ;;      Locals:         0       0       0       0       0       0
  5838 ;;      Temps:          0       0       0       0       0       0
  5839 ;;      Totals:         0       0       0       0       0       0
  5840 ;;Total ram usage:        0 bytes
  5841 ;; Hardware stack levels used: 1
  5842 ;; Hardware stack levels required when called: 2
  5843 ;; This function calls:
  5844 ;;		NULL
  5845 ;;		_EUSART_DefaultErrorHandler
  5846 ;;		_EUSART_DefaultFramingErrorHandler
  5847 ;;		_EUSART_DefaultOverrunErrorHandler
  5848 ;;		_EUSART_RxDataHandler
  5849 ;; This function is called by:
  5850 ;;		_EUSART_Initialize
  5851 ;;		_INTERRUPT_InterruptManager
  5852 ;; This function uses a non-reentrant model
  5853 ;;
  5854                           
  5855     0434                     _EUSART_Receive_ISR:	
  5856                           ;psect for function _EUSART_Receive_ISR
  5857                           
  5858     0434                     i1l2523:	
  5859                           ;incstack = 0
  5860                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5861                           
  5862                           
  5863                           ;mcc_generated_files/eusart.c: 219:     eusartRxStatusBuffer[eusartRxHead].status = 0;
  5864     0434  0020               	movlb	0	; select bank0
  5865     0435  0844               	movf	_eusartRxHead,w	;volatile
  5866     0436  3EA8               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  5867     0437  0086               	movwf	6
  5868     0438  0187               	clrf	7
  5869     0439  0181               	clrf	1
  5870     043A                     i1l2525:
  5871                           
  5872                           ;mcc_generated_files/eusart.c: 221:     if(RCSTAbits.FERR){
  5873     043A  0023               	movlb	3	; select bank3
  5874     043B  1D1D               	btfss	29,2	;volatile
  5875     043C  2C3E               	goto	u145_21
  5876     043D  2C3F               	goto	u145_20
  5877     043E                     u145_21:
  5878     043E  2C4B               	goto	i1l2531
  5879     043F                     u145_20:
  5880     043F                     i1l2527:
  5881                           
  5882                           ;mcc_generated_files/eusart.c: 222:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
  5883     043F  0020               	movlb	0	; select bank0
  5884     0440  0844               	movf	_eusartRxHead,w	;volatile
  5885     0441  3EA8               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  5886     0442  0086               	movwf	6
  5887     0443  0187               	clrf	7
  5888     0444  1481               	bsf	1,1
  5889     0445                     i1l2529:
  5890                           
  5891                           ;mcc_generated_files/eusart.c: 223:         EUSART_FramingErrorHandler();
  5892     0445  0021               	movlb	1	; select bank1
  5893     0446  084B               	movf	(_EUSART_FramingErrorHandler+1)^(0+128),w
  5894     0447  008A               	movwf	10
  5895     0448  084A               	movf	_EUSART_FramingErrorHandler^(0+128),w
  5896     0449  000A               	callw
  5897     044A  3184               	pagesel	$
  5898     044B                     i1l2531:
  5899                           
  5900                           ;mcc_generated_files/eusart.c: 226:     if(RCSTAbits.OERR){
  5901     044B  0023               	movlb	3	; select bank3
  5902     044C  1C9D               	btfss	29,1	;volatile
  5903     044D  2C4F               	goto	u146_21
  5904     044E  2C50               	goto	u146_20
  5905     044F                     u146_21:
  5906     044F  2C5C               	goto	i1l2537
  5907     0450                     u146_20:
  5908     0450                     i1l2533:
  5909                           
  5910                           ;mcc_generated_files/eusart.c: 227:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
  5911     0450  0020               	movlb	0	; select bank0
  5912     0451  0844               	movf	_eusartRxHead,w	;volatile
  5913     0452  3EA8               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  5914     0453  0086               	movwf	6
  5915     0454  0187               	clrf	7
  5916     0455  1501               	bsf	1,2
  5917     0456                     i1l2535:
  5918                           
  5919                           ;mcc_generated_files/eusart.c: 228:         EUSART_OverrunErrorHandler();
  5920     0456  0021               	movlb	1	; select bank1
  5921     0457  0849               	movf	(_EUSART_OverrunErrorHandler+1)^(0+128),w
  5922     0458  008A               	movwf	10
  5923     0459  0848               	movf	_EUSART_OverrunErrorHandler^(0+128),w
  5924     045A  000A               	callw
  5925     045B  3184               	pagesel	$
  5926     045C                     i1l2537:
  5927                           
  5928                           ;mcc_generated_files/eusart.c: 231:     if(eusartRxStatusBuffer[eusartRxHead].status){
  5929     045C  0020               	movlb	0	; select bank0
  5930     045D  0844               	movf	_eusartRxHead,w	;volatile
  5931     045E  3EA8               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  5932     045F  0086               	movwf	6
  5933     0460  0187               	clrf	7
  5934     0461  0801               	movf	1,w
  5935     0462  1903               	btfsc	3,2
  5936     0463  2C65               	goto	u147_21
  5937     0464  2C66               	goto	u147_20
  5938     0465                     u147_21:
  5939     0465  2C6D               	goto	i1l2541
  5940     0466                     u147_20:
  5941     0466                     i1l2539:
  5942                           
  5943                           ;mcc_generated_files/eusart.c: 232:         EUSART_ErrorHandler();
  5944     0466  0021               	movlb	1	; select bank1
  5945     0467  0847               	movf	(_EUSART_ErrorHandler+1)^(0+128),w
  5946     0468  008A               	movwf	10
  5947     0469  0846               	movf	_EUSART_ErrorHandler^(0+128),w
  5948     046A  000A               	callw
  5949     046B  3184               	pagesel	$
  5950                           
  5951                           ;mcc_generated_files/eusart.c: 233:     } else {
  5952     046C  2C70               	goto	i1l310
  5953     046D                     i1l2541:
  5954                           
  5955                           ;mcc_generated_files/eusart.c: 234:         EUSART_RxDataHandler();
  5956     046D  3186  260F  3184   	fcall	_EUSART_RxDataHandler
  5957     0470                     i1l310:
  5958     0470  0008               	return
  5959     0471                     __end_of_EUSART_Receive_ISR:
  5960                           
  5961                           	psect	text34
  5962     04D5                     __ptext34:	
  5963 ;; *************** function _receive *****************
  5964 ;; Defined at:
  5965 ;;		line 176 in file "main.c"
  5966 ;; Parameters:    Size  Location     Type
  5967 ;;		None
  5968 ;; Auto vars:     Size  Location     Type
  5969 ;;  rx_byte         1    2[BANK0 ] unsigned char 
  5970 ;; Return value:  Size  Location     Type
  5971 ;;                  1    wreg      void 
  5972 ;; Registers used:
  5973 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5974 ;; Tracked objects:
  5975 ;;		On entry : 0/0
  5976 ;;		On exit  : 0/0
  5977 ;;		Unchanged: 0/0
  5978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5979 ;;      Params:         0       0       0       0       0       0
  5980 ;;      Locals:         0       1       0       0       0       0
  5981 ;;      Temps:          0       1       0       0       0       0
  5982 ;;      Totals:         0       2       0       0       0       0
  5983 ;;Total ram usage:        2 bytes
  5984 ;; Hardware stack levels used: 1
  5985 ;; Hardware stack levels required when called: 2
  5986 ;; This function calls:
  5987 ;;		_EUSART_Read
  5988 ;;		_analisa_Rx
  5989 ;; This function is called by:
  5990 ;;		_main
  5991 ;;		_INTERRUPT_InterruptManager
  5992 ;; This function uses a non-reentrant model
  5993 ;;
  5994                           
  5995     04D5                     _receive:	
  5996                           ;psect for function _receive
  5997                           
  5998     04D5                     i1l2561:	
  5999                           ;incstack = 0
  6000                           ; Regs used in _receive: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6001                           
  6002                           
  6003                           ;main.c: 177:     uint8_t rx_byte = EUSART_Read();
  6004     04D5  3185  2525  3184   	fcall	_EUSART_Read
  6005     04D8  0020               	movlb	0	; select bank0
  6006     04D9  00CA               	movwf	receive@rx_byte
  6007     04DA                     i1l2563:
  6008                           
  6009                           ;main.c: 178:     if(rx_byte=='$'){
  6010     04DA  3024               	movlw	36
  6011     04DB  064A               	xorwf	receive@rx_byte,w
  6012     04DC  1D03               	btfss	3,2
  6013     04DD  2CDF               	goto	u150_21
  6014     04DE  2CE0               	goto	u150_20
  6015     04DF                     u150_21:
  6016     04DF  2CE2               	goto	i1l2567
  6017     04E0                     u150_20:
  6018     04E0                     i1l2565:
  6019                           
  6020                           ;main.c: 179:         countRx = 0;
  6021     04E0  01BE               	clrf	_countRx
  6022                           
  6023                           ;main.c: 180:     }
  6024     04E1  2CFC               	goto	i1l616
  6025     04E2                     i1l2567:
  6026     04E2  300D               	movlw	13
  6027     04E3  064A               	xorwf	receive@rx_byte,w
  6028     04E4  1D03               	btfss	3,2
  6029     04E5  2CE7               	goto	u151_21
  6030     04E6  2CE8               	goto	u151_20
  6031     04E7                     u151_21:
  6032     04E7  2CEC               	goto	i1l2571
  6033     04E8                     u151_20:
  6034     04E8                     i1l2569:
  6035                           
  6036                           ;main.c: 182:         analisa_Rx();
  6037     04E8  3181  213B  3184   	fcall	_analisa_Rx
  6038                           
  6039                           ;main.c: 183:     }
  6040     04EB  2CFC               	goto	i1l616
  6041     04EC                     i1l2571:
  6042                           
  6043                           ;main.c: 185:         if(countRx<8 -1){
  6044     04EC  3007               	movlw	7
  6045     04ED  023E               	subwf	_countRx,w
  6046     04EE  1803               	skipnc
  6047     04EF  2CF1               	goto	u152_21
  6048     04F0  2CF2               	goto	u152_20
  6049     04F1                     u152_21:
  6050     04F1  2CFC               	goto	i1l616
  6051     04F2                     u152_20:
  6052     04F2                     i1l2573:
  6053                           
  6054                           ;main.c: 186:             bufferRx[countRx] = rx_byte;
  6055     04F2  083E               	movf	_countRx,w
  6056     04F3  3EA0               	addlw	(low (_bufferRx| 0))& (0+255)
  6057     04F4  0086               	movwf	6
  6058     04F5  0187               	clrf	7
  6059     04F6  084A               	movf	receive@rx_byte,w
  6060     04F7  0081               	movwf	1
  6061     04F8                     i1l2575:
  6062                           
  6063                           ;main.c: 187:             countRx++;
  6064     04F8  3001               	movlw	1
  6065     04F9  00C9               	movwf	??_receive
  6066     04FA  0849               	movf	??_receive,w
  6067     04FB  07BE               	addwf	_countRx,f
  6068     04FC                     i1l616:
  6069     04FC  0008               	return
  6070     04FD                     __end_of_receive:
  6071                           
  6072                           	psect	text35
  6073     013B                     __ptext35:	
  6074 ;; *************** function _analisa_Rx *****************
  6075 ;; Defined at:
  6076 ;;		line 91 in file "main.c"
  6077 ;; Parameters:    Size  Location     Type
  6078 ;;		None
  6079 ;; Auto vars:     Size  Location     Type
  6080 ;;		None
  6081 ;; Return value:  Size  Location     Type
  6082 ;;                  1    wreg      void 
  6083 ;; Registers used:
  6084 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6085 ;; Tracked objects:
  6086 ;;		On entry : 0/0
  6087 ;;		On exit  : 0/0
  6088 ;;		Unchanged: 0/0
  6089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6090 ;;      Params:         0       0       0       0       0       0
  6091 ;;      Locals:         0       0       0       0       0       0
  6092 ;;      Temps:          0       1       0       0       0       0
  6093 ;;      Totals:         0       1       0       0       0       0
  6094 ;;Total ram usage:        1 bytes
  6095 ;; Hardware stack levels used: 1
  6096 ;; Hardware stack levels required when called: 1
  6097 ;; This function calls:
  6098 ;;		_ascii_bin
  6099 ;;		i1_EPWM1_LoadDutyValue
  6100 ;;		i1___lwdiv
  6101 ;; This function is called by:
  6102 ;;		_receive
  6103 ;; This function uses a non-reentrant model
  6104 ;;
  6105                           
  6106     013B                     _analisa_Rx:	
  6107                           ;psect for function _analisa_Rx
  6108                           
  6109     013B                     i1l2467:	
  6110                           ;incstack = 0
  6111                           ; Regs used in _analisa_Rx: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6112                           
  6113                           
  6114                           ;main.c: 92:     switch(bufferRx[0]){
  6115     013B  29E0               	goto	i1l2487
  6116     013C                     i1l2469:
  6117                           
  6118                           ;main.c: 94:             if(countRx==5){
  6119     013C  3005               	movlw	5
  6120     013D  0020               	movlb	0	; select bank0
  6121     013E  063E               	xorwf	_countRx,w
  6122     013F  1D03               	btfss	3,2
  6123     0140  2942               	goto	u137_21
  6124     0141  2943               	goto	u137_20
  6125     0142                     u137_21:
  6126     0142  29EF               	goto	i1l595
  6127     0143                     u137_20:
  6128     0143                     i1l2471:
  6129                           
  6130                           ;main.c: 95:                 dcRx.n3 = ascii_bin(bufferRx[1]);
  6131     0143  0021               	movlb	1	; select bank1
  6132     0144  0821               	movf	(_bufferRx^(0+128)+1),w
  6133     0145  3186  26B8  3181   	fcall	_ascii_bin
  6134     0148  0020               	movlb	0	; select bank0
  6135     0149  00C8               	movwf	??_analisa_Rx
  6136     014A  0EC8               	swapf	??_analisa_Rx,f
  6137     014B  0821               	movf	_dcRx+1,w
  6138     014C  0648               	xorwf	??_analisa_Rx,w
  6139     014D  390F               	andlw	-241
  6140     014E  0648               	xorwf	??_analisa_Rx,w
  6141     014F  00A1               	movwf	_dcRx+1
  6142                           
  6143                           ;main.c: 96:                 dcRx.n2 = ascii_bin(bufferRx[2]);
  6144     0150  0021               	movlb	1	; select bank1
  6145     0151  0822               	movf	(_bufferRx^(0+128)+2),w
  6146     0152  3186  26B8  3181   	fcall	_ascii_bin
  6147     0155  0020               	movlb	0	; select bank0
  6148     0156  00C8               	movwf	??_analisa_Rx
  6149     0157  0821               	movf	_dcRx+1,w
  6150     0158  0648               	xorwf	??_analisa_Rx,w
  6151     0159  39F0               	andlw	-16
  6152     015A  0648               	xorwf	??_analisa_Rx,w
  6153     015B  00A1               	movwf	_dcRx+1
  6154                           
  6155                           ;main.c: 97:                 dcRx.n1 = ascii_bin(bufferRx[3]);
  6156     015C  0021               	movlb	1	; select bank1
  6157     015D  0823               	movf	(_bufferRx^(0+128)+3),w
  6158     015E  3186  26B8  3181   	fcall	_ascii_bin
  6159     0161  0020               	movlb	0	; select bank0
  6160     0162  00C8               	movwf	??_analisa_Rx
  6161     0163  0EC8               	swapf	??_analisa_Rx,f
  6162     0164  0820               	movf	_dcRx,w
  6163     0165  0648               	xorwf	??_analisa_Rx,w
  6164     0166  390F               	andlw	-241
  6165     0167  0648               	xorwf	??_analisa_Rx,w
  6166     0168  00A0               	movwf	_dcRx
  6167                           
  6168                           ;main.c: 98:                 dcRx.n0 = ascii_bin(bufferRx[4]);
  6169     0169  0021               	movlb	1	; select bank1
  6170     016A  0824               	movf	(_bufferRx^(0+128)+4),w
  6171     016B  3186  26B8  3181   	fcall	_ascii_bin
  6172     016E  0020               	movlb	0	; select bank0
  6173     016F  00C8               	movwf	??_analisa_Rx
  6174     0170  0820               	movf	_dcRx,w
  6175     0171  0648               	xorwf	??_analisa_Rx,w
  6176     0172  39F0               	andlw	-16
  6177     0173  0648               	xorwf	??_analisa_Rx,w
  6178     0174  00A0               	movwf	_dcRx
  6179                           
  6180                           ;main.c: 99:                 EPWM1_LoadDutyValue(dcRx.dc);
  6181     0175  0821               	movf	_dcRx+1,w
  6182     0176  00F1               	movwf	i1EPWM1_LoadDutyValue@dutyValue+1
  6183     0177  0820               	movf	_dcRx,w
  6184     0178  00F0               	movwf	i1EPWM1_LoadDutyValue@dutyValue
  6185     0179  3186  2657  3181   	fcall	i1_EPWM1_LoadDutyValue
  6186                           
  6187                           ;main.c: 100:             }
  6188     017C  29EF               	goto	i1l595
  6189     017D                     i1l2473:
  6190     017D  29EF               	goto	i1l595
  6191     017E                     i1l2477:
  6192                           
  6193                           ;main.c: 114:             if(countRx==5){
  6194     017E  3005               	movlw	5
  6195     017F  0020               	movlb	0	; select bank0
  6196     0180  063E               	xorwf	_countRx,w
  6197     0181  1D03               	btfss	3,2
  6198     0182  2984               	goto	u138_21
  6199     0183  2985               	goto	u138_20
  6200     0184                     u138_21:
  6201     0184  29EF               	goto	i1l595
  6202     0185                     u138_20:
  6203     0185                     i1l2479:
  6204                           
  6205                           ;main.c: 115:                 dRx.n3 = ascii_bin(bufferRx[1]);
  6206     0185  0021               	movlb	1	; select bank1
  6207     0186  0821               	movf	(_bufferRx^(0+128)+1),w
  6208     0187  3186  26B8  3181   	fcall	_ascii_bin
  6209     018A  0020               	movlb	0	; select bank0
  6210     018B  00C8               	movwf	??_analisa_Rx
  6211     018C  0EC8               	swapf	??_analisa_Rx,f
  6212     018D  0823               	movf	_dRx+1,w
  6213     018E  0648               	xorwf	??_analisa_Rx,w
  6214     018F  390F               	andlw	-241
  6215     0190  0648               	xorwf	??_analisa_Rx,w
  6216     0191  00A3               	movwf	_dRx+1
  6217                           
  6218                           ;main.c: 116:                 dRx.n2 = ascii_bin(bufferRx[2]);
  6219     0192  0021               	movlb	1	; select bank1
  6220     0193  0822               	movf	(_bufferRx^(0+128)+2),w
  6221     0194  3186  26B8  3181   	fcall	_ascii_bin
  6222     0197  0020               	movlb	0	; select bank0
  6223     0198  00C8               	movwf	??_analisa_Rx
  6224     0199  0823               	movf	_dRx+1,w
  6225     019A  0648               	xorwf	??_analisa_Rx,w
  6226     019B  39F0               	andlw	-16
  6227     019C  0648               	xorwf	??_analisa_Rx,w
  6228     019D  00A3               	movwf	_dRx+1
  6229                           
  6230                           ;main.c: 117:                 dRx.n1 = ascii_bin(bufferRx[3]);
  6231     019E  0021               	movlb	1	; select bank1
  6232     019F  0823               	movf	(_bufferRx^(0+128)+3),w
  6233     01A0  3186  26B8  3181   	fcall	_ascii_bin
  6234     01A3  0020               	movlb	0	; select bank0
  6235     01A4  00C8               	movwf	??_analisa_Rx
  6236     01A5  0EC8               	swapf	??_analisa_Rx,f
  6237     01A6  0822               	movf	_dRx,w
  6238     01A7  0648               	xorwf	??_analisa_Rx,w
  6239     01A8  390F               	andlw	-241
  6240     01A9  0648               	xorwf	??_analisa_Rx,w
  6241     01AA  00A2               	movwf	_dRx
  6242                           
  6243                           ;main.c: 118:                 dRx.n0 = ascii_bin(bufferRx[4]);
  6244     01AB  0021               	movlb	1	; select bank1
  6245     01AC  0824               	movf	(_bufferRx^(0+128)+4),w
  6246     01AD  3186  26B8  3181   	fcall	_ascii_bin
  6247     01B0  0020               	movlb	0	; select bank0
  6248     01B1  00C8               	movwf	??_analisa_Rx
  6249     01B2  0822               	movf	_dRx,w
  6250     01B3  0648               	xorwf	??_analisa_Rx,w
  6251     01B4  39F0               	andlw	-16
  6252     01B5  0648               	xorwf	??_analisa_Rx,w
  6253     01B6  00A2               	movwf	_dRx
  6254                           
  6255                           ;main.c: 119:                 ballset = dRx.d / 20;
  6256     01B7  3014               	movlw	20
  6257     01B8  00F6               	movwf	i1___lwdiv@divisor
  6258     01B9  3000               	movlw	0
  6259     01BA  00F7               	movwf	i1___lwdiv@divisor+1
  6260     01BB  0823               	movf	_dRx+1,w
  6261     01BC  00F9               	movwf	i1___lwdiv@dividend+1
  6262     01BD  0822               	movf	_dRx,w
  6263     01BE  00F8               	movwf	i1___lwdiv@dividend
  6264     01BF  3184  2471  3181   	fcall	i1___lwdiv
  6265     01C2  0877               	movf	?i1___lwdiv+1,w
  6266     01C3  0020               	movlb	0	; select bank0
  6267     01C4  00B1               	movwf	_ballset+1
  6268     01C5  0876               	movf	?i1___lwdiv,w
  6269     01C6  00B0               	movwf	_ballset
  6270                           
  6271                           ;main.c: 120:             }
  6272     01C7  29EF               	goto	i1l595
  6273     01C8                     i1l2481:
  6274                           
  6275                           ;main.c: 126:             if(countRx==2){
  6276     01C8  3002               	movlw	2
  6277     01C9  0020               	movlb	0	; select bank0
  6278     01CA  063E               	xorwf	_countRx,w
  6279     01CB  1D03               	btfss	3,2
  6280     01CC  29CE               	goto	u139_21
  6281     01CD  29CF               	goto	u139_20
  6282     01CE                     u139_21:
  6283     01CE  29EF               	goto	i1l595
  6284     01CF                     u139_20:
  6285     01CF                     i1l2483:
  6286                           
  6287                           ;main.c: 127:                 if(ascii_bin(bufferRx[1])== 0){
  6288     01CF  0021               	movlb	1	; select bank1
  6289     01D0  0821               	movf	(_bufferRx^(0+128)+1),w
  6290     01D1  3186  26B8  3181   	fcall	_ascii_bin
  6291     01D4  3A00               	xorlw	0
  6292     01D5  1D03               	skipz
  6293     01D6  29D8               	goto	u140_21
  6294     01D7  29D9               	goto	u140_20
  6295     01D8                     u140_21:
  6296     01D8  29DC               	goto	i1l591
  6297     01D9                     u140_20:
  6298     01D9                     i1l2485:
  6299                           
  6300                           ;main.c: 128:                     controlchoice = 0;
  6301     01D9  0020               	movlb	0	; select bank0
  6302     01DA  01E5               	clrf	_controlchoice
  6303                           
  6304                           ;main.c: 129:                 }
  6305     01DB  29EF               	goto	i1l595
  6306     01DC                     i1l591:	
  6307                           ;main.c: 130:                 else{
  6308                           
  6309                           
  6310                           ;main.c: 131:                     controlchoice = 1;
  6311     01DC  0020               	movlb	0	; select bank0
  6312     01DD  01E5               	clrf	_controlchoice
  6313     01DE  0AE5               	incf	_controlchoice,f
  6314     01DF  29EF               	goto	i1l595
  6315     01E0                     i1l2487:
  6316     01E0  0021               	movlb	1	; select bank1
  6317     01E1  0820               	movf	_bufferRx^(0+128),w
  6318                           
  6319                           ; Switch size 1, requested type "simple"
  6320                           ; Number of cases is 4, Range of values is 71 to 74
  6321                           ; switch strategies available:
  6322                           ; Name         Instructions Cycles
  6323                           ; simple_byte           13     7 (average)
  6324                           ; direct_byte           17     9 (fixed)
  6325                           ; jumptable            263     9 (fixed)
  6326                           ;	Chosen strategy is simple_byte
  6327     01E2  3A47               	xorlw	71	; case 71
  6328     01E3  1903               	skipnz
  6329     01E4  293C               	goto	i1l2469
  6330     01E5  3A0F               	xorlw	15	; case 72
  6331     01E6  1903               	skipnz
  6332     01E7  297D               	goto	i1l2473
  6333     01E8  3A01               	xorlw	1	; case 73
  6334     01E9  1903               	skipnz
  6335     01EA  297E               	goto	i1l2477
  6336     01EB  3A03               	xorlw	3	; case 74
  6337     01EC  1903               	skipnz
  6338     01ED  29C8               	goto	i1l2481
  6339     01EE  29EF               	goto	i1l595
  6340     01EF                     i1l595:
  6341     01EF  0008               	return
  6342     01F0                     __end_of_analisa_Rx:
  6343                           
  6344                           	psect	text36
  6345     0657                     __ptext36:	
  6346 ;; *************** function i1_EPWM1_LoadDutyValue *****************
  6347 ;; Defined at:
  6348 ;;		line 90 in file "mcc_generated_files/epwm1.c"
  6349 ;; Parameters:    Size  Location     Type
  6350 ;;  dutyValue       2    0[COMMON] unsigned short 
  6351 ;; Auto vars:     Size  Location     Type
  6352 ;;		None
  6353 ;; Return value:  Size  Location     Type
  6354 ;;                  1    wreg      void 
  6355 ;; Registers used:
  6356 ;;		wreg, status,2, status,0
  6357 ;; Tracked objects:
  6358 ;;		On entry : 0/0
  6359 ;;		On exit  : 0/0
  6360 ;;		Unchanged: 0/0
  6361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6362 ;;      Params:         2       0       0       0       0       0
  6363 ;;      Locals:         0       0       0       0       0       0
  6364 ;;      Temps:          2       0       0       0       0       0
  6365 ;;      Totals:         4       0       0       0       0       0
  6366 ;;Total ram usage:        4 bytes
  6367 ;; Hardware stack levels used: 1
  6368 ;; This function calls:
  6369 ;;		Nothing
  6370 ;; This function is called by:
  6371 ;;		_analisa_Rx
  6372 ;; This function uses a non-reentrant model
  6373 ;;
  6374                           
  6375     0657                     i1_EPWM1_LoadDutyValue:	
  6376                           ;psect for function i1_EPWM1_LoadDutyValue
  6377                           
  6378     0657                     i1l2233:	
  6379                           ;incstack = 0
  6380                           ; Regs used in i1_EPWM1_LoadDutyValue: [wreg+status,2+status,0]
  6381                           
  6382                           
  6383                           ;mcc_generated_files/epwm1.c: 90: void EPWM1_LoadDutyValue(uint16_t dutyValue);mcc_gener
      +                          ated_files/epwm1.c: 91: {;mcc_generated_files/epwm1.c: 93:     CCPR1L = ((dutyValue & 0x
      +                          03FC)>>2);
  6384     0657  0871               	movf	i1EPWM1_LoadDutyValue@dutyValue+1,w
  6385     0658  00F3               	movwf	??i1_EPWM1_LoadDutyValue+1
  6386     0659  0870               	movf	i1EPWM1_LoadDutyValue@dutyValue,w
  6387     065A  00F2               	movwf	??i1_EPWM1_LoadDutyValue
  6388     065B  36F3               	lsrf	??i1_EPWM1_LoadDutyValue+1,f
  6389     065C  0CF2               	rrf	??i1_EPWM1_LoadDutyValue,f
  6390     065D  36F3               	lsrf	??i1_EPWM1_LoadDutyValue+1,f
  6391     065E  0CF2               	rrf	??i1_EPWM1_LoadDutyValue,f
  6392     065F  0872               	movf	??i1_EPWM1_LoadDutyValue,w
  6393     0660  0025               	movlb	5	; select bank5
  6394     0661  0091               	movwf	17	;volatile
  6395                           
  6396                           ;mcc_generated_files/epwm1.c: 96:     CCP1CON = ((uint8_t)(CCP1CON & 0xCF) | ((dutyValue
      +                           & 0x0003)<<4));
  6397     0662  0870               	movf	i1EPWM1_LoadDutyValue@dutyValue,w
  6398     0663  3903               	andlw	3
  6399     0664  00F2               	movwf	??i1_EPWM1_LoadDutyValue
  6400     0665  3004               	movlw	4
  6401     0666                     u114_25:
  6402     0666  35F2               	lslf	??i1_EPWM1_LoadDutyValue,f
  6403     0667  0B89               	decfsz	9,f
  6404     0668  2E66               	goto	u114_25
  6405     0669  0813               	movf	19,w	;volatile
  6406     066A  39CF               	andlw	207
  6407     066B  0472               	iorwf	??i1_EPWM1_LoadDutyValue,w
  6408     066C  0093               	movwf	19	;volatile
  6409     066D                     i1l157:
  6410     066D  0008               	return
  6411     066E                     __end_ofi1_EPWM1_LoadDutyValue:
  6412                           
  6413                           	psect	text37
  6414     06B8                     __ptext37:	
  6415 ;; *************** function _ascii_bin *****************
  6416 ;; Defined at:
  6417 ;;		line 166 in file "main.c"
  6418 ;; Parameters:    Size  Location     Type
  6419 ;;  vAscii          1    wreg     unsigned char 
  6420 ;; Auto vars:     Size  Location     Type
  6421 ;;  vAscii          1    0[COMMON] unsigned char 
  6422 ;; Return value:  Size  Location     Type
  6423 ;;                  1    wreg      unsigned char 
  6424 ;; Registers used:
  6425 ;;		wreg, status,2, status,0
  6426 ;; Tracked objects:
  6427 ;;		On entry : 0/0
  6428 ;;		On exit  : 0/0
  6429 ;;		Unchanged: 0/0
  6430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6431 ;;      Params:         0       0       0       0       0       0
  6432 ;;      Locals:         1       0       0       0       0       0
  6433 ;;      Temps:          0       0       0       0       0       0
  6434 ;;      Totals:         1       0       0       0       0       0
  6435 ;;Total ram usage:        1 bytes
  6436 ;; Hardware stack levels used: 1
  6437 ;; This function calls:
  6438 ;;		Nothing
  6439 ;; This function is called by:
  6440 ;;		_analisa_Rx
  6441 ;; This function uses a non-reentrant model
  6442 ;;
  6443                           
  6444     06B8                     _ascii_bin:	
  6445                           ;psect for function _ascii_bin
  6446                           
  6447                           
  6448                           ;incstack = 0
  6449                           ; Regs used in _ascii_bin: [wreg+status,2+status,0]
  6450                           ;ascii_bin@vAscii stored from wreg
  6451     06B8  00F0               	movwf	ascii_bin@vAscii
  6452     06B9                     i1l2179:
  6453                           
  6454                           ;main.c: 167:     if(vAscii<0x3A){
  6455     06B9  303A               	movlw	58
  6456     06BA  0270               	subwf	ascii_bin@vAscii,w
  6457     06BB  1803               	skipnc
  6458     06BC  2EBE               	goto	u102_21
  6459     06BD  2EBF               	goto	u102_20
  6460     06BE                     u102_21:
  6461     06BE  2EC3               	goto	i1l2183
  6462     06BF                     u102_20:
  6463     06BF                     i1l2181:
  6464                           
  6465                           ;main.c: 168:         vAscii = vAscii - 0x30;
  6466     06BF  0870               	movf	ascii_bin@vAscii,w
  6467     06C0  3ED0               	addlw	208
  6468     06C1  00F0               	movwf	ascii_bin@vAscii
  6469                           
  6470                           ;main.c: 169:     }
  6471     06C2  2EC6               	goto	i1l2185
  6472     06C3                     i1l2183:
  6473                           
  6474                           ;main.c: 171:         vAscii = vAscii - 0x37;
  6475     06C3  0870               	movf	ascii_bin@vAscii,w
  6476     06C4  3EC9               	addlw	201
  6477     06C5  00F0               	movwf	ascii_bin@vAscii
  6478     06C6                     i1l2185:
  6479                           
  6480                           ;main.c: 173:     return vAscii;
  6481     06C6  0870               	movf	ascii_bin@vAscii,w
  6482     06C7                     i1l608:
  6483     06C7  0008               	return
  6484     06C8                     __end_of_ascii_bin:
  6485                           
  6486                           	psect	text38
  6487     0525                     __ptext38:	
  6488 ;; *************** function _EUSART_Read *****************
  6489 ;; Defined at:
  6490 ;;		line 151 in file "mcc_generated_files/eusart.c"
  6491 ;; Parameters:    Size  Location     Type
  6492 ;;		None
  6493 ;; Auto vars:     Size  Location     Type
  6494 ;;  readValue       1    1[COMMON] unsigned char 
  6495 ;; Return value:  Size  Location     Type
  6496 ;;                  1    wreg      unsigned char 
  6497 ;; Registers used:
  6498 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6499 ;; Tracked objects:
  6500 ;;		On entry : 0/0
  6501 ;;		On exit  : 0/0
  6502 ;;		Unchanged: 0/0
  6503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6504 ;;      Params:         0       0       0       0       0       0
  6505 ;;      Locals:         1       0       0       0       0       0
  6506 ;;      Temps:          1       0       0       0       0       0
  6507 ;;      Totals:         2       0       0       0       0       0
  6508 ;;Total ram usage:        2 bytes
  6509 ;; Hardware stack levels used: 1
  6510 ;; This function calls:
  6511 ;;		Nothing
  6512 ;; This function is called by:
  6513 ;;		_receive
  6514 ;; This function uses a non-reentrant model
  6515 ;;
  6516                           
  6517     0525                     _EUSART_Read:	
  6518                           ;psect for function _EUSART_Read
  6519                           
  6520     0525                     i1l2397:	
  6521                           ;incstack = 0
  6522                           ; Regs used in _EUSART_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
  6523                           
  6524     0525                     i1l2399:	
  6525                           ;mcc_generated_files/eusart.c: 155:     while(0 == eusartRxCount)
  6526                           
  6527                           
  6528                           ;mcc_generated_files/eusart.c: 155:     while(0 == eusartRxCount)
  6529     0525  0020               	movlb	0	; select bank0
  6530     0526  0842               	movf	_eusartRxCount,w	;volatile
  6531     0527  1903               	btfsc	3,2
  6532     0528  2D2A               	goto	u126_21
  6533     0529  2D2B               	goto	u126_20
  6534     052A                     u126_21:
  6535     052A  2D25               	goto	i1l2399
  6536     052B                     u126_20:
  6537     052B                     i1l2401:
  6538                           
  6539                           ;mcc_generated_files/eusart.c: 159:     eusartRxLastError = eusartRxStatusBuffer[eusartR
      +                          xTail];
  6540     052B  0843               	movf	_eusartRxTail,w	;volatile
  6541     052C  3EA8               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  6542     052D  0086               	movwf	6
  6543     052E  0187               	clrf	7
  6544     052F  0801               	movf	1,w
  6545     0530  00C1               	movwf	_eusartRxLastError	;volatile
  6546                           
  6547                           ;mcc_generated_files/eusart.c: 161:     readValue = eusartRxBuffer[eusartRxTail++];
  6548     0531  0843               	movf	_eusartRxTail,w
  6549     0532  3EB0               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  6550     0533  0086               	movwf	6
  6551     0534  0187               	clrf	7
  6552     0535  0801               	movf	1,w
  6553     0536  00F1               	movwf	EUSART_Read@readValue
  6554     0537                     i1l2403:
  6555     0537  3001               	movlw	1
  6556     0538  00F0               	movwf	??_EUSART_Read
  6557     0539  0870               	movf	??_EUSART_Read,w
  6558     053A  07C3               	addwf	_eusartRxTail,f	;volatile
  6559     053B                     i1l2405:
  6560                           
  6561                           ;mcc_generated_files/eusart.c: 162:     if(sizeof(eusartRxBuffer) <= eusartRxTail)
  6562     053B  3008               	movlw	8
  6563     053C  0243               	subwf	_eusartRxTail,w	;volatile
  6564     053D  1C03               	skipc
  6565     053E  2D40               	goto	u127_21
  6566     053F  2D41               	goto	u127_20
  6567     0540                     u127_21:
  6568     0540  2D42               	goto	i1l2409
  6569     0541                     u127_20:
  6570     0541                     i1l2407:
  6571                           
  6572                           ;mcc_generated_files/eusart.c: 163:     {;mcc_generated_files/eusart.c: 164:         eus
      +                          artRxTail = 0;
  6573     0541  01C3               	clrf	_eusartRxTail	;volatile
  6574     0542                     i1l2409:
  6575                           
  6576                           ;mcc_generated_files/eusart.c: 166:     PIE1bits.RCIE = 0;
  6577     0542  0021               	movlb	1	; select bank1
  6578     0543  1291               	bcf	17,5	;volatile
  6579     0544                     i1l2411:
  6580                           
  6581                           ;mcc_generated_files/eusart.c: 167:     eusartRxCount--;
  6582     0544  3001               	movlw	1
  6583     0545  0020               	movlb	0	; select bank0
  6584     0546  02C2               	subwf	_eusartRxCount,f	;volatile
  6585     0547                     i1l2413:
  6586                           
  6587                           ;mcc_generated_files/eusart.c: 168:     PIE1bits.RCIE = 1;
  6588     0547  0021               	movlb	1	; select bank1
  6589     0548  1691               	bsf	17,5	;volatile
  6590     0549                     i1l2415:
  6591                           
  6592                           ;mcc_generated_files/eusart.c: 170:     return readValue;
  6593     0549  0871               	movf	EUSART_Read@readValue,w
  6594     054A                     i1l288:
  6595     054A  0008               	return
  6596     054B                     __end_of_EUSART_Read:
  6597                           
  6598                           	psect	text39
  6599     06D6                     __ptext39:	
  6600 ;; *************** function _TMR6_ISR *****************
  6601 ;; Defined at:
  6602 ;;		line 119 in file "mcc_generated_files/tmr6.c"
  6603 ;; Parameters:    Size  Location     Type
  6604 ;;		None
  6605 ;; Auto vars:     Size  Location     Type
  6606 ;;		None
  6607 ;; Return value:  Size  Location     Type
  6608 ;;                  1    wreg      void 
  6609 ;; Registers used:
  6610 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6611 ;; Tracked objects:
  6612 ;;		On entry : 0/0
  6613 ;;		On exit  : 0/0
  6614 ;;		Unchanged: 0/0
  6615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6616 ;;      Params:         0       0       0       0       0       0
  6617 ;;      Locals:         0       0       0       0       0       0
  6618 ;;      Temps:          0       0       0       0       0       0
  6619 ;;      Totals:         0       0       0       0       0       0
  6620 ;;Total ram usage:        0 bytes
  6621 ;; Hardware stack levels used: 1
  6622 ;; Hardware stack levels required when called: 4
  6623 ;; This function calls:
  6624 ;;		NULL
  6625 ;;		_TMR6_DefaultInterruptHandler
  6626 ;;		_fluxcontrol
  6627 ;; This function is called by:
  6628 ;;		_INTERRUPT_InterruptManager
  6629 ;; This function uses a non-reentrant model
  6630 ;;
  6631                           
  6632     06D6                     _TMR6_ISR:	
  6633                           ;psect for function _TMR6_ISR
  6634                           
  6635     06D6                     i1l2505:	
  6636                           ;incstack = 0
  6637                           ; Regs used in _TMR6_ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6638                           
  6639                           
  6640                           ;mcc_generated_files/tmr6.c: 123:     PIR3bits.TMR6IF = 0;
  6641     06D6  0020               	movlb	0	; select bank0
  6642     06D7  1193               	bcf	19,3	;volatile
  6643     06D8                     i1l2507:
  6644                           
  6645                           ;mcc_generated_files/tmr6.c: 125:     if(TMR6_InterruptHandler)
  6646     06D8  0866               	movf	_TMR6_InterruptHandler,w
  6647     06D9  0467               	iorwf	_TMR6_InterruptHandler+1,w
  6648     06DA  1903               	btfsc	3,2
  6649     06DB  2EDD               	goto	u142_21
  6650     06DC  2EDE               	goto	u142_20
  6651     06DD                     u142_21:
  6652     06DD  2EE3               	goto	i1l809
  6653     06DE                     u142_20:
  6654     06DE                     i1l2509:
  6655                           
  6656                           ;mcc_generated_files/tmr6.c: 126:     {;mcc_generated_files/tmr6.c: 127:         TMR6_In
      +                          terruptHandler();
  6657     06DE  0867               	movf	_TMR6_InterruptHandler+1,w
  6658     06DF  008A               	movwf	10
  6659     06E0  0866               	movf	_TMR6_InterruptHandler,w
  6660     06E1  000A               	callw
  6661     06E2  3186               	pagesel	$
  6662     06E3                     i1l809:
  6663     06E3  0008               	return
  6664     06E4                     __end_of_TMR6_ISR:
  6665                           
  6666                           	psect	text40
  6667     0792                     __ptext40:	
  6668 ;; *************** function _TMR6_DefaultInterruptHandler *****************
  6669 ;; Defined at:
  6670 ;;		line 136 in file "mcc_generated_files/tmr6.c"
  6671 ;; Parameters:    Size  Location     Type
  6672 ;;		None
  6673 ;; Auto vars:     Size  Location     Type
  6674 ;;		None
  6675 ;; Return value:  Size  Location     Type
  6676 ;;                  1    wreg      void 
  6677 ;; Registers used:
  6678 ;;		None
  6679 ;; Tracked objects:
  6680 ;;		On entry : 0/0
  6681 ;;		On exit  : 0/0
  6682 ;;		Unchanged: 0/0
  6683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6684 ;;      Params:         0       0       0       0       0       0
  6685 ;;      Locals:         0       0       0       0       0       0
  6686 ;;      Temps:          0       0       0       0       0       0
  6687 ;;      Totals:         0       0       0       0       0       0
  6688 ;;Total ram usage:        0 bytes
  6689 ;; Hardware stack levels used: 1
  6690 ;; This function calls:
  6691 ;;		Nothing
  6692 ;; This function is called by:
  6693 ;;		_TMR6_Initialize
  6694 ;;		_TMR6_ISR
  6695 ;; This function uses a non-reentrant model
  6696 ;;
  6697                           
  6698     0792                     _TMR6_DefaultInterruptHandler:	
  6699                           ;psect for function _TMR6_DefaultInterruptHandler
  6700                           
  6701     0792                     i1l815:	
  6702                           ;incstack = 0
  6703                           ; Regs used in _TMR6_DefaultInterruptHandler: []
  6704                           
  6705     0792  0008               	return
  6706     0793                     __end_of_TMR6_DefaultInterruptHandler:
  6707                           
  6708                           	psect	text41
  6709     0292                     __ptext41:	
  6710 ;; *************** function _fluxcontrol *****************
  6711 ;; Defined at:
  6712 ;;		line 51 in file "main.c"
  6713 ;; Parameters:    Size  Location     Type
  6714 ;;		None
  6715 ;; Auto vars:     Size  Location     Type
  6716 ;;		None
  6717 ;; Return value:  Size  Location     Type
  6718 ;;                  1    wreg      void 
  6719 ;; Registers used:
  6720 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6721 ;; Tracked objects:
  6722 ;;		On entry : 0/0
  6723 ;;		On exit  : 0/0
  6724 ;;		Unchanged: 0/0
  6725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6726 ;;      Params:         0       0       0       0       0       0
  6727 ;;      Locals:         0       2       0       0       0       0
  6728 ;;      Temps:          0       2       0       0       0       0
  6729 ;;      Totals:         0       4       0       0       0       0
  6730 ;;Total ram usage:        4 bytes
  6731 ;; Hardware stack levels used: 1
  6732 ;; Hardware stack levels required when called: 3
  6733 ;; This function calls:
  6734 ;;		_fluxpos
  6735 ;;		i1___lwdiv
  6736 ;;		i1___wmul
  6737 ;; This function is called by:
  6738 ;;		_main
  6739 ;;		_fluxControlChoice
  6740 ;;		_TMR6_ISR
  6741 ;; This function uses a non-reentrant model
  6742 ;;
  6743                           
  6744     0292                     _fluxcontrol:	
  6745                           ;psect for function _fluxcontrol
  6746                           
  6747     0292                     i1l2427:	
  6748                           ;incstack = 0
  6749                           ; Regs used in _fluxcontrol: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6750                           
  6751                           
  6752                           ;main.c: 52:     error = (ballset-balldist)*10;
  6753     0292  0020               	movlb	0	; select bank0
  6754     0293  0832               	movf	_balldist,w
  6755     0294  0230               	subwf	_ballset,w
  6756     0295  00F0               	movwf	i1___wmul@multiplier
  6757     0296  0833               	movf	_balldist+1,w
  6758     0297  3B31               	subwfb	_ballset+1,w
  6759     0298  00F1               	movwf	i1___wmul@multiplier+1
  6760     0299  300A               	movlw	10
  6761     029A  00F2               	movwf	i1___wmul@multiplicand
  6762     029B  3000               	movlw	0
  6763     029C  00F3               	movwf	i1___wmul@multiplicand+1
  6764     029D  3185  25D4  3182   	fcall	i1___wmul
  6765     02A0  0871               	movf	?i1___wmul+1,w
  6766     02A1  0020               	movlb	0	; select bank0
  6767     02A2  00B5               	movwf	_error+1
  6768     02A3  0870               	movf	?i1___wmul,w
  6769     02A4  00B4               	movwf	_error
  6770     02A5                     i1l2429:
  6771                           
  6772                           ;main.c: 53:     if(error > 150 || error < 150){
  6773     02A5  0835               	movf	_error+1,w
  6774     02A6  3A80               	xorlw	128
  6775     02A7  00C8               	movwf	??_fluxcontrol
  6776     02A8  3080               	movlw	128
  6777     02A9  0248               	subwf	??_fluxcontrol,w
  6778     02AA  1D03               	skipz
  6779     02AB  2AAE               	goto	u129_25
  6780     02AC  3097               	movlw	151
  6781     02AD  0234               	subwf	_error,w
  6782     02AE                     u129_25:
  6783     02AE  1803               	skipnc
  6784     02AF  2AB1               	goto	u129_21
  6785     02B0  2AB2               	goto	u129_20
  6786     02B1                     u129_21:
  6787     02B1  2AC0               	goto	i1l2433
  6788     02B2                     u129_20:
  6789     02B2                     i1l2431:
  6790     02B2  0020               	movlb	0	; select bank0
  6791     02B3  0835               	movf	_error+1,w
  6792     02B4  3A80               	xorlw	128
  6793     02B5  00C8               	movwf	??_fluxcontrol
  6794     02B6  3080               	movlw	128
  6795     02B7  0248               	subwf	??_fluxcontrol,w
  6796     02B8  1D03               	skipz
  6797     02B9  2ABC               	goto	u130_25
  6798     02BA  3096               	movlw	150
  6799     02BB  0234               	subwf	_error,w
  6800     02BC                     u130_25:
  6801     02BC  1803               	skipnc
  6802     02BD  2ABF               	goto	u130_21
  6803     02BE  2AC0               	goto	u130_20
  6804     02BF                     u130_21:
  6805     02BF  2B2A               	goto	i1l557
  6806     02C0                     u130_20:
  6807     02C0                     i1l2433:
  6808                           
  6809                           ;main.c: 54:         outputsum += ((kif*timecontrol*error)/1000);
  6810     02C0  0020               	movlb	0	; select bank0
  6811     02C1  083F               	movf	_timecontrol,w
  6812     02C2  00C8               	movwf	??_fluxcontrol
  6813     02C3  01C9               	clrf	??_fluxcontrol+1
  6814     02C4  0848               	movf	??_fluxcontrol,w
  6815     02C5  00F0               	movwf	i1___wmul@multiplier
  6816     02C6  0849               	movf	??_fluxcontrol+1,w
  6817     02C7  00F1               	movwf	i1___wmul@multiplier+1
  6818     02C8  0835               	movf	_error+1,w
  6819     02C9  00F3               	movwf	i1___wmul@multiplicand+1
  6820     02CA  0834               	movf	_error,w
  6821     02CB  00F2               	movwf	i1___wmul@multiplicand
  6822     02CC  3185  25D4  3182   	fcall	i1___wmul
  6823     02CF  0871               	movf	?i1___wmul+1,w
  6824     02D0  0020               	movlb	0	; select bank0
  6825     02D1  00CB               	movwf	_fluxcontrol$1962+1
  6826     02D2  0870               	movf	?i1___wmul,w
  6827     02D3  00CA               	movwf	_fluxcontrol$1962
  6828                           
  6829                           ;main.c: 54:         outputsum += ((kif*timecontrol*error)/1000);
  6830     02D4  30E8               	movlw	232
  6831     02D5  00F6               	movwf	i1___lwdiv@divisor
  6832     02D6  3003               	movlw	3
  6833     02D7  00F7               	movwf	i1___lwdiv@divisor+1
  6834     02D8  084B               	movf	_fluxcontrol$1962+1,w
  6835     02D9  00F1               	movwf	i1___wmul@multiplier+1
  6836     02DA  084A               	movf	_fluxcontrol$1962,w
  6837     02DB  00F0               	movwf	i1___wmul@multiplier
  6838     02DC  0861               	movf	_kif+1,w
  6839     02DD  00F3               	movwf	i1___wmul@multiplicand+1
  6840     02DE  0860               	movf	_kif,w
  6841     02DF  00F2               	movwf	i1___wmul@multiplicand
  6842     02E0  3185  25D4  3182   	fcall	i1___wmul
  6843     02E3  0871               	movf	?i1___wmul+1,w
  6844     02E4  00F9               	movwf	i1___lwdiv@dividend+1
  6845     02E5  0870               	movf	?i1___wmul,w
  6846     02E6  00F8               	movwf	i1___lwdiv@dividend
  6847     02E7  3184  2471  3182   	fcall	i1___lwdiv
  6848     02EA  0876               	movf	?i1___lwdiv,w
  6849     02EB  0020               	movlb	0	; select bank0
  6850     02EC  07AA               	addwf	_outputsum,f
  6851     02ED  0877               	movf	?i1___lwdiv+1,w
  6852     02EE  3DAB               	addwfc	_outputsum+1,f
  6853     02EF                     i1l2435:
  6854                           
  6855                           ;main.c: 55:         if (outputsum > 45000) outputsum = 45000;
  6856     02EF  30AF               	movlw	175
  6857     02F0  022B               	subwf	_outputsum+1,w
  6858     02F1  30C9               	movlw	201
  6859     02F2  1903               	skipnz
  6860     02F3  022A               	subwf	_outputsum,w
  6861     02F4  1C03               	skipc
  6862     02F5  2AF7               	goto	u131_21
  6863     02F6  2AF8               	goto	u131_20
  6864     02F7                     u131_21:
  6865     02F7  2AFC               	goto	i1l2439
  6866     02F8                     u131_20:
  6867     02F8                     i1l2437:
  6868     02F8  30C8               	movlw	200
  6869     02F9  00AA               	movwf	_outputsum
  6870     02FA  30AF               	movlw	175
  6871     02FB  00AB               	movwf	_outputsum+1
  6872     02FC                     i1l2439:
  6873                           
  6874                           ;main.c: 56:         output = ((kpf*error + outputsum)/100);
  6875     02FC  3064               	movlw	100
  6876     02FD  00F6               	movwf	i1___lwdiv@divisor
  6877     02FE  3000               	movlw	0
  6878     02FF  00F7               	movwf	i1___lwdiv@divisor+1
  6879     0300  0835               	movf	_error+1,w
  6880     0301  00F1               	movwf	i1___wmul@multiplier+1
  6881     0302  0834               	movf	_error,w
  6882     0303  00F0               	movwf	i1___wmul@multiplier
  6883     0304  0863               	movf	_kpf+1,w
  6884     0305  00F3               	movwf	i1___wmul@multiplicand+1
  6885     0306  0862               	movf	_kpf,w
  6886     0307  00F2               	movwf	i1___wmul@multiplicand
  6887     0308  3185  25D4  3182   	fcall	i1___wmul
  6888     030B  0020               	movlb	0	; select bank0
  6889     030C  082A               	movf	_outputsum,w
  6890     030D  0770               	addwf	?i1___wmul,w
  6891     030E  00F8               	movwf	i1___lwdiv@dividend
  6892     030F  082B               	movf	_outputsum+1,w
  6893     0310  3D71               	addwfc	?i1___wmul+1,w
  6894     0311  00F9               	movwf	i1___lwdiv@dividend+1
  6895     0312  3184  2471  3182   	fcall	i1___lwdiv
  6896     0315  0877               	movf	?i1___lwdiv+1,w
  6897     0316  0020               	movlb	0	; select bank0
  6898     0317  00A9               	movwf	_output+1
  6899     0318  0876               	movf	?i1___lwdiv,w
  6900     0319  00A8               	movwf	_output
  6901     031A                     i1l2441:
  6902                           
  6903                           ;main.c: 57:         if (output > 450) output = 450;
  6904     031A  3001               	movlw	1
  6905     031B  0229               	subwf	_output+1,w
  6906     031C  30C3               	movlw	195
  6907     031D  1903               	skipnz
  6908     031E  0228               	subwf	_output,w
  6909     031F  1C03               	skipc
  6910     0320  2B22               	goto	u132_21
  6911     0321  2B23               	goto	u132_20
  6912     0322                     u132_21:
  6913     0322  2B27               	goto	i1l2445
  6914     0323                     u132_20:
  6915     0323                     i1l2443:
  6916     0323  30C2               	movlw	194
  6917     0324  00A8               	movwf	_output
  6918     0325  3001               	movlw	1
  6919     0326  00A9               	movwf	_output+1
  6920     0327                     i1l2445:
  6921                           
  6922                           ;main.c: 58:         fluxpos();
  6923     0327  3185  254B  3182   	fcall	_fluxpos
  6924     032A                     i1l557:
  6925     032A  0008               	return
  6926     032B                     __end_of_fluxcontrol:
  6927                           
  6928                           	psect	text42
  6929     05D4                     __ptext42:	
  6930 ;; *************** function i1___wmul *****************
  6931 ;; Defined at:
  6932 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul16.c"
  6933 ;; Parameters:    Size  Location     Type
  6934 ;;  multiplier      2    0[COMMON] unsigned int 
  6935 ;;  multiplicand    2    2[COMMON] unsigned int 
  6936 ;; Auto vars:     Size  Location     Type
  6937 ;;  product         2    4[COMMON] unsigned int 
  6938 ;; Return value:  Size  Location     Type
  6939 ;;                  2    0[COMMON] unsigned int 
  6940 ;; Registers used:
  6941 ;;		wreg, status,2, status,0
  6942 ;; Tracked objects:
  6943 ;;		On entry : 0/0
  6944 ;;		On exit  : 0/0
  6945 ;;		Unchanged: 0/0
  6946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6947 ;;      Params:         4       0       0       0       0       0
  6948 ;;      Locals:         2       0       0       0       0       0
  6949 ;;      Temps:          0       0       0       0       0       0
  6950 ;;      Totals:         6       0       0       0       0       0
  6951 ;;Total ram usage:        6 bytes
  6952 ;; Hardware stack levels used: 1
  6953 ;; This function calls:
  6954 ;;		Nothing
  6955 ;; This function is called by:
  6956 ;;		_fluxcontrol
  6957 ;; This function uses a non-reentrant model
  6958 ;;
  6959                           
  6960     05D4                     i1___wmul:	
  6961                           ;psect for function i1___wmul
  6962                           
  6963     05D4                     i1l2235:	
  6964                           ;incstack = 0
  6965                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
  6966                           
  6967     05D4  01F4               	clrf	i1___wmul@product
  6968     05D5  01F5               	clrf	i1___wmul@product+1
  6969     05D6                     i1l2237:
  6970     05D6  1C70               	btfss	i1___wmul@multiplier,0
  6971     05D7  2DD9               	goto	u115_21
  6972     05D8  2DDA               	goto	u115_20
  6973     05D9                     u115_21:
  6974     05D9  2DDE               	goto	i1l965
  6975     05DA                     u115_20:
  6976     05DA                     i1l2239:
  6977     05DA  0872               	movf	i1___wmul@multiplicand,w
  6978     05DB  07F4               	addwf	i1___wmul@product,f
  6979     05DC  0873               	movf	i1___wmul@multiplicand+1,w
  6980     05DD  3DF5               	addwfc	i1___wmul@product+1,f
  6981     05DE                     i1l965:
  6982     05DE  3001               	movlw	1
  6983     05DF                     u116_25:
  6984     05DF  35F2               	lslf	i1___wmul@multiplicand,f
  6985     05E0  0DF3               	rlf	i1___wmul@multiplicand+1,f
  6986     05E1  0B89               	decfsz	9,f
  6987     05E2  2DDF               	goto	u116_25
  6988     05E3                     i1l2241:
  6989     05E3  3001               	movlw	1
  6990     05E4                     u117_25:
  6991     05E4  36F1               	lsrf	i1___wmul@multiplier+1,f
  6992     05E5  0CF0               	rrf	i1___wmul@multiplier,f
  6993     05E6  0B89               	decfsz	9,f
  6994     05E7  2DE4               	goto	u117_25
  6995     05E8                     i1l2243:
  6996     05E8  0870               	movf	i1___wmul@multiplier,w
  6997     05E9  0471               	iorwf	i1___wmul@multiplier+1,w
  6998     05EA  1D03               	btfss	3,2
  6999     05EB  2DED               	goto	u118_21
  7000     05EC  2DEE               	goto	u118_20
  7001     05ED                     u118_21:
  7002     05ED  2DD6               	goto	i1l2237
  7003     05EE                     u118_20:
  7004     05EE                     i1l2245:
  7005     05EE  0875               	movf	i1___wmul@product+1,w
  7006     05EF  00F1               	movwf	?i1___wmul+1
  7007     05F0  0874               	movf	i1___wmul@product,w
  7008     05F1  00F0               	movwf	?i1___wmul
  7009     05F2                     i1l967:
  7010     05F2  0008               	return
  7011     05F3                     __end_ofi1___wmul:
  7012                           
  7013                           	psect	text43
  7014     0471                     __ptext43:	
  7015 ;; *************** function i1___lwdiv *****************
  7016 ;; Defined at:
  7017 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lwdiv.c"
  7018 ;; Parameters:    Size  Location     Type
  7019 ;;  divisor         2    6[COMMON] unsigned int 
  7020 ;;  dividend        2    8[COMMON] unsigned int 
  7021 ;; Auto vars:     Size  Location     Type
  7022 ;;  quotient        2   11[COMMON] unsigned int 
  7023 ;;  counter         1   13[COMMON] unsigned char 
  7024 ;; Return value:  Size  Location     Type
  7025 ;;                  2    6[COMMON] unsigned int 
  7026 ;; Registers used:
  7027 ;;		wreg, status,2, status,0
  7028 ;; Tracked objects:
  7029 ;;		On entry : 0/0
  7030 ;;		On exit  : 0/0
  7031 ;;		Unchanged: 0/0
  7032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7033 ;;      Params:         4       0       0       0       0       0
  7034 ;;      Locals:         3       0       0       0       0       0
  7035 ;;      Temps:          1       0       0       0       0       0
  7036 ;;      Totals:         8       0       0       0       0       0
  7037 ;;Total ram usage:        8 bytes
  7038 ;; Hardware stack levels used: 1
  7039 ;; This function calls:
  7040 ;;		Nothing
  7041 ;; This function is called by:
  7042 ;;		_fluxcontrol
  7043 ;;		_analisa_Rx
  7044 ;; This function uses a non-reentrant model
  7045 ;;
  7046                           
  7047     0471                     i1___lwdiv:	
  7048                           ;psect for function i1___lwdiv
  7049                           
  7050     0471                     i1l2249:	
  7051                           ;incstack = 0
  7052                           ; Regs used in i1___lwdiv: [wreg+status,2+status,0]
  7053                           
  7054     0471  01FB               	clrf	i1___lwdiv@quotient
  7055     0472  01FC               	clrf	i1___lwdiv@quotient+1
  7056     0473                     i1l2251:
  7057     0473  0876               	movf	i1___lwdiv@divisor,w
  7058     0474  0477               	iorwf	i1___lwdiv@divisor+1,w
  7059     0475  1903               	btfsc	3,2
  7060     0476  2C78               	goto	u119_21
  7061     0477  2C79               	goto	u119_20
  7062     0478                     u119_21:
  7063     0478  2CA8               	goto	i1l2271
  7064     0479                     u119_20:
  7065     0479                     i1l2253:
  7066     0479  01FD               	clrf	i1___lwdiv@counter
  7067     047A  0AFD               	incf	i1___lwdiv@counter,f
  7068     047B  2C85               	goto	i1l2259
  7069     047C                     i1l2255:
  7070     047C  3001               	movlw	1
  7071     047D                     u120_25:
  7072     047D  35F6               	lslf	i1___lwdiv@divisor,f
  7073     047E  0DF7               	rlf	i1___lwdiv@divisor+1,f
  7074     047F  0B89               	decfsz	9,f
  7075     0480  2C7D               	goto	u120_25
  7076     0481                     i1l2257:
  7077     0481  3001               	movlw	1
  7078     0482  00FA               	movwf	??i1___lwdiv
  7079     0483  087A               	movf	??i1___lwdiv,w
  7080     0484  07FD               	addwf	i1___lwdiv@counter,f
  7081     0485                     i1l2259:
  7082     0485  1FF7               	btfss	i1___lwdiv@divisor+1,7
  7083     0486  2C88               	goto	u121_21
  7084     0487  2C89               	goto	u121_20
  7085     0488                     u121_21:
  7086     0488  2C7C               	goto	i1l2255
  7087     0489                     u121_20:
  7088     0489                     i1l2261:
  7089     0489  3001               	movlw	1
  7090     048A                     u122_25:
  7091     048A  35FB               	lslf	i1___lwdiv@quotient,f
  7092     048B  0DFC               	rlf	i1___lwdiv@quotient+1,f
  7093     048C  0B89               	decfsz	9,f
  7094     048D  2C8A               	goto	u122_25
  7095     048E  0877               	movf	i1___lwdiv@divisor+1,w
  7096     048F  0279               	subwf	i1___lwdiv@dividend+1,w
  7097     0490  1D03               	skipz
  7098     0491  2C94               	goto	u123_25
  7099     0492  0876               	movf	i1___lwdiv@divisor,w
  7100     0493  0278               	subwf	i1___lwdiv@dividend,w
  7101     0494                     u123_25:
  7102     0494  1C03               	skipc
  7103     0495  2C97               	goto	u123_21
  7104     0496  2C98               	goto	u123_20
  7105     0497                     u123_21:
  7106     0497  2C9D               	goto	i1l2267
  7107     0498                     u123_20:
  7108     0498                     i1l2263:
  7109     0498  0876               	movf	i1___lwdiv@divisor,w
  7110     0499  02F8               	subwf	i1___lwdiv@dividend,f
  7111     049A  0877               	movf	i1___lwdiv@divisor+1,w
  7112     049B  3BF9               	subwfb	i1___lwdiv@dividend+1,f
  7113     049C                     i1l2265:
  7114     049C  147B               	bsf	i1___lwdiv@quotient,0
  7115     049D                     i1l2267:
  7116     049D  3001               	movlw	1
  7117     049E                     u124_25:
  7118     049E  36F7               	lsrf	i1___lwdiv@divisor+1,f
  7119     049F  0CF6               	rrf	i1___lwdiv@divisor,f
  7120     04A0  0B89               	decfsz	9,f
  7121     04A1  2C9E               	goto	u124_25
  7122     04A2                     i1l2269:
  7123     04A2  3001               	movlw	1
  7124     04A3  02FD               	subwf	i1___lwdiv@counter,f
  7125     04A4  1D03               	btfss	3,2
  7126     04A5  2CA7               	goto	u125_21
  7127     04A6  2CA8               	goto	u125_20
  7128     04A7                     u125_21:
  7129     04A7  2C89               	goto	i1l2261
  7130     04A8                     u125_20:
  7131     04A8                     i1l2271:
  7132     04A8  087C               	movf	i1___lwdiv@quotient+1,w
  7133     04A9  00F7               	movwf	?i1___lwdiv+1
  7134     04AA  087B               	movf	i1___lwdiv@quotient,w
  7135     04AB  00F6               	movwf	?i1___lwdiv
  7136     04AC                     i1l1245:
  7137     04AC  0008               	return
  7138     04AD                     __end_ofi1___lwdiv:
  7139                           
  7140                           	psect	text44
  7141     054B                     __ptext44:	
  7142 ;; *************** function _fluxpos *****************
  7143 ;; Defined at:
  7144 ;;		line 73 in file "main.c"
  7145 ;; Parameters:    Size  Location     Type
  7146 ;;		None
  7147 ;; Auto vars:     Size  Location     Type
  7148 ;;		None
  7149 ;; Return value:  Size  Location     Type
  7150 ;;                  1    wreg      void 
  7151 ;; Registers used:
  7152 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7153 ;; Tracked objects:
  7154 ;;		On entry : 0/0
  7155 ;;		On exit  : 0/0
  7156 ;;		Unchanged: 0/0
  7157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7158 ;;      Params:         0       0       0       0       0       0
  7159 ;;      Locals:         0       0       0       0       0       0
  7160 ;;      Temps:          2       0       0       0       0       0
  7161 ;;      Totals:         2       0       0       0       0       0
  7162 ;;Total ram usage:        2 bytes
  7163 ;; Hardware stack levels used: 1
  7164 ;; Hardware stack levels required when called: 2
  7165 ;; This function calls:
  7166 ;;		_daUmPasso
  7167 ;; This function is called by:
  7168 ;;		_fluxcontrol
  7169 ;; This function uses a non-reentrant model
  7170 ;;
  7171                           
  7172     054B                     _fluxpos:	
  7173                           ;psect for function _fluxpos
  7174                           
  7175     054B                     i1l2171:	
  7176                           ;incstack = 0
  7177                           ; Regs used in _fluxpos: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7178                           
  7179                           
  7180                           ;main.c: 74:     flux = output - position;
  7181     054B  0020               	movlb	0	; select bank0
  7182     054C  083D               	movf	_position,w
  7183     054D  00F7               	movwf	??_fluxpos
  7184     054E  01F8               	clrf	??_fluxpos+1
  7185     054F  0877               	movf	??_fluxpos,w
  7186     0550  0228               	subwf	_output,w
  7187     0551  00AE               	movwf	_flux
  7188     0552  0878               	movf	??_fluxpos+1,w
  7189     0553  3B29               	subwfb	_output+1,w
  7190     0554  00AF               	movwf	_flux+1
  7191     0555                     i1l2173:
  7192                           
  7193                           ;main.c: 75:     if(flux>0) daUmPasso(1);
  7194     0555  082F               	movf	_flux+1,w
  7195     0556  3A80               	xorlw	128
  7196     0557  00F7               	movwf	??_fluxpos
  7197     0558  3080               	movlw	128
  7198     0559  0277               	subwf	??_fluxpos,w
  7199     055A  1D03               	skipz
  7200     055B  2D5E               	goto	u100_25
  7201     055C  3001               	movlw	1
  7202     055D  022E               	subwf	_flux,w
  7203     055E                     u100_25:
  7204     055E  1C03               	skipc
  7205     055F  2D61               	goto	u100_21
  7206     0560  2D62               	goto	u100_20
  7207     0561                     u100_21:
  7208     0561  2D67               	goto	i1l568
  7209     0562                     u100_20:
  7210     0562                     i1l2175:
  7211     0562  3001               	movlw	1
  7212     0563  3180  2075  3185   	fcall	_daUmPasso
  7213     0566  2D70               	goto	i1l571
  7214     0567                     i1l568:	
  7215                           ;main.c: 76:     else if( flux <0) daUmPasso(0);
  7216                           
  7217     0567  0020               	movlb	0	; select bank0
  7218     0568  1FAF               	btfss	_flux+1,7
  7219     0569  2D6B               	goto	u101_21
  7220     056A  2D6C               	goto	u101_20
  7221     056B                     u101_21:
  7222     056B  2D70               	goto	i1l571
  7223     056C                     u101_20:
  7224     056C                     i1l2177:
  7225     056C  3000               	movlw	0
  7226     056D  3180  2075  3185   	fcall	_daUmPasso
  7227     0570                     i1l571:
  7228     0570  0008               	return
  7229     0571                     __end_of_fluxpos:
  7230                           
  7231                           	psect	text45
  7232     0075                     __ptext45:	
  7233 ;; *************** function _daUmPasso *****************
  7234 ;; Defined at:
  7235 ;;		line 197 in file "main.c"
  7236 ;; Parameters:    Size  Location     Type
  7237 ;;  sentido         1    wreg     _Bool 
  7238 ;; Auto vars:     Size  Location     Type
  7239 ;;  sentido         1    6[COMMON] _Bool 
  7240 ;; Return value:  Size  Location     Type
  7241 ;;                  1    wreg      void 
  7242 ;; Registers used:
  7243 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7244 ;; Tracked objects:
  7245 ;;		On entry : 0/0
  7246 ;;		On exit  : 0/0
  7247 ;;		Unchanged: 0/0
  7248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7249 ;;      Params:         0       0       0       0       0       0
  7250 ;;      Locals:         1       0       0       0       0       0
  7251 ;;      Temps:          6       0       0       0       0       0
  7252 ;;      Totals:         7       0       0       0       0       0
  7253 ;;Total ram usage:        7 bytes
  7254 ;; Hardware stack levels used: 1
  7255 ;; Hardware stack levels required when called: 1
  7256 ;; This function calls:
  7257 ;;		_CMP1_GetOutputStatus
  7258 ;; This function is called by:
  7259 ;;		_fluxpos
  7260 ;;		_move
  7261 ;;		_encontraFimCurso
  7262 ;; This function uses a non-reentrant model
  7263 ;;
  7264                           
  7265     0075                     _daUmPasso:	
  7266                           ;psect for function _daUmPasso
  7267                           
  7268                           
  7269                           ;incstack = 0
  7270                           ; Regs used in _daUmPasso: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7271                           ;daUmPasso@sentido stored from wreg
  7272     0075  00F6               	movwf	daUmPasso@sentido
  7273     0076                     i1l2099:
  7274                           
  7275                           ;main.c: 198:     passo++;
  7276     0076  3001               	movlw	1
  7277     0077  00F0               	movwf	??_daUmPasso
  7278     0078  0870               	movf	??_daUmPasso,w
  7279     0079  0020               	movlb	0	; select bank0
  7280     007A  07BC               	addwf	_passo,f
  7281     007B                     i1l2101:
  7282                           
  7283                           ;main.c: 199:     passo = passo & 0b00000011;
  7284     007B  083C               	movf	_passo,w
  7285     007C  3903               	andlw	3
  7286     007D  00BC               	movwf	_passo
  7287     007E                     i1l2103:
  7288                           
  7289                           ;main.c: 200:     if(CMP1_GetOutputStatus()){
  7290     007E  3187  2780  3180   	fcall	_CMP1_GetOutputStatus
  7291     0081  3A00               	xorlw	0
  7292     0082  1903               	skipnz
  7293     0083  2885               	goto	u89_21
  7294     0084  2886               	goto	u89_20
  7295     0085                     u89_21:
  7296     0085  288B               	goto	i1l2109
  7297     0086                     u89_20:
  7298     0086                     i1l2105:
  7299                           
  7300                           ;main.c: 201:         fim_curso = 1;
  7301     0086  0020               	movlb	0	; select bank0
  7302     0087  01BB               	clrf	_fim_curso
  7303     0088  0ABB               	incf	_fim_curso,f
  7304     0089                     i1l2107:
  7305                           
  7306                           ;main.c: 202:         position = 0;
  7307     0089  01BD               	clrf	_position
  7308                           
  7309                           ;main.c: 203:     }
  7310     008A  288D               	goto	i1l2111
  7311     008B                     i1l2109:
  7312                           
  7313                           ;main.c: 205:         fim_curso = 0;
  7314     008B  0020               	movlb	0	; select bank0
  7315     008C  01BB               	clrf	_fim_curso
  7316     008D                     i1l2111:
  7317                           
  7318                           ;main.c: 207:     if(!fim_curso){
  7319     008D  083B               	movf	_fim_curso,w
  7320     008E  1D03               	btfss	3,2
  7321     008F  2891               	goto	u90_21
  7322     0090  2892               	goto	u90_20
  7323     0091                     u90_21:
  7324     0091  28B9               	goto	i1l2119
  7325     0092                     u90_20:
  7326     0092  28AB               	goto	i1l2117
  7327     0093                     i1l628:	
  7328                           ;main.c: 210:                 do { LATAbits.LATA1 = 1; } while(0);
  7329                           
  7330     0093  0022               	movlb	2	; select bank2
  7331     0094  148C               	bsf	12,1	;volatile
  7332     0095                     i1l630:	
  7333                           ;main.c: 211:                 do { LATAbits.LATA2 = 1; } while(0);
  7334                           
  7335     0095  150C               	bsf	12,2	;volatile
  7336     0096                     i1l632:	
  7337                           ;main.c: 212:                 do { LATAbits.LATA3 = 0; } while(0);
  7338                           
  7339     0096  118C               	bcf	12,3	;volatile
  7340     0097                     i1l634:	
  7341                           ;main.c: 213:                 do { LATAbits.LATA4 = 0; } while(0);
  7342                           
  7343     0097  120C               	bcf	12,4	;volatile
  7344     0098  28B9               	goto	i1l2119
  7345     0099                     i1l638:	
  7346                           ;main.c: 216:                 do { LATAbits.LATA1 = 0; } while(0);
  7347                           
  7348     0099  0022               	movlb	2	; select bank2
  7349     009A  108C               	bcf	12,1	;volatile
  7350     009B                     i1l640:	
  7351                           ;main.c: 217:                 do { LATAbits.LATA2 = 1; } while(0);
  7352                           
  7353     009B  150C               	bsf	12,2	;volatile
  7354     009C                     i1l642:	
  7355                           ;main.c: 218:                 do { LATAbits.LATA3 = 1; } while(0);
  7356                           
  7357     009C  158C               	bsf	12,3	;volatile
  7358     009D                     i1l644:	
  7359                           ;main.c: 219:                 do { LATAbits.LATA4 = 0; } while(0);
  7360                           
  7361     009D  120C               	bcf	12,4	;volatile
  7362     009E  28B9               	goto	i1l2119
  7363     009F                     i1l647:	
  7364                           ;main.c: 222:                 do { LATAbits.LATA1 = 0; } while(0);
  7365                           
  7366     009F  0022               	movlb	2	; select bank2
  7367     00A0  108C               	bcf	12,1	;volatile
  7368     00A1                     i1l649:	
  7369                           ;main.c: 223:                 do { LATAbits.LATA2 = 0; } while(0);
  7370                           
  7371     00A1  110C               	bcf	12,2	;volatile
  7372     00A2                     i1l651:	
  7373                           ;main.c: 224:                 do { LATAbits.LATA3 = 1; } while(0);
  7374                           
  7375     00A2  158C               	bsf	12,3	;volatile
  7376     00A3                     i1l653:	
  7377                           ;main.c: 225:                 do { LATAbits.LATA4 = 1; } while(0);
  7378                           
  7379     00A3  160C               	bsf	12,4	;volatile
  7380     00A4  28B9               	goto	i1l2119
  7381     00A5                     i1l656:	
  7382                           ;main.c: 228:                 do { LATAbits.LATA1 = 1; } while(0);
  7383                           
  7384     00A5  0022               	movlb	2	; select bank2
  7385     00A6  148C               	bsf	12,1	;volatile
  7386     00A7                     i1l658:	
  7387                           ;main.c: 229:                 do { LATAbits.LATA2 = 0; } while(0);
  7388                           
  7389     00A7  110C               	bcf	12,2	;volatile
  7390     00A8                     i1l660:	
  7391                           ;main.c: 230:                 do { LATAbits.LATA3 = 0; } while(0);
  7392                           
  7393     00A8  118C               	bcf	12,3	;volatile
  7394     00A9                     i1l662:	
  7395                           ;main.c: 231:                 do { LATAbits.LATA4 = 1; } while(0);
  7396                           
  7397     00A9  160C               	bsf	12,4	;volatile
  7398     00AA  28B9               	goto	i1l2119
  7399     00AB                     i1l2117:
  7400     00AB  083C               	movf	_passo,w
  7401                           
  7402                           ; Switch size 1, requested type "simple"
  7403                           ; Number of cases is 4, Range of values is 0 to 3
  7404                           ; switch strategies available:
  7405                           ; Name         Instructions Cycles
  7406                           ; simple_byte           13     7 (average)
  7407                           ; direct_byte           14     6 (fixed)
  7408                           ; jumptable            260     6 (fixed)
  7409                           ;	Chosen strategy is simple_byte
  7410     00AC  3A00               	xorlw	0	; case 0
  7411     00AD  1903               	skipnz
  7412     00AE  2893               	goto	i1l628
  7413     00AF  3A01               	xorlw	1	; case 1
  7414     00B0  1903               	skipnz
  7415     00B1  2899               	goto	i1l638
  7416     00B2  3A03               	xorlw	3	; case 2
  7417     00B3  1903               	skipnz
  7418     00B4  289F               	goto	i1l647
  7419     00B5  3A01               	xorlw	1	; case 3
  7420     00B6  1903               	skipnz
  7421     00B7  28A5               	goto	i1l656
  7422     00B8  28B9               	goto	i1l2119
  7423     00B9                     i1l2119:
  7424                           
  7425                           ;main.c: 235:     if(sentido | (!fim_curso)){
  7426     00B9  0020               	movlb	0	; select bank0
  7427     00BA  083B               	movf	_fim_curso,w
  7428     00BB  1903               	btfsc	3,2
  7429     00BC  28BE               	goto	u91_21
  7430     00BD  28C0               	goto	u91_20
  7431     00BE                     u91_21:
  7432     00BE  3001               	movlw	1
  7433     00BF  28C1               	goto	u92_20
  7434     00C0                     u91_20:
  7435     00C0  3000               	movlw	0
  7436     00C1                     u92_20:
  7437     00C1  00F0               	movwf	??_daUmPasso
  7438     00C2  01F1               	clrf	??_daUmPasso+1
  7439     00C3  0870               	movf	??_daUmPasso,w
  7440     00C4  0476               	iorwf	daUmPasso@sentido,w
  7441     00C5  00F2               	movwf	??_daUmPasso+2
  7442     00C6  0871               	movf	??_daUmPasso+1,w
  7443     00C7  00F3               	movwf	??_daUmPasso+3
  7444     00C8  0872               	movf	??_daUmPasso+2,w
  7445     00C9  0473               	iorwf	??_daUmPasso+3,w
  7446     00CA  1903               	btfsc	3,2
  7447     00CB  28CD               	goto	u93_21
  7448     00CC  28CE               	goto	u93_20
  7449     00CD                     u93_21:
  7450     00CD  28F8               	goto	i1l2127
  7451     00CE                     u93_20:
  7452     00CE                     i1l2121:
  7453                           
  7454                           ;main.c: 236:         position = position + incPos;
  7455     00CE  083D               	movf	_position,w
  7456     00CF  0764               	addwf	_incPos,w
  7457     00D0  00BD               	movwf	_position
  7458                           
  7459                           ;main.c: 237:         switch(passo){
  7460     00D1  28EA               	goto	i1l2125
  7461     00D2                     i1l667:	
  7462                           ;main.c: 239:                 do { LATAbits.LATA1 = 1; } while(0);
  7463                           
  7464     00D2  0022               	movlb	2	; select bank2
  7465     00D3  148C               	bsf	12,1	;volatile
  7466     00D4                     i1l669:	
  7467                           ;main.c: 240:                 do { LATAbits.LATA2 = 1; } while(0);
  7468                           
  7469     00D4  150C               	bsf	12,2	;volatile
  7470     00D5                     i1l671:	
  7471                           ;main.c: 241:                 do { LATAbits.LATA3 = 0; } while(0);
  7472                           
  7473     00D5  118C               	bcf	12,3	;volatile
  7474     00D6                     i1l673:	
  7475                           ;main.c: 242:                 do { LATAbits.LATA4 = 0; } while(0);
  7476                           
  7477     00D6  120C               	bcf	12,4	;volatile
  7478     00D7  293A               	goto	i1l743
  7479     00D8                     i1l677:	
  7480                           ;main.c: 245:                 do { LATAbits.LATA1 = 0; } while(0);
  7481                           
  7482     00D8  0022               	movlb	2	; select bank2
  7483     00D9  108C               	bcf	12,1	;volatile
  7484     00DA                     i1l679:	
  7485                           ;main.c: 246:                 do { LATAbits.LATA2 = 1; } while(0);
  7486                           
  7487     00DA  150C               	bsf	12,2	;volatile
  7488     00DB                     i1l681:	
  7489                           ;main.c: 247:                 do { LATAbits.LATA3 = 1; } while(0);
  7490                           
  7491     00DB  158C               	bsf	12,3	;volatile
  7492     00DC                     i1l683:	
  7493                           ;main.c: 248:                 do { LATAbits.LATA4 = 0; } while(0);
  7494                           
  7495     00DC  120C               	bcf	12,4	;volatile
  7496     00DD  293A               	goto	i1l743
  7497     00DE                     i1l686:	
  7498                           ;main.c: 251:                 do { LATAbits.LATA1 = 0; } while(0);
  7499                           
  7500     00DE  0022               	movlb	2	; select bank2
  7501     00DF  108C               	bcf	12,1	;volatile
  7502     00E0                     i1l688:	
  7503                           ;main.c: 252:                 do { LATAbits.LATA2 = 0; } while(0);
  7504                           
  7505     00E0  110C               	bcf	12,2	;volatile
  7506     00E1                     i1l690:	
  7507                           ;main.c: 253:                 do { LATAbits.LATA3 = 1; } while(0);
  7508                           
  7509     00E1  158C               	bsf	12,3	;volatile
  7510     00E2                     i1l692:	
  7511                           ;main.c: 254:                 do { LATAbits.LATA4 = 1; } while(0);
  7512                           
  7513     00E2  160C               	bsf	12,4	;volatile
  7514     00E3  293A               	goto	i1l743
  7515     00E4                     i1l695:	
  7516                           ;main.c: 257:                 do { LATAbits.LATA1 = 1; } while(0);
  7517                           
  7518     00E4  0022               	movlb	2	; select bank2
  7519     00E5  148C               	bsf	12,1	;volatile
  7520     00E6                     i1l697:	
  7521                           ;main.c: 258:                 do { LATAbits.LATA2 = 0; } while(0);
  7522                           
  7523     00E6  110C               	bcf	12,2	;volatile
  7524     00E7                     i1l699:	
  7525                           ;main.c: 259:                 do { LATAbits.LATA3 = 0; } while(0);
  7526                           
  7527     00E7  118C               	bcf	12,3	;volatile
  7528     00E8                     i1l701:	
  7529                           ;main.c: 260:                 do { LATAbits.LATA4 = 1; } while(0);
  7530                           
  7531     00E8  160C               	bsf	12,4	;volatile
  7532     00E9  293A               	goto	i1l743
  7533     00EA                     i1l2125:
  7534     00EA  083C               	movf	_passo,w
  7535                           
  7536                           ; Switch size 1, requested type "simple"
  7537                           ; Number of cases is 4, Range of values is 0 to 3
  7538                           ; switch strategies available:
  7539                           ; Name         Instructions Cycles
  7540                           ; simple_byte           13     7 (average)
  7541                           ; direct_byte           14     6 (fixed)
  7542                           ; jumptable            260     6 (fixed)
  7543                           ;	Chosen strategy is simple_byte
  7544     00EB  3A00               	xorlw	0	; case 0
  7545     00EC  1903               	skipnz
  7546     00ED  28D2               	goto	i1l667
  7547     00EE  3A01               	xorlw	1	; case 1
  7548     00EF  1903               	skipnz
  7549     00F0  28D8               	goto	i1l677
  7550     00F1  3A03               	xorlw	3	; case 2
  7551     00F2  1903               	skipnz
  7552     00F3  28DE               	goto	i1l686
  7553     00F4  3A01               	xorlw	1	; case 3
  7554     00F5  1903               	skipnz
  7555     00F6  28E4               	goto	i1l695
  7556     00F7  293A               	goto	i1l743
  7557     00F8                     i1l2127:
  7558     00F8  083B               	movf	_fim_curso,w
  7559     00F9  00F0               	movwf	??_daUmPasso
  7560     00FA  01F1               	clrf	??_daUmPasso+1
  7561     00FB  0876               	movf	daUmPasso@sentido,w
  7562     00FC  1903               	btfsc	3,2
  7563     00FD  28FF               	goto	u94_21
  7564     00FE  2901               	goto	u94_20
  7565     00FF                     u94_21:
  7566     00FF  3001               	movlw	1
  7567     0100  2902               	goto	u95_20
  7568     0101                     u94_20:
  7569     0101  3000               	movlw	0
  7570     0102                     u95_20:
  7571     0102  00F2               	movwf	??_daUmPasso+2
  7572     0103  01F3               	clrf	??_daUmPasso+3
  7573     0104  0870               	movf	??_daUmPasso,w
  7574     0105  0572               	andwf	??_daUmPasso+2,w
  7575     0106  00F4               	movwf	??_daUmPasso+4
  7576     0107  0871               	movf	??_daUmPasso+1,w
  7577     0108  0573               	andwf	??_daUmPasso+3,w
  7578     0109  00F5               	movwf	??_daUmPasso+5
  7579     010A  0874               	movf	??_daUmPasso+4,w
  7580     010B  0475               	iorwf	??_daUmPasso+5,w
  7581     010C  1903               	btfsc	3,2
  7582     010D  290F               	goto	u96_21
  7583     010E  2910               	goto	u96_20
  7584     010F                     u96_21:
  7585     010F  293A               	goto	i1l743
  7586     0110                     u96_20:
  7587     0110                     i1l2129:
  7588                           
  7589                           ;main.c: 265:         position = position - incPos;
  7590     0110  0864               	movf	_incPos,w
  7591     0111  023D               	subwf	_position,w
  7592     0112  00BD               	movwf	_position
  7593                           
  7594                           ;main.c: 266:         switch(passo){
  7595     0113  292C               	goto	i1l2133
  7596     0114                     i1l707:	
  7597                           ;main.c: 268:                 do { LATAbits.LATA4 = 1; } while(0);
  7598                           
  7599     0114  0022               	movlb	2	; select bank2
  7600     0115  160C               	bsf	12,4	;volatile
  7601     0116                     i1l709:	
  7602                           ;main.c: 269:                 do { LATAbits.LATA3 = 1; } while(0);
  7603                           
  7604     0116  158C               	bsf	12,3	;volatile
  7605     0117                     i1l711:	
  7606                           ;main.c: 270:                 do { LATAbits.LATA2 = 0; } while(0);
  7607                           
  7608     0117  110C               	bcf	12,2	;volatile
  7609     0118                     i1l713:	
  7610                           ;main.c: 271:                 do { LATAbits.LATA1 = 0; } while(0);
  7611                           
  7612     0118  108C               	bcf	12,1	;volatile
  7613     0119  293A               	goto	i1l743
  7614     011A                     i1l717:	
  7615                           ;main.c: 274:                 do { LATAbits.LATA4 = 0; } while(0);
  7616                           
  7617     011A  0022               	movlb	2	; select bank2
  7618     011B  120C               	bcf	12,4	;volatile
  7619     011C                     i1l719:	
  7620                           ;main.c: 275:                 do { LATAbits.LATA3 = 1; } while(0);
  7621                           
  7622     011C  158C               	bsf	12,3	;volatile
  7623     011D                     i1l721:	
  7624                           ;main.c: 276:                 do { LATAbits.LATA2 = 1; } while(0);
  7625                           
  7626     011D  150C               	bsf	12,2	;volatile
  7627     011E                     i1l723:	
  7628                           ;main.c: 277:                 do { LATAbits.LATA1 = 0; } while(0);
  7629                           
  7630     011E  108C               	bcf	12,1	;volatile
  7631     011F  293A               	goto	i1l743
  7632     0120                     i1l726:	
  7633                           ;main.c: 280:                 do { LATAbits.LATA4 = 0; } while(0);
  7634                           
  7635     0120  0022               	movlb	2	; select bank2
  7636     0121  120C               	bcf	12,4	;volatile
  7637     0122                     i1l728:	
  7638                           ;main.c: 281:                 do { LATAbits.LATA3 = 0; } while(0);
  7639                           
  7640     0122  118C               	bcf	12,3	;volatile
  7641     0123                     i1l730:	
  7642                           ;main.c: 282:                 do { LATAbits.LATA2 = 1; } while(0);
  7643                           
  7644     0123  150C               	bsf	12,2	;volatile
  7645     0124                     i1l732:	
  7646                           ;main.c: 283:                 do { LATAbits.LATA1 = 1; } while(0);
  7647                           
  7648     0124  148C               	bsf	12,1	;volatile
  7649     0125  293A               	goto	i1l743
  7650     0126                     i1l735:	
  7651                           ;main.c: 286:                 do { LATAbits.LATA4 = 1; } while(0);
  7652                           
  7653     0126  0022               	movlb	2	; select bank2
  7654     0127  160C               	bsf	12,4	;volatile
  7655     0128                     i1l737:	
  7656                           ;main.c: 287:                 do { LATAbits.LATA3 = 0; } while(0);
  7657                           
  7658     0128  118C               	bcf	12,3	;volatile
  7659     0129                     i1l739:	
  7660                           ;main.c: 288:                 do { LATAbits.LATA2 = 0; } while(0);
  7661                           
  7662     0129  110C               	bcf	12,2	;volatile
  7663     012A                     i1l741:	
  7664                           ;main.c: 289:                 do { LATAbits.LATA1 = 1; } while(0);
  7665                           
  7666     012A  148C               	bsf	12,1	;volatile
  7667     012B  293A               	goto	i1l743
  7668     012C                     i1l2133:
  7669     012C  083C               	movf	_passo,w
  7670                           
  7671                           ; Switch size 1, requested type "simple"
  7672                           ; Number of cases is 4, Range of values is 0 to 3
  7673                           ; switch strategies available:
  7674                           ; Name         Instructions Cycles
  7675                           ; simple_byte           13     7 (average)
  7676                           ; direct_byte           14     6 (fixed)
  7677                           ; jumptable            260     6 (fixed)
  7678                           ;	Chosen strategy is simple_byte
  7679     012D  3A00               	xorlw	0	; case 0
  7680     012E  1903               	skipnz
  7681     012F  2914               	goto	i1l707
  7682     0130  3A01               	xorlw	1	; case 1
  7683     0131  1903               	skipnz
  7684     0132  291A               	goto	i1l717
  7685     0133  3A03               	xorlw	3	; case 2
  7686     0134  1903               	skipnz
  7687     0135  2920               	goto	i1l726
  7688     0136  3A01               	xorlw	1	; case 3
  7689     0137  1903               	skipnz
  7690     0138  2926               	goto	i1l735
  7691     0139  293A               	goto	i1l743
  7692     013A                     i1l743:
  7693     013A  0008               	return
  7694     013B                     __end_of_daUmPasso:
  7695                           
  7696                           	psect	text46
  7697     0780                     __ptext46:	
  7698 ;; *************** function _CMP1_GetOutputStatus *****************
  7699 ;; Defined at:
  7700 ;;		line 69 in file "mcc_generated_files/cmp1.c"
  7701 ;; Parameters:    Size  Location     Type
  7702 ;;		None
  7703 ;; Auto vars:     Size  Location     Type
  7704 ;;		None
  7705 ;; Return value:  Size  Location     Type
  7706 ;;                  1    wreg      _Bool 
  7707 ;; Registers used:
  7708 ;;		wreg, status,2, status,0
  7709 ;; Tracked objects:
  7710 ;;		On entry : 0/0
  7711 ;;		On exit  : 0/0
  7712 ;;		Unchanged: 0/0
  7713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7714 ;;      Params:         0       0       0       0       0       0
  7715 ;;      Locals:         0       0       0       0       0       0
  7716 ;;      Temps:          0       0       0       0       0       0
  7717 ;;      Totals:         0       0       0       0       0       0
  7718 ;;Total ram usage:        0 bytes
  7719 ;; Hardware stack levels used: 1
  7720 ;; This function calls:
  7721 ;;		Nothing
  7722 ;; This function is called by:
  7723 ;;		_daUmPasso
  7724 ;;		_encontraFimCurso
  7725 ;; This function uses a non-reentrant model
  7726 ;;
  7727                           
  7728     0780                     _CMP1_GetOutputStatus:	
  7729                           ;psect for function _CMP1_GetOutputStatus
  7730                           
  7731     0780                     i1l2077:	
  7732                           ;incstack = 0
  7733                           ; Regs used in _CMP1_GetOutputStatus: [wreg+status,2+status,0]
  7734                           
  7735                           
  7736                           ;mcc_generated_files/cmp1.c: 71:  return (CMOUTbits.MC1OUT);
  7737     0780  0022               	movlb	2	; select bank2
  7738     0781  0815               	movf	21,w	;volatile
  7739     0782  3901               	andlw	1
  7740     0783                     i1l455:
  7741     0783  0008               	return
  7742     0784                     __end_of_CMP1_GetOutputStatus:
  7743                           
  7744                           	psect	text47
  7745     0628                     __ptext47:	
  7746 ;; *************** function _TMR0_ISR *****************
  7747 ;; Defined at:
  7748 ;;		line 108 in file "mcc_generated_files/tmr0.c"
  7749 ;; Parameters:    Size  Location     Type
  7750 ;;		None
  7751 ;; Auto vars:     Size  Location     Type
  7752 ;;		None
  7753 ;; Return value:  Size  Location     Type
  7754 ;;                  1    wreg      void 
  7755 ;; Registers used:
  7756 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7757 ;; Tracked objects:
  7758 ;;		On entry : 0/0
  7759 ;;		On exit  : 0/0
  7760 ;;		Unchanged: 0/0
  7761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7762 ;;      Params:         0       0       0       0       0       0
  7763 ;;      Locals:         0       0       0       0       0       0
  7764 ;;      Temps:          0       0       0       0       0       0
  7765 ;;      Totals:         0       0       0       0       0       0
  7766 ;;Total ram usage:        0 bytes
  7767 ;; Hardware stack levels used: 1
  7768 ;; Hardware stack levels required when called: 3
  7769 ;; This function calls:
  7770 ;;		_TMR0_CallBack
  7771 ;; This function is called by:
  7772 ;;		_INTERRUPT_InterruptManager
  7773 ;; This function uses a non-reentrant model
  7774 ;;
  7775                           
  7776     0628                     _TMR0_ISR:	
  7777                           ;psect for function _TMR0_ISR
  7778                           
  7779     0628                     i1l2497:	
  7780                           ;incstack = 0
  7781                           ; Regs used in _TMR0_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7782                           
  7783                           
  7784                           ;mcc_generated_files/tmr0.c: 110:     static volatile uint16_t CountCallBack = 0;;mcc_ge
      +                          nerated_files/tmr0.c: 113:     INTCONbits.TMR0IF = 0;
  7785     0628  110B               	bcf	11,2	;volatile
  7786     0629                     i1l2499:
  7787                           
  7788                           ;mcc_generated_files/tmr0.c: 115:     TMR0 = timer0ReloadVal;
  7789     0629  0020               	movlb	0	; select bank0
  7790     062A  0840               	movf	_timer0ReloadVal,w	;volatile
  7791     062B  0095               	movwf	21	;volatile
  7792                           
  7793                           ;mcc_generated_files/tmr0.c: 118:     if (++CountCallBack >= 2)
  7794     062C  3001               	movlw	1
  7795     062D  07B8               	addwf	TMR0_ISR@CountCallBack,f	;volatile
  7796     062E  3000               	movlw	0
  7797     062F  3DB9               	addwfc	TMR0_ISR@CountCallBack+1,f	;volatile
  7798     0630  3000               	movlw	0
  7799     0631  0239               	subwf	TMR0_ISR@CountCallBack+1,w	;volatile
  7800     0632  3002               	movlw	2
  7801     0633  1903               	skipnz
  7802     0634  0238               	subwf	TMR0_ISR@CountCallBack,w	;volatile
  7803     0635  1C03               	skipc
  7804     0636  2E38               	goto	u141_21
  7805     0637  2E39               	goto	u141_20
  7806     0638                     u141_21:
  7807     0638  2E3F               	goto	i1l372
  7808     0639                     u141_20:
  7809     0639                     i1l2501:
  7810                           
  7811                           ;mcc_generated_files/tmr0.c: 119:     {;mcc_generated_files/tmr0.c: 121:         TMR0_Ca
      +                          llBack();
  7812     0639  3186  26E4  3186   	fcall	_TMR0_CallBack
  7813     063C                     i1l2503:
  7814                           
  7815                           ;mcc_generated_files/tmr0.c: 124:         CountCallBack = 0;
  7816     063C  0020               	movlb	0	; select bank0
  7817     063D  01B8               	clrf	TMR0_ISR@CountCallBack	;volatile
  7818     063E  01B9               	clrf	TMR0_ISR@CountCallBack+1	;volatile
  7819     063F                     i1l372:
  7820     063F  0008               	return
  7821     0640                     __end_of_TMR0_ISR:
  7822                           
  7823                           	psect	text48
  7824     06E4                     __ptext48:	
  7825 ;; *************** function _TMR0_CallBack *****************
  7826 ;; Defined at:
  7827 ;;		line 130 in file "mcc_generated_files/tmr0.c"
  7828 ;; Parameters:    Size  Location     Type
  7829 ;;		None
  7830 ;; Auto vars:     Size  Location     Type
  7831 ;;		None
  7832 ;; Return value:  Size  Location     Type
  7833 ;;                  1    wreg      void 
  7834 ;; Registers used:
  7835 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7836 ;; Tracked objects:
  7837 ;;		On entry : 0/0
  7838 ;;		On exit  : 0/0
  7839 ;;		Unchanged: 0/0
  7840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7841 ;;      Params:         0       0       0       0       0       0
  7842 ;;      Locals:         0       0       0       0       0       0
  7843 ;;      Temps:          0       0       0       0       0       0
  7844 ;;      Totals:         0       0       0       0       0       0
  7845 ;;Total ram usage:        0 bytes
  7846 ;; Hardware stack levels used: 1
  7847 ;; Hardware stack levels required when called: 2
  7848 ;; This function calls:
  7849 ;;		NULL
  7850 ;;		_TMR0_DefaultInterruptHandler
  7851 ;;		_envia_Tx
  7852 ;; This function is called by:
  7853 ;;		_TMR0_ISR
  7854 ;; This function uses a non-reentrant model
  7855 ;;
  7856                           
  7857     06E4                     _TMR0_CallBack:	
  7858                           ;psect for function _TMR0_CallBack
  7859                           
  7860     06E4                     i1l2423:	
  7861                           ;incstack = 0
  7862                           ; Regs used in _TMR0_CallBack: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7863                           
  7864                           
  7865                           ;mcc_generated_files/tmr0.c: 134:     if(TMR0_InterruptHandler)
  7866     06E4  0020               	movlb	0	; select bank0
  7867     06E5  0868               	movf	_TMR0_InterruptHandler,w
  7868     06E6  0469               	iorwf	_TMR0_InterruptHandler+1,w
  7869     06E7  1903               	btfsc	3,2
  7870     06E8  2EEA               	goto	u128_21
  7871     06E9  2EEB               	goto	u128_20
  7872     06EA                     u128_21:
  7873     06EA  2EF0               	goto	i1l376
  7874     06EB                     u128_20:
  7875     06EB                     i1l2425:
  7876                           
  7877                           ;mcc_generated_files/tmr0.c: 135:     {;mcc_generated_files/tmr0.c: 136:         TMR0_In
      +                          terruptHandler();
  7878     06EB  0869               	movf	_TMR0_InterruptHandler+1,w
  7879     06EC  008A               	movwf	10
  7880     06ED  0868               	movf	_TMR0_InterruptHandler,w
  7881     06EE  000A               	callw
  7882     06EF  3186               	pagesel	$
  7883     06F0                     i1l376:
  7884     06F0  0008               	return
  7885     06F1                     __end_of_TMR0_CallBack:
  7886                           
  7887                           	psect	text49
  7888     0793                     __ptext49:	
  7889 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  7890 ;; Defined at:
  7891 ;;		line 144 in file "mcc_generated_files/tmr0.c"
  7892 ;; Parameters:    Size  Location     Type
  7893 ;;		None
  7894 ;; Auto vars:     Size  Location     Type
  7895 ;;		None
  7896 ;; Return value:  Size  Location     Type
  7897 ;;                  1    wreg      void 
  7898 ;; Registers used:
  7899 ;;		None
  7900 ;; Tracked objects:
  7901 ;;		On entry : 0/0
  7902 ;;		On exit  : 0/0
  7903 ;;		Unchanged: 0/0
  7904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7905 ;;      Params:         0       0       0       0       0       0
  7906 ;;      Locals:         0       0       0       0       0       0
  7907 ;;      Temps:          0       0       0       0       0       0
  7908 ;;      Totals:         0       0       0       0       0       0
  7909 ;;Total ram usage:        0 bytes
  7910 ;; Hardware stack levels used: 1
  7911 ;; This function calls:
  7912 ;;		Nothing
  7913 ;; This function is called by:
  7914 ;;		_TMR0_Initialize
  7915 ;;		_TMR0_CallBack
  7916 ;; This function uses a non-reentrant model
  7917 ;;
  7918                           
  7919     0793                     _TMR0_DefaultInterruptHandler:	
  7920                           ;psect for function _TMR0_DefaultInterruptHandler
  7921                           
  7922     0793                     i1l382:	
  7923                           ;incstack = 0
  7924                           ; Regs used in _TMR0_DefaultInterruptHandler: []
  7925                           
  7926     0793  0008               	return
  7927     0794                     __end_of_TMR0_DefaultInterruptHandler:
  7928                           
  7929                           	psect	text50
  7930     032B                     __ptext50:	
  7931 ;; *************** function _envia_Tx *****************
  7932 ;; Defined at:
  7933 ;;		line 143 in file "main.c"
  7934 ;; Parameters:    Size  Location     Type
  7935 ;;		None
  7936 ;; Auto vars:     Size  Location     Type
  7937 ;;		None
  7938 ;; Return value:  Size  Location     Type
  7939 ;;                  1    wreg      void 
  7940 ;; Registers used:
  7941 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7942 ;; Tracked objects:
  7943 ;;		On entry : 0/0
  7944 ;;		On exit  : 0/0
  7945 ;;		Unchanged: 0/0
  7946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7947 ;;      Params:         0       0       0       0       0       0
  7948 ;;      Locals:         0       0       0       0       0       0
  7949 ;;      Temps:          0       0       0       0       0       0
  7950 ;;      Totals:         0       0       0       0       0       0
  7951 ;;Total ram usage:        0 bytes
  7952 ;; Hardware stack levels used: 1
  7953 ;; Hardware stack levels required when called: 1
  7954 ;; This function calls:
  7955 ;;		_EUSART_Write
  7956 ;;		_bin_ascii
  7957 ;; This function is called by:
  7958 ;;		_main
  7959 ;;		_TMR0_CallBack
  7960 ;; This function uses a non-reentrant model
  7961 ;;
  7962                           
  7963     032B                     _envia_Tx:	
  7964                           ;psect for function _envia_Tx
  7965                           
  7966     032B                     i1l2189:	
  7967                           ;incstack = 0
  7968                           ; Regs used in _envia_Tx: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7969                           
  7970                           
  7971                           ;main.c: 144:     EUSART_Write(bin_ascii(dTx.n3));
  7972     032B  0020               	movlb	0	; select bank0
  7973     032C  0E25               	swapf	_dTx+1,w
  7974     032D  390F               	andlw	15
  7975     032E  3186  2682  3183   	fcall	_bin_ascii
  7976     0331  3184  24FD  3183   	fcall	_EUSART_Write
  7977                           
  7978                           ;main.c: 145:     EUSART_Write(bin_ascii(dTx.n2));
  7979     0334  0020               	movlb	0	; select bank0
  7980     0335  0825               	movf	_dTx+1,w
  7981     0336  390F               	andlw	15
  7982     0337  3186  2682  3183   	fcall	_bin_ascii
  7983     033A  3184  24FD  3183   	fcall	_EUSART_Write
  7984                           
  7985                           ;main.c: 146:     EUSART_Write(bin_ascii(dTx.n1));
  7986     033D  0020               	movlb	0	; select bank0
  7987     033E  0E24               	swapf	_dTx,w
  7988     033F  390F               	andlw	15
  7989     0340  3186  2682  3183   	fcall	_bin_ascii
  7990     0343  3184  24FD  3183   	fcall	_EUSART_Write
  7991                           
  7992                           ;main.c: 147:     EUSART_Write(bin_ascii(dTx.n0));
  7993     0346  0020               	movlb	0	; select bank0
  7994     0347  0824               	movf	_dTx,w
  7995     0348  390F               	andlw	15
  7996     0349  3186  2682  3183   	fcall	_bin_ascii
  7997     034C  3184  24FD  3183   	fcall	_EUSART_Write
  7998                           
  7999                           ;main.c: 148:     EUSART_Write(bin_ascii(tTx.n3));
  8000     034F  0020               	movlb	0	; select bank0
  8001     0350  0E27               	swapf	_tTx+1,w
  8002     0351  390F               	andlw	15
  8003     0352  3186  2682  3183   	fcall	_bin_ascii
  8004     0355  3184  24FD  3183   	fcall	_EUSART_Write
  8005                           
  8006                           ;main.c: 149:     EUSART_Write(bin_ascii(tTx.n2));
  8007     0358  0020               	movlb	0	; select bank0
  8008     0359  0827               	movf	_tTx+1,w
  8009     035A  390F               	andlw	15
  8010     035B  3186  2682  3183   	fcall	_bin_ascii
  8011     035E  3184  24FD  3183   	fcall	_EUSART_Write
  8012                           
  8013                           ;main.c: 150:     EUSART_Write(bin_ascii(tTx.n1));
  8014     0361  0020               	movlb	0	; select bank0
  8015     0362  0E26               	swapf	_tTx,w
  8016     0363  390F               	andlw	15
  8017     0364  3186  2682  3183   	fcall	_bin_ascii
  8018     0367  3184  24FD  3183   	fcall	_EUSART_Write
  8019                           
  8020                           ;main.c: 151:     EUSART_Write(bin_ascii(tTx.n0));
  8021     036A  0020               	movlb	0	; select bank0
  8022     036B  0826               	movf	_tTx,w
  8023     036C  390F               	andlw	15
  8024     036D  3186  2682  3183   	fcall	_bin_ascii
  8025     0370  3184  24FD  3183   	fcall	_EUSART_Write
  8026                           
  8027                           ;main.c: 152:     EUSART_Write(0x0D);
  8028     0373  300D               	movlw	13
  8029     0374  3184  24FD  3183   	fcall	_EUSART_Write
  8030     0377                     i1l598:
  8031     0377  0008               	return
  8032     0378                     __end_of_envia_Tx:
  8033                           
  8034                           	psect	text51
  8035     0682                     __ptext51:	
  8036 ;; *************** function _bin_ascii *****************
  8037 ;; Defined at:
  8038 ;;		line 155 in file "main.c"
  8039 ;; Parameters:    Size  Location     Type
  8040 ;;  vBin            1    wreg     unsigned char 
  8041 ;; Auto vars:     Size  Location     Type
  8042 ;;  vBin            1    0[COMMON] unsigned char 
  8043 ;; Return value:  Size  Location     Type
  8044 ;;                  1    wreg      unsigned char 
  8045 ;; Registers used:
  8046 ;;		wreg, status,2, status,0
  8047 ;; Tracked objects:
  8048 ;;		On entry : 0/0
  8049 ;;		On exit  : 0/0
  8050 ;;		Unchanged: 0/0
  8051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8052 ;;      Params:         0       0       0       0       0       0
  8053 ;;      Locals:         1       0       0       0       0       0
  8054 ;;      Temps:          0       0       0       0       0       0
  8055 ;;      Totals:         1       0       0       0       0       0
  8056 ;;Total ram usage:        1 bytes
  8057 ;; Hardware stack levels used: 1
  8058 ;; This function calls:
  8059 ;;		Nothing
  8060 ;; This function is called by:
  8061 ;;		_envia_Tx
  8062 ;; This function uses a non-reentrant model
  8063 ;;
  8064                           
  8065     0682                     _bin_ascii:	
  8066                           ;psect for function _bin_ascii
  8067                           
  8068                           
  8069                           ;incstack = 0
  8070                           ; Regs used in _bin_ascii: [wreg+status,2+status,0]
  8071                           ;bin_ascii@vBin stored from wreg
  8072     0682  00F0               	movwf	bin_ascii@vBin
  8073     0683                     i1l2135:
  8074                           
  8075                           ;main.c: 156:     vBin = vBin & 0x0F;
  8076     0683  0870               	movf	bin_ascii@vBin,w
  8077     0684  390F               	andlw	15
  8078     0685  00F0               	movwf	bin_ascii@vBin
  8079     0686                     i1l2137:
  8080                           
  8081                           ;main.c: 157:     if(vBin<10){
  8082     0686  300A               	movlw	10
  8083     0687  0270               	subwf	bin_ascii@vBin,w
  8084     0688  1803               	skipnc
  8085     0689  2E8B               	goto	u97_21
  8086     068A  2E8C               	goto	u97_20
  8087     068B                     u97_21:
  8088     068B  2E90               	goto	i1l2141
  8089     068C                     u97_20:
  8090     068C                     i1l2139:
  8091                           
  8092                           ;main.c: 158:         vBin = vBin + 0x30;
  8093     068C  0870               	movf	bin_ascii@vBin,w
  8094     068D  3E30               	addlw	48
  8095     068E  00F0               	movwf	bin_ascii@vBin
  8096                           
  8097                           ;main.c: 159:     }
  8098     068F  2E93               	goto	i1l2143
  8099     0690                     i1l2141:
  8100                           
  8101                           ;main.c: 161:         vBin = vBin + 0x37;
  8102     0690  0870               	movf	bin_ascii@vBin,w
  8103     0691  3E37               	addlw	55
  8104     0692  00F0               	movwf	bin_ascii@vBin
  8105     0693                     i1l2143:
  8106                           
  8107                           ;main.c: 163:     return vBin;
  8108     0693  0870               	movf	bin_ascii@vBin,w
  8109     0694                     i1l603:
  8110     0694  0008               	return
  8111     0695                     __end_of_bin_ascii:
  8112                           
  8113                           	psect	text52
  8114     04FD                     __ptext52:	
  8115 ;; *************** function _EUSART_Write *****************
  8116 ;; Defined at:
  8117 ;;		line 173 in file "mcc_generated_files/eusart.c"
  8118 ;; Parameters:    Size  Location     Type
  8119 ;;  txData          1    wreg     unsigned char 
  8120 ;; Auto vars:     Size  Location     Type
  8121 ;;  txData          1    1[COMMON] unsigned char 
  8122 ;; Return value:  Size  Location     Type
  8123 ;;                  1    wreg      void 
  8124 ;; Registers used:
  8125 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8126 ;; Tracked objects:
  8127 ;;		On entry : 0/0
  8128 ;;		On exit  : 0/0
  8129 ;;		Unchanged: 0/0
  8130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8131 ;;      Params:         0       0       0       0       0       0
  8132 ;;      Locals:         1       0       0       0       0       0
  8133 ;;      Temps:          1       0       0       0       0       0
  8134 ;;      Totals:         2       0       0       0       0       0
  8135 ;;Total ram usage:        2 bytes
  8136 ;; Hardware stack levels used: 1
  8137 ;; This function calls:
  8138 ;;		Nothing
  8139 ;; This function is called by:
  8140 ;;		_envia_Tx
  8141 ;; This function uses a non-reentrant model
  8142 ;;
  8143                           
  8144     04FD                     _EUSART_Write:	
  8145                           ;psect for function _EUSART_Write
  8146                           
  8147                           
  8148                           ;incstack = 0
  8149                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
  8150                           ;EUSART_Write@txData stored from wreg
  8151     04FD  00F1               	movwf	EUSART_Write@txData
  8152     04FE                     i1l2081:
  8153     04FE                     i1l2083:	
  8154                           ;mcc_generated_files/eusart.c: 173: void EUSART_Write(uint8_t txData);mcc_generated_file
      +                          s/eusart.c: 174: {;mcc_generated_files/eusart.c: 175:     while(0 == eusartTxBufferRemai
      +                          ning)
  8155                           
  8156                           
  8157                           ;mcc_generated_files/eusart.c: 175:     while(0 == eusartTxBufferRemaining)
  8158     04FE  0020               	movlb	0	; select bank0
  8159     04FF  0845               	movf	_eusartTxBufferRemaining,w	;volatile
  8160     0500  1903               	btfsc	3,2
  8161     0501  2D03               	goto	u86_21
  8162     0502  2D04               	goto	u86_20
  8163     0503                     u86_21:
  8164     0503  2CFE               	goto	i1l2083
  8165     0504                     u86_20:
  8166     0504                     i1l293:
  8167                           
  8168                           ;mcc_generated_files/eusart.c: 179:     if(0 == PIE1bits.TXIE)
  8169     0504  0021               	movlb	1	; select bank1
  8170     0505  1A11               	btfsc	17,4	;volatile
  8171     0506  2D08               	goto	u87_21
  8172     0507  2D09               	goto	u87_20
  8173     0508                     u87_21:
  8174     0508  2D0D               	goto	i1l294
  8175     0509                     u87_20:
  8176     0509                     i1l2085:
  8177                           
  8178                           ;mcc_generated_files/eusart.c: 180:     {;mcc_generated_files/eusart.c: 181:         TXR
      +                          EG = txData;
  8179     0509  0871               	movf	EUSART_Write@txData,w
  8180     050A  0023               	movlb	3	; select bank3
  8181     050B  009A               	movwf	26	;volatile
  8182                           
  8183                           ;mcc_generated_files/eusart.c: 182:     }
  8184     050C  2D22               	goto	i1l2097
  8185     050D                     i1l294:	
  8186                           ;mcc_generated_files/eusart.c: 183:     else
  8187                           
  8188                           
  8189                           ;mcc_generated_files/eusart.c: 184:     {;mcc_generated_files/eusart.c: 185:         PIE
      +                          1bits.TXIE = 0;
  8190     050D  1211               	bcf	17,4	;volatile
  8191     050E                     i1l2087:
  8192                           
  8193                           ;mcc_generated_files/eusart.c: 186:         eusartTxBuffer[eusartTxHead++] = txData;
  8194     050E  0020               	movlb	0	; select bank0
  8195     050F  0847               	movf	_eusartTxHead,w
  8196     0510  3EB8               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  8197     0511  0086               	movwf	6
  8198     0512  0187               	clrf	7
  8199     0513  0871               	movf	EUSART_Write@txData,w
  8200     0514  0081               	movwf	1
  8201     0515                     i1l2089:
  8202     0515  3001               	movlw	1
  8203     0516  00F0               	movwf	??_EUSART_Write
  8204     0517  0870               	movf	??_EUSART_Write,w
  8205     0518  07C7               	addwf	_eusartTxHead,f	;volatile
  8206     0519                     i1l2091:
  8207                           
  8208                           ;mcc_generated_files/eusart.c: 187:         if(sizeof(eusartTxBuffer) <= eusartTxHead)
  8209     0519  3008               	movlw	8
  8210     051A  0247               	subwf	_eusartTxHead,w	;volatile
  8211     051B  1C03               	skipc
  8212     051C  2D1E               	goto	u88_21
  8213     051D  2D1F               	goto	u88_20
  8214     051E                     u88_21:
  8215     051E  2D20               	goto	i1l2095
  8216     051F                     u88_20:
  8217     051F                     i1l2093:
  8218                           
  8219                           ;mcc_generated_files/eusart.c: 188:         {;mcc_generated_files/eusart.c: 189:        
      +                               eusartTxHead = 0;
  8220     051F  01C7               	clrf	_eusartTxHead	;volatile
  8221     0520                     i1l2095:
  8222                           
  8223                           ;mcc_generated_files/eusart.c: 191:         eusartTxBufferRemaining--;
  8224     0520  3001               	movlw	1
  8225     0521  02C5               	subwf	_eusartTxBufferRemaining,f	;volatile
  8226     0522                     i1l2097:
  8227                           
  8228                           ;mcc_generated_files/eusart.c: 193:     PIE1bits.TXIE = 1;
  8229     0522  0021               	movlb	1	; select bank1
  8230     0523  1611               	bsf	17,4	;volatile
  8231     0524                     i1l297:
  8232     0524  0008               	return
  8233     0525                     __end_of_EUSART_Write:
  8234                           
  8235                           	psect	text53
  8236     0794                     __ptext53:	
  8237 ;; *************** function _PIN_MANAGER_IOC *****************
  8238 ;; Defined at:
  8239 ;;		line 98 in file "mcc_generated_files/pin_manager.c"
  8240 ;; Parameters:    Size  Location     Type
  8241 ;;		None
  8242 ;; Auto vars:     Size  Location     Type
  8243 ;;		None
  8244 ;; Return value:  Size  Location     Type
  8245 ;;                  1    wreg      void 
  8246 ;; Registers used:
  8247 ;;		None
  8248 ;; Tracked objects:
  8249 ;;		On entry : 0/0
  8250 ;;		On exit  : 0/0
  8251 ;;		Unchanged: 0/0
  8252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8253 ;;      Params:         0       0       0       0       0       0
  8254 ;;      Locals:         0       0       0       0       0       0
  8255 ;;      Temps:          0       0       0       0       0       0
  8256 ;;      Totals:         0       0       0       0       0       0
  8257 ;;Total ram usage:        0 bytes
  8258 ;; Hardware stack levels used: 1
  8259 ;; This function calls:
  8260 ;;		Nothing
  8261 ;; This function is called by:
  8262 ;;		_INTERRUPT_InterruptManager
  8263 ;; This function uses a non-reentrant model
  8264 ;;
  8265                           
  8266     0794                     _PIN_MANAGER_IOC:	
  8267                           ;psect for function _PIN_MANAGER_IOC
  8268                           
  8269     0794                     i1l73:	
  8270                           ;incstack = 0
  8271                           ; Regs used in _PIN_MANAGER_IOC: []
  8272                           
  8273     0794  0008               	return
  8274     0795                     __end_of_PIN_MANAGER_IOC:
  8275                           
  8276                           	psect	text54
  8277     0571                     __ptext54:	
  8278 ;; *************** function _EUSART_Transmit_ISR *****************
  8279 ;; Defined at:
  8280 ;;		line 197 in file "mcc_generated_files/eusart.c"
  8281 ;; Parameters:    Size  Location     Type
  8282 ;;		None
  8283 ;; Auto vars:     Size  Location     Type
  8284 ;;		None
  8285 ;; Return value:  Size  Location     Type
  8286 ;;                  1    wreg      void 
  8287 ;; Registers used:
  8288 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8289 ;; Tracked objects:
  8290 ;;		On entry : 0/0
  8291 ;;		On exit  : 0/0
  8292 ;;		Unchanged: 0/0
  8293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8294 ;;      Params:         0       0       0       0       0       0
  8295 ;;      Locals:         0       0       0       0       0       0
  8296 ;;      Temps:          1       0       0       0       0       0
  8297 ;;      Totals:         1       0       0       0       0       0
  8298 ;;Total ram usage:        1 bytes
  8299 ;; Hardware stack levels used: 1
  8300 ;; This function calls:
  8301 ;;		Nothing
  8302 ;; This function is called by:
  8303 ;;		_EUSART_Initialize
  8304 ;;		_INTERRUPT_InterruptManager
  8305 ;; This function uses a non-reentrant model
  8306 ;;
  8307                           
  8308     0571                     _EUSART_Transmit_ISR:	
  8309                           ;psect for function _EUSART_Transmit_ISR
  8310                           
  8311     0571                     i1l2511:	
  8312                           ;incstack = 0
  8313                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  8314                           
  8315                           
  8316                           ;mcc_generated_files/eusart.c: 201:     if(sizeof(eusartTxBuffer) > eusartTxBufferRemain
      +                          ing)
  8317     0571  3008               	movlw	8
  8318     0572  0020               	movlb	0	; select bank0
  8319     0573  0245               	subwf	_eusartTxBufferRemaining,w	;volatile
  8320     0574  1803               	skipnc
  8321     0575  2D77               	goto	u143_21
  8322     0576  2D78               	goto	u143_20
  8323     0577                     u143_21:
  8324     0577  2D90               	goto	i1l300
  8325     0578                     u143_20:
  8326     0578                     i1l2513:
  8327                           
  8328                           ;mcc_generated_files/eusart.c: 202:     {;mcc_generated_files/eusart.c: 203:         TXR
      +                          EG = eusartTxBuffer[eusartTxTail++];
  8329     0578  0846               	movf	_eusartTxTail,w
  8330     0579  3EB8               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  8331     057A  0086               	movwf	6
  8332     057B  0187               	clrf	7
  8333     057C  0801               	movf	1,w
  8334     057D  0023               	movlb	3	; select bank3
  8335     057E  009A               	movwf	26	;volatile
  8336     057F                     i1l2515:
  8337     057F  3001               	movlw	1
  8338     0580  00F0               	movwf	??_EUSART_Transmit_ISR
  8339     0581  0870               	movf	??_EUSART_Transmit_ISR,w
  8340     0582  0020               	movlb	0	; select bank0
  8341     0583  07C6               	addwf	_eusartTxTail,f	;volatile
  8342     0584                     i1l2517:
  8343                           
  8344                           ;mcc_generated_files/eusart.c: 204:         if(sizeof(eusartTxBuffer) <= eusartTxTail)
  8345     0584  3008               	movlw	8
  8346     0585  0246               	subwf	_eusartTxTail,w	;volatile
  8347     0586  1C03               	skipc
  8348     0587  2D89               	goto	u144_21
  8349     0588  2D8A               	goto	u144_20
  8350     0589                     u144_21:
  8351     0589  2D8B               	goto	i1l2521
  8352     058A                     u144_20:
  8353     058A                     i1l2519:
  8354                           
  8355                           ;mcc_generated_files/eusart.c: 205:         {;mcc_generated_files/eusart.c: 206:        
      +                               eusartTxTail = 0;
  8356     058A  01C6               	clrf	_eusartTxTail	;volatile
  8357     058B                     i1l2521:
  8358                           
  8359                           ;mcc_generated_files/eusart.c: 208:         eusartTxBufferRemaining++;
  8360     058B  3001               	movlw	1
  8361     058C  00F0               	movwf	??_EUSART_Transmit_ISR
  8362     058D  0870               	movf	??_EUSART_Transmit_ISR,w
  8363     058E  07C5               	addwf	_eusartTxBufferRemaining,f	;volatile
  8364                           
  8365                           ;mcc_generated_files/eusart.c: 209:     }
  8366     058F  2D92               	goto	i1l303
  8367     0590                     i1l300:	
  8368                           ;mcc_generated_files/eusart.c: 210:     else
  8369                           
  8370                           
  8371                           ;mcc_generated_files/eusart.c: 211:     {;mcc_generated_files/eusart.c: 212:         PIE
      +                          1bits.TXIE = 0;
  8372     0590  0021               	movlb	1	; select bank1
  8373     0591  1211               	bcf	17,4	;volatile
  8374     0592                     i1l303:
  8375     0592  0008               	return
  8376     0593                     __end_of_EUSART_Transmit_ISR:
  8377                           
  8378                           	psect	text55
  8379     0784                     __ptext55:	
  8380 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
  8381 ;; Defined at:
  8382 ;;		line 252 in file "mcc_generated_files/eusart.c"
  8383 ;; Parameters:    Size  Location     Type
  8384 ;;		None
  8385 ;; Auto vars:     Size  Location     Type
  8386 ;;		None
  8387 ;; Return value:  Size  Location     Type
  8388 ;;                  1    wreg      void 
  8389 ;; Registers used:
  8390 ;;		None
  8391 ;; Tracked objects:
  8392 ;;		On entry : 0/0
  8393 ;;		On exit  : 0/0
  8394 ;;		Unchanged: 0/0
  8395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8396 ;;      Params:         0       0       0       0       0       0
  8397 ;;      Locals:         0       0       0       0       0       0
  8398 ;;      Temps:          0       0       0       0       0       0
  8399 ;;      Totals:         0       0       0       0       0       0
  8400 ;;Total ram usage:        0 bytes
  8401 ;; Hardware stack levels used: 1
  8402 ;; This function calls:
  8403 ;;		Nothing
  8404 ;; This function is called by:
  8405 ;;		_EUSART_Initialize
  8406 ;;		_EUSART_Receive_ISR
  8407 ;; This function uses a non-reentrant model
  8408 ;;
  8409                           
  8410     0784                     _EUSART_DefaultOverrunErrorHandler:	
  8411                           ;psect for function _EUSART_DefaultOverrunErrorHandler
  8412                           
  8413     0784                     i1l2419:	
  8414                           ;incstack = 0
  8415                           ; Regs used in _EUSART_DefaultOverrunErrorHandler: []
  8416                           
  8417                           
  8418                           ;mcc_generated_files/eusart.c: 255:     RCSTAbits.CREN = 0;
  8419     0784  0023               	movlb	3	; select bank3
  8420     0785  121D               	bcf	29,4	;volatile
  8421                           
  8422                           ;mcc_generated_files/eusart.c: 256:     RCSTAbits.CREN = 1;
  8423     0786  161D               	bsf	29,4	;volatile
  8424     0787                     i1l320:
  8425     0787  0008               	return
  8426     0788                     __end_of_EUSART_DefaultOverrunErrorHandler:
  8427                           
  8428                           	psect	text56
  8429     0795                     __ptext56:	
  8430 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
  8431 ;; Defined at:
  8432 ;;		line 250 in file "mcc_generated_files/eusart.c"
  8433 ;; Parameters:    Size  Location     Type
  8434 ;;		None
  8435 ;; Auto vars:     Size  Location     Type
  8436 ;;		None
  8437 ;; Return value:  Size  Location     Type
  8438 ;;                  1    wreg      void 
  8439 ;; Registers used:
  8440 ;;		None
  8441 ;; Tracked objects:
  8442 ;;		On entry : 0/0
  8443 ;;		On exit  : 0/0
  8444 ;;		Unchanged: 0/0
  8445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8446 ;;      Params:         0       0       0       0       0       0
  8447 ;;      Locals:         0       0       0       0       0       0
  8448 ;;      Temps:          0       0       0       0       0       0
  8449 ;;      Totals:         0       0       0       0       0       0
  8450 ;;Total ram usage:        0 bytes
  8451 ;; Hardware stack levels used: 1
  8452 ;; This function calls:
  8453 ;;		Nothing
  8454 ;; This function is called by:
  8455 ;;		_EUSART_Initialize
  8456 ;;		_EUSART_Receive_ISR
  8457 ;; This function uses a non-reentrant model
  8458 ;;
  8459                           
  8460     0795                     _EUSART_DefaultFramingErrorHandler:	
  8461                           ;psect for function _EUSART_DefaultFramingErrorHandler
  8462                           
  8463     0795                     i1l317:	
  8464                           ;incstack = 0
  8465                           ; Regs used in _EUSART_DefaultFramingErrorHandler: []
  8466                           
  8467     0795  0008               	return
  8468     0796                     __end_of_EUSART_DefaultFramingErrorHandler:
  8469                           
  8470                           	psect	text57
  8471     0788                     __ptext57:	
  8472 ;; *************** function _EUSART_DefaultErrorHandler *****************
  8473 ;; Defined at:
  8474 ;;		line 260 in file "mcc_generated_files/eusart.c"
  8475 ;; Parameters:    Size  Location     Type
  8476 ;;		None
  8477 ;; Auto vars:     Size  Location     Type
  8478 ;;		None
  8479 ;; Return value:  Size  Location     Type
  8480 ;;                  1    wreg      void 
  8481 ;; Registers used:
  8482 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8483 ;; Tracked objects:
  8484 ;;		On entry : 0/0
  8485 ;;		On exit  : 0/0
  8486 ;;		Unchanged: 0/0
  8487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8488 ;;      Params:         0       0       0       0       0       0
  8489 ;;      Locals:         0       0       0       0       0       0
  8490 ;;      Temps:          0       0       0       0       0       0
  8491 ;;      Totals:         0       0       0       0       0       0
  8492 ;;Total ram usage:        0 bytes
  8493 ;; Hardware stack levels used: 1
  8494 ;; Hardware stack levels required when called: 1
  8495 ;; This function calls:
  8496 ;;		_EUSART_RxDataHandler
  8497 ;; This function is called by:
  8498 ;;		_EUSART_Initialize
  8499 ;;		_EUSART_Receive_ISR
  8500 ;; This function uses a non-reentrant model
  8501 ;;
  8502                           
  8503     0788                     _EUSART_DefaultErrorHandler:	
  8504                           ;psect for function _EUSART_DefaultErrorHandler
  8505                           
  8506     0788                     i1l2421:	
  8507                           ;incstack = 0
  8508                           ; Regs used in _EUSART_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  8509                           
  8510                           
  8511                           ;mcc_generated_files/eusart.c: 261:     EUSART_RxDataHandler();
  8512     0788  3186  260F  3187   	fcall	_EUSART_RxDataHandler
  8513     078B                     i1l323:
  8514     078B  0008               	return
  8515     078C                     __end_of_EUSART_DefaultErrorHandler:
  8516                           
  8517                           	psect	text58
  8518     060F                     __ptext58:	
  8519 ;; *************** function _EUSART_RxDataHandler *****************
  8520 ;; Defined at:
  8521 ;;		line 240 in file "mcc_generated_files/eusart.c"
  8522 ;; Parameters:    Size  Location     Type
  8523 ;;		None
  8524 ;; Auto vars:     Size  Location     Type
  8525 ;;		None
  8526 ;; Return value:  Size  Location     Type
  8527 ;;                  1    wreg      void 
  8528 ;; Registers used:
  8529 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8530 ;; Tracked objects:
  8531 ;;		On entry : 0/0
  8532 ;;		On exit  : 0/0
  8533 ;;		Unchanged: 0/0
  8534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8535 ;;      Params:         0       0       0       0       0       0
  8536 ;;      Locals:         0       0       0       0       0       0
  8537 ;;      Temps:          1       0       0       0       0       0
  8538 ;;      Totals:         1       0       0       0       0       0
  8539 ;;Total ram usage:        1 bytes
  8540 ;; Hardware stack levels used: 1
  8541 ;; This function calls:
  8542 ;;		Nothing
  8543 ;; This function is called by:
  8544 ;;		_EUSART_Receive_ISR
  8545 ;;		_EUSART_DefaultErrorHandler
  8546 ;; This function uses a non-reentrant model
  8547 ;;
  8548                           
  8549     060F                     _EUSART_RxDataHandler:	
  8550                           ;psect for function _EUSART_RxDataHandler
  8551                           
  8552     060F                     i1l2159:	
  8553                           ;incstack = 0
  8554                           ; Regs used in _EUSART_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
  8555                           
  8556                           
  8557                           ;mcc_generated_files/eusart.c: 242:     eusartRxBuffer[eusartRxHead++] = RCREG;
  8558     060F  0020               	movlb	0	; select bank0
  8559     0610  0844               	movf	_eusartRxHead,w
  8560     0611  3EB0               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  8561     0612  0086               	movwf	6
  8562     0613  0187               	clrf	7
  8563     0614  0023               	movlb	3	; select bank3
  8564     0615  0819               	movf	25,w	;volatile
  8565     0616  0081               	movwf	1
  8566     0617                     i1l2161:
  8567     0617  3001               	movlw	1
  8568     0618  00F0               	movwf	??_EUSART_RxDataHandler
  8569     0619  0870               	movf	??_EUSART_RxDataHandler,w
  8570     061A  0020               	movlb	0	; select bank0
  8571     061B  07C4               	addwf	_eusartRxHead,f	;volatile
  8572     061C                     i1l2163:
  8573                           
  8574                           ;mcc_generated_files/eusart.c: 243:     if(sizeof(eusartRxBuffer) <= eusartRxHead)
  8575     061C  3008               	movlw	8
  8576     061D  0244               	subwf	_eusartRxHead,w	;volatile
  8577     061E  1C03               	skipc
  8578     061F  2E21               	goto	u99_21
  8579     0620  2E22               	goto	u99_20
  8580     0621                     u99_21:
  8581     0621  2E23               	goto	i1l2167
  8582     0622                     u99_20:
  8583     0622                     i1l2165:
  8584                           
  8585                           ;mcc_generated_files/eusart.c: 244:     {;mcc_generated_files/eusart.c: 245:         eus
      +                          artRxHead = 0;
  8586     0622  01C4               	clrf	_eusartRxHead	;volatile
  8587     0623                     i1l2167:
  8588                           
  8589                           ;mcc_generated_files/eusart.c: 247:     eusartRxCount++;
  8590     0623  3001               	movlw	1
  8591     0624  00F0               	movwf	??_EUSART_RxDataHandler
  8592     0625  0870               	movf	??_EUSART_RxDataHandler,w
  8593     0626  07C2               	addwf	_eusartRxCount,f	;volatile
  8594     0627                     i1l314:
  8595     0627  0008               	return
  8596     0628                     __end_of_EUSART_RxDataHandler:
  8597     007E                     btemp	set	126	;btemp
  8598     007E                     int$flags	set	126
  8599     007E                     wtemp0	set	126
  8600                           
  8601                           	psect	config
  8602                           
  8603                           ;Config register CONFIG1 @ 0x8007
  8604                           ;	Oscillator Selection
  8605                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  8606                           ;	Watchdog Timer Enable
  8607                           ;	WDTE = OFF, WDT disabled
  8608                           ;	Power-up Timer Enable
  8609                           ;	PWRTE = OFF, PWRT disabled
  8610                           ;	MCLR Pin Function Select
  8611                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  8612                           ;	Flash Program Memory Code Protection
  8613                           ;	CP = OFF, Program memory code protection is disabled
  8614                           ;	Data Memory Code Protection
  8615                           ;	CPD = OFF, Data memory code protection is disabled
  8616                           ;	Brown-out Reset Enable
  8617                           ;	BOREN = ON, Brown-out Reset enabled
  8618                           ;	Clock Out Enable
  8619                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  8620                           ;	Internal/External Switchover
  8621                           ;	IESO = ON, Internal/External Switchover mode is enabled
  8622                           ;	Fail-Safe Clock Monitor Enable
  8623                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  8624     8007                     	org	32775
  8625     8007  3FE4               	dw	16356
  8626                           
  8627                           ;Config register CONFIG2 @ 0x8008
  8628                           ;	Flash Memory Self-Write Protection
  8629                           ;	WRT = OFF, Write protection off
  8630                           ;	PLL Enable
  8631                           ;	PLLEN = OFF, 4x PLL disabled
  8632                           ;	Stack Overflow/Underflow Reset Enable
  8633                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  8634                           ;	Brown-out Reset Voltage Selection
  8635                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  8636                           ;	In-Circuit Debugger Mode
  8637                           ;	DEBUG = 0x1, unprogrammed default
  8638                           ;	Low-Voltage Programming Enable
  8639                           ;	LVP = ON, Low-voltage programming enabled
  8640     8008                     	org	32776
  8641     8008  3EFF               	dw	16127

Data Sizes:
    Strings     0
    Constant    0
    Data        12
    BSS         76
    Persistent  48
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     18      76
    BANK1            80      4      50
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), NULL(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), NULL(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), NULL(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), receive(), NULL(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), receive(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), NULL(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> envia_Tx(), TMR0_DefaultInterruptHandler(), NULL(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> envia_Tx(), TMR0_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> fluxcontrol(), TMR6_DefaultInterruptHandler(), NULL(), 

    TMR6_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> fluxcontrol(), TMR6_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _analisa_Rx->i1___lwdiv
    _fluxcontrol->i1___lwdiv
    i1___lwdiv->i1___wmul
    _fluxpos->_daUmPasso
    _envia_Tx->_EUSART_Write
    _EUSART_Receive_ISR->_EUSART_RxDataHandler
    _EUSART_DefaultErrorHandler->_EUSART_RxDataHandler

Critical Paths under _main in BANK0

    _pwmcontrol->___lwdiv
    ___lwdiv->___wmul
    _TMR6_Initialize->_TMR6_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _receive->_analisa_Rx
    _TMR6_ISR->_fluxcontrol

Critical Paths under _main in BANK1

    _controlchoose->_pwmcontrol

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    3791
                  _ADC_GetConversion
       _EUSART_SetRxInterruptHandler
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
                     _TMR4_ReadTimer
                     _TMR4_StopTimer
           _TMR6_SetInterruptHandler
                      _controlchoose
 ---------------------------------------------------------------------------------
 (1) _controlchoose                                        0     0      0    2310
            _TMR4_LoadPeriodRegister
                    _TMR4_StartTimer
                         _pwmcontrol
 ---------------------------------------------------------------------------------
 (2) _pwmcontrol                                           4     4      0    2288
                                              0 BANK1      4     4      0
                _EPWM1_LoadDutyValue
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    1116
                                              4 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     931
                                             10 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _EPWM1_LoadDutyValue                                  4     2      2     207
                                              4 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _TMR4_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR4_LoadPeriodRegister                              1     1      0      22
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _TMR4_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR4_ReadTimer                                       1     1      0      23
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     914
                     _ADC_Initialize
                    _CMP1_Initialize
                     _DAC_Initialize
                   _EPWM1_Initialize
                  _EUSART_Initialize
                     _FVR_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
                    _TMR6_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0     174
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR6_SetInterruptHandler                             2     0      2     174
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     174
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     174
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     566
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2      98
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2     174
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _EPWM1_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DAC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CMP1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion                                    4     2      2      22
                                              4 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0    1411
                                NULL *
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
                    _PIN_MANAGER_IOC
                           _TMR0_ISR
                           _TMR6_ISR
                            _receive *
 ---------------------------------------------------------------------------------
 (5) _receive                                              2     2      0     569
                                              1 BANK0      2     2      0
                        _EUSART_Read
                         _analisa_Rx
 ---------------------------------------------------------------------------------
 (6) _analisa_Rx                                           1     1      0     478
                                              0 BANK0      1     1      0
                          _ascii_bin
              i1_EPWM1_LoadDutyValue
                          i1___lwdiv
 ---------------------------------------------------------------------------------
 (7) i1_EPWM1_LoadDutyValue                                4     2      2      70
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (7) _ascii_bin                                            1     1      0      90
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _EUSART_Read                                          2     2      0      24
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (5) _TMR6_ISR                                             0     0      0     685
                                NULL *
       _TMR6_DefaultInterruptHandler *
                        _fluxcontrol *
 ---------------------------------------------------------------------------------
 (6) _fluxcontrol                                          4     4      0     685
                                              0 BANK0      4     4      0
                            _fluxpos
                          i1___lwdiv
                           i1___wmul
 ---------------------------------------------------------------------------------
 (7) i1___wmul                                             6     2      4     300
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (7) i1___lwdiv                                            8     4      4     318
                                              6 COMMON     8     4      4
                           i1___wmul (ARG)
 ---------------------------------------------------------------------------------
 (7) _fluxpos                                              2     2      0      44
                                              7 COMMON     2     2      0
                          _daUmPasso
 ---------------------------------------------------------------------------------
 (8) _daUmPasso                                            7     7      0      44
                                              0 COMMON     7     7      0
               _CMP1_GetOutputStatus
 ---------------------------------------------------------------------------------
 (9) _CMP1_GetOutputStatus                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR6_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             0     0      0     157
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (6) _TMR0_CallBack                                        0     0      0     157
                                NULL *
       _TMR0_DefaultInterruptHandler *
                           _envia_Tx *
 ---------------------------------------------------------------------------------
 (7) _envia_Tx                                             0     0      0     157
                       _EUSART_Write
                          _bin_ascii
 ---------------------------------------------------------------------------------
 (8) _bin_ascii                                            1     1      0     113
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _EUSART_Write                                         2     2      0      44
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (7) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _PIN_MANAGER_IOC                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _EUSART_Transmit_ISR                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _EUSART_Receive_ISR                                   0     0      0       0
                                NULL *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (6) _EUSART_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART_DefaultErrorHandler                           0     0      0       0
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (6) _EUSART_RxDataHandler                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion
   _EUSART_SetRxInterruptHandler
   _SYSTEM_Initialize
     _ADC_Initialize
     _CMP1_Initialize
     _DAC_Initialize
     _EPWM1_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _FVR_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR2_Initialize
     _TMR4_Initialize
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _WDT_Initialize
   _TMR0_SetInterruptHandler
   _TMR4_ReadTimer
   _TMR4_StopTimer
   _TMR6_SetInterruptHandler
   _controlchoose
     _TMR4_LoadPeriodRegister
     _TMR4_StartTimer
     _pwmcontrol
       _EPWM1_LoadDutyValue
       ___lwdiv
         ___wmul (ARG)
       ___wmul

 _INTERRUPT_InterruptManager (ROOT)
   NULL(Fake) *
   _EUSART_Receive_ISR *
     NULL(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *
   _EUSART_Transmit_ISR *
   _PIN_MANAGER_IOC *
   _TMR0_ISR *
     _TMR0_CallBack
       NULL(Fake) *
       _TMR0_DefaultInterruptHandler *
       _envia_Tx *
         _EUSART_Write
         _bin_ascii
   _TMR6_ISR *
     NULL(Fake) *
     _TMR6_DefaultInterruptHandler *
     _fluxcontrol *
       _fluxpos
         _daUmPasso
           _CMP1_GetOutputStatus
       i1___lwdiv
         i1___wmul (ARG)
       i1___wmul
   _receive *
     _EUSART_Read
     _analisa_Rx
       _ascii_bin
       i1_EPWM1_LoadDutyValue
       i1___lwdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      8C       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     12      4C       6       95.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      4      32       8       62.5%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      8C      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sat Aug 31 10:31:55 2024

                ?_EUSART_SetRxInterruptHandler 004C                                             l40 0741  
                                           l43 077B                                             l37 04D4  
                                           l70 0656                              ??_CMP1_Initialize 004C  
                                           l86 0732                         __end_of_FVR_Initialize 0780  
                          ___wmul@multiplicand 004E                               i1___wmul@product 0074  
                              _timer0ReloadVal 0040                                            l121 078E  
                                          l124 0791                                            l133 0753  
                                          l118 0706                                            l127 0759  
                                          l154 06D5                                            l332 072A  
                                          l157 060E                                            l326 0721  
                                          l335 076B                                            l424 05A8  
                                          l409 073A                                            l329 0718  
                                          l338 070F                                            l427 05B3  
                                          l452 0777                                            l437 0771  
                                          l269 03B9                                            l357 06A6  
                                          l379 0765                                            l812 075F  
                                          l389 077F                                            l565 0291  
                                          l574 06B0                                            l575 06B7  
                                          l765 03D7                                            l790 0681  
                                          l965 05BF                                            l967 05D3  
                                          _PR2 001B                                            _PR4 0416  
                                          _PR6 041D                                            _dRx 0022  
                                          _dTx 0024                         ??_EUSART_RxDataHandler 0070  
                                          _kdp 005A                                            _kif 0060  
                                          _kip 005C                                            _tTx 0026  
                                          _kpf 0062                                            _pas 003A  
                                          _kpp 005E                 ?_EUSART_SetFramingErrorHandler 004C  
                              _TMR2_Initialize 072B                                            wreg 0009  
                                 ?_EUSART_Read 0070                                           l2301 06FD  
                                         l1245 0433                                           l2151 0766  
                                         l2311 072E                                           l2303 0700  
                                         l2153 0719                                           l2321 069C  
                                         l2313 072F                                           l2305 0701  
                                         l2155 0710                                           l2323 069D  
                                         l2315 0730                                           l2307 0703  
                                         l2331 0671                                           l2341 0772  
                                         l2157 0722                                           l2149 0707  
                                         l2325 069E                                           l2317 0695  
                                         l2309 072B                                           l2333 0672  
                                         l2343 0733                                           l2351 06CB  
                                         l2327 069F                                           l2319 069A  
                                         l2191 075A                                           l2335 0674  
                                         l2345 0736                                           l2353 06CC  
                                         l2361 0378                                           l2281 0648  
                                         l2169 0760                                           l2337 0676  
                                         l2329 066E                                           l2347 0737  
                                         l2355 06CE                                           l2371 0391  
                                         l2363 037A                                           l2291 073E  
                                         l2283 064B                                           l2275 0640  
                                         l2339 067E                                           l2357 06D0  
                                         l2349 06C8                                           l2381 03A6  
                                         l2373 0393                                           l2365 0382  
                                         l2293 073F                                           l2285 0650  
                                         l2277 0643                                           l2551 05AC  
                                         l2543 0595                                           l2359 06D3  
                                         l2391 03B7                                           l2383 03B2  
                                         l2375 0395                                           l2367 038C  
                                         l2287 0655                                           l2279 0646  
                                         l2295 0778                                           l2545 05A1  
                                         l2297 076C                                           l2385 03B4  
                                         l2377 0396                                           l2369 038F  
                                         l2289 073B                                           l2393 078C  
                                         l2547 05A2                                           l2387 03B5  
                                         l2379 039E                                           l2299 077C  
                                         l2491 078F                                           l2395 0750  
                                         l2549 05A6                                           l2389 03B6  
                                         l2493 0754                                           l2901 025B  
                                         l2903 025F                                           l2911 06A7  
                                         l2489 04AD                                           l2905 027D  
                                         l2913 06AD                                           l2921 03D6  
                                         l2851 05B4                                           l2907 0286  
                                         l2915 06B4                                           l2923 03E3  
                                         l2861 05CF                                           l2853 05B7  
                                         l2909 028A                                           l2925 03EE  
                                         l2917 03BA                                           l2871 0403  
                                         l2855 05BB                                           l2927 03F1  
                                         l2919 03D5                                           l2849 05F3  
                                         l2881 0423                                           l2873 0408  
                                         l2865 03F7                                           l2857 05C4  
                                         l2883 0424                                           l2875 040C  
                                         l2867 03FA                                           l2859 05C9  
                                         l2891 01F0                                           l2885 0429  
                                         l2877 0410                                           l2869 0400  
                                         l2893 01F7                                           l2879 041F  
                                         l2887 042F                                           l2895 0206  
                                         l2897 0216                                           l2899 0252  
                                         u2210 041F                                           u2130 05BB  
                                         u2211 041E                                           u2131 05BA  
                                         u2125 0604                                           u2205 0411  
                                         _LATA 010C                                           u2230 042F  
                                         _LATB 010D                                           u2231 042E  
                                         u2215 041B                                           u2160 05CF  
                                         u2240 0206                                           u2225 0425  
                                         u2161 05CE                                           u2145 05C0  
                                         u2241 0205                                           u2170 0400  
                                         u2250 0216                                           u2307 05A3  
                                         u2171 03FF                                           u2155 05C5  
                                         u2251 0215                                           u2260 025B  
                                         u2261 025A                                           u2245 0202  
                                         u2190 0410                                           u2270 0286  
                                         u2191 040F                                           u2271 0285  
                                         u2255 0212                                           u1480 05AC  
                                         u2280 06AD                                           u1481 05AB  
                                         u2185 0404                                           u2281 06AC  
                                         u2290 03EE                                           u2291 03ED  
                                         i1l73 0794                                           _TMR0 0015  
                                         _TMR2 001A                                           _TMR4 0415  
                                         _TMR6 041C                                           _WPUA 020C  
                                         _WPUB 020D                                           _dcRx 0020  
                              ascii_bin@vAscii 0070                                           _main 03BA  
                                         _flux 002E                                           fsr0h 0005  
                                         fsr1h 0007                                           indf0 0000  
                                         fsr0l 0004                                           indf1 0001  
                                         fsr1l 0006                                           btemp 007E  
                                         start 0053                          ??_EPWM1_LoadDutyValue 004E  
                      __end_of_TMR0_Initialize 06A7                 ??_TMR0_DefaultInterruptHandler 0070  
                              ?_FVR_Initialize 0070                                  ?_EUSART_Write 0070  
                __end_of_OSCILLATOR_Initialize 0742                                          ?_main 0070  
                                        _T2CON 001C                                          _T4CON 0417  
                                        _T6CON 041E                  __end_ofi1_EPWM1_LoadDutyValue 066E  
                              __end_of___lwdiv 0434                                          i1l300 0590  
                                        i1l310 0470                                          i1l303 0592  
                                        i1l320 0787                                          i1l314 0627  
                                        i1l323 078B                                          i1l317 0795  
                                        i1l157 066D                                          i1l182 0012  
                                        i1l184 001E                                          i1l194 0051  
                                        i1l603 0694                                          i1l187 0030  
                                        i1l372 063F                                          i1l188 0051  
                                        i1l293 0504                                          i1l701 00E8  
                                        i1l189 0040                                          i1l294 050D  
                                        i1l382 0793                                          i1l630 0095  
                                        i1l455 0783                                          i1l711 0117  
                                        i1l376 06F0                                          i1l640 009B  
                                        i1l632 0096                                          i1l288 054A  
                                        i1l608 06C7                                          i1l616 04FC  
                                        i1l297 0524                                          i1l721 011D  
                                        i1l713 0118                                          i1l730 0123  
                                        i1l642 009C                                          i1l634 0097  
                                        i1l723 011E                                          i1l707 0114  
                                        i1l651 00A2                                          i1l571 0570  
                                        i1l732 0124                                          i1l660 00A8  
                                        i1l644 009D                                          i1l628 0093  
                                        i1l741 012A                                          i1l717 011A  
                                        i1l709 0116                                          i1l653 00A3  
                                        i1l557 032A                                          i1l726 0120  
                                        i1l662 00A9                                          i1l638 0099  
                                        i1l735 0126                                          i1l719 011C  
                                        i1l743 013A                                          i1l671 00D5  
                                        i1l647 009F                                          i1l815 0792  
                                        i1l591 01DC                                          i1l728 0122  
                                        i1l656 00A5                                          i1l568 0567  
                                        i1l737 0128                                          i1l681 00DB  
                                        i1l673 00D6                                          i1l649 00A1  
                                        i1l809 06E3                                          i1l690 00E1  
                                        i1l658 00A7                                          i1l739 0129  
                                        i1l683 00DC                                          i1l667 00D2  
                                        i1l595 01EF                                          i1l692 00E2  
                                        i1l677 00D8                                          i1l669 00D4  
                                        i1l598 0377                                          i1l686 00DE  
                                        i1l695 00E4                                          i1l679 00DA  
                                        i1l688 00E0                                          i1l697 00E6  
                                        i1l699 00E7                                          i1l965 05DE  
                                        i1l967 05F2                                          _RCREG 0199  
                                        _RCSTA 019D                                          _TRISA 008C  
                                        _TRISB 008D                                          u90_20 0092  
                                        u90_21 0091                                          u91_20 00C0  
                                        u91_21 00BE                                          u92_20 00C1  
                                        u93_20 00CE                                          u93_21 00CD  
                                        u86_20 0504                                          u94_20 0101  
                                        u86_21 0503                                          u94_21 00FF  
                                 ?_fluxcontrol 0070                                          u87_20 0509  
                                        u95_20 0102                                          u87_21 0508  
                                        u88_20 051F                                          u96_20 0110  
                                        u88_21 051E                                          u96_21 010F  
                                        u97_20 068C                                          u89_20 0086  
                                        u97_21 068B                                          u89_21 0085  
                                        _TXREG 019A                                          u99_20 0622  
                                        u99_21 0621                                          _TXSTA 019E  
                              _TMR4_Initialize 06FD                      ?_TMR0_SetInterruptHandler 004C  
                    ?_TMR6_SetInterruptHandler 004C                               __end_of_TMR0_ISR 0640  
                             __end_of_TMR6_ISR 06E4                        __end_of_PIN_MANAGER_IOC 0795  
                               _WDT_Initialize 0778                                          _error 0034  
                                        _passo 003C                                __end_of_fluxpos 0571  
                              __end_of_receive 04FD                                  _controlchoice 0065  
                                _controlchoose 06A7                                          pclath 000A  
                             __end_ofi1___wmul 05F3                                          status 0003  
                          i1___wmul@multiplier 0070                                          wtemp0 007E  
                             daUmPasso@sentido 0076                 ??_TMR6_DefaultInterruptHandler 0070  
                             ??_DAC_Initialize 004C                   __end_of_CMP1_GetOutputStatus 0784  
                              __initialization 0055                                   __end_of_main 03F7  
                               ??_EUSART_Write 0070                        __end_of_TMR2_Initialize 0733  
                  ?_INTERRUPT_InterruptManager 0070                 ??_EUSART_SetRxInterruptHandler 004E  
                                       ??_main 005A                       ?_TMR4_LoadPeriodRegister 0070  
                       __end_of_WDT_Initialize 077C                                _TMR6_Initialize 066E  
    __end_of_EUSART_DefaultFramingErrorHandler 0796            ??_EUSART_DefaultFramingErrorHandler 0070  
           ?_EUSART_DefaultFramingErrorHandler 0070              _EUSART_DefaultFramingErrorHandler 0795  
                                       _ADCON0 009D                                         _ADCON1 009E  
                   _EUSART_OverrunErrorHandler 00C8                                 ?_controlchoose 0070  
                                       _ADRESH 009C                                         _ADRESL 009B  
                                       _CCPR1H 0292                                         _CCPR1L 0291  
                                       _ANSELA 018C                                         _ANSELB 018D  
                                       _BORCON 0116                                         u100_20 0562  
                                       u100_21 0561                                         u100_25 055E  
                                       u101_20 056C                                         u101_21 056B  
                                       u102_20 06BF                                         u102_21 06BE  
                                       i1l2101 007B                                         i1l2111 008D  
                                       i1l2103 007E                                         i1l2121 00CE  
                                       i1l2105 0086                                         i1l2107 0089  
                                       i1l2141 0690                                         i1l2133 012C  
                                       i1l2125 00EA                                         i1l2117 00AB  
                                       i1l2109 008B                                         i1l1245 04AC  
                                       i1l2143 0693                                         i1l2135 0683  
                                       i1l2127 00F8                                         i1l2119 00B9  
                                       i1l2161 0617                                         i1l2081 04FE  
                                       i1l2137 0686                                         i1l2129 0110  
                                       i1l2241 05E3                                         i1l2401 052B  
                                       i1l2233 0657                                         i1l2163 061C  
                                       i1l2091 0519                                         i1l2083 04FE  
                                       i1l2139 068C                                         i1l2171 054B  
                                       i1l2251 0473                                         i1l2243 05E8  
                                       i1l2235 05D4                                         i1l2411 0544  
                                       i1l2403 0537                                         i1l2165 0622  
                                       i1l2421 0788                                         i1l2093 051F  
                                       i1l2085 0509                                         i1l2501 0639  
                                       i1l2077 0780                                         i1l2173 0555  
                                       i1l2261 0489                                         u120_25 047D  
                                       i1l2253 0479                                         i1l2245 05EE  
                                       i1l2237 05D6                                         i1l2413 0547  
                                       i1l2405 053B                                         i1l2181 06BF  
                                       i1l2167 0623                                         i1l2159 060F  
                                       i1l2511 0571                                         i1l2095 0520  
                                       i1l2087 050E                                         i1l2423 06E4  
                                       i1l2503 063C                                         i1l2175 0562  
                                       i1l2263 0498                                         i1l2255 047C  
                                       i1l2271 04A8                                         i1l2239 05DA  
                                       i1l2431 02B2                                         i1l2415 0549  
                                       i1l2407 0541                                         i1l2183 06C3  
                                       u121_20 0489                                         i1l2521 058B  
                                       i1l2513 0578                                         i1l2089 0515  
                                       i1l2097 0522                                         i1l2425 06EB  
                                       i1l2177 056C                                         i1l2265 049C  
                                       u121_21 0488                                         i1l2257 0481  
                                       i1l2249 0471                                         i1l2441 031A  
                                       i1l2433 02C0                                         i1l2505 06D6  
                                       i1l2409 0542                                         i1l2185 06C6  
                                       i1l2419 0784                                         i1l2515 057F  
                                       i1l2099 0076                                         i1l2267 049D  
                                       i1l2259 0485                                         i1l2443 0323  
                                       i1l2435 02EF                                         i1l2427 0292  
                                       i1l2507 06D8                                         i1l2179 06B9  
                                       i1l2531 044B                                         i1l2523 0434  
                                       i1l2517 0584                                         i1l2189 032B  
                                       i1l2269 04A2                                         i1l2445 0327  
                                       i1l2437 02F8                                         i1l2429 02A5  
                                       i1l2509 06DE                                         i1l2541 046D  
                                       i1l2533 0450                                         i1l2525 043A  
                                       i1l2519 058A                                         i1l2439 02FC  
                                       i1l2471 0143                                         i1l2535 0456  
                                       i1l2527 043F                                         u130_20 02C0  
                                       u130_21 02BF                                         i1l2481 01C8  
                                       i1l2473 017D                                         i1l2561 04D5  
                                       i1l2537 045C                                         i1l2529 0445  
                                       i1l2483 01CF                                         i1l2467 013B  
                                       i1l2571 04EC                                         i1l2563 04DA  
                                       i1l2539 0466                                         u122_25 048A  
                                       u130_25 02BC                                         i1l2397 0525  
                                       u114_25 0666                                         i1l2485 01D9  
                                       i1l2477 017E                                         i1l2469 013C  
                                       i1l2573 04F2                                         i1l2565 04E0  
                                       i1l2581 000E                                         i1l2399 0525  
                                       i1l2479 0185                                         i1l2487 01E0  
                                       i1l2575 04F8                                         i1l2567 04E2  
                                       i1l2591 002C                                         i1l2583 0016  
                                       u123_20 0498                                         u115_20 05DA  
                                       u131_20 02F8                                         i1l2497 0628  
                                       u123_21 0497                                         u115_21 05D9  
                                       u131_21 02F7                                         i1l2569 04E8  
                                       i1l2593 0035                                         i1l2585 001A  
                                       i1l2577 0006                                         i1l2499 0629  
                                       i1l2595 003A                                         i1l2587 0022  
                                       i1l2579 000A                                         u123_25 0494  
                                       i1l2597 0045                                         i1l2589 0027  
                                       i1l2599 004A                                         u132_20 0323  
                                       u140_20 01D9                                         u132_21 0322  
                                       u140_21 01D8                                         u124_25 049E  
                                       u116_25 05DF                                         u141_20 0639  
                                       u125_20 04A8                                         u141_21 0638  
                                       u125_21 04A7                                         u117_25 05E4  
                                       u118_20 05EE                                         u142_20 06DE  
                                       u126_20 052B                                         u150_20 04E0  
                                       u118_21 05ED                                         u142_21 06DD  
                                       u126_21 052A                                         u150_21 04DF  
                                       u143_20 0578                                         u119_20 0479  
                                       u127_20 0541                                         u151_20 04E8  
                                       u143_21 0577                                         u119_21 0478  
                                       u127_21 0540                                         u151_21 04E7  
                                       u144_20 058A                                         u128_20 06EB  
                                       u152_20 04F2                                         u160_20 0035  
                                       u144_21 0589                                         u128_21 06EA  
                                       u152_21 04F1                                         u160_21 0034  
                                       u129_20 02B2                                         u137_20 0143  
                                       u145_20 043F                                         u161_20 003A  
                                       u153_20 000A                                         u129_21 02B1  
                                       u137_21 0142                                         u145_21 043E  
                                       u161_21 0039                                         u153_21 0009  
                                       u129_25 02AE                                         u138_20 0185  
                                       u146_20 0450                                         u162_20 0045  
                                       u154_20 000E                                         u138_21 0184  
                                       u146_21 044F                                         u162_21 0044  
                                       u154_21 000D                                         u139_20 01CF  
                                       u147_20 0466                                         u163_20 004A  
                                       u155_20 0016                                         _FVRCON 0117  
                                       u139_21 01CE                                         u147_21 0465  
                                       u163_21 0049                                         u155_21 0015  
                                       u156_20 001A                                         u156_21 0019  
                                       u157_20 0022                                         u157_21 0021  
                                       u158_20 0027                                         u158_21 0026  
                                       u159_20 002C                                         u159_21 002B  
                                       _OSCCON 0099                                         _SPBRGH 019C  
                                       _SPBRGL 019B                                         _WDTCON 0097  
                              _TMR4_StartTimer 078C                                   _CCPTMRS0bits 029E  
                                       ___wmul 05B4                               __end_of_envia_Tx 0378  
                                    ??___lwdiv 0056                                         _dinput 002C  
                                       _incPos 0064                            _EUSART_Transmit_ISR 0571  
                             ?_TMR0_Initialize 0070                        __end_of_TMR4_Initialize 0707  
                                       _output 0028                              __end_ofi1___lwdiv 04AD  
                                    ??_fluxpos 0077                                      ??_receive 0049  
                              ?_WDT_Initialize 0070                       ADC_GetConversion@channel 004F  
                        __end_of_TMR0_CallBack 06F1       TMR6_SetInterruptHandler@InterruptHandler 004C  
     TMR0_SetInterruptHandler@InterruptHandler 004C                               ?_PIN_MANAGER_IOC 0070  
                         ?_EUSART_Transmit_ISR 0070                              _SYSTEM_Initialize 04AD  
                      __end_of__initialization 0071                                 receive@rx_byte 004A  
                              _CMP1_Initialize 0772                             ?_SYSTEM_Initialize 0070  
         __end_of_EUSART_SetTxInterruptHandler 076C                   _EUSART_SetTxInterruptHandler 0766  
                            ?_EPWM1_Initialize 0070                                 __pcstackCOMMON 0070  
                                 __pidataBANK0 06F1                            ??_SYSTEM_Initialize 004E  
                                    ?_TMR0_ISR 0070                                      ?_TMR6_ISR 0070  
                           ??_EPWM1_Initialize 004C                               ?_TMR2_Initialize 0070  
                      __end_of_TMR6_Initialize 0682                __end_of_TMR4_LoadPeriodRegister 0754  
                                    ?i1___wmul 0070                                 _OPTION_REGbits 0095  
                        TMR0_ISR@CountCallBack 0038                           _eusartRxStatusBuffer 00A8  
                              ??_controlchoose 005A                ??_EUSART_SetOverrunErrorHandler 004E  
                         _CMP1_GetOutputStatus 0780                        __end_of_TMR4_StartTimer 078F  
                    __end_of_SYSTEM_Initialize 04D5                          ??_EUSART_Transmit_ISR 0070  
                                   __pbssBANK0 0020                                     __pbssBANK1 00A0  
                         __end_of_EUSART_Write 0525                                     _analisa_Rx 013B  
                             ??_FVR_Initialize 004C                                     __pmaintext 03BA  
                ?_EUSART_SetTxInterruptHandler 004C               _EUSART_TxDefaultInterruptHandler 006A  
             __end_of_TMR0_SetInterruptHandler 0766                                        ?___wmul 004C  
                                   ??_TMR0_ISR 0072               __end_of_TMR6_SetInterruptHandler 0760  
                                   ??_TMR6_ISR 007E                                     __pintentry 0004  
                                      _DACCON0 0118                                        _DACCON1 0119  
                                      _CM1CON0 0111                                        _CM1CON1 0112  
                                      _CCP1CON 0293                                        _ECCP1AS 0295  
                                      _BAUDCON 019F                               ?_TMR4_Initialize 0070  
                            __end_of_daUmPasso 013B                                        _APFCON0 011D  
                                      _APFCON1 011E                   ??_EUSART_DefaultErrorHandler 0071  
                                   ??i1___wmul 0074                 i1EPWM1_LoadDutyValue@dutyValue 0070  
                                _eusartRxCount 0042                          ?_CMP1_GetOutputStatus 0070  
                                      _OSCTUNE 0098                                        _PWM1CON 0294  
                      __end_of_CMP1_Initialize 0778                       ??_EUSART_SetErrorHandler 004E  
                                    ?_envia_Tx 0070                                     _float_temp 00C0  
                  __end_of_EPWM1_LoadDutyValue 060F                                _pwmcontrol$1940 00D0  
                            __end_of_bin_ascii 0695                              __end_of_ascii_bin 06C8  
                         _ADC_InterruptHandler 0036                                        ___lwdiv 03F7  
                                      _ballset 0030                               ?_TMR6_Initialize 0070  
                                      __ptext1 06A7                                        __ptext2 01F0  
                                      __ptext3 05B4                                        __ptext4 03F7  
                                      __ptext5 05F3                                        __ptext6 078C  
                                      __ptext7 074E                                        __ptext8 078F  
                                      __ptext9 0754                                        _countRx 003E  
                            i1___lwdiv@divisor 0076                          _OSCILLATOR_Initialize 073B  
                                    _T2CONbits 001C                              i1___lwdiv@counter 007D  
                                      _fluxpos 054B                                      _CMOUTbits 0115  
                                      _receive 04D5                                      _T4CONbits 0417  
                     ??_PIN_MANAGER_Initialize 004C                          i1_EPWM1_LoadDutyValue 0657  
                                    _T6CONbits 041E                                  bin_ascii@vBin 0070  
                                      clrloop0 0749                               ?_TMR4_StartTimer 0070  
                         end_of_initialization 0071                                     ??_envia_Tx 0072  
        __end_of_EUSART_SetOverrunErrorHandler 0719                  _EUSART_SetOverrunErrorHandler 0710  
                                      init_ram 0742                                        initloop 0743  
                                  ?_analisa_Rx 0070                              _EUSART_Initialize 0378  
                           ?_EUSART_Initialize 0070                                      _RCSTAbits 019D  
                        i1___wmul@multiplicand 0072                            ??_EUSART_Initialize 004E  
                             ??_WDT_Initialize 004C                               _fluxcontrol$1962 004A  
               ??_EUSART_SetTxInterruptHandler 004E                       _TMR0_SetInterruptHandler 0760  
                     _TMR6_SetInterruptHandler 075A                         ??_CMP1_GetOutputStatus 0070  
                                    i1___lwdiv 0471                               ?_CMP1_Initialize 0070  
                                   _pwmcontrol 01F0                      __end_of_EUSART_Initialize 03BA  
                                    _TXSTAbits 019E             __end_of_EUSART_DefaultErrorHandler 078C  
                   _EUSART_DefaultErrorHandler 0788                                 _TMR4_ReadTimer 0754  
                               __end_of___wmul 05D4                                   _EUSART_Write 04FD  
                               _ADC_Initialize 0733                         ?_OSCILLATOR_Initialize 0070  
                       ?i1_EPWM1_LoadDutyValue 0070                            start_initialization 0055  
                                ??_EUSART_Read 0070                                     ?i1___lwdiv 0076  
 EUSART_SetRxInterruptHandler@interruptHandler 004C   EUSART_SetTxInterruptHandler@interruptHandler 004C  
                 EPWM1_LoadDutyValue@dutyValue 004C                 ?_EUSART_SetOverrunErrorHandler 004C  
                               _TMR4_StopTimer 078F                     _EUSART_FramingErrorHandler 00CA  
                       __end_of_TMR4_ReadTimer 075A                                       ??___wmul 0050  
                       _EUSART_SetErrorHandler 0722                         __end_of_ADC_Initialize 073B  
                                  __pdataBANK0 005A                                  ??_fluxcontrol 0048  
                  __end_of_EUSART_Transmit_ISR 0593                                      _daUmPasso 0075  
                                    ___latbits 0001                                  __pcstackBANK0 0048  
                                __pcstackBANK1 00CE                          __end_of_controlchoose 06B8  
                                  ?_pwmcontrol 0070                     __end_of_EUSART_Receive_ISR 0471  
                      _TMR4_LoadPeriodRegister 074E               _EUSART_RxDefaultInterruptHandler 00CC  
                          __end_of_EUSART_Read 054B                          _TMR0_InterruptHandler 0068  
                        _TMR6_InterruptHandler 0066                                      __pnvBANK0 0066  
                                    __pnvBANK1 00C4                         __end_of_TMR4_StopTimer 0792  
                                    _bin_ascii 0682                   __end_of_EUSART_RxDataHandler 0628  
                             ___lwdiv@dividend 0054                         _PIN_MANAGER_Initialize 0640  
                         EUSART_Read@readValue 0071                                ?_TMR4_ReadTimer 0070  
                                    _ascii_bin 06B8                                       ?___lwdiv 0052  
                              ?_ADC_Initialize 0070                                   _eusartRxHead 0044  
                                 _eusartTxHead 0047                                   _eusartRxTail 0043  
                                    _fim_curso 003B                                   _eusartTxTail 0046  
                 ??_INTERRUPT_InterruptManager 007E                        _eusartTxBufferRemaining 0045  
                                     ?_fluxpos 0070                                       ?_receive 0070  
                                   ?_daUmPasso 0070                               ___lwdiv@quotient 0058  
                                  ??i1___lwdiv 007A                                  _TMR0_CallBack 06E4  
                          __end_of_fluxcontrol 032B                                 _eusartRxBuffer 00B0  
                            ??_TMR0_Initialize 004E                                 _eusartTxBuffer 00B8  
                               ___wmul@product 0050                                       _LATAbits 010C  
       EUSART_SetErrorHandler@interruptHandler 004C                                   ??_analisa_Rx 0048  
                                    clear_ram0 0748                                       _PIE1bits 0091  
                                     _PIE3bits 0093                              _eusartRxLastError 0041  
                                   ?_bin_ascii 0070                                ?_TMR4_StopTimer 0070  
                   ??_TMR0_SetInterruptHandler 004E                                       _PIR1bits 0011  
              ??_EUSART_SetFramingErrorHandler 004E                                       _PIR3bits 0013  
                   ??_TMR6_SetInterruptHandler 004E                                     ?_ascii_bin 0070  
                                     _TMR0_ISR 0628      __end_of_EUSART_DefaultOverrunErrorHandler 0788  
          ??_EUSART_DefaultOverrunErrorHandler 0070             ?_EUSART_DefaultOverrunErrorHandler 0070  
            _EUSART_DefaultOverrunErrorHandler 0784                                       _PSTR1CON 0296  
                                     _TMR6_ISR 06D6                              ??_PIN_MANAGER_IOC 0070  
                                   _ADCON0bits 009D                              ___wmul@multiplier 004C  
                               _DAC_Initialize 076C                                       i1___wmul 05D4  
                             _EPWM1_Initialize 06C8                                      _outputsum 002A  
                           __end_of_analisa_Rx 01F0                                 ?_TMR0_CallBack 0070  
                                  _EUSART_Read 0525                      ??_TMR4_LoadPeriodRegister 004C  
                            ??_TMR2_Initialize 004C                              _ADC_GetConversion 0593  
                        TMR4_ReadTimer@readVal 004C                        ??_OSCILLATOR_Initialize 004C  
                          _EUSART_ErrorHandler 00C6                             ?_ADC_GetConversion 004C  
                       __end_of_DAC_Initialize 0772                    ?_EUSART_DefaultErrorHandler 0070  
                      ??i1_EPWM1_LoadDutyValue 0072                                       _adc_temp 00C4  
                                     _balldist 0032                            ??_ADC_GetConversion 004E  
                                  ??_daUmPasso 0070                                    _fluxcontrol 0292  
                              ___lwdiv@divisor 0052                           _EUSART_RxDataHandler 060F  
                              ___lwdiv@counter 0057                                       __ptext10 04AD  
                                     __ptext11 0778                                       __ptext20 077C  
                                     __ptext12 066E                                       __ptext21 0378  
                                     __ptext13 075A                                       __ptext30 0733  
                                     __ptext22 0766                                       __ptext14 06FD  
                                     __ptext31 0593                                       __ptext23 0707  
                                     __ptext15 072B                                       __ptext40 0792  
                                     __ptext24 0710                                       __ptext16 0695  
                                     __ptext41 0292                                       __ptext33 0434  
                                     __ptext25 0719                                       __ptext17 0760  
                                     __ptext50 032B                                       __ptext42 05D4  
                                     __ptext34 04D5                                       __ptext26 0722  
                                     __ptext18 0640                                       __ptext51 0682  
                                     __ptext43 0471                                       __ptext35 013B  
                                     __ptext27 06C8                                       __ptext19 073B  
                                     __ptext52 04FD                                       __ptext44 054B  
                                     __ptext36 0657                                       __ptext28 076C  
                                     __ptext53 0794                                       __ptext45 0075  
                                     __ptext37 06B8                                       __ptext29 0772  
                                     __ptext54 0571                                       __ptext46 0780  
                                     __ptext38 0525                                       __ptext55 0784  
                                     __ptext47 0628                                       __ptext39 06D6  
                                     __ptext56 0795                                       __ptext48 06E4  
                                     __ptext57 0788                                       __ptext49 0793  
                                     __ptext58 060F                                       _bufferRx 00A0  
                           i1___lwdiv@dividend 0078                                       _envia_Tx 032B  
                            ??_TMR4_Initialize 004C           __end_of_TMR0_DefaultInterruptHandler 0794  
                 _TMR0_DefaultInterruptHandler 0793                      __end_of_ADC_GetConversion 05B4  
                                  ??_bin_ascii 0070                        ?_EUSART_SetErrorHandler 004C  
EUSART_SetOverrunErrorHandler@interruptHandler 004C                                    ??_ascii_bin 0070  
                                     int$flags 007E                                       _position 003D  
           __end_of_INTERRUPT_InterruptManager 0053                     _INTERRUPT_InterruptManager 0004  
        __end_of_EUSART_SetFramingErrorHandler 0722                  _EUSART_SetFramingErrorHandler 0719  
                              ?_DAC_Initialize 0070                             i1___lwdiv@quotient 007B  
                                   _INTCONbits 000B                                ??_TMR0_CallBack 0072  
                        ?_EUSART_RxDataHandler 0070                                     _FVRCONbits 0117  
         __end_of_TMR6_DefaultInterruptHandler 0793                   _TMR6_DefaultInterruptHandler 0792  
                                 ??_pwmcontrol 00CE                                       intlevel1 0000  
                      ?_PIN_MANAGER_Initialize 0070                              ??_TMR6_Initialize 004E  
               __end_of_EUSART_SetErrorHandler 072B                               ??_TMR4_ReadTimer 004C  
                             ??_ADC_Initialize 004C           __end_of_EUSART_SetRxInterruptHandler 0710  
                 _EUSART_SetRxInterruptHandler 0707                  ?_TMR0_DefaultInterruptHandler 0070  
                           _EUSART_Receive_ISR 0434  EUSART_SetFramingErrorHandler@interruptHandler 004C  
                            ??_TMR4_StartTimer 004C                             __end_of_pwmcontrol 0292  
                               _FVR_Initialize 077C                                     _OPTION_REG 0095  
                          ?_EUSART_Receive_ISR 0070                                _TMR0_Initialize 0695  
                                  _timecontrol 003F                            _EPWM1_LoadDutyValue 05F3  
                           EUSART_Write@txData 0071                 __end_of_PIN_MANAGER_Initialize 0657  
                             ??_TMR4_StopTimer 004C                  ?_TMR6_DefaultInterruptHandler 0070  
                              _PIN_MANAGER_IOC 0794                           ??_EUSART_Receive_ISR 0071  
                     __end_of_EPWM1_Initialize 06D6                           ?_EPWM1_LoadDutyValue 004C  
             TMR4_LoadPeriodRegister@periodVal 004C  
