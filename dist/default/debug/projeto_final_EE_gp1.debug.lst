

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Mon Sep 02 12:04:15 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F1827
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2
    42                           	psect	text26,local,class=CODE,merge=1,delta=2
    43                           	psect	text27,local,class=CODE,merge=1,delta=2
    44                           	psect	text28,local,class=CODE,merge=1,delta=2
    45                           	psect	text29,local,class=CODE,merge=1,delta=2
    46                           	psect	text30,local,class=CODE,merge=1,delta=2
    47                           	psect	text31,local,class=CODE,merge=1,delta=2
    48                           	psect	text32,local,class=CODE,merge=1,delta=2
    49                           	psect	text33,local,class=CODE,merge=1,delta=2
    50                           	psect	intentry,global,class=CODE,delta=2
    51                           	psect	text35,local,class=CODE,merge=1,delta=2
    52                           	psect	text36,local,class=CODE,merge=1,delta=2
    53                           	psect	text37,local,class=CODE,merge=1,delta=2
    54                           	psect	text38,local,class=CODE,merge=1,delta=2
    55                           	psect	text39,local,class=CODE,merge=1,delta=2
    56                           	psect	text40,local,class=CODE,merge=1,delta=2
    57                           	psect	text41,local,class=CODE,merge=1,delta=2
    58                           	psect	text42,local,class=CODE,merge=1,delta=2
    59                           	psect	text43,local,class=CODE,merge=1,delta=2
    60                           	psect	text44,local,class=CODE,merge=1,delta=2
    61                           	psect	text45,local,class=CODE,merge=1,delta=2
    62                           	psect	text46,local,class=CODE,merge=1,delta=2
    63                           	psect	text47,local,class=CODE,merge=1,delta=2
    64                           	psect	text48,local,class=CODE,merge=1,delta=2
    65                           	psect	text49,local,class=CODE,merge=1,delta=2
    66                           	psect	text50,local,class=CODE,merge=1,delta=2
    67                           	psect	text51,local,class=CODE,merge=1,delta=2
    68                           	psect	text52,local,class=CODE,merge=1,delta=2,group=1
    69                           	psect	text53,local,class=CODE,merge=1,delta=2,group=1
    70                           	psect	text54,local,class=CODE,merge=1,delta=2,group=1
    71                           	psect	text55,local,class=CODE,merge=1,delta=2,group=1
    72                           	psect	text56,local,class=CODE,merge=1,delta=2,group=1
    73                           	psect	text57,local,class=CODE,merge=1,delta=2
    74                           	psect	text58,local,class=CODE,merge=1,delta=2
    75                           	psect	text59,local,class=CODE,merge=1,delta=2
    76                           	psect	text60,local,class=CODE,merge=1,delta=2
    77                           	psect	text61,local,class=CODE,merge=1,delta=2
    78                           	psect	text62,local,class=CODE,merge=1,delta=2
    79                           	psect	text63,local,class=CODE,merge=1,delta=2
    80                           	psect	text64,local,class=CODE,merge=1,delta=2
    81                           	psect	text65,local,class=CODE,merge=1,delta=2
    82                           	psect	text66,local,class=CODE,merge=1,delta=2
    83                           	psect	text67,local,class=CODE,merge=1,delta=2
    84                           	psect	text68,local,class=CODE,merge=1,delta=2
    85                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    86                           	dabs	1,0x7E,2
    87     0000                     
    88                           ; Generated 07/09/2023 GMT
    89                           ; 
    90                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    91                           ; All rights reserved.
    92                           ; 
    93                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    94                           ; 
    95                           ; Redistribution and use in source and binary forms, with or without modification, are
    96                           ; permitted provided that the following conditions are met:
    97                           ; 
    98                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    99                           ;        conditions and the following disclaimer.
   100                           ; 
   101                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   102                           ;        of conditions and the following disclaimer in the documentation and/or other
   103                           ;        materials provided with the distribution. Publication is not required when
   104                           ;        this file is used in an embedded application.
   105                           ; 
   106                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   107                           ;        software without specific prior written permission.
   108                           ; 
   109                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   110                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   111                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   112                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   113                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   114                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   115                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   116                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   117                           ; 
   118                           ; 
   119                           ; Code-generator required, PIC16F1827 Definitions
   120                           ; 
   121                           ; SFR Addresses
   122     0000                     	;# 
   123     0001                     	;# 
   124     0002                     	;# 
   125     0003                     	;# 
   126     0004                     	;# 
   127     0005                     	;# 
   128     0006                     	;# 
   129     0007                     	;# 
   130     0008                     	;# 
   131     0009                     	;# 
   132     000A                     	;# 
   133     000B                     	;# 
   134     000C                     	;# 
   135     000D                     	;# 
   136     0011                     	;# 
   137     0012                     	;# 
   138     0013                     	;# 
   139     0014                     	;# 
   140     0015                     	;# 
   141     0016                     	;# 
   142     0016                     	;# 
   143     0017                     	;# 
   144     0018                     	;# 
   145     0019                     	;# 
   146     001A                     	;# 
   147     001B                     	;# 
   148     001C                     	;# 
   149     001E                     	;# 
   150     001F                     	;# 
   151     008C                     	;# 
   152     008D                     	;# 
   153     0091                     	;# 
   154     0092                     	;# 
   155     0093                     	;# 
   156     0094                     	;# 
   157     0095                     	;# 
   158     0096                     	;# 
   159     0097                     	;# 
   160     0098                     	;# 
   161     0099                     	;# 
   162     009A                     	;# 
   163     009B                     	;# 
   164     009B                     	;# 
   165     009C                     	;# 
   166     009D                     	;# 
   167     009E                     	;# 
   168     010C                     	;# 
   169     010D                     	;# 
   170     0111                     	;# 
   171     0112                     	;# 
   172     0113                     	;# 
   173     0114                     	;# 
   174     0115                     	;# 
   175     0116                     	;# 
   176     0117                     	;# 
   177     0118                     	;# 
   178     0119                     	;# 
   179     011A                     	;# 
   180     011B                     	;# 
   181     011D                     	;# 
   182     011E                     	;# 
   183     018C                     	;# 
   184     018D                     	;# 
   185     0191                     	;# 
   186     0191                     	;# 
   187     0192                     	;# 
   188     0193                     	;# 
   189     0193                     	;# 
   190     0193                     	;# 
   191     0194                     	;# 
   192     0195                     	;# 
   193     0196                     	;# 
   194     0199                     	;# 
   195     019A                     	;# 
   196     019B                     	;# 
   197     019B                     	;# 
   198     019B                     	;# 
   199     019B                     	;# 
   200     019C                     	;# 
   201     019C                     	;# 
   202     019D                     	;# 
   203     019E                     	;# 
   204     019F                     	;# 
   205     020C                     	;# 
   206     020D                     	;# 
   207     0211                     	;# 
   208     0211                     	;# 
   209     0212                     	;# 
   210     0212                     	;# 
   211     0213                     	;# 
   212     0213                     	;# 
   213     0214                     	;# 
   214     0214                     	;# 
   215     0215                     	;# 
   216     0215                     	;# 
   217     0215                     	;# 
   218     0216                     	;# 
   219     0216                     	;# 
   220     0217                     	;# 
   221     0217                     	;# 
   222     0219                     	;# 
   223     021A                     	;# 
   224     021B                     	;# 
   225     021C                     	;# 
   226     021D                     	;# 
   227     021E                     	;# 
   228     021F                     	;# 
   229     0291                     	;# 
   230     0291                     	;# 
   231     0292                     	;# 
   232     0293                     	;# 
   233     0294                     	;# 
   234     0295                     	;# 
   235     0295                     	;# 
   236     0296                     	;# 
   237     0298                     	;# 
   238     0298                     	;# 
   239     0299                     	;# 
   240     029A                     	;# 
   241     029B                     	;# 
   242     029C                     	;# 
   243     029C                     	;# 
   244     029D                     	;# 
   245     029E                     	;# 
   246     029E                     	;# 
   247     0311                     	;# 
   248     0311                     	;# 
   249     0312                     	;# 
   250     0313                     	;# 
   251     0318                     	;# 
   252     0318                     	;# 
   253     0319                     	;# 
   254     031A                     	;# 
   255     0394                     	;# 
   256     0395                     	;# 
   257     0396                     	;# 
   258     039A                     	;# 
   259     039C                     	;# 
   260     039D                     	;# 
   261     039E                     	;# 
   262     039F                     	;# 
   263     0415                     	;# 
   264     0416                     	;# 
   265     0417                     	;# 
   266     041C                     	;# 
   267     041D                     	;# 
   268     041E                     	;# 
   269     0FE4                     	;# 
   270     0FE5                     	;# 
   271     0FE6                     	;# 
   272     0FE7                     	;# 
   273     0FE8                     	;# 
   274     0FE9                     	;# 
   275     0FEA                     	;# 
   276     0FEB                     	;# 
   277     0FED                     	;# 
   278     0FEE                     	;# 
   279     0FEF                     	;# 
   280     0000                     	;# 
   281     0001                     	;# 
   282     0002                     	;# 
   283     0003                     	;# 
   284     0004                     	;# 
   285     0005                     	;# 
   286     0006                     	;# 
   287     0007                     	;# 
   288     0008                     	;# 
   289     0009                     	;# 
   290     000A                     	;# 
   291     000B                     	;# 
   292     000C                     	;# 
   293     000D                     	;# 
   294     0011                     	;# 
   295     0012                     	;# 
   296     0013                     	;# 
   297     0014                     	;# 
   298     0015                     	;# 
   299     0016                     	;# 
   300     0016                     	;# 
   301     0017                     	;# 
   302     0018                     	;# 
   303     0019                     	;# 
   304     001A                     	;# 
   305     001B                     	;# 
   306     001C                     	;# 
   307     001E                     	;# 
   308     001F                     	;# 
   309     008C                     	;# 
   310     008D                     	;# 
   311     0091                     	;# 
   312     0092                     	;# 
   313     0093                     	;# 
   314     0094                     	;# 
   315     0095                     	;# 
   316     0096                     	;# 
   317     0097                     	;# 
   318     0098                     	;# 
   319     0099                     	;# 
   320     009A                     	;# 
   321     009B                     	;# 
   322     009B                     	;# 
   323     009C                     	;# 
   324     009D                     	;# 
   325     009E                     	;# 
   326     010C                     	;# 
   327     010D                     	;# 
   328     0111                     	;# 
   329     0112                     	;# 
   330     0113                     	;# 
   331     0114                     	;# 
   332     0115                     	;# 
   333     0116                     	;# 
   334     0117                     	;# 
   335     0118                     	;# 
   336     0119                     	;# 
   337     011A                     	;# 
   338     011B                     	;# 
   339     011D                     	;# 
   340     011E                     	;# 
   341     018C                     	;# 
   342     018D                     	;# 
   343     0191                     	;# 
   344     0191                     	;# 
   345     0192                     	;# 
   346     0193                     	;# 
   347     0193                     	;# 
   348     0193                     	;# 
   349     0194                     	;# 
   350     0195                     	;# 
   351     0196                     	;# 
   352     0199                     	;# 
   353     019A                     	;# 
   354     019B                     	;# 
   355     019B                     	;# 
   356     019B                     	;# 
   357     019B                     	;# 
   358     019C                     	;# 
   359     019C                     	;# 
   360     019D                     	;# 
   361     019E                     	;# 
   362     019F                     	;# 
   363     020C                     	;# 
   364     020D                     	;# 
   365     0211                     	;# 
   366     0211                     	;# 
   367     0212                     	;# 
   368     0212                     	;# 
   369     0213                     	;# 
   370     0213                     	;# 
   371     0214                     	;# 
   372     0214                     	;# 
   373     0215                     	;# 
   374     0215                     	;# 
   375     0215                     	;# 
   376     0216                     	;# 
   377     0216                     	;# 
   378     0217                     	;# 
   379     0217                     	;# 
   380     0219                     	;# 
   381     021A                     	;# 
   382     021B                     	;# 
   383     021C                     	;# 
   384     021D                     	;# 
   385     021E                     	;# 
   386     021F                     	;# 
   387     0291                     	;# 
   388     0291                     	;# 
   389     0292                     	;# 
   390     0293                     	;# 
   391     0294                     	;# 
   392     0295                     	;# 
   393     0295                     	;# 
   394     0296                     	;# 
   395     0298                     	;# 
   396     0298                     	;# 
   397     0299                     	;# 
   398     029A                     	;# 
   399     029B                     	;# 
   400     029C                     	;# 
   401     029C                     	;# 
   402     029D                     	;# 
   403     029E                     	;# 
   404     029E                     	;# 
   405     0311                     	;# 
   406     0311                     	;# 
   407     0312                     	;# 
   408     0313                     	;# 
   409     0318                     	;# 
   410     0318                     	;# 
   411     0319                     	;# 
   412     031A                     	;# 
   413     0394                     	;# 
   414     0395                     	;# 
   415     0396                     	;# 
   416     039A                     	;# 
   417     039C                     	;# 
   418     039D                     	;# 
   419     039E                     	;# 
   420     039F                     	;# 
   421     0415                     	;# 
   422     0416                     	;# 
   423     0417                     	;# 
   424     041C                     	;# 
   425     041D                     	;# 
   426     041E                     	;# 
   427     0FE4                     	;# 
   428     0FE5                     	;# 
   429     0FE6                     	;# 
   430     0FE7                     	;# 
   431     0FE8                     	;# 
   432     0FE9                     	;# 
   433     0FEA                     	;# 
   434     0FEB                     	;# 
   435     0FED                     	;# 
   436     0FEE                     	;# 
   437     0FEF                     	;# 
   438     0000                     	;# 
   439     0001                     	;# 
   440     0002                     	;# 
   441     0003                     	;# 
   442     0004                     	;# 
   443     0005                     	;# 
   444     0006                     	;# 
   445     0007                     	;# 
   446     0008                     	;# 
   447     0009                     	;# 
   448     000A                     	;# 
   449     000B                     	;# 
   450     000C                     	;# 
   451     000D                     	;# 
   452     0011                     	;# 
   453     0012                     	;# 
   454     0013                     	;# 
   455     0014                     	;# 
   456     0015                     	;# 
   457     0016                     	;# 
   458     0016                     	;# 
   459     0017                     	;# 
   460     0018                     	;# 
   461     0019                     	;# 
   462     001A                     	;# 
   463     001B                     	;# 
   464     001C                     	;# 
   465     001E                     	;# 
   466     001F                     	;# 
   467     008C                     	;# 
   468     008D                     	;# 
   469     0091                     	;# 
   470     0092                     	;# 
   471     0093                     	;# 
   472     0094                     	;# 
   473     0095                     	;# 
   474     0096                     	;# 
   475     0097                     	;# 
   476     0098                     	;# 
   477     0099                     	;# 
   478     009A                     	;# 
   479     009B                     	;# 
   480     009B                     	;# 
   481     009C                     	;# 
   482     009D                     	;# 
   483     009E                     	;# 
   484     010C                     	;# 
   485     010D                     	;# 
   486     0111                     	;# 
   487     0112                     	;# 
   488     0113                     	;# 
   489     0114                     	;# 
   490     0115                     	;# 
   491     0116                     	;# 
   492     0117                     	;# 
   493     0118                     	;# 
   494     0119                     	;# 
   495     011A                     	;# 
   496     011B                     	;# 
   497     011D                     	;# 
   498     011E                     	;# 
   499     018C                     	;# 
   500     018D                     	;# 
   501     0191                     	;# 
   502     0191                     	;# 
   503     0192                     	;# 
   504     0193                     	;# 
   505     0193                     	;# 
   506     0193                     	;# 
   507     0194                     	;# 
   508     0195                     	;# 
   509     0196                     	;# 
   510     0199                     	;# 
   511     019A                     	;# 
   512     019B                     	;# 
   513     019B                     	;# 
   514     019B                     	;# 
   515     019B                     	;# 
   516     019C                     	;# 
   517     019C                     	;# 
   518     019D                     	;# 
   519     019E                     	;# 
   520     019F                     	;# 
   521     020C                     	;# 
   522     020D                     	;# 
   523     0211                     	;# 
   524     0211                     	;# 
   525     0212                     	;# 
   526     0212                     	;# 
   527     0213                     	;# 
   528     0213                     	;# 
   529     0214                     	;# 
   530     0214                     	;# 
   531     0215                     	;# 
   532     0215                     	;# 
   533     0215                     	;# 
   534     0216                     	;# 
   535     0216                     	;# 
   536     0217                     	;# 
   537     0217                     	;# 
   538     0219                     	;# 
   539     021A                     	;# 
   540     021B                     	;# 
   541     021C                     	;# 
   542     021D                     	;# 
   543     021E                     	;# 
   544     021F                     	;# 
   545     0291                     	;# 
   546     0291                     	;# 
   547     0292                     	;# 
   548     0293                     	;# 
   549     0294                     	;# 
   550     0295                     	;# 
   551     0295                     	;# 
   552     0296                     	;# 
   553     0298                     	;# 
   554     0298                     	;# 
   555     0299                     	;# 
   556     029A                     	;# 
   557     029B                     	;# 
   558     029C                     	;# 
   559     029C                     	;# 
   560     029D                     	;# 
   561     029E                     	;# 
   562     029E                     	;# 
   563     0311                     	;# 
   564     0311                     	;# 
   565     0312                     	;# 
   566     0313                     	;# 
   567     0318                     	;# 
   568     0318                     	;# 
   569     0319                     	;# 
   570     031A                     	;# 
   571     0394                     	;# 
   572     0395                     	;# 
   573     0396                     	;# 
   574     039A                     	;# 
   575     039C                     	;# 
   576     039D                     	;# 
   577     039E                     	;# 
   578     039F                     	;# 
   579     0415                     	;# 
   580     0416                     	;# 
   581     0417                     	;# 
   582     041C                     	;# 
   583     041D                     	;# 
   584     041E                     	;# 
   585     0FE4                     	;# 
   586     0FE5                     	;# 
   587     0FE6                     	;# 
   588     0FE7                     	;# 
   589     0FE8                     	;# 
   590     0FE9                     	;# 
   591     0FEA                     	;# 
   592     0FEB                     	;# 
   593     0FED                     	;# 
   594     0FEE                     	;# 
   595     0FEF                     	;# 
   596     0000                     	;# 
   597     0001                     	;# 
   598     0002                     	;# 
   599     0003                     	;# 
   600     0004                     	;# 
   601     0005                     	;# 
   602     0006                     	;# 
   603     0007                     	;# 
   604     0008                     	;# 
   605     0009                     	;# 
   606     000A                     	;# 
   607     000B                     	;# 
   608     000C                     	;# 
   609     000D                     	;# 
   610     0011                     	;# 
   611     0012                     	;# 
   612     0013                     	;# 
   613     0014                     	;# 
   614     0015                     	;# 
   615     0016                     	;# 
   616     0016                     	;# 
   617     0017                     	;# 
   618     0018                     	;# 
   619     0019                     	;# 
   620     001A                     	;# 
   621     001B                     	;# 
   622     001C                     	;# 
   623     001E                     	;# 
   624     001F                     	;# 
   625     008C                     	;# 
   626     008D                     	;# 
   627     0091                     	;# 
   628     0092                     	;# 
   629     0093                     	;# 
   630     0094                     	;# 
   631     0095                     	;# 
   632     0096                     	;# 
   633     0097                     	;# 
   634     0098                     	;# 
   635     0099                     	;# 
   636     009A                     	;# 
   637     009B                     	;# 
   638     009B                     	;# 
   639     009C                     	;# 
   640     009D                     	;# 
   641     009E                     	;# 
   642     010C                     	;# 
   643     010D                     	;# 
   644     0111                     	;# 
   645     0112                     	;# 
   646     0113                     	;# 
   647     0114                     	;# 
   648     0115                     	;# 
   649     0116                     	;# 
   650     0117                     	;# 
   651     0118                     	;# 
   652     0119                     	;# 
   653     011A                     	;# 
   654     011B                     	;# 
   655     011D                     	;# 
   656     011E                     	;# 
   657     018C                     	;# 
   658     018D                     	;# 
   659     0191                     	;# 
   660     0191                     	;# 
   661     0192                     	;# 
   662     0193                     	;# 
   663     0193                     	;# 
   664     0193                     	;# 
   665     0194                     	;# 
   666     0195                     	;# 
   667     0196                     	;# 
   668     0199                     	;# 
   669     019A                     	;# 
   670     019B                     	;# 
   671     019B                     	;# 
   672     019B                     	;# 
   673     019B                     	;# 
   674     019C                     	;# 
   675     019C                     	;# 
   676     019D                     	;# 
   677     019E                     	;# 
   678     019F                     	;# 
   679     020C                     	;# 
   680     020D                     	;# 
   681     0211                     	;# 
   682     0211                     	;# 
   683     0212                     	;# 
   684     0212                     	;# 
   685     0213                     	;# 
   686     0213                     	;# 
   687     0214                     	;# 
   688     0214                     	;# 
   689     0215                     	;# 
   690     0215                     	;# 
   691     0215                     	;# 
   692     0216                     	;# 
   693     0216                     	;# 
   694     0217                     	;# 
   695     0217                     	;# 
   696     0219                     	;# 
   697     021A                     	;# 
   698     021B                     	;# 
   699     021C                     	;# 
   700     021D                     	;# 
   701     021E                     	;# 
   702     021F                     	;# 
   703     0291                     	;# 
   704     0291                     	;# 
   705     0292                     	;# 
   706     0293                     	;# 
   707     0294                     	;# 
   708     0295                     	;# 
   709     0295                     	;# 
   710     0296                     	;# 
   711     0298                     	;# 
   712     0298                     	;# 
   713     0299                     	;# 
   714     029A                     	;# 
   715     029B                     	;# 
   716     029C                     	;# 
   717     029C                     	;# 
   718     029D                     	;# 
   719     029E                     	;# 
   720     029E                     	;# 
   721     0311                     	;# 
   722     0311                     	;# 
   723     0312                     	;# 
   724     0313                     	;# 
   725     0318                     	;# 
   726     0318                     	;# 
   727     0319                     	;# 
   728     031A                     	;# 
   729     0394                     	;# 
   730     0395                     	;# 
   731     0396                     	;# 
   732     039A                     	;# 
   733     039C                     	;# 
   734     039D                     	;# 
   735     039E                     	;# 
   736     039F                     	;# 
   737     0415                     	;# 
   738     0416                     	;# 
   739     0417                     	;# 
   740     041C                     	;# 
   741     041D                     	;# 
   742     041E                     	;# 
   743     0FE4                     	;# 
   744     0FE5                     	;# 
   745     0FE6                     	;# 
   746     0FE7                     	;# 
   747     0FE8                     	;# 
   748     0FE9                     	;# 
   749     0FEA                     	;# 
   750     0FEB                     	;# 
   751     0FED                     	;# 
   752     0FEE                     	;# 
   753     0FEF                     	;# 
   754     0000                     	;# 
   755     0001                     	;# 
   756     0002                     	;# 
   757     0003                     	;# 
   758     0004                     	;# 
   759     0005                     	;# 
   760     0006                     	;# 
   761     0007                     	;# 
   762     0008                     	;# 
   763     0009                     	;# 
   764     000A                     	;# 
   765     000B                     	;# 
   766     000C                     	;# 
   767     000D                     	;# 
   768     0011                     	;# 
   769     0012                     	;# 
   770     0013                     	;# 
   771     0014                     	;# 
   772     0015                     	;# 
   773     0016                     	;# 
   774     0016                     	;# 
   775     0017                     	;# 
   776     0018                     	;# 
   777     0019                     	;# 
   778     001A                     	;# 
   779     001B                     	;# 
   780     001C                     	;# 
   781     001E                     	;# 
   782     001F                     	;# 
   783     008C                     	;# 
   784     008D                     	;# 
   785     0091                     	;# 
   786     0092                     	;# 
   787     0093                     	;# 
   788     0094                     	;# 
   789     0095                     	;# 
   790     0096                     	;# 
   791     0097                     	;# 
   792     0098                     	;# 
   793     0099                     	;# 
   794     009A                     	;# 
   795     009B                     	;# 
   796     009B                     	;# 
   797     009C                     	;# 
   798     009D                     	;# 
   799     009E                     	;# 
   800     010C                     	;# 
   801     010D                     	;# 
   802     0111                     	;# 
   803     0112                     	;# 
   804     0113                     	;# 
   805     0114                     	;# 
   806     0115                     	;# 
   807     0116                     	;# 
   808     0117                     	;# 
   809     0118                     	;# 
   810     0119                     	;# 
   811     011A                     	;# 
   812     011B                     	;# 
   813     011D                     	;# 
   814     011E                     	;# 
   815     018C                     	;# 
   816     018D                     	;# 
   817     0191                     	;# 
   818     0191                     	;# 
   819     0192                     	;# 
   820     0193                     	;# 
   821     0193                     	;# 
   822     0193                     	;# 
   823     0194                     	;# 
   824     0195                     	;# 
   825     0196                     	;# 
   826     0199                     	;# 
   827     019A                     	;# 
   828     019B                     	;# 
   829     019B                     	;# 
   830     019B                     	;# 
   831     019B                     	;# 
   832     019C                     	;# 
   833     019C                     	;# 
   834     019D                     	;# 
   835     019E                     	;# 
   836     019F                     	;# 
   837     020C                     	;# 
   838     020D                     	;# 
   839     0211                     	;# 
   840     0211                     	;# 
   841     0212                     	;# 
   842     0212                     	;# 
   843     0213                     	;# 
   844     0213                     	;# 
   845     0214                     	;# 
   846     0214                     	;# 
   847     0215                     	;# 
   848     0215                     	;# 
   849     0215                     	;# 
   850     0216                     	;# 
   851     0216                     	;# 
   852     0217                     	;# 
   853     0217                     	;# 
   854     0219                     	;# 
   855     021A                     	;# 
   856     021B                     	;# 
   857     021C                     	;# 
   858     021D                     	;# 
   859     021E                     	;# 
   860     021F                     	;# 
   861     0291                     	;# 
   862     0291                     	;# 
   863     0292                     	;# 
   864     0293                     	;# 
   865     0294                     	;# 
   866     0295                     	;# 
   867     0295                     	;# 
   868     0296                     	;# 
   869     0298                     	;# 
   870     0298                     	;# 
   871     0299                     	;# 
   872     029A                     	;# 
   873     029B                     	;# 
   874     029C                     	;# 
   875     029C                     	;# 
   876     029D                     	;# 
   877     029E                     	;# 
   878     029E                     	;# 
   879     0311                     	;# 
   880     0311                     	;# 
   881     0312                     	;# 
   882     0313                     	;# 
   883     0318                     	;# 
   884     0318                     	;# 
   885     0319                     	;# 
   886     031A                     	;# 
   887     0394                     	;# 
   888     0395                     	;# 
   889     0396                     	;# 
   890     039A                     	;# 
   891     039C                     	;# 
   892     039D                     	;# 
   893     039E                     	;# 
   894     039F                     	;# 
   895     0415                     	;# 
   896     0416                     	;# 
   897     0417                     	;# 
   898     041C                     	;# 
   899     041D                     	;# 
   900     041E                     	;# 
   901     0FE4                     	;# 
   902     0FE5                     	;# 
   903     0FE6                     	;# 
   904     0FE7                     	;# 
   905     0FE8                     	;# 
   906     0FE9                     	;# 
   907     0FEA                     	;# 
   908     0FEB                     	;# 
   909     0FED                     	;# 
   910     0FEE                     	;# 
   911     0FEF                     	;# 
   912     0000                     	;# 
   913     0001                     	;# 
   914     0002                     	;# 
   915     0003                     	;# 
   916     0004                     	;# 
   917     0005                     	;# 
   918     0006                     	;# 
   919     0007                     	;# 
   920     0008                     	;# 
   921     0009                     	;# 
   922     000A                     	;# 
   923     000B                     	;# 
   924     000C                     	;# 
   925     000D                     	;# 
   926     0011                     	;# 
   927     0012                     	;# 
   928     0013                     	;# 
   929     0014                     	;# 
   930     0015                     	;# 
   931     0016                     	;# 
   932     0016                     	;# 
   933     0017                     	;# 
   934     0018                     	;# 
   935     0019                     	;# 
   936     001A                     	;# 
   937     001B                     	;# 
   938     001C                     	;# 
   939     001E                     	;# 
   940     001F                     	;# 
   941     008C                     	;# 
   942     008D                     	;# 
   943     0091                     	;# 
   944     0092                     	;# 
   945     0093                     	;# 
   946     0094                     	;# 
   947     0095                     	;# 
   948     0096                     	;# 
   949     0097                     	;# 
   950     0098                     	;# 
   951     0099                     	;# 
   952     009A                     	;# 
   953     009B                     	;# 
   954     009B                     	;# 
   955     009C                     	;# 
   956     009D                     	;# 
   957     009E                     	;# 
   958     010C                     	;# 
   959     010D                     	;# 
   960     0111                     	;# 
   961     0112                     	;# 
   962     0113                     	;# 
   963     0114                     	;# 
   964     0115                     	;# 
   965     0116                     	;# 
   966     0117                     	;# 
   967     0118                     	;# 
   968     0119                     	;# 
   969     011A                     	;# 
   970     011B                     	;# 
   971     011D                     	;# 
   972     011E                     	;# 
   973     018C                     	;# 
   974     018D                     	;# 
   975     0191                     	;# 
   976     0191                     	;# 
   977     0192                     	;# 
   978     0193                     	;# 
   979     0193                     	;# 
   980     0193                     	;# 
   981     0194                     	;# 
   982     0195                     	;# 
   983     0196                     	;# 
   984     0199                     	;# 
   985     019A                     	;# 
   986     019B                     	;# 
   987     019B                     	;# 
   988     019B                     	;# 
   989     019B                     	;# 
   990     019C                     	;# 
   991     019C                     	;# 
   992     019D                     	;# 
   993     019E                     	;# 
   994     019F                     	;# 
   995     020C                     	;# 
   996     020D                     	;# 
   997     0211                     	;# 
   998     0211                     	;# 
   999     0212                     	;# 
  1000     0212                     	;# 
  1001     0213                     	;# 
  1002     0213                     	;# 
  1003     0214                     	;# 
  1004     0214                     	;# 
  1005     0215                     	;# 
  1006     0215                     	;# 
  1007     0215                     	;# 
  1008     0216                     	;# 
  1009     0216                     	;# 
  1010     0217                     	;# 
  1011     0217                     	;# 
  1012     0219                     	;# 
  1013     021A                     	;# 
  1014     021B                     	;# 
  1015     021C                     	;# 
  1016     021D                     	;# 
  1017     021E                     	;# 
  1018     021F                     	;# 
  1019     0291                     	;# 
  1020     0291                     	;# 
  1021     0292                     	;# 
  1022     0293                     	;# 
  1023     0294                     	;# 
  1024     0295                     	;# 
  1025     0295                     	;# 
  1026     0296                     	;# 
  1027     0298                     	;# 
  1028     0298                     	;# 
  1029     0299                     	;# 
  1030     029A                     	;# 
  1031     029B                     	;# 
  1032     029C                     	;# 
  1033     029C                     	;# 
  1034     029D                     	;# 
  1035     029E                     	;# 
  1036     029E                     	;# 
  1037     0311                     	;# 
  1038     0311                     	;# 
  1039     0312                     	;# 
  1040     0313                     	;# 
  1041     0318                     	;# 
  1042     0318                     	;# 
  1043     0319                     	;# 
  1044     031A                     	;# 
  1045     0394                     	;# 
  1046     0395                     	;# 
  1047     0396                     	;# 
  1048     039A                     	;# 
  1049     039C                     	;# 
  1050     039D                     	;# 
  1051     039E                     	;# 
  1052     039F                     	;# 
  1053     0415                     	;# 
  1054     0416                     	;# 
  1055     0417                     	;# 
  1056     041C                     	;# 
  1057     041D                     	;# 
  1058     041E                     	;# 
  1059     0FE4                     	;# 
  1060     0FE5                     	;# 
  1061     0FE6                     	;# 
  1062     0FE7                     	;# 
  1063     0FE8                     	;# 
  1064     0FE9                     	;# 
  1065     0FEA                     	;# 
  1066     0FEB                     	;# 
  1067     0FED                     	;# 
  1068     0FEE                     	;# 
  1069     0FEF                     	;# 
  1070     0000                     	;# 
  1071     0001                     	;# 
  1072     0002                     	;# 
  1073     0003                     	;# 
  1074     0004                     	;# 
  1075     0005                     	;# 
  1076     0006                     	;# 
  1077     0007                     	;# 
  1078     0008                     	;# 
  1079     0009                     	;# 
  1080     000A                     	;# 
  1081     000B                     	;# 
  1082     000C                     	;# 
  1083     000D                     	;# 
  1084     0011                     	;# 
  1085     0012                     	;# 
  1086     0013                     	;# 
  1087     0014                     	;# 
  1088     0015                     	;# 
  1089     0016                     	;# 
  1090     0016                     	;# 
  1091     0017                     	;# 
  1092     0018                     	;# 
  1093     0019                     	;# 
  1094     001A                     	;# 
  1095     001B                     	;# 
  1096     001C                     	;# 
  1097     001E                     	;# 
  1098     001F                     	;# 
  1099     008C                     	;# 
  1100     008D                     	;# 
  1101     0091                     	;# 
  1102     0092                     	;# 
  1103     0093                     	;# 
  1104     0094                     	;# 
  1105     0095                     	;# 
  1106     0096                     	;# 
  1107     0097                     	;# 
  1108     0098                     	;# 
  1109     0099                     	;# 
  1110     009A                     	;# 
  1111     009B                     	;# 
  1112     009B                     	;# 
  1113     009C                     	;# 
  1114     009D                     	;# 
  1115     009E                     	;# 
  1116     010C                     	;# 
  1117     010D                     	;# 
  1118     0111                     	;# 
  1119     0112                     	;# 
  1120     0113                     	;# 
  1121     0114                     	;# 
  1122     0115                     	;# 
  1123     0116                     	;# 
  1124     0117                     	;# 
  1125     0118                     	;# 
  1126     0119                     	;# 
  1127     011A                     	;# 
  1128     011B                     	;# 
  1129     011D                     	;# 
  1130     011E                     	;# 
  1131     018C                     	;# 
  1132     018D                     	;# 
  1133     0191                     	;# 
  1134     0191                     	;# 
  1135     0192                     	;# 
  1136     0193                     	;# 
  1137     0193                     	;# 
  1138     0193                     	;# 
  1139     0194                     	;# 
  1140     0195                     	;# 
  1141     0196                     	;# 
  1142     0199                     	;# 
  1143     019A                     	;# 
  1144     019B                     	;# 
  1145     019B                     	;# 
  1146     019B                     	;# 
  1147     019B                     	;# 
  1148     019C                     	;# 
  1149     019C                     	;# 
  1150     019D                     	;# 
  1151     019E                     	;# 
  1152     019F                     	;# 
  1153     020C                     	;# 
  1154     020D                     	;# 
  1155     0211                     	;# 
  1156     0211                     	;# 
  1157     0212                     	;# 
  1158     0212                     	;# 
  1159     0213                     	;# 
  1160     0213                     	;# 
  1161     0214                     	;# 
  1162     0214                     	;# 
  1163     0215                     	;# 
  1164     0215                     	;# 
  1165     0215                     	;# 
  1166     0216                     	;# 
  1167     0216                     	;# 
  1168     0217                     	;# 
  1169     0217                     	;# 
  1170     0219                     	;# 
  1171     021A                     	;# 
  1172     021B                     	;# 
  1173     021C                     	;# 
  1174     021D                     	;# 
  1175     021E                     	;# 
  1176     021F                     	;# 
  1177     0291                     	;# 
  1178     0291                     	;# 
  1179     0292                     	;# 
  1180     0293                     	;# 
  1181     0294                     	;# 
  1182     0295                     	;# 
  1183     0295                     	;# 
  1184     0296                     	;# 
  1185     0298                     	;# 
  1186     0298                     	;# 
  1187     0299                     	;# 
  1188     029A                     	;# 
  1189     029B                     	;# 
  1190     029C                     	;# 
  1191     029C                     	;# 
  1192     029D                     	;# 
  1193     029E                     	;# 
  1194     029E                     	;# 
  1195     0311                     	;# 
  1196     0311                     	;# 
  1197     0312                     	;# 
  1198     0313                     	;# 
  1199     0318                     	;# 
  1200     0318                     	;# 
  1201     0319                     	;# 
  1202     031A                     	;# 
  1203     0394                     	;# 
  1204     0395                     	;# 
  1205     0396                     	;# 
  1206     039A                     	;# 
  1207     039C                     	;# 
  1208     039D                     	;# 
  1209     039E                     	;# 
  1210     039F                     	;# 
  1211     0415                     	;# 
  1212     0416                     	;# 
  1213     0417                     	;# 
  1214     041C                     	;# 
  1215     041D                     	;# 
  1216     041E                     	;# 
  1217     0FE4                     	;# 
  1218     0FE5                     	;# 
  1219     0FE6                     	;# 
  1220     0FE7                     	;# 
  1221     0FE8                     	;# 
  1222     0FE9                     	;# 
  1223     0FEA                     	;# 
  1224     0FEB                     	;# 
  1225     0FED                     	;# 
  1226     0FEE                     	;# 
  1227     0FEF                     	;# 
  1228     0000                     	;# 
  1229     0001                     	;# 
  1230     0002                     	;# 
  1231     0003                     	;# 
  1232     0004                     	;# 
  1233     0005                     	;# 
  1234     0006                     	;# 
  1235     0007                     	;# 
  1236     0008                     	;# 
  1237     0009                     	;# 
  1238     000A                     	;# 
  1239     000B                     	;# 
  1240     000C                     	;# 
  1241     000D                     	;# 
  1242     0011                     	;# 
  1243     0012                     	;# 
  1244     0013                     	;# 
  1245     0014                     	;# 
  1246     0015                     	;# 
  1247     0016                     	;# 
  1248     0016                     	;# 
  1249     0017                     	;# 
  1250     0018                     	;# 
  1251     0019                     	;# 
  1252     001A                     	;# 
  1253     001B                     	;# 
  1254     001C                     	;# 
  1255     001E                     	;# 
  1256     001F                     	;# 
  1257     008C                     	;# 
  1258     008D                     	;# 
  1259     0091                     	;# 
  1260     0092                     	;# 
  1261     0093                     	;# 
  1262     0094                     	;# 
  1263     0095                     	;# 
  1264     0096                     	;# 
  1265     0097                     	;# 
  1266     0098                     	;# 
  1267     0099                     	;# 
  1268     009A                     	;# 
  1269     009B                     	;# 
  1270     009B                     	;# 
  1271     009C                     	;# 
  1272     009D                     	;# 
  1273     009E                     	;# 
  1274     010C                     	;# 
  1275     010D                     	;# 
  1276     0111                     	;# 
  1277     0112                     	;# 
  1278     0113                     	;# 
  1279     0114                     	;# 
  1280     0115                     	;# 
  1281     0116                     	;# 
  1282     0117                     	;# 
  1283     0118                     	;# 
  1284     0119                     	;# 
  1285     011A                     	;# 
  1286     011B                     	;# 
  1287     011D                     	;# 
  1288     011E                     	;# 
  1289     018C                     	;# 
  1290     018D                     	;# 
  1291     0191                     	;# 
  1292     0191                     	;# 
  1293     0192                     	;# 
  1294     0193                     	;# 
  1295     0193                     	;# 
  1296     0193                     	;# 
  1297     0194                     	;# 
  1298     0195                     	;# 
  1299     0196                     	;# 
  1300     0199                     	;# 
  1301     019A                     	;# 
  1302     019B                     	;# 
  1303     019B                     	;# 
  1304     019B                     	;# 
  1305     019B                     	;# 
  1306     019C                     	;# 
  1307     019C                     	;# 
  1308     019D                     	;# 
  1309     019E                     	;# 
  1310     019F                     	;# 
  1311     020C                     	;# 
  1312     020D                     	;# 
  1313     0211                     	;# 
  1314     0211                     	;# 
  1315     0212                     	;# 
  1316     0212                     	;# 
  1317     0213                     	;# 
  1318     0213                     	;# 
  1319     0214                     	;# 
  1320     0214                     	;# 
  1321     0215                     	;# 
  1322     0215                     	;# 
  1323     0215                     	;# 
  1324     0216                     	;# 
  1325     0216                     	;# 
  1326     0217                     	;# 
  1327     0217                     	;# 
  1328     0219                     	;# 
  1329     021A                     	;# 
  1330     021B                     	;# 
  1331     021C                     	;# 
  1332     021D                     	;# 
  1333     021E                     	;# 
  1334     021F                     	;# 
  1335     0291                     	;# 
  1336     0291                     	;# 
  1337     0292                     	;# 
  1338     0293                     	;# 
  1339     0294                     	;# 
  1340     0295                     	;# 
  1341     0295                     	;# 
  1342     0296                     	;# 
  1343     0298                     	;# 
  1344     0298                     	;# 
  1345     0299                     	;# 
  1346     029A                     	;# 
  1347     029B                     	;# 
  1348     029C                     	;# 
  1349     029C                     	;# 
  1350     029D                     	;# 
  1351     029E                     	;# 
  1352     029E                     	;# 
  1353     0311                     	;# 
  1354     0311                     	;# 
  1355     0312                     	;# 
  1356     0313                     	;# 
  1357     0318                     	;# 
  1358     0318                     	;# 
  1359     0319                     	;# 
  1360     031A                     	;# 
  1361     0394                     	;# 
  1362     0395                     	;# 
  1363     0396                     	;# 
  1364     039A                     	;# 
  1365     039C                     	;# 
  1366     039D                     	;# 
  1367     039E                     	;# 
  1368     039F                     	;# 
  1369     0415                     	;# 
  1370     0416                     	;# 
  1371     0417                     	;# 
  1372     041C                     	;# 
  1373     041D                     	;# 
  1374     041E                     	;# 
  1375     0FE4                     	;# 
  1376     0FE5                     	;# 
  1377     0FE6                     	;# 
  1378     0FE7                     	;# 
  1379     0FE8                     	;# 
  1380     0FE9                     	;# 
  1381     0FEA                     	;# 
  1382     0FEB                     	;# 
  1383     0FED                     	;# 
  1384     0FEE                     	;# 
  1385     0FEF                     	;# 
  1386     0000                     	;# 
  1387     0001                     	;# 
  1388     0002                     	;# 
  1389     0003                     	;# 
  1390     0004                     	;# 
  1391     0005                     	;# 
  1392     0006                     	;# 
  1393     0007                     	;# 
  1394     0008                     	;# 
  1395     0009                     	;# 
  1396     000A                     	;# 
  1397     000B                     	;# 
  1398     000C                     	;# 
  1399     000D                     	;# 
  1400     0011                     	;# 
  1401     0012                     	;# 
  1402     0013                     	;# 
  1403     0014                     	;# 
  1404     0015                     	;# 
  1405     0016                     	;# 
  1406     0016                     	;# 
  1407     0017                     	;# 
  1408     0018                     	;# 
  1409     0019                     	;# 
  1410     001A                     	;# 
  1411     001B                     	;# 
  1412     001C                     	;# 
  1413     001E                     	;# 
  1414     001F                     	;# 
  1415     008C                     	;# 
  1416     008D                     	;# 
  1417     0091                     	;# 
  1418     0092                     	;# 
  1419     0093                     	;# 
  1420     0094                     	;# 
  1421     0095                     	;# 
  1422     0096                     	;# 
  1423     0097                     	;# 
  1424     0098                     	;# 
  1425     0099                     	;# 
  1426     009A                     	;# 
  1427     009B                     	;# 
  1428     009B                     	;# 
  1429     009C                     	;# 
  1430     009D                     	;# 
  1431     009E                     	;# 
  1432     010C                     	;# 
  1433     010D                     	;# 
  1434     0111                     	;# 
  1435     0112                     	;# 
  1436     0113                     	;# 
  1437     0114                     	;# 
  1438     0115                     	;# 
  1439     0116                     	;# 
  1440     0117                     	;# 
  1441     0118                     	;# 
  1442     0119                     	;# 
  1443     011A                     	;# 
  1444     011B                     	;# 
  1445     011D                     	;# 
  1446     011E                     	;# 
  1447     018C                     	;# 
  1448     018D                     	;# 
  1449     0191                     	;# 
  1450     0191                     	;# 
  1451     0192                     	;# 
  1452     0193                     	;# 
  1453     0193                     	;# 
  1454     0193                     	;# 
  1455     0194                     	;# 
  1456     0195                     	;# 
  1457     0196                     	;# 
  1458     0199                     	;# 
  1459     019A                     	;# 
  1460     019B                     	;# 
  1461     019B                     	;# 
  1462     019B                     	;# 
  1463     019B                     	;# 
  1464     019C                     	;# 
  1465     019C                     	;# 
  1466     019D                     	;# 
  1467     019E                     	;# 
  1468     019F                     	;# 
  1469     020C                     	;# 
  1470     020D                     	;# 
  1471     0211                     	;# 
  1472     0211                     	;# 
  1473     0212                     	;# 
  1474     0212                     	;# 
  1475     0213                     	;# 
  1476     0213                     	;# 
  1477     0214                     	;# 
  1478     0214                     	;# 
  1479     0215                     	;# 
  1480     0215                     	;# 
  1481     0215                     	;# 
  1482     0216                     	;# 
  1483     0216                     	;# 
  1484     0217                     	;# 
  1485     0217                     	;# 
  1486     0219                     	;# 
  1487     021A                     	;# 
  1488     021B                     	;# 
  1489     021C                     	;# 
  1490     021D                     	;# 
  1491     021E                     	;# 
  1492     021F                     	;# 
  1493     0291                     	;# 
  1494     0291                     	;# 
  1495     0292                     	;# 
  1496     0293                     	;# 
  1497     0294                     	;# 
  1498     0295                     	;# 
  1499     0295                     	;# 
  1500     0296                     	;# 
  1501     0298                     	;# 
  1502     0298                     	;# 
  1503     0299                     	;# 
  1504     029A                     	;# 
  1505     029B                     	;# 
  1506     029C                     	;# 
  1507     029C                     	;# 
  1508     029D                     	;# 
  1509     029E                     	;# 
  1510     029E                     	;# 
  1511     0311                     	;# 
  1512     0311                     	;# 
  1513     0312                     	;# 
  1514     0313                     	;# 
  1515     0318                     	;# 
  1516     0318                     	;# 
  1517     0319                     	;# 
  1518     031A                     	;# 
  1519     0394                     	;# 
  1520     0395                     	;# 
  1521     0396                     	;# 
  1522     039A                     	;# 
  1523     039C                     	;# 
  1524     039D                     	;# 
  1525     039E                     	;# 
  1526     039F                     	;# 
  1527     0415                     	;# 
  1528     0416                     	;# 
  1529     0417                     	;# 
  1530     041C                     	;# 
  1531     041D                     	;# 
  1532     041E                     	;# 
  1533     0FE4                     	;# 
  1534     0FE5                     	;# 
  1535     0FE6                     	;# 
  1536     0FE7                     	;# 
  1537     0FE8                     	;# 
  1538     0FE9                     	;# 
  1539     0FEA                     	;# 
  1540     0FEB                     	;# 
  1541     0FED                     	;# 
  1542     0FEE                     	;# 
  1543     0FEF                     	;# 
  1544     0000                     	;# 
  1545     0001                     	;# 
  1546     0002                     	;# 
  1547     0003                     	;# 
  1548     0004                     	;# 
  1549     0005                     	;# 
  1550     0006                     	;# 
  1551     0007                     	;# 
  1552     0008                     	;# 
  1553     0009                     	;# 
  1554     000A                     	;# 
  1555     000B                     	;# 
  1556     000C                     	;# 
  1557     000D                     	;# 
  1558     0011                     	;# 
  1559     0012                     	;# 
  1560     0013                     	;# 
  1561     0014                     	;# 
  1562     0015                     	;# 
  1563     0016                     	;# 
  1564     0016                     	;# 
  1565     0017                     	;# 
  1566     0018                     	;# 
  1567     0019                     	;# 
  1568     001A                     	;# 
  1569     001B                     	;# 
  1570     001C                     	;# 
  1571     001E                     	;# 
  1572     001F                     	;# 
  1573     008C                     	;# 
  1574     008D                     	;# 
  1575     0091                     	;# 
  1576     0092                     	;# 
  1577     0093                     	;# 
  1578     0094                     	;# 
  1579     0095                     	;# 
  1580     0096                     	;# 
  1581     0097                     	;# 
  1582     0098                     	;# 
  1583     0099                     	;# 
  1584     009A                     	;# 
  1585     009B                     	;# 
  1586     009B                     	;# 
  1587     009C                     	;# 
  1588     009D                     	;# 
  1589     009E                     	;# 
  1590     010C                     	;# 
  1591     010D                     	;# 
  1592     0111                     	;# 
  1593     0112                     	;# 
  1594     0113                     	;# 
  1595     0114                     	;# 
  1596     0115                     	;# 
  1597     0116                     	;# 
  1598     0117                     	;# 
  1599     0118                     	;# 
  1600     0119                     	;# 
  1601     011A                     	;# 
  1602     011B                     	;# 
  1603     011D                     	;# 
  1604     011E                     	;# 
  1605     018C                     	;# 
  1606     018D                     	;# 
  1607     0191                     	;# 
  1608     0191                     	;# 
  1609     0192                     	;# 
  1610     0193                     	;# 
  1611     0193                     	;# 
  1612     0193                     	;# 
  1613     0194                     	;# 
  1614     0195                     	;# 
  1615     0196                     	;# 
  1616     0199                     	;# 
  1617     019A                     	;# 
  1618     019B                     	;# 
  1619     019B                     	;# 
  1620     019B                     	;# 
  1621     019B                     	;# 
  1622     019C                     	;# 
  1623     019C                     	;# 
  1624     019D                     	;# 
  1625     019E                     	;# 
  1626     019F                     	;# 
  1627     020C                     	;# 
  1628     020D                     	;# 
  1629     0211                     	;# 
  1630     0211                     	;# 
  1631     0212                     	;# 
  1632     0212                     	;# 
  1633     0213                     	;# 
  1634     0213                     	;# 
  1635     0214                     	;# 
  1636     0214                     	;# 
  1637     0215                     	;# 
  1638     0215                     	;# 
  1639     0215                     	;# 
  1640     0216                     	;# 
  1641     0216                     	;# 
  1642     0217                     	;# 
  1643     0217                     	;# 
  1644     0219                     	;# 
  1645     021A                     	;# 
  1646     021B                     	;# 
  1647     021C                     	;# 
  1648     021D                     	;# 
  1649     021E                     	;# 
  1650     021F                     	;# 
  1651     0291                     	;# 
  1652     0291                     	;# 
  1653     0292                     	;# 
  1654     0293                     	;# 
  1655     0294                     	;# 
  1656     0295                     	;# 
  1657     0295                     	;# 
  1658     0296                     	;# 
  1659     0298                     	;# 
  1660     0298                     	;# 
  1661     0299                     	;# 
  1662     029A                     	;# 
  1663     029B                     	;# 
  1664     029C                     	;# 
  1665     029C                     	;# 
  1666     029D                     	;# 
  1667     029E                     	;# 
  1668     029E                     	;# 
  1669     0311                     	;# 
  1670     0311                     	;# 
  1671     0312                     	;# 
  1672     0313                     	;# 
  1673     0318                     	;# 
  1674     0318                     	;# 
  1675     0319                     	;# 
  1676     031A                     	;# 
  1677     0394                     	;# 
  1678     0395                     	;# 
  1679     0396                     	;# 
  1680     039A                     	;# 
  1681     039C                     	;# 
  1682     039D                     	;# 
  1683     039E                     	;# 
  1684     039F                     	;# 
  1685     0415                     	;# 
  1686     0416                     	;# 
  1687     0417                     	;# 
  1688     041C                     	;# 
  1689     041D                     	;# 
  1690     041E                     	;# 
  1691     0FE4                     	;# 
  1692     0FE5                     	;# 
  1693     0FE6                     	;# 
  1694     0FE7                     	;# 
  1695     0FE8                     	;# 
  1696     0FE9                     	;# 
  1697     0FEA                     	;# 
  1698     0FEB                     	;# 
  1699     0FED                     	;# 
  1700     0FEE                     	;# 
  1701     0FEF                     	;# 
  1702     0000                     	;# 
  1703     0001                     	;# 
  1704     0002                     	;# 
  1705     0003                     	;# 
  1706     0004                     	;# 
  1707     0005                     	;# 
  1708     0006                     	;# 
  1709     0007                     	;# 
  1710     0008                     	;# 
  1711     0009                     	;# 
  1712     000A                     	;# 
  1713     000B                     	;# 
  1714     000C                     	;# 
  1715     000D                     	;# 
  1716     0011                     	;# 
  1717     0012                     	;# 
  1718     0013                     	;# 
  1719     0014                     	;# 
  1720     0015                     	;# 
  1721     0016                     	;# 
  1722     0016                     	;# 
  1723     0017                     	;# 
  1724     0018                     	;# 
  1725     0019                     	;# 
  1726     001A                     	;# 
  1727     001B                     	;# 
  1728     001C                     	;# 
  1729     001E                     	;# 
  1730     001F                     	;# 
  1731     008C                     	;# 
  1732     008D                     	;# 
  1733     0091                     	;# 
  1734     0092                     	;# 
  1735     0093                     	;# 
  1736     0094                     	;# 
  1737     0095                     	;# 
  1738     0096                     	;# 
  1739     0097                     	;# 
  1740     0098                     	;# 
  1741     0099                     	;# 
  1742     009A                     	;# 
  1743     009B                     	;# 
  1744     009B                     	;# 
  1745     009C                     	;# 
  1746     009D                     	;# 
  1747     009E                     	;# 
  1748     010C                     	;# 
  1749     010D                     	;# 
  1750     0111                     	;# 
  1751     0112                     	;# 
  1752     0113                     	;# 
  1753     0114                     	;# 
  1754     0115                     	;# 
  1755     0116                     	;# 
  1756     0117                     	;# 
  1757     0118                     	;# 
  1758     0119                     	;# 
  1759     011A                     	;# 
  1760     011B                     	;# 
  1761     011D                     	;# 
  1762     011E                     	;# 
  1763     018C                     	;# 
  1764     018D                     	;# 
  1765     0191                     	;# 
  1766     0191                     	;# 
  1767     0192                     	;# 
  1768     0193                     	;# 
  1769     0193                     	;# 
  1770     0193                     	;# 
  1771     0194                     	;# 
  1772     0195                     	;# 
  1773     0196                     	;# 
  1774     0199                     	;# 
  1775     019A                     	;# 
  1776     019B                     	;# 
  1777     019B                     	;# 
  1778     019B                     	;# 
  1779     019B                     	;# 
  1780     019C                     	;# 
  1781     019C                     	;# 
  1782     019D                     	;# 
  1783     019E                     	;# 
  1784     019F                     	;# 
  1785     020C                     	;# 
  1786     020D                     	;# 
  1787     0211                     	;# 
  1788     0211                     	;# 
  1789     0212                     	;# 
  1790     0212                     	;# 
  1791     0213                     	;# 
  1792     0213                     	;# 
  1793     0214                     	;# 
  1794     0214                     	;# 
  1795     0215                     	;# 
  1796     0215                     	;# 
  1797     0215                     	;# 
  1798     0216                     	;# 
  1799     0216                     	;# 
  1800     0217                     	;# 
  1801     0217                     	;# 
  1802     0219                     	;# 
  1803     021A                     	;# 
  1804     021B                     	;# 
  1805     021C                     	;# 
  1806     021D                     	;# 
  1807     021E                     	;# 
  1808     021F                     	;# 
  1809     0291                     	;# 
  1810     0291                     	;# 
  1811     0292                     	;# 
  1812     0293                     	;# 
  1813     0294                     	;# 
  1814     0295                     	;# 
  1815     0295                     	;# 
  1816     0296                     	;# 
  1817     0298                     	;# 
  1818     0298                     	;# 
  1819     0299                     	;# 
  1820     029A                     	;# 
  1821     029B                     	;# 
  1822     029C                     	;# 
  1823     029C                     	;# 
  1824     029D                     	;# 
  1825     029E                     	;# 
  1826     029E                     	;# 
  1827     0311                     	;# 
  1828     0311                     	;# 
  1829     0312                     	;# 
  1830     0313                     	;# 
  1831     0318                     	;# 
  1832     0318                     	;# 
  1833     0319                     	;# 
  1834     031A                     	;# 
  1835     0394                     	;# 
  1836     0395                     	;# 
  1837     0396                     	;# 
  1838     039A                     	;# 
  1839     039C                     	;# 
  1840     039D                     	;# 
  1841     039E                     	;# 
  1842     039F                     	;# 
  1843     0415                     	;# 
  1844     0416                     	;# 
  1845     0417                     	;# 
  1846     041C                     	;# 
  1847     041D                     	;# 
  1848     041E                     	;# 
  1849     0FE4                     	;# 
  1850     0FE5                     	;# 
  1851     0FE6                     	;# 
  1852     0FE7                     	;# 
  1853     0FE8                     	;# 
  1854     0FE9                     	;# 
  1855     0FEA                     	;# 
  1856     0FEB                     	;# 
  1857     0FED                     	;# 
  1858     0FEE                     	;# 
  1859     0FEF                     	;# 
  1860     0000                     	;# 
  1861     0001                     	;# 
  1862     0002                     	;# 
  1863     0003                     	;# 
  1864     0004                     	;# 
  1865     0005                     	;# 
  1866     0006                     	;# 
  1867     0007                     	;# 
  1868     0008                     	;# 
  1869     0009                     	;# 
  1870     000A                     	;# 
  1871     000B                     	;# 
  1872     000C                     	;# 
  1873     000D                     	;# 
  1874     0011                     	;# 
  1875     0012                     	;# 
  1876     0013                     	;# 
  1877     0014                     	;# 
  1878     0015                     	;# 
  1879     0016                     	;# 
  1880     0016                     	;# 
  1881     0017                     	;# 
  1882     0018                     	;# 
  1883     0019                     	;# 
  1884     001A                     	;# 
  1885     001B                     	;# 
  1886     001C                     	;# 
  1887     001E                     	;# 
  1888     001F                     	;# 
  1889     008C                     	;# 
  1890     008D                     	;# 
  1891     0091                     	;# 
  1892     0092                     	;# 
  1893     0093                     	;# 
  1894     0094                     	;# 
  1895     0095                     	;# 
  1896     0096                     	;# 
  1897     0097                     	;# 
  1898     0098                     	;# 
  1899     0099                     	;# 
  1900     009A                     	;# 
  1901     009B                     	;# 
  1902     009B                     	;# 
  1903     009C                     	;# 
  1904     009D                     	;# 
  1905     009E                     	;# 
  1906     010C                     	;# 
  1907     010D                     	;# 
  1908     0111                     	;# 
  1909     0112                     	;# 
  1910     0113                     	;# 
  1911     0114                     	;# 
  1912     0115                     	;# 
  1913     0116                     	;# 
  1914     0117                     	;# 
  1915     0118                     	;# 
  1916     0119                     	;# 
  1917     011A                     	;# 
  1918     011B                     	;# 
  1919     011D                     	;# 
  1920     011E                     	;# 
  1921     018C                     	;# 
  1922     018D                     	;# 
  1923     0191                     	;# 
  1924     0191                     	;# 
  1925     0192                     	;# 
  1926     0193                     	;# 
  1927     0193                     	;# 
  1928     0193                     	;# 
  1929     0194                     	;# 
  1930     0195                     	;# 
  1931     0196                     	;# 
  1932     0199                     	;# 
  1933     019A                     	;# 
  1934     019B                     	;# 
  1935     019B                     	;# 
  1936     019B                     	;# 
  1937     019B                     	;# 
  1938     019C                     	;# 
  1939     019C                     	;# 
  1940     019D                     	;# 
  1941     019E                     	;# 
  1942     019F                     	;# 
  1943     020C                     	;# 
  1944     020D                     	;# 
  1945     0211                     	;# 
  1946     0211                     	;# 
  1947     0212                     	;# 
  1948     0212                     	;# 
  1949     0213                     	;# 
  1950     0213                     	;# 
  1951     0214                     	;# 
  1952     0214                     	;# 
  1953     0215                     	;# 
  1954     0215                     	;# 
  1955     0215                     	;# 
  1956     0216                     	;# 
  1957     0216                     	;# 
  1958     0217                     	;# 
  1959     0217                     	;# 
  1960     0219                     	;# 
  1961     021A                     	;# 
  1962     021B                     	;# 
  1963     021C                     	;# 
  1964     021D                     	;# 
  1965     021E                     	;# 
  1966     021F                     	;# 
  1967     0291                     	;# 
  1968     0291                     	;# 
  1969     0292                     	;# 
  1970     0293                     	;# 
  1971     0294                     	;# 
  1972     0295                     	;# 
  1973     0295                     	;# 
  1974     0296                     	;# 
  1975     0298                     	;# 
  1976     0298                     	;# 
  1977     0299                     	;# 
  1978     029A                     	;# 
  1979     029B                     	;# 
  1980     029C                     	;# 
  1981     029C                     	;# 
  1982     029D                     	;# 
  1983     029E                     	;# 
  1984     029E                     	;# 
  1985     0311                     	;# 
  1986     0311                     	;# 
  1987     0312                     	;# 
  1988     0313                     	;# 
  1989     0318                     	;# 
  1990     0318                     	;# 
  1991     0319                     	;# 
  1992     031A                     	;# 
  1993     0394                     	;# 
  1994     0395                     	;# 
  1995     0396                     	;# 
  1996     039A                     	;# 
  1997     039C                     	;# 
  1998     039D                     	;# 
  1999     039E                     	;# 
  2000     039F                     	;# 
  2001     0415                     	;# 
  2002     0416                     	;# 
  2003     0417                     	;# 
  2004     041C                     	;# 
  2005     041D                     	;# 
  2006     041E                     	;# 
  2007     0FE4                     	;# 
  2008     0FE5                     	;# 
  2009     0FE6                     	;# 
  2010     0FE7                     	;# 
  2011     0FE8                     	;# 
  2012     0FE9                     	;# 
  2013     0FEA                     	;# 
  2014     0FEB                     	;# 
  2015     0FED                     	;# 
  2016     0FEE                     	;# 
  2017     0FEF                     	;# 
  2018     0000                     	;# 
  2019     0001                     	;# 
  2020     0002                     	;# 
  2021     0003                     	;# 
  2022     0004                     	;# 
  2023     0005                     	;# 
  2024     0006                     	;# 
  2025     0007                     	;# 
  2026     0008                     	;# 
  2027     0009                     	;# 
  2028     000A                     	;# 
  2029     000B                     	;# 
  2030     000C                     	;# 
  2031     000D                     	;# 
  2032     0011                     	;# 
  2033     0012                     	;# 
  2034     0013                     	;# 
  2035     0014                     	;# 
  2036     0015                     	;# 
  2037     0016                     	;# 
  2038     0016                     	;# 
  2039     0017                     	;# 
  2040     0018                     	;# 
  2041     0019                     	;# 
  2042     001A                     	;# 
  2043     001B                     	;# 
  2044     001C                     	;# 
  2045     001E                     	;# 
  2046     001F                     	;# 
  2047     008C                     	;# 
  2048     008D                     	;# 
  2049     0091                     	;# 
  2050     0092                     	;# 
  2051     0093                     	;# 
  2052     0094                     	;# 
  2053     0095                     	;# 
  2054     0096                     	;# 
  2055     0097                     	;# 
  2056     0098                     	;# 
  2057     0099                     	;# 
  2058     009A                     	;# 
  2059     009B                     	;# 
  2060     009B                     	;# 
  2061     009C                     	;# 
  2062     009D                     	;# 
  2063     009E                     	;# 
  2064     010C                     	;# 
  2065     010D                     	;# 
  2066     0111                     	;# 
  2067     0112                     	;# 
  2068     0113                     	;# 
  2069     0114                     	;# 
  2070     0115                     	;# 
  2071     0116                     	;# 
  2072     0117                     	;# 
  2073     0118                     	;# 
  2074     0119                     	;# 
  2075     011A                     	;# 
  2076     011B                     	;# 
  2077     011D                     	;# 
  2078     011E                     	;# 
  2079     018C                     	;# 
  2080     018D                     	;# 
  2081     0191                     	;# 
  2082     0191                     	;# 
  2083     0192                     	;# 
  2084     0193                     	;# 
  2085     0193                     	;# 
  2086     0193                     	;# 
  2087     0194                     	;# 
  2088     0195                     	;# 
  2089     0196                     	;# 
  2090     0199                     	;# 
  2091     019A                     	;# 
  2092     019B                     	;# 
  2093     019B                     	;# 
  2094     019B                     	;# 
  2095     019B                     	;# 
  2096     019C                     	;# 
  2097     019C                     	;# 
  2098     019D                     	;# 
  2099     019E                     	;# 
  2100     019F                     	;# 
  2101     020C                     	;# 
  2102     020D                     	;# 
  2103     0211                     	;# 
  2104     0211                     	;# 
  2105     0212                     	;# 
  2106     0212                     	;# 
  2107     0213                     	;# 
  2108     0213                     	;# 
  2109     0214                     	;# 
  2110     0214                     	;# 
  2111     0215                     	;# 
  2112     0215                     	;# 
  2113     0215                     	;# 
  2114     0216                     	;# 
  2115     0216                     	;# 
  2116     0217                     	;# 
  2117     0217                     	;# 
  2118     0219                     	;# 
  2119     021A                     	;# 
  2120     021B                     	;# 
  2121     021C                     	;# 
  2122     021D                     	;# 
  2123     021E                     	;# 
  2124     021F                     	;# 
  2125     0291                     	;# 
  2126     0291                     	;# 
  2127     0292                     	;# 
  2128     0293                     	;# 
  2129     0294                     	;# 
  2130     0295                     	;# 
  2131     0295                     	;# 
  2132     0296                     	;# 
  2133     0298                     	;# 
  2134     0298                     	;# 
  2135     0299                     	;# 
  2136     029A                     	;# 
  2137     029B                     	;# 
  2138     029C                     	;# 
  2139     029C                     	;# 
  2140     029D                     	;# 
  2141     029E                     	;# 
  2142     029E                     	;# 
  2143     0311                     	;# 
  2144     0311                     	;# 
  2145     0312                     	;# 
  2146     0313                     	;# 
  2147     0318                     	;# 
  2148     0318                     	;# 
  2149     0319                     	;# 
  2150     031A                     	;# 
  2151     0394                     	;# 
  2152     0395                     	;# 
  2153     0396                     	;# 
  2154     039A                     	;# 
  2155     039C                     	;# 
  2156     039D                     	;# 
  2157     039E                     	;# 
  2158     039F                     	;# 
  2159     0415                     	;# 
  2160     0416                     	;# 
  2161     0417                     	;# 
  2162     041C                     	;# 
  2163     041D                     	;# 
  2164     041E                     	;# 
  2165     0FE4                     	;# 
  2166     0FE5                     	;# 
  2167     0FE6                     	;# 
  2168     0FE7                     	;# 
  2169     0FE8                     	;# 
  2170     0FE9                     	;# 
  2171     0FEA                     	;# 
  2172     0FEB                     	;# 
  2173     0FED                     	;# 
  2174     0FEE                     	;# 
  2175     0FEF                     	;# 
  2176     0000                     	;# 
  2177     0001                     	;# 
  2178     0002                     	;# 
  2179     0003                     	;# 
  2180     0004                     	;# 
  2181     0005                     	;# 
  2182     0006                     	;# 
  2183     0007                     	;# 
  2184     0008                     	;# 
  2185     0009                     	;# 
  2186     000A                     	;# 
  2187     000B                     	;# 
  2188     000C                     	;# 
  2189     000D                     	;# 
  2190     0011                     	;# 
  2191     0012                     	;# 
  2192     0013                     	;# 
  2193     0014                     	;# 
  2194     0015                     	;# 
  2195     0016                     	;# 
  2196     0016                     	;# 
  2197     0017                     	;# 
  2198     0018                     	;# 
  2199     0019                     	;# 
  2200     001A                     	;# 
  2201     001B                     	;# 
  2202     001C                     	;# 
  2203     001E                     	;# 
  2204     001F                     	;# 
  2205     008C                     	;# 
  2206     008D                     	;# 
  2207     0091                     	;# 
  2208     0092                     	;# 
  2209     0093                     	;# 
  2210     0094                     	;# 
  2211     0095                     	;# 
  2212     0096                     	;# 
  2213     0097                     	;# 
  2214     0098                     	;# 
  2215     0099                     	;# 
  2216     009A                     	;# 
  2217     009B                     	;# 
  2218     009B                     	;# 
  2219     009C                     	;# 
  2220     009D                     	;# 
  2221     009E                     	;# 
  2222     010C                     	;# 
  2223     010D                     	;# 
  2224     0111                     	;# 
  2225     0112                     	;# 
  2226     0113                     	;# 
  2227     0114                     	;# 
  2228     0115                     	;# 
  2229     0116                     	;# 
  2230     0117                     	;# 
  2231     0118                     	;# 
  2232     0119                     	;# 
  2233     011A                     	;# 
  2234     011B                     	;# 
  2235     011D                     	;# 
  2236     011E                     	;# 
  2237     018C                     	;# 
  2238     018D                     	;# 
  2239     0191                     	;# 
  2240     0191                     	;# 
  2241     0192                     	;# 
  2242     0193                     	;# 
  2243     0193                     	;# 
  2244     0193                     	;# 
  2245     0194                     	;# 
  2246     0195                     	;# 
  2247     0196                     	;# 
  2248     0199                     	;# 
  2249     019A                     	;# 
  2250     019B                     	;# 
  2251     019B                     	;# 
  2252     019B                     	;# 
  2253     019B                     	;# 
  2254     019C                     	;# 
  2255     019C                     	;# 
  2256     019D                     	;# 
  2257     019E                     	;# 
  2258     019F                     	;# 
  2259     020C                     	;# 
  2260     020D                     	;# 
  2261     0211                     	;# 
  2262     0211                     	;# 
  2263     0212                     	;# 
  2264     0212                     	;# 
  2265     0213                     	;# 
  2266     0213                     	;# 
  2267     0214                     	;# 
  2268     0214                     	;# 
  2269     0215                     	;# 
  2270     0215                     	;# 
  2271     0215                     	;# 
  2272     0216                     	;# 
  2273     0216                     	;# 
  2274     0217                     	;# 
  2275     0217                     	;# 
  2276     0219                     	;# 
  2277     021A                     	;# 
  2278     021B                     	;# 
  2279     021C                     	;# 
  2280     021D                     	;# 
  2281     021E                     	;# 
  2282     021F                     	;# 
  2283     0291                     	;# 
  2284     0291                     	;# 
  2285     0292                     	;# 
  2286     0293                     	;# 
  2287     0294                     	;# 
  2288     0295                     	;# 
  2289     0295                     	;# 
  2290     0296                     	;# 
  2291     0298                     	;# 
  2292     0298                     	;# 
  2293     0299                     	;# 
  2294     029A                     	;# 
  2295     029B                     	;# 
  2296     029C                     	;# 
  2297     029C                     	;# 
  2298     029D                     	;# 
  2299     029E                     	;# 
  2300     029E                     	;# 
  2301     0311                     	;# 
  2302     0311                     	;# 
  2303     0312                     	;# 
  2304     0313                     	;# 
  2305     0318                     	;# 
  2306     0318                     	;# 
  2307     0319                     	;# 
  2308     031A                     	;# 
  2309     0394                     	;# 
  2310     0395                     	;# 
  2311     0396                     	;# 
  2312     039A                     	;# 
  2313     039C                     	;# 
  2314     039D                     	;# 
  2315     039E                     	;# 
  2316     039F                     	;# 
  2317     0415                     	;# 
  2318     0416                     	;# 
  2319     0417                     	;# 
  2320     041C                     	;# 
  2321     041D                     	;# 
  2322     041E                     	;# 
  2323     0FE4                     	;# 
  2324     0FE5                     	;# 
  2325     0FE6                     	;# 
  2326     0FE7                     	;# 
  2327     0FE8                     	;# 
  2328     0FE9                     	;# 
  2329     0FEA                     	;# 
  2330     0FEB                     	;# 
  2331     0FED                     	;# 
  2332     0FEE                     	;# 
  2333     0FEF                     	;# 
  2334     0000                     	;# 
  2335     0001                     	;# 
  2336     0002                     	;# 
  2337     0003                     	;# 
  2338     0004                     	;# 
  2339     0005                     	;# 
  2340     0006                     	;# 
  2341     0007                     	;# 
  2342     0008                     	;# 
  2343     0009                     	;# 
  2344     000A                     	;# 
  2345     000B                     	;# 
  2346     000C                     	;# 
  2347     000D                     	;# 
  2348     0011                     	;# 
  2349     0012                     	;# 
  2350     0013                     	;# 
  2351     0014                     	;# 
  2352     0015                     	;# 
  2353     0016                     	;# 
  2354     0016                     	;# 
  2355     0017                     	;# 
  2356     0018                     	;# 
  2357     0019                     	;# 
  2358     001A                     	;# 
  2359     001B                     	;# 
  2360     001C                     	;# 
  2361     001E                     	;# 
  2362     001F                     	;# 
  2363     008C                     	;# 
  2364     008D                     	;# 
  2365     0091                     	;# 
  2366     0092                     	;# 
  2367     0093                     	;# 
  2368     0094                     	;# 
  2369     0095                     	;# 
  2370     0096                     	;# 
  2371     0097                     	;# 
  2372     0098                     	;# 
  2373     0099                     	;# 
  2374     009A                     	;# 
  2375     009B                     	;# 
  2376     009B                     	;# 
  2377     009C                     	;# 
  2378     009D                     	;# 
  2379     009E                     	;# 
  2380     010C                     	;# 
  2381     010D                     	;# 
  2382     0111                     	;# 
  2383     0112                     	;# 
  2384     0113                     	;# 
  2385     0114                     	;# 
  2386     0115                     	;# 
  2387     0116                     	;# 
  2388     0117                     	;# 
  2389     0118                     	;# 
  2390     0119                     	;# 
  2391     011A                     	;# 
  2392     011B                     	;# 
  2393     011D                     	;# 
  2394     011E                     	;# 
  2395     018C                     	;# 
  2396     018D                     	;# 
  2397     0191                     	;# 
  2398     0191                     	;# 
  2399     0192                     	;# 
  2400     0193                     	;# 
  2401     0193                     	;# 
  2402     0193                     	;# 
  2403     0194                     	;# 
  2404     0195                     	;# 
  2405     0196                     	;# 
  2406     0199                     	;# 
  2407     019A                     	;# 
  2408     019B                     	;# 
  2409     019B                     	;# 
  2410     019B                     	;# 
  2411     019B                     	;# 
  2412     019C                     	;# 
  2413     019C                     	;# 
  2414     019D                     	;# 
  2415     019E                     	;# 
  2416     019F                     	;# 
  2417     020C                     	;# 
  2418     020D                     	;# 
  2419     0211                     	;# 
  2420     0211                     	;# 
  2421     0212                     	;# 
  2422     0212                     	;# 
  2423     0213                     	;# 
  2424     0213                     	;# 
  2425     0214                     	;# 
  2426     0214                     	;# 
  2427     0215                     	;# 
  2428     0215                     	;# 
  2429     0215                     	;# 
  2430     0216                     	;# 
  2431     0216                     	;# 
  2432     0217                     	;# 
  2433     0217                     	;# 
  2434     0219                     	;# 
  2435     021A                     	;# 
  2436     021B                     	;# 
  2437     021C                     	;# 
  2438     021D                     	;# 
  2439     021E                     	;# 
  2440     021F                     	;# 
  2441     0291                     	;# 
  2442     0291                     	;# 
  2443     0292                     	;# 
  2444     0293                     	;# 
  2445     0294                     	;# 
  2446     0295                     	;# 
  2447     0295                     	;# 
  2448     0296                     	;# 
  2449     0298                     	;# 
  2450     0298                     	;# 
  2451     0299                     	;# 
  2452     029A                     	;# 
  2453     029B                     	;# 
  2454     029C                     	;# 
  2455     029C                     	;# 
  2456     029D                     	;# 
  2457     029E                     	;# 
  2458     029E                     	;# 
  2459     0311                     	;# 
  2460     0311                     	;# 
  2461     0312                     	;# 
  2462     0313                     	;# 
  2463     0318                     	;# 
  2464     0318                     	;# 
  2465     0319                     	;# 
  2466     031A                     	;# 
  2467     0394                     	;# 
  2468     0395                     	;# 
  2469     0396                     	;# 
  2470     039A                     	;# 
  2471     039C                     	;# 
  2472     039D                     	;# 
  2473     039E                     	;# 
  2474     039F                     	;# 
  2475     0415                     	;# 
  2476     0416                     	;# 
  2477     0417                     	;# 
  2478     041C                     	;# 
  2479     041D                     	;# 
  2480     041E                     	;# 
  2481     0FE4                     	;# 
  2482     0FE5                     	;# 
  2483     0FE6                     	;# 
  2484     0FE7                     	;# 
  2485     0FE8                     	;# 
  2486     0FE9                     	;# 
  2487     0FEA                     	;# 
  2488     0FEB                     	;# 
  2489     0FED                     	;# 
  2490     0FEE                     	;# 
  2491     0FEF                     	;# 
  2492     0000                     	;# 
  2493     0001                     	;# 
  2494     0002                     	;# 
  2495     0003                     	;# 
  2496     0004                     	;# 
  2497     0005                     	;# 
  2498     0006                     	;# 
  2499     0007                     	;# 
  2500     0008                     	;# 
  2501     0009                     	;# 
  2502     000A                     	;# 
  2503     000B                     	;# 
  2504     000C                     	;# 
  2505     000D                     	;# 
  2506     0011                     	;# 
  2507     0012                     	;# 
  2508     0013                     	;# 
  2509     0014                     	;# 
  2510     0015                     	;# 
  2511     0016                     	;# 
  2512     0016                     	;# 
  2513     0017                     	;# 
  2514     0018                     	;# 
  2515     0019                     	;# 
  2516     001A                     	;# 
  2517     001B                     	;# 
  2518     001C                     	;# 
  2519     001E                     	;# 
  2520     001F                     	;# 
  2521     008C                     	;# 
  2522     008D                     	;# 
  2523     0091                     	;# 
  2524     0092                     	;# 
  2525     0093                     	;# 
  2526     0094                     	;# 
  2527     0095                     	;# 
  2528     0096                     	;# 
  2529     0097                     	;# 
  2530     0098                     	;# 
  2531     0099                     	;# 
  2532     009A                     	;# 
  2533     009B                     	;# 
  2534     009B                     	;# 
  2535     009C                     	;# 
  2536     009D                     	;# 
  2537     009E                     	;# 
  2538     010C                     	;# 
  2539     010D                     	;# 
  2540     0111                     	;# 
  2541     0112                     	;# 
  2542     0113                     	;# 
  2543     0114                     	;# 
  2544     0115                     	;# 
  2545     0116                     	;# 
  2546     0117                     	;# 
  2547     0118                     	;# 
  2548     0119                     	;# 
  2549     011A                     	;# 
  2550     011B                     	;# 
  2551     011D                     	;# 
  2552     011E                     	;# 
  2553     018C                     	;# 
  2554     018D                     	;# 
  2555     0191                     	;# 
  2556     0191                     	;# 
  2557     0192                     	;# 
  2558     0193                     	;# 
  2559     0193                     	;# 
  2560     0193                     	;# 
  2561     0194                     	;# 
  2562     0195                     	;# 
  2563     0196                     	;# 
  2564     0199                     	;# 
  2565     019A                     	;# 
  2566     019B                     	;# 
  2567     019B                     	;# 
  2568     019B                     	;# 
  2569     019B                     	;# 
  2570     019C                     	;# 
  2571     019C                     	;# 
  2572     019D                     	;# 
  2573     019E                     	;# 
  2574     019F                     	;# 
  2575     020C                     	;# 
  2576     020D                     	;# 
  2577     0211                     	;# 
  2578     0211                     	;# 
  2579     0212                     	;# 
  2580     0212                     	;# 
  2581     0213                     	;# 
  2582     0213                     	;# 
  2583     0214                     	;# 
  2584     0214                     	;# 
  2585     0215                     	;# 
  2586     0215                     	;# 
  2587     0215                     	;# 
  2588     0216                     	;# 
  2589     0216                     	;# 
  2590     0217                     	;# 
  2591     0217                     	;# 
  2592     0219                     	;# 
  2593     021A                     	;# 
  2594     021B                     	;# 
  2595     021C                     	;# 
  2596     021D                     	;# 
  2597     021E                     	;# 
  2598     021F                     	;# 
  2599     0291                     	;# 
  2600     0291                     	;# 
  2601     0292                     	;# 
  2602     0293                     	;# 
  2603     0294                     	;# 
  2604     0295                     	;# 
  2605     0295                     	;# 
  2606     0296                     	;# 
  2607     0298                     	;# 
  2608     0298                     	;# 
  2609     0299                     	;# 
  2610     029A                     	;# 
  2611     029B                     	;# 
  2612     029C                     	;# 
  2613     029C                     	;# 
  2614     029D                     	;# 
  2615     029E                     	;# 
  2616     029E                     	;# 
  2617     0311                     	;# 
  2618     0311                     	;# 
  2619     0312                     	;# 
  2620     0313                     	;# 
  2621     0318                     	;# 
  2622     0318                     	;# 
  2623     0319                     	;# 
  2624     031A                     	;# 
  2625     0394                     	;# 
  2626     0395                     	;# 
  2627     0396                     	;# 
  2628     039A                     	;# 
  2629     039C                     	;# 
  2630     039D                     	;# 
  2631     039E                     	;# 
  2632     039F                     	;# 
  2633     0415                     	;# 
  2634     0416                     	;# 
  2635     0417                     	;# 
  2636     041C                     	;# 
  2637     041D                     	;# 
  2638     041E                     	;# 
  2639     0FE4                     	;# 
  2640     0FE5                     	;# 
  2641     0FE6                     	;# 
  2642     0FE7                     	;# 
  2643     0FE8                     	;# 
  2644     0FE9                     	;# 
  2645     0FEA                     	;# 
  2646     0FEB                     	;# 
  2647     0FED                     	;# 
  2648     0FEE                     	;# 
  2649     0FEF                     	;# 
  2650                           
  2651                           	psect	idataBANK1
  2652     0BCC                     __pidataBANK1:
  2653                           
  2654                           ;initializer for _kdp
  2655     0BCC  3401               	retlw	1
  2656     0BCD  3400               	retlw	0
  2657                           
  2658                           ;initializer for _kip
  2659     0BCE  3413               	retlw	19
  2660     0BCF  3400               	retlw	0
  2661                           
  2662                           ;initializer for _kpp
  2663     0BD0  340C               	retlw	12
  2664     0BD1  3400               	retlw	0
  2665                           
  2666                           ;initializer for _kif
  2667     0BD2  3469               	retlw	105
  2668     0BD3  3400               	retlw	0
  2669                           
  2670                           ;initializer for _kpf
  2671     0BD4  342D               	retlw	45
  2672     0BD5  3400               	retlw	0
  2673                           
  2674                           ;initializer for _incPos
  2675     0BD6  3401               	retlw	1
  2676                           
  2677                           ;initializer for _controlchoice
  2678     0BD7  3401               	retlw	1
  2679                           
  2680                           	psect	nvBANK2
  2681     0144                     __pnvBANK2:
  2682     0144                     _adc_temp:
  2683     0144                     	ds	2
  2684     0146                     _TMR1_GateInterruptHandler:
  2685     0146                     	ds	2
  2686     0148                     _TMR6_InterruptHandler:
  2687     0148                     	ds	2
  2688     014A                     _TMR0_InterruptHandler:
  2689     014A                     	ds	2
  2690     014C                     _EUSART_ErrorHandler:
  2691     014C                     	ds	2
  2692     014E                     _EUSART_OverrunErrorHandler:
  2693     014E                     	ds	2
  2694     0150                     _EUSART_FramingErrorHandler:
  2695     0150                     	ds	2
  2696     0152                     _EUSART_RxDefaultInterruptHandler:
  2697     0152                     	ds	2
  2698     0154                     _EUSART_TxDefaultInterruptHandler:
  2699     0154                     	ds	2
  2700     0019                     _T1GCONbits	set	25
  2701     0018                     _T1CONbits	set	24
  2702     0018                     _T1CON	set	24
  2703     0016                     _TMR1L	set	22
  2704     0017                     _TMR1H	set	23
  2705     0019                     _T1GCON	set	25
  2706     0015                     _TMR0	set	21
  2707     0013                     _PIR3bits	set	19
  2708     001C                     _T2CONbits	set	28
  2709     001C                     _T2CON	set	28
  2710     0011                     _PIR1bits	set	17
  2711     001A                     _TMR2	set	26
  2712     001B                     _PR2	set	27
  2713     000B                     _INTCONbits	set	11
  2714     009D                     _ADCON0bits	set	157
  2715     009D                     _ADCON0	set	157
  2716     009C                     _ADRESH	set	156
  2717     009B                     _ADRESL	set	155
  2718     009E                     _ADCON1	set	158
  2719     0095                     _OPTION_REG	set	149
  2720     0093                     _PIE3bits	set	147
  2721     0091                     _PIE1bits	set	145
  2722     0095                     _OPTION_REGbits	set	149
  2723     008D                     _TRISB	set	141
  2724     008C                     _TRISA	set	140
  2725     0097                     _WDTCON	set	151
  2726     0098                     _OSCTUNE	set	152
  2727     0099                     _OSCCON	set	153
  2728     010C                     _LATAbits	set	268
  2729     0115                     _CMOUTbits	set	277
  2730     0112                     _CM1CON1	set	274
  2731     0111                     _CM1CON0	set	273
  2732     0119                     _DACCON1	set	281
  2733     0118                     _DACCON0	set	280
  2734     0117                     _FVRCONbits	set	279
  2735     0117                     _FVRCON	set	279
  2736     011E                     _APFCON1	set	286
  2737     011D                     _APFCON0	set	285
  2738     010D                     _LATB	set	269
  2739     010C                     _LATA	set	268
  2740     0116                     _BORCON	set	278
  2741     0199                     _RCREG	set	409
  2742     019D                     _RCSTAbits	set	413
  2743     019A                     _TXREG	set	410
  2744     019E                     _TXSTAbits	set	414
  2745     019C                     _SPBRGH	set	412
  2746     019B                     _SPBRGL	set	411
  2747     019E                     _TXSTA	set	414
  2748     019D                     _RCSTA	set	413
  2749     019F                     _BAUDCON	set	415
  2750     018C                     _ANSELA	set	396
  2751     018D                     _ANSELB	set	397
  2752     020C                     _WPUA	set	524
  2753     020D                     _WPUB	set	525
  2754     029E                     _CCPTMRS0bits	set	670
  2755     0291                     _CCPR1L	set	657
  2756     0292                     _CCPR1H	set	658
  2757     0296                     _PSTR1CON	set	662
  2758     0294                     _PWM1CON	set	660
  2759     0295                     _ECCP1AS	set	661
  2760     0293                     _CCP1CON	set	659
  2761     041E                     _T6CONbits	set	1054
  2762     041E                     _T6CON	set	1054
  2763     041C                     _TMR6	set	1052
  2764     041D                     _PR6	set	1053
  2765     0417                     _T4CONbits	set	1047
  2766     0417                     _T4CON	set	1047
  2767     0415                     _TMR4	set	1045
  2768     0416                     _PR4	set	1046
  2769                           
  2770                           	psect	cinit
  2771     0064                     start_initialization:	
  2772                           ; #config settings
  2773                           
  2774     0064                     __initialization:
  2775                           
  2776                           ; Initialize objects allocated to BANK1
  2777     0064  30CC               	movlw	low __pidataBANK1
  2778     0065  0084               	movwf	4
  2779     0066  308B               	movlw	(high __pidataBANK1)| (0+128)
  2780     0067  0085               	movwf	5
  2781     0068  30E4               	movlw	low __pdataBANK1
  2782     0069  0086               	movwf	6
  2783     006A  3000               	movlw	high __pdataBANK1
  2784     006B  0087               	movwf	7
  2785     006C  300C               	movlw	12
  2786     006D  318B  235D  3180   	fcall	init_ram
  2787                           
  2788                           ; Clear objects allocated to BANK0
  2789     0070  01EE               	clrf	__pbssBANK0& (0+127)
  2790     0071  01EF               	clrf	(__pbssBANK0+1)& (0+127)
  2791                           
  2792                           ; Clear objects allocated to BANK1
  2793     0072  30A0               	movlw	low __pbssBANK1
  2794     0073  0084               	movwf	4
  2795     0074  3000               	movlw	high __pbssBANK1
  2796     0075  0085               	movwf	5
  2797     0076  3032               	movlw	50
  2798     0077  318B  2357  3180   	fcall	clear_ram0
  2799                           
  2800                           ; Clear objects allocated to BANK2
  2801     007A  3020               	movlw	low __pbssBANK2
  2802     007B  0084               	movwf	4
  2803     007C  3001               	movlw	high __pbssBANK2
  2804     007D  0085               	movwf	5
  2805     007E  3024               	movlw	36
  2806     007F  318B  2357  3180   	fcall	clear_ram0
  2807     0082                     end_of_initialization:	
  2808                           ;End of C runtime variable initialization code
  2809                           
  2810     0082                     __end_of__initialization:
  2811     0082  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2812     0083  0020               	movlb	0
  2813     0084  318F  2F67         	ljmp	_main	;jump to C main() function
  2814                           
  2815                           	psect	bssBANK0
  2816     006E                     __pbssBANK0:
  2817     006E                     _vRx:
  2818     006E                     	ds	2
  2819                           
  2820                           	psect	bssBANK1
  2821     00A0                     __pbssBANK1:
  2822     00A0                     _bufferRx:
  2823     00A0                     	ds	8
  2824     00A8                     _position:
  2825     00A8                     	ds	2
  2826     00AA                     _height:
  2827     00AA                     	ds	2
  2828     00AC                     _dc:
  2829     00AC                     	ds	2
  2830     00AE                     _sp_height:
  2831     00AE                     	ds	2
  2832     00B0                     _vTx:
  2833     00B0                     	ds	2
  2834     00B2                     _output:
  2835     00B2                     	ds	2
  2836     00B4                     _outputsum:
  2837     00B4                     	ds	2
  2838     00B6                     _flux:
  2839     00B6                     	ds	2
  2840     00B8                     _ballset:
  2841     00B8                     	ds	2
  2842     00BA                     _balldist:
  2843     00BA                     	ds	2
  2844     00BC                     _error:
  2845     00BC                     	ds	2
  2846     00BE                     _timer1ReloadVal:
  2847     00BE                     	ds	2
  2848     00C0                     _ADC_InterruptHandler:
  2849     00C0                     	ds	2
  2850     00C2                     _pas:
  2851     00C2                     	ds	1
  2852     00C3                     _fim_curso:
  2853     00C3                     	ds	1
  2854     00C4                     _passo:
  2855     00C4                     	ds	1
  2856     00C5                     _count_40ms:
  2857     00C5                     	ds	1
  2858     00C6                     _countRx:
  2859     00C6                     	ds	1
  2860     00C7                     _func_mode:
  2861     00C7                     	ds	1
  2862     00C8                     _Rx_ctrl:
  2863     00C8                     	ds	1
  2864     00C9                     _timecontrol:
  2865     00C9                     	ds	1
  2866     00CA                     _timer0ReloadVal:
  2867     00CA                     	ds	1
  2868     00CB                     _eusartRxLastError:
  2869     00CB                     	ds	1
  2870     00CC                     _eusartRxCount:
  2871     00CC                     	ds	1
  2872     00CD                     _eusartRxTail:
  2873     00CD                     	ds	1
  2874     00CE                     _eusartRxHead:
  2875     00CE                     	ds	1
  2876     00CF                     _eusartTxBufferRemaining:
  2877     00CF                     	ds	1
  2878     00D0                     _eusartTxTail:
  2879     00D0                     	ds	1
  2880     00D1                     _eusartTxHead:
  2881     00D1                     	ds	1
  2882                           
  2883                           	psect	dataBANK1
  2884     00E4                     __pdataBANK1:
  2885     00E4                     _kdp:
  2886     00E4                     	ds	2
  2887     00E6                     _kip:
  2888     00E6                     	ds	2
  2889     00E8                     _kpp:
  2890     00E8                     	ds	2
  2891     00EA                     _kif:
  2892     00EA                     	ds	2
  2893     00EC                     _kpf:
  2894     00EC                     	ds	2
  2895     00EE                     _incPos:
  2896     00EE                     	ds	1
  2897     00EF                     _controlchoice:
  2898     00EF                     	ds	1
  2899                           
  2900                           	psect	bssBANK2
  2901     0120                     __pbssBANK2:
  2902     0120                     _eusartRxStatusBuffer:
  2903     0120                     	ds	8
  2904     0128                     _eusartRxBuffer:
  2905     0128                     	ds	8
  2906     0130                     _eusartTxBuffer:
  2907     0130                     	ds	8
  2908     0138                     _float_temp:
  2909     0138                     	ds	4
  2910     013C                     _tempo_voo:
  2911     013C                     	ds	4
  2912     0140                     _sp_position:
  2913     0140                     	ds	2
  2914     0142                     _dinput:
  2915     0142                     	ds	2
  2916                           
  2917                           	psect	inittext
  2918     0B5D                     init_ram:
  2919     0B5D  00FE               	movwf	btemp
  2920     0B5E                     initloop:
  2921     0B5E  0012               	moviw fsr0++
  2922     0B5F  001E               	movwi fsr1++
  2923     0B60  0BFE               	decfsz	btemp,f
  2924     0B61  2B5E               	goto	initloop
  2925     0B62  3400               	retlw	0
  2926                           
  2927                           	psect	clrtext
  2928     0B57                     clear_ram0:	
  2929                           ;	Called with FSR0 containing the base address, and
  2930                           ;	WREG with the size to clear
  2931                           
  2932     0B57  0064               	clrwdt	;clear the watchdog before getting into this loop
  2933     0B58                     clrloop0:
  2934     0B58  0180               	clrf	0	;clear RAM location pointed to by FSR
  2935     0B59  3101               	addfsr 0,1
  2936     0B5A  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2937     0B5B  2B58               	goto	clrloop0	;have we reached the end yet?
  2938     0B5C  3400               	retlw	0	;all done for this memory range, return
  2939                           
  2940                           	psect	cstackBANK1
  2941     00D2                     __pcstackBANK1:
  2942     00D2                     ??_PIN_MANAGER_Initialize:
  2943     00D2                     ??_OSCILLATOR_Initialize:	
  2944                           ; 1 bytes @ 0x0
  2945                           
  2946     00D2                     ??_WDT_Initialize:	
  2947                           ; 1 bytes @ 0x0
  2948                           
  2949     00D2                     ??_DAC_Initialize:	
  2950                           ; 1 bytes @ 0x0
  2951                           
  2952     00D2                     ??_FVR_Initialize:	
  2953                           ; 1 bytes @ 0x0
  2954                           
  2955     00D2                     ??_TMR4_Initialize:	
  2956                           ; 1 bytes @ 0x0
  2957                           
  2958     00D2                     ??_TMR2_Initialize:	
  2959                           ; 1 bytes @ 0x0
  2960                           
  2961     00D2                     ??_CMP1_Initialize:	
  2962                           ; 1 bytes @ 0x0
  2963                           
  2964     00D2                     ??_ADC_Initialize:	
  2965                           ; 1 bytes @ 0x0
  2966                           
  2967     00D2                     ??_EPWM1_Initialize:	
  2968                           ; 1 bytes @ 0x0
  2969                           
  2970     00D2                     ?_EUSART_SetRxInterruptHandler:	
  2971                           ; 1 bytes @ 0x0
  2972                           
  2973     00D2                     ?_EUSART_SetTxInterruptHandler:	
  2974                           ; 1 bytes @ 0x0
  2975                           
  2976     00D2                     ?_EUSART_SetFramingErrorHandler:	
  2977                           ; 1 bytes @ 0x0
  2978                           
  2979     00D2                     ?_EUSART_SetOverrunErrorHandler:	
  2980                           ; 1 bytes @ 0x0
  2981                           
  2982     00D2                     ?_EUSART_SetErrorHandler:	
  2983                           ; 1 bytes @ 0x0
  2984                           
  2985     00D2                     ?_TMR0_SetInterruptHandler:	
  2986                           ; 1 bytes @ 0x0
  2987                           
  2988     00D2                     ?_TMR6_SetInterruptHandler:	
  2989                           ; 1 bytes @ 0x0
  2990                           
  2991     00D2                     ?_TMR1_SetGateInterruptHandler:	
  2992                           ; 1 bytes @ 0x0
  2993                           
  2994     00D2                     ??_TMR4_StartTimer:	
  2995                           ; 1 bytes @ 0x0
  2996                           
  2997     00D2                     ??_TMR4_StopTimer:	
  2998                           ; 1 bytes @ 0x0
  2999                           
  3000     00D2                     ??_TMR4_ReadTimer:	
  3001                           ; 1 bytes @ 0x0
  3002                           
  3003     00D2                     ??_TMR4_LoadPeriodRegister:	
  3004                           ; 1 bytes @ 0x0
  3005                           
  3006     00D2                     ?_EPWM1_LoadDutyValue:	
  3007                           ; 1 bytes @ 0x0
  3008                           
  3009     00D2                     ?_ADC_GetConversion:	
  3010                           ; 1 bytes @ 0x0
  3011                           
  3012     00D2                     ?___wmul:	
  3013                           ; 2 bytes @ 0x0
  3014                           
  3015     00D2                     TMR4_ReadTimer@readVal:	
  3016                           ; 2 bytes @ 0x0
  3017                           
  3018     00D2                     TMR4_LoadPeriodRegister@periodVal:	
  3019                           ; 1 bytes @ 0x0
  3020                           
  3021     00D2                     EPWM1_LoadDutyValue@dutyValue:	
  3022                           ; 1 bytes @ 0x0
  3023                           
  3024     00D2                     EUSART_SetFramingErrorHandler@interruptHandler:	
  3025                           ; 2 bytes @ 0x0
  3026                           
  3027     00D2                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  3028                           ; 2 bytes @ 0x0
  3029                           
  3030     00D2                     EUSART_SetErrorHandler@interruptHandler:	
  3031                           ; 2 bytes @ 0x0
  3032                           
  3033     00D2                     EUSART_SetTxInterruptHandler@interruptHandler:	
  3034                           ; 2 bytes @ 0x0
  3035                           
  3036     00D2                     EUSART_SetRxInterruptHandler@interruptHandler:	
  3037                           ; 2 bytes @ 0x0
  3038                           
  3039     00D2                     TMR0_SetInterruptHandler@InterruptHandler:	
  3040                           ; 2 bytes @ 0x0
  3041                           
  3042     00D2                     TMR6_SetInterruptHandler@InterruptHandler:	
  3043                           ; 2 bytes @ 0x0
  3044                           
  3045     00D2                     TMR1_SetGateInterruptHandler@InterruptHandler:	
  3046                           ; 2 bytes @ 0x0
  3047                           
  3048     00D2                     ___wmul@multiplier:	
  3049                           ; 2 bytes @ 0x0
  3050                           
  3051                           
  3052                           ; 2 bytes @ 0x0
  3053     00D2                     	ds	2
  3054     00D4                     ??_TMR0_Initialize:
  3055     00D4                     ??_TMR6_Initialize:	
  3056                           ; 1 bytes @ 0x2
  3057                           
  3058     00D4                     ??_TMR1_Initialize:	
  3059                           ; 1 bytes @ 0x2
  3060                           
  3061     00D4                     ??_EUSART_Initialize:	
  3062                           ; 1 bytes @ 0x2
  3063                           
  3064     00D4                     ??_EUSART_SetRxInterruptHandler:	
  3065                           ; 1 bytes @ 0x2
  3066                           
  3067     00D4                     ??_EUSART_SetTxInterruptHandler:	
  3068                           ; 1 bytes @ 0x2
  3069                           
  3070     00D4                     ??_EUSART_SetFramingErrorHandler:	
  3071                           ; 1 bytes @ 0x2
  3072                           
  3073     00D4                     ??_EUSART_SetOverrunErrorHandler:	
  3074                           ; 1 bytes @ 0x2
  3075                           
  3076     00D4                     ??_EUSART_SetErrorHandler:	
  3077                           ; 1 bytes @ 0x2
  3078                           
  3079     00D4                     ??_TMR0_SetInterruptHandler:	
  3080                           ; 1 bytes @ 0x2
  3081                           
  3082     00D4                     ??_TMR6_SetInterruptHandler:	
  3083                           ; 1 bytes @ 0x2
  3084                           
  3085     00D4                     ??_TMR1_SetGateInterruptHandler:	
  3086                           ; 1 bytes @ 0x2
  3087                           
  3088     00D4                     ??_SYSTEM_Initialize:	
  3089                           ; 1 bytes @ 0x2
  3090                           
  3091     00D4                     ??_EPWM1_LoadDutyValue:	
  3092                           ; 1 bytes @ 0x2
  3093                           
  3094     00D4                     ??_ADC_GetConversion:	
  3095                           ; 1 bytes @ 0x2
  3096                           
  3097     00D4                     ___wmul@multiplicand:	
  3098                           ; 1 bytes @ 0x2
  3099                           
  3100                           
  3101                           ; 2 bytes @ 0x2
  3102     00D4                     	ds	1
  3103     00D5                     ADC_GetConversion@channel:
  3104                           
  3105                           ; 1 bytes @ 0x3
  3106     00D5                     	ds	1
  3107     00D6                     ??___wmul:
  3108     00D6                     ___wmul@product:	
  3109                           ; 1 bytes @ 0x4
  3110                           
  3111                           
  3112                           ; 2 bytes @ 0x4
  3113     00D6                     	ds	2
  3114     00D8                     ?___lwdiv:
  3115     00D8                     ___lwdiv@divisor:	
  3116                           ; 2 bytes @ 0x6
  3117                           
  3118                           
  3119                           ; 2 bytes @ 0x6
  3120     00D8                     	ds	2
  3121     00DA                     ___lwdiv@dividend:
  3122                           
  3123                           ; 2 bytes @ 0x8
  3124     00DA                     	ds	2
  3125     00DC                     ??___lwdiv:
  3126                           
  3127                           ; 1 bytes @ 0xA
  3128     00DC                     	ds	1
  3129     00DD                     ___lwdiv@quotient:
  3130                           
  3131                           ; 2 bytes @ 0xB
  3132     00DD                     	ds	2
  3133     00DF                     ___lwdiv@counter:
  3134                           
  3135                           ; 1 bytes @ 0xD
  3136     00DF                     	ds	1
  3137     00E0                     ??_pwmcontrol:
  3138                           
  3139                           ; 1 bytes @ 0xE
  3140     00E0                     	ds	2
  3141     00E2                     _pwmcontrol$2053:
  3142                           
  3143                           ; 2 bytes @ 0x10
  3144     00E2                     	ds	2
  3145     00E4                     ??_controlchoose:
  3146     00E4                     ??_main:	
  3147                           ; 1 bytes @ 0x12
  3148                           
  3149                           
  3150                           	psect	cstackCOMMON
  3151     0070                     __pcstackCOMMON:	
  3152                           ; 1 bytes @ 0x12
  3153                           
  3154     0070                     ?_PIN_MANAGER_Initialize:
  3155     0070                     ?_OSCILLATOR_Initialize:	
  3156                           ; 1 bytes @ 0x0
  3157                           
  3158     0070                     ?_WDT_Initialize:	
  3159                           ; 1 bytes @ 0x0
  3160                           
  3161     0070                     ?_DAC_Initialize:	
  3162                           ; 1 bytes @ 0x0
  3163                           
  3164     0070                     ?_FVR_Initialize:	
  3165                           ; 1 bytes @ 0x0
  3166                           
  3167     0070                     ?_TMR4_Initialize:	
  3168                           ; 1 bytes @ 0x0
  3169                           
  3170     0070                     ?_TMR2_Initialize:	
  3171                           ; 1 bytes @ 0x0
  3172                           
  3173     0070                     ?_TMR0_Initialize:	
  3174                           ; 1 bytes @ 0x0
  3175                           
  3176     0070                     ?_TMR6_Initialize:	
  3177                           ; 1 bytes @ 0x0
  3178                           
  3179     0070                     ?_CMP1_Initialize:	
  3180                           ; 1 bytes @ 0x0
  3181                           
  3182     0070                     ?_ADC_Initialize:	
  3183                           ; 1 bytes @ 0x0
  3184                           
  3185     0070                     ?_EPWM1_Initialize:	
  3186                           ; 1 bytes @ 0x0
  3187                           
  3188     0070                     ?_TMR1_Initialize:	
  3189                           ; 1 bytes @ 0x0
  3190                           
  3191     0070                     ?_EUSART_Initialize:	
  3192                           ; 1 bytes @ 0x0
  3193                           
  3194     0070                     ?_TMR0_ISR:	
  3195                           ; 1 bytes @ 0x0
  3196                           
  3197     0070                     ?_TMR1_GATE_ISR:	
  3198                           ; 1 bytes @ 0x0
  3199                           
  3200     0070                     ?_TMR6_ISR:	
  3201                           ; 1 bytes @ 0x0
  3202                           
  3203     0070                     ?_EUSART_Receive_ISR:	
  3204                           ; 1 bytes @ 0x0
  3205                           
  3206     0070                     ?_EUSART_Transmit_ISR:	
  3207                           ; 1 bytes @ 0x0
  3208                           
  3209     0070                     ??_EUSART_Transmit_ISR:	
  3210                           ; 1 bytes @ 0x0
  3211                           
  3212     0070                     ?_EUSART_DefaultFramingErrorHandler:	
  3213                           ; 1 bytes @ 0x0
  3214                           
  3215     0070                     ??_EUSART_DefaultFramingErrorHandler:	
  3216                           ; 1 bytes @ 0x0
  3217                           
  3218     0070                     ?_EUSART_DefaultOverrunErrorHandler:	
  3219                           ; 1 bytes @ 0x0
  3220                           
  3221     0070                     ??_EUSART_DefaultOverrunErrorHandler:	
  3222                           ; 1 bytes @ 0x0
  3223                           
  3224     0070                     ?_EUSART_DefaultErrorHandler:	
  3225                           ; 1 bytes @ 0x0
  3226                           
  3227     0070                     ?_EUSART_RxDataHandler:	
  3228                           ; 1 bytes @ 0x0
  3229                           
  3230     0070                     ??_EUSART_RxDataHandler:	
  3231                           ; 1 bytes @ 0x0
  3232                           
  3233     0070                     ?_TMR0_DefaultInterruptHandler:	
  3234                           ; 1 bytes @ 0x0
  3235                           
  3236     0070                     ??_TMR0_DefaultInterruptHandler:	
  3237                           ; 1 bytes @ 0x0
  3238                           
  3239     0070                     ?_TMR6_DefaultInterruptHandler:	
  3240                           ; 1 bytes @ 0x0
  3241                           
  3242     0070                     ??_TMR6_DefaultInterruptHandler:	
  3243                           ; 1 bytes @ 0x0
  3244                           
  3245     0070                     ?_TMR1_DefaultGateInterruptHandler:	
  3246                           ; 1 bytes @ 0x0
  3247                           
  3248     0070                     ??_TMR1_DefaultGateInterruptHandler:	
  3249                           ; 1 bytes @ 0x0
  3250                           
  3251     0070                     ?_fluxpos:	
  3252                           ; 1 bytes @ 0x0
  3253                           
  3254     0070                     ?_daUmPasso:	
  3255                           ; 1 bytes @ 0x0
  3256                           
  3257     0070                     ?_SYSTEM_Initialize:	
  3258                           ; 1 bytes @ 0x0
  3259                           
  3260     0070                     ?_PIN_MANAGER_IOC:	
  3261                           ; 1 bytes @ 0x0
  3262                           
  3263     0070                     ??_PIN_MANAGER_IOC:	
  3264                           ; 1 bytes @ 0x0
  3265                           
  3266     0070                     ?_TMR4_StartTimer:	
  3267                           ; 1 bytes @ 0x0
  3268                           
  3269     0070                     ?_TMR4_StopTimer:	
  3270                           ; 1 bytes @ 0x0
  3271                           
  3272     0070                     ?_TMR4_ReadTimer:	
  3273                           ; 1 bytes @ 0x0
  3274                           
  3275     0070                     ?_TMR4_LoadPeriodRegister:	
  3276                           ; 1 bytes @ 0x0
  3277                           
  3278     0070                     ?_INTERRUPT_InterruptManager:	
  3279                           ; 1 bytes @ 0x0
  3280                           
  3281     0070                     ?_EUSART_Read:	
  3282                           ; 1 bytes @ 0x0
  3283                           
  3284     0070                     ??_EUSART_Read:	
  3285                           ; 1 bytes @ 0x0
  3286                           
  3287     0070                     ?_TMR0_Reload:	
  3288                           ; 1 bytes @ 0x0
  3289                           
  3290     0070                     ??_TMR0_Reload:	
  3291                           ; 1 bytes @ 0x0
  3292                           
  3293     0070                     ?_CMP1_GetOutputStatus:	
  3294                           ; 1 bytes @ 0x0
  3295                           
  3296     0070                     ??_CMP1_GetOutputStatus:	
  3297                           ; 1 bytes @ 0x0
  3298                           
  3299     0070                     ?_fluxcontrol:	
  3300                           ; 1 bytes @ 0x0
  3301                           
  3302     0070                     ?_pwmcontrol:	
  3303                           ; 1 bytes @ 0x0
  3304                           
  3305     0070                     ?_controlchoose:	
  3306                           ; 1 bytes @ 0x0
  3307                           
  3308     0070                     ?_analisa_Rx:	
  3309                           ; 1 bytes @ 0x0
  3310                           
  3311     0070                     ?_end_Rx:	
  3312                           ; 1 bytes @ 0x0
  3313                           
  3314     0070                     ?_receive:	
  3315                           ; 1 bytes @ 0x0
  3316                           
  3317     0070                     ?_fluxControlChoice:	
  3318                           ; 1 bytes @ 0x0
  3319                           
  3320     0070                     ?_definePassoMotor:	
  3321                           ; 1 bytes @ 0x0
  3322                           
  3323     0070                     ?_mede_height:	
  3324                           ; 1 bytes @ 0x0
  3325                           
  3326     0070                     ?_main:	
  3327                           ; 1 bytes @ 0x0
  3328                           
  3329     0070                     ?i1_EPWM1_LoadDutyValue:	
  3330                           ; 1 bytes @ 0x0
  3331                           
  3332     0070                     ?__Umul8_16:	
  3333                           ; 1 bytes @ 0x0
  3334                           
  3335     0070                     ?_TMR1_ReadTimer:	
  3336                           ; 2 bytes @ 0x0
  3337                           
  3338     0070                     ?i1___wmul:	
  3339                           ; 2 bytes @ 0x0
  3340                           
  3341     0070                     definePassoMotor@sentido:	
  3342                           ; 2 bytes @ 0x0
  3343                           
  3344     0070                     __Umul8_16@multiplicand:	
  3345                           ; 1 bytes @ 0x0
  3346                           
  3347     0070                     i1EPWM1_LoadDutyValue@dutyValue:	
  3348                           ; 1 bytes @ 0x0
  3349                           
  3350     0070                     i1___wmul@multiplier:	
  3351                           ; 2 bytes @ 0x0
  3352                           
  3353                           
  3354                           ; 2 bytes @ 0x0
  3355     0070                     	ds	1
  3356     0071                     ??_EUSART_Receive_ISR:
  3357     0071                     ??_EUSART_DefaultErrorHandler:	
  3358                           ; 1 bytes @ 0x1
  3359                           
  3360     0071                     ??_definePassoMotor:	
  3361                           ; 1 bytes @ 0x1
  3362                           
  3363     0071                     EUSART_Read@readValue:	
  3364                           ; 1 bytes @ 0x1
  3365                           
  3366     0071                     definePassoMotor@passo:	
  3367                           ; 1 bytes @ 0x1
  3368                           
  3369                           
  3370                           ; 1 bytes @ 0x1
  3371     0071                     	ds	1
  3372     0072                     ??_daUmPasso:
  3373     0072                     ??__Umul8_16:	
  3374                           ; 1 bytes @ 0x2
  3375                           
  3376     0072                     ??_TMR1_ReadTimer:	
  3377                           ; 1 bytes @ 0x2
  3378                           
  3379     0072                     ??_receive:	
  3380                           ; 1 bytes @ 0x2
  3381                           
  3382     0072                     ??i1_EPWM1_LoadDutyValue:	
  3383                           ; 1 bytes @ 0x2
  3384                           
  3385     0072                     i1___wmul@multiplicand:	
  3386                           ; 1 bytes @ 0x2
  3387                           
  3388                           
  3389                           ; 2 bytes @ 0x2
  3390     0072                     	ds	2
  3391     0074                     ??_analisa_Rx:
  3392     0074                     ??i1___wmul:	
  3393                           ; 1 bytes @ 0x4
  3394                           
  3395     0074                     daUmPasso@sentido:	
  3396                           ; 1 bytes @ 0x4
  3397                           
  3398     0074                     __Umul8_16@product:	
  3399                           ; 1 bytes @ 0x4
  3400                           
  3401     0074                     i1___wmul@product:	
  3402                           ; 2 bytes @ 0x4
  3403                           
  3404                           
  3405                           ; 2 bytes @ 0x4
  3406     0074                     	ds	1
  3407     0075                     ??_fluxpos:
  3408                           
  3409                           ; 1 bytes @ 0x5
  3410     0075                     	ds	1
  3411     0076                     ??_end_Rx:
  3412     0076                     ?i1___lwdiv:	
  3413                           ; 1 bytes @ 0x6
  3414                           
  3415     0076                     __Umul8_16@word_mpld:	
  3416                           ; 2 bytes @ 0x6
  3417                           
  3418     0076                     i1___lwdiv@divisor:	
  3419                           ; 2 bytes @ 0x6
  3420                           
  3421                           
  3422                           ; 2 bytes @ 0x6
  3423     0076                     	ds	1
  3424     0077                     ??_TMR0_ISR:
  3425     0077                     TMR1_ReadTimer@readVal:	
  3426                           ; 1 bytes @ 0x7
  3427                           
  3428                           
  3429                           ; 2 bytes @ 0x7
  3430     0077                     	ds	1
  3431     0078                     __Umul8_16@multiplier:
  3432     0078                     i1___lwdiv@dividend:	
  3433                           ; 1 bytes @ 0x8
  3434                           
  3435                           
  3436                           ; 2 bytes @ 0x8
  3437     0078                     	ds	1
  3438     0079                     TMR1_ReadTimer@readValHigh:
  3439                           
  3440                           ; 1 bytes @ 0x9
  3441     0079                     	ds	1
  3442     007A                     ??i1___lwdiv:
  3443     007A                     TMR1_ReadTimer@readValLow:	
  3444                           ; 1 bytes @ 0xA
  3445                           
  3446                           
  3447                           ; 1 bytes @ 0xA
  3448     007A                     	ds	1
  3449     007B                     ___fltol@sign1:
  3450     007B                     i1___lwdiv@quotient:	
  3451                           ; 1 bytes @ 0xB
  3452                           
  3453                           
  3454                           ; 2 bytes @ 0xB
  3455     007B                     	ds	1
  3456     007C                     ___fltol@exp1:
  3457                           
  3458                           ; 1 bytes @ 0xC
  3459     007C                     	ds	1
  3460     007D                     ??_TMR1_GATE_ISR:
  3461     007D                     i1___lwdiv@counter:	
  3462                           ; 1 bytes @ 0xD
  3463                           
  3464                           
  3465                           ; 1 bytes @ 0xD
  3466     007D                     	ds	1
  3467     007E                     ??_TMR6_ISR:
  3468     007E                     ??_INTERRUPT_InterruptManager:	
  3469                           ; 1 bytes @ 0xE
  3470                           
  3471     007E                     ??_fluxControlChoice:	
  3472                           ; 1 bytes @ 0xE
  3473                           
  3474                           
  3475                           	psect	cstackBANK0
  3476     0020                     __pcstackBANK0:	
  3477                           ; 1 bytes @ 0xE
  3478                           
  3479     0020                     ??_fluxcontrol:
  3480     0020                     ?___xxtofl:	
  3481                           ; 1 bytes @ 0x0
  3482                           
  3483     0020                     ___xxtofl@val:	
  3484                           ; 4 bytes @ 0x0
  3485                           
  3486                           
  3487                           ; 4 bytes @ 0x0
  3488     0020                     	ds	2
  3489     0022                     _fluxcontrol$2075:
  3490                           
  3491                           ; 2 bytes @ 0x2
  3492     0022                     	ds	2
  3493     0024                     ??___xxtofl:
  3494                           
  3495                           ; 1 bytes @ 0x4
  3496     0024                     	ds	4
  3497     0028                     ___xxtofl@sign:
  3498                           
  3499                           ; 1 bytes @ 0x8
  3500     0028                     	ds	1
  3501     0029                     ___xxtofl@exp:
  3502                           
  3503                           ; 1 bytes @ 0x9
  3504     0029                     	ds	1
  3505     002A                     ___xxtofl@arg:
  3506                           
  3507                           ; 4 bytes @ 0xA
  3508     002A                     	ds	4
  3509     002E                     ?___flmul:
  3510     002E                     ___flmul@b:	
  3511                           ; 4 bytes @ 0xE
  3512                           
  3513                           
  3514                           ; 4 bytes @ 0xE
  3515     002E                     	ds	4
  3516     0032                     ___flmul@a:
  3517                           
  3518                           ; 4 bytes @ 0x12
  3519     0032                     	ds	4
  3520     0036                     ??___flmul:
  3521                           
  3522                           ; 1 bytes @ 0x16
  3523     0036                     	ds	5
  3524     003B                     ___flmul@sign:
  3525                           
  3526                           ; 1 bytes @ 0x1B
  3527     003B                     	ds	1
  3528     003C                     ___flmul@grs:
  3529                           
  3530                           ; 4 bytes @ 0x1C
  3531     003C                     	ds	4
  3532     0040                     ___flmul@aexp:
  3533                           
  3534                           ; 1 bytes @ 0x20
  3535     0040                     	ds	1
  3536     0041                     ___flmul@bexp:
  3537                           
  3538                           ; 1 bytes @ 0x21
  3539     0041                     	ds	1
  3540     0042                     ___flmul@prod:
  3541                           
  3542                           ; 4 bytes @ 0x22
  3543     0042                     	ds	4
  3544     0046                     ___flmul@temp:
  3545                           
  3546                           ; 2 bytes @ 0x26
  3547     0046                     	ds	2
  3548     0048                     ?___fldiv:
  3549     0048                     ___fldiv@a:	
  3550                           ; 4 bytes @ 0x28
  3551                           
  3552                           
  3553                           ; 4 bytes @ 0x28
  3554     0048                     	ds	4
  3555     004C                     ___fldiv@b:
  3556                           
  3557                           ; 4 bytes @ 0x2C
  3558     004C                     	ds	4
  3559     0050                     ??___fldiv:
  3560                           
  3561                           ; 1 bytes @ 0x30
  3562     0050                     	ds	5
  3563     0055                     ___fldiv@rem:
  3564                           
  3565                           ; 4 bytes @ 0x35
  3566     0055                     	ds	4
  3567     0059                     ___fldiv@sign:
  3568                           
  3569                           ; 1 bytes @ 0x39
  3570     0059                     	ds	1
  3571     005A                     ___fldiv@new_exp:
  3572                           
  3573                           ; 2 bytes @ 0x3A
  3574     005A                     	ds	2
  3575     005C                     ___fldiv@grs:
  3576                           
  3577                           ; 4 bytes @ 0x3C
  3578     005C                     	ds	4
  3579     0060                     ___fldiv@bexp:
  3580                           
  3581                           ; 1 bytes @ 0x40
  3582     0060                     	ds	1
  3583     0061                     ___fldiv@aexp:
  3584                           
  3585                           ; 1 bytes @ 0x41
  3586     0061                     	ds	1
  3587     0062                     ?___fltol:
  3588     0062                     ___fltol@f1:	
  3589                           ; 4 bytes @ 0x42
  3590                           
  3591                           
  3592                           ; 4 bytes @ 0x42
  3593     0062                     	ds	4
  3594     0066                     ??___fltol:
  3595                           
  3596                           ; 1 bytes @ 0x46
  3597     0066                     	ds	4
  3598     006A                     ??_mede_height:
  3599                           
  3600                           ; 1 bytes @ 0x4A
  3601     006A                     	ds	4
  3602                           
  3603                           	psect	maintext
  3604     0F67                     __pmaintext:	
  3605 ;;
  3606 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3607 ;;
  3608 ;; *************** function _main *****************
  3609 ;; Defined at:
  3610 ;;		line 290 in file "main.c"
  3611 ;; Parameters:    Size  Location     Type
  3612 ;;		None
  3613 ;; Auto vars:     Size  Location     Type
  3614 ;;		None
  3615 ;; Return value:  Size  Location     Type
  3616 ;;                  1    wreg      void 
  3617 ;; Registers used:
  3618 ;;		wreg, status,2, status,0, pclath, cstack
  3619 ;; Tracked objects:
  3620 ;;		On entry : B1F/0
  3621 ;;		On exit  : 0/0
  3622 ;;		Unchanged: 0/0
  3623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3624 ;;      Params:         0       0       0       0       0       0
  3625 ;;      Locals:         0       0       0       0       0       0
  3626 ;;      Temps:          0       0       0       0       0       0
  3627 ;;      Totals:         0       0       0       0       0       0
  3628 ;;Total ram usage:        0 bytes
  3629 ;; Hardware stack levels required when called: 10
  3630 ;; This function calls:
  3631 ;;		_ADC_GetConversion
  3632 ;;		_EUSART_SetRxInterruptHandler
  3633 ;;		_SYSTEM_Initialize
  3634 ;;		_TMR0_SetInterruptHandler
  3635 ;;		_TMR1_SetGateInterruptHandler
  3636 ;;		_TMR4_ReadTimer
  3637 ;;		_TMR4_StopTimer
  3638 ;;		_TMR6_SetInterruptHandler
  3639 ;;		_controlchoose
  3640 ;; This function is called by:
  3641 ;;		Startup code after reset
  3642 ;; This function uses a non-reentrant model
  3643 ;;
  3644                           
  3645     0F67                     _main:	
  3646                           ;psect for function _main
  3647                           
  3648     0F67                     l3540:	
  3649                           ;incstack = 0
  3650                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  3651                           
  3652                           
  3653                           ;main.c: 293:     SYSTEM_Initialize();
  3654     0F67  318E  2601  318F   	fcall	_SYSTEM_Initialize
  3655                           
  3656                           ;main.c: 294:     TMR0_SetInterruptHandler(end_Rx);
  3657     0F6A  304D               	movlw	low _end_Rx
  3658     0F6B  0021               	movlb	1	; select bank1
  3659     0F6C  00D2               	movwf	TMR0_SetInterruptHandler@InterruptHandler^(0+128)
  3660     0F6D  300C               	movlw	high _end_Rx
  3661     0F6E  00D3               	movwf	(TMR0_SetInterruptHandler@InterruptHandler^(0+128)+1)
  3662     0F6F  318B  23A7  318F   	fcall	_TMR0_SetInterruptHandler
  3663                           
  3664                           ;main.c: 295:     EUSART_SetRxInterruptHandler(receive);
  3665     0F72  3017               	movlw	low _receive
  3666     0F73  0021               	movlb	1	; select bank1
  3667     0F74  00D2               	movwf	EUSART_SetRxInterruptHandler@interruptHandler^(0+128)
  3668     0F75  300D               	movlw	high _receive
  3669     0F76  00D3               	movwf	(EUSART_SetRxInterruptHandler@interruptHandler^(0+128)+1)
  3670     0F77  318B  2395  318F   	fcall	_EUSART_SetRxInterruptHandler
  3671                           
  3672                           ;main.c: 296:     TMR6_SetInterruptHandler(fluxControlChoice);
  3673     0F7A  30C2               	movlw	low _fluxControlChoice
  3674     0F7B  0021               	movlb	1	; select bank1
  3675     0F7C  00D2               	movwf	TMR6_SetInterruptHandler@InterruptHandler^(0+128)
  3676     0F7D  300B               	movlw	high _fluxControlChoice
  3677     0F7E  00D3               	movwf	(TMR6_SetInterruptHandler@InterruptHandler^(0+128)+1)
  3678     0F7F  318B  23B9  318F   	fcall	_TMR6_SetInterruptHandler
  3679                           
  3680                           ;main.c: 297:     TMR1_SetGateInterruptHandler(mede_height);
  3681     0F82  30F6               	movlw	low _mede_height
  3682     0F83  0021               	movlb	1	; select bank1
  3683     0F84  00D2               	movwf	TMR1_SetGateInterruptHandler@InterruptHandler^(0+128)
  3684     0F85  3006               	movlw	high _mede_height
  3685     0F86  00D3               	movwf	(TMR1_SetGateInterruptHandler@InterruptHandler^(0+128)+1)
  3686     0F87  318B  23B0  318F   	fcall	_TMR1_SetGateInterruptHandler
  3687     0F8A                     l3542:
  3688                           
  3689                           ;main.c: 302:     (INTCONbits.GIE = 1);
  3690     0F8A  178B               	bsf	11,7	;volatile
  3691     0F8B                     l3544:
  3692                           
  3693                           ;main.c: 305:     (INTCONbits.PEIE = 1);
  3694     0F8B  170B               	bsf	11,6	;volatile
  3695     0F8C                     l826:	
  3696                           ;main.c: 313:     while (1)
  3697                           
  3698                           
  3699                           ;main.c: 314:     {;main.c: 316:         adc_temp = ADC_GetConversion(channel_AN8);
  3700     0F8C  3008               	movlw	8
  3701     0F8D  318C  24C4  318F   	fcall	_ADC_GetConversion
  3702     0F90  0021               	movlb	1	; select bank1
  3703     0F91  0853               	movf	(?_ADC_GetConversion+1)^(0+128),w
  3704     0F92  0022               	movlb	2	; select bank2
  3705     0F93  00C5               	movwf	(_adc_temp+1)^(0+256)
  3706     0F94  0021               	movlb	1	; select bank1
  3707     0F95  0852               	movf	?_ADC_GetConversion^(0+128),w
  3708     0F96  0022               	movlb	2	; select bank2
  3709     0F97  00C4               	movwf	_adc_temp^(0+256)
  3710     0F98                     l3546:
  3711                           
  3712                           ;main.c: 317:         if((timecontrol = TMR4_ReadTimer()) >= 209){
  3713     0F98  318B  234B  318F   	fcall	_TMR4_ReadTimer
  3714     0F9B  0021               	movlb	1	; select bank1
  3715     0F9C  00C9               	movwf	_timecontrol^(0+128)
  3716     0F9D  30D1               	movlw	209
  3717     0F9E  0249               	subwf	_timecontrol^(0+128),w
  3718     0F9F  1C03               	skipc
  3719     0FA0  2FA2               	goto	u3201
  3720     0FA1  2FA3               	goto	u3200
  3721     0FA2                     u3201:
  3722     0FA2  2F8C               	goto	l826
  3723     0FA3                     u3200:
  3724     0FA3                     l3548:
  3725                           
  3726                           ;main.c: 318:             TMR4_StopTimer();
  3727     0FA3  318B  2320  318F   	fcall	_TMR4_StopTimer
  3728     0FA6                     l3550:
  3729                           
  3730                           ;main.c: 319:             controlchoose();
  3731     0FA6  318C  2404  318F   	fcall	_controlchoose
  3732     0FA9  2F8C               	goto	l826
  3733     0FAA  3180  2862         	ljmp	start
  3734     0FAC                     __end_of_main:
  3735                           
  3736                           	psect	text1
  3737     0C04                     __ptext1:	
  3738 ;; *************** function _controlchoose *****************
  3739 ;; Defined at:
  3740 ;;		line 80 in file "main.c"
  3741 ;; Parameters:    Size  Location     Type
  3742 ;;		None
  3743 ;; Auto vars:     Size  Location     Type
  3744 ;;		None
  3745 ;; Return value:  Size  Location     Type
  3746 ;;                  1    wreg      void 
  3747 ;; Registers used:
  3748 ;;		wreg, status,2, status,0, pclath, cstack
  3749 ;; Tracked objects:
  3750 ;;		On entry : 0/0
  3751 ;;		On exit  : 0/0
  3752 ;;		Unchanged: 0/0
  3753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3754 ;;      Params:         0       0       0       0       0       0
  3755 ;;      Locals:         0       0       0       0       0       0
  3756 ;;      Temps:          0       0       0       0       0       0
  3757 ;;      Totals:         0       0       0       0       0       0
  3758 ;;Total ram usage:        0 bytes
  3759 ;; Hardware stack levels used: 1
  3760 ;; Hardware stack levels required when called: 9
  3761 ;; This function calls:
  3762 ;;		_TMR4_LoadPeriodRegister
  3763 ;;		_TMR4_StartTimer
  3764 ;;		_pwmcontrol
  3765 ;; This function is called by:
  3766 ;;		_main
  3767 ;; This function uses a non-reentrant model
  3768 ;;
  3769                           
  3770     0C04                     _controlchoose:	
  3771                           ;psect for function _controlchoose
  3772                           
  3773     0C04                     l3466:	
  3774                           ;incstack = 0
  3775                           ; Regs used in _controlchoose: [wreg+status,2+status,0+pclath+cstack]
  3776                           
  3777                           
  3778                           ;main.c: 81:     if (controlchoice == 1){
  3779     0C04  0021               	movlb	1	; select bank1
  3780     0C05  036F               	decf	_controlchoice^(0+128),w
  3781     0C06  1D03               	btfss	3,2
  3782     0C07  2C09               	goto	u3051
  3783     0C08  2C0A               	goto	u3050
  3784     0C09                     u3051:
  3785     0C09  2C0D               	goto	l693
  3786     0C0A                     u3050:
  3787     0C0A                     l3468:
  3788                           
  3789                           ;main.c: 82:         pwmcontrol ();
  3790     0C0A  3186  2664  318C   	fcall	_pwmcontrol
  3791     0C0D                     l693:	
  3792                           ;main.c: 83:     }
  3793                           
  3794                           
  3795                           ;main.c: 87:     TMR4_LoadPeriodRegister(0);
  3796     0C0D  3000               	movlw	0
  3797     0C0E  318B  2351  318C   	fcall	_TMR4_LoadPeriodRegister
  3798     0C11                     l3470:
  3799                           
  3800                           ;main.c: 88:     TMR4_StartTimer();
  3801     0C11  318B  2323  318C   	fcall	_TMR4_StartTimer
  3802     0C14                     l694:
  3803     0C14  0008               	return
  3804     0C15                     __end_of_controlchoose:
  3805                           
  3806                           	psect	text2
  3807     0664                     __ptext2:	
  3808 ;; *************** function _pwmcontrol *****************
  3809 ;; Defined at:
  3810 ;;		line 62 in file "main.c"
  3811 ;; Parameters:    Size  Location     Type
  3812 ;;		None
  3813 ;; Auto vars:     Size  Location     Type
  3814 ;;		None
  3815 ;; Return value:  Size  Location     Type
  3816 ;;                  1    wreg      void 
  3817 ;; Registers used:
  3818 ;;		wreg, status,2, status,0, pclath, cstack
  3819 ;; Tracked objects:
  3820 ;;		On entry : 0/0
  3821 ;;		On exit  : 0/0
  3822 ;;		Unchanged: 0/0
  3823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3824 ;;      Params:         0       0       0       0       0       0
  3825 ;;      Locals:         0       0       2       0       0       0
  3826 ;;      Temps:          0       0       2       0       0       0
  3827 ;;      Totals:         0       0       4       0       0       0
  3828 ;;Total ram usage:        4 bytes
  3829 ;; Hardware stack levels used: 1
  3830 ;; Hardware stack levels required when called: 8
  3831 ;; This function calls:
  3832 ;;		_EPWM1_LoadDutyValue
  3833 ;;		___lwdiv
  3834 ;;		___wmul
  3835 ;; This function is called by:
  3836 ;;		_controlchoose
  3837 ;; This function uses a non-reentrant model
  3838 ;;
  3839                           
  3840     0664                     _pwmcontrol:	
  3841                           ;psect for function _pwmcontrol
  3842                           
  3843     0664                     l3324:	
  3844                           ;incstack = 0
  3845                           ; Regs used in _pwmcontrol: [wreg+status,2+status,0+pclath+cstack]
  3846                           
  3847                           
  3848                           ;main.c: 63:     error = ballset-balldist;
  3849     0664  0021               	movlb	1	; select bank1
  3850     0665  083A               	movf	_balldist^(0+128),w
  3851     0666  0238               	subwf	_ballset^(0+128),w
  3852     0667  00BC               	movwf	_error^(0+128)
  3853     0668  083B               	movf	(_balldist+1)^(0+128),w
  3854     0669  3B39               	subwfb	(_ballset+1)^(0+128),w
  3855     066A  00BD               	movwf	(_error+1)^(0+128)
  3856     066B                     l3326:
  3857                           
  3858                           ;main.c: 64:     if(error > 150 || error < 150){
  3859     066B  083D               	movf	(_error+1)^(0+128),w
  3860     066C  3A80               	xorlw	128
  3861     066D  00E0               	movwf	??_pwmcontrol^(0+128)
  3862     066E  3080               	movlw	128
  3863     066F  0260               	subwf	??_pwmcontrol^(0+128),w
  3864     0670  1D03               	skipz
  3865     0671  2E74               	goto	u2855
  3866     0672  3097               	movlw	151
  3867     0673  023C               	subwf	_error^(0+128),w
  3868     0674                     u2855:
  3869     0674  1803               	skipnc
  3870     0675  2E77               	goto	u2851
  3871     0676  2E78               	goto	u2850
  3872     0677                     u2851:
  3873     0677  2E86               	goto	l3330
  3874     0678                     u2850:
  3875     0678                     l3328:
  3876     0678  0021               	movlb	1	; select bank1
  3877     0679  083D               	movf	(_error+1)^(0+128),w
  3878     067A  3A80               	xorlw	128
  3879     067B  00E0               	movwf	??_pwmcontrol^(0+128)
  3880     067C  3080               	movlw	128
  3881     067D  0260               	subwf	??_pwmcontrol^(0+128),w
  3882     067E  1D03               	skipz
  3883     067F  2E82               	goto	u2865
  3884     0680  3096               	movlw	150
  3885     0681  023C               	subwf	_error^(0+128),w
  3886     0682                     u2865:
  3887     0682  1803               	skipnc
  3888     0683  2E85               	goto	u2861
  3889     0684  2E86               	goto	u2860
  3890     0685                     u2861:
  3891     0685  2EF5               	goto	l684
  3892     0686                     u2860:
  3893     0686                     l3330:
  3894     0686  0021               	movlb	1	; select bank1
  3895     0687  0849               	movf	_timecontrol^(0+128),w
  3896     0688  00E0               	movwf	??_pwmcontrol^(0+128)
  3897     0689  01E1               	clrf	(??_pwmcontrol^(0+128)+1)
  3898     068A  0860               	movf	??_pwmcontrol^(0+128),w
  3899     068B  00D2               	movwf	___wmul@multiplier^(0+128)
  3900     068C  0861               	movf	(??_pwmcontrol+1)^(0+128),w
  3901     068D  00D3               	movwf	(___wmul@multiplier+1)^(0+128)
  3902     068E  083D               	movf	(_error+1)^(0+128),w
  3903     068F  00D5               	movwf	(___wmul@multiplicand+1)^(0+128)
  3904     0690  083C               	movf	_error^(0+128),w
  3905     0691  00D4               	movwf	___wmul@multiplicand^(0+128)
  3906     0692  318D  2554  3186   	fcall	___wmul
  3907     0695  0021               	movlb	1	; select bank1
  3908     0696  0853               	movf	(?___wmul+1)^(0+128),w
  3909     0697  00E3               	movwf	(_pwmcontrol$2053+1)^(0+128)
  3910     0698  0852               	movf	?___wmul^(0+128),w
  3911     0699  00E2               	movwf	_pwmcontrol$2053^(0+128)
  3912     069A  30E8               	movlw	232
  3913     069B  00D8               	movwf	___lwdiv@divisor^(0+128)
  3914     069C  3003               	movlw	3
  3915     069D  00D9               	movwf	(___lwdiv@divisor^(0+128)+1)
  3916     069E  0863               	movf	(_pwmcontrol$2053+1)^(0+128),w
  3917     069F  00D3               	movwf	(___wmul@multiplier+1)^(0+128)
  3918     06A0  0862               	movf	_pwmcontrol$2053^(0+128),w
  3919     06A1  00D2               	movwf	___wmul@multiplier^(0+128)
  3920     06A2  3013               	movlw	19
  3921     06A3  00D4               	movwf	___wmul@multiplicand^(0+128)
  3922     06A4  3000               	movlw	0
  3923     06A5  00D5               	movwf	(___wmul@multiplicand^(0+128)+1)
  3924     06A6  318D  2554  3186   	fcall	___wmul
  3925     06A9  0021               	movlb	1	; select bank1
  3926     06AA  0853               	movf	(?___wmul+1)^(0+128),w
  3927     06AB  00DB               	movwf	(___lwdiv@dividend+1)^(0+128)
  3928     06AC  0852               	movf	?___wmul^(0+128),w
  3929     06AD  00DA               	movwf	___lwdiv@dividend^(0+128)
  3930     06AE  318E  2668  3186   	fcall	___lwdiv
  3931     06B1  0021               	movlb	1	; select bank1
  3932     06B2  0858               	movf	?___lwdiv^(0+128),w
  3933     06B3  07B4               	addwf	_outputsum^(0+128),f
  3934     06B4  0859               	movf	(?___lwdiv+1)^(0+128),w
  3935     06B5  3DB5               	addwfc	(_outputsum+1)^(0+128),f
  3936     06B6                     l3332:
  3937                           
  3938                           ;main.c: 66:         if (outputsum > 10230) outputsum = 10230;
  3939     06B6  3027               	movlw	39
  3940     06B7  0235               	subwf	(_outputsum+1)^(0+128),w
  3941     06B8  30F7               	movlw	247
  3942     06B9  1903               	skipnz
  3943     06BA  0234               	subwf	_outputsum^(0+128),w
  3944     06BB  1C03               	skipc
  3945     06BC  2EBE               	goto	u2871
  3946     06BD  2EBF               	goto	u2870
  3947     06BE                     u2871:
  3948     06BE  2EC3               	goto	l3336
  3949     06BF                     u2870:
  3950     06BF                     l3334:
  3951     06BF  30F6               	movlw	246
  3952     06C0  00B4               	movwf	_outputsum^(0+128)
  3953     06C1  3027               	movlw	39
  3954     06C2  00B5               	movwf	(_outputsum^(0+128)+1)
  3955     06C3                     l3336:
  3956                           
  3957                           ;main.c: 67:         output = ((kpp*error + outputsum)/10);
  3958     06C3  300A               	movlw	10
  3959     06C4  00D8               	movwf	___lwdiv@divisor^(0+128)
  3960     06C5  3000               	movlw	0
  3961     06C6  00D9               	movwf	(___lwdiv@divisor^(0+128)+1)
  3962     06C7  083D               	movf	(_error+1)^(0+128),w
  3963     06C8  00D3               	movwf	(___wmul@multiplier+1)^(0+128)
  3964     06C9  083C               	movf	_error^(0+128),w
  3965     06CA  00D2               	movwf	___wmul@multiplier^(0+128)
  3966     06CB  300C               	movlw	12
  3967     06CC  00D4               	movwf	___wmul@multiplicand^(0+128)
  3968     06CD  3000               	movlw	0
  3969     06CE  00D5               	movwf	(___wmul@multiplicand^(0+128)+1)
  3970     06CF  318D  2554  3186   	fcall	___wmul
  3971     06D2  0021               	movlb	1	; select bank1
  3972     06D3  0834               	movf	_outputsum^(0+128),w
  3973     06D4  0752               	addwf	?___wmul^(0+128),w
  3974     06D5  00DA               	movwf	___lwdiv@dividend^(0+128)
  3975     06D6  0835               	movf	(_outputsum+1)^(0+128),w
  3976     06D7  3D53               	addwfc	(?___wmul+1)^(0+128),w
  3977     06D8  00DB               	movwf	(___lwdiv@dividend+1)^(0+128)
  3978     06D9  318E  2668  3186   	fcall	___lwdiv
  3979     06DC  0021               	movlb	1	; select bank1
  3980     06DD  0859               	movf	(?___lwdiv+1)^(0+128),w
  3981     06DE  00B3               	movwf	(_output+1)^(0+128)
  3982     06DF  0858               	movf	?___lwdiv^(0+128),w
  3983     06E0  00B2               	movwf	_output^(0+128)
  3984     06E1                     l3338:
  3985                           
  3986                           ;main.c: 68:         if(output > 1023) output = 1023;
  3987     06E1  3004               	movlw	4
  3988     06E2  0233               	subwf	(_output+1)^(0+128),w
  3989     06E3  3000               	movlw	0
  3990     06E4  1903               	skipnz
  3991     06E5  0232               	subwf	_output^(0+128),w
  3992     06E6  1C03               	skipc
  3993     06E7  2EE9               	goto	u2881
  3994     06E8  2EEA               	goto	u2880
  3995     06E9                     u2881:
  3996     06E9  2EEE               	goto	l3342
  3997     06EA                     u2880:
  3998     06EA                     l3340:
  3999     06EA  30FF               	movlw	255
  4000     06EB  00B2               	movwf	_output^(0+128)
  4001     06EC  3003               	movlw	3
  4002     06ED  00B3               	movwf	(_output^(0+128)+1)
  4003     06EE                     l3342:
  4004                           
  4005                           ;main.c: 69:         EPWM1_LoadDutyValue(output);
  4006     06EE  0833               	movf	(_output+1)^(0+128),w
  4007     06EF  00D3               	movwf	(EPWM1_LoadDutyValue@dutyValue+1)^(0+128)
  4008     06F0  0832               	movf	_output^(0+128),w
  4009     06F1  00D2               	movwf	EPWM1_LoadDutyValue@dutyValue^(0+128)
  4010     06F2  318C  24FB  3186   	fcall	_EPWM1_LoadDutyValue
  4011     06F5                     l684:
  4012     06F5  0008               	return
  4013     06F6                     __end_of_pwmcontrol:
  4014                           
  4015                           	psect	text3
  4016     0D54                     __ptext3:	
  4017 ;; *************** function ___wmul *****************
  4018 ;; Defined at:
  4019 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul16.c"
  4020 ;; Parameters:    Size  Location     Type
  4021 ;;  multiplier      2    0[BANK1 ] unsigned int 
  4022 ;;  multiplicand    2    2[BANK1 ] unsigned int 
  4023 ;; Auto vars:     Size  Location     Type
  4024 ;;  product         2    4[BANK1 ] unsigned int 
  4025 ;; Return value:  Size  Location     Type
  4026 ;;                  2    0[BANK1 ] unsigned int 
  4027 ;; Registers used:
  4028 ;;		wreg, status,2, status,0
  4029 ;; Tracked objects:
  4030 ;;		On entry : 0/0
  4031 ;;		On exit  : 0/0
  4032 ;;		Unchanged: 0/0
  4033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4034 ;;      Params:         0       0       4       0       0       0
  4035 ;;      Locals:         0       0       2       0       0       0
  4036 ;;      Temps:          0       0       0       0       0       0
  4037 ;;      Totals:         0       0       6       0       0       0
  4038 ;;Total ram usage:        6 bytes
  4039 ;; Hardware stack levels used: 1
  4040 ;; Hardware stack levels required when called: 7
  4041 ;; This function calls:
  4042 ;;		Nothing
  4043 ;; This function is called by:
  4044 ;;		_pwmcontrol
  4045 ;; This function uses a non-reentrant model
  4046 ;;
  4047                           
  4048     0D54                     ___wmul:	
  4049                           ;psect for function ___wmul
  4050                           
  4051     0D54                     l2758:	
  4052                           ;incstack = 0
  4053                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4054                           
  4055     0D54  0021               	movlb	1	; select bank1
  4056     0D55  01D6               	clrf	___wmul@product^(0+128)
  4057     0D56  01D7               	clrf	(___wmul@product+1)^(0+128)
  4058     0D57                     l2760:
  4059     0D57  1C52               	btfss	___wmul@multiplier^(0+128),0
  4060     0D58  2D5A               	goto	u1931
  4061     0D59  2D5B               	goto	u1930
  4062     0D5A                     u1931:
  4063     0D5A  2D5F               	goto	l980
  4064     0D5B                     u1930:
  4065     0D5B                     l2762:
  4066     0D5B  0854               	movf	___wmul@multiplicand^(0+128),w
  4067     0D5C  07D6               	addwf	___wmul@product^(0+128),f
  4068     0D5D  0855               	movf	(___wmul@multiplicand+1)^(0+128),w
  4069     0D5E  3DD7               	addwfc	(___wmul@product+1)^(0+128),f
  4070     0D5F                     l980:
  4071     0D5F  3001               	movlw	1
  4072     0D60                     u1945:
  4073     0D60  35D4               	lslf	___wmul@multiplicand^(0+128),f
  4074     0D61  0DD5               	rlf	(___wmul@multiplicand+1)^(0+128),f
  4075     0D62  0B89               	decfsz	9,f
  4076     0D63  2D60               	goto	u1945
  4077     0D64                     l2764:
  4078     0D64  3001               	movlw	1
  4079     0D65                     u1955:
  4080     0D65  36D3               	lsrf	(___wmul@multiplier+1)^(0+128),f
  4081     0D66  0CD2               	rrf	___wmul@multiplier^(0+128),f
  4082     0D67  0B89               	decfsz	9,f
  4083     0D68  2D65               	goto	u1955
  4084     0D69                     l2766:
  4085     0D69  0852               	movf	___wmul@multiplier^(0+128),w
  4086     0D6A  0453               	iorwf	(___wmul@multiplier+1)^(0+128),w
  4087     0D6B  1D03               	btfss	3,2
  4088     0D6C  2D6E               	goto	u1961
  4089     0D6D  2D6F               	goto	u1960
  4090     0D6E                     u1961:
  4091     0D6E  2D57               	goto	l2760
  4092     0D6F                     u1960:
  4093     0D6F                     l2768:
  4094     0D6F  0857               	movf	(___wmul@product+1)^(0+128),w
  4095     0D70  00D3               	movwf	(?___wmul+1)^(0+128)
  4096     0D71  0856               	movf	___wmul@product^(0+128),w
  4097     0D72  00D2               	movwf	?___wmul^(0+128)
  4098     0D73                     l982:
  4099     0D73  0008               	return
  4100     0D74                     __end_of___wmul:
  4101                           
  4102                           	psect	text4
  4103     0E68                     __ptext4:	
  4104 ;; *************** function ___lwdiv *****************
  4105 ;; Defined at:
  4106 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lwdiv.c"
  4107 ;; Parameters:    Size  Location     Type
  4108 ;;  divisor         2    6[BANK1 ] unsigned int 
  4109 ;;  dividend        2    8[BANK1 ] unsigned int 
  4110 ;; Auto vars:     Size  Location     Type
  4111 ;;  quotient        2   11[BANK1 ] unsigned int 
  4112 ;;  counter         1   13[BANK1 ] unsigned char 
  4113 ;; Return value:  Size  Location     Type
  4114 ;;                  2    6[BANK1 ] unsigned int 
  4115 ;; Registers used:
  4116 ;;		wreg, status,2, status,0
  4117 ;; Tracked objects:
  4118 ;;		On entry : 0/0
  4119 ;;		On exit  : 0/0
  4120 ;;		Unchanged: 0/0
  4121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4122 ;;      Params:         0       0       4       0       0       0
  4123 ;;      Locals:         0       0       3       0       0       0
  4124 ;;      Temps:          0       0       1       0       0       0
  4125 ;;      Totals:         0       0       8       0       0       0
  4126 ;;Total ram usage:        8 bytes
  4127 ;; Hardware stack levels used: 1
  4128 ;; Hardware stack levels required when called: 7
  4129 ;; This function calls:
  4130 ;;		Nothing
  4131 ;; This function is called by:
  4132 ;;		_pwmcontrol
  4133 ;; This function uses a non-reentrant model
  4134 ;;
  4135                           
  4136     0E68                     ___lwdiv:	
  4137                           ;psect for function ___lwdiv
  4138                           
  4139     0E68                     l2808:	
  4140                           ;incstack = 0
  4141                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4142                           
  4143     0E68  0021               	movlb	1	; select bank1
  4144     0E69  01DD               	clrf	___lwdiv@quotient^(0+128)
  4145     0E6A  01DE               	clrf	(___lwdiv@quotient+1)^(0+128)
  4146     0E6B                     l2810:
  4147     0E6B  0858               	movf	___lwdiv@divisor^(0+128),w
  4148     0E6C  0459               	iorwf	(___lwdiv@divisor+1)^(0+128),w
  4149     0E6D  1903               	btfsc	3,2
  4150     0E6E  2E70               	goto	u2071
  4151     0E6F  2E71               	goto	u2070
  4152     0E70                     u2071:
  4153     0E70  2EA0               	goto	l2830
  4154     0E71                     u2070:
  4155     0E71                     l2812:
  4156     0E71  01DF               	clrf	___lwdiv@counter^(0+128)
  4157     0E72  0ADF               	incf	___lwdiv@counter^(0+128),f
  4158     0E73  2E7D               	goto	l2818
  4159     0E74                     l2814:
  4160     0E74  3001               	movlw	1
  4161     0E75                     u2085:
  4162     0E75  35D8               	lslf	___lwdiv@divisor^(0+128),f
  4163     0E76  0DD9               	rlf	(___lwdiv@divisor+1)^(0+128),f
  4164     0E77  0B89               	decfsz	9,f
  4165     0E78  2E75               	goto	u2085
  4166     0E79                     l2816:
  4167     0E79  3001               	movlw	1
  4168     0E7A  00DC               	movwf	??___lwdiv^(0+128)
  4169     0E7B  085C               	movf	??___lwdiv^(0+128),w
  4170     0E7C  07DF               	addwf	___lwdiv@counter^(0+128),f
  4171     0E7D                     l2818:
  4172     0E7D  1FD9               	btfss	(___lwdiv@divisor+1)^(0+128),7
  4173     0E7E  2E80               	goto	u2091
  4174     0E7F  2E81               	goto	u2090
  4175     0E80                     u2091:
  4176     0E80  2E74               	goto	l2814
  4177     0E81                     u2090:
  4178     0E81                     l2820:
  4179     0E81  3001               	movlw	1
  4180     0E82                     u2105:
  4181     0E82  35DD               	lslf	___lwdiv@quotient^(0+128),f
  4182     0E83  0DDE               	rlf	(___lwdiv@quotient+1)^(0+128),f
  4183     0E84  0B89               	decfsz	9,f
  4184     0E85  2E82               	goto	u2105
  4185     0E86  0859               	movf	(___lwdiv@divisor+1)^(0+128),w
  4186     0E87  025B               	subwf	(___lwdiv@dividend+1)^(0+128),w
  4187     0E88  1D03               	skipz
  4188     0E89  2E8C               	goto	u2115
  4189     0E8A  0858               	movf	___lwdiv@divisor^(0+128),w
  4190     0E8B  025A               	subwf	___lwdiv@dividend^(0+128),w
  4191     0E8C                     u2115:
  4192     0E8C  1C03               	skipc
  4193     0E8D  2E8F               	goto	u2111
  4194     0E8E  2E90               	goto	u2110
  4195     0E8F                     u2111:
  4196     0E8F  2E95               	goto	l2826
  4197     0E90                     u2110:
  4198     0E90                     l2822:
  4199     0E90  0858               	movf	___lwdiv@divisor^(0+128),w
  4200     0E91  02DA               	subwf	___lwdiv@dividend^(0+128),f
  4201     0E92  0859               	movf	(___lwdiv@divisor+1)^(0+128),w
  4202     0E93  3BDB               	subwfb	(___lwdiv@dividend+1)^(0+128),f
  4203     0E94                     l2824:
  4204     0E94  145D               	bsf	___lwdiv@quotient^(0+128),0
  4205     0E95                     l2826:
  4206     0E95  3001               	movlw	1
  4207     0E96                     u2125:
  4208     0E96  36D9               	lsrf	(___lwdiv@divisor+1)^(0+128),f
  4209     0E97  0CD8               	rrf	___lwdiv@divisor^(0+128),f
  4210     0E98  0B89               	decfsz	9,f
  4211     0E99  2E96               	goto	u2125
  4212     0E9A                     l2828:
  4213     0E9A  3001               	movlw	1
  4214     0E9B  02DF               	subwf	___lwdiv@counter^(0+128),f
  4215     0E9C  1D03               	btfss	3,2
  4216     0E9D  2E9F               	goto	u2131
  4217     0E9E  2EA0               	goto	u2130
  4218     0E9F                     u2131:
  4219     0E9F  2E81               	goto	l2820
  4220     0EA0                     u2130:
  4221     0EA0                     l2830:
  4222     0EA0  085E               	movf	(___lwdiv@quotient+1)^(0+128),w
  4223     0EA1  00D9               	movwf	(?___lwdiv+1)^(0+128)
  4224     0EA2  085D               	movf	___lwdiv@quotient^(0+128),w
  4225     0EA3  00D8               	movwf	?___lwdiv^(0+128)
  4226     0EA4                     l1260:
  4227     0EA4  0008               	return
  4228     0EA5                     __end_of___lwdiv:
  4229                           
  4230                           	psect	text5
  4231     0CFB                     __ptext5:	
  4232 ;; *************** function _EPWM1_LoadDutyValue *****************
  4233 ;; Defined at:
  4234 ;;		line 90 in file "mcc_generated_files/epwm1.c"
  4235 ;; Parameters:    Size  Location     Type
  4236 ;;  dutyValue       2    0[BANK1 ] unsigned short 
  4237 ;; Auto vars:     Size  Location     Type
  4238 ;;		None
  4239 ;; Return value:  Size  Location     Type
  4240 ;;                  1    wreg      void 
  4241 ;; Registers used:
  4242 ;;		wreg, status,2, status,0
  4243 ;; Tracked objects:
  4244 ;;		On entry : 0/0
  4245 ;;		On exit  : 0/0
  4246 ;;		Unchanged: 0/0
  4247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4248 ;;      Params:         0       0       2       0       0       0
  4249 ;;      Locals:         0       0       0       0       0       0
  4250 ;;      Temps:          0       0       2       0       0       0
  4251 ;;      Totals:         0       0       4       0       0       0
  4252 ;;Total ram usage:        4 bytes
  4253 ;; Hardware stack levels used: 1
  4254 ;; Hardware stack levels required when called: 7
  4255 ;; This function calls:
  4256 ;;		Nothing
  4257 ;; This function is called by:
  4258 ;;		_pwmcontrol
  4259 ;; This function uses a non-reentrant model
  4260 ;;
  4261                           
  4262     0CFB                     _EPWM1_LoadDutyValue:	
  4263                           ;psect for function _EPWM1_LoadDutyValue
  4264                           
  4265     0CFB                     l2646:	
  4266                           ;incstack = 0
  4267                           ; Regs used in _EPWM1_LoadDutyValue: [wreg+status,2+status,0]
  4268                           
  4269                           
  4270                           ;mcc_generated_files/epwm1.c: 90: void EPWM1_LoadDutyValue(uint16_t dutyValue);mcc_gener
      +                          ated_files/epwm1.c: 91: {;mcc_generated_files/epwm1.c: 93:     CCPR1L = ((dutyValue & 0x
      +                          03FC)>>2);
  4271     0CFB  0021               	movlb	1	; select bank1
  4272     0CFC  0853               	movf	(EPWM1_LoadDutyValue@dutyValue+1)^(0+128),w
  4273     0CFD  00D5               	movwf	(??_EPWM1_LoadDutyValue^(0+128)+1)
  4274     0CFE  0852               	movf	EPWM1_LoadDutyValue@dutyValue^(0+128),w
  4275     0CFF  00D4               	movwf	??_EPWM1_LoadDutyValue^(0+128)
  4276     0D00  36D5               	lsrf	(??_EPWM1_LoadDutyValue^(0+128)+1),f
  4277     0D01  0CD4               	rrf	??_EPWM1_LoadDutyValue^(0+128),f
  4278     0D02  36D5               	lsrf	(??_EPWM1_LoadDutyValue^(0+128)+1),f
  4279     0D03  0CD4               	rrf	??_EPWM1_LoadDutyValue^(0+128),f
  4280     0D04  0854               	movf	??_EPWM1_LoadDutyValue^(0+128),w
  4281     0D05  0025               	movlb	5	; select bank5
  4282     0D06  0091               	movwf	17	;volatile
  4283                           
  4284                           ;mcc_generated_files/epwm1.c: 96:     CCP1CON = ((uint8_t)(CCP1CON & 0xCF) | ((dutyValue
      +                           & 0x0003)<<4));
  4285     0D07  0021               	movlb	1	; select bank1
  4286     0D08  0852               	movf	EPWM1_LoadDutyValue@dutyValue^(0+128),w
  4287     0D09  3903               	andlw	3
  4288     0D0A  00D4               	movwf	??_EPWM1_LoadDutyValue^(0+128)
  4289     0D0B  3004               	movlw	4
  4290     0D0C                     u1835:
  4291     0D0C  35D4               	lslf	??_EPWM1_LoadDutyValue^(0+128),f
  4292     0D0D  0B89               	decfsz	9,f
  4293     0D0E  2D0C               	goto	u1835
  4294     0D0F  0025               	movlb	5	; select bank5
  4295     0D10  0813               	movf	19,w	;volatile
  4296     0D11  39CF               	andlw	207
  4297     0D12  0021               	movlb	1	; select bank1
  4298     0D13  0454               	iorwf	??_EPWM1_LoadDutyValue^(0+128),w
  4299     0D14  0025               	movlb	5	; select bank5
  4300     0D15  0093               	movwf	19	;volatile
  4301     0D16                     l159:
  4302     0D16  0008               	return
  4303     0D17                     __end_of_EPWM1_LoadDutyValue:
  4304                           
  4305                           	psect	text6
  4306     0B23                     __ptext6:	
  4307 ;; *************** function _TMR4_StartTimer *****************
  4308 ;; Defined at:
  4309 ;;		line 79 in file "mcc_generated_files/tmr4.c"
  4310 ;; Parameters:    Size  Location     Type
  4311 ;;		None
  4312 ;; Auto vars:     Size  Location     Type
  4313 ;;		None
  4314 ;; Return value:  Size  Location     Type
  4315 ;;                  1    wreg      void 
  4316 ;; Registers used:
  4317 ;;		None
  4318 ;; Tracked objects:
  4319 ;;		On entry : 0/0
  4320 ;;		On exit  : 0/0
  4321 ;;		Unchanged: 0/0
  4322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4323 ;;      Params:         0       0       0       0       0       0
  4324 ;;      Locals:         0       0       0       0       0       0
  4325 ;;      Temps:          0       0       0       0       0       0
  4326 ;;      Totals:         0       0       0       0       0       0
  4327 ;;Total ram usage:        0 bytes
  4328 ;; Hardware stack levels used: 1
  4329 ;; Hardware stack levels required when called: 7
  4330 ;; This function calls:
  4331 ;;		Nothing
  4332 ;; This function is called by:
  4333 ;;		_controlchoose
  4334 ;; This function uses a non-reentrant model
  4335 ;;
  4336                           
  4337     0B23                     _TMR4_StartTimer:	
  4338                           ;psect for function _TMR4_StartTimer
  4339                           
  4340     0B23                     l3292:	
  4341                           ;incstack = 0
  4342                           ; Regs used in _TMR4_StartTimer: []
  4343                           
  4344                           
  4345                           ;mcc_generated_files/tmr4.c: 82:     T4CONbits.TMR4ON = 1;
  4346     0B23  0028               	movlb	8	; select bank8
  4347     0B24  1517               	bsf	23,2	;volatile
  4348     0B25                     l123:
  4349     0B25  0008               	return
  4350     0B26                     __end_of_TMR4_StartTimer:
  4351                           
  4352                           	psect	text7
  4353     0B51                     __ptext7:	
  4354 ;; *************** function _TMR4_LoadPeriodRegister *****************
  4355 ;; Defined at:
  4356 ;;		line 106 in file "mcc_generated_files/tmr4.c"
  4357 ;; Parameters:    Size  Location     Type
  4358 ;;  periodVal       1    wreg     unsigned char 
  4359 ;; Auto vars:     Size  Location     Type
  4360 ;;  periodVal       1    0[BANK1 ] unsigned char 
  4361 ;; Return value:  Size  Location     Type
  4362 ;;                  1    wreg      void 
  4363 ;; Registers used:
  4364 ;;		wreg
  4365 ;; Tracked objects:
  4366 ;;		On entry : 0/0
  4367 ;;		On exit  : 0/0
  4368 ;;		Unchanged: 0/0
  4369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4370 ;;      Params:         0       0       0       0       0       0
  4371 ;;      Locals:         0       0       1       0       0       0
  4372 ;;      Temps:          0       0       0       0       0       0
  4373 ;;      Totals:         0       0       1       0       0       0
  4374 ;;Total ram usage:        1 bytes
  4375 ;; Hardware stack levels used: 1
  4376 ;; Hardware stack levels required when called: 7
  4377 ;; This function calls:
  4378 ;;		Nothing
  4379 ;; This function is called by:
  4380 ;;		_controlchoose
  4381 ;; This function uses a non-reentrant model
  4382 ;;
  4383                           
  4384     0B51                     _TMR4_LoadPeriodRegister:	
  4385                           ;psect for function _TMR4_LoadPeriodRegister
  4386                           
  4387                           
  4388                           ;incstack = 0
  4389                           ; Regs used in _TMR4_LoadPeriodRegister: [wreg]
  4390                           ;TMR4_LoadPeriodRegister@periodVal stored from wreg
  4391     0B51  0021               	movlb	1	; select bank1
  4392     0B52  00D2               	movwf	TMR4_LoadPeriodRegister@periodVal^(0+128)
  4393     0B53                     l3294:
  4394                           
  4395                           ;mcc_generated_files/tmr4.c: 106: void TMR4_LoadPeriodRegister(uint8_t periodVal);mcc_ge
      +                          nerated_files/tmr4.c: 107: {;mcc_generated_files/tmr4.c: 108:    PR4 = periodVal;
  4396     0B53  0852               	movf	TMR4_LoadPeriodRegister@periodVal^(0+128),w
  4397     0B54  0028               	movlb	8	; select bank8
  4398     0B55  0096               	movwf	22	;volatile
  4399     0B56                     l135:
  4400     0B56  0008               	return
  4401     0B57                     __end_of_TMR4_LoadPeriodRegister:
  4402                           
  4403                           	psect	text8
  4404     0B20                     __ptext8:	
  4405 ;; *************** function _TMR4_StopTimer *****************
  4406 ;; Defined at:
  4407 ;;		line 85 in file "mcc_generated_files/tmr4.c"
  4408 ;; Parameters:    Size  Location     Type
  4409 ;;		None
  4410 ;; Auto vars:     Size  Location     Type
  4411 ;;		None
  4412 ;; Return value:  Size  Location     Type
  4413 ;;                  1    wreg      void 
  4414 ;; Registers used:
  4415 ;;		None
  4416 ;; Tracked objects:
  4417 ;;		On entry : 0/0
  4418 ;;		On exit  : 0/0
  4419 ;;		Unchanged: 0/0
  4420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4421 ;;      Params:         0       0       0       0       0       0
  4422 ;;      Locals:         0       0       0       0       0       0
  4423 ;;      Temps:          0       0       0       0       0       0
  4424 ;;      Totals:         0       0       0       0       0       0
  4425 ;;Total ram usage:        0 bytes
  4426 ;; Hardware stack levels used: 1
  4427 ;; Hardware stack levels required when called: 7
  4428 ;; This function calls:
  4429 ;;		Nothing
  4430 ;; This function is called by:
  4431 ;;		_main
  4432 ;; This function uses a non-reentrant model
  4433 ;;
  4434                           
  4435     0B20                     _TMR4_StopTimer:	
  4436                           ;psect for function _TMR4_StopTimer
  4437                           
  4438     0B20                     l3364:	
  4439                           ;incstack = 0
  4440                           ; Regs used in _TMR4_StopTimer: []
  4441                           
  4442                           
  4443                           ;mcc_generated_files/tmr4.c: 88:     T4CONbits.TMR4ON = 0;
  4444     0B20  0028               	movlb	8	; select bank8
  4445     0B21  1117               	bcf	23,2	;volatile
  4446     0B22                     l126:
  4447     0B22  0008               	return
  4448     0B23                     __end_of_TMR4_StopTimer:
  4449                           
  4450                           	psect	text9
  4451     0B4B                     __ptext9:	
  4452 ;; *************** function _TMR4_ReadTimer *****************
  4453 ;; Defined at:
  4454 ;;		line 91 in file "mcc_generated_files/tmr4.c"
  4455 ;; Parameters:    Size  Location     Type
  4456 ;;		None
  4457 ;; Auto vars:     Size  Location     Type
  4458 ;;  readVal         1    0[BANK1 ] unsigned char 
  4459 ;; Return value:  Size  Location     Type
  4460 ;;                  1    wreg      unsigned char 
  4461 ;; Registers used:
  4462 ;;		wreg
  4463 ;; Tracked objects:
  4464 ;;		On entry : 0/0
  4465 ;;		On exit  : 0/0
  4466 ;;		Unchanged: 0/0
  4467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4468 ;;      Params:         0       0       0       0       0       0
  4469 ;;      Locals:         0       0       1       0       0       0
  4470 ;;      Temps:          0       0       0       0       0       0
  4471 ;;      Totals:         0       0       1       0       0       0
  4472 ;;Total ram usage:        1 bytes
  4473 ;; Hardware stack levels used: 1
  4474 ;; Hardware stack levels required when called: 7
  4475 ;; This function calls:
  4476 ;;		Nothing
  4477 ;; This function is called by:
  4478 ;;		_main
  4479 ;; This function uses a non-reentrant model
  4480 ;;
  4481                           
  4482     0B4B                     _TMR4_ReadTimer:	
  4483                           ;psect for function _TMR4_ReadTimer
  4484                           
  4485     0B4B                     l3366:	
  4486                           ;incstack = 0
  4487                           ; Regs used in _TMR4_ReadTimer: [wreg]
  4488                           
  4489                           
  4490                           ;mcc_generated_files/tmr4.c: 93:     uint8_t readVal;;mcc_generated_files/tmr4.c: 95:   
      +                            readVal = TMR4;
  4491     0B4B  0028               	movlb	8	; select bank8
  4492     0B4C  0815               	movf	21,w	;volatile
  4493     0B4D  0021               	movlb	1	; select bank1
  4494     0B4E  00D2               	movwf	TMR4_ReadTimer@readVal^(0+128)
  4495                           
  4496                           ;mcc_generated_files/tmr4.c: 97:     return readVal;
  4497     0B4F  0852               	movf	TMR4_ReadTimer@readVal^(0+128),w
  4498     0B50                     l129:
  4499     0B50  0008               	return
  4500     0B51                     __end_of_TMR4_ReadTimer:
  4501                           
  4502                           	psect	text10
  4503     0E01                     __ptext10:	
  4504 ;; *************** function _SYSTEM_Initialize *****************
  4505 ;; Defined at:
  4506 ;;		line 50 in file "mcc_generated_files/mcc.c"
  4507 ;; Parameters:    Size  Location     Type
  4508 ;;		None
  4509 ;; Auto vars:     Size  Location     Type
  4510 ;;		None
  4511 ;; Return value:  Size  Location     Type
  4512 ;;                  1    wreg      void 
  4513 ;; Registers used:
  4514 ;;		wreg, status,2, status,0, pclath, cstack
  4515 ;; Tracked objects:
  4516 ;;		On entry : 0/0
  4517 ;;		On exit  : 0/0
  4518 ;;		Unchanged: 0/0
  4519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4520 ;;      Params:         0       0       0       0       0       0
  4521 ;;      Locals:         0       0       0       0       0       0
  4522 ;;      Temps:          0       0       0       0       0       0
  4523 ;;      Totals:         0       0       0       0       0       0
  4524 ;;Total ram usage:        0 bytes
  4525 ;; Hardware stack levels used: 1
  4526 ;; Hardware stack levels required when called: 9
  4527 ;; This function calls:
  4528 ;;		_ADC_Initialize
  4529 ;;		_CMP1_Initialize
  4530 ;;		_DAC_Initialize
  4531 ;;		_EPWM1_Initialize
  4532 ;;		_EUSART_Initialize
  4533 ;;		_FVR_Initialize
  4534 ;;		_OSCILLATOR_Initialize
  4535 ;;		_PIN_MANAGER_Initialize
  4536 ;;		_TMR0_Initialize
  4537 ;;		_TMR1_Initialize
  4538 ;;		_TMR2_Initialize
  4539 ;;		_TMR4_Initialize
  4540 ;;		_TMR6_Initialize
  4541 ;;		_WDT_Initialize
  4542 ;; This function is called by:
  4543 ;;		_main
  4544 ;; This function uses a non-reentrant model
  4545 ;;
  4546                           
  4547     0E01                     _SYSTEM_Initialize:	
  4548                           ;psect for function _SYSTEM_Initialize
  4549                           
  4550     0E01                     l3362:	
  4551                           ;incstack = 0
  4552                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4553                           
  4554                           
  4555                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  4556     0E01  318C  247A  318E   	fcall	_PIN_MANAGER_Initialize
  4557                           
  4558                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  4559     0E04  318B  2363  318E   	fcall	_OSCILLATOR_Initialize
  4560                           
  4561                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  4562     0E07  318B  2336  318E   	fcall	_WDT_Initialize
  4563                           
  4564                           ;mcc_generated_files/mcc.c: 56:     DAC_Initialize();
  4565     0E0A  318B  2345  318E   	fcall	_DAC_Initialize
  4566                           
  4567                           ;mcc_generated_files/mcc.c: 57:     FVR_Initialize();
  4568     0E0D  318B  2332  318E   	fcall	_FVR_Initialize
  4569                           
  4570                           ;mcc_generated_files/mcc.c: 58:     TMR4_Initialize();
  4571     0E10  3187  27F5  318E   	fcall	_TMR4_Initialize
  4572                           
  4573                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
  4574     0E13  318B  2372  318E   	fcall	_TMR2_Initialize
  4575                           
  4576                           ;mcc_generated_files/mcc.c: 60:     TMR0_Initialize();
  4577     0E16  318C  2427  318E   	fcall	_TMR0_Initialize
  4578                           
  4579                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
  4580     0E19  318C  243A  318E   	fcall	_TMR6_Initialize
  4581                           
  4582                           ;mcc_generated_files/mcc.c: 62:     CMP1_Initialize();
  4583     0E1C  318B  233F  318E   	fcall	_CMP1_Initialize
  4584                           
  4585                           ;mcc_generated_files/mcc.c: 63:     ADC_Initialize();
  4586     0E1F  318B  236A  318E   	fcall	_ADC_Initialize
  4587                           
  4588                           ;mcc_generated_files/mcc.c: 64:     EPWM1_Initialize();
  4589     0E22  318B  23D8  318E   	fcall	_EPWM1_Initialize
  4590                           
  4591                           ;mcc_generated_files/mcc.c: 65:     TMR1_Initialize();
  4592     0E25  318C  24DF  318E   	fcall	_TMR1_Initialize
  4593                           
  4594                           ;mcc_generated_files/mcc.c: 66:     EUSART_Initialize();
  4595     0E28  318E  26A5  318E   	fcall	_EUSART_Initialize
  4596     0E2B                     l39:
  4597     0E2B  0008               	return
  4598     0E2C                     __end_of_SYSTEM_Initialize:
  4599                           
  4600                           	psect	text11
  4601     0B36                     __ptext11:	
  4602 ;; *************** function _WDT_Initialize *****************
  4603 ;; Defined at:
  4604 ;;		line 79 in file "mcc_generated_files/mcc.c"
  4605 ;; Parameters:    Size  Location     Type
  4606 ;;		None
  4607 ;; Auto vars:     Size  Location     Type
  4608 ;;		None
  4609 ;; Return value:  Size  Location     Type
  4610 ;;                  1    wreg      void 
  4611 ;; Registers used:
  4612 ;;		wreg
  4613 ;; Tracked objects:
  4614 ;;		On entry : 0/0
  4615 ;;		On exit  : 0/0
  4616 ;;		Unchanged: 0/0
  4617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4618 ;;      Params:         0       0       0       0       0       0
  4619 ;;      Locals:         0       0       0       0       0       0
  4620 ;;      Temps:          0       0       0       0       0       0
  4621 ;;      Totals:         0       0       0       0       0       0
  4622 ;;Total ram usage:        0 bytes
  4623 ;; Hardware stack levels used: 1
  4624 ;; Hardware stack levels required when called: 7
  4625 ;; This function calls:
  4626 ;;		Nothing
  4627 ;; This function is called by:
  4628 ;;		_SYSTEM_Initialize
  4629 ;; This function uses a non-reentrant model
  4630 ;;
  4631                           
  4632     0B36                     _WDT_Initialize:	
  4633                           ;psect for function _WDT_Initialize
  4634                           
  4635     0B36                     l3178:	
  4636                           ;incstack = 0
  4637                           ; Regs used in _WDT_Initialize: [wreg]
  4638                           
  4639                           
  4640                           ;mcc_generated_files/mcc.c: 82:     WDTCON = 0x16;
  4641     0B36  3016               	movlw	22
  4642     0B37  0021               	movlb	1	; select bank1
  4643     0B38  0097               	movwf	23	;volatile
  4644     0B39                     l45:
  4645     0B39  0008               	return
  4646     0B3A                     __end_of_WDT_Initialize:
  4647                           
  4648                           	psect	text12
  4649     0C3A                     __ptext12:	
  4650 ;; *************** function _TMR6_Initialize *****************
  4651 ;; Defined at:
  4652 ;;		line 64 in file "mcc_generated_files/tmr6.c"
  4653 ;; Parameters:    Size  Location     Type
  4654 ;;		None
  4655 ;; Auto vars:     Size  Location     Type
  4656 ;;		None
  4657 ;; Return value:  Size  Location     Type
  4658 ;;                  1    wreg      void 
  4659 ;; Registers used:
  4660 ;;		wreg, status,2, status,0, pclath, cstack
  4661 ;; Tracked objects:
  4662 ;;		On entry : 0/0
  4663 ;;		On exit  : 0/0
  4664 ;;		Unchanged: 0/0
  4665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4666 ;;      Params:         0       0       0       0       0       0
  4667 ;;      Locals:         0       0       0       0       0       0
  4668 ;;      Temps:          0       0       0       0       0       0
  4669 ;;      Totals:         0       0       0       0       0       0
  4670 ;;Total ram usage:        0 bytes
  4671 ;; Hardware stack levels used: 1
  4672 ;; Hardware stack levels required when called: 8
  4673 ;; This function calls:
  4674 ;;		_TMR6_SetInterruptHandler
  4675 ;; This function is called by:
  4676 ;;		_SYSTEM_Initialize
  4677 ;; This function uses a non-reentrant model
  4678 ;;
  4679                           
  4680     0C3A                     _TMR6_Initialize:	
  4681                           ;psect for function _TMR6_Initialize
  4682                           
  4683     0C3A                     l3212:	
  4684                           ;incstack = 0
  4685                           ; Regs used in _TMR6_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4686                           
  4687                           
  4688                           ;mcc_generated_files/tmr6.c: 69:     PR6 = 0xBB;
  4689     0C3A  30BB               	movlw	187
  4690     0C3B  0028               	movlb	8	; select bank8
  4691     0C3C  009D               	movwf	29	;volatile
  4692     0C3D                     l3214:
  4693                           
  4694                           ;mcc_generated_files/tmr6.c: 72:     TMR6 = 0x00;
  4695     0C3D  019C               	clrf	28	;volatile
  4696     0C3E                     l3216:
  4697                           
  4698                           ;mcc_generated_files/tmr6.c: 75:     PIR3bits.TMR6IF = 0;
  4699     0C3E  0020               	movlb	0	; select bank0
  4700     0C3F  1193               	bcf	19,3	;volatile
  4701     0C40                     l3218:
  4702                           
  4703                           ;mcc_generated_files/tmr6.c: 78:     PIE3bits.TMR6IE = 1;
  4704     0C40  0021               	movlb	1	; select bank1
  4705     0C41  1593               	bsf	19,3	;volatile
  4706     0C42                     l3220:
  4707                           
  4708                           ;mcc_generated_files/tmr6.c: 81:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
  4709     0C42  30FF               	movlw	low _TMR6_DefaultInterruptHandler
  4710     0C43  00D2               	movwf	TMR6_SetInterruptHandler@InterruptHandler^(0+128)
  4711     0C44  3007               	movlw	high _TMR6_DefaultInterruptHandler
  4712     0C45  00D3               	movwf	(TMR6_SetInterruptHandler@InterruptHandler^(0+128)+1)
  4713     0C46  318B  23B9  318C   	fcall	_TMR6_SetInterruptHandler
  4714     0C49                     l3222:
  4715                           
  4716                           ;mcc_generated_files/tmr6.c: 84:     T6CON = 0x0F;
  4717     0C49  300F               	movlw	15
  4718     0C4A  0028               	movlb	8	; select bank8
  4719     0C4B  009E               	movwf	30	;volatile
  4720     0C4C                     l474:
  4721     0C4C  0008               	return
  4722     0C4D                     __end_of_TMR6_Initialize:
  4723                           
  4724                           	psect	text13
  4725     0BB9                     __ptext13:	
  4726 ;; *************** function _TMR6_SetInterruptHandler *****************
  4727 ;; Defined at:
  4728 ;;		line 132 in file "mcc_generated_files/tmr6.c"
  4729 ;; Parameters:    Size  Location     Type
  4730 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  4731 ;;		 -> fluxControlChoice(1), TMR6_DefaultInterruptHandler(1), 
  4732 ;; Auto vars:     Size  Location     Type
  4733 ;;		None
  4734 ;; Return value:  Size  Location     Type
  4735 ;;                  1    wreg      void 
  4736 ;; Registers used:
  4737 ;;		wreg
  4738 ;; Tracked objects:
  4739 ;;		On entry : 0/0
  4740 ;;		On exit  : 0/0
  4741 ;;		Unchanged: 0/0
  4742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4743 ;;      Params:         0       0       2       0       0       0
  4744 ;;      Locals:         0       0       0       0       0       0
  4745 ;;      Temps:          0       0       0       0       0       0
  4746 ;;      Totals:         0       0       2       0       0       0
  4747 ;;Total ram usage:        2 bytes
  4748 ;; Hardware stack levels used: 1
  4749 ;; Hardware stack levels required when called: 7
  4750 ;; This function calls:
  4751 ;;		Nothing
  4752 ;; This function is called by:
  4753 ;;		_TMR6_Initialize
  4754 ;;		_main
  4755 ;; This function uses a non-reentrant model
  4756 ;;
  4757                           
  4758     0BB9                     _TMR6_SetInterruptHandler:	
  4759                           ;psect for function _TMR6_SetInterruptHandler
  4760                           
  4761     0BB9                     l2670:	
  4762                           ;incstack = 0
  4763                           ; Regs used in _TMR6_SetInterruptHandler: [wreg]
  4764                           
  4765                           
  4766                           ;mcc_generated_files/tmr6.c: 133:     TMR6_InterruptHandler = InterruptHandler;
  4767     0BB9  0021               	movlb	1	; select bank1
  4768     0BBA  0853               	movf	(TMR6_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  4769     0BBB  0022               	movlb	2	; select bank2
  4770     0BBC  00C9               	movwf	(_TMR6_InterruptHandler+1)^(0+256)
  4771     0BBD  0021               	movlb	1	; select bank1
  4772     0BBE  0852               	movf	TMR6_SetInterruptHandler@InterruptHandler^(0+128),w
  4773     0BBF  0022               	movlb	2	; select bank2
  4774     0BC0  00C8               	movwf	_TMR6_InterruptHandler^(0+256)
  4775     0BC1                     l496:
  4776     0BC1  0008               	return
  4777     0BC2                     __end_of_TMR6_SetInterruptHandler:
  4778                           
  4779                           	psect	text14
  4780     07F5                     __ptext14:	
  4781 ;; *************** function _TMR4_Initialize *****************
  4782 ;; Defined at:
  4783 ;;		line 62 in file "mcc_generated_files/tmr4.c"
  4784 ;; Parameters:    Size  Location     Type
  4785 ;;		None
  4786 ;; Auto vars:     Size  Location     Type
  4787 ;;		None
  4788 ;; Return value:  Size  Location     Type
  4789 ;;                  1    wreg      void 
  4790 ;; Registers used:
  4791 ;;		wreg, status,2
  4792 ;; Tracked objects:
  4793 ;;		On entry : 0/0
  4794 ;;		On exit  : 0/0
  4795 ;;		Unchanged: 0/0
  4796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4797 ;;      Params:         0       0       0       0       0       0
  4798 ;;      Locals:         0       0       0       0       0       0
  4799 ;;      Temps:          0       0       0       0       0       0
  4800 ;;      Totals:         0       0       0       0       0       0
  4801 ;;Total ram usage:        0 bytes
  4802 ;; Hardware stack levels used: 1
  4803 ;; Hardware stack levels required when called: 7
  4804 ;; This function calls:
  4805 ;;		Nothing
  4806 ;; This function is called by:
  4807 ;;		_SYSTEM_Initialize
  4808 ;; This function uses a non-reentrant model
  4809 ;;
  4810                           
  4811     07F5                     _TMR4_Initialize:	
  4812                           ;psect for function _TMR4_Initialize
  4813                           
  4814     07F5                     l3184:	
  4815                           ;incstack = 0
  4816                           ; Regs used in _TMR4_Initialize: [wreg+status,2]
  4817                           
  4818                           
  4819                           ;mcc_generated_files/tmr4.c: 67:     PR4 = 0xFA;
  4820     07F5  30FA               	movlw	250
  4821     07F6  0028               	movlb	8	; select bank8
  4822     07F7  0096               	movwf	22	;volatile
  4823     07F8                     l3186:
  4824                           
  4825                           ;mcc_generated_files/tmr4.c: 70:     TMR4 = 0x00;
  4826     07F8  0195               	clrf	21	;volatile
  4827     07F9                     l3188:
  4828                           
  4829                           ;mcc_generated_files/tmr4.c: 73:     PIR3bits.TMR4IF = 0;
  4830     07F9  0020               	movlb	0	; select bank0
  4831     07FA  1093               	bcf	19,1	;volatile
  4832     07FB                     l3190:
  4833                           
  4834                           ;mcc_generated_files/tmr4.c: 76:     T4CON = 0x2F;
  4835     07FB  302F               	movlw	47
  4836     07FC  0028               	movlb	8	; select bank8
  4837     07FD  0097               	movwf	23	;volatile
  4838     07FE                     l120:
  4839     07FE  0008               	return
  4840     07FF                     __end_of_TMR4_Initialize:
  4841                           
  4842                           	psect	text15
  4843     0B72                     __ptext15:	
  4844 ;; *************** function _TMR2_Initialize *****************
  4845 ;; Defined at:
  4846 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  4847 ;; Parameters:    Size  Location     Type
  4848 ;;		None
  4849 ;; Auto vars:     Size  Location     Type
  4850 ;;		None
  4851 ;; Return value:  Size  Location     Type
  4852 ;;                  1    wreg      void 
  4853 ;; Registers used:
  4854 ;;		wreg, status,2
  4855 ;; Tracked objects:
  4856 ;;		On entry : 0/0
  4857 ;;		On exit  : 0/0
  4858 ;;		Unchanged: 0/0
  4859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4860 ;;      Params:         0       0       0       0       0       0
  4861 ;;      Locals:         0       0       0       0       0       0
  4862 ;;      Temps:          0       0       0       0       0       0
  4863 ;;      Totals:         0       0       0       0       0       0
  4864 ;;Total ram usage:        0 bytes
  4865 ;; Hardware stack levels used: 1
  4866 ;; Hardware stack levels required when called: 7
  4867 ;; This function calls:
  4868 ;;		Nothing
  4869 ;; This function is called by:
  4870 ;;		_SYSTEM_Initialize
  4871 ;; This function uses a non-reentrant model
  4872 ;;
  4873                           
  4874     0B72                     _TMR2_Initialize:	
  4875                           ;psect for function _TMR2_Initialize
  4876                           
  4877     0B72                     l3192:	
  4878                           ;incstack = 0
  4879                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  4880                           
  4881                           
  4882                           ;mcc_generated_files/tmr2.c: 67:     PR2 = 0xFF;
  4883     0B72  30FF               	movlw	255
  4884     0B73  0020               	movlb	0	; select bank0
  4885     0B74  009B               	movwf	27	;volatile
  4886     0B75                     l3194:
  4887                           
  4888                           ;mcc_generated_files/tmr2.c: 70:     TMR2 = 0x00;
  4889     0B75  019A               	clrf	26	;volatile
  4890     0B76                     l3196:
  4891                           
  4892                           ;mcc_generated_files/tmr2.c: 73:     PIR1bits.TMR2IF = 0;
  4893     0B76  1091               	bcf	17,1	;volatile
  4894     0B77                     l3198:
  4895                           
  4896                           ;mcc_generated_files/tmr2.c: 76:     T2CON = 0x04;
  4897     0B77  3004               	movlw	4
  4898     0B78  009C               	movwf	28	;volatile
  4899     0B79                     l88:
  4900     0B79  0008               	return
  4901     0B7A                     __end_of_TMR2_Initialize:
  4902                           
  4903                           	psect	text16
  4904     0CDF                     __ptext16:	
  4905 ;; *************** function _TMR1_Initialize *****************
  4906 ;; Defined at:
  4907 ;;		line 65 in file "mcc_generated_files/tmr1.c"
  4908 ;; Parameters:    Size  Location     Type
  4909 ;;		None
  4910 ;; Auto vars:     Size  Location     Type
  4911 ;;		None
  4912 ;; Return value:  Size  Location     Type
  4913 ;;                  1    wreg      void 
  4914 ;; Registers used:
  4915 ;;		wreg, status,2, status,0, pclath, cstack
  4916 ;; Tracked objects:
  4917 ;;		On entry : 0/0
  4918 ;;		On exit  : 0/0
  4919 ;;		Unchanged: 0/0
  4920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4921 ;;      Params:         0       0       0       0       0       0
  4922 ;;      Locals:         0       0       0       0       0       0
  4923 ;;      Temps:          0       0       0       0       0       0
  4924 ;;      Totals:         0       0       0       0       0       0
  4925 ;;Total ram usage:        0 bytes
  4926 ;; Hardware stack levels used: 1
  4927 ;; Hardware stack levels required when called: 8
  4928 ;; This function calls:
  4929 ;;		_TMR1_SetGateInterruptHandler
  4930 ;; This function is called by:
  4931 ;;		_SYSTEM_Initialize
  4932 ;; This function uses a non-reentrant model
  4933 ;;
  4934                           
  4935     0CDF                     _TMR1_Initialize:	
  4936                           ;psect for function _TMR1_Initialize
  4937                           
  4938     0CDF                     l3244:	
  4939                           ;incstack = 0
  4940                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4941                           
  4942                           
  4943                           ;mcc_generated_files/tmr1.c: 70:     T1GCON = 0x80;
  4944     0CDF  3080               	movlw	128
  4945     0CE0  0020               	movlb	0	; select bank0
  4946     0CE1  0099               	movwf	25	;volatile
  4947     0CE2                     l3246:
  4948                           
  4949                           ;mcc_generated_files/tmr1.c: 73:     TMR1H = 0x00;
  4950     0CE2  0197               	clrf	23	;volatile
  4951     0CE3                     l3248:
  4952                           
  4953                           ;mcc_generated_files/tmr1.c: 76:     TMR1L = 0x00;
  4954     0CE3  0196               	clrf	22	;volatile
  4955     0CE4                     l3250:
  4956                           
  4957                           ;mcc_generated_files/tmr1.c: 79:     PIR1bits.TMR1IF = 0;
  4958     0CE4  1011               	bcf	17,0	;volatile
  4959                           
  4960                           ;mcc_generated_files/tmr1.c: 82:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  4961     0CE5  0817               	movf	23,w	;volatile
  4962     0CE6  0021               	movlb	1	; select bank1
  4963     0CE7  00BF               	movwf	(_timer1ReloadVal+1)^(0+128)	;volatile
  4964     0CE8  0020               	movlb	0	; select bank0
  4965     0CE9  0816               	movf	22,w	;volatile
  4966     0CEA  0021               	movlb	1	; select bank1
  4967     0CEB  00BE               	movwf	_timer1ReloadVal^(0+128)	;volatile
  4968     0CEC                     l3252:
  4969                           
  4970                           ;mcc_generated_files/tmr1.c: 85:     PIR1bits.TMR1GIF = 0;
  4971     0CEC  0020               	movlb	0	; select bank0
  4972     0CED  1391               	bcf	17,7	;volatile
  4973     0CEE                     l3254:
  4974                           
  4975                           ;mcc_generated_files/tmr1.c: 88:     PIE1bits.TMR1GIE = 1;
  4976     0CEE  0021               	movlb	1	; select bank1
  4977     0CEF  1791               	bsf	17,7	;volatile
  4978     0CF0                     l3256:
  4979                           
  4980                           ;mcc_generated_files/tmr1.c: 91:     TMR1_SetGateInterruptHandler(TMR1_DefaultGateInterr
      +                          uptHandler);
  4981     0CF0  3003               	movlw	low _TMR1_DefaultGateInterruptHandler
  4982     0CF1  00D2               	movwf	TMR1_SetGateInterruptHandler@InterruptHandler^(0+128)
  4983     0CF2  3000               	movlw	high _TMR1_DefaultGateInterruptHandler
  4984     0CF3  00D3               	movwf	(TMR1_SetGateInterruptHandler@InterruptHandler^(0+128)+1)
  4985     0CF4  318B  23B0  318C   	fcall	_TMR1_SetGateInterruptHandler
  4986     0CF7                     l3258:
  4987                           
  4988                           ;mcc_generated_files/tmr1.c: 94:     T1CON = 0x01;
  4989     0CF7  3001               	movlw	1
  4990     0CF8  0020               	movlb	0	; select bank0
  4991     0CF9  0098               	movwf	24	;volatile
  4992     0CFA                     l526:
  4993     0CFA  0008               	return
  4994     0CFB                     __end_of_TMR1_Initialize:
  4995                           
  4996                           	psect	text17
  4997     0BB0                     __ptext17:	
  4998 ;; *************** function _TMR1_SetGateInterruptHandler *****************
  4999 ;; Defined at:
  5000 ;;		line 177 in file "mcc_generated_files/tmr1.c"
  5001 ;; Parameters:    Size  Location     Type
  5002 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  5003 ;;		 -> mede_height(1), TMR1_DefaultGateInterruptHandler(1), 
  5004 ;; Auto vars:     Size  Location     Type
  5005 ;;		None
  5006 ;; Return value:  Size  Location     Type
  5007 ;;                  1    wreg      void 
  5008 ;; Registers used:
  5009 ;;		wreg
  5010 ;; Tracked objects:
  5011 ;;		On entry : 0/0
  5012 ;;		On exit  : 0/0
  5013 ;;		Unchanged: 0/0
  5014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5015 ;;      Params:         0       0       2       0       0       0
  5016 ;;      Locals:         0       0       0       0       0       0
  5017 ;;      Temps:          0       0       0       0       0       0
  5018 ;;      Totals:         0       0       2       0       0       0
  5019 ;;Total ram usage:        2 bytes
  5020 ;; Hardware stack levels used: 1
  5021 ;; Hardware stack levels required when called: 7
  5022 ;; This function calls:
  5023 ;;		Nothing
  5024 ;; This function is called by:
  5025 ;;		_TMR1_Initialize
  5026 ;;		_main
  5027 ;; This function uses a non-reentrant model
  5028 ;;
  5029                           
  5030     0BB0                     _TMR1_SetGateInterruptHandler:	
  5031                           ;psect for function _TMR1_SetGateInterruptHandler
  5032                           
  5033     0BB0                     l2672:	
  5034                           ;incstack = 0
  5035                           ; Regs used in _TMR1_SetGateInterruptHandler: [wreg]
  5036                           
  5037                           
  5038                           ;mcc_generated_files/tmr1.c: 178:     TMR1_GateInterruptHandler = InterruptHandler;
  5039     0BB0  0021               	movlb	1	; select bank1
  5040     0BB1  0853               	movf	(TMR1_SetGateInterruptHandler@InterruptHandler+1)^(0+128),w
  5041     0BB2  0022               	movlb	2	; select bank2
  5042     0BB3  00C7               	movwf	(_TMR1_GateInterruptHandler+1)^(0+256)
  5043     0BB4  0021               	movlb	1	; select bank1
  5044     0BB5  0852               	movf	TMR1_SetGateInterruptHandler@InterruptHandler^(0+128),w
  5045     0BB6  0022               	movlb	2	; select bank2
  5046     0BB7  00C6               	movwf	_TMR1_GateInterruptHandler^(0+256)
  5047     0BB8                     l559:
  5048     0BB8  0008               	return
  5049     0BB9                     __end_of_TMR1_SetGateInterruptHandler:
  5050                           
  5051                           	psect	text18
  5052     0C27                     __ptext18:	
  5053 ;; *************** function _TMR0_Initialize *****************
  5054 ;; Defined at:
  5055 ;;		line 64 in file "mcc_generated_files/tmr0.c"
  5056 ;; Parameters:    Size  Location     Type
  5057 ;;		None
  5058 ;; Auto vars:     Size  Location     Type
  5059 ;;		None
  5060 ;; Return value:  Size  Location     Type
  5061 ;;                  1    wreg      void 
  5062 ;; Registers used:
  5063 ;;		wreg, status,2, status,0, pclath, cstack
  5064 ;; Tracked objects:
  5065 ;;		On entry : 0/0
  5066 ;;		On exit  : 0/0
  5067 ;;		Unchanged: 0/0
  5068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5069 ;;      Params:         0       0       0       0       0       0
  5070 ;;      Locals:         0       0       0       0       0       0
  5071 ;;      Temps:          0       0       0       0       0       0
  5072 ;;      Totals:         0       0       0       0       0       0
  5073 ;;Total ram usage:        0 bytes
  5074 ;; Hardware stack levels used: 1
  5075 ;; Hardware stack levels required when called: 8
  5076 ;; This function calls:
  5077 ;;		_TMR0_SetInterruptHandler
  5078 ;; This function is called by:
  5079 ;;		_SYSTEM_Initialize
  5080 ;; This function uses a non-reentrant model
  5081 ;;
  5082                           
  5083     0C27                     _TMR0_Initialize:	
  5084                           ;psect for function _TMR0_Initialize
  5085                           
  5086     0C27                     l3200:	
  5087                           ;incstack = 0
  5088                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5089                           
  5090                           
  5091                           ;mcc_generated_files/tmr0.c: 69:     OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | (0xD5 
      +                          & 0x3F));
  5092     0C27  0021               	movlb	1	; select bank1
  5093     0C28  0815               	movf	21,w	;volatile
  5094     0C29  39C0               	andlw	192
  5095     0C2A  3815               	iorlw	21
  5096     0C2B  0095               	movwf	21	;volatile
  5097     0C2C                     l3202:
  5098                           
  5099                           ;mcc_generated_files/tmr0.c: 72:     TMR0 = 0x00;
  5100     0C2C  0020               	movlb	0	; select bank0
  5101     0C2D  0195               	clrf	21	;volatile
  5102     0C2E                     l3204:
  5103                           
  5104                           ;mcc_generated_files/tmr0.c: 75:     timer0ReloadVal= 0;
  5105     0C2E  0021               	movlb	1	; select bank1
  5106     0C2F  01CA               	clrf	_timer0ReloadVal^(0+128)	;volatile
  5107     0C30                     l3206:
  5108                           
  5109                           ;mcc_generated_files/tmr0.c: 78:     INTCONbits.TMR0IF = 0;
  5110     0C30  110B               	bcf	11,2	;volatile
  5111     0C31                     l3208:
  5112                           
  5113                           ;mcc_generated_files/tmr0.c: 81:     INTCONbits.TMR0IE = 1;
  5114     0C31  168B               	bsf	11,5	;volatile
  5115     0C32                     l3210:
  5116                           
  5117                           ;mcc_generated_files/tmr0.c: 84:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  5118     0C32  3002               	movlw	low _TMR0_DefaultInterruptHandler
  5119     0C33  00D2               	movwf	TMR0_SetInterruptHandler@InterruptHandler^(0+128)
  5120     0C34  3000               	movlw	high _TMR0_DefaultInterruptHandler
  5121     0C35  00D3               	movwf	(TMR0_SetInterruptHandler@InterruptHandler^(0+128)+1)
  5122     0C36  318B  23A7  318C   	fcall	_TMR0_SetInterruptHandler
  5123     0C39                     l361:
  5124     0C39  0008               	return
  5125     0C3A                     __end_of_TMR0_Initialize:
  5126                           
  5127                           	psect	text19
  5128     0BA7                     __ptext19:	
  5129 ;; *************** function _TMR0_SetInterruptHandler *****************
  5130 ;; Defined at:
  5131 ;;		line 125 in file "mcc_generated_files/tmr0.c"
  5132 ;; Parameters:    Size  Location     Type
  5133 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  5134 ;;		 -> end_Rx(1), TMR0_DefaultInterruptHandler(1), 
  5135 ;; Auto vars:     Size  Location     Type
  5136 ;;		None
  5137 ;; Return value:  Size  Location     Type
  5138 ;;                  1    wreg      void 
  5139 ;; Registers used:
  5140 ;;		wreg
  5141 ;; Tracked objects:
  5142 ;;		On entry : 0/0
  5143 ;;		On exit  : 0/0
  5144 ;;		Unchanged: 0/0
  5145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5146 ;;      Params:         0       0       2       0       0       0
  5147 ;;      Locals:         0       0       0       0       0       0
  5148 ;;      Temps:          0       0       0       0       0       0
  5149 ;;      Totals:         0       0       2       0       0       0
  5150 ;;Total ram usage:        2 bytes
  5151 ;; Hardware stack levels used: 1
  5152 ;; Hardware stack levels required when called: 7
  5153 ;; This function calls:
  5154 ;;		Nothing
  5155 ;; This function is called by:
  5156 ;;		_TMR0_Initialize
  5157 ;;		_main
  5158 ;; This function uses a non-reentrant model
  5159 ;;
  5160                           
  5161     0BA7                     _TMR0_SetInterruptHandler:	
  5162                           ;psect for function _TMR0_SetInterruptHandler
  5163                           
  5164     0BA7                     l2668:	
  5165                           ;incstack = 0
  5166                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  5167                           
  5168                           
  5169                           ;mcc_generated_files/tmr0.c: 126:     TMR0_InterruptHandler = InterruptHandler;
  5170     0BA7  0021               	movlb	1	; select bank1
  5171     0BA8  0853               	movf	(TMR0_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  5172     0BA9  0022               	movlb	2	; select bank2
  5173     0BAA  00CB               	movwf	(_TMR0_InterruptHandler+1)^(0+256)
  5174     0BAB  0021               	movlb	1	; select bank1
  5175     0BAC  0852               	movf	TMR0_SetInterruptHandler@InterruptHandler^(0+128),w
  5176     0BAD  0022               	movlb	2	; select bank2
  5177     0BAE  00CA               	movwf	_TMR0_InterruptHandler^(0+256)
  5178     0BAF                     l377:
  5179     0BAF  0008               	return
  5180     0BB0                     __end_of_TMR0_SetInterruptHandler:
  5181                           
  5182                           	psect	text20
  5183     0C7A                     __ptext20:	
  5184 ;; *************** function _PIN_MANAGER_Initialize *****************
  5185 ;; Defined at:
  5186 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  5187 ;; Parameters:    Size  Location     Type
  5188 ;;		None
  5189 ;; Auto vars:     Size  Location     Type
  5190 ;;		None
  5191 ;; Return value:  Size  Location     Type
  5192 ;;                  1    wreg      void 
  5193 ;; Registers used:
  5194 ;;		wreg, status,2
  5195 ;; Tracked objects:
  5196 ;;		On entry : 0/0
  5197 ;;		On exit  : 0/0
  5198 ;;		Unchanged: 0/0
  5199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5200 ;;      Params:         0       0       0       0       0       0
  5201 ;;      Locals:         0       0       0       0       0       0
  5202 ;;      Temps:          0       0       0       0       0       0
  5203 ;;      Totals:         0       0       0       0       0       0
  5204 ;;Total ram usage:        0 bytes
  5205 ;; Hardware stack levels used: 1
  5206 ;; Hardware stack levels required when called: 7
  5207 ;; This function calls:
  5208 ;;		Nothing
  5209 ;; This function is called by:
  5210 ;;		_SYSTEM_Initialize
  5211 ;; This function uses a non-reentrant model
  5212 ;;
  5213                           
  5214     0C7A                     _PIN_MANAGER_Initialize:	
  5215                           ;psect for function _PIN_MANAGER_Initialize
  5216                           
  5217     0C7A                     l3158:	
  5218                           ;incstack = 0
  5219                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  5220                           
  5221                           
  5222                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  5223     0C7A  0022               	movlb	2	; select bank2
  5224     0C7B  018C               	clrf	12	;volatile
  5225                           
  5226                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  5227     0C7C  018D               	clrf	13	;volatile
  5228     0C7D                     l3160:
  5229                           
  5230                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0xE1;
  5231     0C7D  30E1               	movlw	225
  5232     0C7E  0021               	movlb	1	; select bank1
  5233     0C7F  008C               	movwf	12	;volatile
  5234     0C80                     l3162:
  5235                           
  5236                           ;mcc_generated_files/pin_manager.c: 67:     TRISB = 0xF7;
  5237     0C80  30F7               	movlw	247
  5238     0C81  008D               	movwf	13	;volatile
  5239     0C82                     l3164:
  5240                           
  5241                           ;mcc_generated_files/pin_manager.c: 72:     ANSELB = 0xF0;
  5242     0C82  30F0               	movlw	240
  5243     0C83  0023               	movlb	3	; select bank3
  5244     0C84  008D               	movwf	13	;volatile
  5245     0C85                     l3166:
  5246                           
  5247                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x01;
  5248     0C85  3001               	movlw	1
  5249     0C86  008C               	movwf	12	;volatile
  5250                           
  5251                           ;mcc_generated_files/pin_manager.c: 78:     WPUB = 0x00;
  5252     0C87  0024               	movlb	4	; select bank4
  5253     0C88  018D               	clrf	13	;volatile
  5254                           
  5255                           ;mcc_generated_files/pin_manager.c: 79:     WPUA = 0x00;
  5256     0C89  018C               	clrf	12	;volatile
  5257     0C8A                     l3168:
  5258                           
  5259                           ;mcc_generated_files/pin_manager.c: 80:     OPTION_REGbits.nWPUEN = 1;
  5260     0C8A  0021               	movlb	1	; select bank1
  5261     0C8B  1795               	bsf	21,7	;volatile
  5262                           
  5263                           ;mcc_generated_files/pin_manager.c: 86:     APFCON0 = 0x00;
  5264     0C8C  0022               	movlb	2	; select bank2
  5265     0C8D  019D               	clrf	29	;volatile
  5266                           
  5267                           ;mcc_generated_files/pin_manager.c: 87:     APFCON1 = 0x00;
  5268     0C8E  019E               	clrf	30	;volatile
  5269     0C8F                     l3170:
  5270                           
  5271                           ;mcc_generated_files/pin_manager.c: 94:     INTCONbits.IOCIE = 1;
  5272     0C8F  158B               	bsf	11,3	;volatile
  5273     0C90                     l72:
  5274     0C90  0008               	return
  5275     0C91                     __end_of_PIN_MANAGER_Initialize:
  5276                           
  5277                           	psect	text21
  5278     0B63                     __ptext21:	
  5279 ;; *************** function _OSCILLATOR_Initialize *****************
  5280 ;; Defined at:
  5281 ;;		line 69 in file "mcc_generated_files/mcc.c"
  5282 ;; Parameters:    Size  Location     Type
  5283 ;;		None
  5284 ;; Auto vars:     Size  Location     Type
  5285 ;;		None
  5286 ;; Return value:  Size  Location     Type
  5287 ;;                  1    wreg      void 
  5288 ;; Registers used:
  5289 ;;		wreg, status,2
  5290 ;; Tracked objects:
  5291 ;;		On entry : 0/0
  5292 ;;		On exit  : 0/0
  5293 ;;		Unchanged: 0/0
  5294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5295 ;;      Params:         0       0       0       0       0       0
  5296 ;;      Locals:         0       0       0       0       0       0
  5297 ;;      Temps:          0       0       0       0       0       0
  5298 ;;      Totals:         0       0       0       0       0       0
  5299 ;;Total ram usage:        0 bytes
  5300 ;; Hardware stack levels used: 1
  5301 ;; Hardware stack levels required when called: 7
  5302 ;; This function calls:
  5303 ;;		Nothing
  5304 ;; This function is called by:
  5305 ;;		_SYSTEM_Initialize
  5306 ;; This function uses a non-reentrant model
  5307 ;;
  5308                           
  5309     0B63                     _OSCILLATOR_Initialize:	
  5310                           ;psect for function _OSCILLATOR_Initialize
  5311                           
  5312     0B63                     l3172:	
  5313                           ;incstack = 0
  5314                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  5315                           
  5316                           
  5317                           ;mcc_generated_files/mcc.c: 72:     OSCCON = 0x78;
  5318     0B63  3078               	movlw	120
  5319     0B64  0021               	movlb	1	; select bank1
  5320     0B65  0099               	movwf	25	;volatile
  5321     0B66                     l3174:
  5322                           
  5323                           ;mcc_generated_files/mcc.c: 74:     OSCTUNE = 0x00;
  5324     0B66  0198               	clrf	24	;volatile
  5325     0B67                     l3176:
  5326                           
  5327                           ;mcc_generated_files/mcc.c: 76:     BORCON = 0x00;
  5328     0B67  0022               	movlb	2	; select bank2
  5329     0B68  0196               	clrf	22	;volatile
  5330     0B69                     l42:
  5331     0B69  0008               	return
  5332     0B6A                     __end_of_OSCILLATOR_Initialize:
  5333                           
  5334                           	psect	text22
  5335     0B32                     __ptext22:	
  5336 ;; *************** function _FVR_Initialize *****************
  5337 ;; Defined at:
  5338 ;;		line 58 in file "mcc_generated_files/fvr.c"
  5339 ;; Parameters:    Size  Location     Type
  5340 ;;		None
  5341 ;; Auto vars:     Size  Location     Type
  5342 ;;		None
  5343 ;; Return value:  Size  Location     Type
  5344 ;;                  1    wreg      void 
  5345 ;; Registers used:
  5346 ;;		wreg
  5347 ;; Tracked objects:
  5348 ;;		On entry : 0/0
  5349 ;;		On exit  : 0/0
  5350 ;;		Unchanged: 0/0
  5351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5352 ;;      Params:         0       0       0       0       0       0
  5353 ;;      Locals:         0       0       0       0       0       0
  5354 ;;      Temps:          0       0       0       0       0       0
  5355 ;;      Totals:         0       0       0       0       0       0
  5356 ;;Total ram usage:        0 bytes
  5357 ;; Hardware stack levels used: 1
  5358 ;; Hardware stack levels required when called: 7
  5359 ;; This function calls:
  5360 ;;		Nothing
  5361 ;; This function is called by:
  5362 ;;		_SYSTEM_Initialize
  5363 ;; This function uses a non-reentrant model
  5364 ;;
  5365                           
  5366     0B32                     _FVR_Initialize:	
  5367                           ;psect for function _FVR_Initialize
  5368                           
  5369     0B32                     l3182:	
  5370                           ;incstack = 0
  5371                           ; Regs used in _FVR_Initialize: [wreg]
  5372                           
  5373                           
  5374                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0x84;
  5375     0B32  3084               	movlw	132
  5376     0B33  0022               	movlb	2	; select bank2
  5377     0B34  0097               	movwf	23	;volatile
  5378     0B35                     l387:
  5379     0B35  0008               	return
  5380     0B36                     __end_of_FVR_Initialize:
  5381                           
  5382                           	psect	text23
  5383     0EA5                     __ptext23:	
  5384 ;; *************** function _EUSART_Initialize *****************
  5385 ;; Defined at:
  5386 ;;		line 88 in file "mcc_generated_files/eusart.c"
  5387 ;; Parameters:    Size  Location     Type
  5388 ;;		None
  5389 ;; Auto vars:     Size  Location     Type
  5390 ;;		None
  5391 ;; Return value:  Size  Location     Type
  5392 ;;                  1    wreg      void 
  5393 ;; Registers used:
  5394 ;;		wreg, status,2, status,0, pclath, cstack
  5395 ;; Tracked objects:
  5396 ;;		On entry : 0/0
  5397 ;;		On exit  : 0/0
  5398 ;;		Unchanged: 0/0
  5399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5400 ;;      Params:         0       0       0       0       0       0
  5401 ;;      Locals:         0       0       0       0       0       0
  5402 ;;      Temps:          0       0       0       0       0       0
  5403 ;;      Totals:         0       0       0       0       0       0
  5404 ;;Total ram usage:        0 bytes
  5405 ;; Hardware stack levels used: 1
  5406 ;; Hardware stack levels required when called: 8
  5407 ;; This function calls:
  5408 ;;		_EUSART_SetErrorHandler
  5409 ;;		_EUSART_SetFramingErrorHandler
  5410 ;;		_EUSART_SetOverrunErrorHandler
  5411 ;;		_EUSART_SetRxInterruptHandler
  5412 ;;		_EUSART_SetTxInterruptHandler
  5413 ;; This function is called by:
  5414 ;;		_SYSTEM_Initialize
  5415 ;; This function uses a non-reentrant model
  5416 ;;
  5417                           
  5418     0EA5                     _EUSART_Initialize:	
  5419                           ;psect for function _EUSART_Initialize
  5420                           
  5421     0EA5                     l3260:	
  5422                           ;incstack = 0
  5423                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5424                           
  5425                           
  5426                           ;mcc_generated_files/eusart.c: 91:     PIE1bits.RCIE = 0;
  5427     0EA5  0021               	movlb	1	; select bank1
  5428     0EA6  1291               	bcf	17,5	;volatile
  5429     0EA7                     l3262:
  5430                           
  5431                           ;mcc_generated_files/eusart.c: 92:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
  5432     0EA7  30E4               	movlw	low _EUSART_Receive_ISR
  5433     0EA8  00D2               	movwf	EUSART_SetRxInterruptHandler@interruptHandler^(0+128)
  5434     0EA9  300E               	movlw	high _EUSART_Receive_ISR
  5435     0EAA  00D3               	movwf	(EUSART_SetRxInterruptHandler@interruptHandler^(0+128)+1)
  5436     0EAB  318B  2395  318E   	fcall	_EUSART_SetRxInterruptHandler
  5437     0EAE                     l3264:
  5438                           
  5439                           ;mcc_generated_files/eusart.c: 93:     PIE1bits.TXIE = 0;
  5440     0EAE  0021               	movlb	1	; select bank1
  5441     0EAF  1211               	bcf	17,4	;volatile
  5442                           
  5443                           ;mcc_generated_files/eusart.c: 94:     EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR)
      +                          ;
  5444     0EB0  3074               	movlw	low _EUSART_Transmit_ISR
  5445     0EB1  00D2               	movwf	EUSART_SetTxInterruptHandler@interruptHandler^(0+128)
  5446     0EB2  300D               	movlw	high _EUSART_Transmit_ISR
  5447     0EB3  00D3               	movwf	(EUSART_SetTxInterruptHandler@interruptHandler^(0+128)+1)
  5448     0EB4  318B  239E  318E   	fcall	_EUSART_SetTxInterruptHandler
  5449     0EB7                     l3266:
  5450                           
  5451                           ;mcc_generated_files/eusart.c: 98:     BAUDCON = 0x08;
  5452     0EB7  3008               	movlw	8
  5453     0EB8  0023               	movlb	3	; select bank3
  5454     0EB9  009F               	movwf	31	;volatile
  5455     0EBA                     l3268:
  5456                           
  5457                           ;mcc_generated_files/eusart.c: 101:     RCSTA = 0x90;
  5458     0EBA  3090               	movlw	144
  5459     0EBB  009D               	movwf	29	;volatile
  5460     0EBC                     l3270:
  5461                           
  5462                           ;mcc_generated_files/eusart.c: 104:     TXSTA = 0x24;
  5463     0EBC  3024               	movlw	36
  5464     0EBD  009E               	movwf	30	;volatile
  5465     0EBE                     l3272:
  5466                           
  5467                           ;mcc_generated_files/eusart.c: 107:     SPBRGL = 0x22;
  5468     0EBE  3022               	movlw	34
  5469     0EBF  009B               	movwf	27	;volatile
  5470     0EC0                     l3274:
  5471                           
  5472                           ;mcc_generated_files/eusart.c: 110:     SPBRGH = 0x00;
  5473     0EC0  019C               	clrf	28	;volatile
  5474     0EC1                     l3276:
  5475                           
  5476                           ;mcc_generated_files/eusart.c: 113:     EUSART_SetFramingErrorHandler(EUSART_DefaultFram
      +                          ingErrorHandler);
  5477     0EC1  301E               	movlw	low _EUSART_DefaultFramingErrorHandler
  5478     0EC2  0021               	movlb	1	; select bank1
  5479     0EC3  00D2               	movwf	EUSART_SetFramingErrorHandler@interruptHandler^(0+128)
  5480     0EC4  300B               	movlw	high _EUSART_DefaultFramingErrorHandler
  5481     0EC5  00D3               	movwf	(EUSART_SetFramingErrorHandler@interruptHandler^(0+128)+1)
  5482     0EC6  318B  2383  318E   	fcall	_EUSART_SetFramingErrorHandler
  5483     0EC9                     l3278:
  5484                           
  5485                           ;mcc_generated_files/eusart.c: 114:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOver
      +                          runErrorHandler);
  5486     0EC9  302A               	movlw	low _EUSART_DefaultOverrunErrorHandler
  5487     0ECA  0021               	movlb	1	; select bank1
  5488     0ECB  00D2               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler^(0+128)
  5489     0ECC  300B               	movlw	high _EUSART_DefaultOverrunErrorHandler
  5490     0ECD  00D3               	movwf	(EUSART_SetOverrunErrorHandler@interruptHandler^(0+128)+1)
  5491     0ECE  318B  238C  318E   	fcall	_EUSART_SetOverrunErrorHandler
  5492     0ED1                     l3280:
  5493                           
  5494                           ;mcc_generated_files/eusart.c: 115:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandle
      +                          r);
  5495     0ED1  3026               	movlw	low _EUSART_DefaultErrorHandler
  5496     0ED2  0021               	movlb	1	; select bank1
  5497     0ED3  00D2               	movwf	EUSART_SetErrorHandler@interruptHandler^(0+128)
  5498     0ED4  300B               	movlw	high _EUSART_DefaultErrorHandler
  5499     0ED5  00D3               	movwf	(EUSART_SetErrorHandler@interruptHandler^(0+128)+1)
  5500     0ED6  318B  237A  318E   	fcall	_EUSART_SetErrorHandler
  5501                           
  5502                           ;mcc_generated_files/eusart.c: 117:     eusartRxLastError.status = 0;
  5503     0ED9  0021               	movlb	1	; select bank1
  5504     0EDA  01CB               	clrf	_eusartRxLastError^(0+128)	;volatile
  5505                           
  5506                           ;mcc_generated_files/eusart.c: 120:     eusartTxHead = 0;
  5507     0EDB  01D1               	clrf	_eusartTxHead^(0+128)	;volatile
  5508                           
  5509                           ;mcc_generated_files/eusart.c: 121:     eusartTxTail = 0;
  5510     0EDC  01D0               	clrf	_eusartTxTail^(0+128)	;volatile
  5511     0EDD                     l3282:
  5512                           
  5513                           ;mcc_generated_files/eusart.c: 122:     eusartTxBufferRemaining = sizeof(eusartTxBuffer)
      +                          ;
  5514     0EDD  3008               	movlw	8
  5515     0EDE  00CF               	movwf	_eusartTxBufferRemaining^(0+128)	;volatile
  5516     0EDF                     l3284:
  5517                           
  5518                           ;mcc_generated_files/eusart.c: 124:     eusartRxHead = 0;
  5519     0EDF  01CE               	clrf	_eusartRxHead^(0+128)	;volatile
  5520     0EE0                     l3286:
  5521                           
  5522                           ;mcc_generated_files/eusart.c: 125:     eusartRxTail = 0;
  5523     0EE0  01CD               	clrf	_eusartRxTail^(0+128)	;volatile
  5524     0EE1                     l3288:
  5525                           
  5526                           ;mcc_generated_files/eusart.c: 126:     eusartRxCount = 0;
  5527     0EE1  01CC               	clrf	_eusartRxCount^(0+128)	;volatile
  5528     0EE2                     l3290:
  5529                           
  5530                           ;mcc_generated_files/eusart.c: 129:     PIE1bits.RCIE = 1;
  5531     0EE2  1691               	bsf	17,5	;volatile
  5532     0EE3                     l275:
  5533     0EE3  0008               	return
  5534     0EE4                     __end_of_EUSART_Initialize:
  5535                           
  5536                           	psect	text24
  5537     0B9E                     __ptext24:	
  5538 ;; *************** function _EUSART_SetTxInterruptHandler *****************
  5539 ;; Defined at:
  5540 ;;		line 276 in file "mcc_generated_files/eusart.c"
  5541 ;; Parameters:    Size  Location     Type
  5542 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  5543 ;;		 -> EUSART_Transmit_ISR(1), 
  5544 ;; Auto vars:     Size  Location     Type
  5545 ;;		None
  5546 ;; Return value:  Size  Location     Type
  5547 ;;                  1    wreg      void 
  5548 ;; Registers used:
  5549 ;;		wreg
  5550 ;; Tracked objects:
  5551 ;;		On entry : 0/0
  5552 ;;		On exit  : 0/0
  5553 ;;		Unchanged: 0/0
  5554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5555 ;;      Params:         0       0       2       0       0       0
  5556 ;;      Locals:         0       0       0       0       0       0
  5557 ;;      Temps:          0       0       0       0       0       0
  5558 ;;      Totals:         0       0       2       0       0       0
  5559 ;;Total ram usage:        2 bytes
  5560 ;; Hardware stack levels used: 1
  5561 ;; Hardware stack levels required when called: 7
  5562 ;; This function calls:
  5563 ;;		Nothing
  5564 ;; This function is called by:
  5565 ;;		_EUSART_Initialize
  5566 ;; This function uses a non-reentrant model
  5567 ;;
  5568                           
  5569     0B9E                     _EUSART_SetTxInterruptHandler:	
  5570                           ;psect for function _EUSART_SetTxInterruptHandler
  5571                           
  5572     0B9E                     l2650:	
  5573                           ;incstack = 0
  5574                           ; Regs used in _EUSART_SetTxInterruptHandler: [wreg]
  5575                           
  5576                           
  5577                           ;mcc_generated_files/eusart.c: 277:     EUSART_TxDefaultInterruptHandler = interruptHand
      +                          ler;
  5578     0B9E  0021               	movlb	1	; select bank1
  5579     0B9F  0853               	movf	(EUSART_SetTxInterruptHandler@interruptHandler+1)^(0+128),w
  5580     0BA0  0022               	movlb	2	; select bank2
  5581     0BA1  00D5               	movwf	(_EUSART_TxDefaultInterruptHandler+1)^(0+256)
  5582     0BA2  0021               	movlb	1	; select bank1
  5583     0BA3  0852               	movf	EUSART_SetTxInterruptHandler@interruptHandler^(0+128),w
  5584     0BA4  0022               	movlb	2	; select bank2
  5585     0BA5  00D4               	movwf	_EUSART_TxDefaultInterruptHandler^(0+256)
  5586     0BA6                     l341:
  5587     0BA6  0008               	return
  5588     0BA7                     __end_of_EUSART_SetTxInterruptHandler:
  5589                           
  5590                           	psect	text25
  5591     0B95                     __ptext25:	
  5592 ;; *************** function _EUSART_SetRxInterruptHandler *****************
  5593 ;; Defined at:
  5594 ;;		line 280 in file "mcc_generated_files/eusart.c"
  5595 ;; Parameters:    Size  Location     Type
  5596 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  5597 ;;		 -> receive(1), EUSART_Receive_ISR(1), 
  5598 ;; Auto vars:     Size  Location     Type
  5599 ;;		None
  5600 ;; Return value:  Size  Location     Type
  5601 ;;                  1    wreg      void 
  5602 ;; Registers used:
  5603 ;;		wreg
  5604 ;; Tracked objects:
  5605 ;;		On entry : 0/0
  5606 ;;		On exit  : 0/0
  5607 ;;		Unchanged: 0/0
  5608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5609 ;;      Params:         0       0       2       0       0       0
  5610 ;;      Locals:         0       0       0       0       0       0
  5611 ;;      Temps:          0       0       0       0       0       0
  5612 ;;      Totals:         0       0       2       0       0       0
  5613 ;;Total ram usage:        2 bytes
  5614 ;; Hardware stack levels used: 1
  5615 ;; Hardware stack levels required when called: 7
  5616 ;; This function calls:
  5617 ;;		Nothing
  5618 ;; This function is called by:
  5619 ;;		_EUSART_Initialize
  5620 ;;		_main
  5621 ;; This function uses a non-reentrant model
  5622 ;;
  5623                           
  5624     0B95                     _EUSART_SetRxInterruptHandler:	
  5625                           ;psect for function _EUSART_SetRxInterruptHandler
  5626                           
  5627     0B95                     l2648:	
  5628                           ;incstack = 0
  5629                           ; Regs used in _EUSART_SetRxInterruptHandler: [wreg]
  5630                           
  5631                           
  5632                           ;mcc_generated_files/eusart.c: 281:     EUSART_RxDefaultInterruptHandler = interruptHand
      +                          ler;
  5633     0B95  0021               	movlb	1	; select bank1
  5634     0B96  0853               	movf	(EUSART_SetRxInterruptHandler@interruptHandler+1)^(0+128),w
  5635     0B97  0022               	movlb	2	; select bank2
  5636     0B98  00D3               	movwf	(_EUSART_RxDefaultInterruptHandler+1)^(0+256)
  5637     0B99  0021               	movlb	1	; select bank1
  5638     0B9A  0852               	movf	EUSART_SetRxInterruptHandler@interruptHandler^(0+128),w
  5639     0B9B  0022               	movlb	2	; select bank2
  5640     0B9C  00D2               	movwf	_EUSART_RxDefaultInterruptHandler^(0+256)
  5641     0B9D                     l344:
  5642     0B9D  0008               	return
  5643     0B9E                     __end_of_EUSART_SetRxInterruptHandler:
  5644                           
  5645                           	psect	text26
  5646     0B8C                     __ptext26:	
  5647 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  5648 ;; Defined at:
  5649 ;;		line 268 in file "mcc_generated_files/eusart.c"
  5650 ;; Parameters:    Size  Location     Type
  5651 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  5652 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  5653 ;; Auto vars:     Size  Location     Type
  5654 ;;		None
  5655 ;; Return value:  Size  Location     Type
  5656 ;;                  1    wreg      void 
  5657 ;; Registers used:
  5658 ;;		wreg
  5659 ;; Tracked objects:
  5660 ;;		On entry : 0/0
  5661 ;;		On exit  : 0/0
  5662 ;;		Unchanged: 0/0
  5663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5664 ;;      Params:         0       0       2       0       0       0
  5665 ;;      Locals:         0       0       0       0       0       0
  5666 ;;      Temps:          0       0       0       0       0       0
  5667 ;;      Totals:         0       0       2       0       0       0
  5668 ;;Total ram usage:        2 bytes
  5669 ;; Hardware stack levels used: 1
  5670 ;; Hardware stack levels required when called: 7
  5671 ;; This function calls:
  5672 ;;		Nothing
  5673 ;; This function is called by:
  5674 ;;		_EUSART_Initialize
  5675 ;; This function uses a non-reentrant model
  5676 ;;
  5677                           
  5678     0B8C                     _EUSART_SetOverrunErrorHandler:	
  5679                           ;psect for function _EUSART_SetOverrunErrorHandler
  5680                           
  5681     0B8C                     l2654:	
  5682                           ;incstack = 0
  5683                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  5684                           
  5685                           
  5686                           ;mcc_generated_files/eusart.c: 269:     EUSART_OverrunErrorHandler = interruptHandler;
  5687     0B8C  0021               	movlb	1	; select bank1
  5688     0B8D  0853               	movf	(EUSART_SetOverrunErrorHandler@interruptHandler+1)^(0+128),w
  5689     0B8E  0022               	movlb	2	; select bank2
  5690     0B8F  00CF               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+256)
  5691     0B90  0021               	movlb	1	; select bank1
  5692     0B91  0852               	movf	EUSART_SetOverrunErrorHandler@interruptHandler^(0+128),w
  5693     0B92  0022               	movlb	2	; select bank2
  5694     0B93  00CE               	movwf	_EUSART_OverrunErrorHandler^(0+256)
  5695     0B94                     l335:
  5696     0B94  0008               	return
  5697     0B95                     __end_of_EUSART_SetOverrunErrorHandler:
  5698                           
  5699                           	psect	text27
  5700     0B83                     __ptext27:	
  5701 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  5702 ;; Defined at:
  5703 ;;		line 264 in file "mcc_generated_files/eusart.c"
  5704 ;; Parameters:    Size  Location     Type
  5705 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  5706 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  5707 ;; Auto vars:     Size  Location     Type
  5708 ;;		None
  5709 ;; Return value:  Size  Location     Type
  5710 ;;                  1    wreg      void 
  5711 ;; Registers used:
  5712 ;;		wreg
  5713 ;; Tracked objects:
  5714 ;;		On entry : 0/0
  5715 ;;		On exit  : 0/0
  5716 ;;		Unchanged: 0/0
  5717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5718 ;;      Params:         0       0       2       0       0       0
  5719 ;;      Locals:         0       0       0       0       0       0
  5720 ;;      Temps:          0       0       0       0       0       0
  5721 ;;      Totals:         0       0       2       0       0       0
  5722 ;;Total ram usage:        2 bytes
  5723 ;; Hardware stack levels used: 1
  5724 ;; Hardware stack levels required when called: 7
  5725 ;; This function calls:
  5726 ;;		Nothing
  5727 ;; This function is called by:
  5728 ;;		_EUSART_Initialize
  5729 ;; This function uses a non-reentrant model
  5730 ;;
  5731                           
  5732     0B83                     _EUSART_SetFramingErrorHandler:	
  5733                           ;psect for function _EUSART_SetFramingErrorHandler
  5734                           
  5735     0B83                     l2652:	
  5736                           ;incstack = 0
  5737                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  5738                           
  5739                           
  5740                           ;mcc_generated_files/eusart.c: 265:     EUSART_FramingErrorHandler = interruptHandler;
  5741     0B83  0021               	movlb	1	; select bank1
  5742     0B84  0853               	movf	(EUSART_SetFramingErrorHandler@interruptHandler+1)^(0+128),w
  5743     0B85  0022               	movlb	2	; select bank2
  5744     0B86  00D1               	movwf	(_EUSART_FramingErrorHandler+1)^(0+256)
  5745     0B87  0021               	movlb	1	; select bank1
  5746     0B88  0852               	movf	EUSART_SetFramingErrorHandler@interruptHandler^(0+128),w
  5747     0B89  0022               	movlb	2	; select bank2
  5748     0B8A  00D0               	movwf	_EUSART_FramingErrorHandler^(0+256)
  5749     0B8B                     l332:
  5750     0B8B  0008               	return
  5751     0B8C                     __end_of_EUSART_SetFramingErrorHandler:
  5752                           
  5753                           	psect	text28
  5754     0B7A                     __ptext28:	
  5755 ;; *************** function _EUSART_SetErrorHandler *****************
  5756 ;; Defined at:
  5757 ;;		line 272 in file "mcc_generated_files/eusart.c"
  5758 ;; Parameters:    Size  Location     Type
  5759 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  5760 ;;		 -> EUSART_DefaultErrorHandler(1), 
  5761 ;; Auto vars:     Size  Location     Type
  5762 ;;		None
  5763 ;; Return value:  Size  Location     Type
  5764 ;;                  1    wreg      void 
  5765 ;; Registers used:
  5766 ;;		wreg
  5767 ;; Tracked objects:
  5768 ;;		On entry : 0/0
  5769 ;;		On exit  : 0/0
  5770 ;;		Unchanged: 0/0
  5771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5772 ;;      Params:         0       0       2       0       0       0
  5773 ;;      Locals:         0       0       0       0       0       0
  5774 ;;      Temps:          0       0       0       0       0       0
  5775 ;;      Totals:         0       0       2       0       0       0
  5776 ;;Total ram usage:        2 bytes
  5777 ;; Hardware stack levels used: 1
  5778 ;; Hardware stack levels required when called: 7
  5779 ;; This function calls:
  5780 ;;		Nothing
  5781 ;; This function is called by:
  5782 ;;		_EUSART_Initialize
  5783 ;; This function uses a non-reentrant model
  5784 ;;
  5785                           
  5786     0B7A                     _EUSART_SetErrorHandler:	
  5787                           ;psect for function _EUSART_SetErrorHandler
  5788                           
  5789     0B7A                     l2656:	
  5790                           ;incstack = 0
  5791                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  5792                           
  5793                           
  5794                           ;mcc_generated_files/eusart.c: 273:     EUSART_ErrorHandler = interruptHandler;
  5795     0B7A  0021               	movlb	1	; select bank1
  5796     0B7B  0853               	movf	(EUSART_SetErrorHandler@interruptHandler+1)^(0+128),w
  5797     0B7C  0022               	movlb	2	; select bank2
  5798     0B7D  00CD               	movwf	(_EUSART_ErrorHandler+1)^(0+256)
  5799     0B7E  0021               	movlb	1	; select bank1
  5800     0B7F  0852               	movf	EUSART_SetErrorHandler@interruptHandler^(0+128),w
  5801     0B80  0022               	movlb	2	; select bank2
  5802     0B81  00CC               	movwf	_EUSART_ErrorHandler^(0+256)
  5803     0B82                     l338:
  5804     0B82  0008               	return
  5805     0B83                     __end_of_EUSART_SetErrorHandler:
  5806                           
  5807                           	psect	text29
  5808     0BD8                     __ptext29:	
  5809 ;; *************** function _EPWM1_Initialize *****************
  5810 ;; Defined at:
  5811 ;;		line 64 in file "mcc_generated_files/epwm1.c"
  5812 ;; Parameters:    Size  Location     Type
  5813 ;;		None
  5814 ;; Auto vars:     Size  Location     Type
  5815 ;;		None
  5816 ;; Return value:  Size  Location     Type
  5817 ;;                  1    wreg      void 
  5818 ;; Registers used:
  5819 ;;		wreg, status,2, status,0
  5820 ;; Tracked objects:
  5821 ;;		On entry : 0/0
  5822 ;;		On exit  : 0/0
  5823 ;;		Unchanged: 0/0
  5824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5825 ;;      Params:         0       0       0       0       0       0
  5826 ;;      Locals:         0       0       0       0       0       0
  5827 ;;      Temps:          0       0       0       0       0       0
  5828 ;;      Totals:         0       0       0       0       0       0
  5829 ;;Total ram usage:        0 bytes
  5830 ;; Hardware stack levels used: 1
  5831 ;; Hardware stack levels required when called: 7
  5832 ;; This function calls:
  5833 ;;		Nothing
  5834 ;; This function is called by:
  5835 ;;		_SYSTEM_Initialize
  5836 ;; This function uses a non-reentrant model
  5837 ;;
  5838                           
  5839     0BD8                     _EPWM1_Initialize:	
  5840                           ;psect for function _EPWM1_Initialize
  5841                           
  5842     0BD8                     l3232:	
  5843                           ;incstack = 0
  5844                           ; Regs used in _EPWM1_Initialize: [wreg+status,2+status,0]
  5845                           
  5846                           
  5847                           ;mcc_generated_files/epwm1.c: 69:  CCP1CON = 0x3C;
  5848     0BD8  303C               	movlw	60
  5849     0BD9  0025               	movlb	5	; select bank5
  5850     0BDA  0093               	movwf	19	;volatile
  5851     0BDB                     l3234:
  5852                           
  5853                           ;mcc_generated_files/epwm1.c: 72:  ECCP1AS = 0x00;
  5854     0BDB  0195               	clrf	21	;volatile
  5855     0BDC                     l3236:
  5856                           
  5857                           ;mcc_generated_files/epwm1.c: 75:  PWM1CON = 0x80;
  5858     0BDC  3080               	movlw	128
  5859     0BDD  0094               	movwf	20	;volatile
  5860     0BDE                     l3238:
  5861                           
  5862                           ;mcc_generated_files/epwm1.c: 78:  PSTR1CON = 0x01;
  5863     0BDE  3001               	movlw	1
  5864     0BDF  0096               	movwf	22	;volatile
  5865     0BE0                     l3240:
  5866                           
  5867                           ;mcc_generated_files/epwm1.c: 81:  CCPR1H = 0x00;
  5868     0BE0  0192               	clrf	18	;volatile
  5869                           
  5870                           ;mcc_generated_files/epwm1.c: 84:  CCPR1L = 0x7F;
  5871     0BE1  307F               	movlw	127
  5872     0BE2  0091               	movwf	17	;volatile
  5873     0BE3                     l3242:
  5874                           
  5875                           ;mcc_generated_files/epwm1.c: 87:  CCPTMRS0bits.C1TSEL = 0x0;
  5876     0BE3  30FC               	movlw	-4
  5877     0BE4  059E               	andwf	30,f	;volatile
  5878     0BE5                     l156:
  5879     0BE5  0008               	return
  5880     0BE6                     __end_of_EPWM1_Initialize:
  5881                           
  5882                           	psect	text30
  5883     0B45                     __ptext30:	
  5884 ;; *************** function _DAC_Initialize *****************
  5885 ;; Defined at:
  5886 ;;		line 58 in file "mcc_generated_files/dac.c"
  5887 ;; Parameters:    Size  Location     Type
  5888 ;;		None
  5889 ;; Auto vars:     Size  Location     Type
  5890 ;;		None
  5891 ;; Return value:  Size  Location     Type
  5892 ;;                  1    wreg      void 
  5893 ;; Registers used:
  5894 ;;		wreg
  5895 ;; Tracked objects:
  5896 ;;		On entry : 0/0
  5897 ;;		On exit  : 0/0
  5898 ;;		Unchanged: 0/0
  5899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5900 ;;      Params:         0       0       0       0       0       0
  5901 ;;      Locals:         0       0       0       0       0       0
  5902 ;;      Temps:          0       0       0       0       0       0
  5903 ;;      Totals:         0       0       0       0       0       0
  5904 ;;Total ram usage:        0 bytes
  5905 ;; Hardware stack levels used: 1
  5906 ;; Hardware stack levels required when called: 7
  5907 ;; This function calls:
  5908 ;;		Nothing
  5909 ;; This function is called by:
  5910 ;;		_SYSTEM_Initialize
  5911 ;; This function uses a non-reentrant model
  5912 ;;
  5913                           
  5914     0B45                     _DAC_Initialize:	
  5915                           ;psect for function _DAC_Initialize
  5916                           
  5917     0B45                     l3180:	
  5918                           ;incstack = 0
  5919                           ; Regs used in _DAC_Initialize: [wreg]
  5920                           
  5921                           
  5922                           ;mcc_generated_files/dac.c: 61:     DACCON0 = 0x80;
  5923     0B45  3080               	movlw	128
  5924     0B46  0022               	movlb	2	; select bank2
  5925     0B47  0098               	movwf	24	;volatile
  5926                           
  5927                           ;mcc_generated_files/dac.c: 63:     DACCON1 = 0x06;
  5928     0B48  3006               	movlw	6
  5929     0B49  0099               	movwf	25	;volatile
  5930     0B4A                     l435:
  5931     0B4A  0008               	return
  5932     0B4B                     __end_of_DAC_Initialize:
  5933                           
  5934                           	psect	text31
  5935     0B3F                     __ptext31:	
  5936 ;; *************** function _CMP1_Initialize *****************
  5937 ;; Defined at:
  5938 ;;		line 58 in file "mcc_generated_files/cmp1.c"
  5939 ;; Parameters:    Size  Location     Type
  5940 ;;		None
  5941 ;; Auto vars:     Size  Location     Type
  5942 ;;		None
  5943 ;; Return value:  Size  Location     Type
  5944 ;;                  1    wreg      void 
  5945 ;; Registers used:
  5946 ;;		wreg
  5947 ;; Tracked objects:
  5948 ;;		On entry : 0/0
  5949 ;;		On exit  : 0/0
  5950 ;;		Unchanged: 0/0
  5951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5952 ;;      Params:         0       0       0       0       0       0
  5953 ;;      Locals:         0       0       0       0       0       0
  5954 ;;      Temps:          0       0       0       0       0       0
  5955 ;;      Totals:         0       0       0       0       0       0
  5956 ;;Total ram usage:        0 bytes
  5957 ;; Hardware stack levels used: 1
  5958 ;; Hardware stack levels required when called: 7
  5959 ;; This function calls:
  5960 ;;		Nothing
  5961 ;; This function is called by:
  5962 ;;		_SYSTEM_Initialize
  5963 ;; This function uses a non-reentrant model
  5964 ;;
  5965                           
  5966     0B3F                     _CMP1_Initialize:	
  5967                           ;psect for function _CMP1_Initialize
  5968                           
  5969     0B3F                     l3224:	
  5970                           ;incstack = 0
  5971                           ; Regs used in _CMP1_Initialize: [wreg]
  5972                           
  5973                           
  5974                           ;mcc_generated_files/cmp1.c: 62:     CM1CON0 = 0x84;
  5975     0B3F  3084               	movlw	132
  5976     0B40  0022               	movlb	2	; select bank2
  5977     0B41  0091               	movwf	17	;volatile
  5978                           
  5979                           ;mcc_generated_files/cmp1.c: 65:     CM1CON1 = 0x10;
  5980     0B42  3010               	movlw	16
  5981     0B43  0092               	movwf	18	;volatile
  5982     0B44                     l450:
  5983     0B44  0008               	return
  5984     0B45                     __end_of_CMP1_Initialize:
  5985                           
  5986                           	psect	text32
  5987     0B6A                     __ptext32:	
  5988 ;; *************** function _ADC_Initialize *****************
  5989 ;; Defined at:
  5990 ;;		line 67 in file "mcc_generated_files/adc.c"
  5991 ;; Parameters:    Size  Location     Type
  5992 ;;		None
  5993 ;; Auto vars:     Size  Location     Type
  5994 ;;		None
  5995 ;; Return value:  Size  Location     Type
  5996 ;;                  1    wreg      void 
  5997 ;; Registers used:
  5998 ;;		wreg, status,2
  5999 ;; Tracked objects:
  6000 ;;		On entry : 0/0
  6001 ;;		On exit  : 0/0
  6002 ;;		Unchanged: 0/0
  6003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6004 ;;      Params:         0       0       0       0       0       0
  6005 ;;      Locals:         0       0       0       0       0       0
  6006 ;;      Temps:          0       0       0       0       0       0
  6007 ;;      Totals:         0       0       0       0       0       0
  6008 ;;Total ram usage:        0 bytes
  6009 ;; Hardware stack levels used: 1
  6010 ;; Hardware stack levels required when called: 7
  6011 ;; This function calls:
  6012 ;;		Nothing
  6013 ;; This function is called by:
  6014 ;;		_SYSTEM_Initialize
  6015 ;; This function uses a non-reentrant model
  6016 ;;
  6017                           
  6018     0B6A                     _ADC_Initialize:	
  6019                           ;psect for function _ADC_Initialize
  6020                           
  6021     0B6A                     l3226:	
  6022                           ;incstack = 0
  6023                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  6024                           
  6025                           
  6026                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0xD3;
  6027     0B6A  30D3               	movlw	211
  6028     0B6B  0021               	movlb	1	; select bank1
  6029     0B6C  009E               	movwf	30	;volatile
  6030     0B6D                     l3228:
  6031                           
  6032                           ;mcc_generated_files/adc.c: 75:     ADRESL = 0x00;
  6033     0B6D  019B               	clrf	27	;volatile
  6034     0B6E                     l3230:
  6035                           
  6036                           ;mcc_generated_files/adc.c: 78:     ADRESH = 0x00;
  6037     0B6E  019C               	clrf	28	;volatile
  6038                           
  6039                           ;mcc_generated_files/adc.c: 81:     ADCON0 = 0x01;
  6040     0B6F  3001               	movlw	1
  6041     0B70  009D               	movwf	29	;volatile
  6042     0B71                     l407:
  6043     0B71  0008               	return
  6044     0B72                     __end_of_ADC_Initialize:
  6045                           
  6046                           	psect	text33
  6047     0CC4                     __ptext33:	
  6048 ;; *************** function _ADC_GetConversion *****************
  6049 ;; Defined at:
  6050 ;;		line 112 in file "mcc_generated_files/adc.c"
  6051 ;; Parameters:    Size  Location     Type
  6052 ;;  channel         1    wreg     enum E2495
  6053 ;; Auto vars:     Size  Location     Type
  6054 ;;  channel         1    3[BANK1 ] enum E2495
  6055 ;; Return value:  Size  Location     Type
  6056 ;;                  2    0[BANK1 ] unsigned short 
  6057 ;; Registers used:
  6058 ;;		wreg, status,2, status,0
  6059 ;; Tracked objects:
  6060 ;;		On entry : 0/0
  6061 ;;		On exit  : 0/0
  6062 ;;		Unchanged: 0/0
  6063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6064 ;;      Params:         0       0       2       0       0       0
  6065 ;;      Locals:         0       0       1       0       0       0
  6066 ;;      Temps:          0       0       1       0       0       0
  6067 ;;      Totals:         0       0       4       0       0       0
  6068 ;;Total ram usage:        4 bytes
  6069 ;; Hardware stack levels used: 1
  6070 ;; Hardware stack levels required when called: 7
  6071 ;; This function calls:
  6072 ;;		Nothing
  6073 ;; This function is called by:
  6074 ;;		_main
  6075 ;; This function uses a non-reentrant model
  6076 ;;
  6077                           
  6078     0CC4                     _ADC_GetConversion:	
  6079                           ;psect for function _ADC_GetConversion
  6080                           
  6081                           
  6082                           ;incstack = 0
  6083                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
  6084                           ;ADC_GetConversion@channel stored from wreg
  6085     0CC4  0021               	movlb	1	; select bank1
  6086     0CC5  00D5               	movwf	ADC_GetConversion@channel^(0+128)
  6087     0CC6                     l3440:
  6088                           
  6089                           ;mcc_generated_files/adc.c: 112: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 113: {;mcc_generated_files/adc.c: 115:     ADCON0bits.CHS = ch
      +                          annel;
  6090     0CC6  0855               	movf	ADC_GetConversion@channel^(0+128),w
  6091     0CC7  00D4               	movwf	??_ADC_GetConversion^(0+128)
  6092     0CC8  0DD4               	rlf	??_ADC_GetConversion^(0+128),f
  6093     0CC9  0DD4               	rlf	??_ADC_GetConversion^(0+128),f
  6094     0CCA  081D               	movf	29,w	;volatile
  6095     0CCB  0654               	xorwf	??_ADC_GetConversion^(0+128),w
  6096     0CCC  3983               	andlw	-125
  6097     0CCD  0654               	xorwf	??_ADC_GetConversion^(0+128),w
  6098     0CCE  009D               	movwf	29	;volatile
  6099     0CCF                     l3442:
  6100                           
  6101                           ;mcc_generated_files/adc.c: 118:     ADCON0bits.ADON = 1;
  6102     0CCF  141D               	bsf	29,0	;volatile
  6103     0CD0                     l3444:
  6104                           
  6105                           ;mcc_generated_files/adc.c: 121:     _delay((unsigned long)((5)*(16000000/4000000.0)));
  6106     0CD0  3006               	movlw	6
  6107     0CD1                     u3217:
  6108     0CD1  0B89               	decfsz	9,f
  6109     0CD2  2CD1               	goto	u3217
  6110     0CD3  3200               	nop2
  6111     0CD4                     l3446:
  6112                           
  6113                           ;mcc_generated_files/adc.c: 124:     ADCON0bits.GO_nDONE = 1;
  6114     0CD4  0021               	movlb	1	; select bank1
  6115     0CD5  149D               	bsf	29,1	;volatile
  6116     0CD6                     l422:	
  6117                           ;mcc_generated_files/adc.c: 128:     {;mcc_generated_files/adc.c: 129:     }
  6118                           
  6119                           
  6120                           ;mcc_generated_files/adc.c: 127:     while (ADCON0bits.GO_nDONE)
  6121     0CD6  189D               	btfsc	29,1	;volatile
  6122     0CD7  2CD9               	goto	u3031
  6123     0CD8  2CDA               	goto	u3030
  6124     0CD9                     u3031:
  6125     0CD9  2CD6               	goto	l422
  6126     0CDA                     u3030:
  6127     0CDA                     l3448:
  6128                           
  6129                           ;mcc_generated_files/adc.c: 132:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  6130     0CDA  081C               	movf	28,w	;volatile
  6131     0CDB  00D3               	movwf	(?_ADC_GetConversion+1)^(0+128)
  6132     0CDC  081B               	movf	27,w	;volatile
  6133     0CDD  00D2               	movwf	?_ADC_GetConversion^(0+128)
  6134     0CDE                     l425:
  6135     0CDE  0008               	return
  6136     0CDF                     __end_of_ADC_GetConversion:
  6137                           
  6138                           	psect	intentry
  6139     0004                     __pintentry:	
  6140 ;; *************** function _INTERRUPT_InterruptManager *****************
  6141 ;; Defined at:
  6142 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  6143 ;; Parameters:    Size  Location     Type
  6144 ;;		None
  6145 ;; Auto vars:     Size  Location     Type
  6146 ;;		None
  6147 ;; Return value:  Size  Location     Type
  6148 ;;                  1    wreg      void 
  6149 ;; Registers used:
  6150 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6151 ;; Tracked objects:
  6152 ;;		On entry : 0/0
  6153 ;;		On exit  : 0/0
  6154 ;;		Unchanged: 0/0
  6155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6156 ;;      Params:         0       0       0       0       0       0
  6157 ;;      Locals:         0       0       0       0       0       0
  6158 ;;      Temps:          0       0       0       0       0       0
  6159 ;;      Totals:         0       0       0       0       0       0
  6160 ;;Total ram usage:        0 bytes
  6161 ;; Hardware stack levels used: 1
  6162 ;; Hardware stack levels required when called: 6
  6163 ;; This function calls:
  6164 ;;		NULL
  6165 ;;		_EUSART_Receive_ISR
  6166 ;;		_EUSART_Transmit_ISR
  6167 ;;		_PIN_MANAGER_IOC
  6168 ;;		_TMR0_ISR
  6169 ;;		_TMR1_GATE_ISR
  6170 ;;		_TMR6_ISR
  6171 ;;		_receive
  6172 ;; This function is called by:
  6173 ;;		Interrupt level 1
  6174 ;; This function uses a non-reentrant model
  6175 ;;
  6176                           
  6177     0004                     _INTERRUPT_InterruptManager:
  6178                           
  6179                           ;incstack = 0
  6180     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  6181                           
  6182                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6183     0005  3180               	pagesel	$
  6184     0006                     i1l3484:
  6185                           
  6186                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  6187     0006  1E8B               	btfss	11,5	;volatile
  6188     0007  2809               	goto	u307_21
  6189     0008  280A               	goto	u307_20
  6190     0009                     u307_21:
  6191     0009  2812               	goto	i1l186
  6192     000A                     u307_20:
  6193     000A                     i1l3486:
  6194     000A  1D0B               	btfss	11,2	;volatile
  6195     000B  280D               	goto	u308_21
  6196     000C  280E               	goto	u308_20
  6197     000D                     u308_21:
  6198     000D  2812               	goto	i1l186
  6199     000E                     u308_20:
  6200     000E                     i1l3488:
  6201                           
  6202                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
  6203     000E  318C  2415  3180   	fcall	_TMR0_ISR
  6204                           
  6205                           ;mcc_generated_files/interrupt_manager.c: 58:     }
  6206     0011  2860               	goto	i1l200
  6207     0012                     i1l186:	
  6208                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.IOCIE == 1 && INTCO
      +                          Nbits.IOCIF == 1)
  6209                           
  6210     0012  1D8B               	btfss	11,3	;volatile
  6211     0013  2815               	goto	u309_21
  6212     0014  2816               	goto	u309_20
  6213     0015                     u309_21:
  6214     0015  281E               	goto	i1l188
  6215     0016                     u309_20:
  6216     0016                     i1l3490:
  6217     0016  1C0B               	btfss	11,0	;volatile
  6218     0017  2819               	goto	u310_21
  6219     0018  281A               	goto	u310_20
  6220     0019                     u310_21:
  6221     0019  281E               	goto	i1l188
  6222     001A                     u310_20:
  6223     001A                     i1l3492:
  6224                           
  6225                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         PIN_MANAGER_IOC();
  6226     001A  318B  231F  3180   	fcall	_PIN_MANAGER_IOC
  6227                           
  6228                           ;mcc_generated_files/interrupt_manager.c: 62:     }
  6229     001D  2860               	goto	i1l200
  6230     001E                     i1l188:	
  6231                           ;mcc_generated_files/interrupt_manager.c: 63:     else if(INTCONbits.PEIE == 1)
  6232                           
  6233     001E  1F0B               	btfss	11,6	;volatile
  6234     001F  2821               	goto	u311_21
  6235     0020  2822               	goto	u311_20
  6236     0021                     u311_21:
  6237     0021  2860               	goto	i1l194
  6238     0022                     u311_20:
  6239     0022                     i1l3494:
  6240                           
  6241                           ;mcc_generated_files/interrupt_manager.c: 64:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 65:         if(PIE1bits.TMR1GIE == 1 && PIR1bits.TMR1GIF == 1)
  6242     0022  0021               	movlb	1	; select bank1
  6243     0023  1F91               	btfss	17,7	;volatile
  6244     0024  2826               	goto	u312_21
  6245     0025  2827               	goto	u312_20
  6246     0026                     u312_21:
  6247     0026  2830               	goto	i1l191
  6248     0027                     u312_20:
  6249     0027                     i1l3496:
  6250     0027  0020               	movlb	0	; select bank0
  6251     0028  1F91               	btfss	17,7	;volatile
  6252     0029  282B               	goto	u313_21
  6253     002A  282C               	goto	u313_20
  6254     002B                     u313_21:
  6255     002B  2830               	goto	i1l191
  6256     002C                     u313_20:
  6257     002C                     i1l3498:
  6258                           
  6259                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             TMR1_GATE_ISR();
  6260     002C  318B  23E6  3180   	fcall	_TMR1_GATE_ISR
  6261                           
  6262                           ;mcc_generated_files/interrupt_manager.c: 68:         }
  6263     002F  2860               	goto	i1l200
  6264     0030                     i1l191:	
  6265                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE3bits.TMR6IE == 1 && PI
      +                          R3bits.TMR6IF == 1)
  6266                           
  6267     0030  0021               	movlb	1	; select bank1
  6268     0031  1D93               	btfss	19,3	;volatile
  6269     0032  2834               	goto	u314_21
  6270     0033  2835               	goto	u314_20
  6271     0034                     u314_21:
  6272     0034  283E               	goto	i1l193
  6273     0035                     u314_20:
  6274     0035                     i1l3500:
  6275     0035  0020               	movlb	0	; select bank0
  6276     0036  1D93               	btfss	19,3	;volatile
  6277     0037  2839               	goto	u315_21
  6278     0038  283A               	goto	u315_20
  6279     0039                     u315_21:
  6280     0039  283E               	goto	i1l193
  6281     003A                     u315_20:
  6282     003A                     i1l3502:
  6283                           
  6284                           ;mcc_generated_files/interrupt_manager.c: 70:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 71:             TMR6_ISR();
  6285     003A  318B  23F5  3180   	fcall	_TMR6_ISR
  6286                           
  6287                           ;mcc_generated_files/interrupt_manager.c: 72:         }
  6288     003D  2860               	goto	i1l200
  6289     003E                     i1l193:	
  6290                           ;mcc_generated_files/interrupt_manager.c: 73:         else if(PIE1bits.TXIE == 1 && PIR1
      +                          bits.TXIF == 1)
  6291                           
  6292     003E  0021               	movlb	1	; select bank1
  6293     003F  1E11               	btfss	17,4	;volatile
  6294     0040  2842               	goto	u316_21
  6295     0041  2843               	goto	u316_20
  6296     0042                     u316_21:
  6297     0042  284F               	goto	i1l195
  6298     0043                     u316_20:
  6299     0043                     i1l3504:
  6300     0043  0020               	movlb	0	; select bank0
  6301     0044  1E11               	btfss	17,4	;volatile
  6302     0045  2847               	goto	u317_21
  6303     0046  2848               	goto	u317_20
  6304     0047                     u317_21:
  6305     0047  284F               	goto	i1l195
  6306     0048                     u317_20:
  6307     0048                     i1l3506:
  6308                           
  6309                           ;mcc_generated_files/interrupt_manager.c: 74:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 75:             EUSART_TxDefaultInterruptHandler();
  6310     0048  0022               	movlb	2	; select bank2
  6311     0049  0855               	movf	(_EUSART_TxDefaultInterruptHandler+1)^(0+256),w
  6312     004A  008A               	movwf	10
  6313     004B  0854               	movf	_EUSART_TxDefaultInterruptHandler^(0+256),w
  6314     004C  000A               	callw
  6315     004D  3180               	pagesel	$
  6316                           
  6317                           ;mcc_generated_files/interrupt_manager.c: 76:         }
  6318     004E  2860               	goto	i1l200
  6319     004F                     i1l195:	
  6320                           ;mcc_generated_files/interrupt_manager.c: 77:         else if(PIE1bits.RCIE == 1 && PIR1
      +                          bits.RCIF == 1)
  6321                           
  6322     004F  0021               	movlb	1	; select bank1
  6323     0050  1E91               	btfss	17,5	;volatile
  6324     0051  2853               	goto	u318_21
  6325     0052  2854               	goto	u318_20
  6326     0053                     u318_21:
  6327     0053  2860               	goto	i1l194
  6328     0054                     u318_20:
  6329     0054                     i1l3508:
  6330     0054  0020               	movlb	0	; select bank0
  6331     0055  1E91               	btfss	17,5	;volatile
  6332     0056  2858               	goto	u319_21
  6333     0057  2859               	goto	u319_20
  6334     0058                     u319_21:
  6335     0058  2860               	goto	i1l194
  6336     0059                     u319_20:
  6337     0059                     i1l3510:
  6338                           
  6339                           ;mcc_generated_files/interrupt_manager.c: 78:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 79:             EUSART_RxDefaultInterruptHandler();
  6340     0059  0022               	movlb	2	; select bank2
  6341     005A  0853               	movf	(_EUSART_RxDefaultInterruptHandler+1)^(0+256),w
  6342     005B  008A               	movwf	10
  6343     005C  0852               	movf	_EUSART_RxDefaultInterruptHandler^(0+256),w
  6344     005D  000A               	callw
  6345     005E  3180               	pagesel	$
  6346                           
  6347                           ;mcc_generated_files/interrupt_manager.c: 80:         }
  6348     005F  2860               	goto	i1l200
  6349     0060                     i1l194:
  6350     0060                     i1l200:
  6351     0060  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  6352     0061  0009               	retfie
  6353     0062                     __end_of_INTERRUPT_InterruptManager:
  6354                           
  6355                           	psect	text35
  6356     0EE4                     __ptext35:	
  6357 ;; *************** function _EUSART_Receive_ISR *****************
  6358 ;; Defined at:
  6359 ;;		line 216 in file "mcc_generated_files/eusart.c"
  6360 ;; Parameters:    Size  Location     Type
  6361 ;;		None
  6362 ;; Auto vars:     Size  Location     Type
  6363 ;;		None
  6364 ;; Return value:  Size  Location     Type
  6365 ;;                  1    wreg      void 
  6366 ;; Registers used:
  6367 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6368 ;; Tracked objects:
  6369 ;;		On entry : 0/0
  6370 ;;		On exit  : 0/0
  6371 ;;		Unchanged: 0/0
  6372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6373 ;;      Params:         0       0       0       0       0       0
  6374 ;;      Locals:         0       0       0       0       0       0
  6375 ;;      Temps:          0       0       0       0       0       0
  6376 ;;      Totals:         0       0       0       0       0       0
  6377 ;;Total ram usage:        0 bytes
  6378 ;; Hardware stack levels used: 1
  6379 ;; Hardware stack levels required when called: 2
  6380 ;; This function calls:
  6381 ;;		NULL
  6382 ;;		_EUSART_DefaultErrorHandler
  6383 ;;		_EUSART_DefaultFramingErrorHandler
  6384 ;;		_EUSART_DefaultOverrunErrorHandler
  6385 ;;		_EUSART_RxDataHandler
  6386 ;; This function is called by:
  6387 ;;		_EUSART_Initialize
  6388 ;;		_INTERRUPT_InterruptManager
  6389 ;; This function uses a non-reentrant model
  6390 ;;
  6391                           
  6392     0EE4                     _EUSART_Receive_ISR:	
  6393                           ;psect for function _EUSART_Receive_ISR
  6394                           
  6395     0EE4                     i1l3420:	
  6396                           ;incstack = 0
  6397                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6398                           
  6399                           
  6400                           ;mcc_generated_files/eusart.c: 219:     eusartRxStatusBuffer[eusartRxHead].status = 0;
  6401     0EE4  0021               	movlb	1	; select bank1
  6402     0EE5  084E               	movf	_eusartRxHead^(0+128),w	;volatile
  6403     0EE6  3E20               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
  6404     0EE7  0086               	movwf	6
  6405     0EE8  3001               	movlw	1	; select bank2/3
  6406     0EE9  0087               	movwf	7
  6407     0EEA  0181               	clrf	1
  6408     0EEB                     i1l3422:
  6409                           
  6410                           ;mcc_generated_files/eusart.c: 221:     if(RCSTAbits.FERR){
  6411     0EEB  0023               	movlb	3	; select bank3
  6412     0EEC  1D1D               	btfss	29,2	;volatile
  6413     0EED  2EEF               	goto	u300_21
  6414     0EEE  2EF0               	goto	u300_20
  6415     0EEF                     u300_21:
  6416     0EEF  2EFD               	goto	i1l3428
  6417     0EF0                     u300_20:
  6418     0EF0                     i1l3424:
  6419                           
  6420                           ;mcc_generated_files/eusart.c: 222:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
  6421     0EF0  0021               	movlb	1	; select bank1
  6422     0EF1  084E               	movf	_eusartRxHead^(0+128),w	;volatile
  6423     0EF2  3E20               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
  6424     0EF3  0086               	movwf	6
  6425     0EF4  3001               	movlw	1	; select bank2/3
  6426     0EF5  0087               	movwf	7
  6427     0EF6  1481               	bsf	1,1
  6428     0EF7                     i1l3426:
  6429                           
  6430                           ;mcc_generated_files/eusart.c: 223:         EUSART_FramingErrorHandler();
  6431     0EF7  0022               	movlb	2	; select bank2
  6432     0EF8  0851               	movf	(_EUSART_FramingErrorHandler+1)^(0+256),w
  6433     0EF9  008A               	movwf	10
  6434     0EFA  0850               	movf	_EUSART_FramingErrorHandler^(0+256),w
  6435     0EFB  000A               	callw
  6436     0EFC  318E               	pagesel	$
  6437     0EFD                     i1l3428:
  6438                           
  6439                           ;mcc_generated_files/eusart.c: 226:     if(RCSTAbits.OERR){
  6440     0EFD  0023               	movlb	3	; select bank3
  6441     0EFE  1C9D               	btfss	29,1	;volatile
  6442     0EFF  2F01               	goto	u301_21
  6443     0F00  2F02               	goto	u301_20
  6444     0F01                     u301_21:
  6445     0F01  2F0F               	goto	i1l3434
  6446     0F02                     u301_20:
  6447     0F02                     i1l3430:
  6448                           
  6449                           ;mcc_generated_files/eusart.c: 227:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
  6450     0F02  0021               	movlb	1	; select bank1
  6451     0F03  084E               	movf	_eusartRxHead^(0+128),w	;volatile
  6452     0F04  3E20               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
  6453     0F05  0086               	movwf	6
  6454     0F06  3001               	movlw	1	; select bank2/3
  6455     0F07  0087               	movwf	7
  6456     0F08  1501               	bsf	1,2
  6457     0F09                     i1l3432:
  6458                           
  6459                           ;mcc_generated_files/eusart.c: 228:         EUSART_OverrunErrorHandler();
  6460     0F09  0022               	movlb	2	; select bank2
  6461     0F0A  084F               	movf	(_EUSART_OverrunErrorHandler+1)^(0+256),w
  6462     0F0B  008A               	movwf	10
  6463     0F0C  084E               	movf	_EUSART_OverrunErrorHandler^(0+256),w
  6464     0F0D  000A               	callw
  6465     0F0E  318E               	pagesel	$
  6466     0F0F                     i1l3434:
  6467                           
  6468                           ;mcc_generated_files/eusart.c: 231:     if(eusartRxStatusBuffer[eusartRxHead].status){
  6469     0F0F  0021               	movlb	1	; select bank1
  6470     0F10  084E               	movf	_eusartRxHead^(0+128),w	;volatile
  6471     0F11  3E20               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
  6472     0F12  0086               	movwf	6
  6473     0F13  3001               	movlw	1	; select bank2/3
  6474     0F14  0087               	movwf	7
  6475     0F15  0801               	movf	1,w
  6476     0F16  1903               	btfsc	3,2
  6477     0F17  2F19               	goto	u302_21
  6478     0F18  2F1A               	goto	u302_20
  6479     0F19                     u302_21:
  6480     0F19  2F21               	goto	i1l3438
  6481     0F1A                     u302_20:
  6482     0F1A                     i1l3436:
  6483                           
  6484                           ;mcc_generated_files/eusart.c: 232:         EUSART_ErrorHandler();
  6485     0F1A  0022               	movlb	2	; select bank2
  6486     0F1B  084D               	movf	(_EUSART_ErrorHandler+1)^(0+256),w
  6487     0F1C  008A               	movwf	10
  6488     0F1D  084C               	movf	_EUSART_ErrorHandler^(0+256),w
  6489     0F1E  000A               	callw
  6490     0F1F  318E               	pagesel	$
  6491                           
  6492                           ;mcc_generated_files/eusart.c: 233:     } else {
  6493     0F20  2F24               	goto	i1l316
  6494     0F21                     i1l3438:
  6495                           
  6496                           ;mcc_generated_files/eusart.c: 234:         EUSART_RxDataHandler();
  6497     0F21  318C  24AA  318E   	fcall	_EUSART_RxDataHandler
  6498     0F24                     i1l316:
  6499     0F24  0008               	return
  6500     0F25                     __end_of_EUSART_Receive_ISR:
  6501                           
  6502                           	psect	text36
  6503     0D17                     __ptext36:	
  6504 ;; *************** function _receive *****************
  6505 ;; Defined at:
  6506 ;;		line 181 in file "main.c"
  6507 ;; Parameters:    Size  Location     Type
  6508 ;;		None
  6509 ;; Auto vars:     Size  Location     Type
  6510 ;;		None
  6511 ;; Return value:  Size  Location     Type
  6512 ;;                  1    wreg      void 
  6513 ;; Registers used:
  6514 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6515 ;; Tracked objects:
  6516 ;;		On entry : 0/0
  6517 ;;		On exit  : 0/0
  6518 ;;		Unchanged: 0/0
  6519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6520 ;;      Params:         0       0       0       0       0       0
  6521 ;;      Locals:         0       0       0       0       0       0
  6522 ;;      Temps:          1       0       0       0       0       0
  6523 ;;      Totals:         1       0       0       0       0       0
  6524 ;;Total ram usage:        1 bytes
  6525 ;; Hardware stack levels used: 1
  6526 ;; Hardware stack levels required when called: 1
  6527 ;; This function calls:
  6528 ;;		_EUSART_Read
  6529 ;;		_TMR0_Reload
  6530 ;; This function is called by:
  6531 ;;		_main
  6532 ;;		_INTERRUPT_InterruptManager
  6533 ;; This function uses a non-reentrant model
  6534 ;;
  6535                           
  6536     0D17                     _receive:	
  6537                           ;psect for function _receive
  6538                           
  6539     0D17                     i1l3472:	
  6540                           ;incstack = 0
  6541                           ; Regs used in _receive: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6542                           
  6543                           
  6544                           ;main.c: 182:     count_40ms = 0;
  6545     0D17  0021               	movlb	1	; select bank1
  6546     0D18  01C5               	clrf	_count_40ms^(0+128)
  6547     0D19                     i1l3474:
  6548                           
  6549                           ;main.c: 183:     TMR0_Reload();
  6550     0D19  318B  233A  318D   	fcall	_TMR0_Reload
  6551     0D1C                     i1l3476:
  6552                           
  6553                           ;main.c: 184:     Rx_ctrl = 1;
  6554     0D1C  0021               	movlb	1	; select bank1
  6555     0D1D  01C8               	clrf	_Rx_ctrl^(0+128)
  6556     0D1E  0AC8               	incf	_Rx_ctrl^(0+128),f
  6557     0D1F                     i1l3478:
  6558                           
  6559                           ;main.c: 185:     if(countRx<8 -1){
  6560     0D1F  3007               	movlw	7
  6561     0D20  0246               	subwf	_countRx^(0+128),w
  6562     0D21  1803               	skipnc
  6563     0D22  2D24               	goto	u306_21
  6564     0D23  2D25               	goto	u306_20
  6565     0D24                     u306_21:
  6566     0D24  2D34               	goto	i1l721
  6567     0D25                     u306_20:
  6568     0D25                     i1l3480:
  6569                           
  6570                           ;main.c: 186:         bufferRx[countRx] = EUSART_Read();
  6571     0D25  318D  25DC  318D   	fcall	_EUSART_Read
  6572     0D28  00F2               	movwf	??_receive
  6573     0D29  0021               	movlb	1	; select bank1
  6574     0D2A  0846               	movf	_countRx^(0+128),w
  6575     0D2B  3EA0               	addlw	(low (_bufferRx| 0))& (0+255)
  6576     0D2C  0086               	movwf	6
  6577     0D2D  0187               	clrf	7
  6578     0D2E  0872               	movf	??_receive,w
  6579     0D2F  0081               	movwf	1
  6580     0D30                     i1l3482:
  6581                           
  6582                           ;main.c: 187:         countRx++;
  6583     0D30  3001               	movlw	1
  6584     0D31  00F2               	movwf	??_receive
  6585     0D32  0872               	movf	??_receive,w
  6586     0D33  07C6               	addwf	_countRx^(0+128),f
  6587     0D34                     i1l721:
  6588     0D34  0008               	return
  6589     0D35                     __end_of_receive:
  6590                           
  6591                           	psect	text37
  6592     0B3A                     __ptext37:	
  6593 ;; *************** function _TMR0_Reload *****************
  6594 ;; Defined at:
  6595 ;;		line 102 in file "mcc_generated_files/tmr0.c"
  6596 ;; Parameters:    Size  Location     Type
  6597 ;;		None
  6598 ;; Auto vars:     Size  Location     Type
  6599 ;;		None
  6600 ;; Return value:  Size  Location     Type
  6601 ;;                  1    wreg      void 
  6602 ;; Registers used:
  6603 ;;		wreg
  6604 ;; Tracked objects:
  6605 ;;		On entry : 0/0
  6606 ;;		On exit  : 0/0
  6607 ;;		Unchanged: 0/0
  6608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6609 ;;      Params:         0       0       0       0       0       0
  6610 ;;      Locals:         0       0       0       0       0       0
  6611 ;;      Temps:          0       0       0       0       0       0
  6612 ;;      Totals:         0       0       0       0       0       0
  6613 ;;Total ram usage:        0 bytes
  6614 ;; Hardware stack levels used: 1
  6615 ;; This function calls:
  6616 ;;		Nothing
  6617 ;; This function is called by:
  6618 ;;		_receive
  6619 ;; This function uses a non-reentrant model
  6620 ;;
  6621                           
  6622     0B3A                     _TMR0_Reload:	
  6623                           ;psect for function _TMR0_Reload
  6624                           
  6625     0B3A                     i1l3322:	
  6626                           ;incstack = 0
  6627                           ; Regs used in _TMR0_Reload: [wreg]
  6628                           
  6629                           
  6630                           ;mcc_generated_files/tmr0.c: 105:     TMR0 = timer0ReloadVal;
  6631     0B3A  0021               	movlb	1	; select bank1
  6632     0B3B  084A               	movf	_timer0ReloadVal^(0+128),w	;volatile
  6633     0B3C  0020               	movlb	0	; select bank0
  6634     0B3D  0095               	movwf	21	;volatile
  6635     0B3E                     i1l370:
  6636     0B3E  0008               	return
  6637     0B3F                     __end_of_TMR0_Reload:
  6638                           
  6639                           	psect	text38
  6640     0DDC                     __ptext38:	
  6641 ;; *************** function _EUSART_Read *****************
  6642 ;; Defined at:
  6643 ;;		line 151 in file "mcc_generated_files/eusart.c"
  6644 ;; Parameters:    Size  Location     Type
  6645 ;;		None
  6646 ;; Auto vars:     Size  Location     Type
  6647 ;;  readValue       1    1[COMMON] unsigned char 
  6648 ;; Return value:  Size  Location     Type
  6649 ;;                  1    wreg      unsigned char 
  6650 ;; Registers used:
  6651 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6652 ;; Tracked objects:
  6653 ;;		On entry : 0/0
  6654 ;;		On exit  : 0/0
  6655 ;;		Unchanged: 0/0
  6656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6657 ;;      Params:         0       0       0       0       0       0
  6658 ;;      Locals:         1       0       0       0       0       0
  6659 ;;      Temps:          1       0       0       0       0       0
  6660 ;;      Totals:         2       0       0       0       0       0
  6661 ;;Total ram usage:        2 bytes
  6662 ;; Hardware stack levels used: 1
  6663 ;; This function calls:
  6664 ;;		Nothing
  6665 ;; This function is called by:
  6666 ;;		_receive
  6667 ;; This function uses a non-reentrant model
  6668 ;;
  6669                           
  6670     0DDC                     _EUSART_Read:	
  6671                           ;psect for function _EUSART_Read
  6672                           
  6673     0DDC                     i1l3296:	
  6674                           ;incstack = 0
  6675                           ; Regs used in _EUSART_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
  6676                           
  6677     0DDC                     i1l3298:	
  6678                           ;mcc_generated_files/eusart.c: 155:     while(0 == eusartRxCount)
  6679                           
  6680                           
  6681                           ;mcc_generated_files/eusart.c: 155:     while(0 == eusartRxCount)
  6682     0DDC  0021               	movlb	1	; select bank1
  6683     0DDD  084C               	movf	_eusartRxCount^(0+128),w	;volatile
  6684     0DDE  1903               	btfsc	3,2
  6685     0DDF  2DE1               	goto	u283_21
  6686     0DE0  2DE2               	goto	u283_20
  6687     0DE1                     u283_21:
  6688     0DE1  2DDC               	goto	i1l3298
  6689     0DE2                     u283_20:
  6690     0DE2                     i1l3300:
  6691                           
  6692                           ;mcc_generated_files/eusart.c: 159:     eusartRxLastError = eusartRxStatusBuffer[eusartR
      +                          xTail];
  6693     0DE2  084D               	movf	_eusartRxTail^(0+128),w	;volatile
  6694     0DE3  3E20               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
  6695     0DE4  0086               	movwf	6
  6696     0DE5  3001               	movlw	1	; select bank2/3
  6697     0DE6  0087               	movwf	7
  6698     0DE7  0801               	movf	1,w
  6699     0DE8  00CB               	movwf	_eusartRxLastError^(0+128)	;volatile
  6700                           
  6701                           ;mcc_generated_files/eusart.c: 161:     readValue = eusartRxBuffer[eusartRxTail++];
  6702     0DE9  084D               	movf	_eusartRxTail^(0+128),w
  6703     0DEA  3E28               	addlw	(low (_eusartRxBuffer| (0+256)))& (0+255)
  6704     0DEB  0086               	movwf	6
  6705     0DEC  3001               	movlw	1	; select bank2/3
  6706     0DED  0087               	movwf	7
  6707     0DEE  0801               	movf	1,w
  6708     0DEF  00F1               	movwf	EUSART_Read@readValue
  6709     0DF0                     i1l3302:
  6710     0DF0  3001               	movlw	1
  6711     0DF1  00F0               	movwf	??_EUSART_Read
  6712     0DF2  0870               	movf	??_EUSART_Read,w
  6713     0DF3  07CD               	addwf	_eusartRxTail^(0+128),f	;volatile
  6714     0DF4                     i1l3304:
  6715                           
  6716                           ;mcc_generated_files/eusart.c: 162:     if(sizeof(eusartRxBuffer) <= eusartRxTail)
  6717     0DF4  3008               	movlw	8
  6718     0DF5  024D               	subwf	_eusartRxTail^(0+128),w	;volatile
  6719     0DF6  1C03               	skipc
  6720     0DF7  2DF9               	goto	u284_21
  6721     0DF8  2DFA               	goto	u284_20
  6722     0DF9                     u284_21:
  6723     0DF9  2DFB               	goto	i1l3308
  6724     0DFA                     u284_20:
  6725     0DFA                     i1l3306:
  6726                           
  6727                           ;mcc_generated_files/eusart.c: 163:     {;mcc_generated_files/eusart.c: 164:         eus
      +                          artRxTail = 0;
  6728     0DFA  01CD               	clrf	_eusartRxTail^(0+128)	;volatile
  6729     0DFB                     i1l3308:
  6730                           
  6731                           ;mcc_generated_files/eusart.c: 166:     PIE1bits.RCIE = 0;
  6732     0DFB  1291               	bcf	17,5	;volatile
  6733     0DFC                     i1l3310:
  6734                           
  6735                           ;mcc_generated_files/eusart.c: 167:     eusartRxCount--;
  6736     0DFC  3001               	movlw	1
  6737     0DFD  02CC               	subwf	_eusartRxCount^(0+128),f	;volatile
  6738     0DFE                     i1l3312:
  6739                           
  6740                           ;mcc_generated_files/eusart.c: 168:     PIE1bits.RCIE = 1;
  6741     0DFE  1691               	bsf	17,5	;volatile
  6742     0DFF                     i1l3314:
  6743                           
  6744                           ;mcc_generated_files/eusart.c: 170:     return readValue;
  6745     0DFF  0871               	movf	EUSART_Read@readValue,w
  6746     0E00                     i1l294:
  6747     0E00  0008               	return
  6748     0E01                     __end_of_EUSART_Read:
  6749                           
  6750                           	psect	text39
  6751     0BF5                     __ptext39:	
  6752 ;; *************** function _TMR6_ISR *****************
  6753 ;; Defined at:
  6754 ;;		line 119 in file "mcc_generated_files/tmr6.c"
  6755 ;; Parameters:    Size  Location     Type
  6756 ;;		None
  6757 ;; Auto vars:     Size  Location     Type
  6758 ;;		None
  6759 ;; Return value:  Size  Location     Type
  6760 ;;                  1    wreg      void 
  6761 ;; Registers used:
  6762 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6763 ;; Tracked objects:
  6764 ;;		On entry : 0/0
  6765 ;;		On exit  : 0/0
  6766 ;;		Unchanged: 0/0
  6767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6768 ;;      Params:         0       0       0       0       0       0
  6769 ;;      Locals:         0       0       0       0       0       0
  6770 ;;      Temps:          0       0       0       0       0       0
  6771 ;;      Totals:         0       0       0       0       0       0
  6772 ;;Total ram usage:        0 bytes
  6773 ;; Hardware stack levels used: 1
  6774 ;; Hardware stack levels required when called: 5
  6775 ;; This function calls:
  6776 ;;		NULL
  6777 ;;		_TMR6_DefaultInterruptHandler
  6778 ;;		_fluxControlChoice
  6779 ;; This function is called by:
  6780 ;;		_INTERRUPT_InterruptManager
  6781 ;; This function uses a non-reentrant model
  6782 ;;
  6783                           
  6784     0BF5                     _TMR6_ISR:	
  6785                           ;psect for function _TMR6_ISR
  6786                           
  6787     0BF5                     i1l3384:	
  6788                           ;incstack = 0
  6789                           ; Regs used in _TMR6_ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6790                           
  6791                           
  6792                           ;mcc_generated_files/tmr6.c: 123:     PIR3bits.TMR6IF = 0;
  6793     0BF5  0020               	movlb	0	; select bank0
  6794     0BF6  1193               	bcf	19,3	;volatile
  6795     0BF7                     i1l3386:
  6796                           
  6797                           ;mcc_generated_files/tmr6.c: 125:     if(TMR6_InterruptHandler)
  6798     0BF7  0022               	movlb	2	; select bank2
  6799     0BF8  0848               	movf	_TMR6_InterruptHandler^(0+256),w
  6800     0BF9  0449               	iorwf	(_TMR6_InterruptHandler+1)^(0+256),w
  6801     0BFA  1903               	btfsc	3,2
  6802     0BFB  2BFD               	goto	u294_21
  6803     0BFC  2BFE               	goto	u294_20
  6804     0BFD                     u294_21:
  6805     0BFD  2C03               	goto	i1l493
  6806     0BFE                     u294_20:
  6807     0BFE                     i1l3388:
  6808                           
  6809                           ;mcc_generated_files/tmr6.c: 126:     {;mcc_generated_files/tmr6.c: 127:         TMR6_In
      +                          terruptHandler();
  6810     0BFE  0849               	movf	(_TMR6_InterruptHandler+1)^(0+256),w
  6811     0BFF  008A               	movwf	10
  6812     0C00  0848               	movf	_TMR6_InterruptHandler^(0+256),w
  6813     0C01  000A               	callw
  6814     0C02  318B               	pagesel	$
  6815     0C03                     i1l493:
  6816     0C03  0008               	return
  6817     0C04                     __end_of_TMR6_ISR:
  6818                           
  6819                           	psect	text40
  6820     07FF                     __ptext40:	
  6821 ;; *************** function _TMR6_DefaultInterruptHandler *****************
  6822 ;; Defined at:
  6823 ;;		line 136 in file "mcc_generated_files/tmr6.c"
  6824 ;; Parameters:    Size  Location     Type
  6825 ;;		None
  6826 ;; Auto vars:     Size  Location     Type
  6827 ;;		None
  6828 ;; Return value:  Size  Location     Type
  6829 ;;                  1    wreg      void 
  6830 ;; Registers used:
  6831 ;;		None
  6832 ;; Tracked objects:
  6833 ;;		On entry : 0/0
  6834 ;;		On exit  : 0/0
  6835 ;;		Unchanged: 0/0
  6836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6837 ;;      Params:         0       0       0       0       0       0
  6838 ;;      Locals:         0       0       0       0       0       0
  6839 ;;      Temps:          0       0       0       0       0       0
  6840 ;;      Totals:         0       0       0       0       0       0
  6841 ;;Total ram usage:        0 bytes
  6842 ;; Hardware stack levels used: 1
  6843 ;; This function calls:
  6844 ;;		Nothing
  6845 ;; This function is called by:
  6846 ;;		_TMR6_Initialize
  6847 ;;		_TMR6_ISR
  6848 ;; This function uses a non-reentrant model
  6849 ;;
  6850                           
  6851     07FF                     _TMR6_DefaultInterruptHandler:	
  6852                           ;psect for function _TMR6_DefaultInterruptHandler
  6853                           
  6854     07FF                     i1l499:	
  6855                           ;incstack = 0
  6856                           ; Regs used in _TMR6_DefaultInterruptHandler: []
  6857                           
  6858     07FF  0008               	return
  6859     0800                     __end_of_TMR6_DefaultInterruptHandler:
  6860                           
  6861                           	psect	text41
  6862     0BC2                     __ptext41:	
  6863 ;; *************** function _fluxControlChoice *****************
  6864 ;; Defined at:
  6865 ;;		line 191 in file "main.c"
  6866 ;; Parameters:    Size  Location     Type
  6867 ;;		None
  6868 ;; Auto vars:     Size  Location     Type
  6869 ;;		None
  6870 ;; Return value:  Size  Location     Type
  6871 ;;                  1    wreg      void 
  6872 ;; Registers used:
  6873 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6874 ;; Tracked objects:
  6875 ;;		On entry : 0/0
  6876 ;;		On exit  : 0/0
  6877 ;;		Unchanged: 0/0
  6878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6879 ;;      Params:         0       0       0       0       0       0
  6880 ;;      Locals:         0       0       0       0       0       0
  6881 ;;      Temps:          0       0       0       0       0       0
  6882 ;;      Totals:         0       0       0       0       0       0
  6883 ;;Total ram usage:        0 bytes
  6884 ;; Hardware stack levels used: 1
  6885 ;; Hardware stack levels required when called: 4
  6886 ;; This function calls:
  6887 ;;		_fluxcontrol
  6888 ;; This function is called by:
  6889 ;;		_main
  6890 ;;		_TMR6_ISR
  6891 ;; This function uses a non-reentrant model
  6892 ;;
  6893                           
  6894     0BC2                     _fluxControlChoice:	
  6895                           ;psect for function _fluxControlChoice
  6896                           
  6897     0BC2                     i1l3354:	
  6898                           ;incstack = 0
  6899                           ; Regs used in _fluxControlChoice: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6900                           
  6901                           
  6902                           ;main.c: 192:     if(!controlchoice){
  6903     0BC2  0021               	movlb	1	; select bank1
  6904     0BC3  086F               	movf	_controlchoice^(0+128),w
  6905     0BC4  1D03               	btfss	3,2
  6906     0BC5  2BC7               	goto	u291_21
  6907     0BC6  2BC8               	goto	u291_20
  6908     0BC7                     u291_21:
  6909     0BC7  2BCB               	goto	i1l725
  6910     0BC8                     u291_20:
  6911     0BC8                     i1l3356:
  6912                           
  6913                           ;main.c: 193:         fluxcontrol();
  6914     0BC8  3185  25C4  318B   	fcall	_fluxcontrol
  6915     0BCB                     i1l725:
  6916     0BCB  0008               	return
  6917     0BCC                     __end_of_fluxControlChoice:
  6918                           
  6919                           	psect	text42
  6920     05C4                     __ptext42:	
  6921 ;; *************** function _fluxcontrol *****************
  6922 ;; Defined at:
  6923 ;;		line 51 in file "main.c"
  6924 ;; Parameters:    Size  Location     Type
  6925 ;;		None
  6926 ;; Auto vars:     Size  Location     Type
  6927 ;;		None
  6928 ;; Return value:  Size  Location     Type
  6929 ;;                  1    wreg      void 
  6930 ;; Registers used:
  6931 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6932 ;; Tracked objects:
  6933 ;;		On entry : 0/0
  6934 ;;		On exit  : 0/0
  6935 ;;		Unchanged: 0/0
  6936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6937 ;;      Params:         0       0       0       0       0       0
  6938 ;;      Locals:         0       2       0       0       0       0
  6939 ;;      Temps:          0       2       0       0       0       0
  6940 ;;      Totals:         0       4       0       0       0       0
  6941 ;;Total ram usage:        4 bytes
  6942 ;; Hardware stack levels used: 1
  6943 ;; Hardware stack levels required when called: 3
  6944 ;; This function calls:
  6945 ;;		_fluxpos
  6946 ;;		i1___lwdiv
  6947 ;;		i1___wmul
  6948 ;; This function is called by:
  6949 ;;		_fluxControlChoice
  6950 ;; This function uses a non-reentrant model
  6951 ;;
  6952                           
  6953     05C4                     _fluxcontrol:	
  6954                           ;psect for function _fluxcontrol
  6955                           
  6956     05C4                     i1l2678:	
  6957                           ;incstack = 0
  6958                           ; Regs used in _fluxcontrol: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6959                           
  6960                           
  6961                           ;main.c: 52:     error = (ballset-balldist)*10;
  6962     05C4  0021               	movlb	1	; select bank1
  6963     05C5  083A               	movf	_balldist^(0+128),w
  6964     05C6  0238               	subwf	_ballset^(0+128),w
  6965     05C7  00F0               	movwf	i1___wmul@multiplier
  6966     05C8  083B               	movf	(_balldist+1)^(0+128),w
  6967     05C9  3B39               	subwfb	(_ballset+1)^(0+128),w
  6968     05CA  00F1               	movwf	i1___wmul@multiplier+1
  6969     05CB  300A               	movlw	10
  6970     05CC  00F2               	movwf	i1___wmul@multiplicand
  6971     05CD  3000               	movlw	0
  6972     05CE  00F3               	movwf	i1___wmul@multiplicand+1
  6973     05CF  318D  2535  3185   	fcall	i1___wmul
  6974     05D2  0871               	movf	?i1___wmul+1,w
  6975     05D3  0021               	movlb	1	; select bank1
  6976     05D4  00BD               	movwf	(_error+1)^(0+128)
  6977     05D5  0870               	movf	?i1___wmul,w
  6978     05D6  00BC               	movwf	_error^(0+128)
  6979     05D7                     i1l2680:
  6980                           
  6981                           ;main.c: 53:     if(error > 150 || error < 150){
  6982     05D7  083D               	movf	(_error+1)^(0+128),w
  6983     05D8  3A80               	xorlw	128
  6984     05D9  0020               	movlb	0	; select bank0
  6985     05DA  00A0               	movwf	??_fluxcontrol
  6986     05DB  3080               	movlw	128
  6987     05DC  0220               	subwf	??_fluxcontrol,w
  6988     05DD  1D03               	skipz
  6989     05DE  2DE2               	goto	u185_25
  6990     05DF  3097               	movlw	151
  6991     05E0  0021               	movlb	1	; select bank1
  6992     05E1  023C               	subwf	_error^(0+128),w
  6993     05E2                     u185_25:
  6994     05E2  1803               	skipnc
  6995     05E3  2DE5               	goto	u185_21
  6996     05E4  2DE6               	goto	u185_20
  6997     05E5                     u185_21:
  6998     05E5  2DF6               	goto	i1l2684
  6999     05E6                     u185_20:
  7000     05E6                     i1l2682:
  7001     05E6  0021               	movlb	1	; select bank1
  7002     05E7  083D               	movf	(_error+1)^(0+128),w
  7003     05E8  3A80               	xorlw	128
  7004     05E9  0020               	movlb	0	; select bank0
  7005     05EA  00A0               	movwf	??_fluxcontrol
  7006     05EB  3080               	movlw	128
  7007     05EC  0220               	subwf	??_fluxcontrol,w
  7008     05ED  1D03               	skipz
  7009     05EE  2DF2               	goto	u186_25
  7010     05EF  3096               	movlw	150
  7011     05F0  0021               	movlb	1	; select bank1
  7012     05F1  023C               	subwf	_error^(0+128),w
  7013     05F2                     u186_25:
  7014     05F2  1803               	skipnc
  7015     05F3  2DF5               	goto	u186_21
  7016     05F4  2DF6               	goto	u186_20
  7017     05F5                     u186_21:
  7018     05F5  2E63               	goto	i1l676
  7019     05F6                     u186_20:
  7020     05F6                     i1l2684:
  7021                           
  7022                           ;main.c: 54:         outputsum += ((kif*timecontrol*error)/1000);
  7023     05F6  0021               	movlb	1	; select bank1
  7024     05F7  0849               	movf	_timecontrol^(0+128),w
  7025     05F8  0020               	movlb	0	; select bank0
  7026     05F9  00A0               	movwf	??_fluxcontrol
  7027     05FA  01A1               	clrf	??_fluxcontrol+1
  7028     05FB  0820               	movf	??_fluxcontrol,w
  7029     05FC  00F0               	movwf	i1___wmul@multiplier
  7030     05FD  0821               	movf	??_fluxcontrol+1,w
  7031     05FE  00F1               	movwf	i1___wmul@multiplier+1
  7032     05FF  0021               	movlb	1	; select bank1
  7033     0600  083D               	movf	(_error+1)^(0+128),w
  7034     0601  00F3               	movwf	i1___wmul@multiplicand+1
  7035     0602  083C               	movf	_error^(0+128),w
  7036     0603  00F2               	movwf	i1___wmul@multiplicand
  7037     0604  318D  2535  3185   	fcall	i1___wmul
  7038     0607  0871               	movf	?i1___wmul+1,w
  7039     0608  0020               	movlb	0	; select bank0
  7040     0609  00A3               	movwf	_fluxcontrol$2075+1
  7041     060A  0870               	movf	?i1___wmul,w
  7042     060B  00A2               	movwf	_fluxcontrol$2075
  7043                           
  7044                           ;main.c: 54:         outputsum += ((kif*timecontrol*error)/1000);
  7045     060C  30E8               	movlw	232
  7046     060D  00F6               	movwf	i1___lwdiv@divisor
  7047     060E  3003               	movlw	3
  7048     060F  00F7               	movwf	i1___lwdiv@divisor+1
  7049     0610  0823               	movf	_fluxcontrol$2075+1,w
  7050     0611  00F1               	movwf	i1___wmul@multiplier+1
  7051     0612  0822               	movf	_fluxcontrol$2075,w
  7052     0613  00F0               	movwf	i1___wmul@multiplier
  7053     0614  0021               	movlb	1	; select bank1
  7054     0615  086B               	movf	(_kif+1)^(0+128),w
  7055     0616  00F3               	movwf	i1___wmul@multiplicand+1
  7056     0617  086A               	movf	_kif^(0+128),w
  7057     0618  00F2               	movwf	i1___wmul@multiplicand
  7058     0619  318D  2535  3185   	fcall	i1___wmul
  7059     061C  0871               	movf	?i1___wmul+1,w
  7060     061D  00F9               	movwf	i1___lwdiv@dividend+1
  7061     061E  0870               	movf	?i1___wmul,w
  7062     061F  00F8               	movwf	i1___lwdiv@dividend
  7063     0620  318E  262C  3185   	fcall	i1___lwdiv
  7064     0623  0876               	movf	?i1___lwdiv,w
  7065     0624  0021               	movlb	1	; select bank1
  7066     0625  07B4               	addwf	_outputsum^(0+128),f
  7067     0626  0877               	movf	?i1___lwdiv+1,w
  7068     0627  3DB5               	addwfc	(_outputsum+1)^(0+128),f
  7069     0628                     i1l2686:
  7070                           
  7071                           ;main.c: 55:         if (outputsum > 45000) outputsum = 45000;
  7072     0628  30AF               	movlw	175
  7073     0629  0235               	subwf	(_outputsum+1)^(0+128),w
  7074     062A  30C9               	movlw	201
  7075     062B  1903               	skipnz
  7076     062C  0234               	subwf	_outputsum^(0+128),w
  7077     062D  1C03               	skipc
  7078     062E  2E30               	goto	u187_21
  7079     062F  2E31               	goto	u187_20
  7080     0630                     u187_21:
  7081     0630  2E35               	goto	i1l2690
  7082     0631                     u187_20:
  7083     0631                     i1l2688:
  7084     0631  30C8               	movlw	200
  7085     0632  00B4               	movwf	_outputsum^(0+128)
  7086     0633  30AF               	movlw	175
  7087     0634  00B5               	movwf	(_outputsum^(0+128)+1)
  7088     0635                     i1l2690:
  7089                           
  7090                           ;main.c: 56:         output = ((kpf*error + outputsum)/100);
  7091     0635  3064               	movlw	100
  7092     0636  00F6               	movwf	i1___lwdiv@divisor
  7093     0637  3000               	movlw	0
  7094     0638  00F7               	movwf	i1___lwdiv@divisor+1
  7095     0639  083D               	movf	(_error+1)^(0+128),w
  7096     063A  00F1               	movwf	i1___wmul@multiplier+1
  7097     063B  083C               	movf	_error^(0+128),w
  7098     063C  00F0               	movwf	i1___wmul@multiplier
  7099     063D  086D               	movf	(_kpf+1)^(0+128),w
  7100     063E  00F3               	movwf	i1___wmul@multiplicand+1
  7101     063F  086C               	movf	_kpf^(0+128),w
  7102     0640  00F2               	movwf	i1___wmul@multiplicand
  7103     0641  318D  2535  3185   	fcall	i1___wmul
  7104     0644  0021               	movlb	1	; select bank1
  7105     0645  0834               	movf	_outputsum^(0+128),w
  7106     0646  0770               	addwf	?i1___wmul,w
  7107     0647  00F8               	movwf	i1___lwdiv@dividend
  7108     0648  0835               	movf	(_outputsum+1)^(0+128),w
  7109     0649  3D71               	addwfc	?i1___wmul+1,w
  7110     064A  00F9               	movwf	i1___lwdiv@dividend+1
  7111     064B  318E  262C  3185   	fcall	i1___lwdiv
  7112     064E  0877               	movf	?i1___lwdiv+1,w
  7113     064F  0021               	movlb	1	; select bank1
  7114     0650  00B3               	movwf	(_output+1)^(0+128)
  7115     0651  0876               	movf	?i1___lwdiv,w
  7116     0652  00B2               	movwf	_output^(0+128)
  7117     0653                     i1l2692:
  7118                           
  7119                           ;main.c: 57:         if (output > 450) output = 450;
  7120     0653  3001               	movlw	1
  7121     0654  0233               	subwf	(_output+1)^(0+128),w
  7122     0655  30C3               	movlw	195
  7123     0656  1903               	skipnz
  7124     0657  0232               	subwf	_output^(0+128),w
  7125     0658  1C03               	skipc
  7126     0659  2E5B               	goto	u188_21
  7127     065A  2E5C               	goto	u188_20
  7128     065B                     u188_21:
  7129     065B  2E60               	goto	i1l2696
  7130     065C                     u188_20:
  7131     065C                     i1l2694:
  7132     065C  30C2               	movlw	194
  7133     065D  00B2               	movwf	_output^(0+128)
  7134     065E  3001               	movlw	1
  7135     065F  00B3               	movwf	(_output^(0+128)+1)
  7136     0660                     i1l2696:
  7137                           
  7138                           ;main.c: 58:         fluxpos();
  7139     0660  318D  25B9  3185   	fcall	_fluxpos
  7140     0663                     i1l676:
  7141     0663  0008               	return
  7142     0664                     __end_of_fluxcontrol:
  7143                           
  7144                           	psect	text43
  7145     0D35                     __ptext43:	
  7146 ;; *************** function i1___wmul *****************
  7147 ;; Defined at:
  7148 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul16.c"
  7149 ;; Parameters:    Size  Location     Type
  7150 ;;  multiplier      2    0[COMMON] unsigned int 
  7151 ;;  multiplicand    2    2[COMMON] unsigned int 
  7152 ;; Auto vars:     Size  Location     Type
  7153 ;;  product         2    4[COMMON] unsigned int 
  7154 ;; Return value:  Size  Location     Type
  7155 ;;                  2    0[COMMON] unsigned int 
  7156 ;; Registers used:
  7157 ;;		wreg, status,2, status,0
  7158 ;; Tracked objects:
  7159 ;;		On entry : 0/0
  7160 ;;		On exit  : 0/0
  7161 ;;		Unchanged: 0/0
  7162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7163 ;;      Params:         4       0       0       0       0       0
  7164 ;;      Locals:         2       0       0       0       0       0
  7165 ;;      Temps:          0       0       0       0       0       0
  7166 ;;      Totals:         6       0       0       0       0       0
  7167 ;;Total ram usage:        6 bytes
  7168 ;; Hardware stack levels used: 1
  7169 ;; This function calls:
  7170 ;;		Nothing
  7171 ;; This function is called by:
  7172 ;;		_fluxcontrol
  7173 ;; This function uses a non-reentrant model
  7174 ;;
  7175                           
  7176     0D35                     i1___wmul:	
  7177                           ;psect for function i1___wmul
  7178                           
  7179     0D35                     i1l2606:	
  7180                           ;incstack = 0
  7181                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
  7182                           
  7183     0D35  01F4               	clrf	i1___wmul@product
  7184     0D36  01F5               	clrf	i1___wmul@product+1
  7185     0D37                     i1l2608:
  7186     0D37  1C70               	btfss	i1___wmul@multiplier,0
  7187     0D38  2D3A               	goto	u172_21
  7188     0D39  2D3B               	goto	u172_20
  7189     0D3A                     u172_21:
  7190     0D3A  2D3F               	goto	i1l980
  7191     0D3B                     u172_20:
  7192     0D3B                     i1l2610:
  7193     0D3B  0872               	movf	i1___wmul@multiplicand,w
  7194     0D3C  07F4               	addwf	i1___wmul@product,f
  7195     0D3D  0873               	movf	i1___wmul@multiplicand+1,w
  7196     0D3E  3DF5               	addwfc	i1___wmul@product+1,f
  7197     0D3F                     i1l980:
  7198     0D3F  3001               	movlw	1
  7199     0D40                     u173_25:
  7200     0D40  35F2               	lslf	i1___wmul@multiplicand,f
  7201     0D41  0DF3               	rlf	i1___wmul@multiplicand+1,f
  7202     0D42  0B89               	decfsz	9,f
  7203     0D43  2D40               	goto	u173_25
  7204     0D44                     i1l2612:
  7205     0D44  3001               	movlw	1
  7206     0D45                     u174_25:
  7207     0D45  36F1               	lsrf	i1___wmul@multiplier+1,f
  7208     0D46  0CF0               	rrf	i1___wmul@multiplier,f
  7209     0D47  0B89               	decfsz	9,f
  7210     0D48  2D45               	goto	u174_25
  7211     0D49                     i1l2614:
  7212     0D49  0870               	movf	i1___wmul@multiplier,w
  7213     0D4A  0471               	iorwf	i1___wmul@multiplier+1,w
  7214     0D4B  1D03               	btfss	3,2
  7215     0D4C  2D4E               	goto	u175_21
  7216     0D4D  2D4F               	goto	u175_20
  7217     0D4E                     u175_21:
  7218     0D4E  2D37               	goto	i1l2608
  7219     0D4F                     u175_20:
  7220     0D4F                     i1l2616:
  7221     0D4F  0875               	movf	i1___wmul@product+1,w
  7222     0D50  00F1               	movwf	?i1___wmul+1
  7223     0D51  0874               	movf	i1___wmul@product,w
  7224     0D52  00F0               	movwf	?i1___wmul
  7225     0D53                     i1l982:
  7226     0D53  0008               	return
  7227     0D54                     __end_ofi1___wmul:
  7228                           
  7229                           	psect	text44
  7230     0E2C                     __ptext44:	
  7231 ;; *************** function i1___lwdiv *****************
  7232 ;; Defined at:
  7233 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lwdiv.c"
  7234 ;; Parameters:    Size  Location     Type
  7235 ;;  divisor         2    6[COMMON] unsigned int 
  7236 ;;  dividend        2    8[COMMON] unsigned int 
  7237 ;; Auto vars:     Size  Location     Type
  7238 ;;  quotient        2   11[COMMON] unsigned int 
  7239 ;;  counter         1   13[COMMON] unsigned char 
  7240 ;; Return value:  Size  Location     Type
  7241 ;;                  2    6[COMMON] unsigned int 
  7242 ;; Registers used:
  7243 ;;		wreg, status,2, status,0
  7244 ;; Tracked objects:
  7245 ;;		On entry : 0/0
  7246 ;;		On exit  : 0/0
  7247 ;;		Unchanged: 0/0
  7248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7249 ;;      Params:         4       0       0       0       0       0
  7250 ;;      Locals:         3       0       0       0       0       0
  7251 ;;      Temps:          1       0       0       0       0       0
  7252 ;;      Totals:         8       0       0       0       0       0
  7253 ;;Total ram usage:        8 bytes
  7254 ;; Hardware stack levels used: 1
  7255 ;; This function calls:
  7256 ;;		Nothing
  7257 ;; This function is called by:
  7258 ;;		_fluxcontrol
  7259 ;; This function uses a non-reentrant model
  7260 ;;
  7261                           
  7262     0E2C                     i1___lwdiv:	
  7263                           ;psect for function i1___lwdiv
  7264                           
  7265     0E2C                     i1l2620:	
  7266                           ;incstack = 0
  7267                           ; Regs used in i1___lwdiv: [wreg+status,2+status,0]
  7268                           
  7269     0E2C  01FB               	clrf	i1___lwdiv@quotient
  7270     0E2D  01FC               	clrf	i1___lwdiv@quotient+1
  7271     0E2E                     i1l2622:
  7272     0E2E  0876               	movf	i1___lwdiv@divisor,w
  7273     0E2F  0477               	iorwf	i1___lwdiv@divisor+1,w
  7274     0E30  1903               	btfsc	3,2
  7275     0E31  2E33               	goto	u176_21
  7276     0E32  2E34               	goto	u176_20
  7277     0E33                     u176_21:
  7278     0E33  2E63               	goto	i1l2642
  7279     0E34                     u176_20:
  7280     0E34                     i1l2624:
  7281     0E34  01FD               	clrf	i1___lwdiv@counter
  7282     0E35  0AFD               	incf	i1___lwdiv@counter,f
  7283     0E36  2E40               	goto	i1l2630
  7284     0E37                     i1l2626:
  7285     0E37  3001               	movlw	1
  7286     0E38                     u177_25:
  7287     0E38  35F6               	lslf	i1___lwdiv@divisor,f
  7288     0E39  0DF7               	rlf	i1___lwdiv@divisor+1,f
  7289     0E3A  0B89               	decfsz	9,f
  7290     0E3B  2E38               	goto	u177_25
  7291     0E3C                     i1l2628:
  7292     0E3C  3001               	movlw	1
  7293     0E3D  00FA               	movwf	??i1___lwdiv
  7294     0E3E  087A               	movf	??i1___lwdiv,w
  7295     0E3F  07FD               	addwf	i1___lwdiv@counter,f
  7296     0E40                     i1l2630:
  7297     0E40  1FF7               	btfss	i1___lwdiv@divisor+1,7
  7298     0E41  2E43               	goto	u178_21
  7299     0E42  2E44               	goto	u178_20
  7300     0E43                     u178_21:
  7301     0E43  2E37               	goto	i1l2626
  7302     0E44                     u178_20:
  7303     0E44                     i1l2632:
  7304     0E44  3001               	movlw	1
  7305     0E45                     u179_25:
  7306     0E45  35FB               	lslf	i1___lwdiv@quotient,f
  7307     0E46  0DFC               	rlf	i1___lwdiv@quotient+1,f
  7308     0E47  0B89               	decfsz	9,f
  7309     0E48  2E45               	goto	u179_25
  7310     0E49  0877               	movf	i1___lwdiv@divisor+1,w
  7311     0E4A  0279               	subwf	i1___lwdiv@dividend+1,w
  7312     0E4B  1D03               	skipz
  7313     0E4C  2E4F               	goto	u180_25
  7314     0E4D  0876               	movf	i1___lwdiv@divisor,w
  7315     0E4E  0278               	subwf	i1___lwdiv@dividend,w
  7316     0E4F                     u180_25:
  7317     0E4F  1C03               	skipc
  7318     0E50  2E52               	goto	u180_21
  7319     0E51  2E53               	goto	u180_20
  7320     0E52                     u180_21:
  7321     0E52  2E58               	goto	i1l2638
  7322     0E53                     u180_20:
  7323     0E53                     i1l2634:
  7324     0E53  0876               	movf	i1___lwdiv@divisor,w
  7325     0E54  02F8               	subwf	i1___lwdiv@dividend,f
  7326     0E55  0877               	movf	i1___lwdiv@divisor+1,w
  7327     0E56  3BF9               	subwfb	i1___lwdiv@dividend+1,f
  7328     0E57                     i1l2636:
  7329     0E57  147B               	bsf	i1___lwdiv@quotient,0
  7330     0E58                     i1l2638:
  7331     0E58  3001               	movlw	1
  7332     0E59                     u181_25:
  7333     0E59  36F7               	lsrf	i1___lwdiv@divisor+1,f
  7334     0E5A  0CF6               	rrf	i1___lwdiv@divisor,f
  7335     0E5B  0B89               	decfsz	9,f
  7336     0E5C  2E59               	goto	u181_25
  7337     0E5D                     i1l2640:
  7338     0E5D  3001               	movlw	1
  7339     0E5E  02FD               	subwf	i1___lwdiv@counter,f
  7340     0E5F  1D03               	btfss	3,2
  7341     0E60  2E62               	goto	u182_21
  7342     0E61  2E63               	goto	u182_20
  7343     0E62                     u182_21:
  7344     0E62  2E44               	goto	i1l2632
  7345     0E63                     u182_20:
  7346     0E63                     i1l2642:
  7347     0E63  087C               	movf	i1___lwdiv@quotient+1,w
  7348     0E64  00F7               	movwf	?i1___lwdiv+1
  7349     0E65  087B               	movf	i1___lwdiv@quotient,w
  7350     0E66  00F6               	movwf	?i1___lwdiv
  7351     0E67                     i1l1260:
  7352     0E67  0008               	return
  7353     0E68                     __end_ofi1___lwdiv:
  7354                           
  7355                           	psect	text45
  7356     0DB9                     __ptext45:	
  7357 ;; *************** function _fluxpos *****************
  7358 ;; Defined at:
  7359 ;;		line 73 in file "main.c"
  7360 ;; Parameters:    Size  Location     Type
  7361 ;;		None
  7362 ;; Auto vars:     Size  Location     Type
  7363 ;;		None
  7364 ;; Return value:  Size  Location     Type
  7365 ;;                  1    wreg      void 
  7366 ;; Registers used:
  7367 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7368 ;; Tracked objects:
  7369 ;;		On entry : 0/0
  7370 ;;		On exit  : 0/0
  7371 ;;		Unchanged: 0/0
  7372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7373 ;;      Params:         0       0       0       0       0       0
  7374 ;;      Locals:         0       0       0       0       0       0
  7375 ;;      Temps:          1       0       0       0       0       0
  7376 ;;      Totals:         1       0       0       0       0       0
  7377 ;;Total ram usage:        1 bytes
  7378 ;; Hardware stack levels used: 1
  7379 ;; Hardware stack levels required when called: 2
  7380 ;; This function calls:
  7381 ;;		_daUmPasso
  7382 ;; This function is called by:
  7383 ;;		_fluxcontrol
  7384 ;; This function uses a non-reentrant model
  7385 ;;
  7386                           
  7387     0DB9                     _fluxpos:	
  7388                           ;psect for function _fluxpos
  7389                           
  7390     0DB9                     i1l2582:	
  7391                           ;incstack = 0
  7392                           ; Regs used in _fluxpos: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7393                           
  7394                           
  7395                           ;main.c: 74:     flux = output - position;
  7396     0DB9  0021               	movlb	1	; select bank1
  7397     0DBA  0828               	movf	_position^(0+128),w
  7398     0DBB  0232               	subwf	_output^(0+128),w
  7399     0DBC  00B6               	movwf	_flux^(0+128)
  7400     0DBD  0829               	movf	(_position+1)^(0+128),w
  7401     0DBE  3B33               	subwfb	(_output+1)^(0+128),w
  7402     0DBF  00B7               	movwf	(_flux+1)^(0+128)
  7403     0DC0                     i1l2584:
  7404                           
  7405                           ;main.c: 75:     if(flux>0) daUmPasso(1);
  7406     0DC0  0837               	movf	(_flux+1)^(0+128),w
  7407     0DC1  3A80               	xorlw	128
  7408     0DC2  00F5               	movwf	??_fluxpos
  7409     0DC3  3080               	movlw	128
  7410     0DC4  0275               	subwf	??_fluxpos,w
  7411     0DC5  1D03               	skipz
  7412     0DC6  2DC9               	goto	u166_25
  7413     0DC7  3001               	movlw	1
  7414     0DC8  0236               	subwf	_flux^(0+128),w
  7415     0DC9                     u166_25:
  7416     0DC9  1C03               	skipc
  7417     0DCA  2DCC               	goto	u166_21
  7418     0DCB  2DCD               	goto	u166_20
  7419     0DCC                     u166_21:
  7420     0DCC  2DD2               	goto	i1l687
  7421     0DCD                     u166_20:
  7422     0DCD                     i1l2586:
  7423     0DCD  3001               	movlw	1
  7424     0DCE  318F  2725  318D   	fcall	_daUmPasso
  7425     0DD1  2DDB               	goto	i1l690
  7426     0DD2                     i1l687:	
  7427                           ;main.c: 76:     else if( flux <0) daUmPasso(0);
  7428                           
  7429     0DD2  0021               	movlb	1	; select bank1
  7430     0DD3  1FB7               	btfss	(_flux+1)^(0+128),7
  7431     0DD4  2DD6               	goto	u167_21
  7432     0DD5  2DD7               	goto	u167_20
  7433     0DD6                     u167_21:
  7434     0DD6  2DDB               	goto	i1l690
  7435     0DD7                     u167_20:
  7436     0DD7                     i1l2588:
  7437     0DD7  3000               	movlw	0
  7438     0DD8  318F  2725  318D   	fcall	_daUmPasso
  7439     0DDB                     i1l690:
  7440     0DDB  0008               	return
  7441     0DDC                     __end_of_fluxpos:
  7442                           
  7443                           	psect	text46
  7444     0F25                     __ptext46:	
  7445 ;; *************** function _daUmPasso *****************
  7446 ;; Defined at:
  7447 ;;		line 255 in file "main.c"
  7448 ;; Parameters:    Size  Location     Type
  7449 ;;  sentido         1    wreg     _Bool 
  7450 ;; Auto vars:     Size  Location     Type
  7451 ;;  sentido         1    4[COMMON] _Bool 
  7452 ;; Return value:  Size  Location     Type
  7453 ;;                  1    wreg      void 
  7454 ;; Registers used:
  7455 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7456 ;; Tracked objects:
  7457 ;;		On entry : 0/0
  7458 ;;		On exit  : 0/0
  7459 ;;		Unchanged: 0/0
  7460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7461 ;;      Params:         0       0       0       0       0       0
  7462 ;;      Locals:         1       0       0       0       0       0
  7463 ;;      Temps:          2       0       0       0       0       0
  7464 ;;      Totals:         3       0       0       0       0       0
  7465 ;;Total ram usage:        3 bytes
  7466 ;; Hardware stack levels used: 1
  7467 ;; Hardware stack levels required when called: 1
  7468 ;; This function calls:
  7469 ;;		_CMP1_GetOutputStatus
  7470 ;;		_definePassoMotor
  7471 ;; This function is called by:
  7472 ;;		_fluxpos
  7473 ;; This function uses a non-reentrant model
  7474 ;;
  7475                           
  7476     0F25                     _daUmPasso:	
  7477                           ;psect for function _daUmPasso
  7478                           
  7479                           
  7480                           ;incstack = 0
  7481                           ; Regs used in _daUmPasso: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7482                           ;daUmPasso@sentido stored from wreg
  7483     0F25  00F4               	movwf	daUmPasso@sentido
  7484     0F26                     i1l2558:
  7485                           
  7486                           ;main.c: 257:     passo++;
  7487     0F26  3001               	movlw	1
  7488     0F27  00F2               	movwf	??_daUmPasso
  7489     0F28  0872               	movf	??_daUmPasso,w
  7490     0F29  0021               	movlb	1	; select bank1
  7491     0F2A  07C4               	addwf	_passo^(0+128),f
  7492     0F2B                     i1l2560:
  7493                           
  7494                           ;main.c: 258:     passo = passo & 0b00000011;
  7495     0F2B  0844               	movf	_passo^(0+128),w
  7496     0F2C  3903               	andlw	3
  7497     0F2D  00C4               	movwf	_passo^(0+128)
  7498     0F2E                     i1l2562:
  7499                           
  7500                           ;main.c: 260:     if (CMP1_GetOutputStatus()) {
  7501     0F2E  318B  232E  318F   	fcall	_CMP1_GetOutputStatus
  7502     0F31  3A00               	xorlw	0
  7503     0F32  1903               	skipnz
  7504     0F33  2F35               	goto	u163_21
  7505     0F34  2F36               	goto	u163_20
  7506     0F35                     u163_21:
  7507     0F35  2F3C               	goto	i1l2568
  7508     0F36                     u163_20:
  7509     0F36                     i1l2564:
  7510                           
  7511                           ;main.c: 261:         fim_curso = 1;
  7512     0F36  0021               	movlb	1	; select bank1
  7513     0F37  01C3               	clrf	_fim_curso^(0+128)
  7514     0F38  0AC3               	incf	_fim_curso^(0+128),f
  7515     0F39                     i1l2566:
  7516                           
  7517                           ;main.c: 262:         position = 0;
  7518     0F39  01A8               	clrf	_position^(0+128)
  7519     0F3A  01A9               	clrf	(_position+1)^(0+128)
  7520                           
  7521                           ;main.c: 263:     } else {
  7522     0F3B  2F3E               	goto	i1l2570
  7523     0F3C                     i1l2568:
  7524                           
  7525                           ;main.c: 264:         fim_curso = 0;
  7526     0F3C  0021               	movlb	1	; select bank1
  7527     0F3D  01C3               	clrf	_fim_curso^(0+128)
  7528     0F3E                     i1l2570:
  7529                           
  7530                           ;main.c: 267:     if (fim_curso) {
  7531     0F3E  0843               	movf	_fim_curso^(0+128),w
  7532     0F3F  1903               	btfsc	3,2
  7533     0F40  2F42               	goto	u164_21
  7534     0F41  2F43               	goto	u164_20
  7535     0F42                     u164_21:
  7536     0F42  2F60               	goto	i1l2580
  7537     0F43                     u164_20:
  7538     0F43                     i1l2572:
  7539                           
  7540                           ;main.c: 269:         if(sentido){
  7541     0F43  0874               	movf	daUmPasso@sentido,w
  7542     0F44  1903               	btfsc	3,2
  7543     0F45  2F47               	goto	u165_21
  7544     0F46  2F48               	goto	u165_20
  7545     0F47                     u165_21:
  7546     0F47  2F52               	goto	i1l2576
  7547     0F48                     u165_20:
  7548     0F48                     i1l2574:
  7549                           
  7550                           ;main.c: 270:             position = position - incPos;
  7551     0F48  086E               	movf	_incPos^(0+128),w
  7552     0F49  00F2               	movwf	??_daUmPasso
  7553     0F4A  01F3               	clrf	??_daUmPasso+1
  7554     0F4B  0872               	movf	??_daUmPasso,w
  7555     0F4C  0228               	subwf	_position^(0+128),w
  7556     0F4D  00A8               	movwf	_position^(0+128)
  7557     0F4E  0873               	movf	??_daUmPasso+1,w
  7558     0F4F  3B29               	subwfb	(_position+1)^(0+128),w
  7559     0F50  00A9               	movwf	(_position+1)^(0+128)
  7560                           
  7561                           ;main.c: 271:         } else {
  7562     0F51  2F59               	goto	i1l2578
  7563     0F52                     i1l2576:
  7564                           
  7565                           ;main.c: 272:             position = position + incPos;
  7566     0F52  086E               	movf	_incPos^(0+128),w
  7567     0F53  0728               	addwf	_position^(0+128),w
  7568     0F54  00A8               	movwf	_position^(0+128)
  7569     0F55  0829               	movf	(_position+1)^(0+128),w
  7570     0F56  1803               	skipnc
  7571     0F57  0A29               	incf	(_position+1)^(0+128),w
  7572     0F58  00A9               	movwf	(_position^(0+128)+1)
  7573     0F59                     i1l2578:
  7574                           
  7575                           ;main.c: 274:         definePassoMotor(passo, sentido);
  7576     0F59  0874               	movf	daUmPasso@sentido,w
  7577     0F5A  00F0               	movwf	definePassoMotor@sentido
  7578     0F5B  0844               	movf	_passo^(0+128),w
  7579     0F5C  318F  27AC  318F   	fcall	_definePassoMotor
  7580                           
  7581                           ;main.c: 275:     } else {
  7582     0F5F  2F66               	goto	i1l815
  7583     0F60                     i1l2580:
  7584                           
  7585                           ;main.c: 276:         definePassoMotor(passo, 1);
  7586     0F60  01F0               	clrf	definePassoMotor@sentido
  7587     0F61  0AF0               	incf	definePassoMotor@sentido,f
  7588     0F62  0844               	movf	_passo^(0+128),w
  7589     0F63  318F  27AC  318F   	fcall	_definePassoMotor
  7590     0F66                     i1l815:
  7591     0F66  0008               	return
  7592     0F67                     __end_of_daUmPasso:
  7593                           
  7594                           	psect	text47
  7595     0FAC                     __ptext47:	
  7596 ;; *************** function _definePassoMotor *****************
  7597 ;; Defined at:
  7598 ;;		line 197 in file "main.c"
  7599 ;; Parameters:    Size  Location     Type
  7600 ;;  passo           1    wreg     unsigned char 
  7601 ;;  sentido         1    0[COMMON] _Bool 
  7602 ;; Auto vars:     Size  Location     Type
  7603 ;;  passo           1    1[COMMON] unsigned char 
  7604 ;; Return value:  Size  Location     Type
  7605 ;;                  1    wreg      void 
  7606 ;; Registers used:
  7607 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7608 ;; Tracked objects:
  7609 ;;		On entry : 0/0
  7610 ;;		On exit  : 0/0
  7611 ;;		Unchanged: 0/0
  7612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7613 ;;      Params:         1       0       0       0       0       0
  7614 ;;      Locals:         1       0       0       0       0       0
  7615 ;;      Temps:          0       0       0       0       0       0
  7616 ;;      Totals:         2       0       0       0       0       0
  7617 ;;Total ram usage:        2 bytes
  7618 ;; Hardware stack levels used: 1
  7619 ;; This function calls:
  7620 ;;		Nothing
  7621 ;; This function is called by:
  7622 ;;		_daUmPasso
  7623 ;; This function uses a non-reentrant model
  7624 ;;
  7625                           
  7626     0FAC                     _definePassoMotor:	
  7627                           ;psect for function _definePassoMotor
  7628                           
  7629                           
  7630                           ;incstack = 0
  7631                           ; Regs used in _definePassoMotor: [wreg-fsr0h+status,2+status,0]
  7632                           ;definePassoMotor@passo stored from wreg
  7633     0FAC  00F1               	movwf	definePassoMotor@passo
  7634     0FAD                     i1l2546:
  7635                           
  7636                           ;main.c: 198:     if (sentido) {
  7637     0FAD  0870               	movf	definePassoMotor@sentido,w
  7638     0FAE  1903               	btfsc	3,2
  7639     0FAF  2FB1               	goto	u162_21
  7640     0FB0  2FB2               	goto	u162_20
  7641     0FB1                     u162_21:
  7642     0FB1  2FF1               	goto	i1l2556
  7643     0FB2                     u162_20:
  7644     0FB2  2FCB               	goto	i1l2552
  7645     0FB3                     i1l731:	
  7646                           ;main.c: 201:                 do { LATAbits.LATA1 = 1; } while(0);
  7647                           
  7648     0FB3  0022               	movlb	2	; select bank2
  7649     0FB4  148C               	bsf	12,1	;volatile
  7650     0FB5                     i1l733:	
  7651                           ;main.c: 202:                 do { LATAbits.LATA2 = 1; } while(0);
  7652                           
  7653     0FB5  150C               	bsf	12,2	;volatile
  7654     0FB6                     i1l735:	
  7655                           ;main.c: 203:                 do { LATAbits.LATA3 = 0; } while(0);
  7656                           
  7657     0FB6  118C               	bcf	12,3	;volatile
  7658     0FB7                     i1l737:	
  7659                           ;main.c: 204:                 do { LATAbits.LATA4 = 0; } while(0);
  7660                           
  7661     0FB7  120C               	bcf	12,4	;volatile
  7662     0FB8  2FFF               	goto	i1l806
  7663     0FB9                     i1l741:	
  7664                           ;main.c: 207:                 do { LATAbits.LATA1 = 0; } while(0);
  7665                           
  7666     0FB9  0022               	movlb	2	; select bank2
  7667     0FBA  108C               	bcf	12,1	;volatile
  7668     0FBB                     i1l743:	
  7669                           ;main.c: 208:                 do { LATAbits.LATA2 = 1; } while(0);
  7670                           
  7671     0FBB  150C               	bsf	12,2	;volatile
  7672     0FBC                     i1l745:	
  7673                           ;main.c: 209:                 do { LATAbits.LATA3 = 1; } while(0);
  7674                           
  7675     0FBC  158C               	bsf	12,3	;volatile
  7676     0FBD                     i1l747:	
  7677                           ;main.c: 210:                 do { LATAbits.LATA4 = 0; } while(0);
  7678                           
  7679     0FBD  120C               	bcf	12,4	;volatile
  7680     0FBE  2FFF               	goto	i1l806
  7681     0FBF                     i1l750:	
  7682                           ;main.c: 213:                 do { LATAbits.LATA1 = 0; } while(0);
  7683                           
  7684     0FBF  0022               	movlb	2	; select bank2
  7685     0FC0  108C               	bcf	12,1	;volatile
  7686     0FC1                     i1l752:	
  7687                           ;main.c: 214:                 do { LATAbits.LATA2 = 0; } while(0);
  7688                           
  7689     0FC1  110C               	bcf	12,2	;volatile
  7690     0FC2                     i1l754:	
  7691                           ;main.c: 215:                 do { LATAbits.LATA3 = 1; } while(0);
  7692                           
  7693     0FC2  158C               	bsf	12,3	;volatile
  7694     0FC3                     i1l756:	
  7695                           ;main.c: 216:                 do { LATAbits.LATA4 = 1; } while(0);
  7696                           
  7697     0FC3  160C               	bsf	12,4	;volatile
  7698     0FC4  2FFF               	goto	i1l806
  7699     0FC5                     i1l759:	
  7700                           ;main.c: 219:                 do { LATAbits.LATA1 = 1; } while(0);
  7701                           
  7702     0FC5  0022               	movlb	2	; select bank2
  7703     0FC6  148C               	bsf	12,1	;volatile
  7704     0FC7                     i1l761:	
  7705                           ;main.c: 220:                 do { LATAbits.LATA2 = 0; } while(0);
  7706                           
  7707     0FC7  110C               	bcf	12,2	;volatile
  7708     0FC8                     i1l763:	
  7709                           ;main.c: 221:                 do { LATAbits.LATA3 = 0; } while(0);
  7710                           
  7711     0FC8  118C               	bcf	12,3	;volatile
  7712     0FC9                     i1l765:	
  7713                           ;main.c: 222:                 do { LATAbits.LATA4 = 1; } while(0);
  7714                           
  7715     0FC9  160C               	bsf	12,4	;volatile
  7716     0FCA  2FFF               	goto	i1l806
  7717     0FCB                     i1l2552:
  7718     0FCB  0871               	movf	definePassoMotor@passo,w
  7719                           
  7720                           ; Switch size 1, requested type "simple"
  7721                           ; Number of cases is 4, Range of values is 0 to 3
  7722                           ; switch strategies available:
  7723                           ; Name         Instructions Cycles
  7724                           ; simple_byte           13     7 (average)
  7725                           ; direct_byte           14     6 (fixed)
  7726                           ; jumptable            260     6 (fixed)
  7727                           ;	Chosen strategy is simple_byte
  7728     0FCC  3A00               	xorlw	0	; case 0
  7729     0FCD  1903               	skipnz
  7730     0FCE  2FB3               	goto	i1l731
  7731     0FCF  3A01               	xorlw	1	; case 1
  7732     0FD0  1903               	skipnz
  7733     0FD1  2FB9               	goto	i1l741
  7734     0FD2  3A03               	xorlw	3	; case 2
  7735     0FD3  1903               	skipnz
  7736     0FD4  2FBF               	goto	i1l750
  7737     0FD5  3A01               	xorlw	1	; case 3
  7738     0FD6  1903               	skipnz
  7739     0FD7  2FC5               	goto	i1l759
  7740     0FD8  2FFF               	goto	i1l806
  7741     0FD9                     i1l770:	
  7742                           ;main.c: 228:                 do { LATAbits.LATA4 = 1; } while(0);
  7743                           
  7744     0FD9  0022               	movlb	2	; select bank2
  7745     0FDA  160C               	bsf	12,4	;volatile
  7746     0FDB                     i1l772:	
  7747                           ;main.c: 229:                 do { LATAbits.LATA3 = 1; } while(0);
  7748                           
  7749     0FDB  158C               	bsf	12,3	;volatile
  7750     0FDC                     i1l774:	
  7751                           ;main.c: 230:                 do { LATAbits.LATA2 = 0; } while(0);
  7752                           
  7753     0FDC  110C               	bcf	12,2	;volatile
  7754     0FDD                     i1l776:	
  7755                           ;main.c: 231:                 do { LATAbits.LATA1 = 0; } while(0);
  7756                           
  7757     0FDD  108C               	bcf	12,1	;volatile
  7758     0FDE  2FFF               	goto	i1l806
  7759     0FDF                     i1l780:	
  7760                           ;main.c: 234:                 do { LATAbits.LATA4 = 0; } while(0);
  7761                           
  7762     0FDF  0022               	movlb	2	; select bank2
  7763     0FE0  120C               	bcf	12,4	;volatile
  7764     0FE1                     i1l782:	
  7765                           ;main.c: 235:                 do { LATAbits.LATA3 = 1; } while(0);
  7766                           
  7767     0FE1  158C               	bsf	12,3	;volatile
  7768     0FE2                     i1l784:	
  7769                           ;main.c: 236:                 do { LATAbits.LATA2 = 1; } while(0);
  7770                           
  7771     0FE2  150C               	bsf	12,2	;volatile
  7772     0FE3                     i1l786:	
  7773                           ;main.c: 237:                 do { LATAbits.LATA1 = 0; } while(0);
  7774                           
  7775     0FE3  108C               	bcf	12,1	;volatile
  7776     0FE4  2FFF               	goto	i1l806
  7777     0FE5                     i1l789:	
  7778                           ;main.c: 240:                 do { LATAbits.LATA4 = 0; } while(0);
  7779                           
  7780     0FE5  0022               	movlb	2	; select bank2
  7781     0FE6  120C               	bcf	12,4	;volatile
  7782     0FE7                     i1l791:	
  7783                           ;main.c: 241:                 do { LATAbits.LATA3 = 0; } while(0);
  7784                           
  7785     0FE7  118C               	bcf	12,3	;volatile
  7786     0FE8                     i1l793:	
  7787                           ;main.c: 242:                 do { LATAbits.LATA2 = 1; } while(0);
  7788                           
  7789     0FE8  150C               	bsf	12,2	;volatile
  7790     0FE9                     i1l795:	
  7791                           ;main.c: 243:                 do { LATAbits.LATA1 = 1; } while(0);
  7792                           
  7793     0FE9  148C               	bsf	12,1	;volatile
  7794     0FEA  2FFF               	goto	i1l806
  7795     0FEB                     i1l798:	
  7796                           ;main.c: 246:                 do { LATAbits.LATA4 = 1; } while(0);
  7797                           
  7798     0FEB  0022               	movlb	2	; select bank2
  7799     0FEC  160C               	bsf	12,4	;volatile
  7800     0FED                     i1l800:	
  7801                           ;main.c: 247:                 do { LATAbits.LATA3 = 0; } while(0);
  7802                           
  7803     0FED  118C               	bcf	12,3	;volatile
  7804     0FEE                     i1l802:	
  7805                           ;main.c: 248:                 do { LATAbits.LATA2 = 0; } while(0);
  7806                           
  7807     0FEE  110C               	bcf	12,2	;volatile
  7808     0FEF                     i1l804:	
  7809                           ;main.c: 249:                 do { LATAbits.LATA1 = 1; } while(0);
  7810                           
  7811     0FEF  148C               	bsf	12,1	;volatile
  7812     0FF0  2FFF               	goto	i1l806
  7813     0FF1                     i1l2556:
  7814     0FF1  0871               	movf	definePassoMotor@passo,w
  7815                           
  7816                           ; Switch size 1, requested type "simple"
  7817                           ; Number of cases is 4, Range of values is 0 to 3
  7818                           ; switch strategies available:
  7819                           ; Name         Instructions Cycles
  7820                           ; simple_byte           13     7 (average)
  7821                           ; direct_byte           14     6 (fixed)
  7822                           ; jumptable            260     6 (fixed)
  7823                           ;	Chosen strategy is simple_byte
  7824     0FF2  3A00               	xorlw	0	; case 0
  7825     0FF3  1903               	skipnz
  7826     0FF4  2FD9               	goto	i1l770
  7827     0FF5  3A01               	xorlw	1	; case 1
  7828     0FF6  1903               	skipnz
  7829     0FF7  2FDF               	goto	i1l780
  7830     0FF8  3A03               	xorlw	3	; case 2
  7831     0FF9  1903               	skipnz
  7832     0FFA  2FE5               	goto	i1l789
  7833     0FFB  3A01               	xorlw	1	; case 3
  7834     0FFC  1903               	skipnz
  7835     0FFD  2FEB               	goto	i1l798
  7836     0FFE  2FFF               	goto	i1l806
  7837     0FFF                     i1l806:
  7838     0FFF  0008               	return
  7839     1000                     __end_of_definePassoMotor:
  7840                           
  7841                           	psect	text48
  7842     0B2E                     __ptext48:	
  7843 ;; *************** function _CMP1_GetOutputStatus *****************
  7844 ;; Defined at:
  7845 ;;		line 69 in file "mcc_generated_files/cmp1.c"
  7846 ;; Parameters:    Size  Location     Type
  7847 ;;		None
  7848 ;; Auto vars:     Size  Location     Type
  7849 ;;		None
  7850 ;; Return value:  Size  Location     Type
  7851 ;;                  1    wreg      _Bool 
  7852 ;; Registers used:
  7853 ;;		wreg, status,2, status,0
  7854 ;; Tracked objects:
  7855 ;;		On entry : 0/0
  7856 ;;		On exit  : 0/0
  7857 ;;		Unchanged: 0/0
  7858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7859 ;;      Params:         0       0       0       0       0       0
  7860 ;;      Locals:         0       0       0       0       0       0
  7861 ;;      Temps:          0       0       0       0       0       0
  7862 ;;      Totals:         0       0       0       0       0       0
  7863 ;;Total ram usage:        0 bytes
  7864 ;; Hardware stack levels used: 1
  7865 ;; This function calls:
  7866 ;;		Nothing
  7867 ;; This function is called by:
  7868 ;;		_daUmPasso
  7869 ;; This function uses a non-reentrant model
  7870 ;;
  7871                           
  7872     0B2E                     _CMP1_GetOutputStatus:	
  7873                           ;psect for function _CMP1_GetOutputStatus
  7874                           
  7875     0B2E                     i1l2542:	
  7876                           ;incstack = 0
  7877                           ; Regs used in _CMP1_GetOutputStatus: [wreg+status,2+status,0]
  7878                           
  7879                           
  7880                           ;mcc_generated_files/cmp1.c: 71:  return (CMOUTbits.MC1OUT);
  7881     0B2E  0022               	movlb	2	; select bank2
  7882     0B2F  0815               	movf	21,w	;volatile
  7883     0B30  3901               	andlw	1
  7884     0B31                     i1l453:
  7885     0B31  0008               	return
  7886     0B32                     __end_of_CMP1_GetOutputStatus:
  7887                           
  7888                           	psect	text49
  7889     0BE6                     __ptext49:	
  7890 ;; *************** function _TMR1_GATE_ISR *****************
  7891 ;; Defined at:
  7892 ;;		line 166 in file "mcc_generated_files/tmr1.c"
  7893 ;; Parameters:    Size  Location     Type
  7894 ;;		None
  7895 ;; Auto vars:     Size  Location     Type
  7896 ;;		None
  7897 ;; Return value:  Size  Location     Type
  7898 ;;                  1    wreg      void 
  7899 ;; Registers used:
  7900 ;;		wreg, status,2, status,0, pclath, cstack
  7901 ;; Tracked objects:
  7902 ;;		On entry : 0/0
  7903 ;;		On exit  : 0/0
  7904 ;;		Unchanged: 0/0
  7905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7906 ;;      Params:         0       0       0       0       0       0
  7907 ;;      Locals:         0       0       0       0       0       0
  7908 ;;      Temps:          0       0       0       0       0       0
  7909 ;;      Totals:         0       0       0       0       0       0
  7910 ;;Total ram usage:        0 bytes
  7911 ;; Hardware stack levels used: 1
  7912 ;; Hardware stack levels required when called: 3
  7913 ;; This function calls:
  7914 ;;		NULL
  7915 ;;		_TMR1_DefaultGateInterruptHandler
  7916 ;;		_mede_height
  7917 ;; This function is called by:
  7918 ;;		_INTERRUPT_InterruptManager
  7919 ;; This function uses a non-reentrant model
  7920 ;;
  7921                           
  7922     0BE6                     _TMR1_GATE_ISR:	
  7923                           ;psect for function _TMR1_GATE_ISR
  7924                           
  7925     0BE6                     i1l3378:	
  7926                           ;incstack = 0
  7927                           ; Regs used in _TMR1_GATE_ISR: [wreg+status,2+status,0+pclath+cstack]
  7928                           
  7929                           
  7930                           ;mcc_generated_files/tmr1.c: 169:     PIR1bits.TMR1GIF = 0;
  7931     0BE6  0020               	movlb	0	; select bank0
  7932     0BE7  1391               	bcf	17,7	;volatile
  7933     0BE8                     i1l3380:
  7934                           
  7935                           ;mcc_generated_files/tmr1.c: 171:     if(TMR1_GateInterruptHandler)
  7936     0BE8  0022               	movlb	2	; select bank2
  7937     0BE9  0846               	movf	_TMR1_GateInterruptHandler^(0+256),w
  7938     0BEA  0447               	iorwf	(_TMR1_GateInterruptHandler+1)^(0+256),w
  7939     0BEB  1903               	btfsc	3,2
  7940     0BEC  2BEE               	goto	u293_21
  7941     0BED  2BEF               	goto	u293_20
  7942     0BEE                     u293_21:
  7943     0BEE  2BF4               	goto	i1l556
  7944     0BEF                     u293_20:
  7945     0BEF                     i1l3382:
  7946                           
  7947                           ;mcc_generated_files/tmr1.c: 172:     {;mcc_generated_files/tmr1.c: 173:         TMR1_Ga
      +                          teInterruptHandler();
  7948     0BEF  0847               	movf	(_TMR1_GateInterruptHandler+1)^(0+256),w
  7949     0BF0  008A               	movwf	10
  7950     0BF1  0846               	movf	_TMR1_GateInterruptHandler^(0+256),w
  7951     0BF2  000A               	callw
  7952     0BF3  318B               	pagesel	$
  7953     0BF4                     i1l556:
  7954     0BF4  0008               	return
  7955     0BF5                     __end_of_TMR1_GATE_ISR:
  7956                           
  7957                           	psect	text50
  7958     0003                     __ptext50:	
  7959 ;; *************** function _TMR1_DefaultGateInterruptHandler *****************
  7960 ;; Defined at:
  7961 ;;		line 181 in file "mcc_generated_files/tmr1.c"
  7962 ;; Parameters:    Size  Location     Type
  7963 ;;		None
  7964 ;; Auto vars:     Size  Location     Type
  7965 ;;		None
  7966 ;; Return value:  Size  Location     Type
  7967 ;;                  1    wreg      void 
  7968 ;; Registers used:
  7969 ;;		None
  7970 ;; Tracked objects:
  7971 ;;		On entry : 0/0
  7972 ;;		On exit  : 0/0
  7973 ;;		Unchanged: 0/0
  7974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7975 ;;      Params:         0       0       0       0       0       0
  7976 ;;      Locals:         0       0       0       0       0       0
  7977 ;;      Temps:          0       0       0       0       0       0
  7978 ;;      Totals:         0       0       0       0       0       0
  7979 ;;Total ram usage:        0 bytes
  7980 ;; Hardware stack levels used: 1
  7981 ;; This function calls:
  7982 ;;		Nothing
  7983 ;; This function is called by:
  7984 ;;		_TMR1_Initialize
  7985 ;;		_TMR1_GATE_ISR
  7986 ;; This function uses a non-reentrant model
  7987 ;;
  7988                           
  7989     0003                     _TMR1_DefaultGateInterruptHandler:	
  7990                           ;psect for function _TMR1_DefaultGateInterruptHandler
  7991                           
  7992     0003                     i1l562:	
  7993                           ;incstack = 0
  7994                           ; Regs used in _TMR1_DefaultGateInterruptHandler: []
  7995                           
  7996     0003  0008               	return
  7997     0004                     __end_of_TMR1_DefaultGateInterruptHandler:
  7998                           
  7999                           	psect	text51
  8000     06F6                     __ptext51:	
  8001 ;; *************** function _mede_height *****************
  8002 ;; Defined at:
  8003 ;;		line 284 in file "main.c"
  8004 ;; Parameters:    Size  Location     Type
  8005 ;;		None
  8006 ;; Auto vars:     Size  Location     Type
  8007 ;;		None
  8008 ;; Return value:  Size  Location     Type
  8009 ;;                  1    wreg      void 
  8010 ;; Registers used:
  8011 ;;		wreg, status,2, status,0, pclath, cstack
  8012 ;; Tracked objects:
  8013 ;;		On entry : 0/0
  8014 ;;		On exit  : 0/0
  8015 ;;		Unchanged: 0/0
  8016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8017 ;;      Params:         0       0       0       0       0       0
  8018 ;;      Locals:         0       0       0       0       0       0
  8019 ;;      Temps:          0       4       0       0       0       0
  8020 ;;      Totals:         0       4       0       0       0       0
  8021 ;;Total ram usage:        4 bytes
  8022 ;; Hardware stack levels used: 1
  8023 ;; Hardware stack levels required when called: 2
  8024 ;; This function calls:
  8025 ;;		_TMR1_ReadTimer
  8026 ;;		___fldiv
  8027 ;;		___flmul
  8028 ;;		___fltol
  8029 ;;		___xxtofl
  8030 ;; This function is called by:
  8031 ;;		_main
  8032 ;;		_TMR1_GATE_ISR
  8033 ;; This function uses a non-reentrant model
  8034 ;;
  8035                           
  8036     06F6                     _mede_height:	
  8037                           ;psect for function _mede_height
  8038                           
  8039     06F6                     i1l3358:	
  8040                           ;incstack = 0
  8041                           ; Regs used in _mede_height: [wreg+status,2+status,0+pclath+cstack]
  8042                           
  8043                           
  8044                           ;main.c: 285:     tempo_voo = TMR1_ReadTimer() * 0.00025;
  8045     06F6  3039               	movlw	57
  8046     06F7  0020               	movlb	0	; select bank0
  8047     06F8  00B1               	movwf	___flmul@b+3
  8048     06F9  3083               	movlw	131
  8049     06FA  00B0               	movwf	___flmul@b+2
  8050     06FB  3012               	movlw	18
  8051     06FC  00AF               	movwf	___flmul@b+1
  8052     06FD  306F               	movlw	111
  8053     06FE  00AE               	movwf	___flmul@b
  8054     06FF  318C  2491  3186   	fcall	_TMR1_ReadTimer
  8055     0702  0870               	movf	?_TMR1_ReadTimer,w
  8056     0703  0020               	movlb	0	; select bank0
  8057     0704  00EA               	movwf	??_mede_height
  8058     0705  0871               	movf	?_TMR1_ReadTimer+1,w
  8059     0706  00EB               	movwf	??_mede_height+1
  8060     0707  01EC               	clrf	??_mede_height+2
  8061     0708  01ED               	clrf	??_mede_height+3
  8062     0709  086D               	movf	??_mede_height+3,w
  8063     070A  00A3               	movwf	___xxtofl@val+3
  8064     070B  086C               	movf	??_mede_height+2,w
  8065     070C  00A2               	movwf	___xxtofl@val+2
  8066     070D  086B               	movf	??_mede_height+1,w
  8067     070E  00A1               	movwf	___xxtofl@val+1
  8068     070F  086A               	movf	??_mede_height,w
  8069     0710  00A0               	movwf	___xxtofl@val
  8070     0711  3000               	movlw	0
  8071     0712  3185  2519  3186   	fcall	___xxtofl
  8072     0715  0020               	movlb	0	; select bank0
  8073     0716  0823               	movf	?___xxtofl+3,w
  8074     0717  00B5               	movwf	___flmul@a+3
  8075     0718  0822               	movf	?___xxtofl+2,w
  8076     0719  00B4               	movwf	___flmul@a+2
  8077     071A  0821               	movf	?___xxtofl+1,w
  8078     071B  00B3               	movwf	___flmul@a+1
  8079     071C  0820               	movf	?___xxtofl,w
  8080     071D  00B2               	movwf	___flmul@a
  8081     071E  3180  2086  3186   	fcall	___flmul
  8082     0721  0020               	movlb	0	; select bank0
  8083     0722  0831               	movf	?___flmul+3,w
  8084     0723  0022               	movlb	2	; select bank2
  8085     0724  00BF               	movwf	(_tempo_voo+3)^(0+256)
  8086     0725  0020               	movlb	0	; select bank0
  8087     0726  0830               	movf	?___flmul+2,w
  8088     0727  0022               	movlb	2	; select bank2
  8089     0728  00BE               	movwf	(_tempo_voo+2)^(0+256)
  8090     0729  0020               	movlb	0	; select bank0
  8091     072A  082F               	movf	?___flmul+1,w
  8092     072B  0022               	movlb	2	; select bank2
  8093     072C  00BD               	movwf	(_tempo_voo+1)^(0+256)
  8094     072D  0020               	movlb	0	; select bank0
  8095     072E  082E               	movf	?___flmul,w
  8096     072F  0022               	movlb	2	; select bank2
  8097     0730  00BC               	movwf	_tempo_voo^(0+256)
  8098                           
  8099                           ;main.c: 286:     height = (tempo_voo * 340)/2;
  8100     0731  083F               	movf	(_tempo_voo+3)^(0+256),w
  8101     0732  0020               	movlb	0	; select bank0
  8102     0733  00B5               	movwf	___flmul@a+3
  8103     0734  0022               	movlb	2	; select bank2
  8104     0735  083E               	movf	(_tempo_voo+2)^(0+256),w
  8105     0736  0020               	movlb	0	; select bank0
  8106     0737  00B4               	movwf	___flmul@a+2
  8107     0738  0022               	movlb	2	; select bank2
  8108     0739  083D               	movf	(_tempo_voo+1)^(0+256),w
  8109     073A  0020               	movlb	0	; select bank0
  8110     073B  00B3               	movwf	___flmul@a+1
  8111     073C  0022               	movlb	2	; select bank2
  8112     073D  083C               	movf	_tempo_voo^(0+256),w
  8113     073E  0020               	movlb	0	; select bank0
  8114     073F  00B2               	movwf	___flmul@a
  8115     0740  3043               	movlw	67
  8116     0741  00B1               	movwf	___flmul@b+3
  8117     0742  30AA               	movlw	170
  8118     0743  00B0               	movwf	___flmul@b+2
  8119     0744  3000               	movlw	0
  8120     0745  00AF               	movwf	___flmul@b+1
  8121     0746  3000               	movlw	0
  8122     0747  00AE               	movwf	___flmul@b
  8123     0748  3180  2086  3186   	fcall	___flmul
  8124     074B  0020               	movlb	0	; select bank0
  8125     074C  0831               	movf	?___flmul+3,w
  8126     074D  00CF               	movwf	___fldiv@b+3
  8127     074E  0830               	movf	?___flmul+2,w
  8128     074F  00CE               	movwf	___fldiv@b+2
  8129     0750  082F               	movf	?___flmul+1,w
  8130     0751  00CD               	movwf	___fldiv@b+1
  8131     0752  082E               	movf	?___flmul,w
  8132     0753  00CC               	movwf	___fldiv@b
  8133     0754  3040               	movlw	64
  8134     0755  00CB               	movwf	___fldiv@a+3
  8135     0756  3000               	movlw	0
  8136     0757  00CA               	movwf	___fldiv@a+2
  8137     0758  3000               	movlw	0
  8138     0759  00C9               	movwf	___fldiv@a+1
  8139     075A  3000               	movlw	0
  8140     075B  00C8               	movwf	___fldiv@a
  8141     075C  3182  22C1  3186   	fcall	___fldiv
  8142     075F  0020               	movlb	0	; select bank0
  8143     0760  084B               	movf	?___fldiv+3,w
  8144     0761  00E5               	movwf	___fltol@f1+3
  8145     0762  084A               	movf	?___fldiv+2,w
  8146     0763  00E4               	movwf	___fltol@f1+2
  8147     0764  0849               	movf	?___fldiv+1,w
  8148     0765  00E3               	movwf	___fltol@f1+1
  8149     0766  0848               	movf	?___fldiv,w
  8150     0767  00E2               	movwf	___fltol@f1
  8151     0768  3187  2784  3186   	fcall	___fltol
  8152     076B  0020               	movlb	0	; select bank0
  8153     076C  0863               	movf	?___fltol+1,w
  8154     076D  0021               	movlb	1	; select bank1
  8155     076E  00AB               	movwf	(_height+1)^(0+128)
  8156     076F  0020               	movlb	0	; select bank0
  8157     0770  0862               	movf	?___fltol,w
  8158     0771  0021               	movlb	1	; select bank1
  8159     0772  00AA               	movwf	_height^(0+128)
  8160     0773                     i1l3360:
  8161                           
  8162                           ;main.c: 287:     balldist = height/2;
  8163     0773  082B               	movf	(_height+1)^(0+128),w
  8164     0774  0020               	movlb	0	; select bank0
  8165     0775  00EB               	movwf	??_mede_height+1
  8166     0776  0021               	movlb	1	; select bank1
  8167     0777  082A               	movf	_height^(0+128),w
  8168     0778  0020               	movlb	0	; select bank0
  8169     0779  00EA               	movwf	??_mede_height
  8170     077A  36EB               	lsrf	??_mede_height+1,f
  8171     077B  0CEA               	rrf	??_mede_height,f
  8172     077C  086A               	movf	??_mede_height,w
  8173     077D  0021               	movlb	1	; select bank1
  8174     077E  00BA               	movwf	_balldist^(0+128)
  8175     077F  0020               	movlb	0	; select bank0
  8176     0780  086B               	movf	??_mede_height+1,w
  8177     0781  0021               	movlb	1	; select bank1
  8178     0782  00BB               	movwf	(_balldist+1)^(0+128)
  8179     0783                     i1l821:
  8180     0783  0008               	return
  8181     0784                     __end_of_mede_height:
  8182                           
  8183                           	psect	text52
  8184     0519                     __ptext52:	
  8185 ;; *************** function ___xxtofl *****************
  8186 ;; Defined at:
  8187 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\xxtofl.c"
  8188 ;; Parameters:    Size  Location     Type
  8189 ;;  sign            1    wreg     unsigned char 
  8190 ;;  val             4    0[BANK0 ] long 
  8191 ;; Auto vars:     Size  Location     Type
  8192 ;;  sign            1    8[BANK0 ] unsigned char 
  8193 ;;  arg             4   10[BANK0 ] unsigned long 
  8194 ;;  exp             1    9[BANK0 ] unsigned char 
  8195 ;; Return value:  Size  Location     Type
  8196 ;;                  4    0[BANK0 ] unsigned char 
  8197 ;; Registers used:
  8198 ;;		wreg, status,2, status,0
  8199 ;; Tracked objects:
  8200 ;;		On entry : 0/0
  8201 ;;		On exit  : 0/0
  8202 ;;		Unchanged: 0/0
  8203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8204 ;;      Params:         0       4       0       0       0       0
  8205 ;;      Locals:         0       6       0       0       0       0
  8206 ;;      Temps:          0       4       0       0       0       0
  8207 ;;      Totals:         0      14       0       0       0       0
  8208 ;;Total ram usage:       14 bytes
  8209 ;; Hardware stack levels used: 1
  8210 ;; This function calls:
  8211 ;;		Nothing
  8212 ;; This function is called by:
  8213 ;;		_mede_height
  8214 ;;		_calculaTemp
  8215 ;; This function uses a non-reentrant model
  8216 ;;
  8217                           
  8218     0519                     ___xxtofl:	
  8219                           ;psect for function ___xxtofl
  8220                           
  8221                           
  8222                           ;incstack = 0
  8223                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  8224                           ;___xxtofl@sign stored from wreg
  8225     0519  0020               	movlb	0	; select bank0
  8226     051A  00A8               	movwf	___xxtofl@sign
  8227     051B                     i1l3114:
  8228     051B  0828               	movf	___xxtofl@sign,w
  8229     051C  1903               	btfsc	3,2
  8230     051D  2D1F               	goto	u269_21
  8231     051E  2D20               	goto	u269_20
  8232     051F                     u269_21:
  8233     051F  2D34               	goto	i1l3120
  8234     0520                     u269_20:
  8235     0520                     i1l3116:
  8236     0520  1FA3               	btfss	___xxtofl@val+3,7
  8237     0521  2D23               	goto	u270_21
  8238     0522  2D24               	goto	u270_20
  8239     0523                     u270_21:
  8240     0523  2D34               	goto	i1l3120
  8241     0524                     u270_20:
  8242     0524                     i1l3118:
  8243     0524  0920               	comf	___xxtofl@val,w
  8244     0525  00AA               	movwf	___xxtofl@arg
  8245     0526  0921               	comf	___xxtofl@val+1,w
  8246     0527  00AB               	movwf	___xxtofl@arg+1
  8247     0528  0922               	comf	___xxtofl@val+2,w
  8248     0529  00AC               	movwf	___xxtofl@arg+2
  8249     052A  0923               	comf	___xxtofl@val+3,w
  8250     052B  00AD               	movwf	___xxtofl@arg+3
  8251     052C  0AAA               	incf	___xxtofl@arg,f
  8252     052D  1903               	skipnz
  8253     052E  0AAB               	incf	___xxtofl@arg+1,f
  8254     052F  1903               	skipnz
  8255     0530  0AAC               	incf	___xxtofl@arg+2,f
  8256     0531  1903               	skipnz
  8257     0532  0AAD               	incf	___xxtofl@arg+3,f
  8258     0533  2D3C               	goto	i1l1421
  8259     0534                     i1l3120:
  8260     0534  0823               	movf	___xxtofl@val+3,w
  8261     0535  00AD               	movwf	___xxtofl@arg+3
  8262     0536  0822               	movf	___xxtofl@val+2,w
  8263     0537  00AC               	movwf	___xxtofl@arg+2
  8264     0538  0821               	movf	___xxtofl@val+1,w
  8265     0539  00AB               	movwf	___xxtofl@arg+1
  8266     053A  0820               	movf	___xxtofl@val,w
  8267     053B  00AA               	movwf	___xxtofl@arg
  8268     053C                     i1l1421:
  8269     053C  0823               	movf	___xxtofl@val+3,w
  8270     053D  0422               	iorwf	___xxtofl@val+2,w
  8271     053E  0421               	iorwf	___xxtofl@val+1,w
  8272     053F  0420               	iorwf	___xxtofl@val,w
  8273     0540  1D03               	skipz
  8274     0541  2D43               	goto	u271_21
  8275     0542  2D44               	goto	u271_20
  8276     0543                     u271_21:
  8277     0543  2D4D               	goto	i1l3126
  8278     0544                     u271_20:
  8279     0544                     i1l3122:
  8280     0544  3000               	movlw	0
  8281     0545  00A3               	movwf	?___xxtofl+3
  8282     0546  3000               	movlw	0
  8283     0547  00A2               	movwf	?___xxtofl+2
  8284     0548  3000               	movlw	0
  8285     0549  00A1               	movwf	?___xxtofl+1
  8286     054A  3000               	movlw	0
  8287     054B  00A0               	movwf	?___xxtofl
  8288     054C  2DC3               	goto	i1l1423
  8289     054D                     i1l3126:
  8290     054D  3096               	movlw	150
  8291     054E  00A9               	movwf	___xxtofl@exp
  8292     054F  2D5B               	goto	i1l3130
  8293     0550                     i1l3128:
  8294     0550  3001               	movlw	1
  8295     0551  00A4               	movwf	??___xxtofl
  8296     0552  0824               	movf	??___xxtofl,w
  8297     0553  07A9               	addwf	___xxtofl@exp,f
  8298     0554  3001               	movlw	1
  8299     0555                     u272_25:
  8300     0555  36AD               	lsrf	___xxtofl@arg+3,f
  8301     0556  0CAC               	rrf	___xxtofl@arg+2,f
  8302     0557  0CAB               	rrf	___xxtofl@arg+1,f
  8303     0558  0CAA               	rrf	___xxtofl@arg,f
  8304     0559  0B89               	decfsz	9,f
  8305     055A  2D55               	goto	u272_25
  8306     055B                     i1l3130:
  8307     055B  30FE               	movlw	254
  8308     055C  052D               	andwf	___xxtofl@arg+3,w
  8309     055D  1D03               	btfss	3,2
  8310     055E  2D60               	goto	u273_21
  8311     055F  2D61               	goto	u273_20
  8312     0560                     u273_21:
  8313     0560  2D50               	goto	i1l3128
  8314     0561                     u273_20:
  8315     0561  2D75               	goto	i1l1427
  8316     0562                     i1l3132:
  8317     0562  3001               	movlw	1
  8318     0563  00A4               	movwf	??___xxtofl
  8319     0564  0824               	movf	??___xxtofl,w
  8320     0565  07A9               	addwf	___xxtofl@exp,f
  8321     0566                     i1l3134:
  8322     0566  3001               	movlw	1
  8323     0567  07AA               	addwf	___xxtofl@arg,f
  8324     0568  3000               	movlw	0
  8325     0569  3DAB               	addwfc	___xxtofl@arg+1,f
  8326     056A  3000               	movlw	0
  8327     056B  3DAC               	addwfc	___xxtofl@arg+2,f
  8328     056C  3000               	movlw	0
  8329     056D  3DAD               	addwfc	___xxtofl@arg+3,f
  8330     056E                     i1l3136:
  8331     056E  3001               	movlw	1
  8332     056F                     u274_25:
  8333     056F  36AD               	lsrf	___xxtofl@arg+3,f
  8334     0570  0CAC               	rrf	___xxtofl@arg+2,f
  8335     0571  0CAB               	rrf	___xxtofl@arg+1,f
  8336     0572  0CAA               	rrf	___xxtofl@arg,f
  8337     0573  0B89               	decfsz	9,f
  8338     0574  2D6F               	goto	u274_25
  8339     0575                     i1l1427:
  8340     0575  30FF               	movlw	255
  8341     0576  052D               	andwf	___xxtofl@arg+3,w
  8342     0577  1D03               	btfss	3,2
  8343     0578  2D7A               	goto	u275_21
  8344     0579  2D7B               	goto	u275_20
  8345     057A                     u275_21:
  8346     057A  2D62               	goto	i1l3132
  8347     057B                     u275_20:
  8348     057B  2D85               	goto	i1l3140
  8349     057C                     i1l3138:
  8350     057C  3001               	movlw	1
  8351     057D  02A9               	subwf	___xxtofl@exp,f
  8352     057E  3001               	movlw	1
  8353     057F                     u276_25:
  8354     057F  35AA               	lslf	___xxtofl@arg,f
  8355     0580  0DAB               	rlf	___xxtofl@arg+1,f
  8356     0581  0DAC               	rlf	___xxtofl@arg+2,f
  8357     0582  0DAD               	rlf	___xxtofl@arg+3,f
  8358     0583  0B89               	decfsz	9,f
  8359     0584  2D7F               	goto	u276_25
  8360     0585                     i1l3140:
  8361     0585  1BAC               	btfsc	___xxtofl@arg+2,7
  8362     0586  2D88               	goto	u277_21
  8363     0587  2D89               	goto	u277_20
  8364     0588                     u277_21:
  8365     0588  2D8F               	goto	i1l1434
  8366     0589                     u277_20:
  8367     0589                     i1l3142:
  8368     0589  3002               	movlw	2
  8369     058A  0229               	subwf	___xxtofl@exp,w
  8370     058B  1803               	skipnc
  8371     058C  2D8E               	goto	u278_21
  8372     058D  2D8F               	goto	u278_20
  8373     058E                     u278_21:
  8374     058E  2D7C               	goto	i1l3138
  8375     058F                     u278_20:
  8376     058F                     i1l1434:
  8377     058F  1829               	btfsc	___xxtofl@exp,0
  8378     0590  2D92               	goto	u279_21
  8379     0591  2D93               	goto	u279_20
  8380     0592                     u279_21:
  8381     0592  2D9B               	goto	i1l1435
  8382     0593                     u279_20:
  8383     0593                     i1l3144:
  8384     0593  30FF               	movlw	255
  8385     0594  05AA               	andwf	___xxtofl@arg,f
  8386     0595  30FF               	movlw	255
  8387     0596  05AB               	andwf	___xxtofl@arg+1,f
  8388     0597  307F               	movlw	127
  8389     0598  05AC               	andwf	___xxtofl@arg+2,f
  8390     0599  30FF               	movlw	255
  8391     059A  05AD               	andwf	___xxtofl@arg+3,f
  8392     059B                     i1l1435:
  8393     059B  1003               	clrc
  8394     059C  0CA9               	rrf	___xxtofl@exp,f
  8395     059D                     i1l3146:
  8396     059D  0829               	movf	___xxtofl@exp,w
  8397     059E  00A4               	movwf	??___xxtofl
  8398     059F  01A5               	clrf	??___xxtofl+1
  8399     05A0  01A6               	clrf	??___xxtofl+2
  8400     05A1  01A7               	clrf	??___xxtofl+3
  8401     05A2  3018               	movlw	24
  8402     05A3                     u280_25:
  8403     05A3  35A4               	lslf	??___xxtofl,f
  8404     05A4  0DA5               	rlf	??___xxtofl+1,f
  8405     05A5  0DA6               	rlf	??___xxtofl+2,f
  8406     05A6  0DA7               	rlf	??___xxtofl+3,f
  8407     05A7                     u280_20:
  8408     05A7  0B89               	decfsz	9,f
  8409     05A8  2DA3               	goto	u280_25
  8410     05A9  0824               	movf	??___xxtofl,w
  8411     05AA  04AA               	iorwf	___xxtofl@arg,f
  8412     05AB  0825               	movf	??___xxtofl+1,w
  8413     05AC  04AB               	iorwf	___xxtofl@arg+1,f
  8414     05AD  0826               	movf	??___xxtofl+2,w
  8415     05AE  04AC               	iorwf	___xxtofl@arg+2,f
  8416     05AF  0827               	movf	??___xxtofl+3,w
  8417     05B0  04AD               	iorwf	___xxtofl@arg+3,f
  8418     05B1                     i1l3148:
  8419     05B1  0828               	movf	___xxtofl@sign,w
  8420     05B2  1903               	btfsc	3,2
  8421     05B3  2DB5               	goto	u281_21
  8422     05B4  2DB6               	goto	u281_20
  8423     05B5                     u281_21:
  8424     05B5  2DBB               	goto	i1l3154
  8425     05B6                     u281_20:
  8426     05B6                     i1l3150:
  8427     05B6  1FA3               	btfss	___xxtofl@val+3,7
  8428     05B7  2DB9               	goto	u282_21
  8429     05B8  2DBA               	goto	u282_20
  8430     05B9                     u282_21:
  8431     05B9  2DBB               	goto	i1l3154
  8432     05BA                     u282_20:
  8433     05BA                     i1l3152:
  8434     05BA  17AD               	bsf	___xxtofl@arg+3,7
  8435     05BB                     i1l3154:
  8436     05BB  082D               	movf	___xxtofl@arg+3,w
  8437     05BC  00A3               	movwf	?___xxtofl+3
  8438     05BD  082C               	movf	___xxtofl@arg+2,w
  8439     05BE  00A2               	movwf	?___xxtofl+2
  8440     05BF  082B               	movf	___xxtofl@arg+1,w
  8441     05C0  00A1               	movwf	?___xxtofl+1
  8442     05C1  082A               	movf	___xxtofl@arg,w
  8443     05C2  00A0               	movwf	?___xxtofl
  8444     05C3                     i1l1423:
  8445     05C3  0008               	return
  8446     05C4                     __end_of___xxtofl:
  8447                           
  8448                           	psect	text53
  8449     0784                     __ptext53:	
  8450 ;; *************** function ___fltol *****************
  8451 ;; Defined at:
  8452 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\fltol.c"
  8453 ;; Parameters:    Size  Location     Type
  8454 ;;  f1              4   66[BANK0 ] unsigned char 
  8455 ;; Auto vars:     Size  Location     Type
  8456 ;;  exp1            1   12[COMMON] unsigned char 
  8457 ;;  sign1           1   11[COMMON] unsigned char 
  8458 ;; Return value:  Size  Location     Type
  8459 ;;                  4   66[BANK0 ] long 
  8460 ;; Registers used:
  8461 ;;		wreg, status,2, status,0
  8462 ;; Tracked objects:
  8463 ;;		On entry : 0/0
  8464 ;;		On exit  : 0/0
  8465 ;;		Unchanged: 0/0
  8466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8467 ;;      Params:         0       4       0       0       0       0
  8468 ;;      Locals:         2       0       0       0       0       0
  8469 ;;      Temps:          0       4       0       0       0       0
  8470 ;;      Totals:         2       8       0       0       0       0
  8471 ;;Total ram usage:       10 bytes
  8472 ;; Hardware stack levels used: 1
  8473 ;; This function calls:
  8474 ;;		Nothing
  8475 ;; This function is called by:
  8476 ;;		_mede_height
  8477 ;;		_envia_Tx
  8478 ;; This function uses a non-reentrant model
  8479 ;;
  8480                           
  8481     0784                     ___fltol:	
  8482                           ;psect for function ___fltol
  8483                           
  8484     0784                     i1l2772:	
  8485                           ;incstack = 0
  8486                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  8487                           
  8488     0784  1003               	clrc
  8489     0785  0020               	movlb	0	; select bank0
  8490     0786  0D64               	rlf	___fltol@f1+2,w
  8491     0787  0D65               	rlf	___fltol@f1+3,w
  8492     0788  00FC               	movwf	___fltol@exp1
  8493     0789  087C               	movf	___fltol@exp1,w
  8494     078A  1D03               	btfss	3,2
  8495     078B  2F8D               	goto	u197_21
  8496     078C  2F8E               	goto	u197_20
  8497     078D                     u197_21:
  8498     078D  2F97               	goto	i1l2778
  8499     078E                     u197_20:
  8500     078E                     i1l2774:
  8501     078E  3000               	movlw	0
  8502     078F  00E5               	movwf	?___fltol+3
  8503     0790  3000               	movlw	0
  8504     0791  00E4               	movwf	?___fltol+2
  8505     0792  3000               	movlw	0
  8506     0793  00E3               	movwf	?___fltol+1
  8507     0794  3000               	movlw	0
  8508     0795  00E2               	movwf	?___fltol
  8509     0796  2FF4               	goto	i1l1174
  8510     0797                     i1l2778:
  8511     0797  0862               	movf	___fltol@f1,w
  8512     0798  00E6               	movwf	??___fltol
  8513     0799  0863               	movf	___fltol@f1+1,w
  8514     079A  00E7               	movwf	??___fltol+1
  8515     079B  0864               	movf	___fltol@f1+2,w
  8516     079C  00E8               	movwf	??___fltol+2
  8517     079D  0865               	movf	___fltol@f1+3,w
  8518     079E  00E9               	movwf	??___fltol+3
  8519     079F  301F               	movlw	31
  8520     07A0                     u198_25:
  8521     07A0  36E9               	lsrf	??___fltol+3,f
  8522     07A1  0CE8               	rrf	??___fltol+2,f
  8523     07A2  0CE7               	rrf	??___fltol+1,f
  8524     07A3  0CE6               	rrf	??___fltol,f
  8525     07A4                     u198_20:
  8526     07A4  0B89               	decfsz	9,f
  8527     07A5  2FA0               	goto	u198_25
  8528     07A6  0866               	movf	??___fltol,w
  8529     07A7  00FB               	movwf	___fltol@sign1
  8530     07A8                     i1l2780:
  8531     07A8  17E4               	bsf	___fltol@f1+2,7
  8532     07A9                     i1l2782:
  8533     07A9  30FF               	movlw	255
  8534     07AA  05E2               	andwf	___fltol@f1,f
  8535     07AB  30FF               	movlw	255
  8536     07AC  05E3               	andwf	___fltol@f1+1,f
  8537     07AD  30FF               	movlw	255
  8538     07AE  05E4               	andwf	___fltol@f1+2,f
  8539     07AF  3000               	movlw	0
  8540     07B0  05E5               	andwf	___fltol@f1+3,f
  8541     07B1                     i1l2784:
  8542     07B1  3096               	movlw	150
  8543     07B2  02FC               	subwf	___fltol@exp1,f
  8544     07B3                     i1l2786:
  8545     07B3  1FFC               	btfss	___fltol@exp1,7
  8546     07B4  2FB6               	goto	u199_21
  8547     07B5  2FB7               	goto	u199_20
  8548     07B6                     u199_21:
  8549     07B6  2FCF               	goto	i1l2796
  8550     07B7                     u199_20:
  8551     07B7                     i1l2788:
  8552     07B7  087C               	movf	___fltol@exp1,w
  8553     07B8  3A80               	xorlw	128
  8554     07B9  3E97               	addlw	151
  8555     07BA  1803               	skipnc
  8556     07BB  2FBD               	goto	u200_21
  8557     07BC  2FBE               	goto	u200_20
  8558     07BD                     u200_21:
  8559     07BD  2FBF               	goto	i1l2794
  8560     07BE                     u200_20:
  8561     07BE  2F8E               	goto	i1l2774
  8562     07BF                     i1l2794:
  8563     07BF  3001               	movlw	1
  8564     07C0                     u201_25:
  8565     07C0  36E5               	lsrf	___fltol@f1+3,f
  8566     07C1  0CE4               	rrf	___fltol@f1+2,f
  8567     07C2  0CE3               	rrf	___fltol@f1+1,f
  8568     07C3  0CE2               	rrf	___fltol@f1,f
  8569     07C4  0B89               	decfsz	9,f
  8570     07C5  2FC0               	goto	u201_25
  8571     07C6  3001               	movlw	1
  8572     07C7  00E6               	movwf	??___fltol
  8573     07C8  0866               	movf	??___fltol,w
  8574     07C9  07FC               	addwf	___fltol@exp1,f
  8575     07CA  1D03               	btfss	3,2
  8576     07CB  2FCD               	goto	u202_21
  8577     07CC  2FCE               	goto	u202_20
  8578     07CD                     u202_21:
  8579     07CD  2FBF               	goto	i1l2794
  8580     07CE                     u202_20:
  8581     07CE  2FE4               	goto	i1l2804
  8582     07CF                     i1l2796:
  8583     07CF  3020               	movlw	32
  8584     07D0  027C               	subwf	___fltol@exp1,w
  8585     07D1  1C03               	skipc
  8586     07D2  2FD4               	goto	u203_21
  8587     07D3  2FD5               	goto	u203_20
  8588     07D4                     u203_21:
  8589     07D4  2FDF               	goto	i1l1181
  8590     07D5                     u203_20:
  8591     07D5  2F8E               	goto	i1l2774
  8592     07D6                     i1l2802:
  8593     07D6  3001               	movlw	1
  8594     07D7                     u204_25:
  8595     07D7  35E2               	lslf	___fltol@f1,f
  8596     07D8  0DE3               	rlf	___fltol@f1+1,f
  8597     07D9  0DE4               	rlf	___fltol@f1+2,f
  8598     07DA  0DE5               	rlf	___fltol@f1+3,f
  8599     07DB  0B89               	decfsz	9,f
  8600     07DC  2FD7               	goto	u204_25
  8601     07DD  3001               	movlw	1
  8602     07DE  02FC               	subwf	___fltol@exp1,f
  8603     07DF                     i1l1181:
  8604     07DF  087C               	movf	___fltol@exp1,w
  8605     07E0  1D03               	btfss	3,2
  8606     07E1  2FE3               	goto	u205_21
  8607     07E2  2FE4               	goto	u205_20
  8608     07E3                     u205_21:
  8609     07E3  2FD6               	goto	i1l2802
  8610     07E4                     u205_20:
  8611     07E4                     i1l2804:
  8612     07E4  087B               	movf	___fltol@sign1,w
  8613     07E5  1903               	btfsc	3,2
  8614     07E6  2FE8               	goto	u206_21
  8615     07E7  2FE9               	goto	u206_20
  8616     07E8                     u206_21:
  8617     07E8  2FF4               	goto	i1l1184
  8618     07E9                     u206_20:
  8619     07E9                     i1l2806:
  8620     07E9  09E2               	comf	___fltol@f1,f
  8621     07EA  09E3               	comf	___fltol@f1+1,f
  8622     07EB  09E4               	comf	___fltol@f1+2,f
  8623     07EC  09E5               	comf	___fltol@f1+3,f
  8624     07ED  0AE2               	incf	___fltol@f1,f
  8625     07EE  1903               	skipnz
  8626     07EF  0AE3               	incf	___fltol@f1+1,f
  8627     07F0  1903               	skipnz
  8628     07F1  0AE4               	incf	___fltol@f1+2,f
  8629     07F2  1903               	skipnz
  8630     07F3  0AE5               	incf	___fltol@f1+3,f
  8631     07F4                     i1l1184:
  8632     07F4                     i1l1174:
  8633     07F4  0008               	return
  8634     07F5                     __end_of___fltol:
  8635                           
  8636                           	psect	text54
  8637     0086                     __ptext54:	
  8638 ;; *************** function ___flmul *****************
  8639 ;; Defined at:
  8640 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcmul.c"
  8641 ;; Parameters:    Size  Location     Type
  8642 ;;  b               4   14[BANK0 ] long 
  8643 ;;  a               4   18[BANK0 ] long 
  8644 ;; Auto vars:     Size  Location     Type
  8645 ;;  prod            4   34[BANK0 ] struct .
  8646 ;;  grs             4   28[BANK0 ] unsigned long 
  8647 ;;  temp            2   38[BANK0 ] struct .
  8648 ;;  bexp            1   33[BANK0 ] unsigned char 
  8649 ;;  aexp            1   32[BANK0 ] unsigned char 
  8650 ;;  sign            1   27[BANK0 ] unsigned char 
  8651 ;; Return value:  Size  Location     Type
  8652 ;;                  4   14[BANK0 ] unsigned char 
  8653 ;; Registers used:
  8654 ;;		wreg, status,2, status,0, pclath, cstack
  8655 ;; Tracked objects:
  8656 ;;		On entry : 0/0
  8657 ;;		On exit  : 0/0
  8658 ;;		Unchanged: 0/0
  8659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8660 ;;      Params:         0       8       0       0       0       0
  8661 ;;      Locals:         0      13       0       0       0       0
  8662 ;;      Temps:          0       5       0       0       0       0
  8663 ;;      Totals:         0      26       0       0       0       0
  8664 ;;Total ram usage:       26 bytes
  8665 ;; Hardware stack levels used: 1
  8666 ;; Hardware stack levels required when called: 1
  8667 ;; This function calls:
  8668 ;;		__Umul8_16
  8669 ;; This function is called by:
  8670 ;;		_mede_height
  8671 ;;		_envia_Tx
  8672 ;;		_calculaTemp
  8673 ;; This function uses a non-reentrant model
  8674 ;;
  8675                           
  8676     0086                     ___flmul:	
  8677                           ;psect for function ___flmul
  8678                           
  8679     0086                     i1l2974:	
  8680                           ;incstack = 0
  8681                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  8682                           
  8683     0086  0020               	movlb	0	; select bank0
  8684     0087  0831               	movf	___flmul@b+3,w
  8685     0088  3980               	andlw	128
  8686     0089  00BB               	movwf	___flmul@sign
  8687     008A                     i1l2976:
  8688     008A  3531               	lslf	___flmul@b+3,w
  8689     008B  00C1               	movwf	___flmul@bexp
  8690     008C                     i1l2978:
  8691     008C  1FB0               	btfss	___flmul@b+2,7
  8692     008D  288F               	goto	u243_21
  8693     008E  2890               	goto	u243_20
  8694     008F                     u243_21:
  8695     008F  2891               	goto	i1l2982
  8696     0090                     u243_20:
  8697     0090                     i1l2980:
  8698     0090  1441               	bsf	___flmul@bexp,0
  8699     0091                     i1l2982:
  8700     0091  0841               	movf	___flmul@bexp,w
  8701     0092  1903               	btfsc	3,2
  8702     0093  2895               	goto	u244_21
  8703     0094  2896               	goto	u244_20
  8704     0095                     u244_21:
  8705     0095  28A5               	goto	i1l2990
  8706     0096                     u244_20:
  8707     0096                     i1l2984:
  8708     0096  0A41               	incf	___flmul@bexp,w
  8709     0097  1D03               	btfss	3,2
  8710     0098  289A               	goto	u245_21
  8711     0099  289B               	goto	u245_20
  8712     009A                     u245_21:
  8713     009A  28A3               	goto	i1l2988
  8714     009B                     u245_20:
  8715     009B                     i1l2986:
  8716     009B  3000               	movlw	0
  8717     009C  00B1               	movwf	___flmul@b+3
  8718     009D  3000               	movlw	0
  8719     009E  00B0               	movwf	___flmul@b+2
  8720     009F  3000               	movlw	0
  8721     00A0  00AF               	movwf	___flmul@b+1
  8722     00A1  3000               	movlw	0
  8723     00A2  00AE               	movwf	___flmul@b
  8724     00A3                     i1l2988:
  8725     00A3  17B0               	bsf	___flmul@b+2,7
  8726     00A4  28AD               	goto	i1l2992
  8727     00A5                     i1l2990:
  8728     00A5  3000               	movlw	0
  8729     00A6  00B1               	movwf	___flmul@b+3
  8730     00A7  3000               	movlw	0
  8731     00A8  00B0               	movwf	___flmul@b+2
  8732     00A9  3000               	movlw	0
  8733     00AA  00AF               	movwf	___flmul@b+1
  8734     00AB  3000               	movlw	0
  8735     00AC  00AE               	movwf	___flmul@b
  8736     00AD                     i1l2992:
  8737     00AD  0835               	movf	___flmul@a+3,w
  8738     00AE  3980               	andlw	128
  8739     00AF  00B6               	movwf	??___flmul
  8740     00B0  0836               	movf	??___flmul,w
  8741     00B1  06BB               	xorwf	___flmul@sign,f
  8742     00B2                     i1l2994:
  8743     00B2  3535               	lslf	___flmul@a+3,w
  8744     00B3  00C0               	movwf	___flmul@aexp
  8745     00B4                     i1l2996:
  8746     00B4  1FB4               	btfss	___flmul@a+2,7
  8747     00B5  28B7               	goto	u246_21
  8748     00B6  28B8               	goto	u246_20
  8749     00B7                     u246_21:
  8750     00B7  28B9               	goto	i1l3000
  8751     00B8                     u246_20:
  8752     00B8                     i1l2998:
  8753     00B8  1440               	bsf	___flmul@aexp,0
  8754     00B9                     i1l3000:
  8755     00B9  0840               	movf	___flmul@aexp,w
  8756     00BA  1903               	btfsc	3,2
  8757     00BB  28BD               	goto	u247_21
  8758     00BC  28BE               	goto	u247_20
  8759     00BD                     u247_21:
  8760     00BD  28CD               	goto	i1l3008
  8761     00BE                     u247_20:
  8762     00BE                     i1l3002:
  8763     00BE  0A40               	incf	___flmul@aexp,w
  8764     00BF  1D03               	btfss	3,2
  8765     00C0  28C2               	goto	u248_21
  8766     00C1  28C3               	goto	u248_20
  8767     00C2                     u248_21:
  8768     00C2  28CB               	goto	i1l3006
  8769     00C3                     u248_20:
  8770     00C3                     i1l3004:
  8771     00C3  3000               	movlw	0
  8772     00C4  00B5               	movwf	___flmul@a+3
  8773     00C5  3000               	movlw	0
  8774     00C6  00B4               	movwf	___flmul@a+2
  8775     00C7  3000               	movlw	0
  8776     00C8  00B3               	movwf	___flmul@a+1
  8777     00C9  3000               	movlw	0
  8778     00CA  00B2               	movwf	___flmul@a
  8779     00CB                     i1l3006:
  8780     00CB  17B4               	bsf	___flmul@a+2,7
  8781     00CC  28D5               	goto	i1l3010
  8782     00CD                     i1l3008:
  8783     00CD  3000               	movlw	0
  8784     00CE  00B5               	movwf	___flmul@a+3
  8785     00CF  3000               	movlw	0
  8786     00D0  00B4               	movwf	___flmul@a+2
  8787     00D1  3000               	movlw	0
  8788     00D2  00B3               	movwf	___flmul@a+1
  8789     00D3  3000               	movlw	0
  8790     00D4  00B2               	movwf	___flmul@a
  8791     00D5                     i1l3010:
  8792     00D5  0840               	movf	___flmul@aexp,w
  8793     00D6  1903               	btfsc	3,2
  8794     00D7  28D9               	goto	u249_21
  8795     00D8  28DA               	goto	u249_20
  8796     00D9                     u249_21:
  8797     00D9  28DF               	goto	i1l3014
  8798     00DA                     u249_20:
  8799     00DA                     i1l3012:
  8800     00DA  0841               	movf	___flmul@bexp,w
  8801     00DB  1D03               	btfss	3,2
  8802     00DC  28DE               	goto	u250_21
  8803     00DD  28DF               	goto	u250_20
  8804     00DE                     u250_21:
  8805     00DE  28E8               	goto	i1l3018
  8806     00DF                     u250_20:
  8807     00DF                     i1l3014:
  8808     00DF  3000               	movlw	0
  8809     00E0  00B1               	movwf	?___flmul+3
  8810     00E1  3000               	movlw	0
  8811     00E2  00B0               	movwf	?___flmul+2
  8812     00E3  3000               	movlw	0
  8813     00E4  00AF               	movwf	?___flmul+1
  8814     00E5  3000               	movlw	0
  8815     00E6  00AE               	movwf	?___flmul
  8816     00E7  2AC0               	goto	i1l1377
  8817     00E8                     i1l3018:
  8818     00E8  082E               	movf	___flmul@b,w
  8819     00E9  00F0               	movwf	__Umul8_16@multiplicand
  8820     00EA  0834               	movf	___flmul@a+2,w
  8821     00EB  318D  2596  3180   	fcall	__Umul8_16
  8822     00EE  0871               	movf	?__Umul8_16+1,w
  8823     00EF  0020               	movlb	0	; select bank0
  8824     00F0  00C7               	movwf	___flmul@temp+1
  8825     00F1  0870               	movf	?__Umul8_16,w
  8826     00F2  00C6               	movwf	___flmul@temp
  8827     00F3                     i1l3020:
  8828     00F3  0846               	movf	___flmul@temp,w
  8829     00F4  00B6               	movwf	??___flmul
  8830     00F5  01B7               	clrf	??___flmul+1
  8831     00F6  01B8               	clrf	??___flmul+2
  8832     00F7  01B9               	clrf	??___flmul+3
  8833     00F8  0839               	movf	??___flmul+3,w
  8834     00F9  00BF               	movwf	___flmul@grs+3
  8835     00FA  0838               	movf	??___flmul+2,w
  8836     00FB  00BE               	movwf	___flmul@grs+2
  8837     00FC  0837               	movf	??___flmul+1,w
  8838     00FD  00BD               	movwf	___flmul@grs+1
  8839     00FE  0836               	movf	??___flmul,w
  8840     00FF  00BC               	movwf	___flmul@grs
  8841     0100                     i1l3022:
  8842     0100  0847               	movf	___flmul@temp+1,w
  8843     0101  00B6               	movwf	??___flmul
  8844     0102  01B7               	clrf	??___flmul+1
  8845     0103  01B8               	clrf	??___flmul+2
  8846     0104  01B9               	clrf	??___flmul+3
  8847     0105  0839               	movf	??___flmul+3,w
  8848     0106  00C5               	movwf	___flmul@prod+3
  8849     0107  0838               	movf	??___flmul+2,w
  8850     0108  00C4               	movwf	___flmul@prod+2
  8851     0109  0837               	movf	??___flmul+1,w
  8852     010A  00C3               	movwf	___flmul@prod+1
  8853     010B  0836               	movf	??___flmul,w
  8854     010C  00C2               	movwf	___flmul@prod
  8855     010D  082F               	movf	___flmul@b+1,w
  8856     010E  00F0               	movwf	__Umul8_16@multiplicand
  8857     010F  0833               	movf	___flmul@a+1,w
  8858     0110  318D  2596  3180   	fcall	__Umul8_16
  8859     0113  0871               	movf	?__Umul8_16+1,w
  8860     0114  0020               	movlb	0	; select bank0
  8861     0115  00C7               	movwf	___flmul@temp+1
  8862     0116  0870               	movf	?__Umul8_16,w
  8863     0117  00C6               	movwf	___flmul@temp
  8864     0118                     i1l3024:
  8865     0118  0846               	movf	___flmul@temp,w
  8866     0119  00B6               	movwf	??___flmul
  8867     011A  01B7               	clrf	??___flmul+1
  8868     011B  01B8               	clrf	??___flmul+2
  8869     011C  01B9               	clrf	??___flmul+3
  8870     011D  0836               	movf	??___flmul,w
  8871     011E  07BC               	addwf	___flmul@grs,f
  8872     011F  0837               	movf	??___flmul+1,w
  8873     0120  3DBD               	addwfc	___flmul@grs+1,f
  8874     0121  0838               	movf	??___flmul+2,w
  8875     0122  3DBE               	addwfc	___flmul@grs+2,f
  8876     0123  0839               	movf	??___flmul+3,w
  8877     0124  3DBF               	addwfc	___flmul@grs+3,f
  8878     0125                     i1l3026:
  8879     0125  0847               	movf	___flmul@temp+1,w
  8880     0126  00B6               	movwf	??___flmul
  8881     0127  01B7               	clrf	??___flmul+1
  8882     0128  01B8               	clrf	??___flmul+2
  8883     0129  01B9               	clrf	??___flmul+3
  8884     012A  0836               	movf	??___flmul,w
  8885     012B  07C2               	addwf	___flmul@prod,f
  8886     012C  0837               	movf	??___flmul+1,w
  8887     012D  3DC3               	addwfc	___flmul@prod+1,f
  8888     012E  0838               	movf	??___flmul+2,w
  8889     012F  3DC4               	addwfc	___flmul@prod+2,f
  8890     0130  0839               	movf	??___flmul+3,w
  8891     0131  3DC5               	addwfc	___flmul@prod+3,f
  8892     0132  0830               	movf	___flmul@b+2,w
  8893     0133  00F0               	movwf	__Umul8_16@multiplicand
  8894     0134  0832               	movf	___flmul@a,w
  8895     0135  318D  2596  3180   	fcall	__Umul8_16
  8896     0138  0871               	movf	?__Umul8_16+1,w
  8897     0139  0020               	movlb	0	; select bank0
  8898     013A  00C7               	movwf	___flmul@temp+1
  8899     013B  0870               	movf	?__Umul8_16,w
  8900     013C  00C6               	movwf	___flmul@temp
  8901     013D                     i1l3028:
  8902     013D  0846               	movf	___flmul@temp,w
  8903     013E  00B6               	movwf	??___flmul
  8904     013F  01B7               	clrf	??___flmul+1
  8905     0140  01B8               	clrf	??___flmul+2
  8906     0141  01B9               	clrf	??___flmul+3
  8907     0142  0836               	movf	??___flmul,w
  8908     0143  07BC               	addwf	___flmul@grs,f
  8909     0144  0837               	movf	??___flmul+1,w
  8910     0145  3DBD               	addwfc	___flmul@grs+1,f
  8911     0146  0838               	movf	??___flmul+2,w
  8912     0147  3DBE               	addwfc	___flmul@grs+2,f
  8913     0148  0839               	movf	??___flmul+3,w
  8914     0149  3DBF               	addwfc	___flmul@grs+3,f
  8915     014A                     i1l3030:
  8916     014A  0847               	movf	___flmul@temp+1,w
  8917     014B  00B6               	movwf	??___flmul
  8918     014C  01B7               	clrf	??___flmul+1
  8919     014D  01B8               	clrf	??___flmul+2
  8920     014E  01B9               	clrf	??___flmul+3
  8921     014F  0836               	movf	??___flmul,w
  8922     0150  07C2               	addwf	___flmul@prod,f
  8923     0151  0837               	movf	??___flmul+1,w
  8924     0152  3DC3               	addwfc	___flmul@prod+1,f
  8925     0153  0838               	movf	??___flmul+2,w
  8926     0154  3DC4               	addwfc	___flmul@prod+2,f
  8927     0155  0839               	movf	??___flmul+3,w
  8928     0156  3DC5               	addwfc	___flmul@prod+3,f
  8929     0157                     i1l3032:
  8930     0157  3008               	movlw	8
  8931     0158                     u251_25:
  8932     0158  35BC               	lslf	___flmul@grs,f
  8933     0159  0DBD               	rlf	___flmul@grs+1,f
  8934     015A  0DBE               	rlf	___flmul@grs+2,f
  8935     015B  0DBF               	rlf	___flmul@grs+3,f
  8936     015C  0B89               	decfsz	9,f
  8937     015D  2958               	goto	u251_25
  8938     015E                     i1l3034:
  8939     015E  082F               	movf	___flmul@b+1,w
  8940     015F  00F0               	movwf	__Umul8_16@multiplicand
  8941     0160  0832               	movf	___flmul@a,w
  8942     0161  318D  2596  3180   	fcall	__Umul8_16
  8943     0164  0871               	movf	?__Umul8_16+1,w
  8944     0165  0020               	movlb	0	; select bank0
  8945     0166  00C7               	movwf	___flmul@temp+1
  8946     0167  0870               	movf	?__Umul8_16,w
  8947     0168  00C6               	movwf	___flmul@temp
  8948     0169                     i1l3036:
  8949     0169  0846               	movf	___flmul@temp,w
  8950     016A  07BC               	addwf	___flmul@grs,f
  8951     016B  0847               	movf	___flmul@temp+1,w
  8952     016C  3DBD               	addwfc	___flmul@grs+1,f
  8953     016D  3000               	movlw	0
  8954     016E  3DBE               	addwfc	___flmul@grs+2,f
  8955     016F  3DBF               	addwfc	___flmul@grs+3,f
  8956     0170                     i1l3038:
  8957     0170  082E               	movf	___flmul@b,w
  8958     0171  00F0               	movwf	__Umul8_16@multiplicand
  8959     0172  0833               	movf	___flmul@a+1,w
  8960     0173  318D  2596  3180   	fcall	__Umul8_16
  8961     0176  0871               	movf	?__Umul8_16+1,w
  8962     0177  0020               	movlb	0	; select bank0
  8963     0178  00C7               	movwf	___flmul@temp+1
  8964     0179  0870               	movf	?__Umul8_16,w
  8965     017A  00C6               	movwf	___flmul@temp
  8966     017B                     i1l3040:
  8967     017B  0846               	movf	___flmul@temp,w
  8968     017C  07BC               	addwf	___flmul@grs,f
  8969     017D  0847               	movf	___flmul@temp+1,w
  8970     017E  3DBD               	addwfc	___flmul@grs+1,f
  8971     017F  3000               	movlw	0
  8972     0180  3DBE               	addwfc	___flmul@grs+2,f
  8973     0181  3DBF               	addwfc	___flmul@grs+3,f
  8974     0182                     i1l3042:
  8975     0182  3008               	movlw	8
  8976     0183                     u252_25:
  8977     0183  35BC               	lslf	___flmul@grs,f
  8978     0184  0DBD               	rlf	___flmul@grs+1,f
  8979     0185  0DBE               	rlf	___flmul@grs+2,f
  8980     0186  0DBF               	rlf	___flmul@grs+3,f
  8981     0187  0B89               	decfsz	9,f
  8982     0188  2983               	goto	u252_25
  8983     0189  082E               	movf	___flmul@b,w
  8984     018A  00F0               	movwf	__Umul8_16@multiplicand
  8985     018B  0832               	movf	___flmul@a,w
  8986     018C  318D  2596  3180   	fcall	__Umul8_16
  8987     018F  0871               	movf	?__Umul8_16+1,w
  8988     0190  0020               	movlb	0	; select bank0
  8989     0191  00C7               	movwf	___flmul@temp+1
  8990     0192  0870               	movf	?__Umul8_16,w
  8991     0193  00C6               	movwf	___flmul@temp
  8992     0194                     i1l3044:
  8993     0194  0846               	movf	___flmul@temp,w
  8994     0195  07BC               	addwf	___flmul@grs,f
  8995     0196  0847               	movf	___flmul@temp+1,w
  8996     0197  3DBD               	addwfc	___flmul@grs+1,f
  8997     0198  3000               	movlw	0
  8998     0199  3DBE               	addwfc	___flmul@grs+2,f
  8999     019A  3DBF               	addwfc	___flmul@grs+3,f
  9000     019B                     i1l3046:
  9001     019B  082F               	movf	___flmul@b+1,w
  9002     019C  00F0               	movwf	__Umul8_16@multiplicand
  9003     019D  0834               	movf	___flmul@a+2,w
  9004     019E  318D  2596  3180   	fcall	__Umul8_16
  9005     01A1  0871               	movf	?__Umul8_16+1,w
  9006     01A2  0020               	movlb	0	; select bank0
  9007     01A3  00C7               	movwf	___flmul@temp+1
  9008     01A4  0870               	movf	?__Umul8_16,w
  9009     01A5  00C6               	movwf	___flmul@temp
  9010     01A6  0846               	movf	___flmul@temp,w
  9011     01A7  07C2               	addwf	___flmul@prod,f
  9012     01A8  0847               	movf	___flmul@temp+1,w
  9013     01A9  3DC3               	addwfc	___flmul@prod+1,f
  9014     01AA  3000               	movlw	0
  9015     01AB  3DC4               	addwfc	___flmul@prod+2,f
  9016     01AC  3DC5               	addwfc	___flmul@prod+3,f
  9017     01AD                     i1l3048:
  9018     01AD  0830               	movf	___flmul@b+2,w
  9019     01AE  00F0               	movwf	__Umul8_16@multiplicand
  9020     01AF  0833               	movf	___flmul@a+1,w
  9021     01B0  318D  2596  3180   	fcall	__Umul8_16
  9022     01B3  0871               	movf	?__Umul8_16+1,w
  9023     01B4  0020               	movlb	0	; select bank0
  9024     01B5  00C7               	movwf	___flmul@temp+1
  9025     01B6  0870               	movf	?__Umul8_16,w
  9026     01B7  00C6               	movwf	___flmul@temp
  9027     01B8                     i1l3050:
  9028     01B8  0846               	movf	___flmul@temp,w
  9029     01B9  07C2               	addwf	___flmul@prod,f
  9030     01BA  0847               	movf	___flmul@temp+1,w
  9031     01BB  3DC3               	addwfc	___flmul@prod+1,f
  9032     01BC  3000               	movlw	0
  9033     01BD  3DC4               	addwfc	___flmul@prod+2,f
  9034     01BE  3DC5               	addwfc	___flmul@prod+3,f
  9035     01BF  0830               	movf	___flmul@b+2,w
  9036     01C0  00F0               	movwf	__Umul8_16@multiplicand
  9037     01C1  0834               	movf	___flmul@a+2,w
  9038     01C2  318D  2596  3180   	fcall	__Umul8_16
  9039     01C5  0871               	movf	?__Umul8_16+1,w
  9040     01C6  0020               	movlb	0	; select bank0
  9041     01C7  00C7               	movwf	___flmul@temp+1
  9042     01C8  0870               	movf	?__Umul8_16,w
  9043     01C9  00C6               	movwf	___flmul@temp
  9044     01CA                     i1l3052:
  9045     01CA  0846               	movf	___flmul@temp,w
  9046     01CB  00B6               	movwf	??___flmul
  9047     01CC  0847               	movf	___flmul@temp+1,w
  9048     01CD  00B7               	movwf	??___flmul+1
  9049     01CE  01B8               	clrf	??___flmul+2
  9050     01CF  01B9               	clrf	??___flmul+3
  9051     01D0  3008               	movlw	8
  9052     01D1                     u253_25:
  9053     01D1  35B6               	lslf	??___flmul,f
  9054     01D2  0DB7               	rlf	??___flmul+1,f
  9055     01D3  0DB8               	rlf	??___flmul+2,f
  9056     01D4  0DB9               	rlf	??___flmul+3,f
  9057     01D5                     u253_20:
  9058     01D5  0B89               	decfsz	9,f
  9059     01D6  29D1               	goto	u253_25
  9060     01D7  0836               	movf	??___flmul,w
  9061     01D8  07C2               	addwf	___flmul@prod,f
  9062     01D9  0837               	movf	??___flmul+1,w
  9063     01DA  3DC3               	addwfc	___flmul@prod+1,f
  9064     01DB  0838               	movf	??___flmul+2,w
  9065     01DC  3DC4               	addwfc	___flmul@prod+2,f
  9066     01DD  0839               	movf	??___flmul+3,w
  9067     01DE  3DC5               	addwfc	___flmul@prod+3,f
  9068     01DF                     i1l3054:
  9069     01DF  083C               	movf	___flmul@grs,w
  9070     01E0  00B6               	movwf	??___flmul
  9071     01E1  083D               	movf	___flmul@grs+1,w
  9072     01E2  00B7               	movwf	??___flmul+1
  9073     01E3  083E               	movf	___flmul@grs+2,w
  9074     01E4  00B8               	movwf	??___flmul+2
  9075     01E5  083F               	movf	___flmul@grs+3,w
  9076     01E6  00B9               	movwf	??___flmul+3
  9077     01E7  3018               	movlw	24
  9078     01E8                     u254_25:
  9079     01E8  36B9               	lsrf	??___flmul+3,f
  9080     01E9  0CB8               	rrf	??___flmul+2,f
  9081     01EA  0CB7               	rrf	??___flmul+1,f
  9082     01EB  0CB6               	rrf	??___flmul,f
  9083     01EC                     u254_20:
  9084     01EC  0B89               	decfsz	9,f
  9085     01ED  29E8               	goto	u254_25
  9086     01EE  0836               	movf	??___flmul,w
  9087     01EF  07C2               	addwf	___flmul@prod,f
  9088     01F0  0837               	movf	??___flmul+1,w
  9089     01F1  3DC3               	addwfc	___flmul@prod+1,f
  9090     01F2  0838               	movf	??___flmul+2,w
  9091     01F3  3DC4               	addwfc	___flmul@prod+2,f
  9092     01F4  0839               	movf	??___flmul+3,w
  9093     01F5  3DC5               	addwfc	___flmul@prod+3,f
  9094     01F6                     i1l3056:
  9095     01F6  3008               	movlw	8
  9096     01F7                     u255_25:
  9097     01F7  35BC               	lslf	___flmul@grs,f
  9098     01F8  0DBD               	rlf	___flmul@grs+1,f
  9099     01F9  0DBE               	rlf	___flmul@grs+2,f
  9100     01FA  0DBF               	rlf	___flmul@grs+3,f
  9101     01FB  0B89               	decfsz	9,f
  9102     01FC  29F7               	goto	u255_25
  9103     01FD                     i1l3058:
  9104     01FD  0841               	movf	___flmul@bexp,w
  9105     01FE  0740               	addwf	___flmul@aexp,w
  9106     01FF  00B6               	movwf	??___flmul
  9107     0200  01B7               	clrf	??___flmul+1
  9108     0201  0DB7               	rlf	??___flmul+1,f
  9109     0202  0836               	movf	??___flmul,w
  9110     0203  3E82               	addlw	130
  9111     0204  00C6               	movwf	___flmul@temp
  9112     0205  30FF               	movlw	255
  9113     0206  3D37               	addwfc	??___flmul+1,w
  9114     0207  00C7               	movwf	___flmul@temp+1
  9115     0208  2A20               	goto	i1l3070
  9116     0209                     i1l3060:
  9117     0209  3001               	movlw	1
  9118     020A                     u256_25:
  9119     020A  35C2               	lslf	___flmul@prod,f
  9120     020B  0DC3               	rlf	___flmul@prod+1,f
  9121     020C  0DC4               	rlf	___flmul@prod+2,f
  9122     020D  0DC5               	rlf	___flmul@prod+3,f
  9123     020E  0B89               	decfsz	9,f
  9124     020F  2A0A               	goto	u256_25
  9125     0210                     i1l3062:
  9126     0210  1FBF               	btfss	___flmul@grs+3,7
  9127     0211  2A13               	goto	u257_21
  9128     0212  2A14               	goto	u257_20
  9129     0213                     u257_21:
  9130     0213  2A15               	goto	i1l3066
  9131     0214                     u257_20:
  9132     0214                     i1l3064:
  9133     0214  1442               	bsf	___flmul@prod,0
  9134     0215                     i1l3066:
  9135     0215  3001               	movlw	1
  9136     0216                     u258_25:
  9137     0216  35BC               	lslf	___flmul@grs,f
  9138     0217  0DBD               	rlf	___flmul@grs+1,f
  9139     0218  0DBE               	rlf	___flmul@grs+2,f
  9140     0219  0DBF               	rlf	___flmul@grs+3,f
  9141     021A  0B89               	decfsz	9,f
  9142     021B  2A16               	goto	u258_25
  9143     021C                     i1l3068:
  9144     021C  30FF               	movlw	255
  9145     021D  07C6               	addwf	___flmul@temp,f
  9146     021E  30FF               	movlw	255
  9147     021F  3DC7               	addwfc	___flmul@temp+1,f
  9148     0220                     i1l3070:
  9149     0220  1FC4               	btfss	___flmul@prod+2,7
  9150     0221  2A23               	goto	u259_21
  9151     0222  2A24               	goto	u259_20
  9152     0223                     u259_21:
  9153     0223  2A09               	goto	i1l3060
  9154     0224                     u259_20:
  9155     0224                     i1l3072:
  9156     0224  01C0               	clrf	___flmul@aexp
  9157     0225                     i1l3074:
  9158     0225  1FBF               	btfss	___flmul@grs+3,7
  9159     0226  2A28               	goto	u260_21
  9160     0227  2A29               	goto	u260_20
  9161     0228                     u260_21:
  9162     0228  2A45               	goto	i1l3082
  9163     0229                     u260_20:
  9164     0229                     i1l3076:
  9165     0229  30FF               	movlw	255
  9166     022A  053C               	andwf	___flmul@grs,w
  9167     022B  00B6               	movwf	??___flmul
  9168     022C  30FF               	movlw	255
  9169     022D  053D               	andwf	___flmul@grs+1,w
  9170     022E  00B7               	movwf	??___flmul+1
  9171     022F  30FF               	movlw	255
  9172     0230  053E               	andwf	___flmul@grs+2,w
  9173     0231  00B8               	movwf	??___flmul+2
  9174     0232  307F               	movlw	127
  9175     0233  053F               	andwf	___flmul@grs+3,w
  9176     0234  00B9               	movwf	??___flmul+3
  9177     0235  0839               	movf	??___flmul+3,w
  9178     0236  0438               	iorwf	??___flmul+2,w
  9179     0237  0437               	iorwf	??___flmul+1,w
  9180     0238  0436               	iorwf	??___flmul,w
  9181     0239  1903               	skipnz
  9182     023A  2A3C               	goto	u261_21
  9183     023B  2A3D               	goto	u261_20
  9184     023C                     u261_21:
  9185     023C  2A40               	goto	i1l1383
  9186     023D                     u261_20:
  9187     023D                     i1l3078:
  9188     023D  01C0               	clrf	___flmul@aexp
  9189     023E  0AC0               	incf	___flmul@aexp,f
  9190     023F  2A45               	goto	i1l3082
  9191     0240                     i1l1383:
  9192     0240  1C42               	btfss	___flmul@prod,0
  9193     0241  2A43               	goto	u262_21
  9194     0242  2A44               	goto	u262_20
  9195     0243                     u262_21:
  9196     0243  2A45               	goto	i1l3082
  9197     0244                     u262_20:
  9198     0244  2A3D               	goto	i1l3078
  9199     0245                     i1l3082:
  9200     0245  0840               	movf	___flmul@aexp,w
  9201     0246  1903               	btfsc	3,2
  9202     0247  2A49               	goto	u263_21
  9203     0248  2A4A               	goto	u263_20
  9204     0249                     u263_21:
  9205     0249  2A72               	goto	i1l3092
  9206     024A                     u263_20:
  9207     024A                     i1l3084:
  9208     024A  3001               	movlw	1
  9209     024B  07C2               	addwf	___flmul@prod,f
  9210     024C  3000               	movlw	0
  9211     024D  3DC3               	addwfc	___flmul@prod+1,f
  9212     024E  3000               	movlw	0
  9213     024F  3DC4               	addwfc	___flmul@prod+2,f
  9214     0250  3000               	movlw	0
  9215     0251  3DC5               	addwfc	___flmul@prod+3,f
  9216     0252                     i1l3086:
  9217     0252  1C45               	btfss	___flmul@prod+3,0
  9218     0253  2A55               	goto	u264_21
  9219     0254  2A56               	goto	u264_20
  9220     0255                     u264_21:
  9221     0255  2A72               	goto	i1l3092
  9222     0256                     u264_20:
  9223     0256                     i1l3088:
  9224     0256  0842               	movf	___flmul@prod,w
  9225     0257  00B6               	movwf	??___flmul
  9226     0258  0843               	movf	___flmul@prod+1,w
  9227     0259  00B7               	movwf	??___flmul+1
  9228     025A  0844               	movf	___flmul@prod+2,w
  9229     025B  00B8               	movwf	??___flmul+2
  9230     025C  0845               	movf	___flmul@prod+3,w
  9231     025D  00B9               	movwf	??___flmul+3
  9232     025E  3001               	movlw	1
  9233     025F  00BA               	movwf	??___flmul+4
  9234     0260                     u265_25:
  9235     0260  37B9               	asrf	??___flmul+3,f
  9236     0261  0CB8               	rrf	??___flmul+2,f
  9237     0262  0CB7               	rrf	??___flmul+1,f
  9238     0263  0CB6               	rrf	??___flmul,f
  9239     0264                     u265_20:
  9240     0264  0BBA               	decfsz	??___flmul+4,f
  9241     0265  2A60               	goto	u265_25
  9242     0266  0839               	movf	??___flmul+3,w
  9243     0267  00C5               	movwf	___flmul@prod+3
  9244     0268  0838               	movf	??___flmul+2,w
  9245     0269  00C4               	movwf	___flmul@prod+2
  9246     026A  0837               	movf	??___flmul+1,w
  9247     026B  00C3               	movwf	___flmul@prod+1
  9248     026C  0836               	movf	??___flmul,w
  9249     026D  00C2               	movwf	___flmul@prod
  9250     026E                     i1l3090:
  9251     026E  3001               	movlw	1
  9252     026F  07C6               	addwf	___flmul@temp,f
  9253     0270  3000               	movlw	0
  9254     0271  3DC7               	addwfc	___flmul@temp+1,f
  9255     0272                     i1l3092:
  9256     0272  0847               	movf	___flmul@temp+1,w
  9257     0273  3A80               	xorlw	128
  9258     0274  00B6               	movwf	??___flmul
  9259     0275  3080               	movlw	128
  9260     0276  0236               	subwf	??___flmul,w
  9261     0277  1D03               	skipz
  9262     0278  2A7B               	goto	u266_25
  9263     0279  30FF               	movlw	255
  9264     027A  0246               	subwf	___flmul@temp,w
  9265     027B                     u266_25:
  9266     027B  1C03               	skipc
  9267     027C  2A7E               	goto	u266_21
  9268     027D  2A7F               	goto	u266_20
  9269     027E                     u266_21:
  9270     027E  2A89               	goto	i1l3096
  9271     027F                     u266_20:
  9272     027F                     i1l3094:
  9273     027F  307F               	movlw	127
  9274     0280  0020               	movlb	0	; select bank0
  9275     0281  00C5               	movwf	___flmul@prod+3
  9276     0282  3080               	movlw	128
  9277     0283  00C4               	movwf	___flmul@prod+2
  9278     0284  3000               	movlw	0
  9279     0285  00C3               	movwf	___flmul@prod+1
  9280     0286  3000               	movlw	0
  9281     0287  00C2               	movwf	___flmul@prod
  9282     0288  2AB4               	goto	i1l1389
  9283     0289                     i1l3096:
  9284     0289  0020               	movlb	0	; select bank0
  9285     028A  0847               	movf	___flmul@temp+1,w
  9286     028B  3A80               	xorlw	128
  9287     028C  00B6               	movwf	??___flmul
  9288     028D  3080               	movlw	128
  9289     028E  0236               	subwf	??___flmul,w
  9290     028F  1D03               	skipz
  9291     0290  2A93               	goto	u267_25
  9292     0291  3001               	movlw	1
  9293     0292  0246               	subwf	___flmul@temp,w
  9294     0293                     u267_25:
  9295     0293  1803               	skipnc
  9296     0294  2A96               	goto	u267_21
  9297     0295  2A97               	goto	u267_20
  9298     0296                     u267_21:
  9299     0296  2AA2               	goto	i1l3102
  9300     0297                     u267_20:
  9301     0297                     i1l3098:
  9302     0297  3000               	movlw	0
  9303     0298  0020               	movlb	0	; select bank0
  9304     0299  00C5               	movwf	___flmul@prod+3
  9305     029A  3000               	movlw	0
  9306     029B  00C4               	movwf	___flmul@prod+2
  9307     029C  3000               	movlw	0
  9308     029D  00C3               	movwf	___flmul@prod+1
  9309     029E  3000               	movlw	0
  9310     029F  00C2               	movwf	___flmul@prod
  9311     02A0                     i1l3100:
  9312     02A0  01BB               	clrf	___flmul@sign
  9313     02A1  2AB4               	goto	i1l1389
  9314     02A2                     i1l3102:
  9315     02A2  0020               	movlb	0	; select bank0
  9316     02A3  0846               	movf	___flmul@temp,w
  9317     02A4  00C1               	movwf	___flmul@bexp
  9318     02A5  30FF               	movlw	255
  9319     02A6  05C2               	andwf	___flmul@prod,f
  9320     02A7  30FF               	movlw	255
  9321     02A8  05C3               	andwf	___flmul@prod+1,f
  9322     02A9  307F               	movlw	127
  9323     02AA  05C4               	andwf	___flmul@prod+2,f
  9324     02AB  3000               	movlw	0
  9325     02AC  05C5               	andwf	___flmul@prod+3,f
  9326     02AD                     i1l3104:
  9327     02AD  1C41               	btfss	___flmul@bexp,0
  9328     02AE  2AB0               	goto	u268_21
  9329     02AF  2AB1               	goto	u268_20
  9330     02B0                     u268_21:
  9331     02B0  2AB2               	goto	i1l3108
  9332     02B1                     u268_20:
  9333     02B1                     i1l3106:
  9334     02B1  17C4               	bsf	___flmul@prod+2,7
  9335     02B2                     i1l3108:
  9336     02B2  3641               	lsrf	___flmul@bexp,w
  9337     02B3  00C5               	movwf	___flmul@prod+3
  9338     02B4                     i1l1389:
  9339     02B4  083B               	movf	___flmul@sign,w
  9340     02B5  00B6               	movwf	??___flmul
  9341     02B6  0836               	movf	??___flmul,w
  9342     02B7  04C5               	iorwf	___flmul@prod+3,f
  9343     02B8                     i1l3110:
  9344     02B8  0845               	movf	___flmul@prod+3,w
  9345     02B9  00B1               	movwf	?___flmul+3
  9346     02BA  0844               	movf	___flmul@prod+2,w
  9347     02BB  00B0               	movwf	?___flmul+2
  9348     02BC  0843               	movf	___flmul@prod+1,w
  9349     02BD  00AF               	movwf	?___flmul+1
  9350     02BE  0842               	movf	___flmul@prod,w
  9351     02BF  00AE               	movwf	?___flmul
  9352     02C0                     i1l1377:
  9353     02C0  0008               	return
  9354     02C1                     __end_of___flmul:
  9355                           
  9356                           	psect	text55
  9357     0D96                     __ptext55:	
  9358 ;; *************** function __Umul8_16 *****************
  9359 ;; Defined at:
  9360 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul8_16.c"
  9361 ;; Parameters:    Size  Location     Type
  9362 ;;  multiplier      1    wreg     unsigned char 
  9363 ;;  multiplicand    1    0[COMMON] unsigned char 
  9364 ;; Auto vars:     Size  Location     Type
  9365 ;;  multiplier      1    8[COMMON] unsigned char 
  9366 ;;  word_mpld       2    6[COMMON] unsigned short 
  9367 ;;  product         2    4[COMMON] unsigned short 
  9368 ;; Return value:  Size  Location     Type
  9369 ;;                  2    0[COMMON] unsigned int 
  9370 ;; Registers used:
  9371 ;;		wreg, status,2, status,0
  9372 ;; Tracked objects:
  9373 ;;		On entry : 0/0
  9374 ;;		On exit  : 0/0
  9375 ;;		Unchanged: 0/0
  9376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9377 ;;      Params:         2       0       0       0       0       0
  9378 ;;      Locals:         5       0       0       0       0       0
  9379 ;;      Temps:          2       0       0       0       0       0
  9380 ;;      Totals:         9       0       0       0       0       0
  9381 ;;Total ram usage:        9 bytes
  9382 ;; Hardware stack levels used: 1
  9383 ;; This function calls:
  9384 ;;		Nothing
  9385 ;; This function is called by:
  9386 ;;		___flmul
  9387 ;; This function uses a non-reentrant model
  9388 ;;
  9389                           
  9390     0D96                     __Umul8_16:	
  9391                           ;psect for function __Umul8_16
  9392                           
  9393                           
  9394                           ;incstack = 0
  9395                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  9396                           ;__Umul8_16@multiplier stored from wreg
  9397     0D96  00F8               	movwf	__Umul8_16@multiplier
  9398     0D97                     i1l2590:
  9399     0D97  01F4               	clrf	__Umul8_16@product
  9400     0D98  01F5               	clrf	__Umul8_16@product+1
  9401     0D99                     i1l2592:
  9402     0D99  0870               	movf	__Umul8_16@multiplicand,w
  9403     0D9A  00F2               	movwf	??__Umul8_16
  9404     0D9B  01F3               	clrf	??__Umul8_16+1
  9405     0D9C  0872               	movf	??__Umul8_16,w
  9406     0D9D  00F6               	movwf	__Umul8_16@word_mpld
  9407     0D9E  0873               	movf	??__Umul8_16+1,w
  9408     0D9F  00F7               	movwf	__Umul8_16@word_mpld+1
  9409     0DA0                     i1l2594:
  9410     0DA0  1C78               	btfss	__Umul8_16@multiplier,0
  9411     0DA1  2DA3               	goto	u168_21
  9412     0DA2  2DA4               	goto	u168_20
  9413     0DA3                     u168_21:
  9414     0DA3  2DA8               	goto	i1l1396
  9415     0DA4                     u168_20:
  9416     0DA4                     i1l2596:
  9417     0DA4  0876               	movf	__Umul8_16@word_mpld,w
  9418     0DA5  07F4               	addwf	__Umul8_16@product,f
  9419     0DA6  0877               	movf	__Umul8_16@word_mpld+1,w
  9420     0DA7  3DF5               	addwfc	__Umul8_16@product+1,f
  9421     0DA8                     i1l1396:
  9422     0DA8  3001               	movlw	1
  9423     0DA9                     u169_25:
  9424     0DA9  35F6               	lslf	__Umul8_16@word_mpld,f
  9425     0DAA  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  9426     0DAB  0B89               	decfsz	9,f
  9427     0DAC  2DA9               	goto	u169_25
  9428     0DAD  1003               	clrc
  9429     0DAE  0CF8               	rrf	__Umul8_16@multiplier,f
  9430     0DAF                     i1l2598:
  9431     0DAF  0878               	movf	__Umul8_16@multiplier,w
  9432     0DB0  1D03               	btfss	3,2
  9433     0DB1  2DB3               	goto	u170_21
  9434     0DB2  2DB4               	goto	u170_20
  9435     0DB3                     u170_21:
  9436     0DB3  2DA0               	goto	i1l2594
  9437     0DB4                     u170_20:
  9438     0DB4                     i1l2600:
  9439     0DB4  0875               	movf	__Umul8_16@product+1,w
  9440     0DB5  00F1               	movwf	?__Umul8_16+1
  9441     0DB6  0874               	movf	__Umul8_16@product,w
  9442     0DB7  00F0               	movwf	?__Umul8_16
  9443     0DB8                     i1l1398:
  9444     0DB8  0008               	return
  9445     0DB9                     __end_of__Umul8_16:
  9446                           
  9447                           	psect	text56
  9448     02C1                     __ptext56:	
  9449 ;; *************** function ___fldiv *****************
  9450 ;; Defined at:
  9451 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcdiv.c"
  9452 ;; Parameters:    Size  Location     Type
  9453 ;;  a               4   40[BANK0 ] unsigned int 
  9454 ;;  b               4   44[BANK0 ] unsigned int 
  9455 ;; Auto vars:     Size  Location     Type
  9456 ;;  grs             4   60[BANK0 ] unsigned long 
  9457 ;;  rem             4   53[BANK0 ] unsigned long 
  9458 ;;  new_exp         2   58[BANK0 ] short 
  9459 ;;  aexp            1   65[BANK0 ] unsigned char 
  9460 ;;  bexp            1   64[BANK0 ] unsigned char 
  9461 ;;  sign            1   57[BANK0 ] unsigned char 
  9462 ;; Return value:  Size  Location     Type
  9463 ;;                  4   40[BANK0 ] unsigned char 
  9464 ;; Registers used:
  9465 ;;		wreg, status,2, status,0
  9466 ;; Tracked objects:
  9467 ;;		On entry : 0/0
  9468 ;;		On exit  : 0/0
  9469 ;;		Unchanged: 0/0
  9470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9471 ;;      Params:         0       8       0       0       0       0
  9472 ;;      Locals:         0      13       0       0       0       0
  9473 ;;      Temps:          0       5       0       0       0       0
  9474 ;;      Totals:         0      26       0       0       0       0
  9475 ;;Total ram usage:       26 bytes
  9476 ;; Hardware stack levels used: 1
  9477 ;; This function calls:
  9478 ;;		Nothing
  9479 ;; This function is called by:
  9480 ;;		_mede_height
  9481 ;; This function uses a non-reentrant model
  9482 ;;
  9483                           
  9484     02C1                     ___fldiv:	
  9485                           ;psect for function ___fldiv
  9486                           
  9487     02C1                     i1l2834:	
  9488                           ;incstack = 0
  9489                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
  9490                           
  9491     02C1  0020               	movlb	0	; select bank0
  9492     02C2  084F               	movf	___fldiv@b+3,w
  9493     02C3  3980               	andlw	128
  9494     02C4  00D9               	movwf	___fldiv@sign
  9495     02C5                     i1l2836:
  9496     02C5  354F               	lslf	___fldiv@b+3,w
  9497     02C6  00E0               	movwf	___fldiv@bexp
  9498     02C7                     i1l2838:
  9499     02C7  1FCE               	btfss	___fldiv@b+2,7
  9500     02C8  2ACA               	goto	u214_21
  9501     02C9  2ACB               	goto	u214_20
  9502     02CA                     u214_21:
  9503     02CA  2ACC               	goto	i1l2842
  9504     02CB                     u214_20:
  9505     02CB                     i1l2840:
  9506     02CB  1460               	bsf	___fldiv@bexp,0
  9507     02CC                     i1l2842:
  9508     02CC  0860               	movf	___fldiv@bexp,w
  9509     02CD  1903               	btfsc	3,2
  9510     02CE  2AD0               	goto	u215_21
  9511     02CF  2AD1               	goto	u215_20
  9512     02D0                     u215_21:
  9513     02D0  2AE1               	goto	i1l2852
  9514     02D1                     u215_20:
  9515     02D1                     i1l2844:
  9516     02D1  0A60               	incf	___fldiv@bexp,w
  9517     02D2  1D03               	btfss	3,2
  9518     02D3  2AD5               	goto	u216_21
  9519     02D4  2AD6               	goto	u216_20
  9520     02D5                     u216_21:
  9521     02D5  2ADE               	goto	i1l2848
  9522     02D6                     u216_20:
  9523     02D6                     i1l2846:
  9524     02D6  3000               	movlw	0
  9525     02D7  00CF               	movwf	___fldiv@b+3
  9526     02D8  3000               	movlw	0
  9527     02D9  00CE               	movwf	___fldiv@b+2
  9528     02DA  3000               	movlw	0
  9529     02DB  00CD               	movwf	___fldiv@b+1
  9530     02DC  3000               	movlw	0
  9531     02DD  00CC               	movwf	___fldiv@b
  9532     02DE                     i1l2848:
  9533     02DE  17CE               	bsf	___fldiv@b+2,7
  9534     02DF                     i1l2850:
  9535     02DF  01CF               	clrf	___fldiv@b+3
  9536     02E0  2AE9               	goto	i1l2854
  9537     02E1                     i1l2852:
  9538     02E1  3000               	movlw	0
  9539     02E2  00CF               	movwf	___fldiv@b+3
  9540     02E3  3000               	movlw	0
  9541     02E4  00CE               	movwf	___fldiv@b+2
  9542     02E5  3000               	movlw	0
  9543     02E6  00CD               	movwf	___fldiv@b+1
  9544     02E7  3000               	movlw	0
  9545     02E8  00CC               	movwf	___fldiv@b
  9546     02E9                     i1l2854:
  9547     02E9  084B               	movf	___fldiv@a+3,w
  9548     02EA  3980               	andlw	128
  9549     02EB  00D0               	movwf	??___fldiv
  9550     02EC  0850               	movf	??___fldiv,w
  9551     02ED  06D9               	xorwf	___fldiv@sign,f
  9552     02EE                     i1l2856:
  9553     02EE  354B               	lslf	___fldiv@a+3,w
  9554     02EF  00E1               	movwf	___fldiv@aexp
  9555     02F0                     i1l2858:
  9556     02F0  1FCA               	btfss	___fldiv@a+2,7
  9557     02F1  2AF3               	goto	u217_21
  9558     02F2  2AF4               	goto	u217_20
  9559     02F3                     u217_21:
  9560     02F3  2AF5               	goto	i1l2862
  9561     02F4                     u217_20:
  9562     02F4                     i1l2860:
  9563     02F4  1461               	bsf	___fldiv@aexp,0
  9564     02F5                     i1l2862:
  9565     02F5  0861               	movf	___fldiv@aexp,w
  9566     02F6  1903               	btfsc	3,2
  9567     02F7  2AF9               	goto	u218_21
  9568     02F8  2AFA               	goto	u218_20
  9569     02F9                     u218_21:
  9570     02F9  2B0A               	goto	i1l2872
  9571     02FA                     u218_20:
  9572     02FA                     i1l2864:
  9573     02FA  0A61               	incf	___fldiv@aexp,w
  9574     02FB  1D03               	btfss	3,2
  9575     02FC  2AFE               	goto	u219_21
  9576     02FD  2AFF               	goto	u219_20
  9577     02FE                     u219_21:
  9578     02FE  2B07               	goto	i1l2868
  9579     02FF                     u219_20:
  9580     02FF                     i1l2866:
  9581     02FF  3000               	movlw	0
  9582     0300  00CB               	movwf	___fldiv@a+3
  9583     0301  3000               	movlw	0
  9584     0302  00CA               	movwf	___fldiv@a+2
  9585     0303  3000               	movlw	0
  9586     0304  00C9               	movwf	___fldiv@a+1
  9587     0305  3000               	movlw	0
  9588     0306  00C8               	movwf	___fldiv@a
  9589     0307                     i1l2868:
  9590     0307  17CA               	bsf	___fldiv@a+2,7
  9591     0308                     i1l2870:
  9592     0308  01CB               	clrf	___fldiv@a+3
  9593     0309  2B12               	goto	i1l1337
  9594     030A                     i1l2872:
  9595     030A  3000               	movlw	0
  9596     030B  00CB               	movwf	___fldiv@a+3
  9597     030C  3000               	movlw	0
  9598     030D  00CA               	movwf	___fldiv@a+2
  9599     030E  3000               	movlw	0
  9600     030F  00C9               	movwf	___fldiv@a+1
  9601     0310  3000               	movlw	0
  9602     0311  00C8               	movwf	___fldiv@a
  9603     0312                     i1l1337:
  9604     0312  084B               	movf	___fldiv@a+3,w
  9605     0313  044A               	iorwf	___fldiv@a+2,w
  9606     0314  0449               	iorwf	___fldiv@a+1,w
  9607     0315  0448               	iorwf	___fldiv@a,w
  9608     0316  1D03               	skipz
  9609     0317  2B19               	goto	u220_21
  9610     0318  2B1A               	goto	u220_20
  9611     0319                     u220_21:
  9612     0319  2B33               	goto	i1l2882
  9613     031A                     u220_20:
  9614     031A                     i1l2874:
  9615     031A  3000               	movlw	0
  9616     031B  00CF               	movwf	___fldiv@b+3
  9617     031C  3000               	movlw	0
  9618     031D  00CE               	movwf	___fldiv@b+2
  9619     031E  3000               	movlw	0
  9620     031F  00CD               	movwf	___fldiv@b+1
  9621     0320  3000               	movlw	0
  9622     0321  00CC               	movwf	___fldiv@b
  9623     0322  3080               	movlw	128
  9624     0323  04CE               	iorwf	___fldiv@b+2,f
  9625     0324  307F               	movlw	127
  9626     0325  04CF               	iorwf	___fldiv@b+3,f
  9627     0326                     i1l2876:
  9628     0326  0859               	movf	___fldiv@sign,w
  9629     0327  00D0               	movwf	??___fldiv
  9630     0328  0850               	movf	??___fldiv,w
  9631     0329  04CF               	iorwf	___fldiv@b+3,f
  9632     032A                     i1l2878:
  9633     032A  084F               	movf	___fldiv@b+3,w
  9634     032B  00CB               	movwf	?___fldiv+3
  9635     032C  084E               	movf	___fldiv@b+2,w
  9636     032D  00CA               	movwf	?___fldiv+2
  9637     032E  084D               	movf	___fldiv@b+1,w
  9638     032F  00C9               	movwf	?___fldiv+1
  9639     0330  084C               	movf	___fldiv@b,w
  9640     0331  00C8               	movwf	?___fldiv
  9641     0332  2C6A               	goto	i1l1339
  9642     0333                     i1l2882:
  9643     0333  0860               	movf	___fldiv@bexp,w
  9644     0334  1D03               	btfss	3,2
  9645     0335  2B37               	goto	u221_21
  9646     0336  2B38               	goto	u221_20
  9647     0337                     u221_21:
  9648     0337  2B41               	goto	i1l2888
  9649     0338                     u221_20:
  9650     0338                     i1l2884:
  9651     0338  3000               	movlw	0
  9652     0339  00CB               	movwf	?___fldiv+3
  9653     033A  3000               	movlw	0
  9654     033B  00CA               	movwf	?___fldiv+2
  9655     033C  3000               	movlw	0
  9656     033D  00C9               	movwf	?___fldiv+1
  9657     033E  3000               	movlw	0
  9658     033F  00C8               	movwf	?___fldiv
  9659     0340  2C6A               	goto	i1l1339
  9660     0341                     i1l2888:
  9661     0341  0860               	movf	___fldiv@bexp,w
  9662     0342  00D0               	movwf	??___fldiv
  9663     0343  01D1               	clrf	??___fldiv+1
  9664     0344  0851               	movf	??___fldiv+1,w
  9665     0345  00D3               	movwf	??___fldiv+3
  9666     0346  0861               	movf	___fldiv@aexp,w
  9667     0347  0250               	subwf	??___fldiv,w
  9668     0348  00D2               	movwf	??___fldiv+2
  9669     0349  1C03               	skipc
  9670     034A  03D3               	decf	??___fldiv+3,f
  9671     034B  0852               	movf	??___fldiv+2,w
  9672     034C  3E7F               	addlw	127
  9673     034D  00DA               	movwf	___fldiv@new_exp
  9674     034E  3000               	movlw	0
  9675     034F  3D53               	addwfc	??___fldiv+3,w
  9676     0350  00DB               	movwf	___fldiv@new_exp+1
  9677     0351                     i1l2890:
  9678     0351  084F               	movf	___fldiv@b+3,w
  9679     0352  00D8               	movwf	___fldiv@rem+3
  9680     0353  084E               	movf	___fldiv@b+2,w
  9681     0354  00D7               	movwf	___fldiv@rem+2
  9682     0355  084D               	movf	___fldiv@b+1,w
  9683     0356  00D6               	movwf	___fldiv@rem+1
  9684     0357  084C               	movf	___fldiv@b,w
  9685     0358  00D5               	movwf	___fldiv@rem
  9686     0359                     i1l2892:
  9687     0359  3000               	movlw	0
  9688     035A  00CF               	movwf	___fldiv@b+3
  9689     035B  3000               	movlw	0
  9690     035C  00CE               	movwf	___fldiv@b+2
  9691     035D  3000               	movlw	0
  9692     035E  00CD               	movwf	___fldiv@b+1
  9693     035F  3000               	movlw	0
  9694     0360  00CC               	movwf	___fldiv@b
  9695     0361                     i1l2894:
  9696     0361  3000               	movlw	0
  9697     0362  00DF               	movwf	___fldiv@grs+3
  9698     0363  3000               	movlw	0
  9699     0364  00DE               	movwf	___fldiv@grs+2
  9700     0365  3000               	movlw	0
  9701     0366  00DD               	movwf	___fldiv@grs+1
  9702     0367  3000               	movlw	0
  9703     0368  00DC               	movwf	___fldiv@grs
  9704     0369                     i1l2896:
  9705     0369  01E1               	clrf	___fldiv@aexp
  9706     036A  2BA9               	goto	i1l2916
  9707     036B                     i1l2898:
  9708     036B  0861               	movf	___fldiv@aexp,w
  9709     036C  1903               	btfsc	3,2
  9710     036D  2B6F               	goto	u222_21
  9711     036E  2B70               	goto	u222_20
  9712     036F                     u222_21:
  9713     036F  2B8A               	goto	i1l2908
  9714     0370                     u222_20:
  9715     0370                     i1l2900:
  9716     0370  3001               	movlw	1
  9717     0371                     u223_25:
  9718     0371  35D5               	lslf	___fldiv@rem,f
  9719     0372  0DD6               	rlf	___fldiv@rem+1,f
  9720     0373  0DD7               	rlf	___fldiv@rem+2,f
  9721     0374  0DD8               	rlf	___fldiv@rem+3,f
  9722     0375  0B89               	decfsz	9,f
  9723     0376  2B71               	goto	u223_25
  9724     0377  3001               	movlw	1
  9725     0378                     u224_25:
  9726     0378  35CC               	lslf	___fldiv@b,f
  9727     0379  0DCD               	rlf	___fldiv@b+1,f
  9728     037A  0DCE               	rlf	___fldiv@b+2,f
  9729     037B  0DCF               	rlf	___fldiv@b+3,f
  9730     037C  0B89               	decfsz	9,f
  9731     037D  2B78               	goto	u224_25
  9732     037E                     i1l2902:
  9733     037E  1FDF               	btfss	___fldiv@grs+3,7
  9734     037F  2B81               	goto	u225_21
  9735     0380  2B82               	goto	u225_20
  9736     0381                     u225_21:
  9737     0381  2B83               	goto	i1l2906
  9738     0382                     u225_20:
  9739     0382                     i1l2904:
  9740     0382  144C               	bsf	___fldiv@b,0
  9741     0383                     i1l2906:
  9742     0383  3001               	movlw	1
  9743     0384                     u226_25:
  9744     0384  35DC               	lslf	___fldiv@grs,f
  9745     0385  0DDD               	rlf	___fldiv@grs+1,f
  9746     0386  0DDE               	rlf	___fldiv@grs+2,f
  9747     0387  0DDF               	rlf	___fldiv@grs+3,f
  9748     0388  0B89               	decfsz	9,f
  9749     0389  2B84               	goto	u226_25
  9750     038A                     i1l2908:
  9751     038A  084B               	movf	___fldiv@a+3,w
  9752     038B  0258               	subwf	___fldiv@rem+3,w
  9753     038C  1D03               	skipz
  9754     038D  2B98               	goto	u227_25
  9755     038E  084A               	movf	___fldiv@a+2,w
  9756     038F  0257               	subwf	___fldiv@rem+2,w
  9757     0390  1D03               	skipz
  9758     0391  2B98               	goto	u227_25
  9759     0392  0849               	movf	___fldiv@a+1,w
  9760     0393  0256               	subwf	___fldiv@rem+1,w
  9761     0394  1D03               	skipz
  9762     0395  2B98               	goto	u227_25
  9763     0396  0848               	movf	___fldiv@a,w
  9764     0397  0255               	subwf	___fldiv@rem,w
  9765     0398                     u227_25:
  9766     0398  1C03               	skipc
  9767     0399  2B9B               	goto	u227_21
  9768     039A  2B9C               	goto	u227_20
  9769     039B                     u227_21:
  9770     039B  2BA5               	goto	i1l2914
  9771     039C                     u227_20:
  9772     039C                     i1l2910:
  9773     039C  175F               	bsf	___fldiv@grs+3,6
  9774     039D                     i1l2912:
  9775     039D  0848               	movf	___fldiv@a,w
  9776     039E  02D5               	subwf	___fldiv@rem,f
  9777     039F  0849               	movf	___fldiv@a+1,w
  9778     03A0  3BD6               	subwfb	___fldiv@rem+1,f
  9779     03A1  084A               	movf	___fldiv@a+2,w
  9780     03A2  3BD7               	subwfb	___fldiv@rem+2,f
  9781     03A3  084B               	movf	___fldiv@a+3,w
  9782     03A4  3BD8               	subwfb	___fldiv@rem+3,f
  9783     03A5                     i1l2914:
  9784     03A5  3001               	movlw	1
  9785     03A6  00D0               	movwf	??___fldiv
  9786     03A7  0850               	movf	??___fldiv,w
  9787     03A8  07E1               	addwf	___fldiv@aexp,f
  9788     03A9                     i1l2916:
  9789     03A9  301A               	movlw	26
  9790     03AA  0261               	subwf	___fldiv@aexp,w
  9791     03AB  1C03               	skipc
  9792     03AC  2BAE               	goto	u228_21
  9793     03AD  2BAF               	goto	u228_20
  9794     03AE                     u228_21:
  9795     03AE  2B6B               	goto	i1l2898
  9796     03AF                     u228_20:
  9797     03AF                     i1l2918:
  9798     03AF  0858               	movf	___fldiv@rem+3,w
  9799     03B0  0457               	iorwf	___fldiv@rem+2,w
  9800     03B1  0456               	iorwf	___fldiv@rem+1,w
  9801     03B2  0455               	iorwf	___fldiv@rem,w
  9802     03B3  1903               	skipnz
  9803     03B4  2BB6               	goto	u229_21
  9804     03B5  2BB7               	goto	u229_20
  9805     03B6                     u229_21:
  9806     03B6  2BD0               	goto	i1l2932
  9807     03B7                     u229_20:
  9808     03B7                     i1l2920:
  9809     03B7  145C               	bsf	___fldiv@grs,0
  9810     03B8  2BD0               	goto	i1l2932
  9811     03B9                     i1l2922:
  9812     03B9  3001               	movlw	1
  9813     03BA                     u230_25:
  9814     03BA  35CC               	lslf	___fldiv@b,f
  9815     03BB  0DCD               	rlf	___fldiv@b+1,f
  9816     03BC  0DCE               	rlf	___fldiv@b+2,f
  9817     03BD  0DCF               	rlf	___fldiv@b+3,f
  9818     03BE  0B89               	decfsz	9,f
  9819     03BF  2BBA               	goto	u230_25
  9820     03C0                     i1l2924:
  9821     03C0  1FDF               	btfss	___fldiv@grs+3,7
  9822     03C1  2BC3               	goto	u231_21
  9823     03C2  2BC4               	goto	u231_20
  9824     03C3                     u231_21:
  9825     03C3  2BC5               	goto	i1l2928
  9826     03C4                     u231_20:
  9827     03C4                     i1l2926:
  9828     03C4  144C               	bsf	___fldiv@b,0
  9829     03C5                     i1l2928:
  9830     03C5  3001               	movlw	1
  9831     03C6                     u232_25:
  9832     03C6  35DC               	lslf	___fldiv@grs,f
  9833     03C7  0DDD               	rlf	___fldiv@grs+1,f
  9834     03C8  0DDE               	rlf	___fldiv@grs+2,f
  9835     03C9  0DDF               	rlf	___fldiv@grs+3,f
  9836     03CA  0B89               	decfsz	9,f
  9837     03CB  2BC6               	goto	u232_25
  9838     03CC                     i1l2930:
  9839     03CC  30FF               	movlw	255
  9840     03CD  07DA               	addwf	___fldiv@new_exp,f
  9841     03CE  30FF               	movlw	255
  9842     03CF  3DDB               	addwfc	___fldiv@new_exp+1,f
  9843     03D0                     i1l2932:
  9844     03D0  1FCE               	btfss	___fldiv@b+2,7
  9845     03D1  2BD3               	goto	u233_21
  9846     03D2  2BD4               	goto	u233_20
  9847     03D3                     u233_21:
  9848     03D3  2BB9               	goto	i1l2922
  9849     03D4                     u233_20:
  9850     03D4                     i1l2934:
  9851     03D4  01E1               	clrf	___fldiv@aexp
  9852     03D5                     i1l2936:
  9853     03D5  1FDF               	btfss	___fldiv@grs+3,7
  9854     03D6  2BD8               	goto	u234_21
  9855     03D7  2BD9               	goto	u234_20
  9856     03D8                     u234_21:
  9857     03D8  2BF5               	goto	i1l2944
  9858     03D9                     u234_20:
  9859     03D9                     i1l2938:
  9860     03D9  30FF               	movlw	255
  9861     03DA  055C               	andwf	___fldiv@grs,w
  9862     03DB  00D0               	movwf	??___fldiv
  9863     03DC  30FF               	movlw	255
  9864     03DD  055D               	andwf	___fldiv@grs+1,w
  9865     03DE  00D1               	movwf	??___fldiv+1
  9866     03DF  30FF               	movlw	255
  9867     03E0  055E               	andwf	___fldiv@grs+2,w
  9868     03E1  00D2               	movwf	??___fldiv+2
  9869     03E2  307F               	movlw	127
  9870     03E3  055F               	andwf	___fldiv@grs+3,w
  9871     03E4  00D3               	movwf	??___fldiv+3
  9872     03E5  0853               	movf	??___fldiv+3,w
  9873     03E6  0452               	iorwf	??___fldiv+2,w
  9874     03E7  0451               	iorwf	??___fldiv+1,w
  9875     03E8  0450               	iorwf	??___fldiv,w
  9876     03E9  1903               	skipnz
  9877     03EA  2BEC               	goto	u235_21
  9878     03EB  2BED               	goto	u235_20
  9879     03EC                     u235_21:
  9880     03EC  2BF0               	goto	i1l1353
  9881     03ED                     u235_20:
  9882     03ED                     i1l2940:
  9883     03ED  01E1               	clrf	___fldiv@aexp
  9884     03EE  0AE1               	incf	___fldiv@aexp,f
  9885     03EF  2BF5               	goto	i1l2944
  9886     03F0                     i1l1353:
  9887     03F0  1C4C               	btfss	___fldiv@b,0
  9888     03F1  2BF3               	goto	u236_21
  9889     03F2  2BF4               	goto	u236_20
  9890     03F3                     u236_21:
  9891     03F3  2BF5               	goto	i1l2944
  9892     03F4                     u236_20:
  9893     03F4  2BED               	goto	i1l2940
  9894     03F5                     i1l2944:
  9895     03F5  0861               	movf	___fldiv@aexp,w
  9896     03F6  1903               	btfsc	3,2
  9897     03F7  2BF9               	goto	u237_21
  9898     03F8  2BFA               	goto	u237_20
  9899     03F9                     u237_21:
  9900     03F9  2C22               	goto	i1l2954
  9901     03FA                     u237_20:
  9902     03FA                     i1l2946:
  9903     03FA  3001               	movlw	1
  9904     03FB  07CC               	addwf	___fldiv@b,f
  9905     03FC  3000               	movlw	0
  9906     03FD  3DCD               	addwfc	___fldiv@b+1,f
  9907     03FE  3000               	movlw	0
  9908     03FF  3DCE               	addwfc	___fldiv@b+2,f
  9909     0400  3000               	movlw	0
  9910     0401  3DCF               	addwfc	___fldiv@b+3,f
  9911     0402                     i1l2948:
  9912     0402  1C4F               	btfss	___fldiv@b+3,0
  9913     0403  2C05               	goto	u238_21
  9914     0404  2C06               	goto	u238_20
  9915     0405                     u238_21:
  9916     0405  2C22               	goto	i1l2954
  9917     0406                     u238_20:
  9918     0406                     i1l2950:
  9919     0406  084C               	movf	___fldiv@b,w
  9920     0407  00D0               	movwf	??___fldiv
  9921     0408  084D               	movf	___fldiv@b+1,w
  9922     0409  00D1               	movwf	??___fldiv+1
  9923     040A  084E               	movf	___fldiv@b+2,w
  9924     040B  00D2               	movwf	??___fldiv+2
  9925     040C  084F               	movf	___fldiv@b+3,w
  9926     040D  00D3               	movwf	??___fldiv+3
  9927     040E  3001               	movlw	1
  9928     040F  00D4               	movwf	??___fldiv+4
  9929     0410                     u239_25:
  9930     0410  37D3               	asrf	??___fldiv+3,f
  9931     0411  0CD2               	rrf	??___fldiv+2,f
  9932     0412  0CD1               	rrf	??___fldiv+1,f
  9933     0413  0CD0               	rrf	??___fldiv,f
  9934     0414                     u239_20:
  9935     0414  0BD4               	decfsz	??___fldiv+4,f
  9936     0415  2C10               	goto	u239_25
  9937     0416  0853               	movf	??___fldiv+3,w
  9938     0417  00CF               	movwf	___fldiv@b+3
  9939     0418  0852               	movf	??___fldiv+2,w
  9940     0419  00CE               	movwf	___fldiv@b+2
  9941     041A  0851               	movf	??___fldiv+1,w
  9942     041B  00CD               	movwf	___fldiv@b+1
  9943     041C  0850               	movf	??___fldiv,w
  9944     041D  00CC               	movwf	___fldiv@b
  9945     041E                     i1l2952:
  9946     041E  3001               	movlw	1
  9947     041F  07DA               	addwf	___fldiv@new_exp,f
  9948     0420  3000               	movlw	0
  9949     0421  3DDB               	addwfc	___fldiv@new_exp+1,f
  9950     0422                     i1l2954:
  9951     0422  085B               	movf	___fldiv@new_exp+1,w
  9952     0423  3A80               	xorlw	128
  9953     0424  00D0               	movwf	??___fldiv
  9954     0425  3080               	movlw	128
  9955     0426  0250               	subwf	??___fldiv,w
  9956     0427  1D03               	skipz
  9957     0428  2C2B               	goto	u240_25
  9958     0429  30FF               	movlw	255
  9959     042A  025A               	subwf	___fldiv@new_exp,w
  9960     042B                     u240_25:
  9961     042B  1C03               	skipc
  9962     042C  2C2E               	goto	u240_21
  9963     042D  2C2F               	goto	u240_20
  9964     042E                     u240_21:
  9965     042E  2C3C               	goto	i1l1358
  9966     042F                     u240_20:
  9967     042F                     i1l2956:
  9968     042F  30FF               	movlw	255
  9969     0430  0020               	movlb	0	; select bank0
  9970     0431  00DA               	movwf	___fldiv@new_exp
  9971     0432  3000               	movlw	0
  9972     0433  00DB               	movwf	___fldiv@new_exp+1
  9973     0434  3000               	movlw	0
  9974     0435  00CF               	movwf	___fldiv@b+3
  9975     0436  3000               	movlw	0
  9976     0437  00CE               	movwf	___fldiv@b+2
  9977     0438  3000               	movlw	0
  9978     0439  00CD               	movwf	___fldiv@b+1
  9979     043A  3000               	movlw	0
  9980     043B  00CC               	movwf	___fldiv@b
  9981     043C                     i1l1358:
  9982     043C  0020               	movlb	0	; select bank0
  9983     043D  085B               	movf	___fldiv@new_exp+1,w
  9984     043E  3A80               	xorlw	128
  9985     043F  00D0               	movwf	??___fldiv
  9986     0440  3080               	movlw	128
  9987     0441  0250               	subwf	??___fldiv,w
  9988     0442  1D03               	skipz
  9989     0443  2C46               	goto	u241_25
  9990     0444  3001               	movlw	1
  9991     0445  025A               	subwf	___fldiv@new_exp,w
  9992     0446                     u241_25:
  9993     0446  1803               	skipnc
  9994     0447  2C49               	goto	u241_21
  9995     0448  2C4A               	goto	u241_20
  9996     0449                     u241_21:
  9997     0449  2C56               	goto	i1l1359
  9998     044A                     u241_20:
  9999     044A                     i1l2958:
 10000     044A  0020               	movlb	0	; select bank0
 10001     044B  01DA               	clrf	___fldiv@new_exp
 10002     044C  01DB               	clrf	___fldiv@new_exp+1
 10003     044D                     i1l2960:
 10004     044D  3000               	movlw	0
 10005     044E  00CF               	movwf	___fldiv@b+3
 10006     044F  3000               	movlw	0
 10007     0450  00CE               	movwf	___fldiv@b+2
 10008     0451  3000               	movlw	0
 10009     0452  00CD               	movwf	___fldiv@b+1
 10010     0453  3000               	movlw	0
 10011     0454  00CC               	movwf	___fldiv@b
 10012     0455                     i1l2962:
 10013     0455  01D9               	clrf	___fldiv@sign
 10014     0456                     i1l1359:
 10015     0456  0020               	movlb	0	; select bank0
 10016     0457  085A               	movf	___fldiv@new_exp,w
 10017     0458  00E0               	movwf	___fldiv@bexp
 10018     0459                     i1l2964:
 10019     0459  1C60               	btfss	___fldiv@bexp,0
 10020     045A  2C5C               	goto	u242_21
 10021     045B  2C5D               	goto	u242_20
 10022     045C                     u242_21:
 10023     045C  2C5F               	goto	i1l2968
 10024     045D                     u242_20:
 10025     045D                     i1l2966:
 10026     045D  17CE               	bsf	___fldiv@b+2,7
 10027     045E  2C63               	goto	i1l1361
 10028     045F                     i1l2968:
 10029     045F  307F               	movlw	127
 10030     0460  00D0               	movwf	??___fldiv
 10031     0461  0850               	movf	??___fldiv,w
 10032     0462  05CE               	andwf	___fldiv@b+2,f
 10033     0463                     i1l1361:
 10034     0463  3660               	lsrf	___fldiv@bexp,w
 10035     0464  00CF               	movwf	___fldiv@b+3
 10036     0465  0859               	movf	___fldiv@sign,w
 10037     0466  00D0               	movwf	??___fldiv
 10038     0467  0850               	movf	??___fldiv,w
 10039     0468  04CF               	iorwf	___fldiv@b+3,f
 10040     0469  2B2A               	goto	i1l2878
 10041     046A                     i1l1339:
 10042     046A  0008               	return
 10043     046B                     __end_of___fldiv:
 10044                           
 10045                           	psect	text57
 10046     0C91                     __ptext57:	
 10047 ;; *************** function _TMR1_ReadTimer *****************
 10048 ;; Defined at:
 10049 ;;		line 109 in file "mcc_generated_files/tmr1.c"
 10050 ;; Parameters:    Size  Location     Type
 10051 ;;		None
 10052 ;; Auto vars:     Size  Location     Type
 10053 ;;  readVal         2    7[COMMON] unsigned short 
 10054 ;;  readValLow      1   10[COMMON] unsigned char 
 10055 ;;  readValHigh     1    9[COMMON] unsigned char 
 10056 ;; Return value:  Size  Location     Type
 10057 ;;                  2    0[COMMON] unsigned short 
 10058 ;; Registers used:
 10059 ;;		wreg
 10060 ;; Tracked objects:
 10061 ;;		On entry : 0/0
 10062 ;;		On exit  : 0/0
 10063 ;;		Unchanged: 0/0
 10064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10065 ;;      Params:         2       0       0       0       0       0
 10066 ;;      Locals:         4       0       0       0       0       0
 10067 ;;      Temps:          5       0       0       0       0       0
 10068 ;;      Totals:        11       0       0       0       0       0
 10069 ;;Total ram usage:       11 bytes
 10070 ;; Hardware stack levels used: 1
 10071 ;; This function calls:
 10072 ;;		Nothing
 10073 ;; This function is called by:
 10074 ;;		_mede_height
 10075 ;; This function uses a non-reentrant model
 10076 ;;
 10077                           
 10078     0C91                     _TMR1_ReadTimer:	
 10079                           ;psect for function _TMR1_ReadTimer
 10080                           
 10081     0C91                     i1l2674:	
 10082                           ;incstack = 0
 10083                           ; Regs used in _TMR1_ReadTimer: [wreg]
 10084                           
 10085                           
 10086                           ;mcc_generated_files/tmr1.c: 111:     uint16_t readVal;;mcc_generated_files/tmr1.c: 112:
      +                               uint8_t readValHigh;;mcc_generated_files/tmr1.c: 113:     uint8_t readValLow;;mcc_g
      +                          enerated_files/tmr1.c: 116:     readValLow = TMR1L;
 10087     0C91  0020               	movlb	0	; select bank0
 10088     0C92  0816               	movf	22,w	;volatile
 10089     0C93  00FA               	movwf	TMR1_ReadTimer@readValLow
 10090                           
 10091                           ;mcc_generated_files/tmr1.c: 117:     readValHigh = TMR1H;
 10092     0C94  0817               	movf	23,w	;volatile
 10093     0C95  00F9               	movwf	TMR1_ReadTimer@readValHigh
 10094                           
 10095                           ;mcc_generated_files/tmr1.c: 119:     readVal = ((uint16_t)readValHigh << 8) | readValLo
      +                          w;
 10096     0C96  087A               	movf	TMR1_ReadTimer@readValLow,w
 10097     0C97  00F2               	movwf	??_TMR1_ReadTimer
 10098     0C98  01F3               	clrf	??_TMR1_ReadTimer+1
 10099     0C99  0879               	movf	TMR1_ReadTimer@readValHigh,w
 10100     0C9A  00F4               	movwf	??_TMR1_ReadTimer+2
 10101     0C9B  01F5               	clrf	??_TMR1_ReadTimer+3
 10102     0C9C  0874               	movf	??_TMR1_ReadTimer+2,w
 10103     0C9D  00F5               	movwf	??_TMR1_ReadTimer+3
 10104     0C9E  01F4               	clrf	??_TMR1_ReadTimer+2
 10105     0C9F  0872               	movf	??_TMR1_ReadTimer,w
 10106     0CA0  0474               	iorwf	??_TMR1_ReadTimer+2,w
 10107     0CA1  00F7               	movwf	TMR1_ReadTimer@readVal
 10108     0CA2  0873               	movf	??_TMR1_ReadTimer+1,w
 10109     0CA3  0475               	iorwf	??_TMR1_ReadTimer+3,w
 10110     0CA4  00F8               	movwf	TMR1_ReadTimer@readVal+1
 10111                           
 10112                           ;mcc_generated_files/tmr1.c: 121:     return readVal;
 10113     0CA5  0878               	movf	TMR1_ReadTimer@readVal+1,w
 10114     0CA6  00F1               	movwf	?_TMR1_ReadTimer+1
 10115     0CA7  0877               	movf	TMR1_ReadTimer@readVal,w
 10116     0CA8  00F0               	movwf	?_TMR1_ReadTimer
 10117     0CA9                     i1l535:
 10118     0CA9  0008               	return
 10119     0CAA                     __end_of_TMR1_ReadTimer:
 10120                           
 10121                           	psect	text58
 10122     0C15                     __ptext58:	
 10123 ;; *************** function _TMR0_ISR *****************
 10124 ;; Defined at:
 10125 ;;		line 108 in file "mcc_generated_files/tmr0.c"
 10126 ;; Parameters:    Size  Location     Type
 10127 ;;		None
 10128 ;; Auto vars:     Size  Location     Type
 10129 ;;		None
 10130 ;; Return value:  Size  Location     Type
 10131 ;;                  1    wreg      void 
 10132 ;; Registers used:
 10133 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10134 ;; Tracked objects:
 10135 ;;		On entry : 0/0
 10136 ;;		On exit  : 0/0
 10137 ;;		Unchanged: 0/0
 10138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10139 ;;      Params:         0       0       0       0       0       0
 10140 ;;      Locals:         0       0       0       0       0       0
 10141 ;;      Temps:          0       0       0       0       0       0
 10142 ;;      Totals:         0       0       0       0       0       0
 10143 ;;Total ram usage:        0 bytes
 10144 ;; Hardware stack levels used: 1
 10145 ;; Hardware stack levels required when called: 3
 10146 ;; This function calls:
 10147 ;;		NULL
 10148 ;;		_TMR0_DefaultInterruptHandler
 10149 ;;		_end_Rx
 10150 ;; This function is called by:
 10151 ;;		_INTERRUPT_InterruptManager
 10152 ;; This function uses a non-reentrant model
 10153 ;;
 10154                           
 10155     0C15                     _TMR0_ISR:	
 10156                           ;psect for function _TMR0_ISR
 10157                           
 10158     0C15                     i1l3370:	
 10159                           ;incstack = 0
 10160                           ; Regs used in _TMR0_ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10161                           
 10162                           
 10163                           ;mcc_generated_files/tmr0.c: 112:     INTCONbits.TMR0IF = 0;
 10164     0C15  110B               	bcf	11,2	;volatile
 10165     0C16                     i1l3372:
 10166                           
 10167                           ;mcc_generated_files/tmr0.c: 114:     TMR0 = timer0ReloadVal;
 10168     0C16  0021               	movlb	1	; select bank1
 10169     0C17  084A               	movf	_timer0ReloadVal^(0+128),w	;volatile
 10170     0C18  0020               	movlb	0	; select bank0
 10171     0C19  0095               	movwf	21	;volatile
 10172     0C1A                     i1l3374:
 10173                           
 10174                           ;mcc_generated_files/tmr0.c: 116:     if(TMR0_InterruptHandler)
 10175     0C1A  0022               	movlb	2	; select bank2
 10176     0C1B  084A               	movf	_TMR0_InterruptHandler^(0+256),w
 10177     0C1C  044B               	iorwf	(_TMR0_InterruptHandler+1)^(0+256),w
 10178     0C1D  1903               	btfsc	3,2
 10179     0C1E  2C20               	goto	u292_21
 10180     0C1F  2C21               	goto	u292_20
 10181     0C20                     u292_21:
 10182     0C20  2C26               	goto	i1l374
 10183     0C21                     u292_20:
 10184     0C21                     i1l3376:
 10185                           
 10186                           ;mcc_generated_files/tmr0.c: 117:     {;mcc_generated_files/tmr0.c: 118:         TMR0_In
      +                          terruptHandler();
 10187     0C21  084B               	movf	(_TMR0_InterruptHandler+1)^(0+256),w
 10188     0C22  008A               	movwf	10
 10189     0C23  084A               	movf	_TMR0_InterruptHandler^(0+256),w
 10190     0C24  000A               	callw
 10191     0C25  318C               	pagesel	$
 10192     0C26                     i1l374:
 10193     0C26  0008               	return
 10194     0C27                     __end_of_TMR0_ISR:
 10195                           
 10196                           	psect	text59
 10197     0002                     __ptext59:	
 10198 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 10199 ;; Defined at:
 10200 ;;		line 129 in file "mcc_generated_files/tmr0.c"
 10201 ;; Parameters:    Size  Location     Type
 10202 ;;		None
 10203 ;; Auto vars:     Size  Location     Type
 10204 ;;		None
 10205 ;; Return value:  Size  Location     Type
 10206 ;;                  1    wreg      void 
 10207 ;; Registers used:
 10208 ;;		None
 10209 ;; Tracked objects:
 10210 ;;		On entry : 0/0
 10211 ;;		On exit  : 0/0
 10212 ;;		Unchanged: 0/0
 10213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10214 ;;      Params:         0       0       0       0       0       0
 10215 ;;      Locals:         0       0       0       0       0       0
 10216 ;;      Temps:          0       0       0       0       0       0
 10217 ;;      Totals:         0       0       0       0       0       0
 10218 ;;Total ram usage:        0 bytes
 10219 ;; Hardware stack levels used: 1
 10220 ;; This function calls:
 10221 ;;		Nothing
 10222 ;; This function is called by:
 10223 ;;		_TMR0_Initialize
 10224 ;;		_TMR0_ISR
 10225 ;; This function uses a non-reentrant model
 10226 ;;
 10227                           
 10228     0002                     _TMR0_DefaultInterruptHandler:	
 10229                           ;psect for function _TMR0_DefaultInterruptHandler
 10230                           
 10231     0002                     i1l380:	
 10232                           ;incstack = 0
 10233                           ; Regs used in _TMR0_DefaultInterruptHandler: []
 10234                           
 10235     0002  0008               	return
 10236     0003                     __end_of_TMR0_DefaultInterruptHandler:
 10237                           
 10238                           	psect	text60
 10239     0C4D                     __ptext60:	
 10240 ;; *************** function _end_Rx *****************
 10241 ;; Defined at:
 10242 ;;		line 169 in file "main.c"
 10243 ;; Parameters:    Size  Location     Type
 10244 ;;		None
 10245 ;; Auto vars:     Size  Location     Type
 10246 ;;		None
 10247 ;; Return value:  Size  Location     Type
 10248 ;;                  1    wreg      void 
 10249 ;; Registers used:
 10250 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10251 ;; Tracked objects:
 10252 ;;		On entry : 0/0
 10253 ;;		On exit  : 0/0
 10254 ;;		Unchanged: 0/0
 10255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10256 ;;      Params:         0       0       0       0       0       0
 10257 ;;      Locals:         0       0       0       0       0       0
 10258 ;;      Temps:          1       0       0       0       0       0
 10259 ;;      Totals:         1       0       0       0       0       0
 10260 ;;Total ram usage:        1 bytes
 10261 ;; Hardware stack levels used: 1
 10262 ;; Hardware stack levels required when called: 2
 10263 ;; This function calls:
 10264 ;;		_analisa_Rx
 10265 ;; This function is called by:
 10266 ;;		_main
 10267 ;;		_TMR0_ISR
 10268 ;; This function uses a non-reentrant model
 10269 ;;
 10270                           
 10271     0C4D                     _end_Rx:	
 10272                           ;psect for function _end_Rx
 10273                           
 10274     0C4D                     i1l3344:	
 10275                           ;incstack = 0
 10276                           ; Regs used in _end_Rx: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10277                           
 10278                           
 10279                           ;main.c: 170:     if(count_40ms >= 10){
 10280     0C4D  300A               	movlw	10
 10281     0C4E  0021               	movlb	1	; select bank1
 10282     0C4F  0245               	subwf	_count_40ms^(0+128),w
 10283     0C50  1C03               	skipc
 10284     0C51  2C53               	goto	u289_21
 10285     0C52  2C54               	goto	u289_20
 10286     0C53                     u289_21:
 10287     0C53  2C5E               	goto	i1l3352
 10288     0C54                     u289_20:
 10289     0C54                     i1l3346:
 10290                           
 10291                           ;main.c: 171:         count_40ms = 0;
 10292     0C54  01C5               	clrf	_count_40ms^(0+128)
 10293     0C55                     i1l3348:
 10294                           
 10295                           ;main.c: 172:         if(Rx_ctrl == 1){
 10296     0C55  0348               	decf	_Rx_ctrl^(0+128),w
 10297     0C56  1D03               	btfss	3,2
 10298     0C57  2C59               	goto	u290_21
 10299     0C58  2C5A               	goto	u290_20
 10300     0C59                     u290_21:
 10301     0C59  2C62               	goto	i1l717
 10302     0C5A                     u290_20:
 10303     0C5A                     i1l3350:
 10304                           
 10305                           ;main.c: 173:             analisa_Rx();
 10306     0C5A  3184  246B  318C   	fcall	_analisa_Rx
 10307     0C5D  2C62               	goto	i1l717
 10308     0C5E                     i1l3352:
 10309                           
 10310                           ;main.c: 177:         count_40ms++;
 10311     0C5E  3001               	movlw	1
 10312     0C5F  00F6               	movwf	??_end_Rx
 10313     0C60  0876               	movf	??_end_Rx,w
 10314     0C61  07C5               	addwf	_count_40ms^(0+128),f
 10315     0C62                     i1l717:
 10316     0C62  0008               	return
 10317     0C63                     __end_of_end_Rx:
 10318                           
 10319                           	psect	text61
 10320     046B                     __ptext61:	
 10321 ;; *************** function _analisa_Rx *****************
 10322 ;; Defined at:
 10323 ;;		line 91 in file "main.c"
 10324 ;; Parameters:    Size  Location     Type
 10325 ;;		None
 10326 ;; Auto vars:     Size  Location     Type
 10327 ;;		None
 10328 ;; Return value:  Size  Location     Type
 10329 ;;                  1    wreg      void 
 10330 ;; Registers used:
 10331 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10332 ;; Tracked objects:
 10333 ;;		On entry : 0/0
 10334 ;;		On exit  : 0/0
 10335 ;;		Unchanged: 0/0
 10336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10337 ;;      Params:         0       0       0       0       0       0
 10338 ;;      Locals:         0       0       0       0       0       0
 10339 ;;      Temps:          2       0       0       0       0       0
 10340 ;;      Totals:         2       0       0       0       0       0
 10341 ;;Total ram usage:        2 bytes
 10342 ;; Hardware stack levels used: 1
 10343 ;; Hardware stack levels required when called: 1
 10344 ;; This function calls:
 10345 ;;		i1_EPWM1_LoadDutyValue
 10346 ;; This function is called by:
 10347 ;;		_end_Rx
 10348 ;; This function uses a non-reentrant model
 10349 ;;
 10350                           
 10351     046B                     _analisa_Rx:	
 10352                           ;psect for function _analisa_Rx
 10353                           
 10354     046B                     i1l2698:	
 10355                           ;incstack = 0
 10356                           ; Regs used in _analisa_Rx: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10357                           
 10358                           
 10359                           ;main.c: 92:     Rx_ctrl = 0;
 10360     046B  0021               	movlb	1	; select bank1
 10361     046C  01C8               	clrf	_Rx_ctrl^(0+128)
 10362                           
 10363                           ;main.c: 93:     switch(bufferRx[0]){
 10364     046D  2D0A               	goto	i1l2756
 10365     046E                     i1l2700:
 10366                           
 10367                           ;main.c: 95:             if(countRx==7){
 10368     046E  3007               	movlw	7
 10369     046F  0646               	xorwf	_countRx^(0+128),w
 10370     0470  1D03               	btfss	3,2
 10371     0471  2C73               	goto	u189_21
 10372     0472  2C74               	goto	u189_20
 10373     0473                     u189_21:
 10374     0473  2C9A               	goto	i1l2706
 10375     0474                     u189_20:
 10376     0474                     i1l2702:
 10377                           
 10378                           ;main.c: 96:                 func_mode = bufferRx[0];
 10379     0474  0820               	movf	_bufferRx^(0+128),w
 10380     0475  00C7               	movwf	_func_mode^(0+128)
 10381                           
 10382                           ;main.c: 97:                 vRx.vH = bufferRx[3];
 10383     0476  0823               	movf	(_bufferRx^(0+128)+3),w
 10384     0477  0020               	movlb	0	; select bank0
 10385     0478  00EE               	movwf	_vRx
 10386                           
 10387                           ;main.c: 98:                 vRx.vL = bufferRx[4];
 10388     0479  0021               	movlb	1	; select bank1
 10389     047A  0824               	movf	(_bufferRx^(0+128)+4),w
 10390     047B  0020               	movlb	0	; select bank0
 10391     047C  00EF               	movwf	_vRx+1
 10392                           
 10393                           ;main.c: 99:                 sp_position = vRx.v;
 10394     047D  086F               	movf	_vRx+1,w
 10395     047E  0022               	movlb	2	; select bank2
 10396     047F  00C1               	movwf	(_sp_position+1)^(0+256)
 10397     0480  0020               	movlb	0	; select bank0
 10398     0481  086E               	movf	_vRx,w
 10399     0482  0022               	movlb	2	; select bank2
 10400     0483  00C0               	movwf	_sp_position^(0+256)
 10401                           
 10402                           ;main.c: 100:                 vRx.vH = bufferRx[5];
 10403     0484  0021               	movlb	1	; select bank1
 10404     0485  0825               	movf	(_bufferRx^(0+128)+5),w
 10405     0486  0020               	movlb	0	; select bank0
 10406     0487  00EE               	movwf	_vRx
 10407                           
 10408                           ;main.c: 101:                 vRx.vL = bufferRx[6];
 10409     0488  0021               	movlb	1	; select bank1
 10410     0489  0826               	movf	(_bufferRx^(0+128)+6),w
 10411     048A  0020               	movlb	0	; select bank0
 10412     048B  00EF               	movwf	_vRx+1
 10413                           
 10414                           ;main.c: 102:                 dc = vRx.v;
 10415     048C  086F               	movf	_vRx+1,w
 10416     048D  0021               	movlb	1	; select bank1
 10417     048E  00AD               	movwf	(_dc+1)^(0+128)
 10418     048F  0020               	movlb	0	; select bank0
 10419     0490  086E               	movf	_vRx,w
 10420     0491  0021               	movlb	1	; select bank1
 10421     0492  00AC               	movwf	_dc^(0+128)
 10422     0493                     i1l2704:
 10423                           
 10424                           ;main.c: 103:                 EPWM1_LoadDutyValue(dc);
 10425     0493  082D               	movf	(_dc+1)^(0+128),w
 10426     0494  00F1               	movwf	i1EPWM1_LoadDutyValue@dutyValue+1
 10427     0495  082C               	movf	_dc^(0+128),w
 10428     0496  00F0               	movwf	i1EPWM1_LoadDutyValue@dutyValue
 10429     0497  318C  2463  3184   	fcall	i1_EPWM1_LoadDutyValue
 10430     049A                     i1l2706:
 10431                           
 10432                           ;main.c: 105:             countRx = 0;
 10433     049A  0021               	movlb	1	; select bank1
 10434     049B  01C6               	clrf	_countRx^(0+128)
 10435                           
 10436                           ;main.c: 106:             break;
 10437     049C  2D18               	goto	i1l708
 10438     049D                     i1l2708:
 10439                           
 10440                           ;main.c: 108:             if(countRx==7){
 10441     049D  3007               	movlw	7
 10442     049E  0646               	xorwf	_countRx^(0+128),w
 10443     049F  1D03               	btfss	3,2
 10444     04A0  2CA2               	goto	u190_21
 10445     04A1  2CA3               	goto	u190_20
 10446     04A2                     u190_21:
 10447     04A2  2C9A               	goto	i1l2706
 10448     04A3                     u190_20:
 10449     04A3                     i1l2710:
 10450                           
 10451                           ;main.c: 109:                 func_mode = bufferRx[0];
 10452     04A3  0820               	movf	_bufferRx^(0+128),w
 10453     04A4  00C7               	movwf	_func_mode^(0+128)
 10454     04A5                     i1l2712:
 10455                           
 10456                           ;main.c: 110:                 controlchoice = 1;
 10457     04A5  01EF               	clrf	_controlchoice^(0+128)
 10458     04A6  0AEF               	incf	_controlchoice^(0+128),f
 10459                           
 10460                           ;main.c: 111:                 vRx.vH = bufferRx[1];
 10461     04A7  0821               	movf	(_bufferRx^(0+128)+1),w
 10462     04A8  0020               	movlb	0	; select bank0
 10463     04A9  00EE               	movwf	_vRx
 10464                           
 10465                           ;main.c: 112:                 vRx.vL = bufferRx[2];
 10466     04AA  0021               	movlb	1	; select bank1
 10467     04AB  0822               	movf	(_bufferRx^(0+128)+2),w
 10468     04AC  0020               	movlb	0	; select bank0
 10469     04AD  00EF               	movwf	_vRx+1
 10470                           
 10471                           ;main.c: 113:                 sp_height = vRx.v;
 10472     04AE  086F               	movf	_vRx+1,w
 10473     04AF  0021               	movlb	1	; select bank1
 10474     04B0  00AF               	movwf	(_sp_height+1)^(0+128)
 10475     04B1  0020               	movlb	0	; select bank0
 10476     04B2  086E               	movf	_vRx,w
 10477     04B3  0021               	movlb	1	; select bank1
 10478     04B4  00AE               	movwf	_sp_height^(0+128)
 10479     04B5                     i1l2714:
 10480                           
 10481                           ;main.c: 114:                 ballset = vRx.v / 2;
 10482     04B5  0020               	movlb	0	; select bank0
 10483     04B6  086F               	movf	_vRx+1,w
 10484     04B7  00F5               	movwf	??_analisa_Rx+1
 10485     04B8  086E               	movf	_vRx,w
 10486     04B9  00F4               	movwf	??_analisa_Rx
 10487     04BA  36F5               	lsrf	??_analisa_Rx+1,f
 10488     04BB  0CF4               	rrf	??_analisa_Rx,f
 10489     04BC  0874               	movf	??_analisa_Rx,w
 10490     04BD  0021               	movlb	1	; select bank1
 10491     04BE  00B8               	movwf	_ballset^(0+128)
 10492     04BF  0875               	movf	??_analisa_Rx+1,w
 10493     04C0  00B9               	movwf	(_ballset+1)^(0+128)
 10494     04C1                     i1l2716:
 10495                           
 10496                           ;main.c: 115:                 vRx.vH = bufferRx[3];
 10497     04C1  0823               	movf	(_bufferRx^(0+128)+3),w
 10498     04C2  0020               	movlb	0	; select bank0
 10499     04C3  00EE               	movwf	_vRx
 10500     04C4                     i1l2718:
 10501                           
 10502                           ;main.c: 116:                 vRx.vL = bufferRx[4];
 10503     04C4  0021               	movlb	1	; select bank1
 10504     04C5  0824               	movf	(_bufferRx^(0+128)+4),w
 10505     04C6  0020               	movlb	0	; select bank0
 10506     04C7  00EF               	movwf	_vRx+1
 10507     04C8                     i1l2720:
 10508                           
 10509                           ;main.c: 117:                 sp_position = vRx.v;
 10510     04C8  086F               	movf	_vRx+1,w
 10511     04C9  0022               	movlb	2	; select bank2
 10512     04CA  00C1               	movwf	(_sp_position+1)^(0+256)
 10513     04CB  0020               	movlb	0	; select bank0
 10514     04CC  086E               	movf	_vRx,w
 10515     04CD  0022               	movlb	2	; select bank2
 10516     04CE  00C0               	movwf	_sp_position^(0+256)
 10517     04CF  2C9A               	goto	i1l2706
 10518     04D0                     i1l2724:
 10519                           
 10520                           ;main.c: 122:             if(countRx==7){
 10521     04D0  3007               	movlw	7
 10522     04D1  0646               	xorwf	_countRx^(0+128),w
 10523     04D2  1D03               	btfss	3,2
 10524     04D3  2CD5               	goto	u191_21
 10525     04D4  2CD6               	goto	u191_20
 10526     04D5                     u191_21:
 10527     04D5  2C9A               	goto	i1l2706
 10528     04D6                     u191_20:
 10529     04D6                     i1l2726:
 10530                           
 10531                           ;main.c: 123:                 func_mode = bufferRx[0];
 10532     04D6  0820               	movf	_bufferRx^(0+128),w
 10533     04D7  00C7               	movwf	_func_mode^(0+128)
 10534     04D8                     i1l2728:
 10535                           
 10536                           ;main.c: 124:                 controlchoice = 0;
 10537     04D8  01EF               	clrf	_controlchoice^(0+128)
 10538     04D9                     i1l2730:
 10539                           
 10540                           ;main.c: 125:                 vRx.vH = bufferRx[1];
 10541     04D9  0821               	movf	(_bufferRx^(0+128)+1),w
 10542     04DA  0020               	movlb	0	; select bank0
 10543     04DB  00EE               	movwf	_vRx
 10544     04DC                     i1l2732:
 10545                           
 10546                           ;main.c: 126:                 vRx.vL = bufferRx[2];
 10547     04DC  0021               	movlb	1	; select bank1
 10548     04DD  0822               	movf	(_bufferRx^(0+128)+2),w
 10549     04DE  0020               	movlb	0	; select bank0
 10550     04DF  00EF               	movwf	_vRx+1
 10551     04E0                     i1l2734:
 10552                           
 10553                           ;main.c: 127:                 sp_height = vRx.v;
 10554     04E0  086F               	movf	_vRx+1,w
 10555     04E1  0021               	movlb	1	; select bank1
 10556     04E2  00AF               	movwf	(_sp_height+1)^(0+128)
 10557     04E3  0020               	movlb	0	; select bank0
 10558     04E4  086E               	movf	_vRx,w
 10559     04E5  0021               	movlb	1	; select bank1
 10560     04E6  00AE               	movwf	_sp_height^(0+128)
 10561     04E7                     i1l2736:
 10562                           
 10563                           ;main.c: 128:                 ballset = vRx.v / 2;
 10564     04E7  0020               	movlb	0	; select bank0
 10565     04E8  086F               	movf	_vRx+1,w
 10566     04E9  00F5               	movwf	??_analisa_Rx+1
 10567     04EA  086E               	movf	_vRx,w
 10568     04EB  00F4               	movwf	??_analisa_Rx
 10569     04EC  36F5               	lsrf	??_analisa_Rx+1,f
 10570     04ED  0CF4               	rrf	??_analisa_Rx,f
 10571     04EE  0874               	movf	??_analisa_Rx,w
 10572     04EF  0021               	movlb	1	; select bank1
 10573     04F0  00B8               	movwf	_ballset^(0+128)
 10574     04F1  0875               	movf	??_analisa_Rx+1,w
 10575     04F2  00B9               	movwf	(_ballset+1)^(0+128)
 10576     04F3                     i1l2738:
 10577                           
 10578                           ;main.c: 129:                 vRx.vH = bufferRx[5];
 10579     04F3  0825               	movf	(_bufferRx^(0+128)+5),w
 10580     04F4  0020               	movlb	0	; select bank0
 10581     04F5  00EE               	movwf	_vRx
 10582     04F6                     i1l2740:
 10583                           
 10584                           ;main.c: 130:                 vRx.vL = bufferRx[6];
 10585     04F6  0021               	movlb	1	; select bank1
 10586     04F7  0826               	movf	(_bufferRx^(0+128)+6),w
 10587     04F8  0020               	movlb	0	; select bank0
 10588     04F9  00EF               	movwf	_vRx+1
 10589     04FA                     i1l2742:
 10590                           
 10591                           ;main.c: 131:                 dc = vRx.v;
 10592     04FA  086F               	movf	_vRx+1,w
 10593     04FB  0021               	movlb	1	; select bank1
 10594     04FC  00AD               	movwf	(_dc+1)^(0+128)
 10595     04FD  0020               	movlb	0	; select bank0
 10596     04FE  086E               	movf	_vRx,w
 10597     04FF  0021               	movlb	1	; select bank1
 10598     0500  00AC               	movwf	_dc^(0+128)
 10599     0501  2C93               	goto	i1l2704
 10600     0502                     i1l2748:
 10601                           
 10602                           ;main.c: 137:             if(countRx==7){
 10603     0502  3007               	movlw	7
 10604     0503  0646               	xorwf	_countRx^(0+128),w
 10605     0504  1D03               	btfss	3,2
 10606     0505  2D07               	goto	u192_21
 10607     0506  2D08               	goto	u192_20
 10608     0507                     u192_21:
 10609     0507  2C9A               	goto	i1l2706
 10610     0508                     u192_20:
 10611     0508                     i1l2750:
 10612     0508  0001               	reset	;# 
 10613     0509  2C9A               	goto	i1l2706
 10614     050A                     i1l2756:
 10615     050A  0820               	movf	_bufferRx^(0+128),w
 10616                           
 10617                           ; Switch size 1, requested type "simple"
 10618                           ; Number of cases is 4, Range of values is 0 to 3
 10619                           ; switch strategies available:
 10620                           ; Name         Instructions Cycles
 10621                           ; simple_byte           13     7 (average)
 10622                           ; direct_byte           14     6 (fixed)
 10623                           ; jumptable            260     6 (fixed)
 10624                           ;	Chosen strategy is simple_byte
 10625     050B  3A00               	xorlw	0	; case 0
 10626     050C  1903               	skipnz
 10627     050D  2C6E               	goto	i1l2700
 10628     050E  3A01               	xorlw	1	; case 1
 10629     050F  1903               	skipnz
 10630     0510  2C9D               	goto	i1l2708
 10631     0511  3A03               	xorlw	3	; case 2
 10632     0512  1903               	skipnz
 10633     0513  2CD0               	goto	i1l2724
 10634     0514  3A01               	xorlw	1	; case 3
 10635     0515  1903               	skipnz
 10636     0516  2D02               	goto	i1l2748
 10637     0517  2C9A               	goto	i1l2706
 10638     0518                     i1l708:
 10639     0518  0008               	return
 10640     0519                     __end_of_analisa_Rx:
 10641                           
 10642                           	psect	text62
 10643     0C63                     __ptext62:	
 10644 ;; *************** function i1_EPWM1_LoadDutyValue *****************
 10645 ;; Defined at:
 10646 ;;		line 90 in file "mcc_generated_files/epwm1.c"
 10647 ;; Parameters:    Size  Location     Type
 10648 ;;  dutyValue       2    0[COMMON] unsigned short 
 10649 ;; Auto vars:     Size  Location     Type
 10650 ;;		None
 10651 ;; Return value:  Size  Location     Type
 10652 ;;                  1    wreg      void 
 10653 ;; Registers used:
 10654 ;;		wreg, status,2, status,0
 10655 ;; Tracked objects:
 10656 ;;		On entry : 0/0
 10657 ;;		On exit  : 0/0
 10658 ;;		Unchanged: 0/0
 10659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10660 ;;      Params:         2       0       0       0       0       0
 10661 ;;      Locals:         0       0       0       0       0       0
 10662 ;;      Temps:          2       0       0       0       0       0
 10663 ;;      Totals:         4       0       0       0       0       0
 10664 ;;Total ram usage:        4 bytes
 10665 ;; Hardware stack levels used: 1
 10666 ;; This function calls:
 10667 ;;		Nothing
 10668 ;; This function is called by:
 10669 ;;		_analisa_Rx
 10670 ;; This function uses a non-reentrant model
 10671 ;;
 10672                           
 10673     0C63                     i1_EPWM1_LoadDutyValue:	
 10674                           ;psect for function i1_EPWM1_LoadDutyValue
 10675                           
 10676     0C63                     i1l2604:	
 10677                           ;incstack = 0
 10678                           ; Regs used in i1_EPWM1_LoadDutyValue: [wreg+status,2+status,0]
 10679                           
 10680                           
 10681                           ;mcc_generated_files/epwm1.c: 90: void EPWM1_LoadDutyValue(uint16_t dutyValue);mcc_gener
      +                          ated_files/epwm1.c: 91: {;mcc_generated_files/epwm1.c: 93:     CCPR1L = ((dutyValue & 0x
      +                          03FC)>>2);
 10682     0C63  0871               	movf	i1EPWM1_LoadDutyValue@dutyValue+1,w
 10683     0C64  00F3               	movwf	??i1_EPWM1_LoadDutyValue+1
 10684     0C65  0870               	movf	i1EPWM1_LoadDutyValue@dutyValue,w
 10685     0C66  00F2               	movwf	??i1_EPWM1_LoadDutyValue
 10686     0C67  36F3               	lsrf	??i1_EPWM1_LoadDutyValue+1,f
 10687     0C68  0CF2               	rrf	??i1_EPWM1_LoadDutyValue,f
 10688     0C69  36F3               	lsrf	??i1_EPWM1_LoadDutyValue+1,f
 10689     0C6A  0CF2               	rrf	??i1_EPWM1_LoadDutyValue,f
 10690     0C6B  0872               	movf	??i1_EPWM1_LoadDutyValue,w
 10691     0C6C  0025               	movlb	5	; select bank5
 10692     0C6D  0091               	movwf	17	;volatile
 10693                           
 10694                           ;mcc_generated_files/epwm1.c: 96:     CCP1CON = ((uint8_t)(CCP1CON & 0xCF) | ((dutyValue
      +                           & 0x0003)<<4));
 10695     0C6E  0870               	movf	i1EPWM1_LoadDutyValue@dutyValue,w
 10696     0C6F  3903               	andlw	3
 10697     0C70  00F2               	movwf	??i1_EPWM1_LoadDutyValue
 10698     0C71  3004               	movlw	4
 10699     0C72                     u171_25:
 10700     0C72  35F2               	lslf	??i1_EPWM1_LoadDutyValue,f
 10701     0C73  0B89               	decfsz	9,f
 10702     0C74  2C72               	goto	u171_25
 10703     0C75  0813               	movf	19,w	;volatile
 10704     0C76  39CF               	andlw	207
 10705     0C77  0472               	iorwf	??i1_EPWM1_LoadDutyValue,w
 10706     0C78  0093               	movwf	19	;volatile
 10707     0C79                     i1l159:
 10708     0C79  0008               	return
 10709     0C7A                     __end_ofi1_EPWM1_LoadDutyValue:
 10710                           
 10711                           	psect	text63
 10712     0B1F                     __ptext63:	
 10713 ;; *************** function _PIN_MANAGER_IOC *****************
 10714 ;; Defined at:
 10715 ;;		line 98 in file "mcc_generated_files/pin_manager.c"
 10716 ;; Parameters:    Size  Location     Type
 10717 ;;		None
 10718 ;; Auto vars:     Size  Location     Type
 10719 ;;		None
 10720 ;; Return value:  Size  Location     Type
 10721 ;;                  1    wreg      void 
 10722 ;; Registers used:
 10723 ;;		None
 10724 ;; Tracked objects:
 10725 ;;		On entry : 0/0
 10726 ;;		On exit  : 0/0
 10727 ;;		Unchanged: 0/0
 10728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10729 ;;      Params:         0       0       0       0       0       0
 10730 ;;      Locals:         0       0       0       0       0       0
 10731 ;;      Temps:          0       0       0       0       0       0
 10732 ;;      Totals:         0       0       0       0       0       0
 10733 ;;Total ram usage:        0 bytes
 10734 ;; Hardware stack levels used: 1
 10735 ;; This function calls:
 10736 ;;		Nothing
 10737 ;; This function is called by:
 10738 ;;		_INTERRUPT_InterruptManager
 10739 ;; This function uses a non-reentrant model
 10740 ;;
 10741                           
 10742     0B1F                     _PIN_MANAGER_IOC:	
 10743                           ;psect for function _PIN_MANAGER_IOC
 10744                           
 10745     0B1F                     i1l75:	
 10746                           ;incstack = 0
 10747                           ; Regs used in _PIN_MANAGER_IOC: []
 10748                           
 10749     0B1F  0008               	return
 10750     0B20                     __end_of_PIN_MANAGER_IOC:
 10751                           
 10752                           	psect	text64
 10753     0D74                     __ptext64:	
 10754 ;; *************** function _EUSART_Transmit_ISR *****************
 10755 ;; Defined at:
 10756 ;;		line 197 in file "mcc_generated_files/eusart.c"
 10757 ;; Parameters:    Size  Location     Type
 10758 ;;		None
 10759 ;; Auto vars:     Size  Location     Type
 10760 ;;		None
 10761 ;; Return value:  Size  Location     Type
 10762 ;;                  1    wreg      void 
 10763 ;; Registers used:
 10764 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10765 ;; Tracked objects:
 10766 ;;		On entry : 0/0
 10767 ;;		On exit  : 0/0
 10768 ;;		Unchanged: 0/0
 10769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10770 ;;      Params:         0       0       0       0       0       0
 10771 ;;      Locals:         0       0       0       0       0       0
 10772 ;;      Temps:          1       0       0       0       0       0
 10773 ;;      Totals:         1       0       0       0       0       0
 10774 ;;Total ram usage:        1 bytes
 10775 ;; Hardware stack levels used: 1
 10776 ;; This function calls:
 10777 ;;		Nothing
 10778 ;; This function is called by:
 10779 ;;		_EUSART_Initialize
 10780 ;;		_INTERRUPT_InterruptManager
 10781 ;; This function uses a non-reentrant model
 10782 ;;
 10783                           
 10784     0D74                     _EUSART_Transmit_ISR:	
 10785                           ;psect for function _EUSART_Transmit_ISR
 10786                           
 10787     0D74                     i1l3408:	
 10788                           ;incstack = 0
 10789                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 10790                           
 10791                           
 10792                           ;mcc_generated_files/eusart.c: 201:     if(sizeof(eusartTxBuffer) > eusartTxBufferRemain
      +                          ing)
 10793     0D74  3008               	movlw	8
 10794     0D75  0021               	movlb	1	; select bank1
 10795     0D76  024F               	subwf	_eusartTxBufferRemaining^(0+128),w	;volatile
 10796     0D77  1803               	skipnc
 10797     0D78  2D7A               	goto	u298_21
 10798     0D79  2D7B               	goto	u298_20
 10799     0D7A                     u298_21:
 10800     0D7A  2D94               	goto	i1l306
 10801     0D7B                     u298_20:
 10802     0D7B                     i1l3410:
 10803                           
 10804                           ;mcc_generated_files/eusart.c: 202:     {;mcc_generated_files/eusart.c: 203:         TXR
      +                          EG = eusartTxBuffer[eusartTxTail++];
 10805     0D7B  0850               	movf	_eusartTxTail^(0+128),w
 10806     0D7C  3E30               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
 10807     0D7D  0086               	movwf	6
 10808     0D7E  3001               	movlw	1	; select bank2/3
 10809     0D7F  0087               	movwf	7
 10810     0D80  0801               	movf	1,w
 10811     0D81  0023               	movlb	3	; select bank3
 10812     0D82  009A               	movwf	26	;volatile
 10813     0D83                     i1l3412:
 10814     0D83  3001               	movlw	1
 10815     0D84  00F0               	movwf	??_EUSART_Transmit_ISR
 10816     0D85  0870               	movf	??_EUSART_Transmit_ISR,w
 10817     0D86  0021               	movlb	1	; select bank1
 10818     0D87  07D0               	addwf	_eusartTxTail^(0+128),f	;volatile
 10819     0D88                     i1l3414:
 10820                           
 10821                           ;mcc_generated_files/eusart.c: 204:         if(sizeof(eusartTxBuffer) <= eusartTxTail)
 10822     0D88  3008               	movlw	8
 10823     0D89  0250               	subwf	_eusartTxTail^(0+128),w	;volatile
 10824     0D8A  1C03               	skipc
 10825     0D8B  2D8D               	goto	u299_21
 10826     0D8C  2D8E               	goto	u299_20
 10827     0D8D                     u299_21:
 10828     0D8D  2D8F               	goto	i1l3418
 10829     0D8E                     u299_20:
 10830     0D8E                     i1l3416:
 10831                           
 10832                           ;mcc_generated_files/eusart.c: 205:         {;mcc_generated_files/eusart.c: 206:        
      +                               eusartTxTail = 0;
 10833     0D8E  01D0               	clrf	_eusartTxTail^(0+128)	;volatile
 10834     0D8F                     i1l3418:
 10835                           
 10836                           ;mcc_generated_files/eusart.c: 208:         eusartTxBufferRemaining++;
 10837     0D8F  3001               	movlw	1
 10838     0D90  00F0               	movwf	??_EUSART_Transmit_ISR
 10839     0D91  0870               	movf	??_EUSART_Transmit_ISR,w
 10840     0D92  07CF               	addwf	_eusartTxBufferRemaining^(0+128),f	;volatile
 10841                           
 10842                           ;mcc_generated_files/eusart.c: 209:     }
 10843     0D93  2D95               	goto	i1l309
 10844     0D94                     i1l306:	
 10845                           ;mcc_generated_files/eusart.c: 210:     else
 10846                           
 10847                           
 10848                           ;mcc_generated_files/eusart.c: 211:     {;mcc_generated_files/eusart.c: 212:         PIE
      +                          1bits.TXIE = 0;
 10849     0D94  1211               	bcf	17,4	;volatile
 10850     0D95                     i1l309:
 10851     0D95  0008               	return
 10852     0D96                     __end_of_EUSART_Transmit_ISR:
 10853                           
 10854                           	psect	text65
 10855     0B2A                     __ptext65:	
 10856 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
 10857 ;; Defined at:
 10858 ;;		line 252 in file "mcc_generated_files/eusart.c"
 10859 ;; Parameters:    Size  Location     Type
 10860 ;;		None
 10861 ;; Auto vars:     Size  Location     Type
 10862 ;;		None
 10863 ;; Return value:  Size  Location     Type
 10864 ;;                  1    wreg      void 
 10865 ;; Registers used:
 10866 ;;		None
 10867 ;; Tracked objects:
 10868 ;;		On entry : 0/0
 10869 ;;		On exit  : 0/0
 10870 ;;		Unchanged: 0/0
 10871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10872 ;;      Params:         0       0       0       0       0       0
 10873 ;;      Locals:         0       0       0       0       0       0
 10874 ;;      Temps:          0       0       0       0       0       0
 10875 ;;      Totals:         0       0       0       0       0       0
 10876 ;;Total ram usage:        0 bytes
 10877 ;; Hardware stack levels used: 1
 10878 ;; This function calls:
 10879 ;;		Nothing
 10880 ;; This function is called by:
 10881 ;;		_EUSART_Initialize
 10882 ;;		_EUSART_Receive_ISR
 10883 ;; This function uses a non-reentrant model
 10884 ;;
 10885                           
 10886     0B2A                     _EUSART_DefaultOverrunErrorHandler:	
 10887                           ;psect for function _EUSART_DefaultOverrunErrorHandler
 10888                           
 10889     0B2A                     i1l3318:	
 10890                           ;incstack = 0
 10891                           ; Regs used in _EUSART_DefaultOverrunErrorHandler: []
 10892                           
 10893                           
 10894                           ;mcc_generated_files/eusart.c: 255:     RCSTAbits.CREN = 0;
 10895     0B2A  0023               	movlb	3	; select bank3
 10896     0B2B  121D               	bcf	29,4	;volatile
 10897                           
 10898                           ;mcc_generated_files/eusart.c: 256:     RCSTAbits.CREN = 1;
 10899     0B2C  161D               	bsf	29,4	;volatile
 10900     0B2D                     i1l326:
 10901     0B2D  0008               	return
 10902     0B2E                     __end_of_EUSART_DefaultOverrunErrorHandler:
 10903                           
 10904                           	psect	text66
 10905     0B1E                     __ptext66:	
 10906 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
 10907 ;; Defined at:
 10908 ;;		line 250 in file "mcc_generated_files/eusart.c"
 10909 ;; Parameters:    Size  Location     Type
 10910 ;;		None
 10911 ;; Auto vars:     Size  Location     Type
 10912 ;;		None
 10913 ;; Return value:  Size  Location     Type
 10914 ;;                  1    wreg      void 
 10915 ;; Registers used:
 10916 ;;		None
 10917 ;; Tracked objects:
 10918 ;;		On entry : 0/0
 10919 ;;		On exit  : 0/0
 10920 ;;		Unchanged: 0/0
 10921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10922 ;;      Params:         0       0       0       0       0       0
 10923 ;;      Locals:         0       0       0       0       0       0
 10924 ;;      Temps:          0       0       0       0       0       0
 10925 ;;      Totals:         0       0       0       0       0       0
 10926 ;;Total ram usage:        0 bytes
 10927 ;; Hardware stack levels used: 1
 10928 ;; This function calls:
 10929 ;;		Nothing
 10930 ;; This function is called by:
 10931 ;;		_EUSART_Initialize
 10932 ;;		_EUSART_Receive_ISR
 10933 ;; This function uses a non-reentrant model
 10934 ;;
 10935                           
 10936     0B1E                     _EUSART_DefaultFramingErrorHandler:	
 10937                           ;psect for function _EUSART_DefaultFramingErrorHandler
 10938                           
 10939     0B1E                     i1l323:	
 10940                           ;incstack = 0
 10941                           ; Regs used in _EUSART_DefaultFramingErrorHandler: []
 10942                           
 10943     0B1E  0008               	return
 10944     0B1F                     __end_of_EUSART_DefaultFramingErrorHandler:
 10945                           
 10946                           	psect	text67
 10947     0B26                     __ptext67:	
 10948 ;; *************** function _EUSART_DefaultErrorHandler *****************
 10949 ;; Defined at:
 10950 ;;		line 260 in file "mcc_generated_files/eusart.c"
 10951 ;; Parameters:    Size  Location     Type
 10952 ;;		None
 10953 ;; Auto vars:     Size  Location     Type
 10954 ;;		None
 10955 ;; Return value:  Size  Location     Type
 10956 ;;                  1    wreg      void 
 10957 ;; Registers used:
 10958 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10959 ;; Tracked objects:
 10960 ;;		On entry : 0/0
 10961 ;;		On exit  : 0/0
 10962 ;;		Unchanged: 0/0
 10963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10964 ;;      Params:         0       0       0       0       0       0
 10965 ;;      Locals:         0       0       0       0       0       0
 10966 ;;      Temps:          0       0       0       0       0       0
 10967 ;;      Totals:         0       0       0       0       0       0
 10968 ;;Total ram usage:        0 bytes
 10969 ;; Hardware stack levels used: 1
 10970 ;; Hardware stack levels required when called: 1
 10971 ;; This function calls:
 10972 ;;		_EUSART_RxDataHandler
 10973 ;; This function is called by:
 10974 ;;		_EUSART_Initialize
 10975 ;;		_EUSART_Receive_ISR
 10976 ;; This function uses a non-reentrant model
 10977 ;;
 10978                           
 10979     0B26                     _EUSART_DefaultErrorHandler:	
 10980                           ;psect for function _EUSART_DefaultErrorHandler
 10981                           
 10982     0B26                     i1l3320:	
 10983                           ;incstack = 0
 10984                           ; Regs used in _EUSART_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 10985                           
 10986                           
 10987                           ;mcc_generated_files/eusart.c: 261:     EUSART_RxDataHandler();
 10988     0B26  318C  24AA  318B   	fcall	_EUSART_RxDataHandler
 10989     0B29                     i1l329:
 10990     0B29  0008               	return
 10991     0B2A                     __end_of_EUSART_DefaultErrorHandler:
 10992                           
 10993                           	psect	text68
 10994     0CAA                     __ptext68:	
 10995 ;; *************** function _EUSART_RxDataHandler *****************
 10996 ;; Defined at:
 10997 ;;		line 240 in file "mcc_generated_files/eusart.c"
 10998 ;; Parameters:    Size  Location     Type
 10999 ;;		None
 11000 ;; Auto vars:     Size  Location     Type
 11001 ;;		None
 11002 ;; Return value:  Size  Location     Type
 11003 ;;                  1    wreg      void 
 11004 ;; Registers used:
 11005 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11006 ;; Tracked objects:
 11007 ;;		On entry : 0/0
 11008 ;;		On exit  : 0/0
 11009 ;;		Unchanged: 0/0
 11010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 11011 ;;      Params:         0       0       0       0       0       0
 11012 ;;      Locals:         0       0       0       0       0       0
 11013 ;;      Temps:          1       0       0       0       0       0
 11014 ;;      Totals:         1       0       0       0       0       0
 11015 ;;Total ram usage:        1 bytes
 11016 ;; Hardware stack levels used: 1
 11017 ;; This function calls:
 11018 ;;		Nothing
 11019 ;; This function is called by:
 11020 ;;		_EUSART_Receive_ISR
 11021 ;;		_EUSART_DefaultErrorHandler
 11022 ;; This function uses a non-reentrant model
 11023 ;;
 11024                           
 11025     0CAA                     _EUSART_RxDataHandler:	
 11026                           ;psect for function _EUSART_RxDataHandler
 11027                           
 11028     0CAA                     i1l2658:	
 11029                           ;incstack = 0
 11030                           ; Regs used in _EUSART_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 11031                           
 11032                           
 11033                           ;mcc_generated_files/eusart.c: 242:     eusartRxBuffer[eusartRxHead++] = RCREG;
 11034     0CAA  0021               	movlb	1	; select bank1
 11035     0CAB  084E               	movf	_eusartRxHead^(0+128),w
 11036     0CAC  3E28               	addlw	(low (_eusartRxBuffer| (0+256)))& (0+255)
 11037     0CAD  0086               	movwf	6
 11038     0CAE  3001               	movlw	1	; select bank2/3
 11039     0CAF  0087               	movwf	7
 11040     0CB0  0023               	movlb	3	; select bank3
 11041     0CB1  0819               	movf	25,w	;volatile
 11042     0CB2  0081               	movwf	1
 11043     0CB3                     i1l2660:
 11044     0CB3  3001               	movlw	1
 11045     0CB4  00F0               	movwf	??_EUSART_RxDataHandler
 11046     0CB5  0870               	movf	??_EUSART_RxDataHandler,w
 11047     0CB6  0021               	movlb	1	; select bank1
 11048     0CB7  07CE               	addwf	_eusartRxHead^(0+128),f	;volatile
 11049     0CB8                     i1l2662:
 11050                           
 11051                           ;mcc_generated_files/eusart.c: 243:     if(sizeof(eusartRxBuffer) <= eusartRxHead)
 11052     0CB8  3008               	movlw	8
 11053     0CB9  024E               	subwf	_eusartRxHead^(0+128),w	;volatile
 11054     0CBA  1C03               	skipc
 11055     0CBB  2CBD               	goto	u184_21
 11056     0CBC  2CBE               	goto	u184_20
 11057     0CBD                     u184_21:
 11058     0CBD  2CBF               	goto	i1l2666
 11059     0CBE                     u184_20:
 11060     0CBE                     i1l2664:
 11061                           
 11062                           ;mcc_generated_files/eusart.c: 244:     {;mcc_generated_files/eusart.c: 245:         eus
      +                          artRxHead = 0;
 11063     0CBE  01CE               	clrf	_eusartRxHead^(0+128)	;volatile
 11064     0CBF                     i1l2666:
 11065                           
 11066                           ;mcc_generated_files/eusart.c: 247:     eusartRxCount++;
 11067     0CBF  3001               	movlw	1
 11068     0CC0  00F0               	movwf	??_EUSART_RxDataHandler
 11069     0CC1  0870               	movf	??_EUSART_RxDataHandler,w
 11070     0CC2  07CC               	addwf	_eusartRxCount^(0+128),f	;volatile
 11071     0CC3                     i1l320:
 11072     0CC3  0008               	return
 11073     0CC4                     __end_of_EUSART_RxDataHandler:
 11074     007E                     btemp	set	126	;btemp
 11075     007E                     int$flags	set	126
 11076     007E                     wtemp0	set	126
 11077                           
 11078                           	psect	config
 11079                           
 11080                           ;Config register CONFIG1 @ 0x8007
 11081                           ;	Oscillator Selection
 11082                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
 11083                           ;	Watchdog Timer Enable
 11084                           ;	WDTE = OFF, WDT disabled
 11085                           ;	Power-up Timer Enable
 11086                           ;	PWRTE = OFF, PWRT disabled
 11087                           ;	MCLR Pin Function Select
 11088                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
 11089                           ;	Flash Program Memory Code Protection
 11090                           ;	CP = OFF, Program memory code protection is disabled
 11091                           ;	Data Memory Code Protection
 11092                           ;	CPD = OFF, Data memory code protection is disabled
 11093                           ;	Brown-out Reset Enable
 11094                           ;	BOREN = ON, Brown-out Reset enabled
 11095                           ;	Clock Out Enable
 11096                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
 11097                           ;	Internal/External Switchover
 11098                           ;	IESO = ON, Internal/External Switchover mode is enabled
 11099                           ;	Fail-Safe Clock Monitor Enable
 11100                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 11101     8007                     	org	32775
 11102     8007  3FE4               	dw	16356
 11103                           
 11104                           ;Config register CONFIG2 @ 0x8008
 11105                           ;	Flash Memory Self-Write Protection
 11106                           ;	WRT = OFF, Write protection off
 11107                           ;	PLL Enable
 11108                           ;	PLLEN = OFF, 4x PLL disabled
 11109                           ;	Stack Overflow/Underflow Reset Enable
 11110                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 11111                           ;	Brown-out Reset Voltage Selection
 11112                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
 11113                           ;	In-Circuit Debugger Mode
 11114                           ;	DEBUG = 0x1, unprogrammed default
 11115                           ;	Low-Voltage Programming Enable
 11116                           ;	LVP = ON, Low-voltage programming enabled
 11117     8008                     	org	32776
 11118     8008  3EFF               	dw	16127

Data Sizes:
    Strings     0
    Constant    0
    Data        12
    BSS         88
    Persistent  50
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     78      80
    BANK1            80     18      80
    BANK2            80      0      54
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), NULL(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), NULL(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), NULL(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), receive(), NULL(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), receive(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), NULL(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> end_Rx(), TMR0_DefaultInterruptHandler(), NULL(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> end_Rx(), TMR0_DefaultInterruptHandler(), 

    TMR1_GateInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> mede_height(), TMR1_DefaultGateInterruptHandler(), NULL(), 

    TMR1_SetGateInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> mede_height(), TMR1_DefaultGateInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> fluxControlChoice(), TMR6_DefaultInterruptHandler(), NULL(), 

    TMR6_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> fluxControlChoice(), TMR6_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _receive->_EUSART_Read
    _fluxcontrol->i1___lwdiv
    i1___lwdiv->i1___wmul
    _fluxpos->_daUmPasso
    _daUmPasso->_definePassoMotor
    _mede_height->___fltol
    ___xxtofl->_TMR1_ReadTimer
    ___flmul->_TMR1_ReadTimer
    _TMR0_ISR->_end_Rx
    _end_Rx->_analisa_Rx
    _analisa_Rx->i1_EPWM1_LoadDutyValue
    _EUSART_Receive_ISR->_EUSART_RxDataHandler
    _EUSART_DefaultErrorHandler->_EUSART_RxDataHandler

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _fluxControlChoice->_fluxcontrol
    _TMR1_GATE_ISR->_mede_height
    _mede_height->___fltol
    ___fltol->___fldiv
    ___flmul->___xxtofl
    ___fldiv->___flmul

Critical Paths under _main in BANK1

    _controlchoose->_pwmcontrol
    _pwmcontrol->___lwdiv
    ___lwdiv->___wmul
    _TMR6_Initialize->_TMR6_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetGateInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    3708
                  _ADC_GetConversion
       _EUSART_SetRxInterruptHandler
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
       _TMR1_SetGateInterruptHandler
                     _TMR4_ReadTimer
                     _TMR4_StopTimer
           _TMR6_SetInterruptHandler
                      _controlchoose
 ---------------------------------------------------------------------------------
 (1) _controlchoose                                        0     0      0    1879
            _TMR4_LoadPeriodRegister
                    _TMR4_StartTimer
                         _pwmcontrol
 ---------------------------------------------------------------------------------
 (2) _pwmcontrol                                           4     4      0    1857
                                             14 BANK1      4     4      0
                _EPWM1_LoadDutyValue
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     948
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     666
                                              6 BANK1      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _EPWM1_LoadDutyValue                                  4     2      2     220
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (2) _TMR4_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR4_LoadPeriodRegister                              1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _TMR4_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR4_ReadTimer                                       1     1      0      23
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1088
                     _ADC_Initialize
                    _CMP1_Initialize
                     _DAC_Initialize
                   _EPWM1_Initialize
                  _EUSART_Initialize
                     _FVR_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
                    _TMR6_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0     174
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR6_SetInterruptHandler                             2     0      2     174
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     174
       _TMR1_SetGateInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetGateInterruptHandler                         2     0      2     174
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     174
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     174
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     566
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2      98
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2     174
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _EPWM1_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DAC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CMP1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion                                    4     2      2      22
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0    6041
                                NULL *
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
                    _PIN_MANAGER_IOC
                           _TMR0_ISR
                      _TMR1_GATE_ISR
                           _TMR6_ISR
                            _receive *
 ---------------------------------------------------------------------------------
 (5) _receive                                              1     1      0      24
                                              2 COMMON     1     1      0
                        _EUSART_Read
                        _TMR0_Reload
 ---------------------------------------------------------------------------------
 (6) _TMR0_Reload                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART_Read                                          2     2      0      24
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (5) _TMR6_ISR                                             0     0      0     851
                                NULL *
       _TMR6_DefaultInterruptHandler *
                  _fluxControlChoice *
 ---------------------------------------------------------------------------------
 (6) _fluxControlChoice                                    0     0      0     851
                        _fluxcontrol
 ---------------------------------------------------------------------------------
 (7) _fluxcontrol                                          4     4      0     851
                                              0 BANK0      4     4      0
                            _fluxpos
                          i1___lwdiv
                           i1___wmul
 ---------------------------------------------------------------------------------
 (8) i1___wmul                                             6     2      4     300
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (8) i1___lwdiv                                            8     4      4     266
                                              6 COMMON     8     4      4
                           i1___wmul (ARG)
 ---------------------------------------------------------------------------------
 (8) _fluxpos                                              1     1      0     262
                                              5 COMMON     1     1      0
                          _daUmPasso
 ---------------------------------------------------------------------------------
 (9) _daUmPasso                                            3     3      0     262
                                              2 COMMON     3     3      0
               _CMP1_GetOutputStatus
                   _definePassoMotor
 ---------------------------------------------------------------------------------
 (10) _definePassoMotor                                    2     1      1     218
                                              0 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (10) _CMP1_GetOutputStatus                                0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR6_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR1_GATE_ISR                                        0     0      0    5070
                                NULL *
   _TMR1_DefaultGateInterruptHandler *
                        _mede_height *
 ---------------------------------------------------------------------------------
 (6) _mede_height                                          4     4      0    5070
                                             74 BANK0      4     4      0
                     _TMR1_ReadTimer
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (7) ___xxtofl                                            14    10      4     474
                                              0 BANK0     14    10      4
                     _TMR1_ReadTimer (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fltol                                             10     6      4     381
                                             11 COMMON     2     2      0
                                             66 BANK0      8     4      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flmul                                             26    18      8    2873
                                             14 BANK0     26    18      8
                     _TMR1_ReadTimer (ARG)
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (8) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (7) ___fldiv                                             26    18      8    1273
                                             40 BANK0     26    18      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) _TMR1_ReadTimer                                      11     9      2      69
                                              0 COMMON    11     9      2
 ---------------------------------------------------------------------------------
 (6) _TMR1_DefaultGateInterruptHandler                     0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             0     0      0      96
                                NULL *
       _TMR0_DefaultInterruptHandler *
                             _end_Rx *
 ---------------------------------------------------------------------------------
 (6) _end_Rx                                               1     1      0      96
                                              6 COMMON     1     1      0
                         _analisa_Rx
 ---------------------------------------------------------------------------------
 (7) _analisa_Rx                                           2     2      0      96
                                              4 COMMON     2     2      0
              i1_EPWM1_LoadDutyValue
 ---------------------------------------------------------------------------------
 (8) i1_EPWM1_LoadDutyValue                                4     2      2      96
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (6) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _PIN_MANAGER_IOC                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _EUSART_Transmit_ISR                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _EUSART_Receive_ISR                                   0     0      0       0
                                NULL *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (6) _EUSART_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART_DefaultErrorHandler                           0     0      0       0
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (6) _EUSART_RxDataHandler                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion
   _EUSART_SetRxInterruptHandler
   _SYSTEM_Initialize
     _ADC_Initialize
     _CMP1_Initialize
     _DAC_Initialize
     _EPWM1_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _FVR_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
       _TMR1_SetGateInterruptHandler
     _TMR2_Initialize
     _TMR4_Initialize
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _WDT_Initialize
   _TMR0_SetInterruptHandler
   _TMR1_SetGateInterruptHandler
   _TMR4_ReadTimer
   _TMR4_StopTimer
   _TMR6_SetInterruptHandler
   _controlchoose
     _TMR4_LoadPeriodRegister
     _TMR4_StartTimer
     _pwmcontrol
       _EPWM1_LoadDutyValue
       ___lwdiv
         ___wmul (ARG)
       ___wmul

 _INTERRUPT_InterruptManager (ROOT)
   NULL(Fake) *
   _EUSART_Receive_ISR *
     NULL(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *
   _EUSART_Transmit_ISR *
   _PIN_MANAGER_IOC *
   _TMR0_ISR *
     NULL(Fake) *
     _TMR0_DefaultInterruptHandler *
     _end_Rx *
       _analisa_Rx
         i1_EPWM1_LoadDutyValue
   _TMR1_GATE_ISR *
     NULL(Fake) *
     _TMR1_DefaultGateInterruptHandler *
     _mede_height *
       _TMR1_ReadTimer
       ___fldiv
         ___flmul (ARG)
           _TMR1_ReadTimer (ARG)
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _TMR1_ReadTimer (ARG)
       ___flmul
       ___fltol
         ___fldiv (ARG)
         ___flmul (ARG)
       ___xxtofl
   _TMR6_ISR *
     NULL(Fake) *
     _TMR6_DefaultInterruptHandler *
     _fluxControlChoice *
       _fluxcontrol
         _fluxpos
           _daUmPasso
             _CMP1_GetOutputStatus
             _definePassoMotor
         i1___lwdiv
           i1___wmul (ARG)
         i1___wmul
   _receive *
     _EUSART_Read
     _TMR0_Reload

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      E4       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     4E      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     12      50       8      100.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      36      10       67.5%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      E4      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Mon Sep 02 12:04:15 2024

                ?_EUSART_SetRxInterruptHandler 00D2                                   ___fldiv@aexp 0061  
                                 ___fldiv@bexp 0060                                   ___fldiv@sign 0059  
                                           l42 0B69                                             l45 0B39  
                                           l39 0E2B                                             l72 0C90  
                            ??_CMP1_Initialize 00D2                                             l88 0B79  
                                           _dc 00AC                         __end_of_FVR_Initialize 0B36  
                          ___wmul@multiplicand 00D4                               i1___wmul@product 0074  
                              _timer0ReloadVal 00CA                            __Umul8_16@word_mpld 0076  
                                          l120 07FE                                            l123 0B25  
                                          l126 0B22                                            l135 0B56  
                                          l129 0B50                                            l156 0BE5  
                                          l332 0B8B                                            l341 0BA6  
                                          l422 0CD6                                            l407 0B71  
                                          l335 0B94                                            l159 0D16  
                                          l344 0B9D                                            l425 0CDE  
                                          l361 0C39                                            l450 0B44  
                                          l338 0B82                                            l435 0B4A  
                                          l275 0EE3                                            l526 0CFA  
                                          l377 0BAF                                            l474 0C4C  
                                          l387 0B35                                            l559 0BB8  
                                          l496 0BC1                                            l826 0F8C  
                                          l684 06F5                                            l693 0C0D  
                                          l694 0C14                                            l980 0D5F  
                                          l982 0D73                                            _PR2 001B  
                                          _PR4 0416                                            _PR6 041D  
                              _timer1ReloadVal 00BE                         ??_EUSART_RxDataHandler 0070  
                                          _kdp 00E4                                            _kif 00EA  
                                          _kip 00E6                                            _kpf 00EC  
                                          _vRx 006E                                            _pas 00C2  
                                          _vTx 00B0                                            _kpp 00E8  
               ?_EUSART_SetFramingErrorHandler 00D2                                   ?_mede_height 0070  
                              _TMR2_Initialize 0B72                                            wreg 0009  
                                 ___flmul@aexp 0040                                   ___flmul@bexp 0041  
     __end_of_TMR1_DefaultGateInterruptHandler 0004             ??_TMR1_DefaultGateInterruptHandler 0070  
            ?_TMR1_DefaultGateInterruptHandler 0070               _TMR1_DefaultGateInterruptHandler 0003  
                                 ___flmul@sign 003B                                   ___flmul@temp 0046  
                                 ___flmul@prod 0042                                   ?_EUSART_Read 0070  
                                 ___fltol@exp1 007C                                           l1260 0EA4  
                                         l3200 0C27                                           l3210 0C32  
                                         l3202 0C2C                                           l3204 0C2E  
                                         l3220 0C42                                           l3212 0C3A  
                                         l3230 0B6E                                           l3206 0C30  
                                         l3222 0C49                                           l3214 0C3D  
                                         l3224 0B3F                                           l3240 0BE0  
                                         l3232 0BD8                                           l3160 0C7D  
                                         l3208 0C31                                           l3216 0C3E  
                                         l3226 0B6A                                           l3242 0BE3  
                                         l3234 0BDB                                           l3170 0C8F  
                                         l3162 0C80                                           l3250 0CE4  
                                         l3218 0C40                                           l3330 0686  
                                         l3228 0B6D                                           l3180 0B45  
                                         l3236 0BDC                                           l3260 0EA5  
                                         l3172 0B63                                           l3164 0C82  
                                         l3252 0CEC                                           l3244 0CDF  
                                         l3340 06EA                                           l3332 06B6  
                                         l3324 0664                                           l3238 0BDE  
                                         l3270 0EBC                                           l3262 0EA7  
                                         l3182 0B32                                           l3174 0B66  
                                         l3166 0C85                                           l3158 0C7A  
                                         l3254 0CEE                                           l3246 0CE2  
                                         l3190 07FB                                           l3342 06EE  
                                         l3334 06BF                                           l3326 066B  
                                         l3440 0CC6                                           l3280 0ED1  
                                         l3272 0EBE                                           l3264 0EAE  
                                         l3176 0B67                                           l3168 0C8A  
                                         l3256 0CF0                                           l3248 0CE3  
                                         l3192 0B72                                           l3184 07F5  
                                         l3336 06C3                                           l3328 0678  
                                         l3442 0CCF                                           l2650 0B9E  
                                         l3290 0EE2                                           l3282 0EDD  
                                         l3274 0EC0                                           l3266 0EB7  
                                         l3258 0CF7                                           l3194 0B75  
                                         l3186 07F8                                           l3178 0B36  
                                         l3362 0E01                                           l2810 0E6B  
                                         l3338 06E1                                           l3444 0CD0  
                                         l2652 0B83                                           l3284 0EDF  
                                         l3276 0EC1                                           l3268 0EBA  
                                         l3196 0B76                                           l3188 07F9  
                                         l3364 0B20                                           l3292 0B23  
                                         l2820 0E81                                           l2812 0E71  
                                         l3540 0F67                                           l3446 0CD4  
                                         l2654 0B8C                                           l3286 0EE0  
                                         l3278 0EC9                                           l3198 0B77  
                                         l2670 0BB9                                           l3366 0B4B  
                                         l3294 0B53                                           l2646 0CFB  
                                         l2822 0E90                                           l2814 0E74  
                                         l2830 0EA0                                           l3470 0C11  
                                         l3550 0FA6                                           l3542 0F8A  
                                         l3448 0CDA                                           l2656 0B7A  
                                         l2648 0B95                                           l3288 0EE1  
                                         l2672 0BB0                                           l2824 0E94  
                                         l2816 0E79                                           l2808 0E68  
                                         l2760 0D57                                           l3544 0F8B  
                                         l2826 0E95                                           l2818 0E7D  
                                         l2762 0D5B                                           l3466 0C04  
                                         l3546 0F98                                           l2668 0BA7  
                                         l2828 0E9A                                           l2764 0D64  
                                         l3468 0C0A                                           l3548 0FA3  
                                         l2766 0D69                                           l2758 0D54  
                                         l2768 0D6F                                           u2110 0E90  
                                         u2111 0E8F                                           u2105 0E82  
                                         u2130 0EA0                                           u2131 0E9F  
                                         u2115 0E8C                                           u2125 0E96  
                                         _LATA 010C                                           u3030 0CDA  
                                         u2070 0E71                                           _LATB 010D  
                                         u3031 0CD9                                           u2071 0E70  
                                         u3200 0FA3                                           u3201 0FA2  
                                         u2090 0E81                                           u3050 0C0A  
                                         u2091 0E80                                           u3051 0C09  
                                         u2085 0E75                                           u3217 0CD1  
                                         u1930 0D5B                                           u1835 0D0C  
                                         u1931 0D5A                                           u1960 0D6F  
                                         u1961 0D6E                                           u1945 0D60  
                                         u2850 0678                                           u1955 0D65  
                                         u2851 0677                                           u2860 0686  
                                         u2861 0685                                           u2870 06BF  
                                         u2871 06BE                                           u2855 0674  
                                         u2880 06EA                                           u2881 06E9  
                                         u2865 0682                                           i1l75 0B1F  
                                         _TMR0 0015                                           _TMR2 001A  
                                         _TMR4 0415                                           _TMR6 041C  
                                         _WPUA 020C                                           _WPUB 020D  
                ?_TMR1_SetGateInterruptHandler 00D2                                           _main 0F67  
                                         _flux 00B6                                           fsr0h 0005  
                                         fsr1h 0007                                           indf0 0000  
                                         fsr0l 0004                                           indf1 0001  
                                         fsr1l 0006                                           btemp 007E  
                                         start 0062                                ___fldiv@new_exp 005A  
                        ??_EPWM1_LoadDutyValue 00D4                        __end_of_TMR0_Initialize 0C3A  
               ??_TMR0_DefaultInterruptHandler 0070                                ?_FVR_Initialize 0070  
                __end_of_OSCILLATOR_Initialize 0B6A                                  ___fltol@sign1 007B  
                                        ?_main 0070                                __end_of___fldiv 046B  
                              __end_of___flmul 02C1                                __end_of___fltol 07F5  
                                        _T1CON 0018                                          _T2CON 001C  
                                        _T4CON 0417                                          _T6CON 041E  
                __end_ofi1_EPWM1_LoadDutyValue 0C7A                                __end_of___lwdiv 0EA5  
                                        i1l200 0060                                          i1l320 0CC3  
                                        i1l306 0D94                                          i1l323 0B1E  
                                        i1l316 0F24                                          i1l309 0D95  
                                        i1l326 0B2D                                          i1l159 0C79  
                                        i1l191 0030                                          i1l329 0B29  
                                        i1l193 003E                                          i1l370 0B3E  
                                        i1l194 0060                                          i1l186 0012  
                                        i1l195 004F                                          i1l380 0002  
                                        i1l188 001E                                          i1l453 0B31  
                                        i1l374 0C26                                          i1l294 0E00  
                                        i1l535 0CA9                                          i1l800 0FED  
                                        i1l721 0D34                                          i1l562 0003  
                                        i1l802 0FEE                                          i1l731 0FB3  
                                        i1l708 0518                                          i1l556 0BF4  
                                        i1l804 0FEF                                          i1l717 0C62  
                                        i1l821 0783                                          i1l741 0FB9  
                                        i1l733 0FB5                                          i1l725 0BCB  
                                        i1l493 0C03                                          i1l750 0FBF  
                                        i1l806 0FFF                                          i1l743 0FBB  
                                        i1l735 0FB6                                          i1l815 0F66  
                                        i1l752 0FC1                                          i1l761 0FC7  
                                        i1l745 0FBC                                          i1l737 0FB7  
                                        i1l770 0FD9                                          i1l754 0FC2  
                                        i1l690 0DDB                                          i1l763 0FC8  
                                        i1l747 0FBD                                          i1l499 07FF  
                                        i1l780 0FDF                                          i1l772 0FDB  
                                        i1l756 0FC3                                          i1l676 0663  
                                        i1l765 0FC9                                          i1l782 0FE1  
                                        i1l774 0FDC                                          i1l791 0FE7  
                                        i1l759 0FC5                                          i1l687 0DD2  
                                        i1l784 0FE2                                          i1l776 0FDD  
                                        i1l793 0FE8                                          i1l786 0FE3  
                                        i1l795 0FE9                                          i1l980 0D3F  
                                        i1l789 0FE5                                          i1l798 0FEB  
                                        i1l982 0D53                                          _RCREG 0199  
                                        _RCSTA 019D                                          _TMR1H 0017  
                                        _TMR1L 0016                                          _TRISA 008C  
                                        _TRISB 008D                                   ?_fluxcontrol 0070  
                                        _TXREG 019A                                          _TXSTA 019E  
                              _TMR4_Initialize 07F5                      ?_TMR0_SetInterruptHandler 00D2  
                    ?_TMR6_SetInterruptHandler 00D2                               __end_of_TMR0_ISR 0C27  
                             __end_of_TMR6_ISR 0C04                        __end_of_PIN_MANAGER_IOC 0B20  
                               _WDT_Initialize 0B36                                          _error 00BC  
                                        _passo 00C4                                __end_of_fluxpos 0DDC  
                              __end_of_receive 0D35                                  _controlchoice 00EF  
                                _controlchoose 0C04                        __end_of_TMR1_Initialize 0CFB  
                                        pclath 000A                               __end_ofi1___wmul 0D54  
                                        status 0003                            i1___wmul@multiplier 0070  
                                        wtemp0 007E                               daUmPasso@sentido 0074  
               ??_TMR6_DefaultInterruptHandler 0070                               ??_DAC_Initialize 00D2  
                 __end_of_CMP1_GetOutputStatus 0B32                                __initialization 0064  
                                 __end_of_main 0FAC                        __end_of_TMR2_Initialize 0B7A  
                  ?_INTERRUPT_InterruptManager 0070                 ??_EUSART_SetRxInterruptHandler 00D4  
                                       ??_main 00E4                       ?_TMR4_LoadPeriodRegister 0070  
                       __end_of_WDT_Initialize 0B3A                                _TMR6_Initialize 0C3A  
    __end_of_EUSART_DefaultFramingErrorHandler 0B1F            ??_EUSART_DefaultFramingErrorHandler 0070  
           ?_EUSART_DefaultFramingErrorHandler 0070              _EUSART_DefaultFramingErrorHandler 0B1E  
                                       _ADCON0 009D                                         _ADCON1 009E  
                   _EUSART_OverrunErrorHandler 014E                                 ?_controlchoose 0070  
                                       _ADRESH 009C                                         _ADRESL 009B  
                                       _CCPR1H 0292                                         _CCPR1L 0291  
                                       _ANSELA 018C                                         _ANSELB 018D  
                                       _BORCON 0116                                         _T1GCON 0019  
                                       i1l3000 00B9                                         i1l3010 00D5  
                                       i1l3002 00BE                                         i1l3100 02A0  
                                       i1l3020 00F3                                         i1l3012 00DA  
                                       i1l3004 00C3                                         i1l1260 0E67  
                                       i1l1181 07DF                                         i1l1421 053C  
                                       i1l3110 02B8                                         i1l3102 02A2  
                                       i1l3030 014A                                         i1l3022 0100  
                                       i1l3014 00DF                                         i1l3006 00CB  
                                       i1l1174 07F4                                         i1l1423 05C3  
                                       i1l3104 02AD                                         i1l3040 017B  
                                       i1l3032 0157                                         i1l3024 0118  
                                       i1l3008 00CD                                         i1l1184 07F4  
                                       u200_20 07BE                                         i1l3120 0534  
                                       i1l1361 0463                                         i1l1353 03F0  
                                       i1l1337 0312                                         u200_21 07BD  
                                       i1l3106 02B1                                         i1l3050 01B8  
                                       i1l3042 0182                                         i1l3034 015E  
                                       i1l3026 0125                                         i1l3018 00E8  
                                       i1l1434 058F                                         i1l3130 055B  
                                       i1l3122 0544                                         i1l3114 051B  
                                       i1l1339 046A                                         i1l1435 059B  
                                       i1l1427 0575                                         i1l3108 02B2  
                                       i1l3060 0209                                         i1l3052 01CA  
                                       i1l3044 0194                                         i1l3036 0169  
                                       i1l3028 013D                                         i1l3140 0585  
                                       i1l3132 0562                                         i1l3116 0520  
                                       i1l3300 0DE2                                         i1l1358 043C  
                                       i1l3062 0210                                         i1l3070 0220  
                                       i1l3054 01DF                                         i1l3046 019B  
                                       i1l3038 0170                                         i1l3150 05B6  
                                       i1l3142 0589                                         i1l3134 0566  
                                       i1l3126 054D                                         i1l3118 0524  
                                       i1l3310 0DFC                                         i1l3302 0DF0  
                                       i1l1359 0456                                         i1l1383 0240  
                                       i1l3320 0B26                                         i1l2600 0DB4  
                                       i1l3072 0224                                         i1l3064 0214  
                                       i1l3056 01F6                                         i1l3048 01AD  
                                       i1l3152 05BA                                         i1l3144 0593  
                                       i1l3136 056E                                         i1l3128 0550  
                                       i1l3312 0DFE                                         i1l3304 0DF4  
                                       i1l1377 02C0                                         i1l3410 0D7B  
                                       i1l3090 026E                                         i1l3082 0245  
                                       i1l3074 0225                                         i1l3066 0215  
                                       i1l3058 01FD                                         i1l3154 05BB  
                                       i1l3146 059D                                         i1l3138 057C  
                                       i1l2610 0D3B                                         i1l3314 0DFF  
                                       i1l3306 0DFA                                         i1l3322 0B3A  
                                       i1l3412 0D83                                         i1l2604 0C63  
                                       i1l2700 046E                                         i1l1396 0DA8  
                                       i1l3084 024A                                         i1l3092 0272  
                                       i1l3076 0229                                         i1l3068 021C  
                                       i1l3148 05B1                                         i1l2620 0E2C  
                                       i1l2612 0D44                                         i1l3308 0DFB  
                                       i1l3420 0EE4                                         i1l3500 0035  
                                       i1l1389 02B4                                         u201_25 07C0  
                                       i1l3318 0B2A                                         i1l3414 0D88  
                                       i1l2710 04A3                                         i1l2702 0474  
                                       i1l3350 0C5A                                         i1l1398 0DB8  
                                       i1l3094 027F                                         i1l3086 0252  
                                       i1l3078 023D                                         i1l2542 0B2E  
                                       i1l2630 0E40                                         i1l2622 0E2E  
                                       i1l2614 0D49                                         i1l2606 0D35  
                                       i1l3430 0F02                                         i1l3422 0EEB  
                                       i1l3510 0059                                         i1l3502 003A  
                                       i1l3416 0D8E                                         i1l3408 0D74  
                                       i1l2720 04C8                                         i1l2712 04A5  
                                       i1l2704 0493                                         i1l3352 0C5E  
                                       i1l3344 0C4D                                         i1l3096 0289  
                                       i1l3088 0256                                         u202_20 07CE  
                                       i1l3360 0773                                         i1l2552 0FCB  
                                       i1l2560 0F2B                                         i1l2640 0E5D  
                                       i1l2632 0E44                                         i1l2624 0E34  
                                       i1l2616 0D4F                                         i1l2608 0D37  
                                       i1l3432 0F09                                         i1l3424 0EF0  
                                       i1l3504 0043                                         u202_21 07CD  
                                       i1l3418 0D8F                                         i1l2730 04D9  
                                       i1l2714 04B5                                         i1l2706 049A  
                                       i1l3346 0C54                                         i1l3370 0C15  
                                       i1l3098 0297                                         i1l2802 07D6  
                                       i1l2546 0FAD                                         i1l2570 0F3E  
                                       i1l2562 0F2E                                         i1l2634 0E53  
                                       i1l2626 0E37                                         i1l2642 0E63  
                                       i1l3354 0BC2                                         i1l3434 0F0F  
                                       i1l3426 0EF7                                         i1l3506 0048  
                                       i1l2660 0CB3                                         i1l2740 04F6  
                                       i1l2732 04DC                                         i1l2724 04D0  
                                       i1l2716 04C1                                         i1l2708 049D  
                                       i1l3348 0C55                                         i1l3372 0C16  
                                       i1l2900 0370                                         i1l2804 07E4  
                                       i1l3380 0BE8                                         i1l2556 0FF1  
                                       i1l2572 0F43                                         i1l2580 0F60  
                                       i1l2564 0F36                                         i1l2636 0E57  
                                       i1l2628 0E3C                                         i1l3356 0BC8  
                                       i1l3436 0F1A                                         i1l3428 0EFD  
                                       i1l3508 0054                                         i1l2662 0CB8  
                                       i1l2750 0508                                         i1l2742 04FA  
                                       i1l2734 04E0                                         i1l2726 04D6  
                                       i1l2718 04C4                                         i1l3374 0C1A  
                                       i1l2910 039C                                         i1l2902 037E  
                                       i1l2590 0D97                                         i1l2806 07E9  
                                       i1l3358 06F6                                         i1l3382 0BEF  
                                       i1l2574 0F48                                         i1l2566 0F39  
                                       i1l2558 0F26                                         i1l2582 0DB9  
                                       i1l2638 0E58                                         i1l3438 0F21  
                                       i1l2664 0CBE                                         i1l2736 04E7  
                                       i1l2728 04D8                                         i1l3376 0C21  
                                       i1l2920 03B7                                         i1l2912 039D  
                                       i1l2904 0382                                         i1l2840 02CB  
                                       i1l2592 0D99                                         u203_20 07D5  
                                       i1l2576 0F52                                         i1l2568 0F3C  
                                       i1l2584 0DC0                                         i1l2680 05D7  
                                       i1l3384 0BF5                                         i1l3296 0DDC  
                                       i1l3480 0D25                                         i1l3472 0D17  
                                       u203_21 07D4                                         i1l2666 0CBF  
                                       i1l2658 0CAA                                         i1l2738 04F3  
                                       i1l2674 0C91                                         i1l2930 03CC  
                                       i1l2922 03B9                                         i1l2914 03A5  
                                       i1l2906 0383                                         i1l2850 02DF  
                                       i1l2842 02CC                                         i1l2834 02C1  
                                       i1l2594 0DA0                                         i1l3378 0BE6  
                                       i1l2578 0F59                                         i1l2586 0DCD  
                                       i1l2690 0635                                         i1l2682 05E6  
                                       i1l3386 0BF7                                         i1l3298 0DDC  
                                       i1l3482 0D30                                         i1l3474 0D19  
                                       i1l3490 0016                                         i1l2748 0502  
                                       i1l2756 050A                                         i1l2940 03ED  
                                       i1l2924 03C0                                         i1l2932 03D0  
                                       i1l2908 038A                                         i1l2916 03A9  
                                       i1l2860 02F4                                         i1l2844 02D1  
                                       i1l2852 02E1                                         i1l2836 02C5  
                                       i1l2596 0DA4                                         i1l2780 07A8  
                                       i1l2772 0784                                         i1l2588 0DD7  
                                       i1l2692 0653                                         i1l2684 05F6  
                                       i1l3388 0BFE                                         i1l3476 0D1C  
                                       i1l3492 001A                                         i1l3484 0006  
                                       i1l2950 0406                                         i1l2934 03D4  
                                       i1l2926 03C4                                         i1l2918 03AF  
                                       i1l2870 0308                                         i1l2862 02F5  
                                       i1l2854 02E9                                         i1l2846 02D6  
                                       i1l2838 02C7                                         i1l2598 0DAF  
                                       i1l2782 07A9                                         i1l2774 078E  
                                       i1l2694 065C                                         i1l2686 0628  
                                       i1l2678 05C4                                         i1l3478 0D1F  
                                       i1l3494 0022                                         i1l3486 000A  
                                       i1l2960 044D                                         i1l2952 041E  
                                       i1l2944 03F5                                         i1l2936 03D5  
                                       i1l2928 03C5                                         u220_20 031A  
                                       i1l2864 02FA                                         i1l2872 030A  
                                       i1l2856 02EE                                         i1l2848 02DE  
                                       i1l2784 07B1                                         i1l2696 0660  
                                       i1l2688 0631                                         u300_20 0EF0  
                                       i1l3496 0027                                         i1l3488 000E  
                                       u220_21 0319                                         u300_21 0EEF  
                                       i1l2698 046B                                         i1l2962 0455  
                                       i1l2946 03FA                                         i1l2954 0422  
                                       i1l2938 03D9                                         i1l2890 0351  
                                       i1l2874 031A                                         i1l2882 0333  
                                       i1l2866 02FF                                         i1l2858 02F0  
                                       i1l2794 07BF                                         i1l2786 07B3  
                                       i1l2778 0797                                         i1l3498 002C  
                                       i1l2964 0459                                         i1l2956 042F  
                                       i1l2948 0402                                         i1l2892 0359  
                                       i1l2884 0338                                         i1l2876 0326  
                                       i1l2868 0307                                         i1l2980 0090  
                                       i1l2788 07B7                                         i1l2796 07CF  
                                       u204_25 07D7                                         i1l2966 045D  
                                       i1l2958 044A                                         i1l2894 0361  
                                       i1l2878 032A                                         i1l2990 00A5  
                                       i1l2982 0091                                         i1l2974 0086  
                                       i1l2968 045F                                         i1l2896 0369  
                                       i1l2888 0341                                         u221_20 0338  
                                       i1l2992 00AD                                         i1l2984 0096  
                                       i1l2976 008A                                         u205_20 07E4  
                                       u301_20 0F02                                         u221_21 0337  
                                       u205_21 07E3                                         u301_21 0F01  
                                       i1l2898 036B                                         i1l2994 00B2  
                                       i1l2986 009B                                         i1l2978 008C  
                                       i1l2996 00B4                                         i1l2988 00A3  
                                       i1l2998 00B8                                         u222_20 0370  
                                       u214_20 02CB                                         u206_20 07E9  
                                       u302_20 0F1A                                         u310_20 001A  
                                       u222_21 036F                                         u214_21 02CA  
                                       u206_21 07E8                                         u302_21 0F19  
                                       u310_21 0019                                         u230_25 03BA  
                                       u231_20 03C4                                         u215_20 02D1  
                                       u311_20 0022                                         u231_21 03C3  
                                       u215_21 02D0                                         u311_21 0021  
                                       u223_25 0371                                         u240_20 042F  
                                       u216_20 02D6                                         u312_20 0027  
                                       u240_21 042E                                         u216_21 02D5  
                                       u312_21 0026                                         u240_25 042B  
                                       u232_25 03C6                                         u224_25 0378  
                                       u241_20 044A                                         u233_20 03D4  
                                       u225_20 0382                                         u217_20 02F4  
                                       u313_20 002C                                         u241_21 0449  
                                       u233_21 03D3                                         u225_21 0381  
                                       u217_21 02F3                                         u313_21 002B  
                                       u241_25 0446                                         u242_20 045D  
                                       u234_20 03D9                                         u218_20 02FA  
                                       u170_20 0DB4                                         u250_20 00DF  
                                       u162_20 0FB2                                         u306_20 0D25  
                                       u314_20 0035                                         u242_21 045C  
                                       u234_21 03D8                                         u218_21 02F9  
                                       u170_21 0DB3                                         u250_21 00DE  
                                       u162_21 0FB1                                         u306_21 0D24  
                                       u314_21 0034                                         u226_25 0384  
                                       u235_20 03ED                                         u227_20 039C  
                                       u219_20 02FF                                         u243_20 0090  
                                       u163_20 0F36                                         u315_20 003A  
                                       u307_20 000A                                         _FVRCON 0117  
                                       u235_21 03EC                                         u227_21 039B  
                                       u219_21 02FE                                         u243_21 008F  
                                       u163_21 0F35                                         u315_21 0039  
                                       u307_21 0009                                         u171_25 0C72  
                                       u227_25 0398                                         u251_25 0158  
                                       u236_20 03F4                                         u228_20 03AF  
                                       u260_20 0229                                         u244_20 0096  
                                       u164_20 0F43                                         u180_20 0E53  
                                       u172_20 0D3B                                         u316_20 0043  
                                       u308_20 000E                                         u236_21 03F3  
                                       u228_21 03AE                                         u260_21 0228  
                                       u244_21 0095                                         u164_21 0F42  
                                       u180_21 0E52                                         u172_21 0D3A  
                                       u316_21 0042                                         u308_21 000D  
                                       u252_25 0183                                         u180_25 0E4F  
                                       u237_20 03FA                                         u229_20 03B7  
                                       u261_20 023D                                         u253_20 01D5  
                                       u245_20 009B                                         u165_20 0F48  
                                       u317_20 0048                                         u309_20 0016  
                                       u237_21 03F9                                         u229_21 03B6  
                                       u261_21 023C                                         u245_21 009A  
                                       u165_21 0F47                                         u317_21 0047  
                                       u309_21 0015                                         u253_25 01D1  
                                       u181_25 0E59                                         u173_25 0D40  
                                       u190_20 04A3                                         u238_20 0406  
                                       u262_20 0244                                         u254_20 01EC  
                                       u246_20 00B8                                         u270_20 0524  
                                       u166_20 0DCD                                         u182_20 0E63  
                                       u318_20 0054                                         u190_21 04A2  
                                       u238_21 0405                                         u262_21 0243  
                                       u246_21 00B7                                         u270_21 0523  
                                       u166_21 0DCC                                         u182_21 0E62  
                                       u318_21 0053                                         u254_25 01E8  
                                       u166_25 0DC9                                         u174_25 0D45  
                                       u191_20 04D6                                         u239_20 0414  
                                       u263_20 024A                                         u247_20 00BE  
                                       u271_20 0544                                         u167_20 0DD7  
                                       u175_20 0D4F                                         u319_20 0059  
                                       u191_21 04D5                                         u263_21 0249  
                                       u247_21 00BD                                         u271_21 0543  
                                       u167_21 0DD6                                         u175_21 0D4E  
                                       u319_21 0058                                         u239_25 0410  
                                       u255_25 01F7                                         u184_20 0CBE  
                                       u192_20 0508                                         u168_20 0DA4  
                                       u264_20 0256                                         u248_20 00C3  
                                       u280_20 05A7                                         u176_20 0E34  
                                       u184_21 0CBD                                         u192_21 0507  
                                       u168_21 0DA3                                         u264_21 0255  
                                       u248_21 00C2                                         u176_21 0E33  
                                       u256_25 020A                                         u280_25 05A3  
                                       u272_25 0555                                         u265_20 0264  
                                       u257_20 0214                                         u249_20 00DA  
                                       u281_20 05B6                                         u273_20 0561  
                                       u185_20 05E6                                         u257_21 0213  
                                       u249_21 00D9                                         u281_21 05B5  
                                       u273_21 0560                                         u185_21 05E5  
                                       u169_25 0DA9                                         u265_25 0260  
                                       u177_25 0E38                                         u185_25 05E2  
                                       u290_20 0C5A                                         u266_20 027F  
                                       u282_20 05BA                                         u178_20 0E44  
                                       u186_20 05F6                                         u290_21 0C59  
                                       u266_21 027E                                         u282_21 05B9  
                                       u178_21 0E43                                         u186_21 05F5  
                                       u266_25 027B                                         u258_25 0216  
                                       u274_25 056F                                         u186_25 05F2  
                                       u267_20 0297                                         u259_20 0224  
                                       u275_20 057B                                         u187_20 0631  
                                       u291_20 0BC8                                         u283_20 0DE2  
                                       u267_21 0296                                         u259_21 0223  
                                       u275_21 057A                                         u187_21 0630  
                                       u291_21 0BC7                                         u283_21 0DE1  
                                       u267_25 0293                                         u179_25 0E45  
                                       u292_20 0C21                                         u268_20 02B1  
                                       u188_20 065C                                         u284_20 0DFA  
                                       u292_21 0C20                                         u268_21 02B0  
                                       u188_21 065B                                         u284_21 0DF9  
                                       u276_25 057F                                         u189_20 0474  
                                       u197_20 078E                                         u277_20 0589  
                                       u269_20 0520                                         u293_20 0BEF  
                                       u189_21 0473                                         u197_21 078D  
                                       u277_21 0588                                         u269_21 051F  
                                       u293_21 0BEE                                         u198_20 07A4  
                                       u278_20 058F                                         u294_20 0BFE  
                                       u278_21 058E                                         u294_21 0BFD  
                                       u198_25 07A0                                         u199_20 07B7  
                                       u279_20 0593                                         u199_21 07B6  
                                       u279_21 0592                                         u289_20 0C54  
                                       u289_21 0C53                                         u298_20 0D7B  
                                       _OSCCON 0099                                         u298_21 0D7A  
                                       u299_20 0D8E                                         u299_21 0D8D  
                                       _SPBRGH 019C                                         _SPBRGL 019B  
                                       _WDTCON 0097                               __end_of___xxtofl 05C4  
                              _TMR4_StartTimer 0B23                          definePassoMotor@passo 0071  
                        __end_of_TMR1_GATE_ISR 0BF5                 ??_TMR1_SetGateInterruptHandler 00D4  
                                 _CCPTMRS0bits 029E                                   ?_TMR0_Reload 0070  
                                       ___wmul 0D54                                      ??___fldiv 0050  
                                    ??___flmul 0036                                      ??___fltol 0066  
                                       _end_Rx 0C4D                                      ??___lwdiv 00DC  
                                       _height 00AA                                         _dinput 0142  
                                       _incPos 00EE                            _EUSART_Transmit_ISR 0D74  
                             ?_TMR0_Initialize 0070                        __end_of_TMR4_Initialize 07FF  
                                       _output 00B2                              __end_ofi1___lwdiv 0E68  
                                    ??_fluxpos 0075                                      ??_receive 0072  
                              ?_WDT_Initialize 0070                       ADC_GetConversion@channel 00D5  
 TMR1_SetGateInterruptHandler@InterruptHandler 00D2       TMR6_SetInterruptHandler@InterruptHandler 00D2  
     TMR0_SetInterruptHandler@InterruptHandler 00D2                               ?_PIN_MANAGER_IOC 0070  
                         ?_EUSART_Transmit_ISR 0070                               ?_TMR1_Initialize 0070  
                                 ___xxtofl@arg 002A                                   ___xxtofl@exp 0029  
                            _SYSTEM_Initialize 0E01                                   ___xxtofl@val 0020  
                      __end_of__initialization 0082                                _CMP1_Initialize 0B3F  
                           ?_SYSTEM_Initialize 0070                                     ___fltol@f1 0062  
         __end_of_EUSART_SetTxInterruptHandler 0BA7                   _EUSART_SetTxInterruptHandler 0B9E  
                            ?_EPWM1_Initialize 0070                                 __pcstackCOMMON 0070  
                                 __pidataBANK1 0BCC                            ??_SYSTEM_Initialize 00D4  
                                    ?_TMR0_ISR 0070                                      ?_TMR6_ISR 0070  
                           ??_EPWM1_Initialize 00D2                               ?_TMR2_Initialize 0070  
                      __end_of_TMR6_Initialize 0C4D                __end_of_TMR4_LoadPeriodRegister 0B57  
                                    ?i1___wmul 0070                                 _OPTION_REGbits 0095  
                         _eusartRxStatusBuffer 0120                                ??_controlchoose 00E4  
              ??_EUSART_SetOverrunErrorHandler 00D4                           _CMP1_GetOutputStatus 0B2E  
                      __end_of_TMR4_StartTimer 0B26                      __end_of_SYSTEM_Initialize 0E2C  
                        ??_EUSART_Transmit_ISR 0070                                     __pbssBANK0 006E  
                                   __pbssBANK1 00A0                                     __pbssBANK2 0120  
                                   _analisa_Rx 046B                              __end_of__Umul8_16 0DB9  
                             ??_FVR_Initialize 00D2                                     __pmaintext 0F67  
                ?_EUSART_SetTxInterruptHandler 00D2               _EUSART_TxDefaultInterruptHandler 0154  
             __end_of_TMR0_SetInterruptHandler 0BB0                                        ?___wmul 00D2  
                                   ??_TMR0_ISR 0077               __end_of_TMR6_SetInterruptHandler 0BC2  
                                   ??_TMR6_ISR 007E                                        ?_end_Rx 0070  
                                   __pintentry 0004                                        _DACCON0 0118  
                                      _DACCON1 0119                                        _CM1CON0 0111  
                                      _CM1CON1 0112                                        _CCP1CON 0293  
                                      _ECCP1AS 0295                                        _BAUDCON 019F  
                             ?_TMR4_Initialize 0070                              __end_of_daUmPasso 0F67  
                                      _APFCON0 011D                                        _APFCON1 011E  
                 ??_EUSART_DefaultErrorHandler 0071                                     ??i1___wmul 0074  
               i1EPWM1_LoadDutyValue@dutyValue 0070                                  _eusartRxCount 00CC  
                             _definePassoMotor 0FAC                                      ?___xxtofl 0020  
                        ?_CMP1_GetOutputStatus 0070                                        _OSCTUNE 0098  
                                      _PWM1CON 0294                        __end_of_CMP1_Initialize 0B45  
                     ??_EUSART_SetErrorHandler 00D4                                _pwmcontrol$2053 00E2  
                                   _float_temp 0138                    __end_of_EPWM1_LoadDutyValue 0D17  
                                   _count_40ms 00C5                           _ADC_InterruptHandler 00C0  
                                      _Rx_ctrl 00C8                                        ___fldiv 02C1  
                                      ___flmul 0086                                        ___fltol 0784  
                                      ___lwdiv 0E68                                        _ballset 00B8  
                             ?_TMR6_Initialize 0070                       TMR1_ReadTimer@readValLow 007A  
                                      __ptext1 0C04                                        __ptext2 0664  
                                      __ptext3 0D54                                        __ptext4 0E68  
                                      __ptext5 0CFB                                        __ptext6 0B23  
                                      __ptext7 0B51                                        __ptext8 0B20  
                                      __ptext9 0B4B                      TMR1_ReadTimer@readValHigh 0079  
                                    _T1CONbits 0018                                        _countRx 00C6  
                            i1___lwdiv@divisor 0076                          _OSCILLATOR_Initialize 0B63  
                                    _T2CONbits 001C                              i1___lwdiv@counter 007D  
                                      _fluxpos 0DB9                                     ??___xxtofl 0024  
                                    _CMOUTbits 0115                                        _receive 0D17  
                                    _T4CONbits 0417                       ??_PIN_MANAGER_Initialize 00D2  
                        i1_EPWM1_LoadDutyValue 0C63                                      _T6CONbits 041E  
                                      clrloop0 0B58                               ?_TMR4_StartTimer 0070  
                         end_of_initialization 0082          __end_of_EUSART_SetOverrunErrorHandler 0B95  
                _EUSART_SetOverrunErrorHandler 0B8C                                        init_ram 0B5D  
                                      initloop 0B5E                                    ?_analisa_Rx 0070  
                            _EUSART_Initialize 0EA5                             ?_EUSART_Initialize 0070  
                                    _RCSTAbits 019D                          i1___wmul@multiplicand 0072  
                          ??_EUSART_Initialize 00D4                               _fluxcontrol$2075 0022  
                             ??_WDT_Initialize 00D2                 ??_EUSART_SetTxInterruptHandler 00D4  
                     _TMR0_SetInterruptHandler 0BA7                       _TMR6_SetInterruptHandler 0BB9  
                       ??_CMP1_GetOutputStatus 0070                                 _TMR1_ReadTimer 0C91  
                                ___xxtofl@sign 0028                                    ___fldiv@grs 005C  
                                  ___fldiv@rem 0055                                      i1___lwdiv 0E2C  
                             ?_CMP1_Initialize 0070                                     _pwmcontrol 0664  
                                  ___flmul@grs 003C                      __end_of_EUSART_Initialize 0EE4  
                                    _TXSTAbits 019E             __end_of_EUSART_DefaultErrorHandler 0B2A  
                   _EUSART_DefaultErrorHandler 0B26                                 _TMR4_ReadTimer 0B4B  
                               __end_of___wmul 0D74                                 __end_of_end_Rx 0C63  
                               _ADC_Initialize 0B6A                         ?_OSCILLATOR_Initialize 0070  
                       __end_of_TMR1_ReadTimer 0CAA                         ?i1_EPWM1_LoadDutyValue 0070  
                                ??_mede_height 006A                            start_initialization 0064  
                                ??_EUSART_Read 0070                                     ?i1___lwdiv 0076  
 EUSART_SetRxInterruptHandler@interruptHandler 00D2   EUSART_SetTxInterruptHandler@interruptHandler 00D2  
                 EPWM1_LoadDutyValue@dutyValue 00D2                       __end_of_definePassoMotor 1000  
               ?_EUSART_SetOverrunErrorHandler 00D2                                 _TMR4_StopTimer 0B20  
                   _EUSART_FramingErrorHandler 0150                         __end_of_TMR4_ReadTimer 0B51  
                                     ??___wmul 00D6                         _EUSART_SetErrorHandler 0B7A  
                                     ??_end_Rx 0076                         __end_of_ADC_Initialize 0B72  
                                    __Umul8_16 0D96                                    __pdataBANK1 00E4  
                              ?_TMR1_ReadTimer 0070                                      ___fldiv@a 0048  
                                    ___fldiv@b 004C                                  ??_fluxcontrol 0020  
                  __end_of_EUSART_Transmit_ISR 0D96                                      ___flmul@a 0032  
                                    _daUmPasso 0F25                                      ___flmul@b 002E  
                                    ___latbits 0001                                  __pcstackBANK0 0020  
                                __pcstackBANK1 00D2                          __end_of_controlchoose 0C15  
                          __end_of_mede_height 0784                                    ?_pwmcontrol 0070  
                   __end_of_EUSART_Receive_ISR 0F25                        _TMR4_LoadPeriodRegister 0B51  
             _EUSART_RxDefaultInterruptHandler 0152                            __end_of_EUSART_Read 0E01  
                        _TMR0_InterruptHandler 014A                          _TMR6_InterruptHandler 0148  
                                    __pnvBANK2 0144                         __end_of_TMR4_StopTimer 0B23  
                 __end_of_EUSART_RxDataHandler 0CC4                               ___lwdiv@dividend 00DA  
                       _PIN_MANAGER_Initialize 0C7A                           EUSART_Read@readValue 0071  
                                _TMR1_GATE_ISR 0BE6                                ?_TMR4_ReadTimer 0070  
                                     ?___fldiv 0048                                       ?___flmul 002E  
                                     ?___fltol 0062                                     ?__Umul8_16 0070  
                                     ?___lwdiv 00D8                                ?_ADC_Initialize 0070  
                                 _eusartRxHead 00CE                                   _eusartTxHead 00D1  
                                 _eusartRxTail 00CD                                      _fim_curso 00C3  
                                 _eusartTxTail 00D0                   ??_INTERRUPT_InterruptManager 007E  
                      _eusartTxBufferRemaining 00CF                                       ?_fluxpos 0070  
                                     ?_receive 0070                                     ?_daUmPasso 0070  
                             ___lwdiv@quotient 00DD                                    ??i1___lwdiv 007A  
                                    _func_mode 00C7                            __end_of_fluxcontrol 0664  
                               _eusartRxBuffer 0128                              ??_TMR0_Initialize 00D4  
                               _eusartTxBuffer 0130                                 ___wmul@product 00D6  
                                     _LATAbits 010C         EUSART_SetErrorHandler@interruptHandler 00D2  
                                 ??_analisa_Rx 0074                                      clear_ram0 0B57  
                                     _PIE1bits 0091                                       _PIE3bits 0093  
                            _eusartRxLastError 00CB                                ?_TMR4_StopTimer 0070  
                   ??_TMR0_SetInterruptHandler 00D4                                 ?_TMR1_GATE_ISR 0070  
                                     _PIR1bits 0011                ??_EUSART_SetFramingErrorHandler 00D4  
                                     _PIR3bits 0013                                  ??_TMR0_Reload 0070  
                   ??_TMR6_SetInterruptHandler 00D4                                      _sp_height 00AE  
                                    _tempo_voo 013C                                       _TMR0_ISR 0C15  
    __end_of_EUSART_DefaultOverrunErrorHandler 0B2E            ??_EUSART_DefaultOverrunErrorHandler 0070  
           ?_EUSART_DefaultOverrunErrorHandler 0070              _EUSART_DefaultOverrunErrorHandler 0B2A  
                                     _PSTR1CON 0296                                       _TMR6_ISR 0BF5  
                            ??_PIN_MANAGER_IOC 0070                      _TMR1_GateInterruptHandler 0146  
                            ??_TMR1_Initialize 00D4                                     _ADCON0bits 009D  
                            ___wmul@multiplier 00D2                                 _DAC_Initialize 0B45  
                                     i1___wmul 0D35                                    _mede_height 06F6  
                             _EPWM1_Initialize 0BD8                        definePassoMotor@sentido 0070  
                                    _outputsum 00B4                             __end_of_analisa_Rx 0519  
                                  _EUSART_Read 0DDC                      ??_TMR4_LoadPeriodRegister 00D2  
                            ??_TMR2_Initialize 00D2                              _ADC_GetConversion 0CC4  
                        TMR1_ReadTimer@readVal 0077                          TMR4_ReadTimer@readVal 00D2  
                      ??_OSCILLATOR_Initialize 00D2                                    ??__Umul8_16 0072  
                          _EUSART_ErrorHandler 014C                             ?_ADC_GetConversion 00D2  
                       __end_of_DAC_Initialize 0B4B                    ?_EUSART_DefaultErrorHandler 0070  
                      ??i1_EPWM1_LoadDutyValue 0072                            __end_of_TMR0_Reload 0B3F  
                                     _adc_temp 0144                                       _balldist 00BA  
                          ??_ADC_GetConversion 00D4                                       ___xxtofl 0519  
                                  ??_daUmPasso 0072                                    _fluxcontrol 05C4  
                              ___lwdiv@divisor 00D8                           _EUSART_RxDataHandler 0CAA  
                              ___lwdiv@counter 00DF                                       __ptext10 0E01  
                                     __ptext11 0B36                                       __ptext20 0C7A  
                                     __ptext12 0C3A                                       __ptext21 0B63  
                                     __ptext13 0BB9                                     _T1GCONbits 0019  
                                     __ptext30 0B45                                       __ptext22 0B32  
                                     __ptext14 07F5                                       __ptext31 0B3F  
                                     __ptext23 0EA5                                       __ptext15 0B72  
                                     __ptext40 07FF                                       __ptext32 0B6A  
                                     __ptext24 0B9E                                       __ptext16 0CDF  
                                     __ptext41 0BC2                                       __ptext33 0CC4  
                                     __ptext25 0B95                                       __ptext17 0BB0  
                                     __ptext50 0003                                       __ptext42 05C4  
                                     __ptext26 0B8C                                       __ptext18 0C27  
                                     __ptext51 06F6                                       __ptext43 0D35  
                                     __ptext35 0EE4                                       __ptext27 0B83  
                                     __ptext19 0BA7                                       __ptext60 0C4D  
                                     __ptext52 0519                                       __ptext44 0E2C  
                                     __ptext36 0D17                                       __ptext28 0B7A  
                                     __ptext61 046B                                       __ptext53 0784  
                                     __ptext45 0DB9                                       __ptext37 0B3A  
                                     __ptext29 0BD8                                       __ptext62 0C63  
                                     __ptext54 0086                                       __ptext46 0F25  
                                     __ptext38 0DDC                                       __ptext63 0B1F  
                                     __ptext55 0D96                                       __ptext47 0FAC  
                                     __ptext39 0BF5                                       __ptext64 0D74  
                                     __ptext56 02C1                                       __ptext48 0B2E  
                                     __ptext65 0B2A                                       __ptext57 0C91  
                                     __ptext49 0BE6                                       __ptext66 0B1E  
                                     __ptext58 0C15                                       __ptext67 0B26  
                                     __ptext59 0002                                       __ptext68 0CAA  
                                     _bufferRx 00A0                              _fluxControlChoice 0BC2  
                           i1___lwdiv@dividend 0078                             ?_fluxControlChoice 0070  
                            ??_TMR4_Initialize 00D2                                ??_TMR1_GATE_ISR 007D  
         __end_of_TMR0_DefaultInterruptHandler 0003                   _TMR0_DefaultInterruptHandler 0002  
                    __end_of_ADC_GetConversion 0CDF                        ?_EUSART_SetErrorHandler 00D2  
                            ?_definePassoMotor 0070                            ??_fluxControlChoice 007E  
EUSART_SetOverrunErrorHandler@interruptHandler 00D2                             ??_definePassoMotor 0071  
                             ??_TMR1_ReadTimer 0072                                       int$flags 007E  
                                     _position 00A8             __end_of_INTERRUPT_InterruptManager 0062  
                   _INTERRUPT_InterruptManager 0004          __end_of_EUSART_SetFramingErrorHandler 0B8C  
                _EUSART_SetFramingErrorHandler 0B83                                ?_DAC_Initialize 0070  
                           i1___lwdiv@quotient 007B                                     _INTCONbits 000B  
                        ?_EUSART_RxDataHandler 0070                                     _FVRCONbits 0117  
                    __end_of_fluxControlChoice 0BCC           __end_of_TMR6_DefaultInterruptHandler 0800  
                 _TMR6_DefaultInterruptHandler 07FF                                   ??_pwmcontrol 00E0  
                                     intlevel1 0000                        ?_PIN_MANAGER_Initialize 0070  
                            ??_TMR6_Initialize 00D4                 __end_of_EUSART_SetErrorHandler 0B83  
                             ??_TMR4_ReadTimer 00D2                               ??_ADC_Initialize 00D2  
         __end_of_EUSART_SetRxInterruptHandler 0B9E                   _EUSART_SetRxInterruptHandler 0B95  
                ?_TMR0_DefaultInterruptHandler 0070                                    _TMR0_Reload 0B3A  
                           _EUSART_Receive_ISR 0EE4  EUSART_SetFramingErrorHandler@interruptHandler 00D2  
                            ??_TMR4_StartTimer 00D2                             __end_of_pwmcontrol 06F6  
                               _FVR_Initialize 0B32                         __Umul8_16@multiplicand 0070  
                                   _OPTION_REG 0095                            ?_EUSART_Receive_ISR 0070  
                              _TMR0_Initialize 0C27                                    _timecontrol 00C9  
                          _EPWM1_LoadDutyValue 0CFB           __end_of_TMR1_SetGateInterruptHandler 0BB9  
                 _TMR1_SetGateInterruptHandler 0BB0                 __end_of_PIN_MANAGER_Initialize 0C91  
                             ??_TMR4_StopTimer 00D2                  ?_TMR6_DefaultInterruptHandler 0070  
                                  _sp_position 0140                                _PIN_MANAGER_IOC 0B1F  
                         ??_EUSART_Receive_ISR 0071                           __Umul8_16@multiplier 0078  
                              _TMR1_Initialize 0CDF                       __end_of_EPWM1_Initialize 0BE6  
                         ?_EPWM1_LoadDutyValue 00D2                              __Umul8_16@product 0074  
             TMR4_LoadPeriodRegister@periodVal 00D2  
