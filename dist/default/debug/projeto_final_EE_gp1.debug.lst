

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Thu Sep 05 16:38:57 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F1827
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     6                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     7                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,noexec
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    14                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    15                           	psect	inittext,global,class=CODE,delta=2
    16                           	psect	clrtext,global,class=CODE,delta=2
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    18                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    21                           	psect	text1,local,class=CODE,merge=1,delta=2
    22                           	psect	text2,local,class=CODE,merge=1,delta=2
    23                           	psect	text3,local,class=CODE,merge=1,delta=2
    24                           	psect	text4,local,class=CODE,merge=1,delta=2
    25                           	psect	text5,local,class=CODE,merge=1,delta=2
    26                           	psect	text6,local,class=CODE,merge=1,delta=2
    27                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text10,local,class=CODE,merge=1,delta=2
    31                           	psect	text11,local,class=CODE,merge=1,delta=2
    32                           	psect	text12,local,class=CODE,merge=1,delta=2
    33                           	psect	text13,local,class=CODE,merge=1,delta=2
    34                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text16,local,class=CODE,merge=1,delta=2
    37                           	psect	text17,local,class=CODE,merge=1,delta=2
    38                           	psect	text18,local,class=CODE,merge=1,delta=2
    39                           	psect	text19,local,class=CODE,merge=1,delta=2
    40                           	psect	text20,local,class=CODE,merge=1,delta=2
    41                           	psect	text21,local,class=CODE,merge=1,delta=2
    42                           	psect	text22,local,class=CODE,merge=1,delta=2
    43                           	psect	text23,local,class=CODE,merge=1,delta=2
    44                           	psect	text24,local,class=CODE,merge=1,delta=2
    45                           	psect	text25,local,class=CODE,merge=1,delta=2
    46                           	psect	text26,local,class=CODE,merge=1,delta=2
    47                           	psect	text27,local,class=CODE,merge=1,delta=2
    48                           	psect	text28,local,class=CODE,merge=1,delta=2
    49                           	psect	text29,local,class=CODE,merge=1,delta=2
    50                           	psect	text30,local,class=CODE,merge=1,delta=2
    51                           	psect	text31,local,class=CODE,merge=1,delta=2
    52                           	psect	text32,local,class=CODE,merge=1,delta=2
    53                           	psect	text33,local,class=CODE,merge=1,delta=2
    54                           	psect	text34,local,class=CODE,merge=1,delta=2
    55                           	psect	text35,local,class=CODE,merge=1,delta=2
    56                           	psect	text36,local,class=CODE,merge=1,delta=2
    57                           	psect	text37,local,class=CODE,merge=1,delta=2
    58                           	psect	text38,local,class=CODE,merge=1,delta=2
    59                           	psect	text39,local,class=CODE,merge=1,delta=2
    60                           	psect	text40,local,class=CODE,merge=1,delta=2
    61                           	psect	text41,local,class=CODE,merge=1,delta=2
    62                           	psect	text42,local,class=CODE,merge=1,delta=2
    63                           	psect	text43,local,class=CODE,merge=1,delta=2
    64                           	psect	intentry,global,class=CODE,delta=2
    65                           	psect	text45,local,class=CODE,merge=1,delta=2
    66                           	psect	text46,local,class=CODE,merge=1,delta=2
    67                           	psect	text47,local,class=CODE,merge=1,delta=2
    68                           	psect	text48,local,class=CODE,merge=1,delta=2
    69                           	psect	text49,local,class=CODE,merge=1,delta=2
    70                           	psect	text50,local,class=CODE,merge=1,delta=2
    71                           	psect	text51,local,class=CODE,merge=1,delta=2,group=1
    72                           	psect	text52,local,class=CODE,merge=1,delta=2
    73                           	psect	text53,local,class=CODE,merge=1,delta=2
    74                           	psect	text54,local,class=CODE,merge=1,delta=2
    75                           	psect	text55,local,class=CODE,merge=1,delta=2
    76                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    77                           	dabs	1,0x7E,2
    78     0000                     
    79                           ; Generated 07/09/2023 GMT
    80                           ; 
    81                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    82                           ; All rights reserved.
    83                           ; 
    84                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    85                           ; 
    86                           ; Redistribution and use in source and binary forms, with or without modification, are
    87                           ; permitted provided that the following conditions are met:
    88                           ; 
    89                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    90                           ;        conditions and the following disclaimer.
    91                           ; 
    92                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    93                           ;        of conditions and the following disclaimer in the documentation and/or other
    94                           ;        materials provided with the distribution. Publication is not required when
    95                           ;        this file is used in an embedded application.
    96                           ; 
    97                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    98                           ;        software without specific prior written permission.
    99                           ; 
   100                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   101                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   102                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   103                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   104                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   105                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   106                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   107                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   108                           ; 
   109                           ; 
   110                           ; Code-generator required, PIC16F1827 Definitions
   111                           ; 
   112                           ; SFR Addresses
   113     0000                     	;# 
   114     0001                     	;# 
   115     0002                     	;# 
   116     0003                     	;# 
   117     0004                     	;# 
   118     0005                     	;# 
   119     0006                     	;# 
   120     0007                     	;# 
   121     0008                     	;# 
   122     0009                     	;# 
   123     000A                     	;# 
   124     000B                     	;# 
   125     000C                     	;# 
   126     000D                     	;# 
   127     0011                     	;# 
   128     0012                     	;# 
   129     0013                     	;# 
   130     0014                     	;# 
   131     0015                     	;# 
   132     0016                     	;# 
   133     0016                     	;# 
   134     0017                     	;# 
   135     0018                     	;# 
   136     0019                     	;# 
   137     001A                     	;# 
   138     001B                     	;# 
   139     001C                     	;# 
   140     001E                     	;# 
   141     001F                     	;# 
   142     008C                     	;# 
   143     008D                     	;# 
   144     0091                     	;# 
   145     0092                     	;# 
   146     0093                     	;# 
   147     0094                     	;# 
   148     0095                     	;# 
   149     0096                     	;# 
   150     0097                     	;# 
   151     0098                     	;# 
   152     0099                     	;# 
   153     009A                     	;# 
   154     009B                     	;# 
   155     009B                     	;# 
   156     009C                     	;# 
   157     009D                     	;# 
   158     009E                     	;# 
   159     010C                     	;# 
   160     010D                     	;# 
   161     0111                     	;# 
   162     0112                     	;# 
   163     0113                     	;# 
   164     0114                     	;# 
   165     0115                     	;# 
   166     0116                     	;# 
   167     0117                     	;# 
   168     0118                     	;# 
   169     0119                     	;# 
   170     011A                     	;# 
   171     011B                     	;# 
   172     011D                     	;# 
   173     011E                     	;# 
   174     018C                     	;# 
   175     018D                     	;# 
   176     0191                     	;# 
   177     0191                     	;# 
   178     0192                     	;# 
   179     0193                     	;# 
   180     0193                     	;# 
   181     0193                     	;# 
   182     0194                     	;# 
   183     0195                     	;# 
   184     0196                     	;# 
   185     0199                     	;# 
   186     019A                     	;# 
   187     019B                     	;# 
   188     019B                     	;# 
   189     019B                     	;# 
   190     019B                     	;# 
   191     019C                     	;# 
   192     019C                     	;# 
   193     019D                     	;# 
   194     019E                     	;# 
   195     019F                     	;# 
   196     020C                     	;# 
   197     020D                     	;# 
   198     0211                     	;# 
   199     0211                     	;# 
   200     0212                     	;# 
   201     0212                     	;# 
   202     0213                     	;# 
   203     0213                     	;# 
   204     0214                     	;# 
   205     0214                     	;# 
   206     0215                     	;# 
   207     0215                     	;# 
   208     0215                     	;# 
   209     0216                     	;# 
   210     0216                     	;# 
   211     0217                     	;# 
   212     0217                     	;# 
   213     0219                     	;# 
   214     021A                     	;# 
   215     021B                     	;# 
   216     021C                     	;# 
   217     021D                     	;# 
   218     021E                     	;# 
   219     021F                     	;# 
   220     0291                     	;# 
   221     0291                     	;# 
   222     0292                     	;# 
   223     0293                     	;# 
   224     0294                     	;# 
   225     0295                     	;# 
   226     0295                     	;# 
   227     0296                     	;# 
   228     0298                     	;# 
   229     0298                     	;# 
   230     0299                     	;# 
   231     029A                     	;# 
   232     029B                     	;# 
   233     029C                     	;# 
   234     029C                     	;# 
   235     029D                     	;# 
   236     029E                     	;# 
   237     029E                     	;# 
   238     0311                     	;# 
   239     0311                     	;# 
   240     0312                     	;# 
   241     0313                     	;# 
   242     0318                     	;# 
   243     0318                     	;# 
   244     0319                     	;# 
   245     031A                     	;# 
   246     0394                     	;# 
   247     0395                     	;# 
   248     0396                     	;# 
   249     039A                     	;# 
   250     039C                     	;# 
   251     039D                     	;# 
   252     039E                     	;# 
   253     039F                     	;# 
   254     0415                     	;# 
   255     0416                     	;# 
   256     0417                     	;# 
   257     041C                     	;# 
   258     041D                     	;# 
   259     041E                     	;# 
   260     0FE4                     	;# 
   261     0FE5                     	;# 
   262     0FE6                     	;# 
   263     0FE7                     	;# 
   264     0FE8                     	;# 
   265     0FE9                     	;# 
   266     0FEA                     	;# 
   267     0FEB                     	;# 
   268     0FED                     	;# 
   269     0FEE                     	;# 
   270     0FEF                     	;# 
   271     0000                     	;# 
   272     0001                     	;# 
   273     0002                     	;# 
   274     0003                     	;# 
   275     0004                     	;# 
   276     0005                     	;# 
   277     0006                     	;# 
   278     0007                     	;# 
   279     0008                     	;# 
   280     0009                     	;# 
   281     000A                     	;# 
   282     000B                     	;# 
   283     000C                     	;# 
   284     000D                     	;# 
   285     0011                     	;# 
   286     0012                     	;# 
   287     0013                     	;# 
   288     0014                     	;# 
   289     0015                     	;# 
   290     0016                     	;# 
   291     0016                     	;# 
   292     0017                     	;# 
   293     0018                     	;# 
   294     0019                     	;# 
   295     001A                     	;# 
   296     001B                     	;# 
   297     001C                     	;# 
   298     001E                     	;# 
   299     001F                     	;# 
   300     008C                     	;# 
   301     008D                     	;# 
   302     0091                     	;# 
   303     0092                     	;# 
   304     0093                     	;# 
   305     0094                     	;# 
   306     0095                     	;# 
   307     0096                     	;# 
   308     0097                     	;# 
   309     0098                     	;# 
   310     0099                     	;# 
   311     009A                     	;# 
   312     009B                     	;# 
   313     009B                     	;# 
   314     009C                     	;# 
   315     009D                     	;# 
   316     009E                     	;# 
   317     010C                     	;# 
   318     010D                     	;# 
   319     0111                     	;# 
   320     0112                     	;# 
   321     0113                     	;# 
   322     0114                     	;# 
   323     0115                     	;# 
   324     0116                     	;# 
   325     0117                     	;# 
   326     0118                     	;# 
   327     0119                     	;# 
   328     011A                     	;# 
   329     011B                     	;# 
   330     011D                     	;# 
   331     011E                     	;# 
   332     018C                     	;# 
   333     018D                     	;# 
   334     0191                     	;# 
   335     0191                     	;# 
   336     0192                     	;# 
   337     0193                     	;# 
   338     0193                     	;# 
   339     0193                     	;# 
   340     0194                     	;# 
   341     0195                     	;# 
   342     0196                     	;# 
   343     0199                     	;# 
   344     019A                     	;# 
   345     019B                     	;# 
   346     019B                     	;# 
   347     019B                     	;# 
   348     019B                     	;# 
   349     019C                     	;# 
   350     019C                     	;# 
   351     019D                     	;# 
   352     019E                     	;# 
   353     019F                     	;# 
   354     020C                     	;# 
   355     020D                     	;# 
   356     0211                     	;# 
   357     0211                     	;# 
   358     0212                     	;# 
   359     0212                     	;# 
   360     0213                     	;# 
   361     0213                     	;# 
   362     0214                     	;# 
   363     0214                     	;# 
   364     0215                     	;# 
   365     0215                     	;# 
   366     0215                     	;# 
   367     0216                     	;# 
   368     0216                     	;# 
   369     0217                     	;# 
   370     0217                     	;# 
   371     0219                     	;# 
   372     021A                     	;# 
   373     021B                     	;# 
   374     021C                     	;# 
   375     021D                     	;# 
   376     021E                     	;# 
   377     021F                     	;# 
   378     0291                     	;# 
   379     0291                     	;# 
   380     0292                     	;# 
   381     0293                     	;# 
   382     0294                     	;# 
   383     0295                     	;# 
   384     0295                     	;# 
   385     0296                     	;# 
   386     0298                     	;# 
   387     0298                     	;# 
   388     0299                     	;# 
   389     029A                     	;# 
   390     029B                     	;# 
   391     029C                     	;# 
   392     029C                     	;# 
   393     029D                     	;# 
   394     029E                     	;# 
   395     029E                     	;# 
   396     0311                     	;# 
   397     0311                     	;# 
   398     0312                     	;# 
   399     0313                     	;# 
   400     0318                     	;# 
   401     0318                     	;# 
   402     0319                     	;# 
   403     031A                     	;# 
   404     0394                     	;# 
   405     0395                     	;# 
   406     0396                     	;# 
   407     039A                     	;# 
   408     039C                     	;# 
   409     039D                     	;# 
   410     039E                     	;# 
   411     039F                     	;# 
   412     0415                     	;# 
   413     0416                     	;# 
   414     0417                     	;# 
   415     041C                     	;# 
   416     041D                     	;# 
   417     041E                     	;# 
   418     0FE4                     	;# 
   419     0FE5                     	;# 
   420     0FE6                     	;# 
   421     0FE7                     	;# 
   422     0FE8                     	;# 
   423     0FE9                     	;# 
   424     0FEA                     	;# 
   425     0FEB                     	;# 
   426     0FED                     	;# 
   427     0FEE                     	;# 
   428     0FEF                     	;# 
   429     0000                     	;# 
   430     0001                     	;# 
   431     0002                     	;# 
   432     0003                     	;# 
   433     0004                     	;# 
   434     0005                     	;# 
   435     0006                     	;# 
   436     0007                     	;# 
   437     0008                     	;# 
   438     0009                     	;# 
   439     000A                     	;# 
   440     000B                     	;# 
   441     000C                     	;# 
   442     000D                     	;# 
   443     0011                     	;# 
   444     0012                     	;# 
   445     0013                     	;# 
   446     0014                     	;# 
   447     0015                     	;# 
   448     0016                     	;# 
   449     0016                     	;# 
   450     0017                     	;# 
   451     0018                     	;# 
   452     0019                     	;# 
   453     001A                     	;# 
   454     001B                     	;# 
   455     001C                     	;# 
   456     001E                     	;# 
   457     001F                     	;# 
   458     008C                     	;# 
   459     008D                     	;# 
   460     0091                     	;# 
   461     0092                     	;# 
   462     0093                     	;# 
   463     0094                     	;# 
   464     0095                     	;# 
   465     0096                     	;# 
   466     0097                     	;# 
   467     0098                     	;# 
   468     0099                     	;# 
   469     009A                     	;# 
   470     009B                     	;# 
   471     009B                     	;# 
   472     009C                     	;# 
   473     009D                     	;# 
   474     009E                     	;# 
   475     010C                     	;# 
   476     010D                     	;# 
   477     0111                     	;# 
   478     0112                     	;# 
   479     0113                     	;# 
   480     0114                     	;# 
   481     0115                     	;# 
   482     0116                     	;# 
   483     0117                     	;# 
   484     0118                     	;# 
   485     0119                     	;# 
   486     011A                     	;# 
   487     011B                     	;# 
   488     011D                     	;# 
   489     011E                     	;# 
   490     018C                     	;# 
   491     018D                     	;# 
   492     0191                     	;# 
   493     0191                     	;# 
   494     0192                     	;# 
   495     0193                     	;# 
   496     0193                     	;# 
   497     0193                     	;# 
   498     0194                     	;# 
   499     0195                     	;# 
   500     0196                     	;# 
   501     0199                     	;# 
   502     019A                     	;# 
   503     019B                     	;# 
   504     019B                     	;# 
   505     019B                     	;# 
   506     019B                     	;# 
   507     019C                     	;# 
   508     019C                     	;# 
   509     019D                     	;# 
   510     019E                     	;# 
   511     019F                     	;# 
   512     020C                     	;# 
   513     020D                     	;# 
   514     0211                     	;# 
   515     0211                     	;# 
   516     0212                     	;# 
   517     0212                     	;# 
   518     0213                     	;# 
   519     0213                     	;# 
   520     0214                     	;# 
   521     0214                     	;# 
   522     0215                     	;# 
   523     0215                     	;# 
   524     0215                     	;# 
   525     0216                     	;# 
   526     0216                     	;# 
   527     0217                     	;# 
   528     0217                     	;# 
   529     0219                     	;# 
   530     021A                     	;# 
   531     021B                     	;# 
   532     021C                     	;# 
   533     021D                     	;# 
   534     021E                     	;# 
   535     021F                     	;# 
   536     0291                     	;# 
   537     0291                     	;# 
   538     0292                     	;# 
   539     0293                     	;# 
   540     0294                     	;# 
   541     0295                     	;# 
   542     0295                     	;# 
   543     0296                     	;# 
   544     0298                     	;# 
   545     0298                     	;# 
   546     0299                     	;# 
   547     029A                     	;# 
   548     029B                     	;# 
   549     029C                     	;# 
   550     029C                     	;# 
   551     029D                     	;# 
   552     029E                     	;# 
   553     029E                     	;# 
   554     0311                     	;# 
   555     0311                     	;# 
   556     0312                     	;# 
   557     0313                     	;# 
   558     0318                     	;# 
   559     0318                     	;# 
   560     0319                     	;# 
   561     031A                     	;# 
   562     0394                     	;# 
   563     0395                     	;# 
   564     0396                     	;# 
   565     039A                     	;# 
   566     039C                     	;# 
   567     039D                     	;# 
   568     039E                     	;# 
   569     039F                     	;# 
   570     0415                     	;# 
   571     0416                     	;# 
   572     0417                     	;# 
   573     041C                     	;# 
   574     041D                     	;# 
   575     041E                     	;# 
   576     0FE4                     	;# 
   577     0FE5                     	;# 
   578     0FE6                     	;# 
   579     0FE7                     	;# 
   580     0FE8                     	;# 
   581     0FE9                     	;# 
   582     0FEA                     	;# 
   583     0FEB                     	;# 
   584     0FED                     	;# 
   585     0FEE                     	;# 
   586     0FEF                     	;# 
   587     0000                     	;# 
   588     0001                     	;# 
   589     0002                     	;# 
   590     0003                     	;# 
   591     0004                     	;# 
   592     0005                     	;# 
   593     0006                     	;# 
   594     0007                     	;# 
   595     0008                     	;# 
   596     0009                     	;# 
   597     000A                     	;# 
   598     000B                     	;# 
   599     000C                     	;# 
   600     000D                     	;# 
   601     0011                     	;# 
   602     0012                     	;# 
   603     0013                     	;# 
   604     0014                     	;# 
   605     0015                     	;# 
   606     0016                     	;# 
   607     0016                     	;# 
   608     0017                     	;# 
   609     0018                     	;# 
   610     0019                     	;# 
   611     001A                     	;# 
   612     001B                     	;# 
   613     001C                     	;# 
   614     001E                     	;# 
   615     001F                     	;# 
   616     008C                     	;# 
   617     008D                     	;# 
   618     0091                     	;# 
   619     0092                     	;# 
   620     0093                     	;# 
   621     0094                     	;# 
   622     0095                     	;# 
   623     0096                     	;# 
   624     0097                     	;# 
   625     0098                     	;# 
   626     0099                     	;# 
   627     009A                     	;# 
   628     009B                     	;# 
   629     009B                     	;# 
   630     009C                     	;# 
   631     009D                     	;# 
   632     009E                     	;# 
   633     010C                     	;# 
   634     010D                     	;# 
   635     0111                     	;# 
   636     0112                     	;# 
   637     0113                     	;# 
   638     0114                     	;# 
   639     0115                     	;# 
   640     0116                     	;# 
   641     0117                     	;# 
   642     0118                     	;# 
   643     0119                     	;# 
   644     011A                     	;# 
   645     011B                     	;# 
   646     011D                     	;# 
   647     011E                     	;# 
   648     018C                     	;# 
   649     018D                     	;# 
   650     0191                     	;# 
   651     0191                     	;# 
   652     0192                     	;# 
   653     0193                     	;# 
   654     0193                     	;# 
   655     0193                     	;# 
   656     0194                     	;# 
   657     0195                     	;# 
   658     0196                     	;# 
   659     0199                     	;# 
   660     019A                     	;# 
   661     019B                     	;# 
   662     019B                     	;# 
   663     019B                     	;# 
   664     019B                     	;# 
   665     019C                     	;# 
   666     019C                     	;# 
   667     019D                     	;# 
   668     019E                     	;# 
   669     019F                     	;# 
   670     020C                     	;# 
   671     020D                     	;# 
   672     0211                     	;# 
   673     0211                     	;# 
   674     0212                     	;# 
   675     0212                     	;# 
   676     0213                     	;# 
   677     0213                     	;# 
   678     0214                     	;# 
   679     0214                     	;# 
   680     0215                     	;# 
   681     0215                     	;# 
   682     0215                     	;# 
   683     0216                     	;# 
   684     0216                     	;# 
   685     0217                     	;# 
   686     0217                     	;# 
   687     0219                     	;# 
   688     021A                     	;# 
   689     021B                     	;# 
   690     021C                     	;# 
   691     021D                     	;# 
   692     021E                     	;# 
   693     021F                     	;# 
   694     0291                     	;# 
   695     0291                     	;# 
   696     0292                     	;# 
   697     0293                     	;# 
   698     0294                     	;# 
   699     0295                     	;# 
   700     0295                     	;# 
   701     0296                     	;# 
   702     0298                     	;# 
   703     0298                     	;# 
   704     0299                     	;# 
   705     029A                     	;# 
   706     029B                     	;# 
   707     029C                     	;# 
   708     029C                     	;# 
   709     029D                     	;# 
   710     029E                     	;# 
   711     029E                     	;# 
   712     0311                     	;# 
   713     0311                     	;# 
   714     0312                     	;# 
   715     0313                     	;# 
   716     0318                     	;# 
   717     0318                     	;# 
   718     0319                     	;# 
   719     031A                     	;# 
   720     0394                     	;# 
   721     0395                     	;# 
   722     0396                     	;# 
   723     039A                     	;# 
   724     039C                     	;# 
   725     039D                     	;# 
   726     039E                     	;# 
   727     039F                     	;# 
   728     0415                     	;# 
   729     0416                     	;# 
   730     0417                     	;# 
   731     041C                     	;# 
   732     041D                     	;# 
   733     041E                     	;# 
   734     0FE4                     	;# 
   735     0FE5                     	;# 
   736     0FE6                     	;# 
   737     0FE7                     	;# 
   738     0FE8                     	;# 
   739     0FE9                     	;# 
   740     0FEA                     	;# 
   741     0FEB                     	;# 
   742     0FED                     	;# 
   743     0FEE                     	;# 
   744     0FEF                     	;# 
   745     0000                     	;# 
   746     0001                     	;# 
   747     0002                     	;# 
   748     0003                     	;# 
   749     0004                     	;# 
   750     0005                     	;# 
   751     0006                     	;# 
   752     0007                     	;# 
   753     0008                     	;# 
   754     0009                     	;# 
   755     000A                     	;# 
   756     000B                     	;# 
   757     000C                     	;# 
   758     000D                     	;# 
   759     0011                     	;# 
   760     0012                     	;# 
   761     0013                     	;# 
   762     0014                     	;# 
   763     0015                     	;# 
   764     0016                     	;# 
   765     0016                     	;# 
   766     0017                     	;# 
   767     0018                     	;# 
   768     0019                     	;# 
   769     001A                     	;# 
   770     001B                     	;# 
   771     001C                     	;# 
   772     001E                     	;# 
   773     001F                     	;# 
   774     008C                     	;# 
   775     008D                     	;# 
   776     0091                     	;# 
   777     0092                     	;# 
   778     0093                     	;# 
   779     0094                     	;# 
   780     0095                     	;# 
   781     0096                     	;# 
   782     0097                     	;# 
   783     0098                     	;# 
   784     0099                     	;# 
   785     009A                     	;# 
   786     009B                     	;# 
   787     009B                     	;# 
   788     009C                     	;# 
   789     009D                     	;# 
   790     009E                     	;# 
   791     010C                     	;# 
   792     010D                     	;# 
   793     0111                     	;# 
   794     0112                     	;# 
   795     0113                     	;# 
   796     0114                     	;# 
   797     0115                     	;# 
   798     0116                     	;# 
   799     0117                     	;# 
   800     0118                     	;# 
   801     0119                     	;# 
   802     011A                     	;# 
   803     011B                     	;# 
   804     011D                     	;# 
   805     011E                     	;# 
   806     018C                     	;# 
   807     018D                     	;# 
   808     0191                     	;# 
   809     0191                     	;# 
   810     0192                     	;# 
   811     0193                     	;# 
   812     0193                     	;# 
   813     0193                     	;# 
   814     0194                     	;# 
   815     0195                     	;# 
   816     0196                     	;# 
   817     0199                     	;# 
   818     019A                     	;# 
   819     019B                     	;# 
   820     019B                     	;# 
   821     019B                     	;# 
   822     019B                     	;# 
   823     019C                     	;# 
   824     019C                     	;# 
   825     019D                     	;# 
   826     019E                     	;# 
   827     019F                     	;# 
   828     020C                     	;# 
   829     020D                     	;# 
   830     0211                     	;# 
   831     0211                     	;# 
   832     0212                     	;# 
   833     0212                     	;# 
   834     0213                     	;# 
   835     0213                     	;# 
   836     0214                     	;# 
   837     0214                     	;# 
   838     0215                     	;# 
   839     0215                     	;# 
   840     0215                     	;# 
   841     0216                     	;# 
   842     0216                     	;# 
   843     0217                     	;# 
   844     0217                     	;# 
   845     0219                     	;# 
   846     021A                     	;# 
   847     021B                     	;# 
   848     021C                     	;# 
   849     021D                     	;# 
   850     021E                     	;# 
   851     021F                     	;# 
   852     0291                     	;# 
   853     0291                     	;# 
   854     0292                     	;# 
   855     0293                     	;# 
   856     0294                     	;# 
   857     0295                     	;# 
   858     0295                     	;# 
   859     0296                     	;# 
   860     0298                     	;# 
   861     0298                     	;# 
   862     0299                     	;# 
   863     029A                     	;# 
   864     029B                     	;# 
   865     029C                     	;# 
   866     029C                     	;# 
   867     029D                     	;# 
   868     029E                     	;# 
   869     029E                     	;# 
   870     0311                     	;# 
   871     0311                     	;# 
   872     0312                     	;# 
   873     0313                     	;# 
   874     0318                     	;# 
   875     0318                     	;# 
   876     0319                     	;# 
   877     031A                     	;# 
   878     0394                     	;# 
   879     0395                     	;# 
   880     0396                     	;# 
   881     039A                     	;# 
   882     039C                     	;# 
   883     039D                     	;# 
   884     039E                     	;# 
   885     039F                     	;# 
   886     0415                     	;# 
   887     0416                     	;# 
   888     0417                     	;# 
   889     041C                     	;# 
   890     041D                     	;# 
   891     041E                     	;# 
   892     0FE4                     	;# 
   893     0FE5                     	;# 
   894     0FE6                     	;# 
   895     0FE7                     	;# 
   896     0FE8                     	;# 
   897     0FE9                     	;# 
   898     0FEA                     	;# 
   899     0FEB                     	;# 
   900     0FED                     	;# 
   901     0FEE                     	;# 
   902     0FEF                     	;# 
   903     0000                     	;# 
   904     0001                     	;# 
   905     0002                     	;# 
   906     0003                     	;# 
   907     0004                     	;# 
   908     0005                     	;# 
   909     0006                     	;# 
   910     0007                     	;# 
   911     0008                     	;# 
   912     0009                     	;# 
   913     000A                     	;# 
   914     000B                     	;# 
   915     000C                     	;# 
   916     000D                     	;# 
   917     0011                     	;# 
   918     0012                     	;# 
   919     0013                     	;# 
   920     0014                     	;# 
   921     0015                     	;# 
   922     0016                     	;# 
   923     0016                     	;# 
   924     0017                     	;# 
   925     0018                     	;# 
   926     0019                     	;# 
   927     001A                     	;# 
   928     001B                     	;# 
   929     001C                     	;# 
   930     001E                     	;# 
   931     001F                     	;# 
   932     008C                     	;# 
   933     008D                     	;# 
   934     0091                     	;# 
   935     0092                     	;# 
   936     0093                     	;# 
   937     0094                     	;# 
   938     0095                     	;# 
   939     0096                     	;# 
   940     0097                     	;# 
   941     0098                     	;# 
   942     0099                     	;# 
   943     009A                     	;# 
   944     009B                     	;# 
   945     009B                     	;# 
   946     009C                     	;# 
   947     009D                     	;# 
   948     009E                     	;# 
   949     010C                     	;# 
   950     010D                     	;# 
   951     0111                     	;# 
   952     0112                     	;# 
   953     0113                     	;# 
   954     0114                     	;# 
   955     0115                     	;# 
   956     0116                     	;# 
   957     0117                     	;# 
   958     0118                     	;# 
   959     0119                     	;# 
   960     011A                     	;# 
   961     011B                     	;# 
   962     011D                     	;# 
   963     011E                     	;# 
   964     018C                     	;# 
   965     018D                     	;# 
   966     0191                     	;# 
   967     0191                     	;# 
   968     0192                     	;# 
   969     0193                     	;# 
   970     0193                     	;# 
   971     0193                     	;# 
   972     0194                     	;# 
   973     0195                     	;# 
   974     0196                     	;# 
   975     0199                     	;# 
   976     019A                     	;# 
   977     019B                     	;# 
   978     019B                     	;# 
   979     019B                     	;# 
   980     019B                     	;# 
   981     019C                     	;# 
   982     019C                     	;# 
   983     019D                     	;# 
   984     019E                     	;# 
   985     019F                     	;# 
   986     020C                     	;# 
   987     020D                     	;# 
   988     0211                     	;# 
   989     0211                     	;# 
   990     0212                     	;# 
   991     0212                     	;# 
   992     0213                     	;# 
   993     0213                     	;# 
   994     0214                     	;# 
   995     0214                     	;# 
   996     0215                     	;# 
   997     0215                     	;# 
   998     0215                     	;# 
   999     0216                     	;# 
  1000     0216                     	;# 
  1001     0217                     	;# 
  1002     0217                     	;# 
  1003     0219                     	;# 
  1004     021A                     	;# 
  1005     021B                     	;# 
  1006     021C                     	;# 
  1007     021D                     	;# 
  1008     021E                     	;# 
  1009     021F                     	;# 
  1010     0291                     	;# 
  1011     0291                     	;# 
  1012     0292                     	;# 
  1013     0293                     	;# 
  1014     0294                     	;# 
  1015     0295                     	;# 
  1016     0295                     	;# 
  1017     0296                     	;# 
  1018     0298                     	;# 
  1019     0298                     	;# 
  1020     0299                     	;# 
  1021     029A                     	;# 
  1022     029B                     	;# 
  1023     029C                     	;# 
  1024     029C                     	;# 
  1025     029D                     	;# 
  1026     029E                     	;# 
  1027     029E                     	;# 
  1028     0311                     	;# 
  1029     0311                     	;# 
  1030     0312                     	;# 
  1031     0313                     	;# 
  1032     0318                     	;# 
  1033     0318                     	;# 
  1034     0319                     	;# 
  1035     031A                     	;# 
  1036     0394                     	;# 
  1037     0395                     	;# 
  1038     0396                     	;# 
  1039     039A                     	;# 
  1040     039C                     	;# 
  1041     039D                     	;# 
  1042     039E                     	;# 
  1043     039F                     	;# 
  1044     0415                     	;# 
  1045     0416                     	;# 
  1046     0417                     	;# 
  1047     041C                     	;# 
  1048     041D                     	;# 
  1049     041E                     	;# 
  1050     0FE4                     	;# 
  1051     0FE5                     	;# 
  1052     0FE6                     	;# 
  1053     0FE7                     	;# 
  1054     0FE8                     	;# 
  1055     0FE9                     	;# 
  1056     0FEA                     	;# 
  1057     0FEB                     	;# 
  1058     0FED                     	;# 
  1059     0FEE                     	;# 
  1060     0FEF                     	;# 
  1061     0000                     	;# 
  1062     0001                     	;# 
  1063     0002                     	;# 
  1064     0003                     	;# 
  1065     0004                     	;# 
  1066     0005                     	;# 
  1067     0006                     	;# 
  1068     0007                     	;# 
  1069     0008                     	;# 
  1070     0009                     	;# 
  1071     000A                     	;# 
  1072     000B                     	;# 
  1073     000C                     	;# 
  1074     000D                     	;# 
  1075     0011                     	;# 
  1076     0012                     	;# 
  1077     0013                     	;# 
  1078     0014                     	;# 
  1079     0015                     	;# 
  1080     0016                     	;# 
  1081     0016                     	;# 
  1082     0017                     	;# 
  1083     0018                     	;# 
  1084     0019                     	;# 
  1085     001A                     	;# 
  1086     001B                     	;# 
  1087     001C                     	;# 
  1088     001E                     	;# 
  1089     001F                     	;# 
  1090     008C                     	;# 
  1091     008D                     	;# 
  1092     0091                     	;# 
  1093     0092                     	;# 
  1094     0093                     	;# 
  1095     0094                     	;# 
  1096     0095                     	;# 
  1097     0096                     	;# 
  1098     0097                     	;# 
  1099     0098                     	;# 
  1100     0099                     	;# 
  1101     009A                     	;# 
  1102     009B                     	;# 
  1103     009B                     	;# 
  1104     009C                     	;# 
  1105     009D                     	;# 
  1106     009E                     	;# 
  1107     010C                     	;# 
  1108     010D                     	;# 
  1109     0111                     	;# 
  1110     0112                     	;# 
  1111     0113                     	;# 
  1112     0114                     	;# 
  1113     0115                     	;# 
  1114     0116                     	;# 
  1115     0117                     	;# 
  1116     0118                     	;# 
  1117     0119                     	;# 
  1118     011A                     	;# 
  1119     011B                     	;# 
  1120     011D                     	;# 
  1121     011E                     	;# 
  1122     018C                     	;# 
  1123     018D                     	;# 
  1124     0191                     	;# 
  1125     0191                     	;# 
  1126     0192                     	;# 
  1127     0193                     	;# 
  1128     0193                     	;# 
  1129     0193                     	;# 
  1130     0194                     	;# 
  1131     0195                     	;# 
  1132     0196                     	;# 
  1133     0199                     	;# 
  1134     019A                     	;# 
  1135     019B                     	;# 
  1136     019B                     	;# 
  1137     019B                     	;# 
  1138     019B                     	;# 
  1139     019C                     	;# 
  1140     019C                     	;# 
  1141     019D                     	;# 
  1142     019E                     	;# 
  1143     019F                     	;# 
  1144     020C                     	;# 
  1145     020D                     	;# 
  1146     0211                     	;# 
  1147     0211                     	;# 
  1148     0212                     	;# 
  1149     0212                     	;# 
  1150     0213                     	;# 
  1151     0213                     	;# 
  1152     0214                     	;# 
  1153     0214                     	;# 
  1154     0215                     	;# 
  1155     0215                     	;# 
  1156     0215                     	;# 
  1157     0216                     	;# 
  1158     0216                     	;# 
  1159     0217                     	;# 
  1160     0217                     	;# 
  1161     0219                     	;# 
  1162     021A                     	;# 
  1163     021B                     	;# 
  1164     021C                     	;# 
  1165     021D                     	;# 
  1166     021E                     	;# 
  1167     021F                     	;# 
  1168     0291                     	;# 
  1169     0291                     	;# 
  1170     0292                     	;# 
  1171     0293                     	;# 
  1172     0294                     	;# 
  1173     0295                     	;# 
  1174     0295                     	;# 
  1175     0296                     	;# 
  1176     0298                     	;# 
  1177     0298                     	;# 
  1178     0299                     	;# 
  1179     029A                     	;# 
  1180     029B                     	;# 
  1181     029C                     	;# 
  1182     029C                     	;# 
  1183     029D                     	;# 
  1184     029E                     	;# 
  1185     029E                     	;# 
  1186     0311                     	;# 
  1187     0311                     	;# 
  1188     0312                     	;# 
  1189     0313                     	;# 
  1190     0318                     	;# 
  1191     0318                     	;# 
  1192     0319                     	;# 
  1193     031A                     	;# 
  1194     0394                     	;# 
  1195     0395                     	;# 
  1196     0396                     	;# 
  1197     039A                     	;# 
  1198     039C                     	;# 
  1199     039D                     	;# 
  1200     039E                     	;# 
  1201     039F                     	;# 
  1202     0415                     	;# 
  1203     0416                     	;# 
  1204     0417                     	;# 
  1205     041C                     	;# 
  1206     041D                     	;# 
  1207     041E                     	;# 
  1208     0FE4                     	;# 
  1209     0FE5                     	;# 
  1210     0FE6                     	;# 
  1211     0FE7                     	;# 
  1212     0FE8                     	;# 
  1213     0FE9                     	;# 
  1214     0FEA                     	;# 
  1215     0FEB                     	;# 
  1216     0FED                     	;# 
  1217     0FEE                     	;# 
  1218     0FEF                     	;# 
  1219     0000                     	;# 
  1220     0001                     	;# 
  1221     0002                     	;# 
  1222     0003                     	;# 
  1223     0004                     	;# 
  1224     0005                     	;# 
  1225     0006                     	;# 
  1226     0007                     	;# 
  1227     0008                     	;# 
  1228     0009                     	;# 
  1229     000A                     	;# 
  1230     000B                     	;# 
  1231     000C                     	;# 
  1232     000D                     	;# 
  1233     0011                     	;# 
  1234     0012                     	;# 
  1235     0013                     	;# 
  1236     0014                     	;# 
  1237     0015                     	;# 
  1238     0016                     	;# 
  1239     0016                     	;# 
  1240     0017                     	;# 
  1241     0018                     	;# 
  1242     0019                     	;# 
  1243     001A                     	;# 
  1244     001B                     	;# 
  1245     001C                     	;# 
  1246     001E                     	;# 
  1247     001F                     	;# 
  1248     008C                     	;# 
  1249     008D                     	;# 
  1250     0091                     	;# 
  1251     0092                     	;# 
  1252     0093                     	;# 
  1253     0094                     	;# 
  1254     0095                     	;# 
  1255     0096                     	;# 
  1256     0097                     	;# 
  1257     0098                     	;# 
  1258     0099                     	;# 
  1259     009A                     	;# 
  1260     009B                     	;# 
  1261     009B                     	;# 
  1262     009C                     	;# 
  1263     009D                     	;# 
  1264     009E                     	;# 
  1265     010C                     	;# 
  1266     010D                     	;# 
  1267     0111                     	;# 
  1268     0112                     	;# 
  1269     0113                     	;# 
  1270     0114                     	;# 
  1271     0115                     	;# 
  1272     0116                     	;# 
  1273     0117                     	;# 
  1274     0118                     	;# 
  1275     0119                     	;# 
  1276     011A                     	;# 
  1277     011B                     	;# 
  1278     011D                     	;# 
  1279     011E                     	;# 
  1280     018C                     	;# 
  1281     018D                     	;# 
  1282     0191                     	;# 
  1283     0191                     	;# 
  1284     0192                     	;# 
  1285     0193                     	;# 
  1286     0193                     	;# 
  1287     0193                     	;# 
  1288     0194                     	;# 
  1289     0195                     	;# 
  1290     0196                     	;# 
  1291     0199                     	;# 
  1292     019A                     	;# 
  1293     019B                     	;# 
  1294     019B                     	;# 
  1295     019B                     	;# 
  1296     019B                     	;# 
  1297     019C                     	;# 
  1298     019C                     	;# 
  1299     019D                     	;# 
  1300     019E                     	;# 
  1301     019F                     	;# 
  1302     020C                     	;# 
  1303     020D                     	;# 
  1304     0211                     	;# 
  1305     0211                     	;# 
  1306     0212                     	;# 
  1307     0212                     	;# 
  1308     0213                     	;# 
  1309     0213                     	;# 
  1310     0214                     	;# 
  1311     0214                     	;# 
  1312     0215                     	;# 
  1313     0215                     	;# 
  1314     0215                     	;# 
  1315     0216                     	;# 
  1316     0216                     	;# 
  1317     0217                     	;# 
  1318     0217                     	;# 
  1319     0219                     	;# 
  1320     021A                     	;# 
  1321     021B                     	;# 
  1322     021C                     	;# 
  1323     021D                     	;# 
  1324     021E                     	;# 
  1325     021F                     	;# 
  1326     0291                     	;# 
  1327     0291                     	;# 
  1328     0292                     	;# 
  1329     0293                     	;# 
  1330     0294                     	;# 
  1331     0295                     	;# 
  1332     0295                     	;# 
  1333     0296                     	;# 
  1334     0298                     	;# 
  1335     0298                     	;# 
  1336     0299                     	;# 
  1337     029A                     	;# 
  1338     029B                     	;# 
  1339     029C                     	;# 
  1340     029C                     	;# 
  1341     029D                     	;# 
  1342     029E                     	;# 
  1343     029E                     	;# 
  1344     0311                     	;# 
  1345     0311                     	;# 
  1346     0312                     	;# 
  1347     0313                     	;# 
  1348     0318                     	;# 
  1349     0318                     	;# 
  1350     0319                     	;# 
  1351     031A                     	;# 
  1352     0394                     	;# 
  1353     0395                     	;# 
  1354     0396                     	;# 
  1355     039A                     	;# 
  1356     039C                     	;# 
  1357     039D                     	;# 
  1358     039E                     	;# 
  1359     039F                     	;# 
  1360     0415                     	;# 
  1361     0416                     	;# 
  1362     0417                     	;# 
  1363     041C                     	;# 
  1364     041D                     	;# 
  1365     041E                     	;# 
  1366     0FE4                     	;# 
  1367     0FE5                     	;# 
  1368     0FE6                     	;# 
  1369     0FE7                     	;# 
  1370     0FE8                     	;# 
  1371     0FE9                     	;# 
  1372     0FEA                     	;# 
  1373     0FEB                     	;# 
  1374     0FED                     	;# 
  1375     0FEE                     	;# 
  1376     0FEF                     	;# 
  1377     0000                     	;# 
  1378     0001                     	;# 
  1379     0002                     	;# 
  1380     0003                     	;# 
  1381     0004                     	;# 
  1382     0005                     	;# 
  1383     0006                     	;# 
  1384     0007                     	;# 
  1385     0008                     	;# 
  1386     0009                     	;# 
  1387     000A                     	;# 
  1388     000B                     	;# 
  1389     000C                     	;# 
  1390     000D                     	;# 
  1391     0011                     	;# 
  1392     0012                     	;# 
  1393     0013                     	;# 
  1394     0014                     	;# 
  1395     0015                     	;# 
  1396     0016                     	;# 
  1397     0016                     	;# 
  1398     0017                     	;# 
  1399     0018                     	;# 
  1400     0019                     	;# 
  1401     001A                     	;# 
  1402     001B                     	;# 
  1403     001C                     	;# 
  1404     001E                     	;# 
  1405     001F                     	;# 
  1406     008C                     	;# 
  1407     008D                     	;# 
  1408     0091                     	;# 
  1409     0092                     	;# 
  1410     0093                     	;# 
  1411     0094                     	;# 
  1412     0095                     	;# 
  1413     0096                     	;# 
  1414     0097                     	;# 
  1415     0098                     	;# 
  1416     0099                     	;# 
  1417     009A                     	;# 
  1418     009B                     	;# 
  1419     009B                     	;# 
  1420     009C                     	;# 
  1421     009D                     	;# 
  1422     009E                     	;# 
  1423     010C                     	;# 
  1424     010D                     	;# 
  1425     0111                     	;# 
  1426     0112                     	;# 
  1427     0113                     	;# 
  1428     0114                     	;# 
  1429     0115                     	;# 
  1430     0116                     	;# 
  1431     0117                     	;# 
  1432     0118                     	;# 
  1433     0119                     	;# 
  1434     011A                     	;# 
  1435     011B                     	;# 
  1436     011D                     	;# 
  1437     011E                     	;# 
  1438     018C                     	;# 
  1439     018D                     	;# 
  1440     0191                     	;# 
  1441     0191                     	;# 
  1442     0192                     	;# 
  1443     0193                     	;# 
  1444     0193                     	;# 
  1445     0193                     	;# 
  1446     0194                     	;# 
  1447     0195                     	;# 
  1448     0196                     	;# 
  1449     0199                     	;# 
  1450     019A                     	;# 
  1451     019B                     	;# 
  1452     019B                     	;# 
  1453     019B                     	;# 
  1454     019B                     	;# 
  1455     019C                     	;# 
  1456     019C                     	;# 
  1457     019D                     	;# 
  1458     019E                     	;# 
  1459     019F                     	;# 
  1460     020C                     	;# 
  1461     020D                     	;# 
  1462     0211                     	;# 
  1463     0211                     	;# 
  1464     0212                     	;# 
  1465     0212                     	;# 
  1466     0213                     	;# 
  1467     0213                     	;# 
  1468     0214                     	;# 
  1469     0214                     	;# 
  1470     0215                     	;# 
  1471     0215                     	;# 
  1472     0215                     	;# 
  1473     0216                     	;# 
  1474     0216                     	;# 
  1475     0217                     	;# 
  1476     0217                     	;# 
  1477     0219                     	;# 
  1478     021A                     	;# 
  1479     021B                     	;# 
  1480     021C                     	;# 
  1481     021D                     	;# 
  1482     021E                     	;# 
  1483     021F                     	;# 
  1484     0291                     	;# 
  1485     0291                     	;# 
  1486     0292                     	;# 
  1487     0293                     	;# 
  1488     0294                     	;# 
  1489     0295                     	;# 
  1490     0295                     	;# 
  1491     0296                     	;# 
  1492     0298                     	;# 
  1493     0298                     	;# 
  1494     0299                     	;# 
  1495     029A                     	;# 
  1496     029B                     	;# 
  1497     029C                     	;# 
  1498     029C                     	;# 
  1499     029D                     	;# 
  1500     029E                     	;# 
  1501     029E                     	;# 
  1502     0311                     	;# 
  1503     0311                     	;# 
  1504     0312                     	;# 
  1505     0313                     	;# 
  1506     0318                     	;# 
  1507     0318                     	;# 
  1508     0319                     	;# 
  1509     031A                     	;# 
  1510     0394                     	;# 
  1511     0395                     	;# 
  1512     0396                     	;# 
  1513     039A                     	;# 
  1514     039C                     	;# 
  1515     039D                     	;# 
  1516     039E                     	;# 
  1517     039F                     	;# 
  1518     0415                     	;# 
  1519     0416                     	;# 
  1520     0417                     	;# 
  1521     041C                     	;# 
  1522     041D                     	;# 
  1523     041E                     	;# 
  1524     0FE4                     	;# 
  1525     0FE5                     	;# 
  1526     0FE6                     	;# 
  1527     0FE7                     	;# 
  1528     0FE8                     	;# 
  1529     0FE9                     	;# 
  1530     0FEA                     	;# 
  1531     0FEB                     	;# 
  1532     0FED                     	;# 
  1533     0FEE                     	;# 
  1534     0FEF                     	;# 
  1535     0000                     	;# 
  1536     0001                     	;# 
  1537     0002                     	;# 
  1538     0003                     	;# 
  1539     0004                     	;# 
  1540     0005                     	;# 
  1541     0006                     	;# 
  1542     0007                     	;# 
  1543     0008                     	;# 
  1544     0009                     	;# 
  1545     000A                     	;# 
  1546     000B                     	;# 
  1547     000C                     	;# 
  1548     000D                     	;# 
  1549     0011                     	;# 
  1550     0012                     	;# 
  1551     0013                     	;# 
  1552     0014                     	;# 
  1553     0015                     	;# 
  1554     0016                     	;# 
  1555     0016                     	;# 
  1556     0017                     	;# 
  1557     0018                     	;# 
  1558     0019                     	;# 
  1559     001A                     	;# 
  1560     001B                     	;# 
  1561     001C                     	;# 
  1562     001E                     	;# 
  1563     001F                     	;# 
  1564     008C                     	;# 
  1565     008D                     	;# 
  1566     0091                     	;# 
  1567     0092                     	;# 
  1568     0093                     	;# 
  1569     0094                     	;# 
  1570     0095                     	;# 
  1571     0096                     	;# 
  1572     0097                     	;# 
  1573     0098                     	;# 
  1574     0099                     	;# 
  1575     009A                     	;# 
  1576     009B                     	;# 
  1577     009B                     	;# 
  1578     009C                     	;# 
  1579     009D                     	;# 
  1580     009E                     	;# 
  1581     010C                     	;# 
  1582     010D                     	;# 
  1583     0111                     	;# 
  1584     0112                     	;# 
  1585     0113                     	;# 
  1586     0114                     	;# 
  1587     0115                     	;# 
  1588     0116                     	;# 
  1589     0117                     	;# 
  1590     0118                     	;# 
  1591     0119                     	;# 
  1592     011A                     	;# 
  1593     011B                     	;# 
  1594     011D                     	;# 
  1595     011E                     	;# 
  1596     018C                     	;# 
  1597     018D                     	;# 
  1598     0191                     	;# 
  1599     0191                     	;# 
  1600     0192                     	;# 
  1601     0193                     	;# 
  1602     0193                     	;# 
  1603     0193                     	;# 
  1604     0194                     	;# 
  1605     0195                     	;# 
  1606     0196                     	;# 
  1607     0199                     	;# 
  1608     019A                     	;# 
  1609     019B                     	;# 
  1610     019B                     	;# 
  1611     019B                     	;# 
  1612     019B                     	;# 
  1613     019C                     	;# 
  1614     019C                     	;# 
  1615     019D                     	;# 
  1616     019E                     	;# 
  1617     019F                     	;# 
  1618     020C                     	;# 
  1619     020D                     	;# 
  1620     0211                     	;# 
  1621     0211                     	;# 
  1622     0212                     	;# 
  1623     0212                     	;# 
  1624     0213                     	;# 
  1625     0213                     	;# 
  1626     0214                     	;# 
  1627     0214                     	;# 
  1628     0215                     	;# 
  1629     0215                     	;# 
  1630     0215                     	;# 
  1631     0216                     	;# 
  1632     0216                     	;# 
  1633     0217                     	;# 
  1634     0217                     	;# 
  1635     0219                     	;# 
  1636     021A                     	;# 
  1637     021B                     	;# 
  1638     021C                     	;# 
  1639     021D                     	;# 
  1640     021E                     	;# 
  1641     021F                     	;# 
  1642     0291                     	;# 
  1643     0291                     	;# 
  1644     0292                     	;# 
  1645     0293                     	;# 
  1646     0294                     	;# 
  1647     0295                     	;# 
  1648     0295                     	;# 
  1649     0296                     	;# 
  1650     0298                     	;# 
  1651     0298                     	;# 
  1652     0299                     	;# 
  1653     029A                     	;# 
  1654     029B                     	;# 
  1655     029C                     	;# 
  1656     029C                     	;# 
  1657     029D                     	;# 
  1658     029E                     	;# 
  1659     029E                     	;# 
  1660     0311                     	;# 
  1661     0311                     	;# 
  1662     0312                     	;# 
  1663     0313                     	;# 
  1664     0318                     	;# 
  1665     0318                     	;# 
  1666     0319                     	;# 
  1667     031A                     	;# 
  1668     0394                     	;# 
  1669     0395                     	;# 
  1670     0396                     	;# 
  1671     039A                     	;# 
  1672     039C                     	;# 
  1673     039D                     	;# 
  1674     039E                     	;# 
  1675     039F                     	;# 
  1676     0415                     	;# 
  1677     0416                     	;# 
  1678     0417                     	;# 
  1679     041C                     	;# 
  1680     041D                     	;# 
  1681     041E                     	;# 
  1682     0FE4                     	;# 
  1683     0FE5                     	;# 
  1684     0FE6                     	;# 
  1685     0FE7                     	;# 
  1686     0FE8                     	;# 
  1687     0FE9                     	;# 
  1688     0FEA                     	;# 
  1689     0FEB                     	;# 
  1690     0FED                     	;# 
  1691     0FEE                     	;# 
  1692     0FEF                     	;# 
  1693     0000                     	;# 
  1694     0001                     	;# 
  1695     0002                     	;# 
  1696     0003                     	;# 
  1697     0004                     	;# 
  1698     0005                     	;# 
  1699     0006                     	;# 
  1700     0007                     	;# 
  1701     0008                     	;# 
  1702     0009                     	;# 
  1703     000A                     	;# 
  1704     000B                     	;# 
  1705     000C                     	;# 
  1706     000D                     	;# 
  1707     0011                     	;# 
  1708     0012                     	;# 
  1709     0013                     	;# 
  1710     0014                     	;# 
  1711     0015                     	;# 
  1712     0016                     	;# 
  1713     0016                     	;# 
  1714     0017                     	;# 
  1715     0018                     	;# 
  1716     0019                     	;# 
  1717     001A                     	;# 
  1718     001B                     	;# 
  1719     001C                     	;# 
  1720     001E                     	;# 
  1721     001F                     	;# 
  1722     008C                     	;# 
  1723     008D                     	;# 
  1724     0091                     	;# 
  1725     0092                     	;# 
  1726     0093                     	;# 
  1727     0094                     	;# 
  1728     0095                     	;# 
  1729     0096                     	;# 
  1730     0097                     	;# 
  1731     0098                     	;# 
  1732     0099                     	;# 
  1733     009A                     	;# 
  1734     009B                     	;# 
  1735     009B                     	;# 
  1736     009C                     	;# 
  1737     009D                     	;# 
  1738     009E                     	;# 
  1739     010C                     	;# 
  1740     010D                     	;# 
  1741     0111                     	;# 
  1742     0112                     	;# 
  1743     0113                     	;# 
  1744     0114                     	;# 
  1745     0115                     	;# 
  1746     0116                     	;# 
  1747     0117                     	;# 
  1748     0118                     	;# 
  1749     0119                     	;# 
  1750     011A                     	;# 
  1751     011B                     	;# 
  1752     011D                     	;# 
  1753     011E                     	;# 
  1754     018C                     	;# 
  1755     018D                     	;# 
  1756     0191                     	;# 
  1757     0191                     	;# 
  1758     0192                     	;# 
  1759     0193                     	;# 
  1760     0193                     	;# 
  1761     0193                     	;# 
  1762     0194                     	;# 
  1763     0195                     	;# 
  1764     0196                     	;# 
  1765     0199                     	;# 
  1766     019A                     	;# 
  1767     019B                     	;# 
  1768     019B                     	;# 
  1769     019B                     	;# 
  1770     019B                     	;# 
  1771     019C                     	;# 
  1772     019C                     	;# 
  1773     019D                     	;# 
  1774     019E                     	;# 
  1775     019F                     	;# 
  1776     020C                     	;# 
  1777     020D                     	;# 
  1778     0211                     	;# 
  1779     0211                     	;# 
  1780     0212                     	;# 
  1781     0212                     	;# 
  1782     0213                     	;# 
  1783     0213                     	;# 
  1784     0214                     	;# 
  1785     0214                     	;# 
  1786     0215                     	;# 
  1787     0215                     	;# 
  1788     0215                     	;# 
  1789     0216                     	;# 
  1790     0216                     	;# 
  1791     0217                     	;# 
  1792     0217                     	;# 
  1793     0219                     	;# 
  1794     021A                     	;# 
  1795     021B                     	;# 
  1796     021C                     	;# 
  1797     021D                     	;# 
  1798     021E                     	;# 
  1799     021F                     	;# 
  1800     0291                     	;# 
  1801     0291                     	;# 
  1802     0292                     	;# 
  1803     0293                     	;# 
  1804     0294                     	;# 
  1805     0295                     	;# 
  1806     0295                     	;# 
  1807     0296                     	;# 
  1808     0298                     	;# 
  1809     0298                     	;# 
  1810     0299                     	;# 
  1811     029A                     	;# 
  1812     029B                     	;# 
  1813     029C                     	;# 
  1814     029C                     	;# 
  1815     029D                     	;# 
  1816     029E                     	;# 
  1817     029E                     	;# 
  1818     0311                     	;# 
  1819     0311                     	;# 
  1820     0312                     	;# 
  1821     0313                     	;# 
  1822     0318                     	;# 
  1823     0318                     	;# 
  1824     0319                     	;# 
  1825     031A                     	;# 
  1826     0394                     	;# 
  1827     0395                     	;# 
  1828     0396                     	;# 
  1829     039A                     	;# 
  1830     039C                     	;# 
  1831     039D                     	;# 
  1832     039E                     	;# 
  1833     039F                     	;# 
  1834     0415                     	;# 
  1835     0416                     	;# 
  1836     0417                     	;# 
  1837     041C                     	;# 
  1838     041D                     	;# 
  1839     041E                     	;# 
  1840     0FE4                     	;# 
  1841     0FE5                     	;# 
  1842     0FE6                     	;# 
  1843     0FE7                     	;# 
  1844     0FE8                     	;# 
  1845     0FE9                     	;# 
  1846     0FEA                     	;# 
  1847     0FEB                     	;# 
  1848     0FED                     	;# 
  1849     0FEE                     	;# 
  1850     0FEF                     	;# 
  1851     0000                     	;# 
  1852     0001                     	;# 
  1853     0002                     	;# 
  1854     0003                     	;# 
  1855     0004                     	;# 
  1856     0005                     	;# 
  1857     0006                     	;# 
  1858     0007                     	;# 
  1859     0008                     	;# 
  1860     0009                     	;# 
  1861     000A                     	;# 
  1862     000B                     	;# 
  1863     000C                     	;# 
  1864     000D                     	;# 
  1865     0011                     	;# 
  1866     0012                     	;# 
  1867     0013                     	;# 
  1868     0014                     	;# 
  1869     0015                     	;# 
  1870     0016                     	;# 
  1871     0016                     	;# 
  1872     0017                     	;# 
  1873     0018                     	;# 
  1874     0019                     	;# 
  1875     001A                     	;# 
  1876     001B                     	;# 
  1877     001C                     	;# 
  1878     001E                     	;# 
  1879     001F                     	;# 
  1880     008C                     	;# 
  1881     008D                     	;# 
  1882     0091                     	;# 
  1883     0092                     	;# 
  1884     0093                     	;# 
  1885     0094                     	;# 
  1886     0095                     	;# 
  1887     0096                     	;# 
  1888     0097                     	;# 
  1889     0098                     	;# 
  1890     0099                     	;# 
  1891     009A                     	;# 
  1892     009B                     	;# 
  1893     009B                     	;# 
  1894     009C                     	;# 
  1895     009D                     	;# 
  1896     009E                     	;# 
  1897     010C                     	;# 
  1898     010D                     	;# 
  1899     0111                     	;# 
  1900     0112                     	;# 
  1901     0113                     	;# 
  1902     0114                     	;# 
  1903     0115                     	;# 
  1904     0116                     	;# 
  1905     0117                     	;# 
  1906     0118                     	;# 
  1907     0119                     	;# 
  1908     011A                     	;# 
  1909     011B                     	;# 
  1910     011D                     	;# 
  1911     011E                     	;# 
  1912     018C                     	;# 
  1913     018D                     	;# 
  1914     0191                     	;# 
  1915     0191                     	;# 
  1916     0192                     	;# 
  1917     0193                     	;# 
  1918     0193                     	;# 
  1919     0193                     	;# 
  1920     0194                     	;# 
  1921     0195                     	;# 
  1922     0196                     	;# 
  1923     0199                     	;# 
  1924     019A                     	;# 
  1925     019B                     	;# 
  1926     019B                     	;# 
  1927     019B                     	;# 
  1928     019B                     	;# 
  1929     019C                     	;# 
  1930     019C                     	;# 
  1931     019D                     	;# 
  1932     019E                     	;# 
  1933     019F                     	;# 
  1934     020C                     	;# 
  1935     020D                     	;# 
  1936     0211                     	;# 
  1937     0211                     	;# 
  1938     0212                     	;# 
  1939     0212                     	;# 
  1940     0213                     	;# 
  1941     0213                     	;# 
  1942     0214                     	;# 
  1943     0214                     	;# 
  1944     0215                     	;# 
  1945     0215                     	;# 
  1946     0215                     	;# 
  1947     0216                     	;# 
  1948     0216                     	;# 
  1949     0217                     	;# 
  1950     0217                     	;# 
  1951     0219                     	;# 
  1952     021A                     	;# 
  1953     021B                     	;# 
  1954     021C                     	;# 
  1955     021D                     	;# 
  1956     021E                     	;# 
  1957     021F                     	;# 
  1958     0291                     	;# 
  1959     0291                     	;# 
  1960     0292                     	;# 
  1961     0293                     	;# 
  1962     0294                     	;# 
  1963     0295                     	;# 
  1964     0295                     	;# 
  1965     0296                     	;# 
  1966     0298                     	;# 
  1967     0298                     	;# 
  1968     0299                     	;# 
  1969     029A                     	;# 
  1970     029B                     	;# 
  1971     029C                     	;# 
  1972     029C                     	;# 
  1973     029D                     	;# 
  1974     029E                     	;# 
  1975     029E                     	;# 
  1976     0311                     	;# 
  1977     0311                     	;# 
  1978     0312                     	;# 
  1979     0313                     	;# 
  1980     0318                     	;# 
  1981     0318                     	;# 
  1982     0319                     	;# 
  1983     031A                     	;# 
  1984     0394                     	;# 
  1985     0395                     	;# 
  1986     0396                     	;# 
  1987     039A                     	;# 
  1988     039C                     	;# 
  1989     039D                     	;# 
  1990     039E                     	;# 
  1991     039F                     	;# 
  1992     0415                     	;# 
  1993     0416                     	;# 
  1994     0417                     	;# 
  1995     041C                     	;# 
  1996     041D                     	;# 
  1997     041E                     	;# 
  1998     0FE4                     	;# 
  1999     0FE5                     	;# 
  2000     0FE6                     	;# 
  2001     0FE7                     	;# 
  2002     0FE8                     	;# 
  2003     0FE9                     	;# 
  2004     0FEA                     	;# 
  2005     0FEB                     	;# 
  2006     0FED                     	;# 
  2007     0FEE                     	;# 
  2008     0FEF                     	;# 
  2009     0000                     	;# 
  2010     0001                     	;# 
  2011     0002                     	;# 
  2012     0003                     	;# 
  2013     0004                     	;# 
  2014     0005                     	;# 
  2015     0006                     	;# 
  2016     0007                     	;# 
  2017     0008                     	;# 
  2018     0009                     	;# 
  2019     000A                     	;# 
  2020     000B                     	;# 
  2021     000C                     	;# 
  2022     000D                     	;# 
  2023     0011                     	;# 
  2024     0012                     	;# 
  2025     0013                     	;# 
  2026     0014                     	;# 
  2027     0015                     	;# 
  2028     0016                     	;# 
  2029     0016                     	;# 
  2030     0017                     	;# 
  2031     0018                     	;# 
  2032     0019                     	;# 
  2033     001A                     	;# 
  2034     001B                     	;# 
  2035     001C                     	;# 
  2036     001E                     	;# 
  2037     001F                     	;# 
  2038     008C                     	;# 
  2039     008D                     	;# 
  2040     0091                     	;# 
  2041     0092                     	;# 
  2042     0093                     	;# 
  2043     0094                     	;# 
  2044     0095                     	;# 
  2045     0096                     	;# 
  2046     0097                     	;# 
  2047     0098                     	;# 
  2048     0099                     	;# 
  2049     009A                     	;# 
  2050     009B                     	;# 
  2051     009B                     	;# 
  2052     009C                     	;# 
  2053     009D                     	;# 
  2054     009E                     	;# 
  2055     010C                     	;# 
  2056     010D                     	;# 
  2057     0111                     	;# 
  2058     0112                     	;# 
  2059     0113                     	;# 
  2060     0114                     	;# 
  2061     0115                     	;# 
  2062     0116                     	;# 
  2063     0117                     	;# 
  2064     0118                     	;# 
  2065     0119                     	;# 
  2066     011A                     	;# 
  2067     011B                     	;# 
  2068     011D                     	;# 
  2069     011E                     	;# 
  2070     018C                     	;# 
  2071     018D                     	;# 
  2072     0191                     	;# 
  2073     0191                     	;# 
  2074     0192                     	;# 
  2075     0193                     	;# 
  2076     0193                     	;# 
  2077     0193                     	;# 
  2078     0194                     	;# 
  2079     0195                     	;# 
  2080     0196                     	;# 
  2081     0199                     	;# 
  2082     019A                     	;# 
  2083     019B                     	;# 
  2084     019B                     	;# 
  2085     019B                     	;# 
  2086     019B                     	;# 
  2087     019C                     	;# 
  2088     019C                     	;# 
  2089     019D                     	;# 
  2090     019E                     	;# 
  2091     019F                     	;# 
  2092     020C                     	;# 
  2093     020D                     	;# 
  2094     0211                     	;# 
  2095     0211                     	;# 
  2096     0212                     	;# 
  2097     0212                     	;# 
  2098     0213                     	;# 
  2099     0213                     	;# 
  2100     0214                     	;# 
  2101     0214                     	;# 
  2102     0215                     	;# 
  2103     0215                     	;# 
  2104     0215                     	;# 
  2105     0216                     	;# 
  2106     0216                     	;# 
  2107     0217                     	;# 
  2108     0217                     	;# 
  2109     0219                     	;# 
  2110     021A                     	;# 
  2111     021B                     	;# 
  2112     021C                     	;# 
  2113     021D                     	;# 
  2114     021E                     	;# 
  2115     021F                     	;# 
  2116     0291                     	;# 
  2117     0291                     	;# 
  2118     0292                     	;# 
  2119     0293                     	;# 
  2120     0294                     	;# 
  2121     0295                     	;# 
  2122     0295                     	;# 
  2123     0296                     	;# 
  2124     0298                     	;# 
  2125     0298                     	;# 
  2126     0299                     	;# 
  2127     029A                     	;# 
  2128     029B                     	;# 
  2129     029C                     	;# 
  2130     029C                     	;# 
  2131     029D                     	;# 
  2132     029E                     	;# 
  2133     029E                     	;# 
  2134     0311                     	;# 
  2135     0311                     	;# 
  2136     0312                     	;# 
  2137     0313                     	;# 
  2138     0318                     	;# 
  2139     0318                     	;# 
  2140     0319                     	;# 
  2141     031A                     	;# 
  2142     0394                     	;# 
  2143     0395                     	;# 
  2144     0396                     	;# 
  2145     039A                     	;# 
  2146     039C                     	;# 
  2147     039D                     	;# 
  2148     039E                     	;# 
  2149     039F                     	;# 
  2150     0415                     	;# 
  2151     0416                     	;# 
  2152     0417                     	;# 
  2153     041C                     	;# 
  2154     041D                     	;# 
  2155     041E                     	;# 
  2156     0FE4                     	;# 
  2157     0FE5                     	;# 
  2158     0FE6                     	;# 
  2159     0FE7                     	;# 
  2160     0FE8                     	;# 
  2161     0FE9                     	;# 
  2162     0FEA                     	;# 
  2163     0FEB                     	;# 
  2164     0FED                     	;# 
  2165     0FEE                     	;# 
  2166     0FEF                     	;# 
  2167     0000                     	;# 
  2168     0001                     	;# 
  2169     0002                     	;# 
  2170     0003                     	;# 
  2171     0004                     	;# 
  2172     0005                     	;# 
  2173     0006                     	;# 
  2174     0007                     	;# 
  2175     0008                     	;# 
  2176     0009                     	;# 
  2177     000A                     	;# 
  2178     000B                     	;# 
  2179     000C                     	;# 
  2180     000D                     	;# 
  2181     0011                     	;# 
  2182     0012                     	;# 
  2183     0013                     	;# 
  2184     0014                     	;# 
  2185     0015                     	;# 
  2186     0016                     	;# 
  2187     0016                     	;# 
  2188     0017                     	;# 
  2189     0018                     	;# 
  2190     0019                     	;# 
  2191     001A                     	;# 
  2192     001B                     	;# 
  2193     001C                     	;# 
  2194     001E                     	;# 
  2195     001F                     	;# 
  2196     008C                     	;# 
  2197     008D                     	;# 
  2198     0091                     	;# 
  2199     0092                     	;# 
  2200     0093                     	;# 
  2201     0094                     	;# 
  2202     0095                     	;# 
  2203     0096                     	;# 
  2204     0097                     	;# 
  2205     0098                     	;# 
  2206     0099                     	;# 
  2207     009A                     	;# 
  2208     009B                     	;# 
  2209     009B                     	;# 
  2210     009C                     	;# 
  2211     009D                     	;# 
  2212     009E                     	;# 
  2213     010C                     	;# 
  2214     010D                     	;# 
  2215     0111                     	;# 
  2216     0112                     	;# 
  2217     0113                     	;# 
  2218     0114                     	;# 
  2219     0115                     	;# 
  2220     0116                     	;# 
  2221     0117                     	;# 
  2222     0118                     	;# 
  2223     0119                     	;# 
  2224     011A                     	;# 
  2225     011B                     	;# 
  2226     011D                     	;# 
  2227     011E                     	;# 
  2228     018C                     	;# 
  2229     018D                     	;# 
  2230     0191                     	;# 
  2231     0191                     	;# 
  2232     0192                     	;# 
  2233     0193                     	;# 
  2234     0193                     	;# 
  2235     0193                     	;# 
  2236     0194                     	;# 
  2237     0195                     	;# 
  2238     0196                     	;# 
  2239     0199                     	;# 
  2240     019A                     	;# 
  2241     019B                     	;# 
  2242     019B                     	;# 
  2243     019B                     	;# 
  2244     019B                     	;# 
  2245     019C                     	;# 
  2246     019C                     	;# 
  2247     019D                     	;# 
  2248     019E                     	;# 
  2249     019F                     	;# 
  2250     020C                     	;# 
  2251     020D                     	;# 
  2252     0211                     	;# 
  2253     0211                     	;# 
  2254     0212                     	;# 
  2255     0212                     	;# 
  2256     0213                     	;# 
  2257     0213                     	;# 
  2258     0214                     	;# 
  2259     0214                     	;# 
  2260     0215                     	;# 
  2261     0215                     	;# 
  2262     0215                     	;# 
  2263     0216                     	;# 
  2264     0216                     	;# 
  2265     0217                     	;# 
  2266     0217                     	;# 
  2267     0219                     	;# 
  2268     021A                     	;# 
  2269     021B                     	;# 
  2270     021C                     	;# 
  2271     021D                     	;# 
  2272     021E                     	;# 
  2273     021F                     	;# 
  2274     0291                     	;# 
  2275     0291                     	;# 
  2276     0292                     	;# 
  2277     0293                     	;# 
  2278     0294                     	;# 
  2279     0295                     	;# 
  2280     0295                     	;# 
  2281     0296                     	;# 
  2282     0298                     	;# 
  2283     0298                     	;# 
  2284     0299                     	;# 
  2285     029A                     	;# 
  2286     029B                     	;# 
  2287     029C                     	;# 
  2288     029C                     	;# 
  2289     029D                     	;# 
  2290     029E                     	;# 
  2291     029E                     	;# 
  2292     0311                     	;# 
  2293     0311                     	;# 
  2294     0312                     	;# 
  2295     0313                     	;# 
  2296     0318                     	;# 
  2297     0318                     	;# 
  2298     0319                     	;# 
  2299     031A                     	;# 
  2300     0394                     	;# 
  2301     0395                     	;# 
  2302     0396                     	;# 
  2303     039A                     	;# 
  2304     039C                     	;# 
  2305     039D                     	;# 
  2306     039E                     	;# 
  2307     039F                     	;# 
  2308     0415                     	;# 
  2309     0416                     	;# 
  2310     0417                     	;# 
  2311     041C                     	;# 
  2312     041D                     	;# 
  2313     041E                     	;# 
  2314     0FE4                     	;# 
  2315     0FE5                     	;# 
  2316     0FE6                     	;# 
  2317     0FE7                     	;# 
  2318     0FE8                     	;# 
  2319     0FE9                     	;# 
  2320     0FEA                     	;# 
  2321     0FEB                     	;# 
  2322     0FED                     	;# 
  2323     0FEE                     	;# 
  2324     0FEF                     	;# 
  2325     0000                     	;# 
  2326     0001                     	;# 
  2327     0002                     	;# 
  2328     0003                     	;# 
  2329     0004                     	;# 
  2330     0005                     	;# 
  2331     0006                     	;# 
  2332     0007                     	;# 
  2333     0008                     	;# 
  2334     0009                     	;# 
  2335     000A                     	;# 
  2336     000B                     	;# 
  2337     000C                     	;# 
  2338     000D                     	;# 
  2339     0011                     	;# 
  2340     0012                     	;# 
  2341     0013                     	;# 
  2342     0014                     	;# 
  2343     0015                     	;# 
  2344     0016                     	;# 
  2345     0016                     	;# 
  2346     0017                     	;# 
  2347     0018                     	;# 
  2348     0019                     	;# 
  2349     001A                     	;# 
  2350     001B                     	;# 
  2351     001C                     	;# 
  2352     001E                     	;# 
  2353     001F                     	;# 
  2354     008C                     	;# 
  2355     008D                     	;# 
  2356     0091                     	;# 
  2357     0092                     	;# 
  2358     0093                     	;# 
  2359     0094                     	;# 
  2360     0095                     	;# 
  2361     0096                     	;# 
  2362     0097                     	;# 
  2363     0098                     	;# 
  2364     0099                     	;# 
  2365     009A                     	;# 
  2366     009B                     	;# 
  2367     009B                     	;# 
  2368     009C                     	;# 
  2369     009D                     	;# 
  2370     009E                     	;# 
  2371     010C                     	;# 
  2372     010D                     	;# 
  2373     0111                     	;# 
  2374     0112                     	;# 
  2375     0113                     	;# 
  2376     0114                     	;# 
  2377     0115                     	;# 
  2378     0116                     	;# 
  2379     0117                     	;# 
  2380     0118                     	;# 
  2381     0119                     	;# 
  2382     011A                     	;# 
  2383     011B                     	;# 
  2384     011D                     	;# 
  2385     011E                     	;# 
  2386     018C                     	;# 
  2387     018D                     	;# 
  2388     0191                     	;# 
  2389     0191                     	;# 
  2390     0192                     	;# 
  2391     0193                     	;# 
  2392     0193                     	;# 
  2393     0193                     	;# 
  2394     0194                     	;# 
  2395     0195                     	;# 
  2396     0196                     	;# 
  2397     0199                     	;# 
  2398     019A                     	;# 
  2399     019B                     	;# 
  2400     019B                     	;# 
  2401     019B                     	;# 
  2402     019B                     	;# 
  2403     019C                     	;# 
  2404     019C                     	;# 
  2405     019D                     	;# 
  2406     019E                     	;# 
  2407     019F                     	;# 
  2408     020C                     	;# 
  2409     020D                     	;# 
  2410     0211                     	;# 
  2411     0211                     	;# 
  2412     0212                     	;# 
  2413     0212                     	;# 
  2414     0213                     	;# 
  2415     0213                     	;# 
  2416     0214                     	;# 
  2417     0214                     	;# 
  2418     0215                     	;# 
  2419     0215                     	;# 
  2420     0215                     	;# 
  2421     0216                     	;# 
  2422     0216                     	;# 
  2423     0217                     	;# 
  2424     0217                     	;# 
  2425     0219                     	;# 
  2426     021A                     	;# 
  2427     021B                     	;# 
  2428     021C                     	;# 
  2429     021D                     	;# 
  2430     021E                     	;# 
  2431     021F                     	;# 
  2432     0291                     	;# 
  2433     0291                     	;# 
  2434     0292                     	;# 
  2435     0293                     	;# 
  2436     0294                     	;# 
  2437     0295                     	;# 
  2438     0295                     	;# 
  2439     0296                     	;# 
  2440     0298                     	;# 
  2441     0298                     	;# 
  2442     0299                     	;# 
  2443     029A                     	;# 
  2444     029B                     	;# 
  2445     029C                     	;# 
  2446     029C                     	;# 
  2447     029D                     	;# 
  2448     029E                     	;# 
  2449     029E                     	;# 
  2450     0311                     	;# 
  2451     0311                     	;# 
  2452     0312                     	;# 
  2453     0313                     	;# 
  2454     0318                     	;# 
  2455     0318                     	;# 
  2456     0319                     	;# 
  2457     031A                     	;# 
  2458     0394                     	;# 
  2459     0395                     	;# 
  2460     0396                     	;# 
  2461     039A                     	;# 
  2462     039C                     	;# 
  2463     039D                     	;# 
  2464     039E                     	;# 
  2465     039F                     	;# 
  2466     0415                     	;# 
  2467     0416                     	;# 
  2468     0417                     	;# 
  2469     041C                     	;# 
  2470     041D                     	;# 
  2471     041E                     	;# 
  2472     0FE4                     	;# 
  2473     0FE5                     	;# 
  2474     0FE6                     	;# 
  2475     0FE7                     	;# 
  2476     0FE8                     	;# 
  2477     0FE9                     	;# 
  2478     0FEA                     	;# 
  2479     0FEB                     	;# 
  2480     0FED                     	;# 
  2481     0FEE                     	;# 
  2482     0FEF                     	;# 
  2483     0000                     	;# 
  2484     0001                     	;# 
  2485     0002                     	;# 
  2486     0003                     	;# 
  2487     0004                     	;# 
  2488     0005                     	;# 
  2489     0006                     	;# 
  2490     0007                     	;# 
  2491     0008                     	;# 
  2492     0009                     	;# 
  2493     000A                     	;# 
  2494     000B                     	;# 
  2495     000C                     	;# 
  2496     000D                     	;# 
  2497     0011                     	;# 
  2498     0012                     	;# 
  2499     0013                     	;# 
  2500     0014                     	;# 
  2501     0015                     	;# 
  2502     0016                     	;# 
  2503     0016                     	;# 
  2504     0017                     	;# 
  2505     0018                     	;# 
  2506     0019                     	;# 
  2507     001A                     	;# 
  2508     001B                     	;# 
  2509     001C                     	;# 
  2510     001E                     	;# 
  2511     001F                     	;# 
  2512     008C                     	;# 
  2513     008D                     	;# 
  2514     0091                     	;# 
  2515     0092                     	;# 
  2516     0093                     	;# 
  2517     0094                     	;# 
  2518     0095                     	;# 
  2519     0096                     	;# 
  2520     0097                     	;# 
  2521     0098                     	;# 
  2522     0099                     	;# 
  2523     009A                     	;# 
  2524     009B                     	;# 
  2525     009B                     	;# 
  2526     009C                     	;# 
  2527     009D                     	;# 
  2528     009E                     	;# 
  2529     010C                     	;# 
  2530     010D                     	;# 
  2531     0111                     	;# 
  2532     0112                     	;# 
  2533     0113                     	;# 
  2534     0114                     	;# 
  2535     0115                     	;# 
  2536     0116                     	;# 
  2537     0117                     	;# 
  2538     0118                     	;# 
  2539     0119                     	;# 
  2540     011A                     	;# 
  2541     011B                     	;# 
  2542     011D                     	;# 
  2543     011E                     	;# 
  2544     018C                     	;# 
  2545     018D                     	;# 
  2546     0191                     	;# 
  2547     0191                     	;# 
  2548     0192                     	;# 
  2549     0193                     	;# 
  2550     0193                     	;# 
  2551     0193                     	;# 
  2552     0194                     	;# 
  2553     0195                     	;# 
  2554     0196                     	;# 
  2555     0199                     	;# 
  2556     019A                     	;# 
  2557     019B                     	;# 
  2558     019B                     	;# 
  2559     019B                     	;# 
  2560     019B                     	;# 
  2561     019C                     	;# 
  2562     019C                     	;# 
  2563     019D                     	;# 
  2564     019E                     	;# 
  2565     019F                     	;# 
  2566     020C                     	;# 
  2567     020D                     	;# 
  2568     0211                     	;# 
  2569     0211                     	;# 
  2570     0212                     	;# 
  2571     0212                     	;# 
  2572     0213                     	;# 
  2573     0213                     	;# 
  2574     0214                     	;# 
  2575     0214                     	;# 
  2576     0215                     	;# 
  2577     0215                     	;# 
  2578     0215                     	;# 
  2579     0216                     	;# 
  2580     0216                     	;# 
  2581     0217                     	;# 
  2582     0217                     	;# 
  2583     0219                     	;# 
  2584     021A                     	;# 
  2585     021B                     	;# 
  2586     021C                     	;# 
  2587     021D                     	;# 
  2588     021E                     	;# 
  2589     021F                     	;# 
  2590     0291                     	;# 
  2591     0291                     	;# 
  2592     0292                     	;# 
  2593     0293                     	;# 
  2594     0294                     	;# 
  2595     0295                     	;# 
  2596     0295                     	;# 
  2597     0296                     	;# 
  2598     0298                     	;# 
  2599     0298                     	;# 
  2600     0299                     	;# 
  2601     029A                     	;# 
  2602     029B                     	;# 
  2603     029C                     	;# 
  2604     029C                     	;# 
  2605     029D                     	;# 
  2606     029E                     	;# 
  2607     029E                     	;# 
  2608     0311                     	;# 
  2609     0311                     	;# 
  2610     0312                     	;# 
  2611     0313                     	;# 
  2612     0318                     	;# 
  2613     0318                     	;# 
  2614     0319                     	;# 
  2615     031A                     	;# 
  2616     0394                     	;# 
  2617     0395                     	;# 
  2618     0396                     	;# 
  2619     039A                     	;# 
  2620     039C                     	;# 
  2621     039D                     	;# 
  2622     039E                     	;# 
  2623     039F                     	;# 
  2624     0415                     	;# 
  2625     0416                     	;# 
  2626     0417                     	;# 
  2627     041C                     	;# 
  2628     041D                     	;# 
  2629     041E                     	;# 
  2630     0FE4                     	;# 
  2631     0FE5                     	;# 
  2632     0FE6                     	;# 
  2633     0FE7                     	;# 
  2634     0FE8                     	;# 
  2635     0FE9                     	;# 
  2636     0FEA                     	;# 
  2637     0FEB                     	;# 
  2638     0FED                     	;# 
  2639     0FEE                     	;# 
  2640     0FEF                     	;# 
  2641                           
  2642 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  2643     0000                     
  2644 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  2645     0000                     
  2646 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  2647     0000                     
  2648                           	psect	idataBANK0
  2649     002F                     __pidataBANK0:
  2650                           
  2651                           ;initializer for _float_temp
  2652     002F  3400               	retlw	0
  2653     0030  3400               	retlw	0
  2654     0031  34B0               	retlw	176
  2655     0032  3441               	retlw	65
  2656                           
  2657                           ;initializer for _first_read
  2658     0033  3401               	retlw	1
  2659                           
  2660                           	psect	idataBANK2
  2661     098A                     __pidataBANK2:
  2662                           
  2663                           ;initializer for _timecontrol
  2664     098A  3404               	retlw	4
  2665     098B  3400               	retlw	0
  2666     098C  3400               	retlw	0
  2667                           
  2668                           ;initializer for _kdp
  2669     098D  3405               	retlw	5
  2670     098E  3400               	retlw	0
  2671     098F  3400               	retlw	0
  2672                           
  2673                           ;initializer for _kip
  2674     0990  3496               	retlw	150
  2675     0991  3400               	retlw	0
  2676     0992  3400               	retlw	0
  2677                           
  2678                           ;initializer for _kpp
  2679     0993  3436               	retlw	54
  2680     0994  3401               	retlw	1
  2681     0995  3400               	retlw	0
  2682                           
  2683                           ;initializer for _kif
  2684     0996  3446               	retlw	70
  2685     0997  3400               	retlw	0
  2686     0998  3400               	retlw	0
  2687                           
  2688                           ;initializer for _kpf
  2689     0999  34C8               	retlw	200
  2690     099A  3400               	retlw	0
  2691     099B  3400               	retlw	0
  2692                           
  2693                           	psect	stringtext1
  2694     0800                     __pstringtext1:
  2695     0800                     _lookupTable:
  2696     0800  348D               	retlw	141
  2697     0801  34B3               	retlw	179
  2698     0802  3429               	retlw	41
  2699     0803  343D               	retlw	61
  2700     0804  343E               	retlw	62
  2701     0805  3403               	retlw	3
  2702     0806  342A               	retlw	42
  2703     0807  343D               	retlw	61
  2704     0808  34F0               	retlw	240
  2705     0809  3452               	retlw	82
  2706     080A  342A               	retlw	42
  2707     080B  343D               	retlw	61
  2708     080C  3494               	retlw	148
  2709     080D  34A1               	retlw	161
  2710     080E  342A               	retlw	42
  2711     080F  343D               	retlw	61
  2712     0810  3445               	retlw	69
  2713     0811  34F1               	retlw	241
  2714     0812  342A               	retlw	42
  2715     0813  343D               	retlw	61
  2716     0814  34EA               	retlw	234
  2717     0815  343F               	retlw	63
  2718     0816  342B               	retlw	43
  2719     0817  343D               	retlw	61
  2720     0818  348F               	retlw	143
  2721     0819  348E               	retlw	142
  2722     081A  342B               	retlw	43
  2723     081B  343D               	retlw	61
  2724     081C  3433               	retlw	51
  2725     081D  34DD               	retlw	221
  2726     081E  342B               	retlw	43
  2727     081F  343D               	retlw	61
  2728     0820  34D8               	retlw	216
  2729     0821  342B               	retlw	43
  2730     0822  342C               	retlw	44
  2731     0823  343D               	retlw	61
  2732     0824  3470               	retlw	112
  2733     0825  3479               	retlw	121
  2734     0826  342C               	retlw	44
  2735     0827  343D               	retlw	61
  2736     0828  3415               	retlw	21
  2737     0829  34C8               	retlw	200
  2738     082A  342C               	retlw	44
  2739     082B  343D               	retlw	61
  2740     082C  34AD               	retlw	173
  2741     082D  3415               	retlw	21
  2742     082E  342D               	retlw	45
  2743     082F  343D               	retlw	61
  2744     0830  3452               	retlw	82
  2745     0831  3464               	retlw	100
  2746     0832  342D               	retlw	45
  2747     0833  343D               	retlw	61
  2748     0834  34EA               	retlw	234
  2749     0835  34B1               	retlw	177
  2750     0836  342D               	retlw	45
  2751     0837  343D               	retlw	61
  2752     0838  3482               	retlw	130
  2753     0839  34FF               	retlw	255
  2754     083A  342D               	retlw	45
  2755     083B  343D               	retlw	61
  2756     083C  341A               	retlw	26
  2757     083D  344D               	retlw	77
  2758     083E  342E               	retlw	46
  2759     083F  343D               	retlw	61
  2760     0840  34A6               	retlw	166
  2761     0841  3499               	retlw	153
  2762     0842  342E               	retlw	46
  2763     0843  343D               	retlw	61
  2764     0844  343E               	retlw	62
  2765     0845  34E7               	retlw	231
  2766     0846  342E               	retlw	46
  2767     0847  343D               	retlw	61
  2768     0848  34D7               	retlw	215
  2769     0849  3434               	retlw	52
  2770     084A  342F               	retlw	47
  2771     084B  343D               	retlw	61
  2772     084C  3462               	retlw	98
  2773     084D  3481               	retlw	129
  2774     084E  342F               	retlw	47
  2775     084F  343D               	retlw	61
  2776     0850  34EE               	retlw	238
  2777     0851  34CD               	retlw	205
  2778     0852  342F               	retlw	47
  2779     0853  343D               	retlw	61
  2780     0854  347A               	retlw	122
  2781     0855  341A               	retlw	26
  2782     0856  3430               	retlw	48
  2783     0857  343D               	retlw	61
  2784     0858  3406               	retlw	6
  2785     0859  3467               	retlw	103
  2786     085A  3430               	retlw	48
  2787     085B  343D               	retlw	61
  2788     085C  3492               	retlw	146
  2789     085D  34B3               	retlw	179
  2790     085E  3430               	retlw	48
  2791     085F  343D               	retlw	61
  2792     0860  341D               	retlw	29
  2793     0861  3400               	retlw	0
  2794     0862  3431               	retlw	49
  2795     0863  343D               	retlw	61
  2796     0864  34A9               	retlw	169
  2797     0865  344C               	retlw	76
  2798     0866  3431               	retlw	49
  2799     0867  343D               	retlw	61
  2800     0868  3429               	retlw	41
  2801     0869  3498               	retlw	152
  2802     086A  3431               	retlw	49
  2803     086B  343D               	retlw	61
  2804     086C  34B4               	retlw	180
  2805     086D  34E4               	retlw	228
  2806     086E  3431               	retlw	49
  2807     086F  343D               	retlw	61
  2808     0870  3434               	retlw	52
  2809     0871  3430               	retlw	48
  2810     0872  3432               	retlw	50
  2811     0873  343D               	retlw	61
  2812     0874  34B3               	retlw	179
  2813     0875  347B               	retlw	123
  2814     0876  3432               	retlw	50
  2815     0877  343D               	retlw	61
  2816     0878  3432               	retlw	50
  2817     0879  34C7               	retlw	199
  2818     087A  3432               	retlw	50
  2819     087B  343D               	retlw	61
  2820     087C  34B2               	retlw	178
  2821     087D  3412               	retlw	18
  2822     087E  3433               	retlw	51
  2823     087F  343D               	retlw	61
  2824     0880  3431               	retlw	49
  2825     0881  345E               	retlw	94
  2826     0882  3433               	retlw	51
  2827     0883  343D               	retlw	61
  2828     0884  34B0               	retlw	176
  2829     0885  34A9               	retlw	169
  2830     0886  3433               	retlw	51
  2831     0887  343D               	retlw	61
  2832     0888  3423               	retlw	35
  2833     0889  34F4               	retlw	244
  2834     088A  3433               	retlw	51
  2835     088B  343D               	retlw	61
  2836     088C  34A3               	retlw	163
  2837     088D  343F               	retlw	63
  2838     088E  3434               	retlw	52
  2839     088F  343D               	retlw	61
  2840     0890  3416               	retlw	22
  2841     0891  348A               	retlw	138
  2842     0892  3434               	retlw	52
  2843     0893  343D               	retlw	61
  2844     0894  3489               	retlw	137
  2845     0895  34D4               	retlw	212
  2846     0896  3434               	retlw	52
  2847     0897  343D               	retlw	61
  2848     0898  34FB               	retlw	251
  2849     0899  341E               	retlw	30
  2850     089A  3435               	retlw	53
  2851     089B  343D               	retlw	61
  2852     089C  346E               	retlw	110
  2853     089D  3469               	retlw	105
  2854     089E  3435               	retlw	53
  2855     089F  343D               	retlw	61
  2856     08A0  34E1               	retlw	225
  2857     08A1  34B3               	retlw	179
  2858     08A2  3435               	retlw	53
  2859     08A3  343D               	retlw	61
  2860     08A4  3454               	retlw	84
  2861     08A5  34FE               	retlw	254
  2862     08A6  3435               	retlw	53
  2863     08A7  343D               	retlw	61
  2864     08A8  34C7               	retlw	199
  2865     08A9  3448               	retlw	72
  2866     08AA  3436               	retlw	54
  2867     08AB  343D               	retlw	61
  2868     08AC  342E               	retlw	46
  2869     08AD  3492               	retlw	146
  2870     08AE  3436               	retlw	54
  2871     08AF  343D               	retlw	61
  2872     08B0  34A0               	retlw	160
  2873     08B1  34DC               	retlw	220
  2874     08B2  3436               	retlw	54
  2875     08B3  343D               	retlw	61
  2876     08B4  3407               	retlw	7
  2877     08B5  3426               	retlw	38
  2878     08B6  3437               	retlw	55
  2879     08B7  343D               	retlw	61
  2880     08B8  346D               	retlw	109
  2881     08B9  346F               	retlw	111
  2882     08BA  3437               	retlw	55
  2883     08BB  343D               	retlw	61
  2884     08BC  34D4               	retlw	212
  2885     08BD  34B8               	retlw	184
  2886     08BE  3437               	retlw	55
  2887     08BF  343D               	retlw	61
  2888     08C0  343A               	retlw	58
  2889     08C1  3402               	retlw	2
  2890     08C2  3438               	retlw	56
  2891     08C3  343D               	retlw	61
  2892     08C4  34A1               	retlw	161
  2893     08C5  344B               	retlw	75
  2894     08C6  3438               	retlw	56
  2895     08C7  343D               	retlw	61
  2896     08C8  3407               	retlw	7
  2897     08C9  3495               	retlw	149
  2898     08CA  3438               	retlw	56
  2899     08CB  343D               	retlw	61
  2900     08CC                     __end_of_lookupTable:
  2901                           
  2902                           	psect	nvBANK2
  2903     0132                     __pnvBANK2:
  2904     0132                     _TMR1_GateInterruptHandler:
  2905     0132                     	ds	2
  2906     0134                     _EUSART_ErrorHandler:
  2907     0134                     	ds	2
  2908     0136                     _EUSART_OverrunErrorHandler:
  2909     0136                     	ds	2
  2910     0138                     _EUSART_FramingErrorHandler:
  2911     0138                     	ds	2
  2912     0019                     _T1GCONbits	set	25
  2913     0018                     _T1CONbits	set	24
  2914     0018                     _T1CON	set	24
  2915     0016                     _TMR1L	set	22
  2916     0017                     _TMR1H	set	23
  2917     0019                     _T1GCON	set	25
  2918     0015                     _TMR0	set	21
  2919     0013                     _PIR3bits	set	19
  2920     001C                     _T2CONbits	set	28
  2921     001C                     _T2CON	set	28
  2922     0011                     _PIR1bits	set	17
  2923     001A                     _TMR2	set	26
  2924     001B                     _PR2	set	27
  2925     000B                     _INTCONbits	set	11
  2926     009D                     _ADCON0bits	set	157
  2927     009D                     _ADCON0	set	157
  2928     009C                     _ADRESH	set	156
  2929     009B                     _ADRESL	set	155
  2930     009E                     _ADCON1	set	158
  2931     0095                     _OPTION_REG	set	149
  2932     0091                     _PIE1bits	set	145
  2933     0095                     _OPTION_REGbits	set	149
  2934     008D                     _TRISB	set	141
  2935     008C                     _TRISA	set	140
  2936     0097                     _WDTCON	set	151
  2937     0098                     _OSCTUNE	set	152
  2938     0099                     _OSCCON	set	153
  2939     010C                     _LATAbits	set	268
  2940     0115                     _CMOUTbits	set	277
  2941     0112                     _CM1CON1	set	274
  2942     0111                     _CM1CON0	set	273
  2943     0119                     _DACCON1	set	281
  2944     0118                     _DACCON0	set	280
  2945     0117                     _FVRCONbits	set	279
  2946     0117                     _FVRCON	set	279
  2947     011E                     _APFCON1	set	286
  2948     011D                     _APFCON0	set	285
  2949     010D                     _LATB	set	269
  2950     010C                     _LATA	set	268
  2951     0116                     _BORCON	set	278
  2952     019A                     _TXREG	set	410
  2953     0199                     _RCREG	set	409
  2954     019D                     _RCSTAbits	set	413
  2955     019E                     _TXSTAbits	set	414
  2956     019C                     _SPBRGH	set	412
  2957     019B                     _SPBRGL	set	411
  2958     019E                     _TXSTA	set	414
  2959     019D                     _RCSTA	set	413
  2960     019F                     _BAUDCON	set	415
  2961     018C                     _ANSELA	set	396
  2962     018D                     _ANSELB	set	397
  2963     020C                     _WPUA	set	524
  2964     020D                     _WPUB	set	525
  2965     029E                     _CCPTMRS0bits	set	670
  2966     0291                     _CCPR1L	set	657
  2967     0292                     _CCPR1H	set	658
  2968     0296                     _PSTR1CON	set	662
  2969     0294                     _PWM1CON	set	660
  2970     0295                     _ECCP1AS	set	661
  2971     0293                     _CCP1CON	set	659
  2972     041E                     _T6CONbits	set	1054
  2973     041E                     _T6CON	set	1054
  2974     041C                     _TMR6	set	1052
  2975     041D                     _PR6	set	1053
  2976     0417                     _T4CONbits	set	1047
  2977     0417                     _T4CON	set	1047
  2978     0415                     _TMR4	set	1045
  2979     0416                     _PR4	set	1046
  2980                           
  2981                           	psect	cinit
  2982     0029                     start_initialization:	
  2983                           ; #config settings
  2984                           
  2985     0029                     __initialization:
  2986                           
  2987                           ; Initialize objects allocated to BANK0
  2988     0029  302F               	movlw	low __pidataBANK0
  2989     002A  0084               	movwf	4
  2990     002B  3080               	movlw	(high __pidataBANK0)| (0+128)
  2991     002C  0085               	movwf	5
  2992     002D  306B               	movlw	low __pdataBANK0
  2993     002E  0086               	movwf	6
  2994     002F  3000               	movlw	high __pdataBANK0
  2995     0030  0087               	movwf	7
  2996     0031  3005               	movlw	5
  2997     0032  3188  20D8  3180   	fcall	init_ram
  2998                           
  2999                           ; Initialize objects allocated to BANK2
  3000     0035  308A               	movlw	low __pidataBANK2
  3001     0036  0084               	movwf	4
  3002     0037  3089               	movlw	(high __pidataBANK2)| (0+128)
  3003     0038  0085               	movwf	5
  3004     0039  3020               	movlw	low __pdataBANK2
  3005     003A  0086               	movwf	6
  3006     003B  3001               	movlw	high __pdataBANK2
  3007     003C  0087               	movwf	7
  3008     003D  3012               	movlw	18
  3009     003E  3188  20D8  3180   	fcall	init_ram
  3010                           
  3011                           ; Clear objects allocated to COMMON
  3012     0041  01FD               	clrf	__pbssCOMMON& (0+127)
  3013                           
  3014                           ; Clear objects allocated to BANK0
  3015     0042  304A               	movlw	low __pbssBANK0
  3016     0043  0084               	movwf	4
  3017     0044  3000               	movlw	high __pbssBANK0
  3018     0045  0085               	movwf	5
  3019     0046  3021               	movlw	33
  3020     0047  3188  20D2  3180   	fcall	clear_ram0
  3021                           
  3022                           ; Clear objects allocated to BANK1
  3023     004A  30CE               	movlw	low __pbssBANK1
  3024     004B  0084               	movwf	4
  3025     004C  3000               	movlw	high __pbssBANK1
  3026     004D  0085               	movwf	5
  3027     004E  3021               	movlw	33
  3028     004F  3188  20D2  3180   	fcall	clear_ram0
  3029                           
  3030                           ; Clear objects allocated to BANK2
  3031     0052  303A               	movlw	low __pbssBANK2
  3032     0053  0084               	movwf	4
  3033     0054  3001               	movlw	high __pbssBANK2
  3034     0055  0085               	movwf	5
  3035     0056  3007               	movlw	7
  3036     0057  3188  20D2  3180   	fcall	clear_ram0
  3037     005A                     end_of_initialization:	
  3038                           ;End of C runtime variable initialization code
  3039                           
  3040     005A                     __end_of__initialization:
  3041     005A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3042     005B  0020               	movlb	0
  3043     005C  318F  2F54         	ljmp	_main	;jump to C main() function
  3044                           
  3045                           	psect	bssCOMMON
  3046     007D                     __pbssCOMMON:
  3047     007D                     _timer0ReloadVal:
  3048     007D                     	ds	1
  3049                           
  3050                           	psect	bssBANK0
  3051     004A                     __pbssBANK0:
  3052     004A                     _bufferRx:
  3053     004A                     	ds	8
  3054     0052                     _avg_tempo_voo:
  3055     0052                     	ds	4
  3056     0056                     _flux:
  3057     0056                     	ds	3
  3058     0059                     _ballset:
  3059     0059                     	ds	3
  3060     005C                     _balldist:
  3061     005C                     	ds	3
  3062     005F                     _errorp:
  3063     005F                     	ds	3
  3064     0062                     _sp_height:
  3065     0062                     	ds	2
  3066     0064                     _tempo_voo:
  3067     0064                     	ds	2
  3068     0066                     _ADC_InterruptHandler:
  3069     0066                     	ds	2
  3070     0068                     _func_mode:
  3071     0068                     	ds	1
  3072     0069                     _pas:
  3073     0069                     	ds	1
  3074     006A                     _sentido:
  3075     006A                     	ds	1
  3076                           
  3077                           	psect	dataBANK0
  3078     006B                     __pdataBANK0:
  3079     006B                     _float_temp:
  3080     006B                     	ds	4
  3081     006F                     _first_read:
  3082     006F                     	ds	1
  3083                           
  3084                           	psect	bssBANK1
  3085     00CE                     __pbssBANK1:
  3086     00CE                     _outpre:
  3087     00CE                     	ds	3
  3088     00D1                     _outputsum:
  3089     00D1                     	ds	3
  3090     00D4                     _error:
  3091     00D4                     	ds	3
  3092     00D7                     _dc:
  3093     00D7                     	ds	2
  3094     00D9                     _vRx:
  3095     00D9                     	ds	2
  3096     00DB                     _vTx:
  3097     00DB                     	ds	2
  3098     00DD                     _sp_position:
  3099     00DD                     	ds	2
  3100     00DF                     _position:
  3101     00DF                     	ds	2
  3102     00E1                     _height:
  3103     00E1                     	ds	2
  3104     00E3                     _output:
  3105     00E3                     	ds	2
  3106     00E5                     _timer1ReloadVal:
  3107     00E5                     	ds	2
  3108     00E7                     _nao_salva:
  3109     00E7                     	ds	1
  3110     00E8                     _count_Tx:
  3111     00E8                     	ds	1
  3112     00E9                     _countRx:
  3113     00E9                     	ds	1
  3114     00EA                     _passo_ctrl:
  3115     00EA                     	ds	1
  3116     00EB                     _fim_curso:
  3117     00EB                     	ds	1
  3118     00EC                     _passo:
  3119     00EC                     	ds	1
  3120     00ED                     _controlchoice:
  3121     00ED                     	ds	1
  3122     00EE                     _eusartRxLastError:
  3123     00EE                     	ds	1
  3124                           
  3125                           	psect	bssBANK2
  3126     013A                     __pbssBANK2:
  3127     013A                     _dinput:
  3128     013A                     	ds	3
  3129     013D                     _adc_temp:
  3130     013D                     	ds	2
  3131     013F                     _avg_height:
  3132     013F                     	ds	2
  3133                           
  3134                           	psect	dataBANK2
  3135     0120                     __pdataBANK2:
  3136     0120                     _timecontrol:
  3137     0120                     	ds	3
  3138     0123                     _kdp:
  3139     0123                     	ds	3
  3140     0126                     _kip:
  3141     0126                     	ds	3
  3142     0129                     _kpp:
  3143     0129                     	ds	3
  3144     012C                     _kif:
  3145     012C                     	ds	3
  3146     012F                     _kpf:
  3147     012F                     	ds	3
  3148                           
  3149                           	psect	inittext
  3150     08D8                     init_ram:
  3151     08D8  00FE               	movwf	btemp
  3152     08D9                     initloop:
  3153     08D9  0012               	moviw fsr0++
  3154     08DA  001E               	movwi fsr1++
  3155     08DB  0BFE               	decfsz	btemp,f
  3156     08DC  28D9               	goto	initloop
  3157     08DD  3400               	retlw	0
  3158                           
  3159                           	psect	clrtext
  3160     08D2                     clear_ram0:	
  3161                           ;	Called with FSR0 containing the base address, and
  3162                           ;	WREG with the size to clear
  3163                           
  3164     08D2  0064               	clrwdt	;clear the watchdog before getting into this loop
  3165     08D3                     clrloop0:
  3166     08D3  0180               	clrf	0	;clear RAM location pointed to by FSR
  3167     08D4  3101               	addfsr 0,1
  3168     08D5  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3169     08D6  28D3               	goto	clrloop0	;have we reached the end yet?
  3170     08D7  3400               	retlw	0	;all done for this memory range, return
  3171                           
  3172                           	psect	cstackBANK1
  3173     00A0                     __pcstackBANK1:
  3174     00A0                     ??_PIN_MANAGER_Initialize:
  3175     00A0                     ??_OSCILLATOR_Initialize:	
  3176                           ; 1 bytes @ 0x0
  3177                           
  3178     00A0                     ??_WDT_Initialize:	
  3179                           ; 1 bytes @ 0x0
  3180                           
  3181     00A0                     ??_DAC_Initialize:	
  3182                           ; 1 bytes @ 0x0
  3183                           
  3184     00A0                     ??_FVR_Initialize:	
  3185                           ; 1 bytes @ 0x0
  3186                           
  3187     00A0                     ??_TMR4_Initialize:	
  3188                           ; 1 bytes @ 0x0
  3189                           
  3190     00A0                     ??_TMR2_Initialize:	
  3191                           ; 1 bytes @ 0x0
  3192                           
  3193     00A0                     ??_TMR0_Initialize:	
  3194                           ; 1 bytes @ 0x0
  3195                           
  3196     00A0                     ??_TMR6_Initialize:	
  3197                           ; 1 bytes @ 0x0
  3198                           
  3199     00A0                     ??_CMP1_Initialize:	
  3200                           ; 1 bytes @ 0x0
  3201                           
  3202     00A0                     ??_ADC_Initialize:	
  3203                           ; 1 bytes @ 0x0
  3204                           
  3205     00A0                     ??_EPWM1_Initialize:	
  3206                           ; 1 bytes @ 0x0
  3207                           
  3208     00A0                     ?_EUSART_SetFramingErrorHandler:	
  3209                           ; 1 bytes @ 0x0
  3210                           
  3211     00A0                     ?_EUSART_SetOverrunErrorHandler:	
  3212                           ; 1 bytes @ 0x0
  3213                           
  3214     00A0                     ?_EUSART_SetErrorHandler:	
  3215                           ; 1 bytes @ 0x0
  3216                           
  3217     00A0                     ?_TMR1_SetGateInterruptHandler:	
  3218                           ; 1 bytes @ 0x0
  3219                           
  3220     00A0                     ??_TMR4_StartTimer:	
  3221                           ; 1 bytes @ 0x0
  3222                           
  3223     00A0                     ??_TMR4_StopTimer:	
  3224                           ; 1 bytes @ 0x0
  3225                           
  3226     00A0                     ?_EPWM1_LoadDutyValue:	
  3227                           ; 1 bytes @ 0x0
  3228                           
  3229     00A0                     ??_EUSART_is_rx_ready:	
  3230                           ; 1 bytes @ 0x0
  3231                           
  3232     00A0                     ??_EUSART_Read:	
  3233                           ; 1 bytes @ 0x0
  3234                           
  3235     00A0                     ??_EUSART_Write:	
  3236                           ; 1 bytes @ 0x0
  3237                           
  3238     00A0                     ??_TMR0_ReadTimer:	
  3239                           ; 1 bytes @ 0x0
  3240                           
  3241     00A0                     ??_CMP1_GetOutputStatus:	
  3242                           ; 1 bytes @ 0x0
  3243                           
  3244     00A0                     ??_TMR6_WriteTimer:	
  3245                           ; 1 bytes @ 0x0
  3246                           
  3247     00A0                     ??_TMR6_LoadPeriodRegister:	
  3248                           ; 1 bytes @ 0x0
  3249                           
  3250     00A0                     ?_definePassoMotor:	
  3251                           ; 1 bytes @ 0x0
  3252                           
  3253     00A0                     ?__Umul8_16:	
  3254                           ; 1 bytes @ 0x0
  3255                           
  3256     00A0                     ?___tmul:	
  3257                           ; 2 bytes @ 0x0
  3258                           
  3259     00A0                     EUSART_Write@txData:	
  3260                           ; 3 bytes @ 0x0
  3261                           
  3262     00A0                     TMR0_ReadTimer@readVal:	
  3263                           ; 1 bytes @ 0x0
  3264                           
  3265     00A0                     TMR6_WriteTimer@timerVal:	
  3266                           ; 1 bytes @ 0x0
  3267                           
  3268     00A0                     TMR6_LoadPeriodRegister@periodVal:	
  3269                           ; 1 bytes @ 0x0
  3270                           
  3271     00A0                     definePassoMotor@sentido:	
  3272                           ; 1 bytes @ 0x0
  3273                           
  3274     00A0                     __Umul8_16@multiplicand:	
  3275                           ; 1 bytes @ 0x0
  3276                           
  3277     00A0                     EPWM1_LoadDutyValue@dutyValue:	
  3278                           ; 1 bytes @ 0x0
  3279                           
  3280     00A0                     EUSART_SetFramingErrorHandler@interruptHandler:	
  3281                           ; 2 bytes @ 0x0
  3282                           
  3283     00A0                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  3284                           ; 2 bytes @ 0x0
  3285                           
  3286     00A0                     EUSART_SetErrorHandler@interruptHandler:	
  3287                           ; 2 bytes @ 0x0
  3288                           
  3289     00A0                     TMR1_SetGateInterruptHandler@InterruptHandler:	
  3290                           ; 2 bytes @ 0x0
  3291                           
  3292     00A0                     ___tmul@multiplier:	
  3293                           ; 2 bytes @ 0x0
  3294                           
  3295                           
  3296                           ; 3 bytes @ 0x0
  3297     00A0                     	ds	1
  3298     00A1                     ??_definePassoMotor:
  3299                           
  3300                           ; 1 bytes @ 0x1
  3301     00A1                     	ds	1
  3302     00A2                     ??_TMR1_Initialize:
  3303     00A2                     ??_EUSART_Initialize:	
  3304                           ; 1 bytes @ 0x2
  3305                           
  3306     00A2                     ??_EUSART_SetFramingErrorHandler:	
  3307                           ; 1 bytes @ 0x2
  3308                           
  3309     00A2                     ??_EUSART_SetOverrunErrorHandler:	
  3310                           ; 1 bytes @ 0x2
  3311                           
  3312     00A2                     ??_EUSART_SetErrorHandler:	
  3313                           ; 1 bytes @ 0x2
  3314                           
  3315     00A2                     ??_TMR1_SetGateInterruptHandler:	
  3316                           ; 1 bytes @ 0x2
  3317                           
  3318     00A2                     ??__Umul8_16:	
  3319                           ; 1 bytes @ 0x2
  3320                           
  3321     00A2                     ??_SYSTEM_Initialize:	
  3322                           ; 1 bytes @ 0x2
  3323                           
  3324     00A2                     ??_EPWM1_LoadDutyValue:	
  3325                           ; 1 bytes @ 0x2
  3326                           
  3327     00A2                     definePassoMotor@passom:	
  3328                           ; 1 bytes @ 0x2
  3329                           
  3330                           
  3331                           ; 1 bytes @ 0x2
  3332     00A2                     	ds	1
  3333     00A3                     ??_daUmPasso:
  3334     00A3                     daUmPasso@sentido:	
  3335                           ; 1 bytes @ 0x3
  3336                           
  3337     00A3                     ___tmul@multiplicand:	
  3338                           ; 1 bytes @ 0x3
  3339                           
  3340                           
  3341                           ; 3 bytes @ 0x3
  3342     00A3                     	ds	1
  3343     00A4                     ??_fluxpos:
  3344     00A4                     ??_setaPorta:	
  3345                           ; 1 bytes @ 0x4
  3346                           
  3347     00A4                     ??_analisa_Rx:	
  3348                           ; 1 bytes @ 0x4
  3349                           
  3350     00A4                     __Umul8_16@product:	
  3351                           ; 1 bytes @ 0x4
  3352                           
  3353                           
  3354                           ; 2 bytes @ 0x4
  3355     00A4                     	ds	2
  3356     00A6                     ??___tmul:
  3357     00A6                     __Umul8_16@word_mpld:	
  3358                           ; 1 bytes @ 0x6
  3359                           
  3360     00A6                     ___tmul@product:	
  3361                           ; 2 bytes @ 0x6
  3362                           
  3363                           
  3364                           ; 3 bytes @ 0x6
  3365     00A6                     	ds	2
  3366     00A8                     __Umul8_16@multiplier:
  3367                           
  3368                           ; 1 bytes @ 0x8
  3369     00A8                     	ds	1
  3370     00A9                     ?___atdiv:
  3371     00A9                     ?___flmul:	
  3372                           ; 3 bytes @ 0x9
  3373                           
  3374     00A9                     ___atdiv@divisor:	
  3375                           ; 4 bytes @ 0x9
  3376                           
  3377     00A9                     ___flmul@b:	
  3378                           ; 3 bytes @ 0x9
  3379                           
  3380                           
  3381                           ; 4 bytes @ 0x9
  3382     00A9                     	ds	3
  3383     00AC                     ___atdiv@dividend:
  3384                           
  3385                           ; 3 bytes @ 0xC
  3386     00AC                     	ds	1
  3387     00AD                     ___flmul@a:
  3388                           
  3389                           ; 4 bytes @ 0xD
  3390     00AD                     	ds	2
  3391     00AF                     ??___atdiv:
  3392                           
  3393                           ; 1 bytes @ 0xF
  3394     00AF                     	ds	1
  3395     00B0                     ___atdiv@counter:
  3396                           
  3397                           ; 1 bytes @ 0x10
  3398     00B0                     	ds	1
  3399     00B1                     ??___flmul:
  3400     00B1                     ___atdiv@sign:	
  3401                           ; 1 bytes @ 0x11
  3402                           
  3403                           
  3404                           ; 1 bytes @ 0x11
  3405     00B1                     	ds	1
  3406     00B2                     ___atdiv@quotient:
  3407                           
  3408                           ; 3 bytes @ 0x12
  3409     00B2                     	ds	3
  3410     00B5                     ??_fluxcontrol:
  3411     00B5                     ??_pwmcontrol:	
  3412                           ; 1 bytes @ 0x15
  3413                           
  3414                           
  3415                           ; 1 bytes @ 0x15
  3416     00B5                     	ds	1
  3417     00B6                     ___flmul@sign:
  3418                           
  3419                           ; 1 bytes @ 0x16
  3420     00B6                     	ds	1
  3421     00B7                     ___flmul@grs:
  3422                           
  3423                           ; 4 bytes @ 0x17
  3424     00B7                     	ds	4
  3425     00BB                     ___flmul@aexp:
  3426                           
  3427                           ; 1 bytes @ 0x1B
  3428     00BB                     	ds	1
  3429     00BC                     ___flmul@bexp:
  3430                           
  3431                           ; 1 bytes @ 0x1C
  3432     00BC                     	ds	1
  3433     00BD                     ___flmul@prod:
  3434                           
  3435                           ; 4 bytes @ 0x1D
  3436     00BD                     	ds	4
  3437     00C1                     ??_controlchoose:
  3438     00C1                     ___flmul@temp:	
  3439                           ; 1 bytes @ 0x21
  3440                           
  3441                           
  3442                           ; 2 bytes @ 0x21
  3443     00C1                     	ds	2
  3444     00C3                     ?___fltol:
  3445     00C3                     ___fltol@f1:	
  3446                           ; 4 bytes @ 0x23
  3447                           
  3448                           
  3449                           ; 4 bytes @ 0x23
  3450     00C3                     	ds	4
  3451     00C7                     ??___fltol:
  3452                           
  3453                           ; 1 bytes @ 0x27
  3454     00C7                     	ds	4
  3455     00CB                     ___fltol@sign1:
  3456                           
  3457                           ; 1 bytes @ 0x2B
  3458     00CB                     	ds	1
  3459     00CC                     ___fltol@exp1:
  3460                           
  3461                           ; 1 bytes @ 0x2C
  3462     00CC                     	ds	1
  3463     00CD                     ??_envia_Tx:
  3464     00CD                     ??_main:	
  3465                           ; 1 bytes @ 0x2D
  3466                           
  3467                           
  3468                           ; 1 bytes @ 0x2D
  3469     00CD                     	ds	1
  3470                           
  3471                           	psect	cstackCOMMON
  3472     0070                     __pcstackCOMMON:
  3473     0070                     ?_PIN_MANAGER_Initialize:
  3474     0070                     ?_OSCILLATOR_Initialize:	
  3475                           ; 1 bytes @ 0x0
  3476                           
  3477     0070                     ?_WDT_Initialize:	
  3478                           ; 1 bytes @ 0x0
  3479                           
  3480     0070                     ?_DAC_Initialize:	
  3481                           ; 1 bytes @ 0x0
  3482                           
  3483     0070                     ?_FVR_Initialize:	
  3484                           ; 1 bytes @ 0x0
  3485                           
  3486     0070                     ?_TMR4_Initialize:	
  3487                           ; 1 bytes @ 0x0
  3488                           
  3489     0070                     ?_TMR2_Initialize:	
  3490                           ; 1 bytes @ 0x0
  3491                           
  3492     0070                     ?_TMR0_Initialize:	
  3493                           ; 1 bytes @ 0x0
  3494                           
  3495     0070                     ?_TMR6_Initialize:	
  3496                           ; 1 bytes @ 0x0
  3497                           
  3498     0070                     ?_CMP1_Initialize:	
  3499                           ; 1 bytes @ 0x0
  3500                           
  3501     0070                     ?_ADC_Initialize:	
  3502                           ; 1 bytes @ 0x0
  3503                           
  3504     0070                     ?_EPWM1_Initialize:	
  3505                           ; 1 bytes @ 0x0
  3506                           
  3507     0070                     ?_TMR1_Initialize:	
  3508                           ; 1 bytes @ 0x0
  3509                           
  3510     0070                     ?_EUSART_Initialize:	
  3511                           ; 1 bytes @ 0x0
  3512                           
  3513     0070                     ?_TMR1_GATE_ISR:	
  3514                           ; 1 bytes @ 0x0
  3515                           
  3516     0070                     ?_TMR1_DefaultGateInterruptHandler:	
  3517                           ; 1 bytes @ 0x0
  3518                           
  3519     0070                     ??_TMR1_DefaultGateInterruptHandler:	
  3520                           ; 1 bytes @ 0x0
  3521                           
  3522     0070                     ?_daUmPasso:	
  3523                           ; 1 bytes @ 0x0
  3524                           
  3525     0070                     ?_SYSTEM_Initialize:	
  3526                           ; 1 bytes @ 0x0
  3527                           
  3528     0070                     ?_PIN_MANAGER_IOC:	
  3529                           ; 1 bytes @ 0x0
  3530                           
  3531     0070                     ??_PIN_MANAGER_IOC:	
  3532                           ; 1 bytes @ 0x0
  3533                           
  3534     0070                     ?_TMR4_StartTimer:	
  3535                           ; 1 bytes @ 0x0
  3536                           
  3537     0070                     ?_TMR4_StopTimer:	
  3538                           ; 1 bytes @ 0x0
  3539                           
  3540     0070                     ?_INTERRUPT_InterruptManager:	
  3541                           ; 1 bytes @ 0x0
  3542                           
  3543     0070                     ?_EUSART_is_rx_ready:	
  3544                           ; 1 bytes @ 0x0
  3545                           
  3546     0070                     ?_EUSART_Read:	
  3547                           ; 1 bytes @ 0x0
  3548                           
  3549     0070                     ?_EUSART_Write:	
  3550                           ; 1 bytes @ 0x0
  3551                           
  3552     0070                     ?_TMR0_ReadTimer:	
  3553                           ; 1 bytes @ 0x0
  3554                           
  3555     0070                     ?_CMP1_GetOutputStatus:	
  3556                           ; 1 bytes @ 0x0
  3557                           
  3558     0070                     ?_TMR6_WriteTimer:	
  3559                           ; 1 bytes @ 0x0
  3560                           
  3561     0070                     ?_TMR6_LoadPeriodRegister:	
  3562                           ; 1 bytes @ 0x0
  3563                           
  3564     0070                     ?_TMR1_WriteTimer:	
  3565                           ; 1 bytes @ 0x0
  3566                           
  3567     0070                     ?_TMR1_Reload:	
  3568                           ; 1 bytes @ 0x0
  3569                           
  3570     0070                     ?_fluxcontrol:	
  3571                           ; 1 bytes @ 0x0
  3572                           
  3573     0070                     ?_pwmcontrol:	
  3574                           ; 1 bytes @ 0x0
  3575                           
  3576     0070                     ?_fluxpos:	
  3577                           ; 1 bytes @ 0x0
  3578                           
  3579     0070                     ?_setaPorta:	
  3580                           ; 1 bytes @ 0x0
  3581                           
  3582     0070                     ?_controlchoose:	
  3583                           ; 1 bytes @ 0x0
  3584                           
  3585     0070                     ?_analisa_Rx:	
  3586                           ; 1 bytes @ 0x0
  3587                           
  3588     0070                     ?_envia_Tx:	
  3589                           ; 1 bytes @ 0x0
  3590                           
  3591     0070                     ?_mede_height:	
  3592                           ; 1 bytes @ 0x0
  3593                           
  3594     0070                     ?_main:	
  3595                           ; 1 bytes @ 0x0
  3596                           
  3597     0070                     ?_TMR1_ReadTimer:	
  3598                           ; 1 bytes @ 0x0
  3599                           
  3600     0070                     ?i1__Umul8_16:	
  3601                           ; 2 bytes @ 0x0
  3602                           
  3603     0070                     i1__Umul8_16@multiplicand:	
  3604                           ; 2 bytes @ 0x0
  3605                           
  3606     0070                     TMR1_WriteTimer@timerVal:	
  3607                           ; 1 bytes @ 0x0
  3608                           
  3609                           
  3610                           ; 2 bytes @ 0x0
  3611     0070                     	ds	2
  3612     0072                     ??_TMR1_ReadTimer:
  3613     0072                     ??_TMR1_WriteTimer:	
  3614                           ; 1 bytes @ 0x2
  3615                           
  3616     0072                     ??_TMR1_Reload:	
  3617                           ; 1 bytes @ 0x2
  3618                           
  3619     0072                     ??i1__Umul8_16:	
  3620                           ; 1 bytes @ 0x2
  3621                           
  3622                           
  3623                           ; 1 bytes @ 0x2
  3624     0072                     	ds	2
  3625     0074                     i1__Umul8_16@product:
  3626                           
  3627                           ; 2 bytes @ 0x4
  3628     0074                     	ds	2
  3629     0076                     i1__Umul8_16@word_mpld:
  3630                           
  3631                           ; 2 bytes @ 0x6
  3632     0076                     	ds	1
  3633     0077                     TMR1_ReadTimer@readVal:
  3634                           
  3635                           ; 2 bytes @ 0x7
  3636     0077                     	ds	1
  3637     0078                     i1__Umul8_16@multiplier:
  3638                           
  3639                           ; 1 bytes @ 0x8
  3640     0078                     	ds	1
  3641     0079                     ?i1___fltol:
  3642     0079                     TMR1_ReadTimer@readValHigh:	
  3643                           ; 4 bytes @ 0x9
  3644                           
  3645     0079                     i1___fltol@f1:	
  3646                           ; 1 bytes @ 0x9
  3647                           
  3648                           
  3649                           ; 4 bytes @ 0x9
  3650     0079                     	ds	1
  3651     007A                     TMR1_ReadTimer@readValLow:
  3652                           
  3653                           ; 1 bytes @ 0xA
  3654     007A                     	ds	3
  3655     007D                     ??_TMR1_GATE_ISR:
  3656     007D                     ??_INTERRUPT_InterruptManager:	
  3657                           ; 1 bytes @ 0xD
  3658                           
  3659                           
  3660                           	psect	cstackBANK0
  3661     0020                     __pcstackBANK0:	
  3662                           ; 1 bytes @ 0xD
  3663                           
  3664     0020                     ??i1___fltol:
  3665                           
  3666                           ; 1 bytes @ 0x0
  3667     0020                     	ds	4
  3668     0024                     i1___fltol@sign1:
  3669                           
  3670                           ; 1 bytes @ 0x4
  3671     0024                     	ds	1
  3672     0025                     i1___fltol@exp1:
  3673                           
  3674                           ; 1 bytes @ 0x5
  3675     0025                     	ds	1
  3676     0026                     ?___xxtofl:
  3677     0026                     ?i1___flmul:	
  3678                           ; 4 bytes @ 0x6
  3679                           
  3680     0026                     ___xxtofl@val:	
  3681                           ; 4 bytes @ 0x6
  3682                           
  3683     0026                     i1___flmul@b:	
  3684                           ; 4 bytes @ 0x6
  3685                           
  3686                           
  3687                           ; 4 bytes @ 0x6
  3688     0026                     	ds	4
  3689     002A                     ??___xxtofl:
  3690     002A                     i1___flmul@a:	
  3691                           ; 1 bytes @ 0xA
  3692                           
  3693                           
  3694                           ; 4 bytes @ 0xA
  3695     002A                     	ds	4
  3696     002E                     ??i1___flmul:
  3697     002E                     ___xxtofl@sign:	
  3698                           ; 1 bytes @ 0xE
  3699                           
  3700                           
  3701                           ; 1 bytes @ 0xE
  3702     002E                     	ds	1
  3703     002F                     ___xxtofl@exp:
  3704                           
  3705                           ; 1 bytes @ 0xF
  3706     002F                     	ds	1
  3707     0030                     ___xxtofl@arg:
  3708                           
  3709                           ; 4 bytes @ 0x10
  3710     0030                     	ds	3
  3711     0033                     i1___flmul@sign:
  3712                           
  3713                           ; 1 bytes @ 0x13
  3714     0033                     	ds	1
  3715     0034                     i1___flmul@grs:
  3716                           
  3717                           ; 4 bytes @ 0x14
  3718     0034                     	ds	4
  3719     0038                     i1___flmul@aexp:
  3720                           
  3721                           ; 1 bytes @ 0x18
  3722     0038                     	ds	1
  3723     0039                     i1___flmul@bexp:
  3724                           
  3725                           ; 1 bytes @ 0x19
  3726     0039                     	ds	1
  3727     003A                     i1___flmul@prod:
  3728                           
  3729                           ; 4 bytes @ 0x1A
  3730     003A                     	ds	4
  3731     003E                     i1___flmul@temp:
  3732                           
  3733                           ; 2 bytes @ 0x1E
  3734     003E                     	ds	2
  3735     0040                     ??_mede_height:
  3736                           
  3737                           ; 1 bytes @ 0x20
  3738     0040                     	ds	6
  3739     0046                     _mede_height$1957:
  3740                           
  3741                           ; 4 bytes @ 0x26
  3742     0046                     	ds	4
  3743                           
  3744                           	psect	maintext
  3745     0F54                     __pmaintext:	
  3746 ;;
  3747 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  3748 ;;
  3749 ;; *************** function _main *****************
  3750 ;; Defined at:
  3751 ;;		line 296 in file "main.c"
  3752 ;; Parameters:    Size  Location     Type
  3753 ;;		None
  3754 ;; Auto vars:     Size  Location     Type
  3755 ;;		None
  3756 ;; Return value:  Size  Location     Type
  3757 ;;                  1    wreg      void 
  3758 ;; Registers used:
  3759 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3760 ;; Tracked objects:
  3761 ;;		On entry : B1F/0
  3762 ;;		On exit  : 0/0
  3763 ;;		Unchanged: 0/0
  3764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3765 ;;      Params:         0       0       0       0       0       0
  3766 ;;      Locals:         0       0       0       0       0       0
  3767 ;;      Temps:          0       0       1       0       0       0
  3768 ;;      Totals:         0       0       1       0       0       0
  3769 ;;Total ram usage:        1 bytes
  3770 ;; Hardware stack levels required when called: 8
  3771 ;; This function calls:
  3772 ;;		_EUSART_Read
  3773 ;;		_EUSART_is_rx_ready
  3774 ;;		_SYSTEM_Initialize
  3775 ;;		_TMR0_ReadTimer
  3776 ;;		_TMR1_SetGateInterruptHandler
  3777 ;;		_TMR4_StopTimer
  3778 ;;		_TMR6_LoadPeriodRegister
  3779 ;;		_TMR6_WriteTimer
  3780 ;;		_analisa_Rx
  3781 ;;		_controlchoose
  3782 ;;		_envia_Tx
  3783 ;;		_fluxpos
  3784 ;;		_setaPorta
  3785 ;; This function is called by:
  3786 ;;		Startup code after reset
  3787 ;; This function uses a non-reentrant model
  3788 ;;
  3789                           
  3790     0F54                     _main:	
  3791                           ;psect for function _main
  3792                           
  3793     0F54                     l3408:	
  3794                           ;incstack = 0
  3795                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3796                           
  3797                           
  3798                           ;main.c: 299:     SYSTEM_Initialize();
  3799     0F54  318A  22CB  318F   	fcall	_SYSTEM_Initialize
  3800                           
  3801                           ;main.c: 300:     TMR1_SetGateInterruptHandler(mede_height);
  3802     0F57  30A8               	movlw	low _mede_height
  3803     0F58  0021               	movlb	1	; select bank1
  3804     0F59  00A0               	movwf	TMR1_SetGateInterruptHandler@InterruptHandler^(0+128)
  3805     0F5A  300E               	movlw	high _mede_height
  3806     0F5B  00A1               	movwf	(TMR1_SetGateInterruptHandler@InterruptHandler^(0+128)+1)
  3807     0F5C  3189  2119  318F   	fcall	_TMR1_SetGateInterruptHandler
  3808     0F5F                     l3410:
  3809                           
  3810                           ;main.c: 305:     (INTCONbits.GIE = 1);
  3811     0F5F  178B               	bsf	11,7	;volatile
  3812     0F60                     l3412:
  3813                           
  3814                           ;main.c: 308:     (INTCONbits.PEIE = 1);
  3815     0F60  170B               	bsf	11,6	;volatile
  3816     0F61                     l3414:
  3817                           
  3818                           ;main.c: 315:     setaPorta();
  3819     0F61  318A  221B  318F   	fcall	_setaPorta
  3820     0F64                     l3416:
  3821                           
  3822                           ;main.c: 318:     {;main.c: 321:         if(PIR3bits.TMR4IF==1){
  3823     0F64  0020               	movlb	0	; select bank0
  3824     0F65  1C93               	btfss	19,1	;volatile
  3825     0F66  2F68               	goto	u3181
  3826     0F67  2F69               	goto	u3180
  3827     0F68                     u3181:
  3828     0F68  2F70               	goto	l3424
  3829     0F69                     u3180:
  3830     0F69                     l3418:
  3831                           
  3832                           ;main.c: 322:             PIR3bits.TMR4IF=0;
  3833     0F69  1093               	bcf	19,1	;volatile
  3834     0F6A                     l3420:
  3835                           
  3836                           ;main.c: 323:             TMR4_StopTimer();
  3837     0F6A  3180  201F  318F   	fcall	_TMR4_StopTimer
  3838     0F6D                     l3422:
  3839                           
  3840                           ;main.c: 324:             controlchoose();
  3841     0F6D  3189  21B3  318F   	fcall	_controlchoose
  3842     0F70                     l3424:
  3843                           
  3844                           ;main.c: 332:         if (EUSART_is_rx_ready()){
  3845     0F70  3180  2000  318F   	fcall	_EUSART_is_rx_ready
  3846     0F73  3A00               	xorlw	0
  3847     0F74  1903               	skipnz
  3848     0F75  2F77               	goto	u3191
  3849     0F76  2F78               	goto	u3190
  3850     0F77                     u3191:
  3851     0F77  2FBE               	goto	l3456
  3852     0F78                     u3190:
  3853     0F78                     l3426:
  3854                           
  3855                           ;main.c: 333:             TMR6_LoadPeriodRegister(0xF9);
  3856     0F78  30F9               	movlw	249
  3857     0F79  3180  2022  318F   	fcall	_TMR6_LoadPeriodRegister
  3858                           
  3859                           ;main.c: 334:             while(countRx<8 -1){
  3860     0F7C  2FAA               	goto	l3446
  3861     0F7D                     l3428:
  3862                           
  3863                           ;main.c: 335:                 nao_salva = 0;
  3864     0F7D  01E7               	clrf	_nao_salva^(0+128)
  3865     0F7E                     l3430:
  3866                           
  3867                           ;main.c: 336:                 TMR6_WriteTimer(0);
  3868     0F7E  3000               	movlw	0
  3869     0F7F  3188  20CC  318F   	fcall	_TMR6_WriteTimer
  3870     0F82                     l3432:
  3871                           
  3872                           ;main.c: 337:                 PIR3bits.TMR6IF = 0;
  3873     0F82  0020               	movlb	0	; select bank0
  3874     0F83  1193               	bcf	19,3	;volatile
  3875                           
  3876                           ;main.c: 338:                 while(!EUSART_is_rx_ready()){
  3877     0F84  2F8E               	goto	l3436
  3878     0F85                     l751:
  3879                           
  3880                           ;main.c: 339:                     if(PIR3bits.TMR6IF){
  3881     0F85  0020               	movlb	0	; select bank0
  3882     0F86  1D93               	btfss	19,3	;volatile
  3883     0F87  2F89               	goto	u3201
  3884     0F88  2F8A               	goto	u3200
  3885     0F89                     u3201:
  3886     0F89  2F8E               	goto	l3436
  3887     0F8A                     u3200:
  3888     0F8A                     l3434:
  3889                           
  3890                           ;main.c: 340:                         nao_salva = 1;
  3891     0F8A  0021               	movlb	1	; select bank1
  3892     0F8B  01E7               	clrf	_nao_salva^(0+128)
  3893     0F8C  0AE7               	incf	_nao_salva^(0+128),f
  3894                           
  3895                           ;main.c: 341:                         break;
  3896     0F8D  2F96               	goto	l3438
  3897     0F8E                     l3436:
  3898                           
  3899                           ;main.c: 338:                 while(!EUSART_is_rx_ready()){
  3900     0F8E  3180  2000  318F   	fcall	_EUSART_is_rx_ready
  3901     0F91  3A00               	xorlw	0
  3902     0F92  1903               	skipnz
  3903     0F93  2F95               	goto	u3211
  3904     0F94  2F96               	goto	u3210
  3905     0F95                     u3211:
  3906     0F95  2F85               	goto	l751
  3907     0F96                     u3210:
  3908     0F96                     l3438:
  3909                           
  3910                           ;main.c: 344:                 if(nao_salva == 1){
  3911     0F96  0021               	movlb	1	; select bank1
  3912     0F97  0367               	decf	_nao_salva^(0+128),w
  3913     0F98  1D03               	btfss	3,2
  3914     0F99  2F9B               	goto	u3221
  3915     0F9A  2F9C               	goto	u3220
  3916     0F9B                     u3221:
  3917     0F9B  2F9D               	goto	l3442
  3918     0F9C                     u3220:
  3919     0F9C  2FB1               	goto	l3448
  3920     0F9D                     l3442:
  3921                           
  3922                           ;main.c: 347:                 bufferRx[countRx] = EUSART_Read();
  3923     0F9D  0869               	movf	_countRx^(0+128),w
  3924     0F9E  3E4A               	addlw	(low (_bufferRx| 0))& (0+255)
  3925     0F9F  0086               	movwf	6
  3926     0FA0  0187               	clrf	7
  3927     0FA1  3189  2169  318F   	fcall	_EUSART_Read
  3928     0FA4  0081               	movwf	1
  3929     0FA5                     l3444:
  3930                           
  3931                           ;main.c: 348:                 countRx++;
  3932     0FA5  3001               	movlw	1
  3933     0FA6  0021               	movlb	1	; select bank1
  3934     0FA7  00CD               	movwf	??_main^(0+128)
  3935     0FA8  084D               	movf	??_main^(0+128),w
  3936     0FA9  07E9               	addwf	_countRx^(0+128),f
  3937     0FAA                     l3446:
  3938                           
  3939                           ;main.c: 334:             while(countRx<8 -1){
  3940     0FAA  3007               	movlw	7
  3941     0FAB  0021               	movlb	1	; select bank1
  3942     0FAC  0269               	subwf	_countRx^(0+128),w
  3943     0FAD  1C03               	skipc
  3944     0FAE  2FB0               	goto	u3231
  3945     0FAF  2FB1               	goto	u3230
  3946     0FB0                     u3231:
  3947     0FB0  2F7D               	goto	l3428
  3948     0FB1                     u3230:
  3949     0FB1                     l3448:
  3950                           
  3951                           ;main.c: 350:             analisa_Rx();
  3952     0FB1  3187  2726  318F   	fcall	_analisa_Rx
  3953     0FB4                     l3450:
  3954                           
  3955                           ;main.c: 351:             TMR6_LoadPeriodRegister(0x4A);
  3956     0FB4  304A               	movlw	74
  3957     0FB5  3180  2022  318F   	fcall	_TMR6_LoadPeriodRegister
  3958     0FB8                     l3452:
  3959                           
  3960                           ;main.c: 352:             TMR6_WriteTimer(0);
  3961     0FB8  3000               	movlw	0
  3962     0FB9  3188  20CC  318F   	fcall	_TMR6_WriteTimer
  3963     0FBC                     l3454:
  3964                           
  3965                           ;main.c: 353:             PIR3bits.TMR6IF = 0;
  3966     0FBC  0020               	movlb	0	; select bank0
  3967     0FBD  1193               	bcf	19,3	;volatile
  3968     0FBE                     l3456:
  3969                           
  3970                           ;main.c: 355:         if(INTCONbits.TMR0IF == 1){
  3971     0FBE  1D0B               	btfss	11,2	;volatile
  3972     0FBF  2FC1               	goto	u3241
  3973     0FC0  2FC2               	goto	u3240
  3974     0FC1                     u3241:
  3975     0FC1  2FD7               	goto	l3472
  3976     0FC2                     u3240:
  3977     0FC2                     l3458:
  3978                           
  3979                           ;main.c: 356:             INTCONbits.TMR0IF = 0;
  3980     0FC2  110B               	bcf	11,2	;volatile
  3981     0FC3                     l3460:
  3982                           
  3983                           ;main.c: 357:             fluxpos();
  3984     0FC3  318C  24DF  318F   	fcall	_fluxpos
  3985     0FC6                     l3462:
  3986                           
  3987                           ;main.c: 358:             passo_ctrl = 0;
  3988     0FC6  0021               	movlb	1	; select bank1
  3989     0FC7  01EA               	clrf	_passo_ctrl^(0+128)
  3990     0FC8                     l3464:
  3991                           
  3992                           ;main.c: 359:             count_Tx ++;
  3993     0FC8  3001               	movlw	1
  3994     0FC9  00CD               	movwf	??_main^(0+128)
  3995     0FCA  084D               	movf	??_main^(0+128),w
  3996     0FCB  07E8               	addwf	_count_Tx^(0+128),f
  3997     0FCC                     l3466:
  3998                           
  3999                           ;main.c: 360:             if (count_Tx == 6){
  4000     0FCC  3006               	movlw	6
  4001     0FCD  0668               	xorwf	_count_Tx^(0+128),w
  4002     0FCE  1D03               	btfss	3,2
  4003     0FCF  2FD1               	goto	u3251
  4004     0FD0  2FD2               	goto	u3250
  4005     0FD1                     u3251:
  4006     0FD1  2FD7               	goto	l3472
  4007     0FD2                     u3250:
  4008     0FD2                     l3468:
  4009                           
  4010                           ;main.c: 361:                 envia_Tx ();
  4011     0FD2  318D  2558  318F   	fcall	_envia_Tx
  4012     0FD5                     l3470:
  4013                           
  4014                           ;main.c: 362:                 count_Tx = 0;
  4015     0FD5  0021               	movlb	1	; select bank1
  4016     0FD6  01E8               	clrf	_count_Tx^(0+128)
  4017     0FD7                     l3472:
  4018                           
  4019                           ;main.c: 365:         if(PIR3bits.TMR6IF == 1){
  4020     0FD7  0020               	movlb	0	; select bank0
  4021     0FD8  1D93               	btfss	19,3	;volatile
  4022     0FD9  2FDB               	goto	u3261
  4023     0FDA  2FDC               	goto	u3260
  4024     0FDB                     u3261:
  4025     0FDB  2FE8               	goto	l3484
  4026     0FDC                     u3260:
  4027     0FDC                     l3474:
  4028                           
  4029                           ;main.c: 366:             PIR3bits.TMR6IF = 0;
  4030     0FDC  1193               	bcf	19,3	;volatile
  4031     0FDD                     l3476:
  4032                           
  4033                           ;main.c: 367:             TMR6_WriteTimer(0);
  4034     0FDD  3000               	movlw	0
  4035     0FDE  3188  20CC  318F   	fcall	_TMR6_WriteTimer
  4036     0FE1                     l3478:
  4037     0FE1  0022               	movlb	2	; select bank2
  4038     0FE2  170C               	bsf	12,6	;volatile
  4039     0FE3                     l3480:
  4040                           
  4041                           ;main.c: 369:             _delay((unsigned long)((15)*(16000000/4000000.0)));
  4042     0FE3  3014               	movlw	20
  4043     0FE4                     u3297:
  4044     0FE4  0B89               	decfsz	9,f
  4045     0FE5  2FE4               	goto	u3297
  4046     0FE6                     l3482:
  4047     0FE6  0022               	movlb	2	; select bank2
  4048     0FE7  130C               	bcf	12,6	;volatile
  4049     0FE8                     l3484:
  4050                           
  4051                           ;main.c: 372:         if(TMR0_ReadTimer() >= 0x7F && passo_ctrl == 0){
  4052     0FE8  3180  2019  318F   	fcall	_TMR0_ReadTimer
  4053     0FEB  0021               	movlb	1	; select bank1
  4054     0FEC  00CD               	movwf	??_main^(0+128)
  4055     0FED  307F               	movlw	127
  4056     0FEE  024D               	subwf	??_main^(0+128),w
  4057     0FEF  1C03               	skipc
  4058     0FF0  2FF2               	goto	u3271
  4059     0FF1  2FF3               	goto	u3270
  4060     0FF2                     u3271:
  4061     0FF2  2F64               	goto	l3416
  4062     0FF3                     u3270:
  4063     0FF3                     l3486:
  4064     0FF3  086A               	movf	_passo_ctrl^(0+128),w
  4065     0FF4  1D03               	btfss	3,2
  4066     0FF5  2FF7               	goto	u3281
  4067     0FF6  2FF8               	goto	u3280
  4068     0FF7                     u3281:
  4069     0FF7  2F64               	goto	l3416
  4070     0FF8                     u3280:
  4071     0FF8                     l3488:
  4072                           
  4073                           ;main.c: 373:             passo_ctrl = 1;
  4074     0FF8  01EA               	clrf	_passo_ctrl^(0+128)
  4075     0FF9  0AEA               	incf	_passo_ctrl^(0+128),f
  4076     0FFA                     l3490:
  4077                           
  4078                           ;main.c: 374:             fluxpos();
  4079     0FFA  318C  24DF  318F   	fcall	_fluxpos
  4080     0FFD  2F64               	goto	l3416
  4081     0FFE  3180  2826         	ljmp	start
  4082     1000                     __end_of_main:
  4083                           
  4084                           	psect	text1
  4085     0A1B                     __ptext1:	
  4086 ;; *************** function _setaPorta *****************
  4087 ;; Defined at:
  4088 ;;		line 94 in file "main.c"
  4089 ;; Parameters:    Size  Location     Type
  4090 ;;		None
  4091 ;; Auto vars:     Size  Location     Type
  4092 ;;		None
  4093 ;; Return value:  Size  Location     Type
  4094 ;;                  1    wreg      void 
  4095 ;; Registers used:
  4096 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4097 ;; Tracked objects:
  4098 ;;		On entry : 0/0
  4099 ;;		On exit  : 0/0
  4100 ;;		Unchanged: 0/0
  4101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4102 ;;      Params:         0       0       0       0       0       0
  4103 ;;      Locals:         0       0       0       0       0       0
  4104 ;;      Temps:          0       0       1       0       0       0
  4105 ;;      Totals:         0       0       1       0       0       0
  4106 ;;Total ram usage:        1 bytes
  4107 ;; Hardware stack levels used: 1
  4108 ;; Hardware stack levels required when called: 7
  4109 ;; This function calls:
  4110 ;;		_CMP1_GetOutputStatus
  4111 ;;		_daUmPasso
  4112 ;; This function is called by:
  4113 ;;		_main
  4114 ;; This function uses a non-reentrant model
  4115 ;;
  4116                           
  4117     0A1B                     _setaPorta:	
  4118                           ;psect for function _setaPorta
  4119                           
  4120     0A1B                     l3280:	
  4121                           ;incstack = 0
  4122                           ; Regs used in _setaPorta: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4123                           
  4124                           
  4125                           ;main.c: 95:     while(!CMP1_GetOutputStatus()){
  4126     0A1B  2A29               	goto	l3286
  4127     0A1C                     l3282:
  4128                           
  4129                           ;main.c: 96:         daUmPasso(1);
  4130     0A1C  3001               	movlw	1
  4131     0A1D  318A  22A3  318A   	fcall	_daUmPasso
  4132     0A20                     l3284:
  4133                           
  4134                           ;main.c: 97:         _delay((unsigned long)((6)*(16000000/4000.0)));
  4135     0A20  3020               	movlw	32
  4136     0A21  0021               	movlb	1	; select bank1
  4137     0A22  00A4               	movwf	??_setaPorta^(0+128)
  4138     0A23  3029               	movlw	41
  4139     0A24                     u3307:
  4140     0A24  0B89               	decfsz	9,f
  4141     0A25  2A24               	goto	u3307
  4142     0A26  0BA4               	decfsz	??_setaPorta^(0+128),f
  4143     0A27  2A24               	goto	u3307
  4144     0A28  3200               	nop2
  4145     0A29                     l3286:
  4146                           
  4147                           ;main.c: 95:     while(!CMP1_GetOutputStatus()){
  4148     0A29  3180  202B  318A   	fcall	_CMP1_GetOutputStatus
  4149     0A2C  3A00               	xorlw	0
  4150     0A2D  1903               	skipnz
  4151     0A2E  2A30               	goto	u3051
  4152     0A2F  2A31               	goto	u3050
  4153     0A30                     u3051:
  4154     0A30  2A1C               	goto	l3282
  4155     0A31                     u3050:
  4156     0A31                     l619:
  4157                           
  4158                           ;main.c: 99:     fim_curso = 1;
  4159     0A31  0021               	movlb	1	; select bank1
  4160     0A32  01EB               	clrf	_fim_curso^(0+128)
  4161     0A33  0AEB               	incf	_fim_curso^(0+128),f
  4162     0A34                     l3288:
  4163                           
  4164                           ;main.c: 100:     position = 0;
  4165     0A34  01DF               	clrf	_position^(0+128)
  4166     0A35  01E0               	clrf	(_position+1)^(0+128)
  4167     0A36                     l620:
  4168     0A36  0008               	return
  4169     0A37                     __end_of_setaPorta:
  4170                           
  4171                           	psect	text2
  4172     002B                     __ptext2:	
  4173 ;; *************** function _CMP1_GetOutputStatus *****************
  4174 ;; Defined at:
  4175 ;;		line 69 in file "mcc_generated_files/cmp1.c"
  4176 ;; Parameters:    Size  Location     Type
  4177 ;;		None
  4178 ;; Auto vars:     Size  Location     Type
  4179 ;;		None
  4180 ;; Return value:  Size  Location     Type
  4181 ;;                  1    wreg      _Bool 
  4182 ;; Registers used:
  4183 ;;		wreg, status,2, status,0
  4184 ;; Tracked objects:
  4185 ;;		On entry : 0/0
  4186 ;;		On exit  : 0/0
  4187 ;;		Unchanged: 0/0
  4188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4189 ;;      Params:         0       0       0       0       0       0
  4190 ;;      Locals:         0       0       0       0       0       0
  4191 ;;      Temps:          0       0       0       0       0       0
  4192 ;;      Totals:         0       0       0       0       0       0
  4193 ;;Total ram usage:        0 bytes
  4194 ;; Hardware stack levels used: 1
  4195 ;; Hardware stack levels required when called: 5
  4196 ;; This function calls:
  4197 ;;		Nothing
  4198 ;; This function is called by:
  4199 ;;		_setaPorta
  4200 ;; This function uses a non-reentrant model
  4201 ;;
  4202                           
  4203     002B                     _CMP1_GetOutputStatus:	
  4204                           ;psect for function _CMP1_GetOutputStatus
  4205                           
  4206     002B                     l2958:	
  4207                           ;incstack = 0
  4208                           ; Regs used in _CMP1_GetOutputStatus: [wreg+status,2+status,0]
  4209                           
  4210                           
  4211                           ;mcc_generated_files/cmp1.c: 71:  return (CMOUTbits.MC1OUT);
  4212     002B  0022               	movlb	2	; select bank2
  4213     002C  0815               	movf	21,w	;volatile
  4214     002D  3901               	andlw	1
  4215     002E                     l364:
  4216     002E  0008               	return
  4217     002F                     __end_of_CMP1_GetOutputStatus:
  4218                           
  4219                           	psect	text3
  4220     0CDF                     __ptext3:	
  4221 ;; *************** function _fluxpos *****************
  4222 ;; Defined at:
  4223 ;;		line 82 in file "main.c"
  4224 ;; Parameters:    Size  Location     Type
  4225 ;;		None
  4226 ;; Auto vars:     Size  Location     Type
  4227 ;;		None
  4228 ;; Return value:  Size  Location     Type
  4229 ;;                  1    wreg      void 
  4230 ;; Registers used:
  4231 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4232 ;; Tracked objects:
  4233 ;;		On entry : 0/0
  4234 ;;		On exit  : 0/0
  4235 ;;		Unchanged: 0/0
  4236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4237 ;;      Params:         0       0       0       0       0       0
  4238 ;;      Locals:         0       0       0       0       0       0
  4239 ;;      Temps:          0       0       4       0       0       0
  4240 ;;      Totals:         0       0       4       0       0       0
  4241 ;;Total ram usage:        4 bytes
  4242 ;; Hardware stack levels used: 1
  4243 ;; Hardware stack levels required when called: 7
  4244 ;; This function calls:
  4245 ;;		_daUmPasso
  4246 ;; This function is called by:
  4247 ;;		_main
  4248 ;; This function uses a non-reentrant model
  4249 ;;
  4250                           
  4251     0CDF                     _fluxpos:	
  4252                           ;psect for function _fluxpos
  4253                           
  4254     0CDF                     l3260:	
  4255                           ;incstack = 0
  4256                           ; Regs used in _fluxpos: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4257                           
  4258                           
  4259                           ;main.c: 83:     if(controlchoice==2){
  4260     0CDF  3002               	movlw	2
  4261     0CE0  0021               	movlb	1	; select bank1
  4262     0CE1  066D               	xorwf	_controlchoice^(0+128),w
  4263     0CE2  1D03               	btfss	3,2
  4264     0CE3  2CE5               	goto	u3001
  4265     0CE4  2CE6               	goto	u3000
  4266     0CE5                     u3001:
  4267     0CE5  2D3A               	goto	l3272
  4268     0CE6                     u3000:
  4269     0CE6                     l3262:
  4270                           
  4271                           ;main.c: 84:         flux = output - position;
  4272     0CE6  085F               	movf	_position^(0+128),w
  4273     0CE7  0263               	subwf	_output^(0+128),w
  4274     0CE8  00A4               	movwf	??_fluxpos^(0+128)
  4275     0CE9  0860               	movf	(_position+1)^(0+128),w
  4276     0CEA  3B64               	subwfb	(_output+1)^(0+128),w
  4277     0CEB  00A5               	movwf	(??_fluxpos+1)^(0+128)
  4278     0CEC  0824               	movf	??_fluxpos^(0+128),w
  4279     0CED  0020               	movlb	0	; select bank0
  4280     0CEE  00D6               	movwf	_flux
  4281     0CEF  0021               	movlb	1	; select bank1
  4282     0CF0  0825               	movf	(??_fluxpos+1)^(0+128),w
  4283     0CF1  0020               	movlb	0	; select bank0
  4284     0CF2  00D7               	movwf	_flux+1
  4285     0CF3  01D8               	clrf	_flux+2
  4286     0CF4                     l3264:
  4287                           
  4288                           ;main.c: 85:         if(flux>position) daUmPasso(0);
  4289     0CF4  0021               	movlb	1	; select bank1
  4290     0CF5  085F               	movf	_position^(0+128),w
  4291     0CF6  00A4               	movwf	??_fluxpos^(0+128)
  4292     0CF7  0860               	movf	(_position+1)^(0+128),w
  4293     0CF8  00A5               	movwf	(??_fluxpos^(0+128)+1)
  4294     0CF9  01A6               	clrf	(??_fluxpos^(0+128)+2)
  4295     0CFA  0826               	movf	(??_fluxpos+2)^(0+128),w
  4296     0CFB  3A80               	xorlw	128
  4297     0CFC  00A7               	movwf	(??_fluxpos+3)^(0+128)
  4298     0CFD  0020               	movlb	0	; select bank0
  4299     0CFE  0858               	movf	_flux+2,w
  4300     0CFF  3A80               	xorlw	128
  4301     0D00  0021               	movlb	1	; select bank1
  4302     0D01  0227               	subwf	(??_fluxpos+3)^(0+128),w
  4303     0D02  1D03               	skipz
  4304     0D03  2D0E               	goto	u3013
  4305     0D04  0020               	movlb	0	; select bank0
  4306     0D05  0857               	movf	_flux+1,w
  4307     0D06  0021               	movlb	1	; select bank1
  4308     0D07  0225               	subwf	(??_fluxpos+1)^(0+128),w
  4309     0D08  1D03               	skipz
  4310     0D09  2D0E               	goto	u3013
  4311     0D0A  0020               	movlb	0	; select bank0
  4312     0D0B  0856               	movf	_flux,w
  4313     0D0C  0021               	movlb	1	; select bank1
  4314     0D0D  0224               	subwf	??_fluxpos^(0+128),w
  4315     0D0E                     u3013:
  4316     0D0E  1803               	skipnc
  4317     0D0F  2D11               	goto	u3011
  4318     0D10  2D12               	goto	u3010
  4319     0D11                     u3011:
  4320     0D11  2D17               	goto	l3268
  4321     0D12                     u3010:
  4322     0D12                     l3266:
  4323     0D12  3000               	movlw	0
  4324     0D13  318A  22A3  318C   	fcall	_daUmPasso
  4325     0D16  2D57               	goto	l614
  4326     0D17                     l3268:
  4327     0D17  085F               	movf	_position^(0+128),w
  4328     0D18  00A4               	movwf	??_fluxpos^(0+128)
  4329     0D19  0860               	movf	(_position+1)^(0+128),w
  4330     0D1A  00A5               	movwf	(??_fluxpos^(0+128)+1)
  4331     0D1B  01A6               	clrf	(??_fluxpos^(0+128)+2)
  4332     0D1C  0020               	movlb	0	; select bank0
  4333     0D1D  0858               	movf	_flux+2,w
  4334     0D1E  3A80               	xorlw	128
  4335     0D1F  0021               	movlb	1	; select bank1
  4336     0D20  00A7               	movwf	(??_fluxpos+3)^(0+128)
  4337     0D21  0826               	movf	(??_fluxpos+2)^(0+128),w
  4338     0D22  3A80               	xorlw	128
  4339     0D23  0227               	subwf	(??_fluxpos+3)^(0+128),w
  4340     0D24  0020               	movlb	0	; select bank0
  4341     0D25  1D03               	skipz
  4342     0D26  2D31               	goto	u3023
  4343     0D27  0021               	movlb	1	; select bank1
  4344     0D28  0825               	movf	(??_fluxpos+1)^(0+128),w
  4345     0D29  0020               	movlb	0	; select bank0
  4346     0D2A  0257               	subwf	_flux+1,w
  4347     0D2B  1D03               	skipz
  4348     0D2C  2D31               	goto	u3023
  4349     0D2D  0021               	movlb	1	; select bank1
  4350     0D2E  0824               	movf	??_fluxpos^(0+128),w
  4351     0D2F  0020               	movlb	0	; select bank0
  4352     0D30  0256               	subwf	_flux,w
  4353     0D31                     u3023:
  4354     0D31  1803               	skipnc
  4355     0D32  2D34               	goto	u3021
  4356     0D33  2D35               	goto	u3020
  4357     0D34                     u3021:
  4358     0D34  2D57               	goto	l614
  4359     0D35                     u3020:
  4360     0D35                     l3270:
  4361     0D35  3001               	movlw	1
  4362     0D36  318A  22A3  318C   	fcall	_daUmPasso
  4363     0D39  2D57               	goto	l614
  4364     0D3A                     l3272:
  4365                           
  4366                           ;main.c: 89:         if(sp_position>position) daUmPasso(0);
  4367     0D3A  085E               	movf	(_sp_position+1)^(0+128),w
  4368     0D3B  0260               	subwf	(_position+1)^(0+128),w
  4369     0D3C  1D03               	skipz
  4370     0D3D  2D40               	goto	u3035
  4371     0D3E  085D               	movf	_sp_position^(0+128),w
  4372     0D3F  025F               	subwf	_position^(0+128),w
  4373     0D40                     u3035:
  4374     0D40  1803               	skipnc
  4375     0D41  2D43               	goto	u3031
  4376     0D42  2D44               	goto	u3030
  4377     0D43                     u3031:
  4378     0D43  2D49               	goto	l3276
  4379     0D44                     u3030:
  4380     0D44                     l3274:
  4381     0D44  3000               	movlw	0
  4382     0D45  318A  22A3  318C   	fcall	_daUmPasso
  4383     0D48  2D57               	goto	l614
  4384     0D49                     l3276:
  4385     0D49  0860               	movf	(_position+1)^(0+128),w
  4386     0D4A  025E               	subwf	(_sp_position+1)^(0+128),w
  4387     0D4B  1D03               	skipz
  4388     0D4C  2D4F               	goto	u3045
  4389     0D4D  085F               	movf	_position^(0+128),w
  4390     0D4E  025D               	subwf	_sp_position^(0+128),w
  4391     0D4F                     u3045:
  4392     0D4F  1803               	skipnc
  4393     0D50  2D52               	goto	u3041
  4394     0D51  2D53               	goto	u3040
  4395     0D52                     u3041:
  4396     0D52  2D57               	goto	l614
  4397     0D53                     u3040:
  4398     0D53                     l3278:
  4399     0D53  3001               	movlw	1
  4400     0D54  318A  22A3  318C   	fcall	_daUmPasso
  4401     0D57                     l614:
  4402     0D57  0008               	return
  4403     0D58                     __end_of_fluxpos:
  4404                           
  4405                           	psect	text4
  4406     0AA3                     __ptext4:	
  4407 ;; *************** function _daUmPasso *****************
  4408 ;; Defined at:
  4409 ;;		line 262 in file "main.c"
  4410 ;; Parameters:    Size  Location     Type
  4411 ;;  sentido         1    wreg     unsigned char 
  4412 ;; Auto vars:     Size  Location     Type
  4413 ;;  sentido         1    3[BANK1 ] unsigned char 
  4414 ;; Return value:  Size  Location     Type
  4415 ;;                  1    wreg      void 
  4416 ;; Registers used:
  4417 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4418 ;; Tracked objects:
  4419 ;;		On entry : 0/0
  4420 ;;		On exit  : 0/0
  4421 ;;		Unchanged: 0/0
  4422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4423 ;;      Params:         0       0       0       0       0       0
  4424 ;;      Locals:         0       0       1       0       0       0
  4425 ;;      Temps:          0       0       0       0       0       0
  4426 ;;      Totals:         0       0       1       0       0       0
  4427 ;;Total ram usage:        1 bytes
  4428 ;; Hardware stack levels used: 1
  4429 ;; Hardware stack levels required when called: 6
  4430 ;; This function calls:
  4431 ;;		_definePassoMotor
  4432 ;; This function is called by:
  4433 ;;		_fluxpos
  4434 ;;		_setaPorta
  4435 ;; This function uses a non-reentrant model
  4436 ;;
  4437                           
  4438     0AA3                     _daUmPasso:	
  4439                           ;psect for function _daUmPasso
  4440                           
  4441                           
  4442                           ;incstack = 0
  4443                           ; Regs used in _daUmPasso: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4444                           ;daUmPasso@sentido stored from wreg
  4445     0AA3  0021               	movlb	1	; select bank1
  4446     0AA4  00A3               	movwf	daUmPasso@sentido^(0+128)
  4447     0AA5                     l3018:
  4448                           
  4449                           ;main.c: 264:     if (fim_curso) {
  4450     0AA5  086B               	movf	_fim_curso^(0+128),w
  4451     0AA6  1903               	btfsc	3,2
  4452     0AA7  2AA9               	goto	u2571
  4453     0AA8  2AAA               	goto	u2570
  4454     0AA9                     u2571:
  4455     0AA9  2AC4               	goto	l3030
  4456     0AAA                     u2570:
  4457     0AAA                     l3020:
  4458                           
  4459                           ;main.c: 266:         if(sentido == 1){
  4460     0AAA  0323               	decf	daUmPasso@sentido^(0+128),w
  4461     0AAB  1D03               	btfss	3,2
  4462     0AAC  2AAE               	goto	u2581
  4463     0AAD  2AAF               	goto	u2580
  4464     0AAE                     u2581:
  4465     0AAE  2AB4               	goto	l3024
  4466     0AAF                     u2580:
  4467     0AAF                     l3022:
  4468                           
  4469                           ;main.c: 267:             position--;
  4470     0AAF  3001               	movlw	1
  4471     0AB0  02DF               	subwf	_position^(0+128),f
  4472     0AB1  3000               	movlw	0
  4473     0AB2  3BE0               	subwfb	(_position+1)^(0+128),f
  4474                           
  4475                           ;main.c: 268:         }
  4476     0AB3  2ABD               	goto	l3028
  4477     0AB4                     l3024:
  4478     0AB4  0823               	movf	daUmPasso@sentido^(0+128),w
  4479     0AB5  1D03               	btfss	3,2
  4480     0AB6  2AB8               	goto	u2591
  4481     0AB7  2AB9               	goto	u2590
  4482     0AB8                     u2591:
  4483     0AB8  2ABD               	goto	l3028
  4484     0AB9                     u2590:
  4485     0AB9                     l3026:
  4486                           
  4487                           ;main.c: 270:             position++;
  4488     0AB9  3001               	movlw	1
  4489     0ABA  07DF               	addwf	_position^(0+128),f
  4490     0ABB  3000               	movlw	0
  4491     0ABC  3DE0               	addwfc	(_position+1)^(0+128),f
  4492     0ABD                     l3028:
  4493                           
  4494                           ;main.c: 272:         definePassoMotor(passo, sentido);
  4495     0ABD  0823               	movf	daUmPasso@sentido^(0+128),w
  4496     0ABE  00A0               	movwf	definePassoMotor@sentido^(0+128)
  4497     0ABF  086C               	movf	_passo^(0+128),w
  4498     0AC0  318B  2321  318A   	fcall	_definePassoMotor
  4499                           
  4500                           ;main.c: 273:     } else {
  4501     0AC3  2ACA               	goto	l735
  4502     0AC4                     l3030:
  4503                           
  4504                           ;main.c: 274:         definePassoMotor(passo, 1);
  4505     0AC4  01A0               	clrf	definePassoMotor@sentido^(0+128)
  4506     0AC5  0AA0               	incf	definePassoMotor@sentido^(0+128),f
  4507     0AC6  086C               	movf	_passo^(0+128),w
  4508     0AC7  318B  2321  318A   	fcall	_definePassoMotor
  4509     0ACA                     l735:
  4510     0ACA  0008               	return
  4511     0ACB                     __end_of_daUmPasso:
  4512                           
  4513                           	psect	text5
  4514     0B21                     __ptext5:	
  4515 ;; *************** function _definePassoMotor *****************
  4516 ;; Defined at:
  4517 ;;		line 200 in file "main.c"
  4518 ;; Parameters:    Size  Location     Type
  4519 ;;  passom          1    wreg     unsigned char 
  4520 ;;  sentido         1    0[BANK1 ] unsigned char 
  4521 ;; Auto vars:     Size  Location     Type
  4522 ;;  passom          1    2[BANK1 ] unsigned char 
  4523 ;; Return value:  Size  Location     Type
  4524 ;;                  1    wreg      void 
  4525 ;; Registers used:
  4526 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4527 ;; Tracked objects:
  4528 ;;		On entry : 0/0
  4529 ;;		On exit  : 0/0
  4530 ;;		Unchanged: 0/0
  4531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4532 ;;      Params:         0       0       1       0       0       0
  4533 ;;      Locals:         0       0       1       0       0       0
  4534 ;;      Temps:          0       0       1       0       0       0
  4535 ;;      Totals:         0       0       3       0       0       0
  4536 ;;Total ram usage:        3 bytes
  4537 ;; Hardware stack levels used: 1
  4538 ;; Hardware stack levels required when called: 5
  4539 ;; This function calls:
  4540 ;;		Nothing
  4541 ;; This function is called by:
  4542 ;;		_daUmPasso
  4543 ;; This function uses a non-reentrant model
  4544 ;;
  4545                           
  4546     0B21                     _definePassoMotor:	
  4547                           ;psect for function _definePassoMotor
  4548                           
  4549                           
  4550                           ;incstack = 0
  4551                           ; Regs used in _definePassoMotor: [wreg-fsr0h+status,2+status,0]
  4552                           ;definePassoMotor@passom stored from wreg
  4553     0B21  0021               	movlb	1	; select bank1
  4554     0B22  00A2               	movwf	definePassoMotor@passom^(0+128)
  4555     0B23                     l2538:
  4556                           
  4557                           ;main.c: 201:     if (sentido == 1) {
  4558     0B23  0320               	decf	definePassoMotor@sentido^(0+128),w
  4559     0B24  1D03               	btfss	3,2
  4560     0B25  2B27               	goto	u1731
  4561     0B26  2B28               	goto	u1730
  4562     0B27                     u1731:
  4563     0B27  2B4F               	goto	l2546
  4564     0B28                     u1730:
  4565     0B28  2B41               	goto	l2544
  4566     0B29                     l651:	
  4567                           ;main.c: 204:                 do { LATAbits.LATA1 = 1; } while(0);
  4568                           
  4569     0B29  0022               	movlb	2	; select bank2
  4570     0B2A  148C               	bsf	12,1	;volatile
  4571     0B2B                     l653:	
  4572                           ;main.c: 205:                 do { LATAbits.LATA2 = 1; } while(0);
  4573                           
  4574     0B2B  150C               	bsf	12,2	;volatile
  4575     0B2C                     l655:	
  4576                           ;main.c: 206:                 do { LATAbits.LATA3 = 0; } while(0);
  4577                           
  4578     0B2C  118C               	bcf	12,3	;volatile
  4579     0B2D                     l657:	
  4580                           ;main.c: 207:                 do { LATAbits.LATA4 = 0; } while(0);
  4581                           
  4582     0B2D  120C               	bcf	12,4	;volatile
  4583     0B2E  2B7B               	goto	l2554
  4584     0B2F                     l661:	
  4585                           ;main.c: 210:                 do { LATAbits.LATA1 = 0; } while(0);
  4586                           
  4587     0B2F  0022               	movlb	2	; select bank2
  4588     0B30  108C               	bcf	12,1	;volatile
  4589     0B31                     l663:	
  4590                           ;main.c: 211:                 do { LATAbits.LATA2 = 1; } while(0);
  4591                           
  4592     0B31  150C               	bsf	12,2	;volatile
  4593     0B32                     l665:	
  4594                           ;main.c: 212:                 do { LATAbits.LATA3 = 1; } while(0);
  4595                           
  4596     0B32  158C               	bsf	12,3	;volatile
  4597     0B33                     l667:	
  4598                           ;main.c: 213:                 do { LATAbits.LATA4 = 0; } while(0);
  4599                           
  4600     0B33  120C               	bcf	12,4	;volatile
  4601     0B34  2B7B               	goto	l2554
  4602     0B35                     l670:	
  4603                           ;main.c: 216:                 do { LATAbits.LATA1 = 0; } while(0);
  4604                           
  4605     0B35  0022               	movlb	2	; select bank2
  4606     0B36  108C               	bcf	12,1	;volatile
  4607     0B37                     l672:	
  4608                           ;main.c: 217:                 do { LATAbits.LATA2 = 0; } while(0);
  4609                           
  4610     0B37  110C               	bcf	12,2	;volatile
  4611     0B38                     l674:	
  4612                           ;main.c: 218:                 do { LATAbits.LATA3 = 1; } while(0);
  4613                           
  4614     0B38  158C               	bsf	12,3	;volatile
  4615     0B39                     l676:	
  4616                           ;main.c: 219:                 do { LATAbits.LATA4 = 1; } while(0);
  4617                           
  4618     0B39  160C               	bsf	12,4	;volatile
  4619     0B3A  2B7B               	goto	l2554
  4620     0B3B                     l679:	
  4621                           ;main.c: 222:                 do { LATAbits.LATA1 = 1; } while(0);
  4622                           
  4623     0B3B  0022               	movlb	2	; select bank2
  4624     0B3C  148C               	bsf	12,1	;volatile
  4625     0B3D                     l681:	
  4626                           ;main.c: 223:                 do { LATAbits.LATA2 = 0; } while(0);
  4627                           
  4628     0B3D  110C               	bcf	12,2	;volatile
  4629     0B3E                     l683:	
  4630                           ;main.c: 224:                 do { LATAbits.LATA3 = 0; } while(0);
  4631                           
  4632     0B3E  118C               	bcf	12,3	;volatile
  4633     0B3F                     l685:	
  4634                           ;main.c: 225:                 do { LATAbits.LATA4 = 1; } while(0);
  4635                           
  4636     0B3F  160C               	bsf	12,4	;volatile
  4637     0B40  2B7B               	goto	l2554
  4638     0B41                     l2544:
  4639     0B41  0822               	movf	definePassoMotor@passom^(0+128),w
  4640                           
  4641                           ; Switch size 1, requested type "simple"
  4642                           ; Number of cases is 4, Range of values is 0 to 3
  4643                           ; switch strategies available:
  4644                           ; Name         Instructions Cycles
  4645                           ; simple_byte           13     7 (average)
  4646                           ; direct_byte           14     6 (fixed)
  4647                           ; jumptable            260     6 (fixed)
  4648                           ;	Chosen strategy is simple_byte
  4649     0B42  3A00               	xorlw	0	; case 0
  4650     0B43  1903               	skipnz
  4651     0B44  2B29               	goto	l651
  4652     0B45  3A01               	xorlw	1	; case 1
  4653     0B46  1903               	skipnz
  4654     0B47  2B2F               	goto	l661
  4655     0B48  3A03               	xorlw	3	; case 2
  4656     0B49  1903               	skipnz
  4657     0B4A  2B35               	goto	l670
  4658     0B4B  3A01               	xorlw	1	; case 3
  4659     0B4C  1903               	skipnz
  4660     0B4D  2B3B               	goto	l679
  4661     0B4E  2B7B               	goto	l2554
  4662     0B4F                     l2546:
  4663     0B4F  0820               	movf	definePassoMotor@sentido^(0+128),w
  4664     0B50  1D03               	btfss	3,2
  4665     0B51  2B53               	goto	u1741
  4666     0B52  2B54               	goto	u1740
  4667     0B53                     u1741:
  4668     0B53  2B7B               	goto	l2554
  4669     0B54                     u1740:
  4670     0B54  2B6D               	goto	l2552
  4671     0B55                     l691:	
  4672                           ;main.c: 232:                 do { LATAbits.LATA4 = 1; } while(0);
  4673                           
  4674     0B55  0022               	movlb	2	; select bank2
  4675     0B56  160C               	bsf	12,4	;volatile
  4676     0B57                     l693:	
  4677                           ;main.c: 233:                 do { LATAbits.LATA3 = 1; } while(0);
  4678                           
  4679     0B57  158C               	bsf	12,3	;volatile
  4680     0B58                     l695:	
  4681                           ;main.c: 234:                 do { LATAbits.LATA2 = 0; } while(0);
  4682                           
  4683     0B58  110C               	bcf	12,2	;volatile
  4684     0B59                     l697:	
  4685                           ;main.c: 235:                 do { LATAbits.LATA1 = 0; } while(0);
  4686                           
  4687     0B59  108C               	bcf	12,1	;volatile
  4688     0B5A  2B7B               	goto	l2554
  4689     0B5B                     l701:	
  4690                           ;main.c: 238:                 do { LATAbits.LATA4 = 0; } while(0);
  4691                           
  4692     0B5B  0022               	movlb	2	; select bank2
  4693     0B5C  120C               	bcf	12,4	;volatile
  4694     0B5D                     l703:	
  4695                           ;main.c: 239:                 do { LATAbits.LATA3 = 1; } while(0);
  4696                           
  4697     0B5D  158C               	bsf	12,3	;volatile
  4698     0B5E                     l705:	
  4699                           ;main.c: 240:                 do { LATAbits.LATA2 = 1; } while(0);
  4700                           
  4701     0B5E  150C               	bsf	12,2	;volatile
  4702     0B5F                     l707:	
  4703                           ;main.c: 241:                 do { LATAbits.LATA1 = 0; } while(0);
  4704                           
  4705     0B5F  108C               	bcf	12,1	;volatile
  4706     0B60  2B7B               	goto	l2554
  4707     0B61                     l710:	
  4708                           ;main.c: 244:                 do { LATAbits.LATA4 = 0; } while(0);
  4709                           
  4710     0B61  0022               	movlb	2	; select bank2
  4711     0B62  120C               	bcf	12,4	;volatile
  4712     0B63                     l712:	
  4713                           ;main.c: 245:                 do { LATAbits.LATA3 = 0; } while(0);
  4714                           
  4715     0B63  118C               	bcf	12,3	;volatile
  4716     0B64                     l714:	
  4717                           ;main.c: 246:                 do { LATAbits.LATA2 = 1; } while(0);
  4718                           
  4719     0B64  150C               	bsf	12,2	;volatile
  4720     0B65                     l716:	
  4721                           ;main.c: 247:                 do { LATAbits.LATA1 = 1; } while(0);
  4722                           
  4723     0B65  148C               	bsf	12,1	;volatile
  4724     0B66  2B7B               	goto	l2554
  4725     0B67                     l719:	
  4726                           ;main.c: 250:                 do { LATAbits.LATA4 = 1; } while(0);
  4727                           
  4728     0B67  0022               	movlb	2	; select bank2
  4729     0B68  160C               	bsf	12,4	;volatile
  4730     0B69                     l721:	
  4731                           ;main.c: 251:                 do { LATAbits.LATA3 = 0; } while(0);
  4732                           
  4733     0B69  118C               	bcf	12,3	;volatile
  4734     0B6A                     l723:	
  4735                           ;main.c: 252:                 do { LATAbits.LATA2 = 0; } while(0);
  4736                           
  4737     0B6A  110C               	bcf	12,2	;volatile
  4738     0B6B                     l725:	
  4739                           ;main.c: 253:                 do { LATAbits.LATA1 = 1; } while(0);
  4740                           
  4741     0B6B  148C               	bsf	12,1	;volatile
  4742     0B6C  2B7B               	goto	l2554
  4743     0B6D                     l2552:
  4744     0B6D  0822               	movf	definePassoMotor@passom^(0+128),w
  4745                           
  4746                           ; Switch size 1, requested type "simple"
  4747                           ; Number of cases is 4, Range of values is 0 to 3
  4748                           ; switch strategies available:
  4749                           ; Name         Instructions Cycles
  4750                           ; simple_byte           13     7 (average)
  4751                           ; direct_byte           14     6 (fixed)
  4752                           ; jumptable            260     6 (fixed)
  4753                           ;	Chosen strategy is simple_byte
  4754     0B6E  3A00               	xorlw	0	; case 0
  4755     0B6F  1903               	skipnz
  4756     0B70  2B55               	goto	l691
  4757     0B71  3A01               	xorlw	1	; case 1
  4758     0B72  1903               	skipnz
  4759     0B73  2B5B               	goto	l701
  4760     0B74  3A03               	xorlw	3	; case 2
  4761     0B75  1903               	skipnz
  4762     0B76  2B61               	goto	l710
  4763     0B77  3A01               	xorlw	1	; case 3
  4764     0B78  1903               	skipnz
  4765     0B79  2B67               	goto	l719
  4766     0B7A  2B7B               	goto	l2554
  4767     0B7B                     l2554:
  4768                           
  4769                           ;main.c: 258:     passo++;
  4770     0B7B  3001               	movlw	1
  4771     0B7C  0021               	movlb	1	; select bank1
  4772     0B7D  00A1               	movwf	??_definePassoMotor^(0+128)
  4773     0B7E  0821               	movf	??_definePassoMotor^(0+128),w
  4774     0B7F  07EC               	addwf	_passo^(0+128),f
  4775     0B80                     l2556:
  4776                           
  4777                           ;main.c: 259:     passo = passo & 0x03;
  4778     0B80  086C               	movf	_passo^(0+128),w
  4779     0B81  3903               	andlw	3
  4780     0B82  00EC               	movwf	_passo^(0+128)
  4781     0B83                     l727:
  4782     0B83  0008               	return
  4783     0B84                     __end_of_definePassoMotor:
  4784                           
  4785                           	psect	text6
  4786     0D58                     __ptext6:	
  4787 ;; *************** function _envia_Tx *****************
  4788 ;; Defined at:
  4789 ;;		line 173 in file "main.c"
  4790 ;; Parameters:    Size  Location     Type
  4791 ;;		None
  4792 ;; Auto vars:     Size  Location     Type
  4793 ;;		None
  4794 ;; Return value:  Size  Location     Type
  4795 ;;                  1    wreg      void 
  4796 ;; Registers used:
  4797 ;;		wreg, status,2, status,0, pclath, cstack
  4798 ;; Tracked objects:
  4799 ;;		On entry : 0/0
  4800 ;;		On exit  : 0/0
  4801 ;;		Unchanged: 0/0
  4802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4803 ;;      Params:         0       0       0       0       0       0
  4804 ;;      Locals:         0       0       0       0       0       0
  4805 ;;      Temps:          0       0       0       0       0       0
  4806 ;;      Totals:         0       0       0       0       0       0
  4807 ;;Total ram usage:        0 bytes
  4808 ;; Hardware stack levels used: 1
  4809 ;; Hardware stack levels required when called: 7
  4810 ;; This function calls:
  4811 ;;		_EUSART_Write
  4812 ;;		___flmul
  4813 ;;		___fltol
  4814 ;; This function is called by:
  4815 ;;		_main
  4816 ;; This function uses a non-reentrant model
  4817 ;;
  4818                           
  4819     0D58                     _envia_Tx:	
  4820                           ;psect for function _envia_Tx
  4821                           
  4822     0D58                     l3372:	
  4823                           ;incstack = 0
  4824                           ; Regs used in _envia_Tx: [wreg+status,2+status,0+pclath+cstack]
  4825                           
  4826                           
  4827                           ;main.c: 174:     EUSART_Write(controlchoice);
  4828     0D58  0021               	movlb	1	; select bank1
  4829     0D59  086D               	movf	_controlchoice^(0+128),w
  4830     0D5A  3189  2140  318D   	fcall	_EUSART_Write
  4831     0D5D                     l3374:
  4832                           
  4833                           ;main.c: 175:     vTx.v = sp_height;
  4834     0D5D  0020               	movlb	0	; select bank0
  4835     0D5E  0863               	movf	_sp_height+1,w
  4836     0D5F  0021               	movlb	1	; select bank1
  4837     0D60  00DC               	movwf	(_vTx+1)^(0+128)
  4838     0D61  0020               	movlb	0	; select bank0
  4839     0D62  0862               	movf	_sp_height,w
  4840     0D63  0021               	movlb	1	; select bank1
  4841     0D64  00DB               	movwf	_vTx^(0+128)
  4842     0D65                     l3376:
  4843                           
  4844                           ;main.c: 176:     EUSART_Write(vTx.vH);
  4845     0D65  085C               	movf	(_vTx^(0+128)+1),w
  4846     0D66  3189  2140  318D   	fcall	_EUSART_Write
  4847     0D69                     l3378:
  4848                           
  4849                           ;main.c: 177:     EUSART_Write(vTx.vL);
  4850     0D69  0021               	movlb	1	; select bank1
  4851     0D6A  085B               	movf	_vTx^(0+128),w
  4852     0D6B  3189  2140  318D   	fcall	_EUSART_Write
  4853     0D6E                     l3380:
  4854                           
  4855                           ;main.c: 178:     vTx.v = height;
  4856     0D6E  0021               	movlb	1	; select bank1
  4857     0D6F  0862               	movf	(_height+1)^(0+128),w
  4858     0D70  00DC               	movwf	(_vTx+1)^(0+128)
  4859     0D71  0861               	movf	_height^(0+128),w
  4860     0D72  00DB               	movwf	_vTx^(0+128)
  4861                           
  4862                           ;main.c: 179:     EUSART_Write(vTx.vH);
  4863     0D73  085C               	movf	(_vTx^(0+128)+1),w
  4864     0D74  3189  2140  318D   	fcall	_EUSART_Write
  4865                           
  4866                           ;main.c: 180:     EUSART_Write(vTx.vL);
  4867     0D77  0021               	movlb	1	; select bank1
  4868     0D78  085B               	movf	_vTx^(0+128),w
  4869     0D79  3189  2140  318D   	fcall	_EUSART_Write
  4870                           
  4871                           ;main.c: 181:     vTx.v = avg_tempo_voo;
  4872     0D7C  0020               	movlb	0	; select bank0
  4873     0D7D  0855               	movf	_avg_tempo_voo+3,w
  4874     0D7E  0021               	movlb	1	; select bank1
  4875     0D7F  00C6               	movwf	(___fltol@f1+3)^(0+128)
  4876     0D80  0020               	movlb	0	; select bank0
  4877     0D81  0854               	movf	_avg_tempo_voo+2,w
  4878     0D82  0021               	movlb	1	; select bank1
  4879     0D83  00C5               	movwf	(___fltol@f1+2)^(0+128)
  4880     0D84  0020               	movlb	0	; select bank0
  4881     0D85  0853               	movf	_avg_tempo_voo+1,w
  4882     0D86  0021               	movlb	1	; select bank1
  4883     0D87  00C4               	movwf	(___fltol@f1+1)^(0+128)
  4884     0D88  0020               	movlb	0	; select bank0
  4885     0D89  0852               	movf	_avg_tempo_voo,w
  4886     0D8A  0021               	movlb	1	; select bank1
  4887     0D8B  00C3               	movwf	___fltol@f1^(0+128)
  4888     0D8C  318B  23F5  318D   	fcall	___fltol
  4889     0D8F  0021               	movlb	1	; select bank1
  4890     0D90  0844               	movf	(?___fltol+1)^(0+128),w
  4891     0D91  00DC               	movwf	(_vTx+1)^(0+128)
  4892     0D92  0843               	movf	?___fltol^(0+128),w
  4893     0D93  00DB               	movwf	_vTx^(0+128)
  4894                           
  4895                           ;main.c: 182:     EUSART_Write(vTx.vH);
  4896     0D94  085C               	movf	(_vTx^(0+128)+1),w
  4897     0D95  3189  2140  318D   	fcall	_EUSART_Write
  4898                           
  4899                           ;main.c: 183:     EUSART_Write(vTx.vL);
  4900     0D98  0021               	movlb	1	; select bank1
  4901     0D99  085B               	movf	_vTx^(0+128),w
  4902     0D9A  3189  2140  318D   	fcall	_EUSART_Write
  4903                           
  4904                           ;main.c: 184:     vTx.v = float_temp*10;
  4905     0D9D  0020               	movlb	0	; select bank0
  4906     0D9E  086E               	movf	_float_temp+3,w
  4907     0D9F  0021               	movlb	1	; select bank1
  4908     0DA0  00B0               	movwf	(___flmul@a+3)^(0+128)
  4909     0DA1  0020               	movlb	0	; select bank0
  4910     0DA2  086D               	movf	_float_temp+2,w
  4911     0DA3  0021               	movlb	1	; select bank1
  4912     0DA4  00AF               	movwf	(___flmul@a+2)^(0+128)
  4913     0DA5  0020               	movlb	0	; select bank0
  4914     0DA6  086C               	movf	_float_temp+1,w
  4915     0DA7  0021               	movlb	1	; select bank1
  4916     0DA8  00AE               	movwf	(___flmul@a+1)^(0+128)
  4917     0DA9  0020               	movlb	0	; select bank0
  4918     0DAA  086B               	movf	_float_temp,w
  4919     0DAB  0021               	movlb	1	; select bank1
  4920     0DAC  00AD               	movwf	___flmul@a^(0+128)
  4921     0DAD  3041               	movlw	65
  4922     0DAE  00AC               	movwf	(___flmul@b+3)^(0+128)
  4923     0DAF  3020               	movlw	32
  4924     0DB0  00AB               	movwf	(___flmul@b+2)^(0+128)
  4925     0DB1  3000               	movlw	0
  4926     0DB2  00AA               	movwf	(___flmul@b+1)^(0+128)
  4927     0DB3  3000               	movlw	0
  4928     0DB4  00A9               	movwf	___flmul@b^(0+128)
  4929     0DB5  3180  205E  318D   	fcall	___flmul
  4930     0DB8  0021               	movlb	1	; select bank1
  4931     0DB9  082C               	movf	(?___flmul+3)^(0+128),w
  4932     0DBA  00C6               	movwf	(___fltol@f1+3)^(0+128)
  4933     0DBB  082B               	movf	(?___flmul+2)^(0+128),w
  4934     0DBC  00C5               	movwf	(___fltol@f1+2)^(0+128)
  4935     0DBD  082A               	movf	(?___flmul+1)^(0+128),w
  4936     0DBE  00C4               	movwf	(___fltol@f1+1)^(0+128)
  4937     0DBF  0829               	movf	?___flmul^(0+128),w
  4938     0DC0  00C3               	movwf	___fltol@f1^(0+128)
  4939     0DC1  318B  23F5  318D   	fcall	___fltol
  4940     0DC4  0021               	movlb	1	; select bank1
  4941     0DC5  0844               	movf	(?___fltol+1)^(0+128),w
  4942     0DC6  00DC               	movwf	(_vTx+1)^(0+128)
  4943     0DC7  0843               	movf	?___fltol^(0+128),w
  4944     0DC8  00DB               	movwf	_vTx^(0+128)
  4945                           
  4946                           ;main.c: 185:     EUSART_Write(vTx.vH);
  4947     0DC9  085C               	movf	(_vTx^(0+128)+1),w
  4948     0DCA  3189  2140  318D   	fcall	_EUSART_Write
  4949                           
  4950                           ;main.c: 186:     EUSART_Write(vTx.vL);
  4951     0DCD  0021               	movlb	1	; select bank1
  4952     0DCE  085B               	movf	_vTx^(0+128),w
  4953     0DCF  3189  2140  318D   	fcall	_EUSART_Write
  4954     0DD2                     l3382:
  4955                           
  4956                           ;main.c: 187:     vTx.v = sp_position;
  4957     0DD2  0021               	movlb	1	; select bank1
  4958     0DD3  085E               	movf	(_sp_position+1)^(0+128),w
  4959     0DD4  00DC               	movwf	(_vTx+1)^(0+128)
  4960     0DD5  085D               	movf	_sp_position^(0+128),w
  4961     0DD6  00DB               	movwf	_vTx^(0+128)
  4962     0DD7                     l3384:
  4963                           
  4964                           ;main.c: 188:     EUSART_Write(vTx.vH);
  4965     0DD7  085C               	movf	(_vTx^(0+128)+1),w
  4966     0DD8  3189  2140  318D   	fcall	_EUSART_Write
  4967     0DDB                     l3386:
  4968                           
  4969                           ;main.c: 189:     EUSART_Write(vTx.vL);
  4970     0DDB  0021               	movlb	1	; select bank1
  4971     0DDC  085B               	movf	_vTx^(0+128),w
  4972     0DDD  3189  2140  318D   	fcall	_EUSART_Write
  4973     0DE0                     l3388:
  4974                           
  4975                           ;main.c: 190:     vTx.v = position;
  4976     0DE0  0021               	movlb	1	; select bank1
  4977     0DE1  0860               	movf	(_position+1)^(0+128),w
  4978     0DE2  00DC               	movwf	(_vTx+1)^(0+128)
  4979     0DE3  085F               	movf	_position^(0+128),w
  4980     0DE4  00DB               	movwf	_vTx^(0+128)
  4981                           
  4982                           ;main.c: 191:     EUSART_Write(vTx.vH);
  4983     0DE5  085C               	movf	(_vTx^(0+128)+1),w
  4984     0DE6  3189  2140  318D   	fcall	_EUSART_Write
  4985                           
  4986                           ;main.c: 192:     EUSART_Write(vTx.vL);
  4987     0DE9  0021               	movlb	1	; select bank1
  4988     0DEA  085B               	movf	_vTx^(0+128),w
  4989     0DEB  3189  2140  318D   	fcall	_EUSART_Write
  4990     0DEE                     l3390:
  4991                           
  4992                           ;main.c: 193:     vTx.v = dc;
  4993     0DEE  0021               	movlb	1	; select bank1
  4994     0DEF  0858               	movf	(_dc+1)^(0+128),w
  4995     0DF0  00DC               	movwf	(_vTx+1)^(0+128)
  4996     0DF1  0857               	movf	_dc^(0+128),w
  4997     0DF2  00DB               	movwf	_vTx^(0+128)
  4998     0DF3                     l3392:
  4999                           
  5000                           ;main.c: 194:     EUSART_Write(vTx.vH);
  5001     0DF3  085C               	movf	(_vTx^(0+128)+1),w
  5002     0DF4  3189  2140  318D   	fcall	_EUSART_Write
  5003     0DF7                     l3394:
  5004                           
  5005                           ;main.c: 195:     EUSART_Write(vTx.vL);
  5006     0DF7  0021               	movlb	1	; select bank1
  5007     0DF8  085B               	movf	_vTx^(0+128),w
  5008     0DF9  3189  2140  318D   	fcall	_EUSART_Write
  5009     0DFC                     l645:
  5010     0DFC  0008               	return
  5011     0DFD                     __end_of_envia_Tx:
  5012                           
  5013                           	psect	text7
  5014     0BF5                     __ptext7:	
  5015 ;; *************** function ___fltol *****************
  5016 ;; Defined at:
  5017 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\fltol.c"
  5018 ;; Parameters:    Size  Location     Type
  5019 ;;  f1              4   35[BANK1 ] void 
  5020 ;; Auto vars:     Size  Location     Type
  5021 ;;  exp1            1   44[BANK1 ] unsigned char 
  5022 ;;  sign1           1   43[BANK1 ] unsigned char 
  5023 ;; Return value:  Size  Location     Type
  5024 ;;                  4   35[BANK1 ] long 
  5025 ;; Registers used:
  5026 ;;		wreg, status,2, status,0
  5027 ;; Tracked objects:
  5028 ;;		On entry : 0/0
  5029 ;;		On exit  : 0/0
  5030 ;;		Unchanged: 0/0
  5031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5032 ;;      Params:         0       0       4       0       0       0
  5033 ;;      Locals:         0       0       2       0       0       0
  5034 ;;      Temps:          0       0       4       0       0       0
  5035 ;;      Totals:         0       0      10       0       0       0
  5036 ;;Total ram usage:       10 bytes
  5037 ;; Hardware stack levels used: 1
  5038 ;; Hardware stack levels required when called: 5
  5039 ;; This function calls:
  5040 ;;		Nothing
  5041 ;; This function is called by:
  5042 ;;		_envia_Tx
  5043 ;; This function uses a non-reentrant model
  5044 ;;
  5045                           
  5046     0BF5                     ___fltol:	
  5047                           ;psect for function ___fltol
  5048                           
  5049     0BF5                     l3050:	
  5050                           ;incstack = 0
  5051                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  5052                           
  5053     0BF5  1003               	clrc
  5054     0BF6  0021               	movlb	1	; select bank1
  5055     0BF7  0D45               	rlf	(___fltol@f1+2)^(0+128),w
  5056     0BF8  0D46               	rlf	(___fltol@f1+3)^(0+128),w
  5057     0BF9  00CC               	movwf	___fltol@exp1^(0+128)
  5058     0BFA  084C               	movf	___fltol@exp1^(0+128),w
  5059     0BFB  1D03               	btfss	3,2
  5060     0BFC  2BFE               	goto	u2611
  5061     0BFD  2BFF               	goto	u2610
  5062     0BFE                     u2611:
  5063     0BFE  2C08               	goto	l3056
  5064     0BFF                     u2610:
  5065     0BFF                     l3052:
  5066     0BFF  3000               	movlw	0
  5067     0C00  00C6               	movwf	(?___fltol+3)^(0+128)
  5068     0C01  3000               	movlw	0
  5069     0C02  00C5               	movwf	(?___fltol+2)^(0+128)
  5070     0C03  3000               	movlw	0
  5071     0C04  00C4               	movwf	(?___fltol+1)^(0+128)
  5072     0C05  3000               	movlw	0
  5073     0C06  00C3               	movwf	?___fltol^(0+128)
  5074     0C07  2C65               	goto	l1110
  5075     0C08                     l3056:
  5076     0C08  0843               	movf	___fltol@f1^(0+128),w
  5077     0C09  00C7               	movwf	??___fltol^(0+128)
  5078     0C0A  0844               	movf	(___fltol@f1+1)^(0+128),w
  5079     0C0B  00C8               	movwf	(??___fltol^(0+128)+1)
  5080     0C0C  0845               	movf	(___fltol@f1+2)^(0+128),w
  5081     0C0D  00C9               	movwf	(??___fltol^(0+128)+2)
  5082     0C0E  0846               	movf	(___fltol@f1+3)^(0+128),w
  5083     0C0F  00CA               	movwf	(??___fltol^(0+128)+3)
  5084     0C10  301F               	movlw	31
  5085     0C11                     u2625:
  5086     0C11  36CA               	lsrf	(??___fltol^(0+128)+3),f
  5087     0C12  0CC9               	rrf	(??___fltol^(0+128)+2),f
  5088     0C13  0CC8               	rrf	(??___fltol^(0+128)+1),f
  5089     0C14  0CC7               	rrf	??___fltol^(0+128),f
  5090     0C15                     u2620:
  5091     0C15  0B89               	decfsz	9,f
  5092     0C16  2C11               	goto	u2625
  5093     0C17  0847               	movf	??___fltol^(0+128),w
  5094     0C18  00CB               	movwf	___fltol@sign1^(0+128)
  5095     0C19                     l3058:
  5096     0C19  17C5               	bsf	(___fltol@f1^(0+128)+2),7
  5097     0C1A                     l3060:
  5098     0C1A  30FF               	movlw	255
  5099     0C1B  05C3               	andwf	___fltol@f1^(0+128),f
  5100     0C1C  30FF               	movlw	255
  5101     0C1D  05C4               	andwf	(___fltol@f1+1)^(0+128),f
  5102     0C1E  30FF               	movlw	255
  5103     0C1F  05C5               	andwf	(___fltol@f1+2)^(0+128),f
  5104     0C20  3000               	movlw	0
  5105     0C21  05C6               	andwf	(___fltol@f1+3)^(0+128),f
  5106     0C22                     l3062:
  5107     0C22  3096               	movlw	150
  5108     0C23  02CC               	subwf	___fltol@exp1^(0+128),f
  5109     0C24                     l3064:
  5110     0C24  1FCC               	btfss	___fltol@exp1^(0+128),7
  5111     0C25  2C27               	goto	u2631
  5112     0C26  2C28               	goto	u2630
  5113     0C27                     u2631:
  5114     0C27  2C40               	goto	l3074
  5115     0C28                     u2630:
  5116     0C28                     l3066:
  5117     0C28  084C               	movf	___fltol@exp1^(0+128),w
  5118     0C29  3A80               	xorlw	128
  5119     0C2A  3E97               	addlw	151
  5120     0C2B  1803               	skipnc
  5121     0C2C  2C2E               	goto	u2641
  5122     0C2D  2C2F               	goto	u2640
  5123     0C2E                     u2641:
  5124     0C2E  2C30               	goto	l3072
  5125     0C2F                     u2640:
  5126     0C2F  2BFF               	goto	l3052
  5127     0C30                     l3072:
  5128     0C30  3001               	movlw	1
  5129     0C31                     u2655:
  5130     0C31  36C6               	lsrf	(___fltol@f1+3)^(0+128),f
  5131     0C32  0CC5               	rrf	(___fltol@f1+2)^(0+128),f
  5132     0C33  0CC4               	rrf	(___fltol@f1+1)^(0+128),f
  5133     0C34  0CC3               	rrf	___fltol@f1^(0+128),f
  5134     0C35  0B89               	decfsz	9,f
  5135     0C36  2C31               	goto	u2655
  5136     0C37  3001               	movlw	1
  5137     0C38  00C7               	movwf	??___fltol^(0+128)
  5138     0C39  0847               	movf	??___fltol^(0+128),w
  5139     0C3A  07CC               	addwf	___fltol@exp1^(0+128),f
  5140     0C3B  1D03               	btfss	3,2
  5141     0C3C  2C3E               	goto	u2661
  5142     0C3D  2C3F               	goto	u2660
  5143     0C3E                     u2661:
  5144     0C3E  2C30               	goto	l3072
  5145     0C3F                     u2660:
  5146     0C3F  2C55               	goto	l3082
  5147     0C40                     l3074:
  5148     0C40  3020               	movlw	32
  5149     0C41  024C               	subwf	___fltol@exp1^(0+128),w
  5150     0C42  1C03               	skipc
  5151     0C43  2C45               	goto	u2671
  5152     0C44  2C46               	goto	u2670
  5153     0C45                     u2671:
  5154     0C45  2C50               	goto	l1117
  5155     0C46                     u2670:
  5156     0C46  2BFF               	goto	l3052
  5157     0C47                     l3080:
  5158     0C47  3001               	movlw	1
  5159     0C48                     u2685:
  5160     0C48  35C3               	lslf	___fltol@f1^(0+128),f
  5161     0C49  0DC4               	rlf	(___fltol@f1+1)^(0+128),f
  5162     0C4A  0DC5               	rlf	(___fltol@f1+2)^(0+128),f
  5163     0C4B  0DC6               	rlf	(___fltol@f1+3)^(0+128),f
  5164     0C4C  0B89               	decfsz	9,f
  5165     0C4D  2C48               	goto	u2685
  5166     0C4E  3001               	movlw	1
  5167     0C4F  02CC               	subwf	___fltol@exp1^(0+128),f
  5168     0C50                     l1117:
  5169     0C50  084C               	movf	___fltol@exp1^(0+128),w
  5170     0C51  1D03               	btfss	3,2
  5171     0C52  2C54               	goto	u2691
  5172     0C53  2C55               	goto	u2690
  5173     0C54                     u2691:
  5174     0C54  2C47               	goto	l3080
  5175     0C55                     u2690:
  5176     0C55                     l3082:
  5177     0C55  084B               	movf	___fltol@sign1^(0+128),w
  5178     0C56  1903               	btfsc	3,2
  5179     0C57  2C59               	goto	u2701
  5180     0C58  2C5A               	goto	u2700
  5181     0C59                     u2701:
  5182     0C59  2C65               	goto	l1120
  5183     0C5A                     u2700:
  5184     0C5A                     l3084:
  5185     0C5A  09C3               	comf	___fltol@f1^(0+128),f
  5186     0C5B  09C4               	comf	(___fltol@f1+1)^(0+128),f
  5187     0C5C  09C5               	comf	(___fltol@f1+2)^(0+128),f
  5188     0C5D  09C6               	comf	(___fltol@f1+3)^(0+128),f
  5189     0C5E  0AC3               	incf	___fltol@f1^(0+128),f
  5190     0C5F  1903               	skipnz
  5191     0C60  0AC4               	incf	(___fltol@f1+1)^(0+128),f
  5192     0C61  1903               	skipnz
  5193     0C62  0AC5               	incf	(___fltol@f1+2)^(0+128),f
  5194     0C63  1903               	skipnz
  5195     0C64  0AC6               	incf	(___fltol@f1+3)^(0+128),f
  5196     0C65                     l1120:
  5197     0C65                     l1110:
  5198     0C65  0008               	return
  5199     0C66                     __end_of___fltol:
  5200                           
  5201                           	psect	text8
  5202     005E                     __ptext8:	
  5203 ;; *************** function ___flmul *****************
  5204 ;; Defined at:
  5205 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcmul.c"
  5206 ;; Parameters:    Size  Location     Type
  5207 ;;  b               4    9[BANK1 ] long 
  5208 ;;  a               4   13[BANK1 ] long 
  5209 ;; Auto vars:     Size  Location     Type
  5210 ;;  prod            4   29[BANK1 ] struct .
  5211 ;;  grs             4   23[BANK1 ] unsigned long 
  5212 ;;  temp            2   33[BANK1 ] struct .
  5213 ;;  bexp            1   28[BANK1 ] unsigned char 
  5214 ;;  aexp            1   27[BANK1 ] unsigned char 
  5215 ;;  sign            1   22[BANK1 ] unsigned char 
  5216 ;; Return value:  Size  Location     Type
  5217 ;;                  4    9[BANK1 ] unsigned char 
  5218 ;; Registers used:
  5219 ;;		wreg, status,2, status,0, pclath, cstack
  5220 ;; Tracked objects:
  5221 ;;		On entry : 0/0
  5222 ;;		On exit  : 0/0
  5223 ;;		Unchanged: 0/0
  5224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5225 ;;      Params:         0       0       8       0       0       0
  5226 ;;      Locals:         0       0      13       0       0       0
  5227 ;;      Temps:          0       0       5       0       0       0
  5228 ;;      Totals:         0       0      26       0       0       0
  5229 ;;Total ram usage:       26 bytes
  5230 ;; Hardware stack levels used: 1
  5231 ;; Hardware stack levels required when called: 6
  5232 ;; This function calls:
  5233 ;;		__Umul8_16
  5234 ;; This function is called by:
  5235 ;;		_envia_Tx
  5236 ;; This function uses a non-reentrant model
  5237 ;;
  5238                           
  5239     005E                     ___flmul:	
  5240                           ;psect for function ___flmul
  5241                           
  5242     005E                     l3086:	
  5243                           ;incstack = 0
  5244                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  5245                           
  5246     005E  0021               	movlb	1	; select bank1
  5247     005F  082C               	movf	(___flmul@b^(0+128)+3),w
  5248     0060  3980               	andlw	128
  5249     0061  00B6               	movwf	___flmul@sign^(0+128)
  5250     0062                     l3088:
  5251     0062  352C               	lslf	(___flmul@b^(0+128)+3),w
  5252     0063  00BC               	movwf	___flmul@bexp^(0+128)
  5253     0064                     l3090:
  5254     0064  1FAB               	btfss	(___flmul@b^(0+128)+2),7
  5255     0065  2867               	goto	u2711
  5256     0066  2868               	goto	u2710
  5257     0067                     u2711:
  5258     0067  2869               	goto	l3094
  5259     0068                     u2710:
  5260     0068                     l3092:
  5261     0068  143C               	bsf	___flmul@bexp^(0+128),0
  5262     0069                     l3094:
  5263     0069  083C               	movf	___flmul@bexp^(0+128),w
  5264     006A  1903               	btfsc	3,2
  5265     006B  286D               	goto	u2721
  5266     006C  286E               	goto	u2720
  5267     006D                     u2721:
  5268     006D  287D               	goto	l3102
  5269     006E                     u2720:
  5270     006E                     l3096:
  5271     006E  0A3C               	incf	___flmul@bexp^(0+128),w
  5272     006F  1D03               	btfss	3,2
  5273     0070  2872               	goto	u2731
  5274     0071  2873               	goto	u2730
  5275     0072                     u2731:
  5276     0072  287B               	goto	l3100
  5277     0073                     u2730:
  5278     0073                     l3098:
  5279     0073  3000               	movlw	0
  5280     0074  00AC               	movwf	(___flmul@b+3)^(0+128)
  5281     0075  3000               	movlw	0
  5282     0076  00AB               	movwf	(___flmul@b+2)^(0+128)
  5283     0077  3000               	movlw	0
  5284     0078  00AA               	movwf	(___flmul@b+1)^(0+128)
  5285     0079  3000               	movlw	0
  5286     007A  00A9               	movwf	___flmul@b^(0+128)
  5287     007B                     l3100:
  5288     007B  17AB               	bsf	(___flmul@b^(0+128)+2),7
  5289     007C  2885               	goto	l3104
  5290     007D                     l3102:
  5291     007D  3000               	movlw	0
  5292     007E  00AC               	movwf	(___flmul@b+3)^(0+128)
  5293     007F  3000               	movlw	0
  5294     0080  00AB               	movwf	(___flmul@b+2)^(0+128)
  5295     0081  3000               	movlw	0
  5296     0082  00AA               	movwf	(___flmul@b+1)^(0+128)
  5297     0083  3000               	movlw	0
  5298     0084  00A9               	movwf	___flmul@b^(0+128)
  5299     0085                     l3104:
  5300     0085  0830               	movf	(___flmul@a^(0+128)+3),w
  5301     0086  3980               	andlw	128
  5302     0087  00B1               	movwf	??___flmul^(0+128)
  5303     0088  0831               	movf	??___flmul^(0+128),w
  5304     0089  06B6               	xorwf	___flmul@sign^(0+128),f
  5305     008A                     l3106:
  5306     008A  3530               	lslf	(___flmul@a^(0+128)+3),w
  5307     008B  00BB               	movwf	___flmul@aexp^(0+128)
  5308     008C                     l3108:
  5309     008C  1FAF               	btfss	(___flmul@a^(0+128)+2),7
  5310     008D  288F               	goto	u2741
  5311     008E  2890               	goto	u2740
  5312     008F                     u2741:
  5313     008F  2891               	goto	l3112
  5314     0090                     u2740:
  5315     0090                     l3110:
  5316     0090  143B               	bsf	___flmul@aexp^(0+128),0
  5317     0091                     l3112:
  5318     0091  083B               	movf	___flmul@aexp^(0+128),w
  5319     0092  1903               	btfsc	3,2
  5320     0093  2895               	goto	u2751
  5321     0094  2896               	goto	u2750
  5322     0095                     u2751:
  5323     0095  28A5               	goto	l3120
  5324     0096                     u2750:
  5325     0096                     l3114:
  5326     0096  0A3B               	incf	___flmul@aexp^(0+128),w
  5327     0097  1D03               	btfss	3,2
  5328     0098  289A               	goto	u2761
  5329     0099  289B               	goto	u2760
  5330     009A                     u2761:
  5331     009A  28A3               	goto	l3118
  5332     009B                     u2760:
  5333     009B                     l3116:
  5334     009B  3000               	movlw	0
  5335     009C  00B0               	movwf	(___flmul@a+3)^(0+128)
  5336     009D  3000               	movlw	0
  5337     009E  00AF               	movwf	(___flmul@a+2)^(0+128)
  5338     009F  3000               	movlw	0
  5339     00A0  00AE               	movwf	(___flmul@a+1)^(0+128)
  5340     00A1  3000               	movlw	0
  5341     00A2  00AD               	movwf	___flmul@a^(0+128)
  5342     00A3                     l3118:
  5343     00A3  17AF               	bsf	(___flmul@a^(0+128)+2),7
  5344     00A4  28AD               	goto	l3122
  5345     00A5                     l3120:
  5346     00A5  3000               	movlw	0
  5347     00A6  00B0               	movwf	(___flmul@a+3)^(0+128)
  5348     00A7  3000               	movlw	0
  5349     00A8  00AF               	movwf	(___flmul@a+2)^(0+128)
  5350     00A9  3000               	movlw	0
  5351     00AA  00AE               	movwf	(___flmul@a+1)^(0+128)
  5352     00AB  3000               	movlw	0
  5353     00AC  00AD               	movwf	___flmul@a^(0+128)
  5354     00AD                     l3122:
  5355     00AD  083B               	movf	___flmul@aexp^(0+128),w
  5356     00AE  1903               	btfsc	3,2
  5357     00AF  28B1               	goto	u2771
  5358     00B0  28B2               	goto	u2770
  5359     00B1                     u2771:
  5360     00B1  28B7               	goto	l3126
  5361     00B2                     u2770:
  5362     00B2                     l3124:
  5363     00B2  083C               	movf	___flmul@bexp^(0+128),w
  5364     00B3  1D03               	btfss	3,2
  5365     00B4  28B6               	goto	u2781
  5366     00B5  28B7               	goto	u2780
  5367     00B6                     u2781:
  5368     00B6  28C0               	goto	l3130
  5369     00B7                     u2780:
  5370     00B7                     l3126:
  5371     00B7  3000               	movlw	0
  5372     00B8  00AC               	movwf	(?___flmul+3)^(0+128)
  5373     00B9  3000               	movlw	0
  5374     00BA  00AB               	movwf	(?___flmul+2)^(0+128)
  5375     00BB  3000               	movlw	0
  5376     00BC  00AA               	movwf	(?___flmul+1)^(0+128)
  5377     00BD  3000               	movlw	0
  5378     00BE  00A9               	movwf	?___flmul^(0+128)
  5379     00BF  2A98               	goto	l1313
  5380     00C0                     l3130:
  5381     00C0  0829               	movf	___flmul@b^(0+128),w
  5382     00C1  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
  5383     00C2  082F               	movf	(___flmul@a^(0+128)+2),w
  5384     00C3  318A  225A  3180   	fcall	__Umul8_16
  5385     00C6  0021               	movlb	1	; select bank1
  5386     00C7  0821               	movf	(?__Umul8_16+1)^(0+128),w
  5387     00C8  00C2               	movwf	(___flmul@temp+1)^(0+128)
  5388     00C9  0820               	movf	?__Umul8_16^(0+128),w
  5389     00CA  00C1               	movwf	___flmul@temp^(0+128)
  5390     00CB                     l3132:
  5391     00CB  0841               	movf	___flmul@temp^(0+128),w
  5392     00CC  00B1               	movwf	??___flmul^(0+128)
  5393     00CD  01B2               	clrf	(??___flmul^(0+128)+1)
  5394     00CE  01B3               	clrf	(??___flmul^(0+128)+2)
  5395     00CF  01B4               	clrf	(??___flmul^(0+128)+3)
  5396     00D0  0834               	movf	(??___flmul+3)^(0+128),w
  5397     00D1  00BA               	movwf	(___flmul@grs+3)^(0+128)
  5398     00D2  0833               	movf	(??___flmul+2)^(0+128),w
  5399     00D3  00B9               	movwf	(___flmul@grs+2)^(0+128)
  5400     00D4  0832               	movf	(??___flmul+1)^(0+128),w
  5401     00D5  00B8               	movwf	(___flmul@grs+1)^(0+128)
  5402     00D6  0831               	movf	??___flmul^(0+128),w
  5403     00D7  00B7               	movwf	___flmul@grs^(0+128)
  5404     00D8                     l3134:
  5405     00D8  0842               	movf	(___flmul@temp^(0+128)+1),w
  5406     00D9  00B1               	movwf	??___flmul^(0+128)
  5407     00DA  01B2               	clrf	(??___flmul^(0+128)+1)
  5408     00DB  01B3               	clrf	(??___flmul^(0+128)+2)
  5409     00DC  01B4               	clrf	(??___flmul^(0+128)+3)
  5410     00DD  0834               	movf	(??___flmul+3)^(0+128),w
  5411     00DE  00C0               	movwf	(___flmul@prod+3)^(0+128)
  5412     00DF  0833               	movf	(??___flmul+2)^(0+128),w
  5413     00E0  00BF               	movwf	(___flmul@prod+2)^(0+128)
  5414     00E1  0832               	movf	(??___flmul+1)^(0+128),w
  5415     00E2  00BE               	movwf	(___flmul@prod+1)^(0+128)
  5416     00E3  0831               	movf	??___flmul^(0+128),w
  5417     00E4  00BD               	movwf	___flmul@prod^(0+128)
  5418     00E5  082A               	movf	(___flmul@b^(0+128)+1),w
  5419     00E6  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
  5420     00E7  082E               	movf	(___flmul@a^(0+128)+1),w
  5421     00E8  318A  225A  3180   	fcall	__Umul8_16
  5422     00EB  0021               	movlb	1	; select bank1
  5423     00EC  0821               	movf	(?__Umul8_16+1)^(0+128),w
  5424     00ED  00C2               	movwf	(___flmul@temp+1)^(0+128)
  5425     00EE  0820               	movf	?__Umul8_16^(0+128),w
  5426     00EF  00C1               	movwf	___flmul@temp^(0+128)
  5427     00F0                     l3136:
  5428     00F0  0841               	movf	___flmul@temp^(0+128),w
  5429     00F1  00B1               	movwf	??___flmul^(0+128)
  5430     00F2  01B2               	clrf	(??___flmul^(0+128)+1)
  5431     00F3  01B3               	clrf	(??___flmul^(0+128)+2)
  5432     00F4  01B4               	clrf	(??___flmul^(0+128)+3)
  5433     00F5  0831               	movf	??___flmul^(0+128),w
  5434     00F6  07B7               	addwf	___flmul@grs^(0+128),f
  5435     00F7  0832               	movf	(??___flmul+1)^(0+128),w
  5436     00F8  3DB8               	addwfc	(___flmul@grs+1)^(0+128),f
  5437     00F9  0833               	movf	(??___flmul+2)^(0+128),w
  5438     00FA  3DB9               	addwfc	(___flmul@grs+2)^(0+128),f
  5439     00FB  0834               	movf	(??___flmul+3)^(0+128),w
  5440     00FC  3DBA               	addwfc	(___flmul@grs+3)^(0+128),f
  5441     00FD                     l3138:
  5442     00FD  0842               	movf	(___flmul@temp^(0+128)+1),w
  5443     00FE  00B1               	movwf	??___flmul^(0+128)
  5444     00FF  01B2               	clrf	(??___flmul^(0+128)+1)
  5445     0100  01B3               	clrf	(??___flmul^(0+128)+2)
  5446     0101  01B4               	clrf	(??___flmul^(0+128)+3)
  5447     0102  0831               	movf	??___flmul^(0+128),w
  5448     0103  07BD               	addwf	___flmul@prod^(0+128),f
  5449     0104  0832               	movf	(??___flmul+1)^(0+128),w
  5450     0105  3DBE               	addwfc	(___flmul@prod+1)^(0+128),f
  5451     0106  0833               	movf	(??___flmul+2)^(0+128),w
  5452     0107  3DBF               	addwfc	(___flmul@prod+2)^(0+128),f
  5453     0108  0834               	movf	(??___flmul+3)^(0+128),w
  5454     0109  3DC0               	addwfc	(___flmul@prod+3)^(0+128),f
  5455     010A  082B               	movf	(___flmul@b^(0+128)+2),w
  5456     010B  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
  5457     010C  082D               	movf	___flmul@a^(0+128),w
  5458     010D  318A  225A  3180   	fcall	__Umul8_16
  5459     0110  0021               	movlb	1	; select bank1
  5460     0111  0821               	movf	(?__Umul8_16+1)^(0+128),w
  5461     0112  00C2               	movwf	(___flmul@temp+1)^(0+128)
  5462     0113  0820               	movf	?__Umul8_16^(0+128),w
  5463     0114  00C1               	movwf	___flmul@temp^(0+128)
  5464     0115                     l3140:
  5465     0115  0841               	movf	___flmul@temp^(0+128),w
  5466     0116  00B1               	movwf	??___flmul^(0+128)
  5467     0117  01B2               	clrf	(??___flmul^(0+128)+1)
  5468     0118  01B3               	clrf	(??___flmul^(0+128)+2)
  5469     0119  01B4               	clrf	(??___flmul^(0+128)+3)
  5470     011A  0831               	movf	??___flmul^(0+128),w
  5471     011B  07B7               	addwf	___flmul@grs^(0+128),f
  5472     011C  0832               	movf	(??___flmul+1)^(0+128),w
  5473     011D  3DB8               	addwfc	(___flmul@grs+1)^(0+128),f
  5474     011E  0833               	movf	(??___flmul+2)^(0+128),w
  5475     011F  3DB9               	addwfc	(___flmul@grs+2)^(0+128),f
  5476     0120  0834               	movf	(??___flmul+3)^(0+128),w
  5477     0121  3DBA               	addwfc	(___flmul@grs+3)^(0+128),f
  5478     0122                     l3142:
  5479     0122  0842               	movf	(___flmul@temp^(0+128)+1),w
  5480     0123  00B1               	movwf	??___flmul^(0+128)
  5481     0124  01B2               	clrf	(??___flmul^(0+128)+1)
  5482     0125  01B3               	clrf	(??___flmul^(0+128)+2)
  5483     0126  01B4               	clrf	(??___flmul^(0+128)+3)
  5484     0127  0831               	movf	??___flmul^(0+128),w
  5485     0128  07BD               	addwf	___flmul@prod^(0+128),f
  5486     0129  0832               	movf	(??___flmul+1)^(0+128),w
  5487     012A  3DBE               	addwfc	(___flmul@prod+1)^(0+128),f
  5488     012B  0833               	movf	(??___flmul+2)^(0+128),w
  5489     012C  3DBF               	addwfc	(___flmul@prod+2)^(0+128),f
  5490     012D  0834               	movf	(??___flmul+3)^(0+128),w
  5491     012E  3DC0               	addwfc	(___flmul@prod+3)^(0+128),f
  5492     012F                     l3144:
  5493     012F  3008               	movlw	8
  5494     0130                     u2795:
  5495     0130  35B7               	lslf	___flmul@grs^(0+128),f
  5496     0131  0DB8               	rlf	(___flmul@grs+1)^(0+128),f
  5497     0132  0DB9               	rlf	(___flmul@grs+2)^(0+128),f
  5498     0133  0DBA               	rlf	(___flmul@grs+3)^(0+128),f
  5499     0134  0B89               	decfsz	9,f
  5500     0135  2930               	goto	u2795
  5501     0136                     l3146:
  5502     0136  082A               	movf	(___flmul@b^(0+128)+1),w
  5503     0137  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
  5504     0138  082D               	movf	___flmul@a^(0+128),w
  5505     0139  318A  225A  3180   	fcall	__Umul8_16
  5506     013C  0021               	movlb	1	; select bank1
  5507     013D  0821               	movf	(?__Umul8_16+1)^(0+128),w
  5508     013E  00C2               	movwf	(___flmul@temp+1)^(0+128)
  5509     013F  0820               	movf	?__Umul8_16^(0+128),w
  5510     0140  00C1               	movwf	___flmul@temp^(0+128)
  5511     0141                     l3148:
  5512     0141  0841               	movf	___flmul@temp^(0+128),w
  5513     0142  07B7               	addwf	___flmul@grs^(0+128),f
  5514     0143  0842               	movf	(___flmul@temp+1)^(0+128),w
  5515     0144  3DB8               	addwfc	(___flmul@grs+1)^(0+128),f
  5516     0145  3000               	movlw	0
  5517     0146  3DB9               	addwfc	(___flmul@grs+2)^(0+128),f
  5518     0147  3DBA               	addwfc	(___flmul@grs+3)^(0+128),f
  5519     0148                     l3150:
  5520     0148  0829               	movf	___flmul@b^(0+128),w
  5521     0149  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
  5522     014A  082E               	movf	(___flmul@a^(0+128)+1),w
  5523     014B  318A  225A  3180   	fcall	__Umul8_16
  5524     014E  0021               	movlb	1	; select bank1
  5525     014F  0821               	movf	(?__Umul8_16+1)^(0+128),w
  5526     0150  00C2               	movwf	(___flmul@temp+1)^(0+128)
  5527     0151  0820               	movf	?__Umul8_16^(0+128),w
  5528     0152  00C1               	movwf	___flmul@temp^(0+128)
  5529     0153                     l3152:
  5530     0153  0841               	movf	___flmul@temp^(0+128),w
  5531     0154  07B7               	addwf	___flmul@grs^(0+128),f
  5532     0155  0842               	movf	(___flmul@temp+1)^(0+128),w
  5533     0156  3DB8               	addwfc	(___flmul@grs+1)^(0+128),f
  5534     0157  3000               	movlw	0
  5535     0158  3DB9               	addwfc	(___flmul@grs+2)^(0+128),f
  5536     0159  3DBA               	addwfc	(___flmul@grs+3)^(0+128),f
  5537     015A                     l3154:
  5538     015A  3008               	movlw	8
  5539     015B                     u2805:
  5540     015B  35B7               	lslf	___flmul@grs^(0+128),f
  5541     015C  0DB8               	rlf	(___flmul@grs+1)^(0+128),f
  5542     015D  0DB9               	rlf	(___flmul@grs+2)^(0+128),f
  5543     015E  0DBA               	rlf	(___flmul@grs+3)^(0+128),f
  5544     015F  0B89               	decfsz	9,f
  5545     0160  295B               	goto	u2805
  5546     0161  0829               	movf	___flmul@b^(0+128),w
  5547     0162  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
  5548     0163  082D               	movf	___flmul@a^(0+128),w
  5549     0164  318A  225A  3180   	fcall	__Umul8_16
  5550     0167  0021               	movlb	1	; select bank1
  5551     0168  0821               	movf	(?__Umul8_16+1)^(0+128),w
  5552     0169  00C2               	movwf	(___flmul@temp+1)^(0+128)
  5553     016A  0820               	movf	?__Umul8_16^(0+128),w
  5554     016B  00C1               	movwf	___flmul@temp^(0+128)
  5555     016C                     l3156:
  5556     016C  0841               	movf	___flmul@temp^(0+128),w
  5557     016D  07B7               	addwf	___flmul@grs^(0+128),f
  5558     016E  0842               	movf	(___flmul@temp+1)^(0+128),w
  5559     016F  3DB8               	addwfc	(___flmul@grs+1)^(0+128),f
  5560     0170  3000               	movlw	0
  5561     0171  3DB9               	addwfc	(___flmul@grs+2)^(0+128),f
  5562     0172  3DBA               	addwfc	(___flmul@grs+3)^(0+128),f
  5563     0173                     l3158:
  5564     0173  082A               	movf	(___flmul@b^(0+128)+1),w
  5565     0174  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
  5566     0175  082F               	movf	(___flmul@a^(0+128)+2),w
  5567     0176  318A  225A  3180   	fcall	__Umul8_16
  5568     0179  0021               	movlb	1	; select bank1
  5569     017A  0821               	movf	(?__Umul8_16+1)^(0+128),w
  5570     017B  00C2               	movwf	(___flmul@temp+1)^(0+128)
  5571     017C  0820               	movf	?__Umul8_16^(0+128),w
  5572     017D  00C1               	movwf	___flmul@temp^(0+128)
  5573     017E  0841               	movf	___flmul@temp^(0+128),w
  5574     017F  07BD               	addwf	___flmul@prod^(0+128),f
  5575     0180  0842               	movf	(___flmul@temp+1)^(0+128),w
  5576     0181  3DBE               	addwfc	(___flmul@prod+1)^(0+128),f
  5577     0182  3000               	movlw	0
  5578     0183  3DBF               	addwfc	(___flmul@prod+2)^(0+128),f
  5579     0184  3DC0               	addwfc	(___flmul@prod+3)^(0+128),f
  5580     0185                     l3160:
  5581     0185  082B               	movf	(___flmul@b^(0+128)+2),w
  5582     0186  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
  5583     0187  082E               	movf	(___flmul@a^(0+128)+1),w
  5584     0188  318A  225A  3180   	fcall	__Umul8_16
  5585     018B  0021               	movlb	1	; select bank1
  5586     018C  0821               	movf	(?__Umul8_16+1)^(0+128),w
  5587     018D  00C2               	movwf	(___flmul@temp+1)^(0+128)
  5588     018E  0820               	movf	?__Umul8_16^(0+128),w
  5589     018F  00C1               	movwf	___flmul@temp^(0+128)
  5590     0190                     l3162:
  5591     0190  0841               	movf	___flmul@temp^(0+128),w
  5592     0191  07BD               	addwf	___flmul@prod^(0+128),f
  5593     0192  0842               	movf	(___flmul@temp+1)^(0+128),w
  5594     0193  3DBE               	addwfc	(___flmul@prod+1)^(0+128),f
  5595     0194  3000               	movlw	0
  5596     0195  3DBF               	addwfc	(___flmul@prod+2)^(0+128),f
  5597     0196  3DC0               	addwfc	(___flmul@prod+3)^(0+128),f
  5598     0197  082B               	movf	(___flmul@b^(0+128)+2),w
  5599     0198  00A0               	movwf	__Umul8_16@multiplicand^(0+128)
  5600     0199  082F               	movf	(___flmul@a^(0+128)+2),w
  5601     019A  318A  225A  3180   	fcall	__Umul8_16
  5602     019D  0021               	movlb	1	; select bank1
  5603     019E  0821               	movf	(?__Umul8_16+1)^(0+128),w
  5604     019F  00C2               	movwf	(___flmul@temp+1)^(0+128)
  5605     01A0  0820               	movf	?__Umul8_16^(0+128),w
  5606     01A1  00C1               	movwf	___flmul@temp^(0+128)
  5607     01A2                     l3164:
  5608     01A2  0841               	movf	___flmul@temp^(0+128),w
  5609     01A3  00B1               	movwf	??___flmul^(0+128)
  5610     01A4  0842               	movf	(___flmul@temp+1)^(0+128),w
  5611     01A5  00B2               	movwf	(??___flmul^(0+128)+1)
  5612     01A6  01B3               	clrf	(??___flmul^(0+128)+2)
  5613     01A7  01B4               	clrf	(??___flmul^(0+128)+3)
  5614     01A8  3008               	movlw	8
  5615     01A9                     u2815:
  5616     01A9  35B1               	lslf	??___flmul^(0+128),f
  5617     01AA  0DB2               	rlf	(??___flmul^(0+128)+1),f
  5618     01AB  0DB3               	rlf	(??___flmul^(0+128)+2),f
  5619     01AC  0DB4               	rlf	(??___flmul^(0+128)+3),f
  5620     01AD                     u2810:
  5621     01AD  0B89               	decfsz	9,f
  5622     01AE  29A9               	goto	u2815
  5623     01AF  0831               	movf	??___flmul^(0+128),w
  5624     01B0  07BD               	addwf	___flmul@prod^(0+128),f
  5625     01B1  0832               	movf	(??___flmul+1)^(0+128),w
  5626     01B2  3DBE               	addwfc	(___flmul@prod+1)^(0+128),f
  5627     01B3  0833               	movf	(??___flmul+2)^(0+128),w
  5628     01B4  3DBF               	addwfc	(___flmul@prod+2)^(0+128),f
  5629     01B5  0834               	movf	(??___flmul+3)^(0+128),w
  5630     01B6  3DC0               	addwfc	(___flmul@prod+3)^(0+128),f
  5631     01B7                     l3166:
  5632     01B7  0837               	movf	___flmul@grs^(0+128),w
  5633     01B8  00B1               	movwf	??___flmul^(0+128)
  5634     01B9  0838               	movf	(___flmul@grs+1)^(0+128),w
  5635     01BA  00B2               	movwf	(??___flmul^(0+128)+1)
  5636     01BB  0839               	movf	(___flmul@grs+2)^(0+128),w
  5637     01BC  00B3               	movwf	(??___flmul^(0+128)+2)
  5638     01BD  083A               	movf	(___flmul@grs+3)^(0+128),w
  5639     01BE  00B4               	movwf	(??___flmul^(0+128)+3)
  5640     01BF  3018               	movlw	24
  5641     01C0                     u2825:
  5642     01C0  36B4               	lsrf	(??___flmul^(0+128)+3),f
  5643     01C1  0CB3               	rrf	(??___flmul^(0+128)+2),f
  5644     01C2  0CB2               	rrf	(??___flmul^(0+128)+1),f
  5645     01C3  0CB1               	rrf	??___flmul^(0+128),f
  5646     01C4                     u2820:
  5647     01C4  0B89               	decfsz	9,f
  5648     01C5  29C0               	goto	u2825
  5649     01C6  0831               	movf	??___flmul^(0+128),w
  5650     01C7  07BD               	addwf	___flmul@prod^(0+128),f
  5651     01C8  0832               	movf	(??___flmul+1)^(0+128),w
  5652     01C9  3DBE               	addwfc	(___flmul@prod+1)^(0+128),f
  5653     01CA  0833               	movf	(??___flmul+2)^(0+128),w
  5654     01CB  3DBF               	addwfc	(___flmul@prod+2)^(0+128),f
  5655     01CC  0834               	movf	(??___flmul+3)^(0+128),w
  5656     01CD  3DC0               	addwfc	(___flmul@prod+3)^(0+128),f
  5657     01CE                     l3168:
  5658     01CE  3008               	movlw	8
  5659     01CF                     u2835:
  5660     01CF  35B7               	lslf	___flmul@grs^(0+128),f
  5661     01D0  0DB8               	rlf	(___flmul@grs+1)^(0+128),f
  5662     01D1  0DB9               	rlf	(___flmul@grs+2)^(0+128),f
  5663     01D2  0DBA               	rlf	(___flmul@grs+3)^(0+128),f
  5664     01D3  0B89               	decfsz	9,f
  5665     01D4  29CF               	goto	u2835
  5666     01D5                     l3170:
  5667     01D5  083C               	movf	___flmul@bexp^(0+128),w
  5668     01D6  073B               	addwf	___flmul@aexp^(0+128),w
  5669     01D7  00B1               	movwf	??___flmul^(0+128)
  5670     01D8  01B2               	clrf	(??___flmul^(0+128)+1)
  5671     01D9  0DB2               	rlf	(??___flmul+1)^(0+128),f
  5672     01DA  0831               	movf	??___flmul^(0+128),w
  5673     01DB  3E82               	addlw	130
  5674     01DC  00C1               	movwf	___flmul@temp^(0+128)
  5675     01DD  30FF               	movlw	255
  5676     01DE  3D32               	addwfc	(??___flmul+1)^(0+128),w
  5677     01DF  00C2               	movwf	(___flmul@temp+1)^(0+128)
  5678     01E0  29F8               	goto	l3182
  5679     01E1                     l3172:
  5680     01E1  3001               	movlw	1
  5681     01E2                     u2845:
  5682     01E2  35BD               	lslf	___flmul@prod^(0+128),f
  5683     01E3  0DBE               	rlf	(___flmul@prod+1)^(0+128),f
  5684     01E4  0DBF               	rlf	(___flmul@prod+2)^(0+128),f
  5685     01E5  0DC0               	rlf	(___flmul@prod+3)^(0+128),f
  5686     01E6  0B89               	decfsz	9,f
  5687     01E7  29E2               	goto	u2845
  5688     01E8                     l3174:
  5689     01E8  1FBA               	btfss	(___flmul@grs+3)^(0+128),7
  5690     01E9  29EB               	goto	u2851
  5691     01EA  29EC               	goto	u2850
  5692     01EB                     u2851:
  5693     01EB  29ED               	goto	l3178
  5694     01EC                     u2850:
  5695     01EC                     l3176:
  5696     01EC  143D               	bsf	___flmul@prod^(0+128),0
  5697     01ED                     l3178:
  5698     01ED  3001               	movlw	1
  5699     01EE                     u2865:
  5700     01EE  35B7               	lslf	___flmul@grs^(0+128),f
  5701     01EF  0DB8               	rlf	(___flmul@grs+1)^(0+128),f
  5702     01F0  0DB9               	rlf	(___flmul@grs+2)^(0+128),f
  5703     01F1  0DBA               	rlf	(___flmul@grs+3)^(0+128),f
  5704     01F2  0B89               	decfsz	9,f
  5705     01F3  29EE               	goto	u2865
  5706     01F4                     l3180:
  5707     01F4  30FF               	movlw	255
  5708     01F5  07C1               	addwf	___flmul@temp^(0+128),f
  5709     01F6  30FF               	movlw	255
  5710     01F7  3DC2               	addwfc	(___flmul@temp+1)^(0+128),f
  5711     01F8                     l3182:
  5712     01F8  1FBF               	btfss	(___flmul@prod+2)^(0+128),7
  5713     01F9  29FB               	goto	u2871
  5714     01FA  29FC               	goto	u2870
  5715     01FB                     u2871:
  5716     01FB  29E1               	goto	l3172
  5717     01FC                     u2870:
  5718     01FC                     l3184:
  5719     01FC  01BB               	clrf	___flmul@aexp^(0+128)
  5720     01FD                     l3186:
  5721     01FD  1FBA               	btfss	(___flmul@grs+3)^(0+128),7
  5722     01FE  2A00               	goto	u2881
  5723     01FF  2A01               	goto	u2880
  5724     0200                     u2881:
  5725     0200  2A1D               	goto	l3194
  5726     0201                     u2880:
  5727     0201                     l3188:
  5728     0201  30FF               	movlw	255
  5729     0202  0537               	andwf	___flmul@grs^(0+128),w
  5730     0203  00B1               	movwf	??___flmul^(0+128)
  5731     0204  30FF               	movlw	255
  5732     0205  0538               	andwf	(___flmul@grs+1)^(0+128),w
  5733     0206  00B2               	movwf	(??___flmul^(0+128)+1)
  5734     0207  30FF               	movlw	255
  5735     0208  0539               	andwf	(___flmul@grs+2)^(0+128),w
  5736     0209  00B3               	movwf	(??___flmul^(0+128)+2)
  5737     020A  307F               	movlw	127
  5738     020B  053A               	andwf	(___flmul@grs+3)^(0+128),w
  5739     020C  00B4               	movwf	(??___flmul^(0+128)+3)
  5740     020D  0834               	movf	(??___flmul+3)^(0+128),w
  5741     020E  0433               	iorwf	(??___flmul+2)^(0+128),w
  5742     020F  0432               	iorwf	(??___flmul+1)^(0+128),w
  5743     0210  0431               	iorwf	??___flmul^(0+128),w
  5744     0211  1903               	skipnz
  5745     0212  2A14               	goto	u2891
  5746     0213  2A15               	goto	u2890
  5747     0214                     u2891:
  5748     0214  2A18               	goto	l1319
  5749     0215                     u2890:
  5750     0215                     l3190:
  5751     0215  01BB               	clrf	___flmul@aexp^(0+128)
  5752     0216  0ABB               	incf	___flmul@aexp^(0+128),f
  5753     0217  2A1D               	goto	l3194
  5754     0218                     l1319:
  5755     0218  1C3D               	btfss	___flmul@prod^(0+128),0
  5756     0219  2A1B               	goto	u2901
  5757     021A  2A1C               	goto	u2900
  5758     021B                     u2901:
  5759     021B  2A1D               	goto	l3194
  5760     021C                     u2900:
  5761     021C  2A15               	goto	l3190
  5762     021D                     l3194:
  5763     021D  083B               	movf	___flmul@aexp^(0+128),w
  5764     021E  1903               	btfsc	3,2
  5765     021F  2A21               	goto	u2911
  5766     0220  2A22               	goto	u2910
  5767     0221                     u2911:
  5768     0221  2A4A               	goto	l3204
  5769     0222                     u2910:
  5770     0222                     l3196:
  5771     0222  3001               	movlw	1
  5772     0223  07BD               	addwf	___flmul@prod^(0+128),f
  5773     0224  3000               	movlw	0
  5774     0225  3DBE               	addwfc	(___flmul@prod+1)^(0+128),f
  5775     0226  3000               	movlw	0
  5776     0227  3DBF               	addwfc	(___flmul@prod+2)^(0+128),f
  5777     0228  3000               	movlw	0
  5778     0229  3DC0               	addwfc	(___flmul@prod+3)^(0+128),f
  5779     022A                     l3198:
  5780     022A  1C40               	btfss	(___flmul@prod+3)^(0+128),0
  5781     022B  2A2D               	goto	u2921
  5782     022C  2A2E               	goto	u2920
  5783     022D                     u2921:
  5784     022D  2A4A               	goto	l3204
  5785     022E                     u2920:
  5786     022E                     l3200:
  5787     022E  083D               	movf	___flmul@prod^(0+128),w
  5788     022F  00B1               	movwf	??___flmul^(0+128)
  5789     0230  083E               	movf	(___flmul@prod+1)^(0+128),w
  5790     0231  00B2               	movwf	(??___flmul^(0+128)+1)
  5791     0232  083F               	movf	(___flmul@prod+2)^(0+128),w
  5792     0233  00B3               	movwf	(??___flmul^(0+128)+2)
  5793     0234  0840               	movf	(___flmul@prod+3)^(0+128),w
  5794     0235  00B4               	movwf	(??___flmul^(0+128)+3)
  5795     0236  3001               	movlw	1
  5796     0237  00B5               	movwf	(??___flmul+4)^(0+128)
  5797     0238                     u2935:
  5798     0238  37B4               	asrf	(??___flmul^(0+128)+3),f
  5799     0239  0CB3               	rrf	(??___flmul^(0+128)+2),f
  5800     023A  0CB2               	rrf	(??___flmul^(0+128)+1),f
  5801     023B  0CB1               	rrf	??___flmul^(0+128),f
  5802     023C                     u2930:
  5803     023C  0BB5               	decfsz	(??___flmul+4)^(0+128),f
  5804     023D  2A38               	goto	u2935
  5805     023E  0834               	movf	(??___flmul+3)^(0+128),w
  5806     023F  00C0               	movwf	(___flmul@prod+3)^(0+128)
  5807     0240  0833               	movf	(??___flmul+2)^(0+128),w
  5808     0241  00BF               	movwf	(___flmul@prod+2)^(0+128)
  5809     0242  0832               	movf	(??___flmul+1)^(0+128),w
  5810     0243  00BE               	movwf	(___flmul@prod+1)^(0+128)
  5811     0244  0831               	movf	??___flmul^(0+128),w
  5812     0245  00BD               	movwf	___flmul@prod^(0+128)
  5813     0246                     l3202:
  5814     0246  3001               	movlw	1
  5815     0247  07C1               	addwf	___flmul@temp^(0+128),f
  5816     0248  3000               	movlw	0
  5817     0249  3DC2               	addwfc	(___flmul@temp+1)^(0+128),f
  5818     024A                     l3204:
  5819     024A  0842               	movf	(___flmul@temp+1)^(0+128),w
  5820     024B  3A80               	xorlw	128
  5821     024C  00B1               	movwf	??___flmul^(0+128)
  5822     024D  3080               	movlw	128
  5823     024E  0231               	subwf	??___flmul^(0+128),w
  5824     024F  1D03               	skipz
  5825     0250  2A53               	goto	u2945
  5826     0251  30FF               	movlw	255
  5827     0252  0241               	subwf	___flmul@temp^(0+128),w
  5828     0253                     u2945:
  5829     0253  1C03               	skipc
  5830     0254  2A56               	goto	u2941
  5831     0255  2A57               	goto	u2940
  5832     0256                     u2941:
  5833     0256  2A61               	goto	l3208
  5834     0257                     u2940:
  5835     0257                     l3206:
  5836     0257  307F               	movlw	127
  5837     0258  0021               	movlb	1	; select bank1
  5838     0259  00C0               	movwf	(___flmul@prod+3)^(0+128)
  5839     025A  3080               	movlw	128
  5840     025B  00BF               	movwf	(___flmul@prod+2)^(0+128)
  5841     025C  3000               	movlw	0
  5842     025D  00BE               	movwf	(___flmul@prod+1)^(0+128)
  5843     025E  3000               	movlw	0
  5844     025F  00BD               	movwf	___flmul@prod^(0+128)
  5845     0260  2A8C               	goto	l1325
  5846     0261                     l3208:
  5847     0261  0021               	movlb	1	; select bank1
  5848     0262  0842               	movf	(___flmul@temp+1)^(0+128),w
  5849     0263  3A80               	xorlw	128
  5850     0264  00B1               	movwf	??___flmul^(0+128)
  5851     0265  3080               	movlw	128
  5852     0266  0231               	subwf	??___flmul^(0+128),w
  5853     0267  1D03               	skipz
  5854     0268  2A6B               	goto	u2955
  5855     0269  3001               	movlw	1
  5856     026A  0241               	subwf	___flmul@temp^(0+128),w
  5857     026B                     u2955:
  5858     026B  1803               	skipnc
  5859     026C  2A6E               	goto	u2951
  5860     026D  2A6F               	goto	u2950
  5861     026E                     u2951:
  5862     026E  2A7A               	goto	l3214
  5863     026F                     u2950:
  5864     026F                     l3210:
  5865     026F  3000               	movlw	0
  5866     0270  0021               	movlb	1	; select bank1
  5867     0271  00C0               	movwf	(___flmul@prod+3)^(0+128)
  5868     0272  3000               	movlw	0
  5869     0273  00BF               	movwf	(___flmul@prod+2)^(0+128)
  5870     0274  3000               	movlw	0
  5871     0275  00BE               	movwf	(___flmul@prod+1)^(0+128)
  5872     0276  3000               	movlw	0
  5873     0277  00BD               	movwf	___flmul@prod^(0+128)
  5874     0278                     l3212:
  5875     0278  01B6               	clrf	___flmul@sign^(0+128)
  5876     0279  2A8C               	goto	l1325
  5877     027A                     l3214:
  5878     027A  0021               	movlb	1	; select bank1
  5879     027B  0841               	movf	___flmul@temp^(0+128),w
  5880     027C  00BC               	movwf	___flmul@bexp^(0+128)
  5881     027D  30FF               	movlw	255
  5882     027E  05BD               	andwf	___flmul@prod^(0+128),f
  5883     027F  30FF               	movlw	255
  5884     0280  05BE               	andwf	(___flmul@prod+1)^(0+128),f
  5885     0281  307F               	movlw	127
  5886     0282  05BF               	andwf	(___flmul@prod+2)^(0+128),f
  5887     0283  3000               	movlw	0
  5888     0284  05C0               	andwf	(___flmul@prod+3)^(0+128),f
  5889     0285                     l3216:
  5890     0285  1C3C               	btfss	___flmul@bexp^(0+128),0
  5891     0286  2A88               	goto	u2961
  5892     0287  2A89               	goto	u2960
  5893     0288                     u2961:
  5894     0288  2A8A               	goto	l3220
  5895     0289                     u2960:
  5896     0289                     l3218:
  5897     0289  17BF               	bsf	(___flmul@prod^(0+128)+2),7
  5898     028A                     l3220:
  5899     028A  363C               	lsrf	___flmul@bexp^(0+128),w
  5900     028B  00C0               	movwf	(___flmul@prod^(0+128)+3)
  5901     028C                     l1325:
  5902     028C  0836               	movf	___flmul@sign^(0+128),w
  5903     028D  00B1               	movwf	??___flmul^(0+128)
  5904     028E  0831               	movf	??___flmul^(0+128),w
  5905     028F  04C0               	iorwf	(___flmul@prod^(0+128)+3),f
  5906     0290                     l3222:
  5907     0290  0840               	movf	(___flmul@prod+3)^(0+128),w
  5908     0291  00AC               	movwf	(?___flmul+3)^(0+128)
  5909     0292  083F               	movf	(___flmul@prod+2)^(0+128),w
  5910     0293  00AB               	movwf	(?___flmul+2)^(0+128)
  5911     0294  083E               	movf	(___flmul@prod+1)^(0+128),w
  5912     0295  00AA               	movwf	(?___flmul+1)^(0+128)
  5913     0296  083D               	movf	___flmul@prod^(0+128),w
  5914     0297  00A9               	movwf	?___flmul^(0+128)
  5915     0298                     l1313:
  5916     0298  0008               	return
  5917     0299                     __end_of___flmul:
  5918                           
  5919                           	psect	text9
  5920     0A5A                     __ptext9:	
  5921 ;; *************** function __Umul8_16 *****************
  5922 ;; Defined at:
  5923 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul8_16.c"
  5924 ;; Parameters:    Size  Location     Type
  5925 ;;  multiplier      1    wreg     unsigned char 
  5926 ;;  multiplicand    1    0[BANK1 ] unsigned char 
  5927 ;; Auto vars:     Size  Location     Type
  5928 ;;  multiplier      1    8[BANK1 ] unsigned char 
  5929 ;;  word_mpld       2    6[BANK1 ] unsigned short 
  5930 ;;  product         2    4[BANK1 ] unsigned short 
  5931 ;; Return value:  Size  Location     Type
  5932 ;;                  2    0[BANK1 ] unsigned int 
  5933 ;; Registers used:
  5934 ;;		wreg, status,2, status,0
  5935 ;; Tracked objects:
  5936 ;;		On entry : 0/0
  5937 ;;		On exit  : 0/0
  5938 ;;		Unchanged: 0/0
  5939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5940 ;;      Params:         0       0       2       0       0       0
  5941 ;;      Locals:         0       0       5       0       0       0
  5942 ;;      Temps:          0       0       2       0       0       0
  5943 ;;      Totals:         0       0       9       0       0       0
  5944 ;;Total ram usage:        9 bytes
  5945 ;; Hardware stack levels used: 1
  5946 ;; Hardware stack levels required when called: 5
  5947 ;; This function calls:
  5948 ;;		Nothing
  5949 ;; This function is called by:
  5950 ;;		___flmul
  5951 ;; This function uses a non-reentrant model
  5952 ;;
  5953                           
  5954     0A5A                     __Umul8_16:	
  5955                           ;psect for function __Umul8_16
  5956                           
  5957                           
  5958                           ;incstack = 0
  5959                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  5960                           ;__Umul8_16@multiplier stored from wreg
  5961     0A5A  0021               	movlb	1	; select bank1
  5962     0A5B  00A8               	movwf	__Umul8_16@multiplier^(0+128)
  5963     0A5C                     l2612:
  5964     0A5C  01A4               	clrf	__Umul8_16@product^(0+128)
  5965     0A5D  01A5               	clrf	(__Umul8_16@product+1)^(0+128)
  5966     0A5E                     l2614:
  5967     0A5E  0820               	movf	__Umul8_16@multiplicand^(0+128),w
  5968     0A5F  00A2               	movwf	??__Umul8_16^(0+128)
  5969     0A60  01A3               	clrf	(??__Umul8_16^(0+128)+1)
  5970     0A61  0822               	movf	??__Umul8_16^(0+128),w
  5971     0A62  00A6               	movwf	__Umul8_16@word_mpld^(0+128)
  5972     0A63  0823               	movf	(??__Umul8_16+1)^(0+128),w
  5973     0A64  00A7               	movwf	(__Umul8_16@word_mpld+1)^(0+128)
  5974     0A65                     l2616:
  5975     0A65  1C28               	btfss	__Umul8_16@multiplier^(0+128),0
  5976     0A66  2A68               	goto	u1891
  5977     0A67  2A69               	goto	u1890
  5978     0A68                     u1891:
  5979     0A68  2A6D               	goto	l1332
  5980     0A69                     u1890:
  5981     0A69                     l2618:
  5982     0A69  0826               	movf	__Umul8_16@word_mpld^(0+128),w
  5983     0A6A  07A4               	addwf	__Umul8_16@product^(0+128),f
  5984     0A6B  0827               	movf	(__Umul8_16@word_mpld+1)^(0+128),w
  5985     0A6C  3DA5               	addwfc	(__Umul8_16@product+1)^(0+128),f
  5986     0A6D                     l1332:
  5987     0A6D  3001               	movlw	1
  5988     0A6E                     u1905:
  5989     0A6E  35A6               	lslf	__Umul8_16@word_mpld^(0+128),f
  5990     0A6F  0DA7               	rlf	(__Umul8_16@word_mpld+1)^(0+128),f
  5991     0A70  0B89               	decfsz	9,f
  5992     0A71  2A6E               	goto	u1905
  5993     0A72  1003               	clrc
  5994     0A73  0CA8               	rrf	__Umul8_16@multiplier^(0+128),f
  5995     0A74                     l2620:
  5996     0A74  0828               	movf	__Umul8_16@multiplier^(0+128),w
  5997     0A75  1D03               	btfss	3,2
  5998     0A76  2A78               	goto	u1911
  5999     0A77  2A79               	goto	u1910
  6000     0A78                     u1911:
  6001     0A78  2A65               	goto	l2616
  6002     0A79                     u1910:
  6003     0A79                     l2622:
  6004     0A79  0825               	movf	(__Umul8_16@product+1)^(0+128),w
  6005     0A7A  00A1               	movwf	(?__Umul8_16+1)^(0+128)
  6006     0A7B  0824               	movf	__Umul8_16@product^(0+128),w
  6007     0A7C  00A0               	movwf	?__Umul8_16^(0+128)
  6008     0A7D                     l1334:
  6009     0A7D  0008               	return
  6010     0A7E                     __end_of__Umul8_16:
  6011                           
  6012                           	psect	text10
  6013     0940                     __ptext10:	
  6014 ;; *************** function _EUSART_Write *****************
  6015 ;; Defined at:
  6016 ;;		line 132 in file "mcc_generated_files/eusart.c"
  6017 ;; Parameters:    Size  Location     Type
  6018 ;;  txData          1    wreg     unsigned char 
  6019 ;; Auto vars:     Size  Location     Type
  6020 ;;  txData          1    0[BANK1 ] unsigned char 
  6021 ;; Return value:  Size  Location     Type
  6022 ;;                  1    wreg      void 
  6023 ;; Registers used:
  6024 ;;		wreg
  6025 ;; Tracked objects:
  6026 ;;		On entry : 0/0
  6027 ;;		On exit  : 0/0
  6028 ;;		Unchanged: 0/0
  6029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6030 ;;      Params:         0       0       0       0       0       0
  6031 ;;      Locals:         0       0       1       0       0       0
  6032 ;;      Temps:          0       0       0       0       0       0
  6033 ;;      Totals:         0       0       1       0       0       0
  6034 ;;Total ram usage:        1 bytes
  6035 ;; Hardware stack levels used: 1
  6036 ;; Hardware stack levels required when called: 5
  6037 ;; This function calls:
  6038 ;;		Nothing
  6039 ;; This function is called by:
  6040 ;;		_envia_Tx
  6041 ;; This function uses a non-reentrant model
  6042 ;;
  6043                           
  6044     0940                     _EUSART_Write:	
  6045                           ;psect for function _EUSART_Write
  6046                           
  6047                           
  6048                           ;incstack = 0
  6049                           ; Regs used in _EUSART_Write: [wreg]
  6050                           ;EUSART_Write@txData stored from wreg
  6051     0940  0021               	movlb	1	; select bank1
  6052     0941  00A0               	movwf	EUSART_Write@txData^(0+128)
  6053     0942                     l2954:
  6054     0942                     l247:	
  6055                           ;mcc_generated_files/eusart.c: 135:     {;mcc_generated_files/eusart.c: 136:     }
  6056                           
  6057                           
  6058                           ;mcc_generated_files/eusart.c: 134:     while(0 == PIR1bits.TXIF)
  6059     0942  0020               	movlb	0	; select bank0
  6060     0943  1E11               	btfss	17,4	;volatile
  6061     0944  2946               	goto	u2421
  6062     0945  2947               	goto	u2420
  6063     0946                     u2421:
  6064     0946  2942               	goto	l247
  6065     0947                     u2420:
  6066     0947                     l2956:
  6067                           
  6068                           ;mcc_generated_files/eusart.c: 138:     TXREG = txData;
  6069     0947  0021               	movlb	1	; select bank1
  6070     0948  0820               	movf	EUSART_Write@txData^(0+128),w
  6071     0949  0023               	movlb	3	; select bank3
  6072     094A  009A               	movwf	26	;volatile
  6073     094B                     l250:
  6074     094B  0008               	return
  6075     094C                     __end_of_EUSART_Write:
  6076                           
  6077                           	psect	text11
  6078     09B3                     __ptext11:	
  6079 ;; *************** function _controlchoose *****************
  6080 ;; Defined at:
  6081 ;;		line 103 in file "main.c"
  6082 ;; Parameters:    Size  Location     Type
  6083 ;;		None
  6084 ;; Auto vars:     Size  Location     Type
  6085 ;;		None
  6086 ;; Return value:  Size  Location     Type
  6087 ;;                  1    wreg      void 
  6088 ;; Registers used:
  6089 ;;		wreg, status,2, status,0, pclath, cstack
  6090 ;; Tracked objects:
  6091 ;;		On entry : 0/0
  6092 ;;		On exit  : 0/0
  6093 ;;		Unchanged: 0/0
  6094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6095 ;;      Params:         0       0       0       0       0       0
  6096 ;;      Locals:         0       0       0       0       0       0
  6097 ;;      Temps:          0       0       0       0       0       0
  6098 ;;      Totals:         0       0       0       0       0       0
  6099 ;;Total ram usage:        0 bytes
  6100 ;; Hardware stack levels used: 1
  6101 ;; Hardware stack levels required when called: 7
  6102 ;; This function calls:
  6103 ;;		_TMR4_StartTimer
  6104 ;;		_fluxcontrol
  6105 ;;		_pwmcontrol
  6106 ;; This function is called by:
  6107 ;;		_main
  6108 ;; This function uses a non-reentrant model
  6109 ;;
  6110                           
  6111     09B3                     _controlchoose:	
  6112                           ;psect for function _controlchoose
  6113                           
  6114     09B3                     l3290:	
  6115                           ;incstack = 0
  6116                           ; Regs used in _controlchoose: [wreg+status,2+status,0+pclath+cstack]
  6117                           
  6118                           
  6119                           ;main.c: 104:     if (controlchoice == 1){
  6120     09B3  0021               	movlb	1	; select bank1
  6121     09B4  036D               	decf	_controlchoice^(0+128),w
  6122     09B5  1D03               	btfss	3,2
  6123     09B6  29B8               	goto	u3061
  6124     09B7  29B9               	goto	u3060
  6125     09B8                     u3061:
  6126     09B8  29BD               	goto	l3294
  6127     09B9                     u3060:
  6128     09B9                     l3292:
  6129                           
  6130                           ;main.c: 105:         pwmcontrol ();
  6131     09B9  3184  24D4  3189   	fcall	_pwmcontrol
  6132                           
  6133                           ;main.c: 106:     } else if(controlchoice == 2){
  6134     09BC  29C6               	goto	l3298
  6135     09BD                     l3294:
  6136     09BD  3002               	movlw	2
  6137     09BE  066D               	xorwf	_controlchoice^(0+128),w
  6138     09BF  1D03               	btfss	3,2
  6139     09C0  29C2               	goto	u3071
  6140     09C1  29C3               	goto	u3070
  6141     09C2                     u3071:
  6142     09C2  29C6               	goto	l3298
  6143     09C3                     u3070:
  6144     09C3                     l3296:
  6145                           
  6146                           ;main.c: 107:         fluxcontrol ();
  6147     09C3  3186  2622  3189   	fcall	_fluxcontrol
  6148     09C6                     l3298:
  6149                           
  6150                           ;main.c: 109:     TMR4_StartTimer();
  6151     09C6  3180  2028  3189   	fcall	_TMR4_StartTimer
  6152     09C9                     l626:
  6153     09C9  0008               	return
  6154     09CA                     __end_of_controlchoose:
  6155                           
  6156                           	psect	text12
  6157     04D4                     __ptext12:	
  6158 ;; *************** function _pwmcontrol *****************
  6159 ;; Defined at:
  6160 ;;		line 66 in file "main.c"
  6161 ;; Parameters:    Size  Location     Type
  6162 ;;		None
  6163 ;; Auto vars:     Size  Location     Type
  6164 ;;		None
  6165 ;; Return value:  Size  Location     Type
  6166 ;;                  1    wreg      void 
  6167 ;; Registers used:
  6168 ;;		wreg, status,2, status,0, pclath, cstack
  6169 ;; Tracked objects:
  6170 ;;		On entry : 0/0
  6171 ;;		On exit  : 0/0
  6172 ;;		Unchanged: 0/0
  6173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6174 ;;      Params:         0       0       0       0       0       0
  6175 ;;      Locals:         0       0       0       0       0       0
  6176 ;;      Temps:          0       0      12       0       0       0
  6177 ;;      Totals:         0       0      12       0       0       0
  6178 ;;Total ram usage:       12 bytes
  6179 ;; Hardware stack levels used: 1
  6180 ;; Hardware stack levels required when called: 6
  6181 ;; This function calls:
  6182 ;;		_EPWM1_LoadDutyValue
  6183 ;;		___atdiv
  6184 ;;		___tmul
  6185 ;; This function is called by:
  6186 ;;		_controlchoose
  6187 ;; This function uses a non-reentrant model
  6188 ;;
  6189                           
  6190     04D4                     _pwmcontrol:	
  6191                           ;psect for function _pwmcontrol
  6192                           
  6193     04D4                     l2988:	
  6194                           ;incstack = 0
  6195                           ; Regs used in _pwmcontrol: [wreg+status,2+status,0+pclath+cstack]
  6196                           
  6197                           
  6198                           ;main.c: 67:     error = (ballset-balldist)*10;
  6199     04D4  0020               	movlb	0	; select bank0
  6200     04D5  085C               	movf	_balldist,w
  6201     04D6  0259               	subwf	_ballset,w
  6202     04D7  0021               	movlb	1	; select bank1
  6203     04D8  00B5               	movwf	??_pwmcontrol^(0+128)
  6204     04D9  0020               	movlb	0	; select bank0
  6205     04DA  085A               	movf	_ballset+1,w
  6206     04DB  0021               	movlb	1	; select bank1
  6207     04DC  00B6               	movwf	(??_pwmcontrol^(0+128)+1)
  6208     04DD  0020               	movlb	0	; select bank0
  6209     04DE  085D               	movf	_balldist+1,w
  6210     04DF  1C03               	skipc
  6211     04E0  0F5D               	incfsz	_balldist+1,w
  6212     04E1  2CE3               	goto	u2501
  6213     04E2  2CE5               	goto	u2502
  6214     04E3                     u2501:
  6215     04E3  0021               	movlb	1	; select bank1
  6216     04E4  02B6               	subwf	(??_pwmcontrol^(0+128)+1),f
  6217     04E5                     u2502:
  6218     04E5  0020               	movlb	0	; select bank0
  6219     04E6  085B               	movf	_ballset+2,w
  6220     04E7  0021               	movlb	1	; select bank1
  6221     04E8  00B7               	movwf	(??_pwmcontrol^(0+128)+2)
  6222     04E9  0020               	movlb	0	; select bank0
  6223     04EA  085E               	movf	_balldist+2,w
  6224     04EB  1C03               	skipc
  6225     04EC  0F5E               	incfsz	_balldist+2,w
  6226     04ED  2CEF               	goto	u2503
  6227     04EE  2CF1               	goto	u2504
  6228     04EF                     u2503:
  6229     04EF  0021               	movlb	1	; select bank1
  6230     04F0  02B7               	subwf	(??_pwmcontrol^(0+128)+2),f
  6231     04F1                     u2504:
  6232     04F1  0835               	movf	??_pwmcontrol^(0+128),w
  6233     04F2  00A0               	movwf	___tmul@multiplier^(0+128)
  6234     04F3  0836               	movf	(??_pwmcontrol+1)^(0+128),w
  6235     04F4  00A1               	movwf	(___tmul@multiplier+1)^(0+128)
  6236     04F5  0837               	movf	(??_pwmcontrol+2)^(0+128),w
  6237     04F6  00A2               	movwf	(___tmul@multiplier+2)^(0+128)
  6238     04F7  300A               	movlw	10
  6239     04F8  00A3               	movwf	___tmul@multiplicand^(0+128)
  6240     04F9  3000               	movlw	0
  6241     04FA  00A4               	movwf	(___tmul@multiplicand+1)^(0+128)
  6242     04FB  3000               	movlw	0
  6243     04FC  00A5               	movwf	(___tmul@multiplicand+2)^(0+128)
  6244     04FD  318A  22F6  3184   	fcall	___tmul
  6245     0500  0021               	movlb	1	; select bank1
  6246     0501  0820               	movf	?___tmul^(0+128),w
  6247     0502  00D4               	movwf	_error^(0+128)
  6248     0503  0821               	movf	(?___tmul+1)^(0+128),w
  6249     0504  00D5               	movwf	(_error+1)^(0+128)
  6250     0505  0822               	movf	(?___tmul+2)^(0+128),w
  6251     0506  00D6               	movwf	(_error+2)^(0+128)
  6252     0507                     l2990:
  6253                           
  6254                           ;main.c: 68:     if(error > 150 || error < 150){
  6255     0507  1BD6               	btfsc	(_error+2)^(0+128),7
  6256     0508  2D15               	goto	u2510
  6257     0509  0856               	movf	(_error+2)^(0+128),w
  6258     050A  1D03               	btfss	3,2
  6259     050B  2D14               	goto	u2511
  6260     050C  0855               	movf	(_error+1)^(0+128),w
  6261     050D  1D03               	btfss	3,2
  6262     050E  2D14               	goto	u2511
  6263     050F  3097               	movlw	151
  6264     0510  0254               	subwf	_error^(0+128),w
  6265     0511  1803               	btfsc	3,0
  6266     0512  2D14               	goto	u2511
  6267     0513  2D15               	goto	u2510
  6268     0514                     u2511:
  6269     0514  2D24               	goto	l2994
  6270     0515                     u2510:
  6271     0515                     l2992:
  6272     0515  0021               	movlb	1	; select bank1
  6273     0516  1BD6               	btfsc	(_error+2)^(0+128),7
  6274     0517  2D24               	goto	u2520
  6275     0518  0856               	movf	(_error+2)^(0+128),w
  6276     0519  1D03               	btfss	3,2
  6277     051A  2D23               	goto	u2521
  6278     051B  0855               	movf	(_error+1)^(0+128),w
  6279     051C  1D03               	btfss	3,2
  6280     051D  2D23               	goto	u2521
  6281     051E  3096               	movlw	150
  6282     051F  0254               	subwf	_error^(0+128),w
  6283     0520  1803               	btfsc	3,0
  6284     0521  2D23               	goto	u2521
  6285     0522  2D24               	goto	u2520
  6286     0523                     u2521:
  6287     0523  2E21               	goto	l603
  6288     0524                     u2520:
  6289     0524                     l2994:
  6290     0524  0021               	movlb	1	; select bank1
  6291     0525  0854               	movf	_error^(0+128),w
  6292     0526  00A0               	movwf	___tmul@multiplier^(0+128)
  6293     0527  0855               	movf	(_error+1)^(0+128),w
  6294     0528  00A1               	movwf	(___tmul@multiplier+1)^(0+128)
  6295     0529  0856               	movf	(_error+2)^(0+128),w
  6296     052A  00A2               	movwf	(___tmul@multiplier+2)^(0+128)
  6297     052B  3058               	movlw	88
  6298     052C  00A3               	movwf	___tmul@multiplicand^(0+128)
  6299     052D  3002               	movlw	2
  6300     052E  00A4               	movwf	(___tmul@multiplicand+1)^(0+128)
  6301     052F  3000               	movlw	0
  6302     0530  00A5               	movwf	(___tmul@multiplicand+2)^(0+128)
  6303     0531  318A  22F6  3184   	fcall	___tmul
  6304     0534  0021               	movlb	1	; select bank1
  6305     0535  0820               	movf	?___tmul^(0+128),w
  6306     0536  07D1               	addwf	_outputsum^(0+128),f
  6307     0537  0821               	movf	(?___tmul+1)^(0+128),w
  6308     0538  3DD2               	addwfc	(_outputsum+1)^(0+128),f
  6309     0539  0822               	movf	(?___tmul+2)^(0+128),w
  6310     053A  3DD3               	addwfc	(_outputsum+2)^(0+128),f
  6311     053B                     l2996:
  6312                           
  6313                           ;main.c: 70:         if (outputsum > 1000) outputsum = 1000;
  6314     053B  1BD3               	btfsc	(_outputsum+2)^(0+128),7
  6315     053C  2D47               	goto	u2531
  6316     053D  0853               	movf	(_outputsum+2)^(0+128),w
  6317     053E  1D03               	btfss	3,2
  6318     053F  2D48               	goto	u2530
  6319     0540  30E9               	movlw	233
  6320     0541  0251               	subwf	_outputsum^(0+128),w
  6321     0542  3003               	movlw	3
  6322     0543  3B52               	subwfb	(_outputsum+1)^(0+128),w
  6323     0544  1C03               	btfss	3,0
  6324     0545  2D47               	goto	u2531
  6325     0546  2D48               	goto	u2530
  6326     0547                     u2531:
  6327     0547  2D50               	goto	l3000
  6328     0548                     u2530:
  6329     0548                     l2998:
  6330     0548  30E8               	movlw	232
  6331     0549  0021               	movlb	1	; select bank1
  6332     054A  00D1               	movwf	_outputsum^(0+128)
  6333     054B  3003               	movlw	3
  6334     054C  00D2               	movwf	(_outputsum+1)^(0+128)
  6335     054D  3000               	movlw	0
  6336     054E  00D3               	movwf	(_outputsum+2)^(0+128)
  6337     054F  2D64               	goto	l3004
  6338     0550                     l3000:
  6339     0550  0021               	movlb	1	; select bank1
  6340     0551  1FD3               	btfss	(_outputsum+2)^(0+128),7
  6341     0552  2D5C               	goto	u2541
  6342     0553  3018               	movlw	24
  6343     0554  0251               	subwf	_outputsum^(0+128),w
  6344     0555  30FC               	movlw	252
  6345     0556  3B52               	subwfb	(_outputsum+1)^(0+128),w
  6346     0557  30FF               	movlw	255
  6347     0558  3B53               	subwfb	(_outputsum+2)^(0+128),w
  6348     0559  1803               	btfsc	3,0
  6349     055A  2D5C               	goto	u2541
  6350     055B  2D5D               	goto	u2540
  6351     055C                     u2541:
  6352     055C  2D64               	goto	l3004
  6353     055D                     u2540:
  6354     055D                     l3002:
  6355     055D  3018               	movlw	24
  6356     055E  0021               	movlb	1	; select bank1
  6357     055F  00D1               	movwf	_outputsum^(0+128)
  6358     0560  30FC               	movlw	252
  6359     0561  00D2               	movwf	(_outputsum+1)^(0+128)
  6360     0562  30FF               	movlw	255
  6361     0563  00D3               	movwf	(_outputsum+2)^(0+128)
  6362     0564                     l3004:
  6363                           
  6364                           ;main.c: 72:         outpre = (kpp*error + outputsum + (kdp*(error-errorp)+outpre*10)/10
      +                          );
  6365     0564  0021               	movlb	1	; select bank1
  6366     0565  0851               	movf	_outputsum^(0+128),w
  6367     0566  00B5               	movwf	??_pwmcontrol^(0+128)
  6368     0567  0852               	movf	(_outputsum+1)^(0+128),w
  6369     0568  00B6               	movwf	(??_pwmcontrol^(0+128)+1)
  6370     0569  0853               	movf	(_outputsum+2)^(0+128),w
  6371     056A  00B7               	movwf	(??_pwmcontrol^(0+128)+2)
  6372     056B  300A               	movlw	10
  6373     056C  00A9               	movwf	___atdiv@divisor^(0+128)
  6374     056D  3000               	movlw	0
  6375     056E  00AA               	movwf	(___atdiv@divisor+1)^(0+128)
  6376     056F  3000               	movlw	0
  6377     0570  00AB               	movwf	(___atdiv@divisor+2)^(0+128)
  6378     0571  0020               	movlb	0	; select bank0
  6379     0572  085F               	movf	_errorp,w
  6380     0573  0021               	movlb	1	; select bank1
  6381     0574  00A0               	movwf	___tmul@multiplier^(0+128)
  6382     0575  0020               	movlb	0	; select bank0
  6383     0576  0860               	movf	_errorp+1,w
  6384     0577  0021               	movlb	1	; select bank1
  6385     0578  00A1               	movwf	(___tmul@multiplier+1)^(0+128)
  6386     0579  0020               	movlb	0	; select bank0
  6387     057A  0861               	movf	_errorp+2,w
  6388     057B  0021               	movlb	1	; select bank1
  6389     057C  00A2               	movwf	(___tmul@multiplier+2)^(0+128)
  6390     057D  30FB               	movlw	251
  6391     057E  00A3               	movwf	___tmul@multiplicand^(0+128)
  6392     057F  30FF               	movlw	255
  6393     0580  00A4               	movwf	(___tmul@multiplicand+1)^(0+128)
  6394     0581  30FF               	movlw	255
  6395     0582  00A5               	movwf	(___tmul@multiplicand+2)^(0+128)
  6396     0583  318A  22F6  3184   	fcall	___tmul
  6397     0586  0021               	movlb	1	; select bank1
  6398     0587  0820               	movf	?___tmul^(0+128),w
  6399     0588  00B8               	movwf	(??_pwmcontrol+3)^(0+128)
  6400     0589  0821               	movf	(?___tmul+1)^(0+128),w
  6401     058A  00B9               	movwf	((??_pwmcontrol+3)^(0+128)+1)
  6402     058B  0822               	movf	(?___tmul+2)^(0+128),w
  6403     058C  00BA               	movwf	((??_pwmcontrol+3)^(0+128)+2)
  6404     058D  0854               	movf	_error^(0+128),w
  6405     058E  00A0               	movwf	___tmul@multiplier^(0+128)
  6406     058F  0855               	movf	(_error+1)^(0+128),w
  6407     0590  00A1               	movwf	(___tmul@multiplier+1)^(0+128)
  6408     0591  0856               	movf	(_error+2)^(0+128),w
  6409     0592  00A2               	movwf	(___tmul@multiplier+2)^(0+128)
  6410     0593  3005               	movlw	5
  6411     0594  00A3               	movwf	___tmul@multiplicand^(0+128)
  6412     0595  3000               	movlw	0
  6413     0596  00A4               	movwf	(___tmul@multiplicand+1)^(0+128)
  6414     0597  3000               	movlw	0
  6415     0598  00A5               	movwf	(___tmul@multiplicand+2)^(0+128)
  6416     0599  318A  22F6  3184   	fcall	___tmul
  6417     059C  0021               	movlb	1	; select bank1
  6418     059D  0820               	movf	?___tmul^(0+128),w
  6419     059E  00BB               	movwf	(??_pwmcontrol+6)^(0+128)
  6420     059F  0821               	movf	(?___tmul+1)^(0+128),w
  6421     05A0  00BC               	movwf	((??_pwmcontrol+6)^(0+128)+1)
  6422     05A1  0822               	movf	(?___tmul+2)^(0+128),w
  6423     05A2  00BD               	movwf	((??_pwmcontrol+6)^(0+128)+2)
  6424     05A3  084E               	movf	_outpre^(0+128),w
  6425     05A4  00A0               	movwf	___tmul@multiplier^(0+128)
  6426     05A5  084F               	movf	(_outpre+1)^(0+128),w
  6427     05A6  00A1               	movwf	(___tmul@multiplier+1)^(0+128)
  6428     05A7  0850               	movf	(_outpre+2)^(0+128),w
  6429     05A8  00A2               	movwf	(___tmul@multiplier+2)^(0+128)
  6430     05A9  300A               	movlw	10
  6431     05AA  00A3               	movwf	___tmul@multiplicand^(0+128)
  6432     05AB  3000               	movlw	0
  6433     05AC  00A4               	movwf	(___tmul@multiplicand+1)^(0+128)
  6434     05AD  3000               	movlw	0
  6435     05AE  00A5               	movwf	(___tmul@multiplicand+2)^(0+128)
  6436     05AF  318A  22F6  3184   	fcall	___tmul
  6437     05B2  0021               	movlb	1	; select bank1
  6438     05B3  0820               	movf	?___tmul^(0+128),w
  6439     05B4  07BB               	addwf	(??_pwmcontrol+6)^(0+128),f
  6440     05B5  0821               	movf	(?___tmul+1)^(0+128),w
  6441     05B6  3DBC               	addwfc	((??_pwmcontrol+6)^(0+128)+1),f
  6442     05B7  0822               	movf	(?___tmul+2)^(0+128),w
  6443     05B8  3DBD               	addwfc	((??_pwmcontrol+6)^(0+128)+2),f
  6444     05B9  083B               	movf	(??_pwmcontrol+6)^(0+128),w
  6445     05BA  07B8               	addwf	(??_pwmcontrol+3)^(0+128),f
  6446     05BB  083C               	movf	(??_pwmcontrol+7)^(0+128),w
  6447     05BC  3DB9               	addwfc	((??_pwmcontrol+3)^(0+128)+1),f
  6448     05BD  083D               	movf	(??_pwmcontrol+8)^(0+128),w
  6449     05BE  3DBA               	addwfc	((??_pwmcontrol+3)^(0+128)+2),f
  6450     05BF  0838               	movf	(??_pwmcontrol+3)^(0+128),w
  6451     05C0  00AC               	movwf	___atdiv@dividend^(0+128)
  6452     05C1  0839               	movf	(??_pwmcontrol+4)^(0+128),w
  6453     05C2  00AD               	movwf	(___atdiv@dividend+1)^(0+128)
  6454     05C3  083A               	movf	(??_pwmcontrol+5)^(0+128),w
  6455     05C4  00AE               	movwf	(___atdiv@dividend+2)^(0+128)
  6456     05C5  318C  2466  3184   	fcall	___atdiv
  6457     05C8  0021               	movlb	1	; select bank1
  6458     05C9  0829               	movf	?___atdiv^(0+128),w
  6459     05CA  00BE               	movwf	(??_pwmcontrol+9)^(0+128)
  6460     05CB  082A               	movf	(?___atdiv+1)^(0+128),w
  6461     05CC  00BF               	movwf	((??_pwmcontrol+9)^(0+128)+1)
  6462     05CD  082B               	movf	(?___atdiv+2)^(0+128),w
  6463     05CE  00C0               	movwf	((??_pwmcontrol+9)^(0+128)+2)
  6464     05CF  0854               	movf	_error^(0+128),w
  6465     05D0  00A0               	movwf	___tmul@multiplier^(0+128)
  6466     05D1  0855               	movf	(_error+1)^(0+128),w
  6467     05D2  00A1               	movwf	(___tmul@multiplier+1)^(0+128)
  6468     05D3  0856               	movf	(_error+2)^(0+128),w
  6469     05D4  00A2               	movwf	(___tmul@multiplier+2)^(0+128)
  6470     05D5  3036               	movlw	54
  6471     05D6  00A3               	movwf	___tmul@multiplicand^(0+128)
  6472     05D7  3001               	movlw	1
  6473     05D8  00A4               	movwf	(___tmul@multiplicand+1)^(0+128)
  6474     05D9  3000               	movlw	0
  6475     05DA  00A5               	movwf	(___tmul@multiplicand+2)^(0+128)
  6476     05DB  318A  22F6  3184   	fcall	___tmul
  6477     05DE  0021               	movlb	1	; select bank1
  6478     05DF  0820               	movf	?___tmul^(0+128),w
  6479     05E0  07BE               	addwf	(??_pwmcontrol+9)^(0+128),f
  6480     05E1  0821               	movf	(?___tmul+1)^(0+128),w
  6481     05E2  3DBF               	addwfc	((??_pwmcontrol+9)^(0+128)+1),f
  6482     05E3  0822               	movf	(?___tmul+2)^(0+128),w
  6483     05E4  3DC0               	addwfc	((??_pwmcontrol+9)^(0+128)+2),f
  6484     05E5  083E               	movf	(??_pwmcontrol+9)^(0+128),w
  6485     05E6  07B5               	addwf	??_pwmcontrol^(0+128),f
  6486     05E7  083F               	movf	(??_pwmcontrol+10)^(0+128),w
  6487     05E8  3DB6               	addwfc	(??_pwmcontrol^(0+128)+1),f
  6488     05E9  0840               	movf	(??_pwmcontrol+11)^(0+128),w
  6489     05EA  3DB7               	addwfc	(??_pwmcontrol^(0+128)+2),f
  6490     05EB  0835               	movf	??_pwmcontrol^(0+128),w
  6491     05EC  00CE               	movwf	_outpre^(0+128)
  6492     05ED  0836               	movf	(??_pwmcontrol+1)^(0+128),w
  6493     05EE  00CF               	movwf	(_outpre+1)^(0+128)
  6494     05EF  0837               	movf	(??_pwmcontrol+2)^(0+128),w
  6495     05F0  00D0               	movwf	(_outpre+2)^(0+128)
  6496     05F1                     l3006:
  6497                           
  6498                           ;main.c: 73:         if(outpre > 1023) output = 1023;
  6499     05F1  1BD0               	btfsc	(_outpre+2)^(0+128),7
  6500     05F2  2DFB               	goto	u2551
  6501     05F3  0850               	movf	(_outpre+2)^(0+128),w
  6502     05F4  1D03               	btfss	3,2
  6503     05F5  2DFC               	goto	u2550
  6504     05F6  3004               	movlw	4
  6505     05F7  024F               	subwf	(_outpre+1)^(0+128),w
  6506     05F8  1C03               	btfss	3,0
  6507     05F9  2DFB               	goto	u2551
  6508     05FA  2DFC               	goto	u2550
  6509     05FB                     u2551:
  6510     05FB  2E02               	goto	l599
  6511     05FC                     u2550:
  6512     05FC                     l3008:
  6513     05FC  30FF               	movlw	255
  6514     05FD  0021               	movlb	1	; select bank1
  6515     05FE  00E3               	movwf	_output^(0+128)
  6516     05FF  3003               	movlw	3
  6517     0600  00E4               	movwf	(_output^(0+128)+1)
  6518     0601  2E0E               	goto	l3014
  6519     0602                     l599:	
  6520                           ;main.c: 74:         else if(outpre <0) output= 0;
  6521                           
  6522     0602  0021               	movlb	1	; select bank1
  6523     0603  1FD0               	btfss	(_outpre+2)^(0+128),7
  6524     0604  2E06               	goto	u2561
  6525     0605  2E07               	goto	u2560
  6526     0606                     u2561:
  6527     0606  2E0A               	goto	l3012
  6528     0607                     u2560:
  6529     0607                     l3010:
  6530     0607  01E3               	clrf	_output^(0+128)
  6531     0608  01E4               	clrf	(_output+1)^(0+128)
  6532     0609  2E0E               	goto	l3014
  6533     060A                     l3012:
  6534     060A  084F               	movf	(_outpre+1)^(0+128),w
  6535     060B  00E4               	movwf	(_output+1)^(0+128)
  6536     060C  084E               	movf	_outpre^(0+128),w
  6537     060D  00E3               	movwf	_output^(0+128)
  6538     060E                     l3014:
  6539                           
  6540                           ;main.c: 76:         EPWM1_LoadDutyValue(output);
  6541     060E  0864               	movf	(_output+1)^(0+128),w
  6542     060F  00A1               	movwf	(EPWM1_LoadDutyValue@dutyValue+1)^(0+128)
  6543     0610  0863               	movf	_output^(0+128),w
  6544     0611  00A0               	movwf	EPWM1_LoadDutyValue@dutyValue^(0+128)
  6545     0612  3189  21FF  3184   	fcall	_EPWM1_LoadDutyValue
  6546     0615                     l3016:
  6547                           
  6548                           ;main.c: 77:         errorp = error;
  6549     0615  0021               	movlb	1	; select bank1
  6550     0616  0854               	movf	_error^(0+128),w
  6551     0617  0020               	movlb	0	; select bank0
  6552     0618  00DF               	movwf	_errorp
  6553     0619  0021               	movlb	1	; select bank1
  6554     061A  0855               	movf	(_error+1)^(0+128),w
  6555     061B  0020               	movlb	0	; select bank0
  6556     061C  00E0               	movwf	_errorp+1
  6557     061D  0021               	movlb	1	; select bank1
  6558     061E  0856               	movf	(_error+2)^(0+128),w
  6559     061F  0020               	movlb	0	; select bank0
  6560     0620  00E1               	movwf	_errorp+2
  6561     0621                     l603:
  6562     0621  0008               	return
  6563     0622                     __end_of_pwmcontrol:
  6564                           
  6565                           	psect	text13
  6566     0622                     __ptext13:	
  6567 ;; *************** function _fluxcontrol *****************
  6568 ;; Defined at:
  6569 ;;		line 51 in file "main.c"
  6570 ;; Parameters:    Size  Location     Type
  6571 ;;		None
  6572 ;; Auto vars:     Size  Location     Type
  6573 ;;		None
  6574 ;; Return value:  Size  Location     Type
  6575 ;;                  1    wreg      void 
  6576 ;; Registers used:
  6577 ;;		wreg, status,2, status,0, pclath, cstack
  6578 ;; Tracked objects:
  6579 ;;		On entry : 0/0
  6580 ;;		On exit  : 0/0
  6581 ;;		Unchanged: 0/0
  6582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6583 ;;      Params:         0       0       0       0       0       0
  6584 ;;      Locals:         0       0       0       0       0       0
  6585 ;;      Temps:          0       0       6       0       0       0
  6586 ;;      Totals:         0       0       6       0       0       0
  6587 ;;Total ram usage:        6 bytes
  6588 ;; Hardware stack levels used: 1
  6589 ;; Hardware stack levels required when called: 6
  6590 ;; This function calls:
  6591 ;;		___atdiv
  6592 ;;		___tmul
  6593 ;; This function is called by:
  6594 ;;		_controlchoose
  6595 ;; This function uses a non-reentrant model
  6596 ;;
  6597                           
  6598     0622                     _fluxcontrol:	
  6599                           ;psect for function _fluxcontrol
  6600                           
  6601     0622                     l2962:	
  6602                           ;incstack = 0
  6603                           ; Regs used in _fluxcontrol: [wreg+status,2+status,0+pclath+cstack]
  6604                           
  6605                           
  6606                           ;main.c: 52:     error = (ballset-balldist)*100;
  6607     0622  0020               	movlb	0	; select bank0
  6608     0623  085C               	movf	_balldist,w
  6609     0624  0259               	subwf	_ballset,w
  6610     0625  0021               	movlb	1	; select bank1
  6611     0626  00B5               	movwf	??_fluxcontrol^(0+128)
  6612     0627  0020               	movlb	0	; select bank0
  6613     0628  085A               	movf	_ballset+1,w
  6614     0629  0021               	movlb	1	; select bank1
  6615     062A  00B6               	movwf	(??_fluxcontrol^(0+128)+1)
  6616     062B  0020               	movlb	0	; select bank0
  6617     062C  085D               	movf	_balldist+1,w
  6618     062D  1C03               	skipc
  6619     062E  0F5D               	incfsz	_balldist+1,w
  6620     062F  2E31               	goto	u2431
  6621     0630  2E33               	goto	u2432
  6622     0631                     u2431:
  6623     0631  0021               	movlb	1	; select bank1
  6624     0632  02B6               	subwf	(??_fluxcontrol^(0+128)+1),f
  6625     0633                     u2432:
  6626     0633  0020               	movlb	0	; select bank0
  6627     0634  085B               	movf	_ballset+2,w
  6628     0635  0021               	movlb	1	; select bank1
  6629     0636  00B7               	movwf	(??_fluxcontrol^(0+128)+2)
  6630     0637  0020               	movlb	0	; select bank0
  6631     0638  085E               	movf	_balldist+2,w
  6632     0639  1C03               	skipc
  6633     063A  0F5E               	incfsz	_balldist+2,w
  6634     063B  2E3D               	goto	u2433
  6635     063C  2E3F               	goto	u2434
  6636     063D                     u2433:
  6637     063D  0021               	movlb	1	; select bank1
  6638     063E  02B7               	subwf	(??_fluxcontrol^(0+128)+2),f
  6639     063F                     u2434:
  6640     063F  0835               	movf	??_fluxcontrol^(0+128),w
  6641     0640  00A0               	movwf	___tmul@multiplier^(0+128)
  6642     0641  0836               	movf	(??_fluxcontrol+1)^(0+128),w
  6643     0642  00A1               	movwf	(___tmul@multiplier+1)^(0+128)
  6644     0643  0837               	movf	(??_fluxcontrol+2)^(0+128),w
  6645     0644  00A2               	movwf	(___tmul@multiplier+2)^(0+128)
  6646     0645  3064               	movlw	100
  6647     0646  00A3               	movwf	___tmul@multiplicand^(0+128)
  6648     0647  3000               	movlw	0
  6649     0648  00A4               	movwf	(___tmul@multiplicand+1)^(0+128)
  6650     0649  3000               	movlw	0
  6651     064A  00A5               	movwf	(___tmul@multiplicand+2)^(0+128)
  6652     064B  318A  22F6  3186   	fcall	___tmul
  6653     064E  0021               	movlb	1	; select bank1
  6654     064F  0820               	movf	?___tmul^(0+128),w
  6655     0650  00D4               	movwf	_error^(0+128)
  6656     0651  0821               	movf	(?___tmul+1)^(0+128),w
  6657     0652  00D5               	movwf	(_error+1)^(0+128)
  6658     0653  0822               	movf	(?___tmul+2)^(0+128),w
  6659     0654  00D6               	movwf	(_error+2)^(0+128)
  6660     0655                     l2964:
  6661                           
  6662                           ;main.c: 53:     if(error > 150 || error < 150){
  6663     0655  1BD6               	btfsc	(_error+2)^(0+128),7
  6664     0656  2E63               	goto	u2440
  6665     0657  0856               	movf	(_error+2)^(0+128),w
  6666     0658  1D03               	btfss	3,2
  6667     0659  2E62               	goto	u2441
  6668     065A  0855               	movf	(_error+1)^(0+128),w
  6669     065B  1D03               	btfss	3,2
  6670     065C  2E62               	goto	u2441
  6671     065D  3097               	movlw	151
  6672     065E  0254               	subwf	_error^(0+128),w
  6673     065F  1803               	btfsc	3,0
  6674     0660  2E62               	goto	u2441
  6675     0661  2E63               	goto	u2440
  6676     0662                     u2441:
  6677     0662  2E72               	goto	l2968
  6678     0663                     u2440:
  6679     0663                     l2966:
  6680     0663  0021               	movlb	1	; select bank1
  6681     0664  1BD6               	btfsc	(_error+2)^(0+128),7
  6682     0665  2E72               	goto	u2450
  6683     0666  0856               	movf	(_error+2)^(0+128),w
  6684     0667  1D03               	btfss	3,2
  6685     0668  2E71               	goto	u2451
  6686     0669  0855               	movf	(_error+1)^(0+128),w
  6687     066A  1D03               	btfss	3,2
  6688     066B  2E71               	goto	u2451
  6689     066C  3096               	movlw	150
  6690     066D  0254               	subwf	_error^(0+128),w
  6691     066E  1803               	btfsc	3,0
  6692     066F  2E71               	goto	u2451
  6693     0670  2E72               	goto	u2450
  6694     0671                     u2451:
  6695     0671  2F25               	goto	l590
  6696     0672                     u2450:
  6697     0672                     l2968:
  6698     0672  3064               	movlw	100
  6699     0673  0021               	movlb	1	; select bank1
  6700     0674  00A9               	movwf	___atdiv@divisor^(0+128)
  6701     0675  3000               	movlw	0
  6702     0676  00AA               	movwf	(___atdiv@divisor+1)^(0+128)
  6703     0677  3000               	movlw	0
  6704     0678  00AB               	movwf	(___atdiv@divisor+2)^(0+128)
  6705     0679  0854               	movf	_error^(0+128),w
  6706     067A  00A0               	movwf	___tmul@multiplier^(0+128)
  6707     067B  0855               	movf	(_error+1)^(0+128),w
  6708     067C  00A1               	movwf	(___tmul@multiplier+1)^(0+128)
  6709     067D  0856               	movf	(_error+2)^(0+128),w
  6710     067E  00A2               	movwf	(___tmul@multiplier+2)^(0+128)
  6711     067F  3018               	movlw	24
  6712     0680  00A3               	movwf	___tmul@multiplicand^(0+128)
  6713     0681  3001               	movlw	1
  6714     0682  00A4               	movwf	(___tmul@multiplicand+1)^(0+128)
  6715     0683  3000               	movlw	0
  6716     0684  00A5               	movwf	(___tmul@multiplicand+2)^(0+128)
  6717     0685  318A  22F6  3186   	fcall	___tmul
  6718     0688  0021               	movlb	1	; select bank1
  6719     0689  0820               	movf	?___tmul^(0+128),w
  6720     068A  00AC               	movwf	___atdiv@dividend^(0+128)
  6721     068B  0821               	movf	(?___tmul+1)^(0+128),w
  6722     068C  00AD               	movwf	(___atdiv@dividend+1)^(0+128)
  6723     068D  0822               	movf	(?___tmul+2)^(0+128),w
  6724     068E  00AE               	movwf	(___atdiv@dividend+2)^(0+128)
  6725     068F  318C  2466  3186   	fcall	___atdiv
  6726     0692  0021               	movlb	1	; select bank1
  6727     0693  0829               	movf	?___atdiv^(0+128),w
  6728     0694  07D1               	addwf	_outputsum^(0+128),f
  6729     0695  082A               	movf	(?___atdiv+1)^(0+128),w
  6730     0696  3DD2               	addwfc	(_outputsum+1)^(0+128),f
  6731     0697  082B               	movf	(?___atdiv+2)^(0+128),w
  6732     0698  3DD3               	addwfc	(_outputsum+2)^(0+128),f
  6733     0699                     l2970:
  6734                           
  6735                           ;main.c: 55:         if (outputsum > 4500) outputsum = 4500;
  6736     0699  1BD3               	btfsc	(_outputsum+2)^(0+128),7
  6737     069A  2EA5               	goto	u2461
  6738     069B  0853               	movf	(_outputsum+2)^(0+128),w
  6739     069C  1D03               	btfss	3,2
  6740     069D  2EA6               	goto	u2460
  6741     069E  3095               	movlw	149
  6742     069F  0251               	subwf	_outputsum^(0+128),w
  6743     06A0  3011               	movlw	17
  6744     06A1  3B52               	subwfb	(_outputsum+1)^(0+128),w
  6745     06A2  1C03               	btfss	3,0
  6746     06A3  2EA5               	goto	u2461
  6747     06A4  2EA6               	goto	u2460
  6748     06A5                     u2461:
  6749     06A5  2EAE               	goto	l2974
  6750     06A6                     u2460:
  6751     06A6                     l2972:
  6752     06A6  3094               	movlw	148
  6753     06A7  0021               	movlb	1	; select bank1
  6754     06A8  00D1               	movwf	_outputsum^(0+128)
  6755     06A9  3011               	movlw	17
  6756     06AA  00D2               	movwf	(_outputsum+1)^(0+128)
  6757     06AB  3000               	movlw	0
  6758     06AC  00D3               	movwf	(_outputsum+2)^(0+128)
  6759     06AD  2EC2               	goto	l2978
  6760     06AE                     l2974:
  6761     06AE  0021               	movlb	1	; select bank1
  6762     06AF  1FD3               	btfss	(_outputsum+2)^(0+128),7
  6763     06B0  2EBA               	goto	u2471
  6764     06B1  3018               	movlw	24
  6765     06B2  0251               	subwf	_outputsum^(0+128),w
  6766     06B3  30FC               	movlw	252
  6767     06B4  3B52               	subwfb	(_outputsum+1)^(0+128),w
  6768     06B5  30FF               	movlw	255
  6769     06B6  3B53               	subwfb	(_outputsum+2)^(0+128),w
  6770     06B7  1803               	btfsc	3,0
  6771     06B8  2EBA               	goto	u2471
  6772     06B9  2EBB               	goto	u2470
  6773     06BA                     u2471:
  6774     06BA  2EC2               	goto	l2978
  6775     06BB                     u2470:
  6776     06BB                     l2976:
  6777     06BB  3018               	movlw	24
  6778     06BC  0021               	movlb	1	; select bank1
  6779     06BD  00D1               	movwf	_outputsum^(0+128)
  6780     06BE  30FC               	movlw	252
  6781     06BF  00D2               	movwf	(_outputsum+1)^(0+128)
  6782     06C0  30FF               	movlw	255
  6783     06C1  00D3               	movwf	(_outputsum+2)^(0+128)
  6784     06C2                     l2978:
  6785                           
  6786                           ;main.c: 57:         outpre = ((kpf*error + outputsum)/100)+outpre;
  6787     06C2  3064               	movlw	100
  6788     06C3  0021               	movlb	1	; select bank1
  6789     06C4  00A9               	movwf	___atdiv@divisor^(0+128)
  6790     06C5  3000               	movlw	0
  6791     06C6  00AA               	movwf	(___atdiv@divisor+1)^(0+128)
  6792     06C7  3000               	movlw	0
  6793     06C8  00AB               	movwf	(___atdiv@divisor+2)^(0+128)
  6794     06C9  0854               	movf	_error^(0+128),w
  6795     06CA  00A0               	movwf	___tmul@multiplier^(0+128)
  6796     06CB  0855               	movf	(_error+1)^(0+128),w
  6797     06CC  00A1               	movwf	(___tmul@multiplier+1)^(0+128)
  6798     06CD  0856               	movf	(_error+2)^(0+128),w
  6799     06CE  00A2               	movwf	(___tmul@multiplier+2)^(0+128)
  6800     06CF  30C8               	movlw	200
  6801     06D0  00A3               	movwf	___tmul@multiplicand^(0+128)
  6802     06D1  3000               	movlw	0
  6803     06D2  00A4               	movwf	(___tmul@multiplicand+1)^(0+128)
  6804     06D3  3000               	movlw	0
  6805     06D4  00A5               	movwf	(___tmul@multiplicand+2)^(0+128)
  6806     06D5  318A  22F6  3186   	fcall	___tmul
  6807     06D8  0021               	movlb	1	; select bank1
  6808     06D9  0820               	movf	?___tmul^(0+128),w
  6809     06DA  0751               	addwf	_outputsum^(0+128),w
  6810     06DB  00B5               	movwf	??_fluxcontrol^(0+128)
  6811     06DC  0821               	movf	(?___tmul+1)^(0+128),w
  6812     06DD  3D52               	addwfc	(_outputsum+1)^(0+128),w
  6813     06DE  00B6               	movwf	(??_fluxcontrol^(0+128)+1)
  6814     06DF  0822               	movf	(?___tmul+2)^(0+128),w
  6815     06E0  3D53               	addwfc	(_outputsum+2)^(0+128),w
  6816     06E1  00B7               	movwf	(??_fluxcontrol^(0+128)+2)
  6817     06E2  0835               	movf	??_fluxcontrol^(0+128),w
  6818     06E3  00AC               	movwf	___atdiv@dividend^(0+128)
  6819     06E4  0836               	movf	(??_fluxcontrol+1)^(0+128),w
  6820     06E5  00AD               	movwf	(___atdiv@dividend+1)^(0+128)
  6821     06E6  0837               	movf	(??_fluxcontrol+2)^(0+128),w
  6822     06E7  00AE               	movwf	(___atdiv@dividend+2)^(0+128)
  6823     06E8  318C  2466  3186   	fcall	___atdiv
  6824     06EB  0021               	movlb	1	; select bank1
  6825     06EC  0829               	movf	?___atdiv^(0+128),w
  6826     06ED  074E               	addwf	_outpre^(0+128),w
  6827     06EE  00B8               	movwf	(??_fluxcontrol+3)^(0+128)
  6828     06EF  082A               	movf	(?___atdiv+1)^(0+128),w
  6829     06F0  3D4F               	addwfc	(_outpre+1)^(0+128),w
  6830     06F1  00B9               	movwf	((??_fluxcontrol+3)^(0+128)+1)
  6831     06F2  082B               	movf	(?___atdiv+2)^(0+128),w
  6832     06F3  3D50               	addwfc	(_outpre+2)^(0+128),w
  6833     06F4  00BA               	movwf	((??_fluxcontrol+3)^(0+128)+2)
  6834     06F5  0838               	movf	(??_fluxcontrol+3)^(0+128),w
  6835     06F6  00CE               	movwf	_outpre^(0+128)
  6836     06F7  0839               	movf	(??_fluxcontrol+4)^(0+128),w
  6837     06F8  00CF               	movwf	(_outpre+1)^(0+128)
  6838     06F9  083A               	movf	(??_fluxcontrol+5)^(0+128),w
  6839     06FA  00D0               	movwf	(_outpre+2)^(0+128)
  6840     06FB                     l2980:
  6841                           
  6842                           ;main.c: 58:         if (outpre > 380) output = 380;
  6843     06FB  1BD0               	btfsc	(_outpre+2)^(0+128),7
  6844     06FC  2F07               	goto	u2481
  6845     06FD  0850               	movf	(_outpre+2)^(0+128),w
  6846     06FE  1D03               	btfss	3,2
  6847     06FF  2F08               	goto	u2480
  6848     0700  307D               	movlw	125
  6849     0701  024E               	subwf	_outpre^(0+128),w
  6850     0702  3001               	movlw	1
  6851     0703  3B4F               	subwfb	(_outpre+1)^(0+128),w
  6852     0704  1C03               	btfss	3,0
  6853     0705  2F07               	goto	u2481
  6854     0706  2F08               	goto	u2480
  6855     0707                     u2481:
  6856     0707  2F0E               	goto	l586
  6857     0708                     u2480:
  6858     0708                     l2982:
  6859     0708  307C               	movlw	124
  6860     0709  0021               	movlb	1	; select bank1
  6861     070A  00E3               	movwf	_output^(0+128)
  6862     070B  3001               	movlw	1
  6863     070C  00E4               	movwf	(_output^(0+128)+1)
  6864     070D  2F1A               	goto	l587
  6865     070E                     l586:	
  6866                           ;main.c: 59:         else if(outpre <0 ) output = 0;
  6867                           
  6868     070E  0021               	movlb	1	; select bank1
  6869     070F  1FD0               	btfss	(_outpre+2)^(0+128),7
  6870     0710  2F12               	goto	u2491
  6871     0711  2F13               	goto	u2490
  6872     0712                     u2491:
  6873     0712  2F16               	goto	l2986
  6874     0713                     u2490:
  6875     0713                     l2984:
  6876     0713  01E3               	clrf	_output^(0+128)
  6877     0714  01E4               	clrf	(_output+1)^(0+128)
  6878     0715  2F1A               	goto	l587
  6879     0716                     l2986:
  6880     0716  084F               	movf	(_outpre+1)^(0+128),w
  6881     0717  00E4               	movwf	(_output+1)^(0+128)
  6882     0718  084E               	movf	_outpre^(0+128),w
  6883     0719  00E3               	movwf	_output^(0+128)
  6884     071A                     l587:
  6885                           
  6886                           ;main.c: 61:         errorp = error;
  6887     071A  0854               	movf	_error^(0+128),w
  6888     071B  0020               	movlb	0	; select bank0
  6889     071C  00DF               	movwf	_errorp
  6890     071D  0021               	movlb	1	; select bank1
  6891     071E  0855               	movf	(_error+1)^(0+128),w
  6892     071F  0020               	movlb	0	; select bank0
  6893     0720  00E0               	movwf	_errorp+1
  6894     0721  0021               	movlb	1	; select bank1
  6895     0722  0856               	movf	(_error+2)^(0+128),w
  6896     0723  0020               	movlb	0	; select bank0
  6897     0724  00E1               	movwf	_errorp+2
  6898     0725                     l590:
  6899     0725  0008               	return
  6900     0726                     __end_of_fluxcontrol:
  6901                           
  6902                           	psect	text14
  6903     0AF6                     __ptext14:	
  6904 ;; *************** function ___tmul *****************
  6905 ;; Defined at:
  6906 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul24.c"
  6907 ;; Parameters:    Size  Location     Type
  6908 ;;  multiplier      3    0[BANK1 ] unsigned um
  6909 ;;  multiplicand    3    3[BANK1 ] unsigned um
  6910 ;; Auto vars:     Size  Location     Type
  6911 ;;  product         3    6[BANK1 ] unsigned um
  6912 ;; Return value:  Size  Location     Type
  6913 ;;                  3    0[BANK1 ] unsigned um
  6914 ;; Registers used:
  6915 ;;		wreg, status,2, status,0
  6916 ;; Tracked objects:
  6917 ;;		On entry : 0/0
  6918 ;;		On exit  : 0/0
  6919 ;;		Unchanged: 0/0
  6920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6921 ;;      Params:         0       0       6       0       0       0
  6922 ;;      Locals:         0       0       3       0       0       0
  6923 ;;      Temps:          0       0       0       0       0       0
  6924 ;;      Totals:         0       0       9       0       0       0
  6925 ;;Total ram usage:        9 bytes
  6926 ;; Hardware stack levels used: 1
  6927 ;; Hardware stack levels required when called: 5
  6928 ;; This function calls:
  6929 ;;		Nothing
  6930 ;; This function is called by:
  6931 ;;		_fluxcontrol
  6932 ;;		_pwmcontrol
  6933 ;; This function uses a non-reentrant model
  6934 ;;
  6935                           
  6936     0AF6                     ___tmul:	
  6937                           ;psect for function ___tmul
  6938                           
  6939     0AF6                     l2558:	
  6940                           ;incstack = 0
  6941                           ; Regs used in ___tmul: [wreg+status,2+status,0]
  6942                           
  6943     0AF6  3000               	movlw	0
  6944     0AF7  0021               	movlb	1	; select bank1
  6945     0AF8  00A6               	movwf	___tmul@product^(0+128)
  6946     0AF9  3000               	movlw	0
  6947     0AFA  00A7               	movwf	(___tmul@product+1)^(0+128)
  6948     0AFB  3000               	movlw	0
  6949     0AFC  00A8               	movwf	(___tmul@product+2)^(0+128)
  6950     0AFD                     l2560:
  6951     0AFD  1C20               	btfss	___tmul@multiplier^(0+128),0
  6952     0AFE  2B00               	goto	u1751
  6953     0AFF  2B01               	goto	u1750
  6954     0B00                     u1751:
  6955     0B00  2B07               	goto	l2564
  6956     0B01                     u1750:
  6957     0B01                     l2562:
  6958     0B01  0823               	movf	___tmul@multiplicand^(0+128),w
  6959     0B02  07A6               	addwf	___tmul@product^(0+128),f
  6960     0B03  0824               	movf	(___tmul@multiplicand+1)^(0+128),w
  6961     0B04  3DA7               	addwfc	(___tmul@product+1)^(0+128),f
  6962     0B05  0825               	movf	(___tmul@multiplicand+2)^(0+128),w
  6963     0B06  3DA8               	addwfc	(___tmul@product+2)^(0+128),f
  6964     0B07                     l2564:
  6965     0B07  3001               	movlw	1
  6966     0B08                     u1765:
  6967     0B08  35A3               	lslf	___tmul@multiplicand^(0+128),f
  6968     0B09  0DA4               	rlf	(___tmul@multiplicand+1)^(0+128),f
  6969     0B0A  0DA5               	rlf	(___tmul@multiplicand+2)^(0+128),f
  6970     0B0B  0B89               	decfsz	9,f
  6971     0B0C  2B08               	goto	u1765
  6972     0B0D                     l2566:
  6973     0B0D  3001               	movlw	1
  6974     0B0E                     u1775:
  6975     0B0E  36A2               	lsrf	(___tmul@multiplier+2)^(0+128),f
  6976     0B0F  0CA1               	rrf	(___tmul@multiplier+1)^(0+128),f
  6977     0B10  0CA0               	rrf	___tmul@multiplier^(0+128),f
  6978     0B11  0B89               	decfsz	9,f
  6979     0B12  2B0E               	goto	u1775
  6980     0B13  0822               	movf	(___tmul@multiplier+2)^(0+128),w
  6981     0B14  0421               	iorwf	(___tmul@multiplier+1)^(0+128),w
  6982     0B15  0420               	iorwf	___tmul@multiplier^(0+128),w
  6983     0B16  1D03               	skipz
  6984     0B17  2B19               	goto	u1781
  6985     0B18  2B1A               	goto	u1780
  6986     0B19                     u1781:
  6987     0B19  2AFD               	goto	l2560
  6988     0B1A                     u1780:
  6989     0B1A                     l2568:
  6990     0B1A  0826               	movf	___tmul@product^(0+128),w
  6991     0B1B  00A0               	movwf	?___tmul^(0+128)
  6992     0B1C  0827               	movf	(___tmul@product+1)^(0+128),w
  6993     0B1D  00A1               	movwf	(?___tmul+1)^(0+128)
  6994     0B1E  0828               	movf	(___tmul@product+2)^(0+128),w
  6995     0B1F  00A2               	movwf	(?___tmul+2)^(0+128)
  6996     0B20                     l924:
  6997     0B20  0008               	return
  6998     0B21                     __end_of___tmul:
  6999                           
  7000                           	psect	text15
  7001     0C66                     __ptext15:	
  7002 ;; *************** function ___atdiv *****************
  7003 ;; Defined at:
  7004 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\atdiv.c"
  7005 ;; Parameters:    Size  Location     Type
  7006 ;;  divisor         3    9[BANK1 ] m
  7007 ;;  dividend        3   12[BANK1 ] m
  7008 ;; Auto vars:     Size  Location     Type
  7009 ;;  quotient        3   18[BANK1 ] m
  7010 ;;  sign            1   17[BANK1 ] unsigned char 
  7011 ;;  counter         1   16[BANK1 ] unsigned char 
  7012 ;; Return value:  Size  Location     Type
  7013 ;;                  3    9[BANK1 ] m
  7014 ;; Registers used:
  7015 ;;		wreg, status,2, status,0
  7016 ;; Tracked objects:
  7017 ;;		On entry : 0/0
  7018 ;;		On exit  : 0/0
  7019 ;;		Unchanged: 0/0
  7020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7021 ;;      Params:         0       0       6       0       0       0
  7022 ;;      Locals:         0       0       5       0       0       0
  7023 ;;      Temps:          0       0       1       0       0       0
  7024 ;;      Totals:         0       0      12       0       0       0
  7025 ;;Total ram usage:       12 bytes
  7026 ;; Hardware stack levels used: 1
  7027 ;; Hardware stack levels required when called: 5
  7028 ;; This function calls:
  7029 ;;		Nothing
  7030 ;; This function is called by:
  7031 ;;		_fluxcontrol
  7032 ;;		_pwmcontrol
  7033 ;; This function uses a non-reentrant model
  7034 ;;
  7035                           
  7036     0C66                     ___atdiv:	
  7037                           ;psect for function ___atdiv
  7038                           
  7039     0C66                     l2572:	
  7040                           ;incstack = 0
  7041                           ; Regs used in ___atdiv: [wreg+status,2+status,0]
  7042                           
  7043     0C66  0021               	movlb	1	; select bank1
  7044     0C67  01B1               	clrf	___atdiv@sign^(0+128)
  7045     0C68                     l2574:
  7046     0C68  1FAB               	btfss	(___atdiv@divisor+2)^(0+128),7
  7047     0C69  2C6B               	goto	u1791
  7048     0C6A  2C6C               	goto	u1790
  7049     0C6B                     u1791:
  7050     0C6B  2C76               	goto	l1033
  7051     0C6C                     u1790:
  7052     0C6C                     l2576:
  7053     0C6C  09A9               	comf	___atdiv@divisor^(0+128),f
  7054     0C6D  09AA               	comf	(___atdiv@divisor+1)^(0+128),f
  7055     0C6E  09AB               	comf	(___atdiv@divisor+2)^(0+128),f
  7056     0C6F  0AA9               	incf	___atdiv@divisor^(0+128),f
  7057     0C70  1903               	skipnz
  7058     0C71  0AAA               	incf	(___atdiv@divisor+1)^(0+128),f
  7059     0C72  1903               	skipnz
  7060     0C73  0AAB               	incf	(___atdiv@divisor+2)^(0+128),f
  7061     0C74  01B1               	clrf	___atdiv@sign^(0+128)
  7062     0C75  0AB1               	incf	___atdiv@sign^(0+128),f
  7063     0C76                     l1033:
  7064     0C76  1FAE               	btfss	(___atdiv@dividend+2)^(0+128),7
  7065     0C77  2C79               	goto	u1801
  7066     0C78  2C7A               	goto	u1800
  7067     0C79                     u1801:
  7068     0C79  2C86               	goto	l2582
  7069     0C7A                     u1800:
  7070     0C7A                     l2578:
  7071     0C7A  09AC               	comf	___atdiv@dividend^(0+128),f
  7072     0C7B  09AD               	comf	(___atdiv@dividend+1)^(0+128),f
  7073     0C7C  09AE               	comf	(___atdiv@dividend+2)^(0+128),f
  7074     0C7D  0AAC               	incf	___atdiv@dividend^(0+128),f
  7075     0C7E  1903               	skipnz
  7076     0C7F  0AAD               	incf	(___atdiv@dividend+1)^(0+128),f
  7077     0C80  1903               	skipnz
  7078     0C81  0AAE               	incf	(___atdiv@dividend+2)^(0+128),f
  7079     0C82                     l2580:
  7080     0C82  3001               	movlw	1
  7081     0C83  00AF               	movwf	??___atdiv^(0+128)
  7082     0C84  082F               	movf	??___atdiv^(0+128),w
  7083     0C85  06B1               	xorwf	___atdiv@sign^(0+128),f
  7084     0C86                     l2582:
  7085     0C86  3000               	movlw	0
  7086     0C87  00B2               	movwf	___atdiv@quotient^(0+128)
  7087     0C88  3000               	movlw	0
  7088     0C89  00B3               	movwf	(___atdiv@quotient+1)^(0+128)
  7089     0C8A  3000               	movlw	0
  7090     0C8B  00B4               	movwf	(___atdiv@quotient+2)^(0+128)
  7091     0C8C                     l2584:
  7092     0C8C  082B               	movf	(___atdiv@divisor+2)^(0+128),w
  7093     0C8D  042A               	iorwf	(___atdiv@divisor+1)^(0+128),w
  7094     0C8E  0429               	iorwf	___atdiv@divisor^(0+128),w
  7095     0C8F  1903               	skipnz
  7096     0C90  2C92               	goto	u1811
  7097     0C91  2C93               	goto	u1810
  7098     0C92                     u1811:
  7099     0C92  2CCB               	goto	l2604
  7100     0C93                     u1810:
  7101     0C93                     l2586:
  7102     0C93  01B0               	clrf	___atdiv@counter^(0+128)
  7103     0C94  0AB0               	incf	___atdiv@counter^(0+128),f
  7104     0C95  2CA0               	goto	l2590
  7105     0C96                     l2588:
  7106     0C96  3001               	movlw	1
  7107     0C97                     u1825:
  7108     0C97  35A9               	lslf	___atdiv@divisor^(0+128),f
  7109     0C98  0DAA               	rlf	(___atdiv@divisor+1)^(0+128),f
  7110     0C99  0DAB               	rlf	(___atdiv@divisor+2)^(0+128),f
  7111     0C9A  0B89               	decfsz	9,f
  7112     0C9B  2C97               	goto	u1825
  7113     0C9C  3001               	movlw	1
  7114     0C9D  00AF               	movwf	??___atdiv^(0+128)
  7115     0C9E  082F               	movf	??___atdiv^(0+128),w
  7116     0C9F  07B0               	addwf	___atdiv@counter^(0+128),f
  7117     0CA0                     l2590:
  7118     0CA0  1FAB               	btfss	(___atdiv@divisor+2)^(0+128),7
  7119     0CA1  2CA3               	goto	u1831
  7120     0CA2  2CA4               	goto	u1830
  7121     0CA3                     u1831:
  7122     0CA3  2C96               	goto	l2588
  7123     0CA4                     u1830:
  7124     0CA4                     l2592:
  7125     0CA4  3001               	movlw	1
  7126     0CA5                     u1845:
  7127     0CA5  35B2               	lslf	___atdiv@quotient^(0+128),f
  7128     0CA6  0DB3               	rlf	(___atdiv@quotient+1)^(0+128),f
  7129     0CA7  0DB4               	rlf	(___atdiv@quotient+2)^(0+128),f
  7130     0CA8  0B89               	decfsz	9,f
  7131     0CA9  2CA5               	goto	u1845
  7132     0CAA                     l2594:
  7133     0CAA  082B               	movf	(___atdiv@divisor+2)^(0+128),w
  7134     0CAB  022E               	subwf	(___atdiv@dividend+2)^(0+128),w
  7135     0CAC  1D03               	skipz
  7136     0CAD  2CB4               	goto	u1855
  7137     0CAE  082A               	movf	(___atdiv@divisor+1)^(0+128),w
  7138     0CAF  022D               	subwf	(___atdiv@dividend+1)^(0+128),w
  7139     0CB0  1D03               	skipz
  7140     0CB1  2CB4               	goto	u1855
  7141     0CB2  0829               	movf	___atdiv@divisor^(0+128),w
  7142     0CB3  022C               	subwf	___atdiv@dividend^(0+128),w
  7143     0CB4                     u1855:
  7144     0CB4  1C03               	skipc
  7145     0CB5  2CB7               	goto	u1851
  7146     0CB6  2CB8               	goto	u1850
  7147     0CB7                     u1851:
  7148     0CB7  2CBF               	goto	l2600
  7149     0CB8                     u1850:
  7150     0CB8                     l2596:
  7151     0CB8  0829               	movf	___atdiv@divisor^(0+128),w
  7152     0CB9  02AC               	subwf	___atdiv@dividend^(0+128),f
  7153     0CBA  082A               	movf	(___atdiv@divisor+1)^(0+128),w
  7154     0CBB  3BAD               	subwfb	(___atdiv@dividend+1)^(0+128),f
  7155     0CBC  082B               	movf	(___atdiv@divisor+2)^(0+128),w
  7156     0CBD  3BAE               	subwfb	(___atdiv@dividend+2)^(0+128),f
  7157     0CBE                     l2598:
  7158     0CBE  1432               	bsf	___atdiv@quotient^(0+128),0
  7159     0CBF                     l2600:
  7160     0CBF  3001               	movlw	1
  7161     0CC0                     u1865:
  7162     0CC0  36AB               	lsrf	(___atdiv@divisor+2)^(0+128),f
  7163     0CC1  0CAA               	rrf	(___atdiv@divisor+1)^(0+128),f
  7164     0CC2  0CA9               	rrf	___atdiv@divisor^(0+128),f
  7165     0CC3  0B89               	decfsz	9,f
  7166     0CC4  2CC0               	goto	u1865
  7167     0CC5                     l2602:
  7168     0CC5  3001               	movlw	1
  7169     0CC6  02B0               	subwf	___atdiv@counter^(0+128),f
  7170     0CC7  1D03               	btfss	3,2
  7171     0CC8  2CCA               	goto	u1871
  7172     0CC9  2CCB               	goto	u1870
  7173     0CCA                     u1871:
  7174     0CCA  2CA4               	goto	l2592
  7175     0CCB                     u1870:
  7176     0CCB                     l2604:
  7177     0CCB  0831               	movf	___atdiv@sign^(0+128),w
  7178     0CCC  1903               	btfsc	3,2
  7179     0CCD  2CCF               	goto	u1881
  7180     0CCE  2CD0               	goto	u1880
  7181     0CCF                     u1881:
  7182     0CCF  2CD8               	goto	l2608
  7183     0CD0                     u1880:
  7184     0CD0                     l2606:
  7185     0CD0  09B2               	comf	___atdiv@quotient^(0+128),f
  7186     0CD1  09B3               	comf	(___atdiv@quotient+1)^(0+128),f
  7187     0CD2  09B4               	comf	(___atdiv@quotient+2)^(0+128),f
  7188     0CD3  0AB2               	incf	___atdiv@quotient^(0+128),f
  7189     0CD4  1903               	skipnz
  7190     0CD5  0AB3               	incf	(___atdiv@quotient+1)^(0+128),f
  7191     0CD6  1903               	skipnz
  7192     0CD7  0AB4               	incf	(___atdiv@quotient+2)^(0+128),f
  7193     0CD8                     l2608:
  7194     0CD8  0832               	movf	___atdiv@quotient^(0+128),w
  7195     0CD9  00A9               	movwf	?___atdiv^(0+128)
  7196     0CDA  0833               	movf	(___atdiv@quotient+1)^(0+128),w
  7197     0CDB  00AA               	movwf	(?___atdiv+1)^(0+128)
  7198     0CDC  0834               	movf	(___atdiv@quotient+2)^(0+128),w
  7199     0CDD  00AB               	movwf	(?___atdiv+2)^(0+128)
  7200     0CDE                     l1043:
  7201     0CDE  0008               	return
  7202     0CDF                     __end_of___atdiv:
  7203                           
  7204                           	psect	text16
  7205     0028                     __ptext16:	
  7206 ;; *************** function _TMR4_StartTimer *****************
  7207 ;; Defined at:
  7208 ;;		line 79 in file "mcc_generated_files/tmr4.c"
  7209 ;; Parameters:    Size  Location     Type
  7210 ;;		None
  7211 ;; Auto vars:     Size  Location     Type
  7212 ;;		None
  7213 ;; Return value:  Size  Location     Type
  7214 ;;                  1    wreg      void 
  7215 ;; Registers used:
  7216 ;;		None
  7217 ;; Tracked objects:
  7218 ;;		On entry : 0/0
  7219 ;;		On exit  : 0/0
  7220 ;;		Unchanged: 0/0
  7221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7222 ;;      Params:         0       0       0       0       0       0
  7223 ;;      Locals:         0       0       0       0       0       0
  7224 ;;      Temps:          0       0       0       0       0       0
  7225 ;;      Totals:         0       0       0       0       0       0
  7226 ;;Total ram usage:        0 bytes
  7227 ;; Hardware stack levels used: 1
  7228 ;; Hardware stack levels required when called: 5
  7229 ;; This function calls:
  7230 ;;		Nothing
  7231 ;; This function is called by:
  7232 ;;		_controlchoose
  7233 ;; This function uses a non-reentrant model
  7234 ;;
  7235                           
  7236     0028                     _TMR4_StartTimer:	
  7237                           ;psect for function _TMR4_StartTimer
  7238                           
  7239     0028                     l2952:	
  7240                           ;incstack = 0
  7241                           ; Regs used in _TMR4_StartTimer: []
  7242                           
  7243                           
  7244                           ;mcc_generated_files/tmr4.c: 82:     T4CONbits.TMR4ON = 1;
  7245     0028  0028               	movlb	8	; select bank8
  7246     0029  1517               	bsf	23,2	;volatile
  7247     002A                     l123:
  7248     002A  0008               	return
  7249     002B                     __end_of_TMR4_StartTimer:
  7250                           
  7251                           	psect	text17
  7252     0726                     __ptext17:	
  7253 ;; *************** function _analisa_Rx *****************
  7254 ;; Defined at:
  7255 ;;		line 112 in file "main.c"
  7256 ;; Parameters:    Size  Location     Type
  7257 ;;		None
  7258 ;; Auto vars:     Size  Location     Type
  7259 ;;		None
  7260 ;; Return value:  Size  Location     Type
  7261 ;;                  1    wreg      void 
  7262 ;; Registers used:
  7263 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7264 ;; Tracked objects:
  7265 ;;		On entry : 0/0
  7266 ;;		On exit  : 0/0
  7267 ;;		Unchanged: 0/0
  7268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7269 ;;      Params:         0       0       0       0       0       0
  7270 ;;      Locals:         0       0       0       0       0       0
  7271 ;;      Temps:          0       0       2       0       0       0
  7272 ;;      Totals:         0       0       2       0       0       0
  7273 ;;Total ram usage:        2 bytes
  7274 ;; Hardware stack levels used: 1
  7275 ;; Hardware stack levels required when called: 6
  7276 ;; This function calls:
  7277 ;;		_EPWM1_LoadDutyValue
  7278 ;; This function is called by:
  7279 ;;		_main
  7280 ;; This function uses a non-reentrant model
  7281 ;;
  7282                           
  7283     0726                     _analisa_Rx:	
  7284                           ;psect for function _analisa_Rx
  7285                           
  7286     0726                     l3300:	
  7287                           ;incstack = 0
  7288                           ; Regs used in _analisa_Rx: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7289                           
  7290                           
  7291                           ;main.c: 113:     switch(bufferRx[0]){
  7292     0726  2FF0               	goto	l3370
  7293     0727                     l3302:
  7294                           
  7295                           ;main.c: 115:             if(countRx==7){
  7296     0727  3007               	movlw	7
  7297     0728  0021               	movlb	1	; select bank1
  7298     0729  0669               	xorwf	_countRx^(0+128),w
  7299     072A  1D03               	btfss	3,2
  7300     072B  2F2D               	goto	u3081
  7301     072C  2F2E               	goto	u3080
  7302     072D                     u3081:
  7303     072D  2F5E               	goto	l3318
  7304     072E                     u3080:
  7305     072E                     l3304:
  7306                           
  7307                           ;main.c: 116:                 controlchoice = bufferRx[0];
  7308     072E  0020               	movlb	0	; select bank0
  7309     072F  084A               	movf	_bufferRx,w
  7310     0730  0021               	movlb	1	; select bank1
  7311     0731  00ED               	movwf	_controlchoice^(0+128)
  7312                           
  7313                           ;main.c: 117:                 vRx.vH = bufferRx[3];
  7314     0732  0020               	movlb	0	; select bank0
  7315     0733  084D               	movf	_bufferRx+3,w
  7316     0734  0021               	movlb	1	; select bank1
  7317     0735  00DA               	movwf	(_vRx^(0+128)+1)
  7318                           
  7319                           ;main.c: 118:                 vRx.vL = bufferRx[4];
  7320     0736  0020               	movlb	0	; select bank0
  7321     0737  084E               	movf	_bufferRx+4,w
  7322     0738  0021               	movlb	1	; select bank1
  7323     0739  00D9               	movwf	_vRx^(0+128)
  7324                           
  7325                           ;main.c: 119:                 sp_position = vRx.v;
  7326     073A  085A               	movf	(_vRx+1)^(0+128),w
  7327     073B  00DE               	movwf	(_sp_position+1)^(0+128)
  7328     073C  0859               	movf	_vRx^(0+128),w
  7329     073D  00DD               	movwf	_sp_position^(0+128)
  7330                           
  7331                           ;main.c: 120:                 if(sp_position > 380 ) sp_position = 380;
  7332     073E  3001               	movlw	1
  7333     073F  025E               	subwf	(_sp_position+1)^(0+128),w
  7334     0740  307D               	movlw	125
  7335     0741  1903               	skipnz
  7336     0742  025D               	subwf	_sp_position^(0+128),w
  7337     0743  1C03               	skipc
  7338     0744  2F46               	goto	u3091
  7339     0745  2F47               	goto	u3090
  7340     0746                     u3091:
  7341     0746  2F4B               	goto	l3310
  7342     0747                     u3090:
  7343     0747                     l3306:
  7344     0747  307C               	movlw	124
  7345     0748  00DD               	movwf	_sp_position^(0+128)
  7346     0749  3001               	movlw	1
  7347     074A  00DE               	movwf	(_sp_position^(0+128)+1)
  7348     074B                     l3310:
  7349                           
  7350                           ;main.c: 122:                 vRx.vH = bufferRx[5];
  7351     074B  0020               	movlb	0	; select bank0
  7352     074C  084F               	movf	_bufferRx+5,w
  7353     074D  0021               	movlb	1	; select bank1
  7354     074E  00DA               	movwf	(_vRx^(0+128)+1)
  7355     074F                     l3312:
  7356                           
  7357                           ;main.c: 123:                 vRx.vL = bufferRx[6];
  7358     074F  0020               	movlb	0	; select bank0
  7359     0750  0850               	movf	_bufferRx+6,w
  7360     0751  0021               	movlb	1	; select bank1
  7361     0752  00D9               	movwf	_vRx^(0+128)
  7362     0753                     l3314:
  7363                           
  7364                           ;main.c: 124:                 dc = vRx.v;
  7365     0753  085A               	movf	(_vRx+1)^(0+128),w
  7366     0754  00D8               	movwf	(_dc+1)^(0+128)
  7367     0755  0859               	movf	_vRx^(0+128),w
  7368     0756  00D7               	movwf	_dc^(0+128)
  7369     0757                     l3316:
  7370                           
  7371                           ;main.c: 125:                 EPWM1_LoadDutyValue(dc);
  7372     0757  0858               	movf	(_dc+1)^(0+128),w
  7373     0758  00A1               	movwf	(EPWM1_LoadDutyValue@dutyValue+1)^(0+128)
  7374     0759  0857               	movf	_dc^(0+128),w
  7375     075A  00A0               	movwf	EPWM1_LoadDutyValue@dutyValue^(0+128)
  7376     075B  3189  21FF  3187   	fcall	_EPWM1_LoadDutyValue
  7377     075E                     l3318:
  7378                           
  7379                           ;main.c: 127:             countRx = 0;
  7380     075E  0021               	movlb	1	; select bank1
  7381     075F  01E9               	clrf	_countRx^(0+128)
  7382                           
  7383                           ;main.c: 128:             break;
  7384     0760  2FFF               	goto	l642
  7385     0761                     l3320:
  7386                           
  7387                           ;main.c: 130:             if(countRx==7){
  7388     0761  3007               	movlw	7
  7389     0762  0021               	movlb	1	; select bank1
  7390     0763  0669               	xorwf	_countRx^(0+128),w
  7391     0764  1D03               	btfss	3,2
  7392     0765  2F67               	goto	u3101
  7393     0766  2F68               	goto	u3100
  7394     0767                     u3101:
  7395     0767  2F5E               	goto	l3318
  7396     0768                     u3100:
  7397     0768                     l3322:
  7398                           
  7399                           ;main.c: 131:                 controlchoice = bufferRx[0];
  7400     0768  0020               	movlb	0	; select bank0
  7401     0769  084A               	movf	_bufferRx,w
  7402     076A  0021               	movlb	1	; select bank1
  7403     076B  00ED               	movwf	_controlchoice^(0+128)
  7404                           
  7405                           ;main.c: 132:                 vRx.vH = bufferRx[1];
  7406     076C  0020               	movlb	0	; select bank0
  7407     076D  084B               	movf	_bufferRx+1,w
  7408     076E  0021               	movlb	1	; select bank1
  7409     076F  00DA               	movwf	(_vRx^(0+128)+1)
  7410                           
  7411                           ;main.c: 133:                 vRx.vL = bufferRx[2];
  7412     0770  0020               	movlb	0	; select bank0
  7413     0771  084C               	movf	_bufferRx+2,w
  7414     0772  0021               	movlb	1	; select bank1
  7415     0773  00D9               	movwf	_vRx^(0+128)
  7416                           
  7417                           ;main.c: 134:                 sp_height = vRx.v;
  7418     0774  085A               	movf	(_vRx+1)^(0+128),w
  7419     0775  0020               	movlb	0	; select bank0
  7420     0776  00E3               	movwf	_sp_height+1
  7421     0777  0021               	movlb	1	; select bank1
  7422     0778  0859               	movf	_vRx^(0+128),w
  7423     0779  0020               	movlb	0	; select bank0
  7424     077A  00E2               	movwf	_sp_height
  7425     077B                     l3324:
  7426                           
  7427                           ;main.c: 135:                 ballset = vRx.v / 2;
  7428     077B  0021               	movlb	1	; select bank1
  7429     077C  085A               	movf	(_vRx+1)^(0+128),w
  7430     077D  00A5               	movwf	(??_analisa_Rx^(0+128)+1)
  7431     077E  0859               	movf	_vRx^(0+128),w
  7432     077F  00A4               	movwf	??_analisa_Rx^(0+128)
  7433     0780  36A5               	lsrf	(??_analisa_Rx^(0+128)+1),f
  7434     0781  0CA4               	rrf	??_analisa_Rx^(0+128),f
  7435     0782  0824               	movf	??_analisa_Rx^(0+128),w
  7436     0783  0020               	movlb	0	; select bank0
  7437     0784  00D9               	movwf	_ballset
  7438     0785  0021               	movlb	1	; select bank1
  7439     0786  0825               	movf	(??_analisa_Rx+1)^(0+128),w
  7440     0787  0020               	movlb	0	; select bank0
  7441     0788  00DA               	movwf	_ballset+1
  7442     0789  01DB               	clrf	_ballset+2
  7443     078A                     l3326:
  7444                           
  7445                           ;main.c: 136:                 vRx.vH = bufferRx[3];
  7446     078A  084D               	movf	_bufferRx+3,w
  7447     078B  0021               	movlb	1	; select bank1
  7448     078C  00DA               	movwf	(_vRx^(0+128)+1)
  7449     078D                     l3328:
  7450                           
  7451                           ;main.c: 137:                 vRx.vL = bufferRx[4];
  7452     078D  0020               	movlb	0	; select bank0
  7453     078E  084E               	movf	_bufferRx+4,w
  7454     078F  0021               	movlb	1	; select bank1
  7455     0790  00D9               	movwf	_vRx^(0+128)
  7456     0791                     l3330:
  7457                           
  7458                           ;main.c: 138:                 sp_position = vRx.v;
  7459     0791  085A               	movf	(_vRx+1)^(0+128),w
  7460     0792  00DE               	movwf	(_sp_position+1)^(0+128)
  7461     0793  0859               	movf	_vRx^(0+128),w
  7462     0794  00DD               	movwf	_sp_position^(0+128)
  7463     0795                     l3332:
  7464                           
  7465                           ;main.c: 139:                 outputsum = 0;
  7466     0795  3000               	movlw	0
  7467     0796  0021               	movlb	1	; select bank1
  7468     0797  00D1               	movwf	_outputsum^(0+128)
  7469     0798  3000               	movlw	0
  7470     0799  00D2               	movwf	(_outputsum+1)^(0+128)
  7471     079A  3000               	movlw	0
  7472     079B  00D3               	movwf	(_outputsum+2)^(0+128)
  7473     079C                     l3334:
  7474                           
  7475                           ;main.c: 140:                 errorp=0;
  7476     079C  3000               	movlw	0
  7477     079D  0020               	movlb	0	; select bank0
  7478     079E  00DF               	movwf	_errorp
  7479     079F  3000               	movlw	0
  7480     07A0  00E0               	movwf	_errorp+1
  7481     07A1  3000               	movlw	0
  7482     07A2  00E1               	movwf	_errorp+2
  7483     07A3                     l3336:
  7484                           
  7485                           ;main.c: 141:                 error =0;
  7486     07A3  3000               	movlw	0
  7487     07A4  0021               	movlb	1	; select bank1
  7488     07A5  00D4               	movwf	_error^(0+128)
  7489     07A6  3000               	movlw	0
  7490     07A7  00D5               	movwf	(_error+1)^(0+128)
  7491     07A8  3000               	movlw	0
  7492     07A9  00D6               	movwf	(_error+2)^(0+128)
  7493     07AA  2F5E               	goto	l3318
  7494     07AB                     l3340:
  7495                           
  7496                           ;main.c: 146:             if(countRx==7){
  7497     07AB  3007               	movlw	7
  7498     07AC  0021               	movlb	1	; select bank1
  7499     07AD  0669               	xorwf	_countRx^(0+128),w
  7500     07AE  1D03               	btfss	3,2
  7501     07AF  2FB1               	goto	u3111
  7502     07B0  2FB2               	goto	u3110
  7503     07B1                     u3111:
  7504     07B1  2F5E               	goto	l3318
  7505     07B2                     u3110:
  7506     07B2                     l3342:
  7507                           
  7508                           ;main.c: 147:                 controlchoice = bufferRx[0];
  7509     07B2  0020               	movlb	0	; select bank0
  7510     07B3  084A               	movf	_bufferRx,w
  7511     07B4  0021               	movlb	1	; select bank1
  7512     07B5  00ED               	movwf	_controlchoice^(0+128)
  7513                           
  7514                           ;main.c: 148:                 vRx.vH = bufferRx[1];
  7515     07B6  0020               	movlb	0	; select bank0
  7516     07B7  084B               	movf	_bufferRx+1,w
  7517     07B8  0021               	movlb	1	; select bank1
  7518     07B9  00DA               	movwf	(_vRx^(0+128)+1)
  7519                           
  7520                           ;main.c: 149:                 vRx.vL = bufferRx[2];
  7521     07BA  0020               	movlb	0	; select bank0
  7522     07BB  084C               	movf	_bufferRx+2,w
  7523     07BC  0021               	movlb	1	; select bank1
  7524     07BD  00D9               	movwf	_vRx^(0+128)
  7525                           
  7526                           ;main.c: 150:                 sp_height = vRx.v;
  7527     07BE  085A               	movf	(_vRx+1)^(0+128),w
  7528     07BF  0020               	movlb	0	; select bank0
  7529     07C0  00E3               	movwf	_sp_height+1
  7530     07C1  0021               	movlb	1	; select bank1
  7531     07C2  0859               	movf	_vRx^(0+128),w
  7532     07C3  0020               	movlb	0	; select bank0
  7533     07C4  00E2               	movwf	_sp_height
  7534     07C5                     l3344:
  7535                           
  7536                           ;main.c: 151:                 ballset = vRx.v / 2;
  7537     07C5  0021               	movlb	1	; select bank1
  7538     07C6  085A               	movf	(_vRx+1)^(0+128),w
  7539     07C7  00A5               	movwf	(??_analisa_Rx^(0+128)+1)
  7540     07C8  0859               	movf	_vRx^(0+128),w
  7541     07C9  00A4               	movwf	??_analisa_Rx^(0+128)
  7542     07CA  36A5               	lsrf	(??_analisa_Rx^(0+128)+1),f
  7543     07CB  0CA4               	rrf	??_analisa_Rx^(0+128),f
  7544     07CC  0824               	movf	??_analisa_Rx^(0+128),w
  7545     07CD  0020               	movlb	0	; select bank0
  7546     07CE  00D9               	movwf	_ballset
  7547     07CF  0021               	movlb	1	; select bank1
  7548     07D0  0825               	movf	(??_analisa_Rx+1)^(0+128),w
  7549     07D1  0020               	movlb	0	; select bank0
  7550     07D2  00DA               	movwf	_ballset+1
  7551     07D3  01DB               	clrf	_ballset+2
  7552     07D4                     l3346:
  7553                           
  7554                           ;main.c: 152:                 vRx.vH = bufferRx[5];
  7555     07D4  084F               	movf	_bufferRx+5,w
  7556     07D5  0021               	movlb	1	; select bank1
  7557     07D6  00DA               	movwf	(_vRx^(0+128)+1)
  7558     07D7                     l3348:
  7559                           
  7560                           ;main.c: 153:                 vRx.vL = bufferRx[6];
  7561     07D7  0020               	movlb	0	; select bank0
  7562     07D8  0850               	movf	_bufferRx+6,w
  7563     07D9  0021               	movlb	1	; select bank1
  7564     07DA  00D9               	movwf	_vRx^(0+128)
  7565     07DB                     l3350:
  7566                           
  7567                           ;main.c: 154:                 dc = vRx.v;
  7568     07DB  085A               	movf	(_vRx+1)^(0+128),w
  7569     07DC  00D8               	movwf	(_dc+1)^(0+128)
  7570     07DD  0859               	movf	_vRx^(0+128),w
  7571     07DE  00D7               	movwf	_dc^(0+128)
  7572     07DF                     l3352:
  7573                           
  7574                           ;main.c: 155:                 EPWM1_LoadDutyValue(dc);
  7575     07DF  0858               	movf	(_dc+1)^(0+128),w
  7576     07E0  00A1               	movwf	(EPWM1_LoadDutyValue@dutyValue+1)^(0+128)
  7577     07E1  0857               	movf	_dc^(0+128),w
  7578     07E2  00A0               	movwf	EPWM1_LoadDutyValue@dutyValue^(0+128)
  7579     07E3  3189  21FF  3187   	fcall	_EPWM1_LoadDutyValue
  7580     07E6  2F95               	goto	l3332
  7581     07E7                     l3362:
  7582                           
  7583                           ;main.c: 163:             if(countRx==7){
  7584     07E7  3007               	movlw	7
  7585     07E8  0021               	movlb	1	; select bank1
  7586     07E9  0669               	xorwf	_countRx^(0+128),w
  7587     07EA  1D03               	btfss	3,2
  7588     07EB  2FED               	goto	u3121
  7589     07EC  2FEE               	goto	u3120
  7590     07ED                     u3121:
  7591     07ED  2F5E               	goto	l3318
  7592     07EE                     u3120:
  7593     07EE                     l3364:
  7594     07EE  0001               	reset	;# 
  7595     07EF  2F5E               	goto	l3318
  7596     07F0                     l3370:
  7597     07F0  0020               	movlb	0	; select bank0
  7598     07F1  084A               	movf	_bufferRx,w
  7599                           
  7600                           ; Switch size 1, requested type "simple"
  7601                           ; Number of cases is 4, Range of values is 0 to 3
  7602                           ; switch strategies available:
  7603                           ; Name         Instructions Cycles
  7604                           ; simple_byte           13     7 (average)
  7605                           ; direct_byte           14     6 (fixed)
  7606                           ; jumptable            260     6 (fixed)
  7607                           ;	Chosen strategy is simple_byte
  7608     07F2  3A00               	xorlw	0	; case 0
  7609     07F3  1903               	skipnz
  7610     07F4  2F27               	goto	l3302
  7611     07F5  3A01               	xorlw	1	; case 1
  7612     07F6  1903               	skipnz
  7613     07F7  2F61               	goto	l3320
  7614     07F8  3A03               	xorlw	3	; case 2
  7615     07F9  1903               	skipnz
  7616     07FA  2FAB               	goto	l3340
  7617     07FB  3A01               	xorlw	1	; case 3
  7618     07FC  1903               	skipnz
  7619     07FD  2FE7               	goto	l3362
  7620     07FE  2F5E               	goto	l3318
  7621     07FF                     l642:
  7622     07FF  0008               	return
  7623     0800                     __end_of_analisa_Rx:
  7624                           
  7625                           	psect	text18
  7626     09FF                     __ptext18:	
  7627 ;; *************** function _EPWM1_LoadDutyValue *****************
  7628 ;; Defined at:
  7629 ;;		line 90 in file "mcc_generated_files/epwm1.c"
  7630 ;; Parameters:    Size  Location     Type
  7631 ;;  dutyValue       2    0[BANK1 ] unsigned short 
  7632 ;; Auto vars:     Size  Location     Type
  7633 ;;		None
  7634 ;; Return value:  Size  Location     Type
  7635 ;;                  1    wreg      void 
  7636 ;; Registers used:
  7637 ;;		wreg, status,2, status,0
  7638 ;; Tracked objects:
  7639 ;;		On entry : 0/0
  7640 ;;		On exit  : 0/0
  7641 ;;		Unchanged: 0/0
  7642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7643 ;;      Params:         0       0       2       0       0       0
  7644 ;;      Locals:         0       0       0       0       0       0
  7645 ;;      Temps:          0       0       2       0       0       0
  7646 ;;      Totals:         0       0       4       0       0       0
  7647 ;;Total ram usage:        4 bytes
  7648 ;; Hardware stack levels used: 1
  7649 ;; Hardware stack levels required when called: 5
  7650 ;; This function calls:
  7651 ;;		Nothing
  7652 ;; This function is called by:
  7653 ;;		_pwmcontrol
  7654 ;;		_analisa_Rx
  7655 ;; This function uses a non-reentrant model
  7656 ;;
  7657                           
  7658     09FF                     _EPWM1_LoadDutyValue:	
  7659                           ;psect for function _EPWM1_LoadDutyValue
  7660                           
  7661     09FF                     l2522:	
  7662                           ;incstack = 0
  7663                           ; Regs used in _EPWM1_LoadDutyValue: [wreg+status,2+status,0]
  7664                           
  7665                           
  7666                           ;mcc_generated_files/epwm1.c: 90: void EPWM1_LoadDutyValue(uint16_t dutyValue);mcc_gener
      +                          ated_files/epwm1.c: 91: {;mcc_generated_files/epwm1.c: 93:     CCPR1L = ((dutyValue & 0x
      +                          03FC)>>2);
  7667     09FF  0021               	movlb	1	; select bank1
  7668     0A00  0821               	movf	(EPWM1_LoadDutyValue@dutyValue+1)^(0+128),w
  7669     0A01  00A3               	movwf	(??_EPWM1_LoadDutyValue^(0+128)+1)
  7670     0A02  0820               	movf	EPWM1_LoadDutyValue@dutyValue^(0+128),w
  7671     0A03  00A2               	movwf	??_EPWM1_LoadDutyValue^(0+128)
  7672     0A04  36A3               	lsrf	(??_EPWM1_LoadDutyValue^(0+128)+1),f
  7673     0A05  0CA2               	rrf	??_EPWM1_LoadDutyValue^(0+128),f
  7674     0A06  36A3               	lsrf	(??_EPWM1_LoadDutyValue^(0+128)+1),f
  7675     0A07  0CA2               	rrf	??_EPWM1_LoadDutyValue^(0+128),f
  7676     0A08  0822               	movf	??_EPWM1_LoadDutyValue^(0+128),w
  7677     0A09  0025               	movlb	5	; select bank5
  7678     0A0A  0091               	movwf	17	;volatile
  7679                           
  7680                           ;mcc_generated_files/epwm1.c: 96:     CCP1CON = ((uint8_t)(CCP1CON & 0xCF) | ((dutyValue
      +                           & 0x0003)<<4));
  7681     0A0B  0021               	movlb	1	; select bank1
  7682     0A0C  0820               	movf	EPWM1_LoadDutyValue@dutyValue^(0+128),w
  7683     0A0D  3903               	andlw	3
  7684     0A0E  00A2               	movwf	??_EPWM1_LoadDutyValue^(0+128)
  7685     0A0F  3004               	movlw	4
  7686     0A10                     u1725:
  7687     0A10  35A2               	lslf	??_EPWM1_LoadDutyValue^(0+128),f
  7688     0A11  0B89               	decfsz	9,f
  7689     0A12  2A10               	goto	u1725
  7690     0A13  0025               	movlb	5	; select bank5
  7691     0A14  0813               	movf	19,w	;volatile
  7692     0A15  39CF               	andlw	207
  7693     0A16  0021               	movlb	1	; select bank1
  7694     0A17  0422               	iorwf	??_EPWM1_LoadDutyValue^(0+128),w
  7695     0A18  0025               	movlb	5	; select bank5
  7696     0A19  0093               	movwf	19	;volatile
  7697     0A1A                     l159:
  7698     0A1A  0008               	return
  7699     0A1B                     __end_of_EPWM1_LoadDutyValue:
  7700                           
  7701                           	psect	text19
  7702     08CC                     __ptext19:	
  7703 ;; *************** function _TMR6_WriteTimer *****************
  7704 ;; Defined at:
  7705 ;;		line 100 in file "mcc_generated_files/tmr6.c"
  7706 ;; Parameters:    Size  Location     Type
  7707 ;;  timerVal        1    wreg     unsigned char 
  7708 ;; Auto vars:     Size  Location     Type
  7709 ;;  timerVal        1    0[BANK1 ] unsigned char 
  7710 ;; Return value:  Size  Location     Type
  7711 ;;                  1    wreg      void 
  7712 ;; Registers used:
  7713 ;;		wreg
  7714 ;; Tracked objects:
  7715 ;;		On entry : 0/0
  7716 ;;		On exit  : 0/0
  7717 ;;		Unchanged: 0/0
  7718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7719 ;;      Params:         0       0       0       0       0       0
  7720 ;;      Locals:         0       0       1       0       0       0
  7721 ;;      Temps:          0       0       0       0       0       0
  7722 ;;      Totals:         0       0       1       0       0       0
  7723 ;;Total ram usage:        1 bytes
  7724 ;; Hardware stack levels used: 1
  7725 ;; Hardware stack levels required when called: 5
  7726 ;; This function calls:
  7727 ;;		Nothing
  7728 ;; This function is called by:
  7729 ;;		_main
  7730 ;; This function uses a non-reentrant model
  7731 ;;
  7732                           
  7733     08CC                     _TMR6_WriteTimer:	
  7734                           ;psect for function _TMR6_WriteTimer
  7735                           
  7736                           
  7737                           ;incstack = 0
  7738                           ; Regs used in _TMR6_WriteTimer: [wreg]
  7739                           ;TMR6_WriteTimer@timerVal stored from wreg
  7740     08CC  0021               	movlb	1	; select bank1
  7741     08CD  00A0               	movwf	TMR6_WriteTimer@timerVal^(0+128)
  7742     08CE                     l3256:
  7743                           
  7744                           ;mcc_generated_files/tmr6.c: 100: void TMR6_WriteTimer(uint8_t timerVal);mcc_generated_f
      +                          iles/tmr6.c: 101: {;mcc_generated_files/tmr6.c: 103:     TMR6 = timerVal;
  7745     08CE  0820               	movf	TMR6_WriteTimer@timerVal^(0+128),w
  7746     08CF  0028               	movlb	8	; select bank8
  7747     08D0  009C               	movwf	28	;volatile
  7748     08D1                     l389:
  7749     08D1  0008               	return
  7750     08D2                     __end_of_TMR6_WriteTimer:
  7751                           
  7752                           	psect	text20
  7753     0022                     __ptext20:	
  7754 ;; *************** function _TMR6_LoadPeriodRegister *****************
  7755 ;; Defined at:
  7756 ;;		line 106 in file "mcc_generated_files/tmr6.c"
  7757 ;; Parameters:    Size  Location     Type
  7758 ;;  periodVal       1    wreg     unsigned char 
  7759 ;; Auto vars:     Size  Location     Type
  7760 ;;  periodVal       1    0[BANK1 ] unsigned char 
  7761 ;; Return value:  Size  Location     Type
  7762 ;;                  1    wreg      void 
  7763 ;; Registers used:
  7764 ;;		wreg
  7765 ;; Tracked objects:
  7766 ;;		On entry : 0/0
  7767 ;;		On exit  : 0/0
  7768 ;;		Unchanged: 0/0
  7769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7770 ;;      Params:         0       0       0       0       0       0
  7771 ;;      Locals:         0       0       1       0       0       0
  7772 ;;      Temps:          0       0       0       0       0       0
  7773 ;;      Totals:         0       0       1       0       0       0
  7774 ;;Total ram usage:        1 bytes
  7775 ;; Hardware stack levels used: 1
  7776 ;; Hardware stack levels required when called: 5
  7777 ;; This function calls:
  7778 ;;		Nothing
  7779 ;; This function is called by:
  7780 ;;		_main
  7781 ;; This function uses a non-reentrant model
  7782 ;;
  7783                           
  7784     0022                     _TMR6_LoadPeriodRegister:	
  7785                           ;psect for function _TMR6_LoadPeriodRegister
  7786                           
  7787                           
  7788                           ;incstack = 0
  7789                           ; Regs used in _TMR6_LoadPeriodRegister: [wreg]
  7790                           ;TMR6_LoadPeriodRegister@periodVal stored from wreg
  7791     0022  0021               	movlb	1	; select bank1
  7792     0023  00A0               	movwf	TMR6_LoadPeriodRegister@periodVal^(0+128)
  7793     0024                     l3258:
  7794                           
  7795                           ;mcc_generated_files/tmr6.c: 106: void TMR6_LoadPeriodRegister(uint8_t periodVal);mcc_ge
      +                          nerated_files/tmr6.c: 107: {;mcc_generated_files/tmr6.c: 108:    PR6 = periodVal;
  7796     0024  0820               	movf	TMR6_LoadPeriodRegister@periodVal^(0+128),w
  7797     0025  0028               	movlb	8	; select bank8
  7798     0026  009D               	movwf	29	;volatile
  7799     0027                     l392:
  7800     0027  0008               	return
  7801     0028                     __end_of_TMR6_LoadPeriodRegister:
  7802                           
  7803                           	psect	text21
  7804     001F                     __ptext21:	
  7805 ;; *************** function _TMR4_StopTimer *****************
  7806 ;; Defined at:
  7807 ;;		line 85 in file "mcc_generated_files/tmr4.c"
  7808 ;; Parameters:    Size  Location     Type
  7809 ;;		None
  7810 ;; Auto vars:     Size  Location     Type
  7811 ;;		None
  7812 ;; Return value:  Size  Location     Type
  7813 ;;                  1    wreg      void 
  7814 ;; Registers used:
  7815 ;;		None
  7816 ;; Tracked objects:
  7817 ;;		On entry : 0/0
  7818 ;;		On exit  : 0/0
  7819 ;;		Unchanged: 0/0
  7820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7821 ;;      Params:         0       0       0       0       0       0
  7822 ;;      Locals:         0       0       0       0       0       0
  7823 ;;      Temps:          0       0       0       0       0       0
  7824 ;;      Totals:         0       0       0       0       0       0
  7825 ;;Total ram usage:        0 bytes
  7826 ;; Hardware stack levels used: 1
  7827 ;; Hardware stack levels required when called: 5
  7828 ;; This function calls:
  7829 ;;		Nothing
  7830 ;; This function is called by:
  7831 ;;		_main
  7832 ;; This function uses a non-reentrant model
  7833 ;;
  7834                           
  7835     001F                     _TMR4_StopTimer:	
  7836                           ;psect for function _TMR4_StopTimer
  7837                           
  7838     001F                     l3228:	
  7839                           ;incstack = 0
  7840                           ; Regs used in _TMR4_StopTimer: []
  7841                           
  7842                           
  7843                           ;mcc_generated_files/tmr4.c: 88:     T4CONbits.TMR4ON = 0;
  7844     001F  0028               	movlb	8	; select bank8
  7845     0020  1117               	bcf	23,2	;volatile
  7846     0021                     l126:
  7847     0021  0008               	return
  7848     0022                     __end_of_TMR4_StopTimer:
  7849                           
  7850                           	psect	text22
  7851     0019                     __ptext22:	
  7852 ;; *************** function _TMR0_ReadTimer *****************
  7853 ;; Defined at:
  7854 ;;		line 80 in file "mcc_generated_files/tmr0.c"
  7855 ;; Parameters:    Size  Location     Type
  7856 ;;		None
  7857 ;; Auto vars:     Size  Location     Type
  7858 ;;  readVal         1    0[BANK1 ] unsigned char 
  7859 ;; Return value:  Size  Location     Type
  7860 ;;                  1    wreg      unsigned char 
  7861 ;; Registers used:
  7862 ;;		wreg
  7863 ;; Tracked objects:
  7864 ;;		On entry : 0/0
  7865 ;;		On exit  : 0/0
  7866 ;;		Unchanged: 0/0
  7867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7868 ;;      Params:         0       0       0       0       0       0
  7869 ;;      Locals:         0       0       1       0       0       0
  7870 ;;      Temps:          0       0       0       0       0       0
  7871 ;;      Totals:         0       0       1       0       0       0
  7872 ;;Total ram usage:        1 bytes
  7873 ;; Hardware stack levels used: 1
  7874 ;; Hardware stack levels required when called: 5
  7875 ;; This function calls:
  7876 ;;		Nothing
  7877 ;; This function is called by:
  7878 ;;		_main
  7879 ;; This function uses a non-reentrant model
  7880 ;;
  7881                           
  7882     0019                     _TMR0_ReadTimer:	
  7883                           ;psect for function _TMR0_ReadTimer
  7884                           
  7885     0019                     l3252:	
  7886                           ;incstack = 0
  7887                           ; Regs used in _TMR0_ReadTimer: [wreg]
  7888                           
  7889                           
  7890                           ;mcc_generated_files/tmr0.c: 82:     uint8_t readVal;;mcc_generated_files/tmr0.c: 84:   
      +                            readVal = TMR0;
  7891     0019  0020               	movlb	0	; select bank0
  7892     001A  0815               	movf	21,w	;volatile
  7893     001B  0021               	movlb	1	; select bank1
  7894     001C  00A0               	movwf	TMR0_ReadTimer@readVal^(0+128)
  7895                           
  7896                           ;mcc_generated_files/tmr0.c: 86:     return readVal;
  7897     001D  0820               	movf	TMR0_ReadTimer@readVal^(0+128),w
  7898     001E                     l282:
  7899     001E  0008               	return
  7900     001F                     __end_of_TMR0_ReadTimer:
  7901                           
  7902                           	psect	text23
  7903     0ACB                     __ptext23:	
  7904 ;; *************** function _SYSTEM_Initialize *****************
  7905 ;; Defined at:
  7906 ;;		line 50 in file "mcc_generated_files/mcc.c"
  7907 ;; Parameters:    Size  Location     Type
  7908 ;;		None
  7909 ;; Auto vars:     Size  Location     Type
  7910 ;;		None
  7911 ;; Return value:  Size  Location     Type
  7912 ;;                  1    wreg      void 
  7913 ;; Registers used:
  7914 ;;		wreg, status,2, status,0, pclath, cstack
  7915 ;; Tracked objects:
  7916 ;;		On entry : 0/0
  7917 ;;		On exit  : 0/0
  7918 ;;		Unchanged: 0/0
  7919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7920 ;;      Params:         0       0       0       0       0       0
  7921 ;;      Locals:         0       0       0       0       0       0
  7922 ;;      Temps:          0       0       0       0       0       0
  7923 ;;      Totals:         0       0       0       0       0       0
  7924 ;;Total ram usage:        0 bytes
  7925 ;; Hardware stack levels used: 1
  7926 ;; Hardware stack levels required when called: 7
  7927 ;; This function calls:
  7928 ;;		_ADC_Initialize
  7929 ;;		_CMP1_Initialize
  7930 ;;		_DAC_Initialize
  7931 ;;		_EPWM1_Initialize
  7932 ;;		_EUSART_Initialize
  7933 ;;		_FVR_Initialize
  7934 ;;		_OSCILLATOR_Initialize
  7935 ;;		_PIN_MANAGER_Initialize
  7936 ;;		_TMR0_Initialize
  7937 ;;		_TMR1_Initialize
  7938 ;;		_TMR2_Initialize
  7939 ;;		_TMR4_Initialize
  7940 ;;		_TMR6_Initialize
  7941 ;;		_WDT_Initialize
  7942 ;; This function is called by:
  7943 ;;		_main
  7944 ;; This function uses a non-reentrant model
  7945 ;;
  7946                           
  7947     0ACB                     _SYSTEM_Initialize:	
  7948                           ;psect for function _SYSTEM_Initialize
  7949                           
  7950     0ACB                     l3226:	
  7951                           ;incstack = 0
  7952                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7953                           
  7954                           
  7955                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  7956     0ACB  3189  219C  318A   	fcall	_PIN_MANAGER_Initialize
  7957                           
  7958                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  7959     0ACE  3188  20DE  318A   	fcall	_OSCILLATOR_Initialize
  7960                           
  7961                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  7962     0AD1  3180  2015  318A   	fcall	_WDT_Initialize
  7963                           
  7964                           ;mcc_generated_files/mcc.c: 56:     DAC_Initialize();
  7965     0AD4  3180  200B  318A   	fcall	_DAC_Initialize
  7966                           
  7967                           ;mcc_generated_files/mcc.c: 57:     FVR_Initialize();
  7968     0AD7  3180  2011  318A   	fcall	_FVR_Initialize
  7969                           
  7970                           ;mcc_generated_files/mcc.c: 58:     TMR4_Initialize();
  7971     0ADA  3189  212C  318A   	fcall	_TMR4_Initialize
  7972                           
  7973                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
  7974     0ADD  3188  20ED  318A   	fcall	_TMR2_Initialize
  7975                           
  7976                           ;mcc_generated_files/mcc.c: 60:     TMR0_Initialize();
  7977     0AE0  3189  2122  318A   	fcall	_TMR0_Initialize
  7978                           
  7979                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
  7980     0AE3  3189  2136  318A   	fcall	_TMR6_Initialize
  7981                           
  7982                           ;mcc_generated_files/mcc.c: 62:     CMP1_Initialize();
  7983     0AE6  3180  2005  318A   	fcall	_CMP1_Initialize
  7984                           
  7985                           ;mcc_generated_files/mcc.c: 63:     ADC_Initialize();
  7986     0AE9  3188  20E5  318A   	fcall	_ADC_Initialize
  7987                           
  7988                           ;mcc_generated_files/mcc.c: 64:     EPWM1_Initialize();
  7989     0AEC  3189  214C  318A   	fcall	_EPWM1_Initialize
  7990                           
  7991                           ;mcc_generated_files/mcc.c: 65:     TMR1_Initialize();
  7992     0AEF  3189  21E3  318A   	fcall	_TMR1_Initialize
  7993                           
  7994                           ;mcc_generated_files/mcc.c: 66:     EUSART_Initialize();
  7995     0AF2  318A  227E  318A   	fcall	_EUSART_Initialize
  7996     0AF5                     l39:
  7997     0AF5  0008               	return
  7998     0AF6                     __end_of_SYSTEM_Initialize:
  7999                           
  8000                           	psect	text24
  8001     0015                     __ptext24:	
  8002 ;; *************** function _WDT_Initialize *****************
  8003 ;; Defined at:
  8004 ;;		line 79 in file "mcc_generated_files/mcc.c"
  8005 ;; Parameters:    Size  Location     Type
  8006 ;;		None
  8007 ;; Auto vars:     Size  Location     Type
  8008 ;;		None
  8009 ;; Return value:  Size  Location     Type
  8010 ;;                  1    wreg      void 
  8011 ;; Registers used:
  8012 ;;		wreg
  8013 ;; Tracked objects:
  8014 ;;		On entry : 0/0
  8015 ;;		On exit  : 0/0
  8016 ;;		Unchanged: 0/0
  8017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8018 ;;      Params:         0       0       0       0       0       0
  8019 ;;      Locals:         0       0       0       0       0       0
  8020 ;;      Temps:          0       0       0       0       0       0
  8021 ;;      Totals:         0       0       0       0       0       0
  8022 ;;Total ram usage:        0 bytes
  8023 ;; Hardware stack levels used: 1
  8024 ;; Hardware stack levels required when called: 5
  8025 ;; This function calls:
  8026 ;;		Nothing
  8027 ;; This function is called by:
  8028 ;;		_SYSTEM_Initialize
  8029 ;; This function uses a non-reentrant model
  8030 ;;
  8031                           
  8032     0015                     _WDT_Initialize:	
  8033                           ;psect for function _WDT_Initialize
  8034                           
  8035     0015                     l2866:	
  8036                           ;incstack = 0
  8037                           ; Regs used in _WDT_Initialize: [wreg]
  8038                           
  8039                           
  8040                           ;mcc_generated_files/mcc.c: 82:     WDTCON = 0x16;
  8041     0015  3016               	movlw	22
  8042     0016  0021               	movlb	1	; select bank1
  8043     0017  0097               	movwf	23	;volatile
  8044     0018                     l45:
  8045     0018  0008               	return
  8046     0019                     __end_of_WDT_Initialize:
  8047                           
  8048                           	psect	text25
  8049     0936                     __ptext25:	
  8050 ;; *************** function _TMR6_Initialize *****************
  8051 ;; Defined at:
  8052 ;;		line 62 in file "mcc_generated_files/tmr6.c"
  8053 ;; Parameters:    Size  Location     Type
  8054 ;;		None
  8055 ;; Auto vars:     Size  Location     Type
  8056 ;;		None
  8057 ;; Return value:  Size  Location     Type
  8058 ;;                  1    wreg      void 
  8059 ;; Registers used:
  8060 ;;		wreg, status,2
  8061 ;; Tracked objects:
  8062 ;;		On entry : 0/0
  8063 ;;		On exit  : 0/0
  8064 ;;		Unchanged: 0/0
  8065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8066 ;;      Params:         0       0       0       0       0       0
  8067 ;;      Locals:         0       0       0       0       0       0
  8068 ;;      Temps:          0       0       0       0       0       0
  8069 ;;      Totals:         0       0       0       0       0       0
  8070 ;;Total ram usage:        0 bytes
  8071 ;; Hardware stack levels used: 1
  8072 ;; Hardware stack levels required when called: 5
  8073 ;; This function calls:
  8074 ;;		Nothing
  8075 ;; This function is called by:
  8076 ;;		_SYSTEM_Initialize
  8077 ;; This function uses a non-reentrant model
  8078 ;;
  8079                           
  8080     0936                     _TMR6_Initialize:	
  8081                           ;psect for function _TMR6_Initialize
  8082                           
  8083     0936                     l2896:	
  8084                           ;incstack = 0
  8085                           ; Regs used in _TMR6_Initialize: [wreg+status,2]
  8086                           
  8087                           
  8088                           ;mcc_generated_files/tmr6.c: 67:     PR6 = 0x4A;
  8089     0936  304A               	movlw	74
  8090     0937  0028               	movlb	8	; select bank8
  8091     0938  009D               	movwf	29	;volatile
  8092     0939                     l2898:
  8093                           
  8094                           ;mcc_generated_files/tmr6.c: 70:     TMR6 = 0x00;
  8095     0939  019C               	clrf	28	;volatile
  8096     093A                     l2900:
  8097                           
  8098                           ;mcc_generated_files/tmr6.c: 73:     PIR3bits.TMR6IF = 0;
  8099     093A  0020               	movlb	0	; select bank0
  8100     093B  1193               	bcf	19,3	;volatile
  8101     093C                     l2902:
  8102                           
  8103                           ;mcc_generated_files/tmr6.c: 76:     T6CON = 0x4F;
  8104     093C  304F               	movlw	79
  8105     093D  0028               	movlb	8	; select bank8
  8106     093E  009E               	movwf	30	;volatile
  8107     093F                     l377:
  8108     093F  0008               	return
  8109     0940                     __end_of_TMR6_Initialize:
  8110                           
  8111                           	psect	text26
  8112     092C                     __ptext26:	
  8113 ;; *************** function _TMR4_Initialize *****************
  8114 ;; Defined at:
  8115 ;;		line 62 in file "mcc_generated_files/tmr4.c"
  8116 ;; Parameters:    Size  Location     Type
  8117 ;;		None
  8118 ;; Auto vars:     Size  Location     Type
  8119 ;;		None
  8120 ;; Return value:  Size  Location     Type
  8121 ;;                  1    wreg      void 
  8122 ;; Registers used:
  8123 ;;		wreg, status,2
  8124 ;; Tracked objects:
  8125 ;;		On entry : 0/0
  8126 ;;		On exit  : 0/0
  8127 ;;		Unchanged: 0/0
  8128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8129 ;;      Params:         0       0       0       0       0       0
  8130 ;;      Locals:         0       0       0       0       0       0
  8131 ;;      Temps:          0       0       0       0       0       0
  8132 ;;      Totals:         0       0       0       0       0       0
  8133 ;;Total ram usage:        0 bytes
  8134 ;; Hardware stack levels used: 1
  8135 ;; Hardware stack levels required when called: 5
  8136 ;; This function calls:
  8137 ;;		Nothing
  8138 ;; This function is called by:
  8139 ;;		_SYSTEM_Initialize
  8140 ;; This function uses a non-reentrant model
  8141 ;;
  8142                           
  8143     092C                     _TMR4_Initialize:	
  8144                           ;psect for function _TMR4_Initialize
  8145                           
  8146     092C                     l2872:	
  8147                           ;incstack = 0
  8148                           ; Regs used in _TMR4_Initialize: [wreg+status,2]
  8149                           
  8150                           
  8151                           ;mcc_generated_files/tmr4.c: 67:     PR4 = 0xFF;
  8152     092C  30FF               	movlw	255
  8153     092D  0028               	movlb	8	; select bank8
  8154     092E  0096               	movwf	22	;volatile
  8155     092F                     l2874:
  8156                           
  8157                           ;mcc_generated_files/tmr4.c: 70:     TMR4 = 0x00;
  8158     092F  0195               	clrf	21	;volatile
  8159     0930                     l2876:
  8160                           
  8161                           ;mcc_generated_files/tmr4.c: 73:     PIR3bits.TMR4IF = 0;
  8162     0930  0020               	movlb	0	; select bank0
  8163     0931  1093               	bcf	19,1	;volatile
  8164     0932                     l2878:
  8165                           
  8166                           ;mcc_generated_files/tmr4.c: 76:     T4CON = 0x07;
  8167     0932  3007               	movlw	7
  8168     0933  0028               	movlb	8	; select bank8
  8169     0934  0097               	movwf	23	;volatile
  8170     0935                     l120:
  8171     0935  0008               	return
  8172     0936                     __end_of_TMR4_Initialize:
  8173                           
  8174                           	psect	text27
  8175     08ED                     __ptext27:	
  8176 ;; *************** function _TMR2_Initialize *****************
  8177 ;; Defined at:
  8178 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  8179 ;; Parameters:    Size  Location     Type
  8180 ;;		None
  8181 ;; Auto vars:     Size  Location     Type
  8182 ;;		None
  8183 ;; Return value:  Size  Location     Type
  8184 ;;                  1    wreg      void 
  8185 ;; Registers used:
  8186 ;;		wreg, status,2
  8187 ;; Tracked objects:
  8188 ;;		On entry : 0/0
  8189 ;;		On exit  : 0/0
  8190 ;;		Unchanged: 0/0
  8191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8192 ;;      Params:         0       0       0       0       0       0
  8193 ;;      Locals:         0       0       0       0       0       0
  8194 ;;      Temps:          0       0       0       0       0       0
  8195 ;;      Totals:         0       0       0       0       0       0
  8196 ;;Total ram usage:        0 bytes
  8197 ;; Hardware stack levels used: 1
  8198 ;; Hardware stack levels required when called: 5
  8199 ;; This function calls:
  8200 ;;		Nothing
  8201 ;; This function is called by:
  8202 ;;		_SYSTEM_Initialize
  8203 ;; This function uses a non-reentrant model
  8204 ;;
  8205                           
  8206     08ED                     _TMR2_Initialize:	
  8207                           ;psect for function _TMR2_Initialize
  8208                           
  8209     08ED                     l2880:	
  8210                           ;incstack = 0
  8211                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  8212                           
  8213                           
  8214                           ;mcc_generated_files/tmr2.c: 67:     PR2 = 0xFF;
  8215     08ED  30FF               	movlw	255
  8216     08EE  0020               	movlb	0	; select bank0
  8217     08EF  009B               	movwf	27	;volatile
  8218     08F0                     l2882:
  8219                           
  8220                           ;mcc_generated_files/tmr2.c: 70:     TMR2 = 0x00;
  8221     08F0  019A               	clrf	26	;volatile
  8222     08F1                     l2884:
  8223                           
  8224                           ;mcc_generated_files/tmr2.c: 73:     PIR1bits.TMR2IF = 0;
  8225     08F1  1091               	bcf	17,1	;volatile
  8226     08F2                     l2886:
  8227                           
  8228                           ;mcc_generated_files/tmr2.c: 76:     T2CON = 0x04;
  8229     08F2  3004               	movlw	4
  8230     08F3  009C               	movwf	28	;volatile
  8231     08F4                     l88:
  8232     08F4  0008               	return
  8233     08F5                     __end_of_TMR2_Initialize:
  8234                           
  8235                           	psect	text28
  8236     09E3                     __ptext28:	
  8237 ;; *************** function _TMR1_Initialize *****************
  8238 ;; Defined at:
  8239 ;;		line 65 in file "mcc_generated_files/tmr1.c"
  8240 ;; Parameters:    Size  Location     Type
  8241 ;;		None
  8242 ;; Auto vars:     Size  Location     Type
  8243 ;;		None
  8244 ;; Return value:  Size  Location     Type
  8245 ;;                  1    wreg      void 
  8246 ;; Registers used:
  8247 ;;		wreg, status,2, status,0, pclath, cstack
  8248 ;; Tracked objects:
  8249 ;;		On entry : 0/0
  8250 ;;		On exit  : 0/0
  8251 ;;		Unchanged: 0/0
  8252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8253 ;;      Params:         0       0       0       0       0       0
  8254 ;;      Locals:         0       0       0       0       0       0
  8255 ;;      Temps:          0       0       0       0       0       0
  8256 ;;      Totals:         0       0       0       0       0       0
  8257 ;;Total ram usage:        0 bytes
  8258 ;; Hardware stack levels used: 1
  8259 ;; Hardware stack levels required when called: 6
  8260 ;; This function calls:
  8261 ;;		_TMR1_SetGateInterruptHandler
  8262 ;; This function is called by:
  8263 ;;		_SYSTEM_Initialize
  8264 ;; This function uses a non-reentrant model
  8265 ;;
  8266                           
  8267     09E3                     _TMR1_Initialize:	
  8268                           ;psect for function _TMR1_Initialize
  8269                           
  8270     09E3                     l2924:	
  8271                           ;incstack = 0
  8272                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8273                           
  8274                           
  8275                           ;mcc_generated_files/tmr1.c: 70:     T1GCON = 0xC0;
  8276     09E3  30C0               	movlw	192
  8277     09E4  0020               	movlb	0	; select bank0
  8278     09E5  0099               	movwf	25	;volatile
  8279     09E6                     l2926:
  8280                           
  8281                           ;mcc_generated_files/tmr1.c: 73:     TMR1H = 0x00;
  8282     09E6  0197               	clrf	23	;volatile
  8283     09E7                     l2928:
  8284                           
  8285                           ;mcc_generated_files/tmr1.c: 76:     TMR1L = 0x00;
  8286     09E7  0196               	clrf	22	;volatile
  8287     09E8                     l2930:
  8288                           
  8289                           ;mcc_generated_files/tmr1.c: 79:     PIR1bits.TMR1IF = 0;
  8290     09E8  1011               	bcf	17,0	;volatile
  8291                           
  8292                           ;mcc_generated_files/tmr1.c: 82:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  8293     09E9  0817               	movf	23,w	;volatile
  8294     09EA  0021               	movlb	1	; select bank1
  8295     09EB  00E6               	movwf	(_timer1ReloadVal+1)^(0+128)	;volatile
  8296     09EC  0020               	movlb	0	; select bank0
  8297     09ED  0816               	movf	22,w	;volatile
  8298     09EE  0021               	movlb	1	; select bank1
  8299     09EF  00E5               	movwf	_timer1ReloadVal^(0+128)	;volatile
  8300     09F0                     l2932:
  8301                           
  8302                           ;mcc_generated_files/tmr1.c: 85:     PIR1bits.TMR1GIF = 0;
  8303     09F0  0020               	movlb	0	; select bank0
  8304     09F1  1391               	bcf	17,7	;volatile
  8305     09F2                     l2934:
  8306                           
  8307                           ;mcc_generated_files/tmr1.c: 88:     PIE1bits.TMR1GIE = 1;
  8308     09F2  0021               	movlb	1	; select bank1
  8309     09F3  1791               	bsf	17,7	;volatile
  8310     09F4                     l2936:
  8311                           
  8312                           ;mcc_generated_files/tmr1.c: 91:     TMR1_SetGateInterruptHandler(TMR1_DefaultGateInterr
      +                          uptHandler);
  8313     09F4  3003               	movlw	low _TMR1_DefaultGateInterruptHandler
  8314     09F5  00A0               	movwf	TMR1_SetGateInterruptHandler@InterruptHandler^(0+128)
  8315     09F6  3000               	movlw	high _TMR1_DefaultGateInterruptHandler
  8316     09F7  00A1               	movwf	(TMR1_SetGateInterruptHandler@InterruptHandler^(0+128)+1)
  8317     09F8  3189  2119  3189   	fcall	_TMR1_SetGateInterruptHandler
  8318     09FB                     l2938:
  8319                           
  8320                           ;mcc_generated_files/tmr1.c: 94:     T1CON = 0x01;
  8321     09FB  3001               	movlw	1
  8322     09FC  0020               	movlb	0	; select bank0
  8323     09FD  0098               	movwf	24	;volatile
  8324     09FE                     l423:
  8325     09FE  0008               	return
  8326     09FF                     __end_of_TMR1_Initialize:
  8327                           
  8328                           	psect	text29
  8329     0919                     __ptext29:	
  8330 ;; *************** function _TMR1_SetGateInterruptHandler *****************
  8331 ;; Defined at:
  8332 ;;		line 177 in file "mcc_generated_files/tmr1.c"
  8333 ;; Parameters:    Size  Location     Type
  8334 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  8335 ;;		 -> mede_height(1), TMR1_DefaultGateInterruptHandler(1), 
  8336 ;; Auto vars:     Size  Location     Type
  8337 ;;		None
  8338 ;; Return value:  Size  Location     Type
  8339 ;;                  1    wreg      void 
  8340 ;; Registers used:
  8341 ;;		wreg
  8342 ;; Tracked objects:
  8343 ;;		On entry : 0/0
  8344 ;;		On exit  : 0/0
  8345 ;;		Unchanged: 0/0
  8346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8347 ;;      Params:         0       0       2       0       0       0
  8348 ;;      Locals:         0       0       0       0       0       0
  8349 ;;      Temps:          0       0       0       0       0       0
  8350 ;;      Totals:         0       0       2       0       0       0
  8351 ;;Total ram usage:        2 bytes
  8352 ;; Hardware stack levels used: 1
  8353 ;; Hardware stack levels required when called: 5
  8354 ;; This function calls:
  8355 ;;		Nothing
  8356 ;; This function is called by:
  8357 ;;		_TMR1_Initialize
  8358 ;;		_main
  8359 ;; This function uses a non-reentrant model
  8360 ;;
  8361                           
  8362     0919                     _TMR1_SetGateInterruptHandler:	
  8363                           ;psect for function _TMR1_SetGateInterruptHandler
  8364                           
  8365     0919                     l2530:	
  8366                           ;incstack = 0
  8367                           ; Regs used in _TMR1_SetGateInterruptHandler: [wreg]
  8368                           
  8369                           
  8370                           ;mcc_generated_files/tmr1.c: 178:     TMR1_GateInterruptHandler = InterruptHandler;
  8371     0919  0021               	movlb	1	; select bank1
  8372     091A  0821               	movf	(TMR1_SetGateInterruptHandler@InterruptHandler+1)^(0+128),w
  8373     091B  0022               	movlb	2	; select bank2
  8374     091C  00B3               	movwf	(_TMR1_GateInterruptHandler+1)^(0+256)
  8375     091D  0021               	movlb	1	; select bank1
  8376     091E  0820               	movf	TMR1_SetGateInterruptHandler@InterruptHandler^(0+128),w
  8377     091F  0022               	movlb	2	; select bank2
  8378     0920  00B2               	movwf	_TMR1_GateInterruptHandler^(0+256)
  8379     0921                     l456:
  8380     0921  0008               	return
  8381     0922                     __end_of_TMR1_SetGateInterruptHandler:
  8382                           
  8383                           	psect	text30
  8384     0922                     __ptext30:	
  8385 ;; *************** function _TMR0_Initialize *****************
  8386 ;; Defined at:
  8387 ;;		line 63 in file "mcc_generated_files/tmr0.c"
  8388 ;; Parameters:    Size  Location     Type
  8389 ;;		None
  8390 ;; Auto vars:     Size  Location     Type
  8391 ;;		None
  8392 ;; Return value:  Size  Location     Type
  8393 ;;                  1    wreg      void 
  8394 ;; Registers used:
  8395 ;;		wreg, status,2
  8396 ;; Tracked objects:
  8397 ;;		On entry : 0/0
  8398 ;;		On exit  : 0/0
  8399 ;;		Unchanged: 0/0
  8400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8401 ;;      Params:         0       0       0       0       0       0
  8402 ;;      Locals:         0       0       0       0       0       0
  8403 ;;      Temps:          0       0       0       0       0       0
  8404 ;;      Totals:         0       0       0       0       0       0
  8405 ;;Total ram usage:        0 bytes
  8406 ;; Hardware stack levels used: 1
  8407 ;; Hardware stack levels required when called: 5
  8408 ;; This function calls:
  8409 ;;		Nothing
  8410 ;; This function is called by:
  8411 ;;		_SYSTEM_Initialize
  8412 ;; This function uses a non-reentrant model
  8413 ;;
  8414                           
  8415     0922                     _TMR0_Initialize:	
  8416                           ;psect for function _TMR0_Initialize
  8417                           
  8418     0922                     l2888:	
  8419                           ;incstack = 0
  8420                           ; Regs used in _TMR0_Initialize: [wreg+status,2]
  8421                           
  8422                           
  8423                           ;mcc_generated_files/tmr0.c: 68:     OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | (0xD7 
      +                          & 0x3F));
  8424     0922  0021               	movlb	1	; select bank1
  8425     0923  0815               	movf	21,w	;volatile
  8426     0924  39C0               	andlw	192
  8427     0925  3817               	iorlw	23
  8428     0926  0095               	movwf	21	;volatile
  8429     0927                     l2890:
  8430                           
  8431                           ;mcc_generated_files/tmr0.c: 71:     TMR0 = 0x00;
  8432     0927  0020               	movlb	0	; select bank0
  8433     0928  0195               	clrf	21	;volatile
  8434     0929                     l2892:
  8435                           
  8436                           ;mcc_generated_files/tmr0.c: 74:     timer0ReloadVal= 0;
  8437     0929  01FD               	clrf	_timer0ReloadVal	;volatile
  8438     092A                     l2894:
  8439                           
  8440                           ;mcc_generated_files/tmr0.c: 77:     INTCONbits.TMR0IF = 0;
  8441     092A  110B               	bcf	11,2	;volatile
  8442     092B                     l279:
  8443     092B  0008               	return
  8444     092C                     __end_of_TMR0_Initialize:
  8445                           
  8446                           	psect	text31
  8447     099C                     __ptext31:	
  8448 ;; *************** function _PIN_MANAGER_Initialize *****************
  8449 ;; Defined at:
  8450 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  8451 ;; Parameters:    Size  Location     Type
  8452 ;;		None
  8453 ;; Auto vars:     Size  Location     Type
  8454 ;;		None
  8455 ;; Return value:  Size  Location     Type
  8456 ;;                  1    wreg      void 
  8457 ;; Registers used:
  8458 ;;		wreg, status,2
  8459 ;; Tracked objects:
  8460 ;;		On entry : 0/0
  8461 ;;		On exit  : 0/0
  8462 ;;		Unchanged: 0/0
  8463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8464 ;;      Params:         0       0       0       0       0       0
  8465 ;;      Locals:         0       0       0       0       0       0
  8466 ;;      Temps:          0       0       0       0       0       0
  8467 ;;      Totals:         0       0       0       0       0       0
  8468 ;;Total ram usage:        0 bytes
  8469 ;; Hardware stack levels used: 1
  8470 ;; Hardware stack levels required when called: 5
  8471 ;; This function calls:
  8472 ;;		Nothing
  8473 ;; This function is called by:
  8474 ;;		_SYSTEM_Initialize
  8475 ;; This function uses a non-reentrant model
  8476 ;;
  8477                           
  8478     099C                     _PIN_MANAGER_Initialize:	
  8479                           ;psect for function _PIN_MANAGER_Initialize
  8480                           
  8481     099C                     l2846:	
  8482                           ;incstack = 0
  8483                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  8484                           
  8485                           
  8486                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  8487     099C  0022               	movlb	2	; select bank2
  8488     099D  018C               	clrf	12	;volatile
  8489                           
  8490                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  8491     099E  018D               	clrf	13	;volatile
  8492     099F                     l2848:
  8493                           
  8494                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0xA1;
  8495     099F  30A1               	movlw	161
  8496     09A0  0021               	movlb	1	; select bank1
  8497     09A1  008C               	movwf	12	;volatile
  8498     09A2                     l2850:
  8499                           
  8500                           ;mcc_generated_files/pin_manager.c: 67:     TRISB = 0xF7;
  8501     09A2  30F7               	movlw	247
  8502     09A3  008D               	movwf	13	;volatile
  8503     09A4                     l2852:
  8504                           
  8505                           ;mcc_generated_files/pin_manager.c: 72:     ANSELB = 0xF0;
  8506     09A4  30F0               	movlw	240
  8507     09A5  0023               	movlb	3	; select bank3
  8508     09A6  008D               	movwf	13	;volatile
  8509     09A7                     l2854:
  8510                           
  8511                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x01;
  8512     09A7  3001               	movlw	1
  8513     09A8  008C               	movwf	12	;volatile
  8514                           
  8515                           ;mcc_generated_files/pin_manager.c: 78:     WPUB = 0x00;
  8516     09A9  0024               	movlb	4	; select bank4
  8517     09AA  018D               	clrf	13	;volatile
  8518                           
  8519                           ;mcc_generated_files/pin_manager.c: 79:     WPUA = 0x00;
  8520     09AB  018C               	clrf	12	;volatile
  8521     09AC                     l2856:
  8522                           
  8523                           ;mcc_generated_files/pin_manager.c: 80:     OPTION_REGbits.nWPUEN = 1;
  8524     09AC  0021               	movlb	1	; select bank1
  8525     09AD  1795               	bsf	21,7	;volatile
  8526                           
  8527                           ;mcc_generated_files/pin_manager.c: 86:     APFCON0 = 0x00;
  8528     09AE  0022               	movlb	2	; select bank2
  8529     09AF  019D               	clrf	29	;volatile
  8530                           
  8531                           ;mcc_generated_files/pin_manager.c: 87:     APFCON1 = 0x00;
  8532     09B0  019E               	clrf	30	;volatile
  8533     09B1                     l2858:
  8534                           
  8535                           ;mcc_generated_files/pin_manager.c: 94:     INTCONbits.IOCIE = 1;
  8536     09B1  158B               	bsf	11,3	;volatile
  8537     09B2                     l72:
  8538     09B2  0008               	return
  8539     09B3                     __end_of_PIN_MANAGER_Initialize:
  8540                           
  8541                           	psect	text32
  8542     08DE                     __ptext32:	
  8543 ;; *************** function _OSCILLATOR_Initialize *****************
  8544 ;; Defined at:
  8545 ;;		line 69 in file "mcc_generated_files/mcc.c"
  8546 ;; Parameters:    Size  Location     Type
  8547 ;;		None
  8548 ;; Auto vars:     Size  Location     Type
  8549 ;;		None
  8550 ;; Return value:  Size  Location     Type
  8551 ;;                  1    wreg      void 
  8552 ;; Registers used:
  8553 ;;		wreg, status,2
  8554 ;; Tracked objects:
  8555 ;;		On entry : 0/0
  8556 ;;		On exit  : 0/0
  8557 ;;		Unchanged: 0/0
  8558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8559 ;;      Params:         0       0       0       0       0       0
  8560 ;;      Locals:         0       0       0       0       0       0
  8561 ;;      Temps:          0       0       0       0       0       0
  8562 ;;      Totals:         0       0       0       0       0       0
  8563 ;;Total ram usage:        0 bytes
  8564 ;; Hardware stack levels used: 1
  8565 ;; Hardware stack levels required when called: 5
  8566 ;; This function calls:
  8567 ;;		Nothing
  8568 ;; This function is called by:
  8569 ;;		_SYSTEM_Initialize
  8570 ;; This function uses a non-reentrant model
  8571 ;;
  8572                           
  8573     08DE                     _OSCILLATOR_Initialize:	
  8574                           ;psect for function _OSCILLATOR_Initialize
  8575                           
  8576     08DE                     l2860:	
  8577                           ;incstack = 0
  8578                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  8579                           
  8580                           
  8581                           ;mcc_generated_files/mcc.c: 72:     OSCCON = 0x78;
  8582     08DE  3078               	movlw	120
  8583     08DF  0021               	movlb	1	; select bank1
  8584     08E0  0099               	movwf	25	;volatile
  8585     08E1                     l2862:
  8586                           
  8587                           ;mcc_generated_files/mcc.c: 74:     OSCTUNE = 0x00;
  8588     08E1  0198               	clrf	24	;volatile
  8589     08E2                     l2864:
  8590                           
  8591                           ;mcc_generated_files/mcc.c: 76:     BORCON = 0x00;
  8592     08E2  0022               	movlb	2	; select bank2
  8593     08E3  0196               	clrf	22	;volatile
  8594     08E4                     l42:
  8595     08E4  0008               	return
  8596     08E5                     __end_of_OSCILLATOR_Initialize:
  8597                           
  8598                           	psect	text33
  8599     0011                     __ptext33:	
  8600 ;; *************** function _FVR_Initialize *****************
  8601 ;; Defined at:
  8602 ;;		line 58 in file "mcc_generated_files/fvr.c"
  8603 ;; Parameters:    Size  Location     Type
  8604 ;;		None
  8605 ;; Auto vars:     Size  Location     Type
  8606 ;;		None
  8607 ;; Return value:  Size  Location     Type
  8608 ;;                  1    wreg      void 
  8609 ;; Registers used:
  8610 ;;		wreg
  8611 ;; Tracked objects:
  8612 ;;		On entry : 0/0
  8613 ;;		On exit  : 0/0
  8614 ;;		Unchanged: 0/0
  8615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8616 ;;      Params:         0       0       0       0       0       0
  8617 ;;      Locals:         0       0       0       0       0       0
  8618 ;;      Temps:          0       0       0       0       0       0
  8619 ;;      Totals:         0       0       0       0       0       0
  8620 ;;Total ram usage:        0 bytes
  8621 ;; Hardware stack levels used: 1
  8622 ;; Hardware stack levels required when called: 5
  8623 ;; This function calls:
  8624 ;;		Nothing
  8625 ;; This function is called by:
  8626 ;;		_SYSTEM_Initialize
  8627 ;; This function uses a non-reentrant model
  8628 ;;
  8629                           
  8630     0011                     _FVR_Initialize:	
  8631                           ;psect for function _FVR_Initialize
  8632                           
  8633     0011                     l2870:	
  8634                           ;incstack = 0
  8635                           ; Regs used in _FVR_Initialize: [wreg]
  8636                           
  8637                           
  8638                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0x84;
  8639     0011  3084               	movlw	132
  8640     0012  0022               	movlb	2	; select bank2
  8641     0013  0097               	movwf	23	;volatile
  8642     0014                     l298:
  8643     0014  0008               	return
  8644     0015                     __end_of_FVR_Initialize:
  8645                           
  8646                           	psect	text34
  8647     0A7E                     __ptext34:	
  8648 ;; *************** function _EUSART_Initialize *****************
  8649 ;; Defined at:
  8650 ;;		line 66 in file "mcc_generated_files/eusart.c"
  8651 ;; Parameters:    Size  Location     Type
  8652 ;;		None
  8653 ;; Auto vars:     Size  Location     Type
  8654 ;;		None
  8655 ;; Return value:  Size  Location     Type
  8656 ;;                  1    wreg      void 
  8657 ;; Registers used:
  8658 ;;		wreg, status,2, status,0, pclath, cstack
  8659 ;; Tracked objects:
  8660 ;;		On entry : 0/0
  8661 ;;		On exit  : 0/0
  8662 ;;		Unchanged: 0/0
  8663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8664 ;;      Params:         0       0       0       0       0       0
  8665 ;;      Locals:         0       0       0       0       0       0
  8666 ;;      Temps:          0       0       0       0       0       0
  8667 ;;      Totals:         0       0       0       0       0       0
  8668 ;;Total ram usage:        0 bytes
  8669 ;; Hardware stack levels used: 1
  8670 ;; Hardware stack levels required when called: 6
  8671 ;; This function calls:
  8672 ;;		_EUSART_SetErrorHandler
  8673 ;;		_EUSART_SetFramingErrorHandler
  8674 ;;		_EUSART_SetOverrunErrorHandler
  8675 ;; This function is called by:
  8676 ;;		_SYSTEM_Initialize
  8677 ;; This function uses a non-reentrant model
  8678 ;;
  8679                           
  8680     0A7E                     _EUSART_Initialize:	
  8681                           ;psect for function _EUSART_Initialize
  8682                           
  8683     0A7E                     l2940:	
  8684                           ;incstack = 0
  8685                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8686                           
  8687                           
  8688                           ;mcc_generated_files/eusart.c: 71:     BAUDCON = 0x08;
  8689     0A7E  3008               	movlw	8
  8690     0A7F  0023               	movlb	3	; select bank3
  8691     0A80  009F               	movwf	31	;volatile
  8692                           
  8693                           ;mcc_generated_files/eusart.c: 74:     RCSTA = 0x90;
  8694     0A81  3090               	movlw	144
  8695     0A82  009D               	movwf	29	;volatile
  8696                           
  8697                           ;mcc_generated_files/eusart.c: 77:     TXSTA = 0x24;
  8698     0A83  3024               	movlw	36
  8699     0A84  009E               	movwf	30	;volatile
  8700                           
  8701                           ;mcc_generated_files/eusart.c: 80:     SPBRGL = 0x22;
  8702     0A85  3022               	movlw	34
  8703     0A86  009B               	movwf	27	;volatile
  8704     0A87                     l2942:
  8705                           
  8706                           ;mcc_generated_files/eusart.c: 83:     SPBRGH = 0x00;
  8707     0A87  019C               	clrf	28	;volatile
  8708     0A88                     l2944:
  8709                           
  8710                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  8711     0A88  3000               	movlw	0
  8712     0A89  0021               	movlb	1	; select bank1
  8713     0A8A  00A0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler^(0+128)
  8714     0A8B  3000               	movlw	0
  8715     0A8C  00A1               	movwf	(EUSART_SetFramingErrorHandler@interruptHandler^(0+128)+1)
  8716     0A8D  3189  2107  318A   	fcall	_EUSART_SetFramingErrorHandler
  8717     0A90                     l2946:
  8718                           
  8719                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  8720     0A90  3000               	movlw	0
  8721     0A91  0021               	movlb	1	; select bank1
  8722     0A92  00A0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler^(0+128)
  8723     0A93  3000               	movlw	0
  8724     0A94  00A1               	movwf	(EUSART_SetOverrunErrorHandler@interruptHandler^(0+128)+1)
  8725     0A95  3189  2110  318A   	fcall	_EUSART_SetOverrunErrorHandler
  8726     0A98                     l2948:
  8727                           
  8728                           ;mcc_generated_files/eusart.c: 88:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  8729     0A98  3000               	movlw	0
  8730     0A99  0021               	movlb	1	; select bank1
  8731     0A9A  00A0               	movwf	EUSART_SetErrorHandler@interruptHandler^(0+128)
  8732     0A9B  3000               	movlw	0
  8733     0A9C  00A1               	movwf	(EUSART_SetErrorHandler@interruptHandler^(0+128)+1)
  8734     0A9D  3188  20FE  318A   	fcall	_EUSART_SetErrorHandler
  8735     0AA0                     l2950:
  8736                           
  8737                           ;mcc_generated_files/eusart.c: 90:     eusartRxLastError.status = 0;
  8738     0AA0  0021               	movlb	1	; select bank1
  8739     0AA1  01EE               	clrf	_eusartRxLastError^(0+128)	;volatile
  8740     0AA2                     l223:
  8741     0AA2  0008               	return
  8742     0AA3                     __end_of_EUSART_Initialize:
  8743                           
  8744                           	psect	text35
  8745     0910                     __ptext35:	
  8746 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  8747 ;; Defined at:
  8748 ;;		line 161 in file "mcc_generated_files/eusart.c"
  8749 ;; Parameters:    Size  Location     Type
  8750 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  8751 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  8752 ;; Auto vars:     Size  Location     Type
  8753 ;;		None
  8754 ;; Return value:  Size  Location     Type
  8755 ;;                  1    wreg      void 
  8756 ;; Registers used:
  8757 ;;		wreg
  8758 ;; Tracked objects:
  8759 ;;		On entry : 0/0
  8760 ;;		On exit  : 0/0
  8761 ;;		Unchanged: 0/0
  8762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8763 ;;      Params:         0       0       2       0       0       0
  8764 ;;      Locals:         0       0       0       0       0       0
  8765 ;;      Temps:          0       0       0       0       0       0
  8766 ;;      Totals:         0       0       2       0       0       0
  8767 ;;Total ram usage:        2 bytes
  8768 ;; Hardware stack levels used: 1
  8769 ;; Hardware stack levels required when called: 5
  8770 ;; This function calls:
  8771 ;;		Nothing
  8772 ;; This function is called by:
  8773 ;;		_EUSART_Initialize
  8774 ;; This function uses a non-reentrant model
  8775 ;;
  8776                           
  8777     0910                     _EUSART_SetOverrunErrorHandler:	
  8778                           ;psect for function _EUSART_SetOverrunErrorHandler
  8779                           
  8780     0910                     l2526:	
  8781                           ;incstack = 0
  8782                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  8783                           
  8784                           
  8785                           ;mcc_generated_files/eusart.c: 162:     EUSART_OverrunErrorHandler = interruptHandler;
  8786     0910  0021               	movlb	1	; select bank1
  8787     0911  0821               	movf	(EUSART_SetOverrunErrorHandler@interruptHandler+1)^(0+128),w
  8788     0912  0022               	movlb	2	; select bank2
  8789     0913  00B7               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+256)
  8790     0914  0021               	movlb	1	; select bank1
  8791     0915  0820               	movf	EUSART_SetOverrunErrorHandler@interruptHandler^(0+128),w
  8792     0916  0022               	movlb	2	; select bank2
  8793     0917  00B6               	movwf	_EUSART_OverrunErrorHandler^(0+256)
  8794     0918                     l265:
  8795     0918  0008               	return
  8796     0919                     __end_of_EUSART_SetOverrunErrorHandler:
  8797                           
  8798                           	psect	text36
  8799     0907                     __ptext36:	
  8800 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  8801 ;; Defined at:
  8802 ;;		line 157 in file "mcc_generated_files/eusart.c"
  8803 ;; Parameters:    Size  Location     Type
  8804 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  8805 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  8806 ;; Auto vars:     Size  Location     Type
  8807 ;;		None
  8808 ;; Return value:  Size  Location     Type
  8809 ;;                  1    wreg      void 
  8810 ;; Registers used:
  8811 ;;		wreg
  8812 ;; Tracked objects:
  8813 ;;		On entry : 0/0
  8814 ;;		On exit  : 0/0
  8815 ;;		Unchanged: 0/0
  8816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8817 ;;      Params:         0       0       2       0       0       0
  8818 ;;      Locals:         0       0       0       0       0       0
  8819 ;;      Temps:          0       0       0       0       0       0
  8820 ;;      Totals:         0       0       2       0       0       0
  8821 ;;Total ram usage:        2 bytes
  8822 ;; Hardware stack levels used: 1
  8823 ;; Hardware stack levels required when called: 5
  8824 ;; This function calls:
  8825 ;;		Nothing
  8826 ;; This function is called by:
  8827 ;;		_EUSART_Initialize
  8828 ;; This function uses a non-reentrant model
  8829 ;;
  8830                           
  8831     0907                     _EUSART_SetFramingErrorHandler:	
  8832                           ;psect for function _EUSART_SetFramingErrorHandler
  8833                           
  8834     0907                     l2524:	
  8835                           ;incstack = 0
  8836                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  8837                           
  8838                           
  8839                           ;mcc_generated_files/eusart.c: 158:     EUSART_FramingErrorHandler = interruptHandler;
  8840     0907  0021               	movlb	1	; select bank1
  8841     0908  0821               	movf	(EUSART_SetFramingErrorHandler@interruptHandler+1)^(0+128),w
  8842     0909  0022               	movlb	2	; select bank2
  8843     090A  00B9               	movwf	(_EUSART_FramingErrorHandler+1)^(0+256)
  8844     090B  0021               	movlb	1	; select bank1
  8845     090C  0820               	movf	EUSART_SetFramingErrorHandler@interruptHandler^(0+128),w
  8846     090D  0022               	movlb	2	; select bank2
  8847     090E  00B8               	movwf	_EUSART_FramingErrorHandler^(0+256)
  8848     090F                     l262:
  8849     090F  0008               	return
  8850     0910                     __end_of_EUSART_SetFramingErrorHandler:
  8851                           
  8852                           	psect	text37
  8853     08FE                     __ptext37:	
  8854 ;; *************** function _EUSART_SetErrorHandler *****************
  8855 ;; Defined at:
  8856 ;;		line 165 in file "mcc_generated_files/eusart.c"
  8857 ;; Parameters:    Size  Location     Type
  8858 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  8859 ;;		 -> EUSART_DefaultErrorHandler(1), 
  8860 ;; Auto vars:     Size  Location     Type
  8861 ;;		None
  8862 ;; Return value:  Size  Location     Type
  8863 ;;                  1    wreg      void 
  8864 ;; Registers used:
  8865 ;;		wreg
  8866 ;; Tracked objects:
  8867 ;;		On entry : 0/0
  8868 ;;		On exit  : 0/0
  8869 ;;		Unchanged: 0/0
  8870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8871 ;;      Params:         0       0       2       0       0       0
  8872 ;;      Locals:         0       0       0       0       0       0
  8873 ;;      Temps:          0       0       0       0       0       0
  8874 ;;      Totals:         0       0       2       0       0       0
  8875 ;;Total ram usage:        2 bytes
  8876 ;; Hardware stack levels used: 1
  8877 ;; Hardware stack levels required when called: 5
  8878 ;; This function calls:
  8879 ;;		Nothing
  8880 ;; This function is called by:
  8881 ;;		_EUSART_Initialize
  8882 ;; This function uses a non-reentrant model
  8883 ;;
  8884                           
  8885     08FE                     _EUSART_SetErrorHandler:	
  8886                           ;psect for function _EUSART_SetErrorHandler
  8887                           
  8888     08FE                     l2528:	
  8889                           ;incstack = 0
  8890                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  8891                           
  8892                           
  8893                           ;mcc_generated_files/eusart.c: 166:     EUSART_ErrorHandler = interruptHandler;
  8894     08FE  0021               	movlb	1	; select bank1
  8895     08FF  0821               	movf	(EUSART_SetErrorHandler@interruptHandler+1)^(0+128),w
  8896     0900  0022               	movlb	2	; select bank2
  8897     0901  00B5               	movwf	(_EUSART_ErrorHandler+1)^(0+256)
  8898     0902  0021               	movlb	1	; select bank1
  8899     0903  0820               	movf	EUSART_SetErrorHandler@interruptHandler^(0+128),w
  8900     0904  0022               	movlb	2	; select bank2
  8901     0905  00B4               	movwf	_EUSART_ErrorHandler^(0+256)
  8902     0906                     l268:
  8903     0906  0008               	return
  8904     0907                     __end_of_EUSART_SetErrorHandler:
  8905                           
  8906                           	psect	text38
  8907     094C                     __ptext38:	
  8908 ;; *************** function _EPWM1_Initialize *****************
  8909 ;; Defined at:
  8910 ;;		line 64 in file "mcc_generated_files/epwm1.c"
  8911 ;; Parameters:    Size  Location     Type
  8912 ;;		None
  8913 ;; Auto vars:     Size  Location     Type
  8914 ;;		None
  8915 ;; Return value:  Size  Location     Type
  8916 ;;                  1    wreg      void 
  8917 ;; Registers used:
  8918 ;;		wreg, status,2, status,0
  8919 ;; Tracked objects:
  8920 ;;		On entry : 0/0
  8921 ;;		On exit  : 0/0
  8922 ;;		Unchanged: 0/0
  8923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8924 ;;      Params:         0       0       0       0       0       0
  8925 ;;      Locals:         0       0       0       0       0       0
  8926 ;;      Temps:          0       0       0       0       0       0
  8927 ;;      Totals:         0       0       0       0       0       0
  8928 ;;Total ram usage:        0 bytes
  8929 ;; Hardware stack levels used: 1
  8930 ;; Hardware stack levels required when called: 5
  8931 ;; This function calls:
  8932 ;;		Nothing
  8933 ;; This function is called by:
  8934 ;;		_SYSTEM_Initialize
  8935 ;; This function uses a non-reentrant model
  8936 ;;
  8937                           
  8938     094C                     _EPWM1_Initialize:	
  8939                           ;psect for function _EPWM1_Initialize
  8940                           
  8941     094C                     l2912:	
  8942                           ;incstack = 0
  8943                           ; Regs used in _EPWM1_Initialize: [wreg+status,2+status,0]
  8944                           
  8945                           
  8946                           ;mcc_generated_files/epwm1.c: 69:  CCP1CON = 0x3C;
  8947     094C  303C               	movlw	60
  8948     094D  0025               	movlb	5	; select bank5
  8949     094E  0093               	movwf	19	;volatile
  8950     094F                     l2914:
  8951                           
  8952                           ;mcc_generated_files/epwm1.c: 72:  ECCP1AS = 0x00;
  8953     094F  0195               	clrf	21	;volatile
  8954     0950                     l2916:
  8955                           
  8956                           ;mcc_generated_files/epwm1.c: 75:  PWM1CON = 0x80;
  8957     0950  3080               	movlw	128
  8958     0951  0094               	movwf	20	;volatile
  8959     0952                     l2918:
  8960                           
  8961                           ;mcc_generated_files/epwm1.c: 78:  PSTR1CON = 0x01;
  8962     0952  3001               	movlw	1
  8963     0953  0096               	movwf	22	;volatile
  8964     0954                     l2920:
  8965                           
  8966                           ;mcc_generated_files/epwm1.c: 81:  CCPR1H = 0x00;
  8967     0954  0192               	clrf	18	;volatile
  8968                           
  8969                           ;mcc_generated_files/epwm1.c: 84:  CCPR1L = 0x7F;
  8970     0955  307F               	movlw	127
  8971     0956  0091               	movwf	17	;volatile
  8972     0957                     l2922:
  8973                           
  8974                           ;mcc_generated_files/epwm1.c: 87:  CCPTMRS0bits.C1TSEL = 0x0;
  8975     0957  30FC               	movlw	-4
  8976     0958  059E               	andwf	30,f	;volatile
  8977     0959                     l156:
  8978     0959  0008               	return
  8979     095A                     __end_of_EPWM1_Initialize:
  8980                           
  8981                           	psect	text39
  8982     000B                     __ptext39:	
  8983 ;; *************** function _DAC_Initialize *****************
  8984 ;; Defined at:
  8985 ;;		line 58 in file "mcc_generated_files/dac.c"
  8986 ;; Parameters:    Size  Location     Type
  8987 ;;		None
  8988 ;; Auto vars:     Size  Location     Type
  8989 ;;		None
  8990 ;; Return value:  Size  Location     Type
  8991 ;;                  1    wreg      void 
  8992 ;; Registers used:
  8993 ;;		wreg
  8994 ;; Tracked objects:
  8995 ;;		On entry : 0/0
  8996 ;;		On exit  : 0/0
  8997 ;;		Unchanged: 0/0
  8998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8999 ;;      Params:         0       0       0       0       0       0
  9000 ;;      Locals:         0       0       0       0       0       0
  9001 ;;      Temps:          0       0       0       0       0       0
  9002 ;;      Totals:         0       0       0       0       0       0
  9003 ;;Total ram usage:        0 bytes
  9004 ;; Hardware stack levels used: 1
  9005 ;; Hardware stack levels required when called: 5
  9006 ;; This function calls:
  9007 ;;		Nothing
  9008 ;; This function is called by:
  9009 ;;		_SYSTEM_Initialize
  9010 ;; This function uses a non-reentrant model
  9011 ;;
  9012                           
  9013     000B                     _DAC_Initialize:	
  9014                           ;psect for function _DAC_Initialize
  9015                           
  9016     000B                     l2868:	
  9017                           ;incstack = 0
  9018                           ; Regs used in _DAC_Initialize: [wreg]
  9019                           
  9020                           
  9021                           ;mcc_generated_files/dac.c: 61:     DACCON0 = 0x80;
  9022     000B  3080               	movlw	128
  9023     000C  0022               	movlb	2	; select bank2
  9024     000D  0098               	movwf	24	;volatile
  9025                           
  9026                           ;mcc_generated_files/dac.c: 63:     DACCON1 = 0x06;
  9027     000E  3006               	movlw	6
  9028     000F  0099               	movwf	25	;volatile
  9029     0010                     l346:
  9030     0010  0008               	return
  9031     0011                     __end_of_DAC_Initialize:
  9032                           
  9033                           	psect	text40
  9034     0005                     __ptext40:	
  9035 ;; *************** function _CMP1_Initialize *****************
  9036 ;; Defined at:
  9037 ;;		line 58 in file "mcc_generated_files/cmp1.c"
  9038 ;; Parameters:    Size  Location     Type
  9039 ;;		None
  9040 ;; Auto vars:     Size  Location     Type
  9041 ;;		None
  9042 ;; Return value:  Size  Location     Type
  9043 ;;                  1    wreg      void 
  9044 ;; Registers used:
  9045 ;;		wreg
  9046 ;; Tracked objects:
  9047 ;;		On entry : 0/0
  9048 ;;		On exit  : 0/0
  9049 ;;		Unchanged: 0/0
  9050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9051 ;;      Params:         0       0       0       0       0       0
  9052 ;;      Locals:         0       0       0       0       0       0
  9053 ;;      Temps:          0       0       0       0       0       0
  9054 ;;      Totals:         0       0       0       0       0       0
  9055 ;;Total ram usage:        0 bytes
  9056 ;; Hardware stack levels used: 1
  9057 ;; Hardware stack levels required when called: 5
  9058 ;; This function calls:
  9059 ;;		Nothing
  9060 ;; This function is called by:
  9061 ;;		_SYSTEM_Initialize
  9062 ;; This function uses a non-reentrant model
  9063 ;;
  9064                           
  9065     0005                     _CMP1_Initialize:	
  9066                           ;psect for function _CMP1_Initialize
  9067                           
  9068     0005                     l2904:	
  9069                           ;incstack = 0
  9070                           ; Regs used in _CMP1_Initialize: [wreg]
  9071                           
  9072                           
  9073                           ;mcc_generated_files/cmp1.c: 62:     CM1CON0 = 0x84;
  9074     0005  3084               	movlw	132
  9075     0006  0022               	movlb	2	; select bank2
  9076     0007  0091               	movwf	17	;volatile
  9077                           
  9078                           ;mcc_generated_files/cmp1.c: 65:     CM1CON1 = 0x10;
  9079     0008  3010               	movlw	16
  9080     0009  0092               	movwf	18	;volatile
  9081     000A                     l361:
  9082     000A  0008               	return
  9083     000B                     __end_of_CMP1_Initialize:
  9084                           
  9085                           	psect	text41
  9086     08E5                     __ptext41:	
  9087 ;; *************** function _ADC_Initialize *****************
  9088 ;; Defined at:
  9089 ;;		line 67 in file "mcc_generated_files/adc.c"
  9090 ;; Parameters:    Size  Location     Type
  9091 ;;		None
  9092 ;; Auto vars:     Size  Location     Type
  9093 ;;		None
  9094 ;; Return value:  Size  Location     Type
  9095 ;;                  1    wreg      void 
  9096 ;; Registers used:
  9097 ;;		wreg, status,2
  9098 ;; Tracked objects:
  9099 ;;		On entry : 0/0
  9100 ;;		On exit  : 0/0
  9101 ;;		Unchanged: 0/0
  9102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9103 ;;      Params:         0       0       0       0       0       0
  9104 ;;      Locals:         0       0       0       0       0       0
  9105 ;;      Temps:          0       0       0       0       0       0
  9106 ;;      Totals:         0       0       0       0       0       0
  9107 ;;Total ram usage:        0 bytes
  9108 ;; Hardware stack levels used: 1
  9109 ;; Hardware stack levels required when called: 5
  9110 ;; This function calls:
  9111 ;;		Nothing
  9112 ;; This function is called by:
  9113 ;;		_SYSTEM_Initialize
  9114 ;; This function uses a non-reentrant model
  9115 ;;
  9116                           
  9117     08E5                     _ADC_Initialize:	
  9118                           ;psect for function _ADC_Initialize
  9119                           
  9120     08E5                     l2906:	
  9121                           ;incstack = 0
  9122                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  9123                           
  9124                           
  9125                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0xD3;
  9126     08E5  30D3               	movlw	211
  9127     08E6  0021               	movlb	1	; select bank1
  9128     08E7  009E               	movwf	30	;volatile
  9129     08E8                     l2908:
  9130                           
  9131                           ;mcc_generated_files/adc.c: 75:     ADRESL = 0x00;
  9132     08E8  019B               	clrf	27	;volatile
  9133     08E9                     l2910:
  9134                           
  9135                           ;mcc_generated_files/adc.c: 78:     ADRESH = 0x00;
  9136     08E9  019C               	clrf	28	;volatile
  9137                           
  9138                           ;mcc_generated_files/adc.c: 81:     ADCON0 = 0x01;
  9139     08EA  3001               	movlw	1
  9140     08EB  009D               	movwf	29	;volatile
  9141     08EC                     l318:
  9142     08EC  0008               	return
  9143     08ED                     __end_of_ADC_Initialize:
  9144                           
  9145                           	psect	text42
  9146     0000                     __ptext42:	
  9147 ;; *************** function _EUSART_is_rx_ready *****************
  9148 ;; Defined at:
  9149 ;;		line 99 in file "mcc_generated_files/eusart.c"
  9150 ;; Parameters:    Size  Location     Type
  9151 ;;		None
  9152 ;; Auto vars:     Size  Location     Type
  9153 ;;		None
  9154 ;; Return value:  Size  Location     Type
  9155 ;;                  1    wreg      _Bool 
  9156 ;; Registers used:
  9157 ;;		wreg, status,2, status,0
  9158 ;; Tracked objects:
  9159 ;;		On entry : 0/0
  9160 ;;		On exit  : 0/0
  9161 ;;		Unchanged: 0/0
  9162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9163 ;;      Params:         0       0       0       0       0       0
  9164 ;;      Locals:         0       0       0       0       0       0
  9165 ;;      Temps:          0       0       0       0       0       0
  9166 ;;      Totals:         0       0       0       0       0       0
  9167 ;;Total ram usage:        0 bytes
  9168 ;; Hardware stack levels used: 1
  9169 ;; Hardware stack levels required when called: 5
  9170 ;; This function calls:
  9171 ;;		Nothing
  9172 ;; This function is called by:
  9173 ;;		_main
  9174 ;; This function uses a non-reentrant model
  9175 ;;
  9176                           
  9177     0000                     _EUSART_is_rx_ready:	
  9178                           ;psect for function _EUSART_is_rx_ready
  9179                           
  9180     0000                     l3236:	
  9181                           ;incstack = 0
  9182                           ; Regs used in _EUSART_is_rx_ready: [wreg+status,2+status,0]
  9183                           
  9184                           
  9185                           ;mcc_generated_files/eusart.c: 101:     return (_Bool)(PIR1bits.RCIF);
  9186     0000  0020               	movlb	0	; select bank0
  9187     0001  0E11               	swapf	17,w	;volatile
  9188     0002  0C89               	rrf	9,f
  9189     0003  3901               	andlw	1
  9190     0004                     l231:
  9191     0004  0008               	return
  9192     0005                     __end_of_EUSART_is_rx_ready:
  9193                           
  9194                           	psect	text43
  9195     0969                     __ptext43:	
  9196 ;; *************** function _EUSART_Read *****************
  9197 ;; Defined at:
  9198 ;;		line 113 in file "mcc_generated_files/eusart.c"
  9199 ;; Parameters:    Size  Location     Type
  9200 ;;		None
  9201 ;; Auto vars:     Size  Location     Type
  9202 ;;		None
  9203 ;; Return value:  Size  Location     Type
  9204 ;;                  1    wreg      unsigned char 
  9205 ;; Registers used:
  9206 ;;		wreg, status,2
  9207 ;; Tracked objects:
  9208 ;;		On entry : 0/0
  9209 ;;		On exit  : 0/0
  9210 ;;		Unchanged: 0/0
  9211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9212 ;;      Params:         0       0       0       0       0       0
  9213 ;;      Locals:         0       0       0       0       0       0
  9214 ;;      Temps:          0       0       0       0       0       0
  9215 ;;      Totals:         0       0       0       0       0       0
  9216 ;;Total ram usage:        0 bytes
  9217 ;; Hardware stack levels used: 1
  9218 ;; Hardware stack levels required when called: 5
  9219 ;; This function calls:
  9220 ;;		Nothing
  9221 ;; This function is called by:
  9222 ;;		_main
  9223 ;; This function uses a non-reentrant model
  9224 ;;
  9225                           
  9226     0969                     _EUSART_Read:	
  9227                           ;psect for function _EUSART_Read
  9228                           
  9229     0969                     l3240:	
  9230                           ;incstack = 0
  9231                           ; Regs used in _EUSART_Read: [wreg+status,2]
  9232                           
  9233     0969                     l240:	
  9234                           ;mcc_generated_files/eusart.c: 116:     {;mcc_generated_files/eusart.c: 117:     }
  9235                           
  9236                           
  9237                           ;mcc_generated_files/eusart.c: 115:     while(!PIR1bits.RCIF)
  9238     0969  0020               	movlb	0	; select bank0
  9239     096A  1E91               	btfss	17,5	;volatile
  9240     096B  296D               	goto	u2981
  9241     096C  296E               	goto	u2980
  9242     096D                     u2981:
  9243     096D  2969               	goto	l240
  9244     096E                     u2980:
  9245     096E                     l3242:
  9246                           
  9247                           ;mcc_generated_files/eusart.c: 119:     eusartRxLastError.status = 0;
  9248     096E  0021               	movlb	1	; select bank1
  9249     096F  01EE               	clrf	_eusartRxLastError^(0+128)	;volatile
  9250     0970                     l3244:
  9251                           
  9252                           ;mcc_generated_files/eusart.c: 121:     if(1 == RCSTAbits.OERR)
  9253     0970  0023               	movlb	3	; select bank3
  9254     0971  1C9D               	btfss	29,1	;volatile
  9255     0972  2974               	goto	u2991
  9256     0973  2975               	goto	u2990
  9257     0974                     u2991:
  9258     0974  2977               	goto	l3248
  9259     0975                     u2990:
  9260     0975                     l3246:
  9261                           
  9262                           ;mcc_generated_files/eusart.c: 122:     {;mcc_generated_files/eusart.c: 125:         RCS
      +                          TAbits.CREN = 0;
  9263     0975  121D               	bcf	29,4	;volatile
  9264                           
  9265                           ;mcc_generated_files/eusart.c: 126:         RCSTAbits.CREN = 1;
  9266     0976  161D               	bsf	29,4	;volatile
  9267     0977                     l3248:
  9268                           
  9269                           ;mcc_generated_files/eusart.c: 129:     return RCREG;
  9270     0977  0819               	movf	25,w	;volatile
  9271     0978                     l244:
  9272     0978  0008               	return
  9273     0979                     __end_of_EUSART_Read:
  9274                           
  9275                           	psect	intentry
  9276     0004                     __pintentry:	
  9277 ;; *************** function _INTERRUPT_InterruptManager *****************
  9278 ;; Defined at:
  9279 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  9280 ;; Parameters:    Size  Location     Type
  9281 ;;		None
  9282 ;; Auto vars:     Size  Location     Type
  9283 ;;		None
  9284 ;; Return value:  Size  Location     Type
  9285 ;;                  1    wreg      void 
  9286 ;; Registers used:
  9287 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9288 ;; Tracked objects:
  9289 ;;		On entry : 0/0
  9290 ;;		On exit  : 0/0
  9291 ;;		Unchanged: 0/0
  9292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9293 ;;      Params:         0       0       0       0       0       0
  9294 ;;      Locals:         0       0       0       0       0       0
  9295 ;;      Temps:          0       0       0       0       0       0
  9296 ;;      Totals:         0       0       0       0       0       0
  9297 ;;Total ram usage:        0 bytes
  9298 ;; Hardware stack levels used: 1
  9299 ;; Hardware stack levels required when called: 4
  9300 ;; This function calls:
  9301 ;;		_PIN_MANAGER_IOC
  9302 ;;		_TMR1_GATE_ISR
  9303 ;; This function is called by:
  9304 ;;		Interrupt level 1
  9305 ;; This function uses a non-reentrant model
  9306 ;;
  9307                           
  9308     0004                     _INTERRUPT_InterruptManager:
  9309                           
  9310                           ;incstack = 0
  9311     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  9312                           
  9313                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9314     0005  3180               	pagesel	$
  9315     0006                     i1l3396:
  9316                           
  9317                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.IOCIE == 1 && INTCONbits
      +                          .IOCIF == 1)
  9318     0006  1D8B               	btfss	11,3	;volatile
  9319     0007  2809               	goto	u313_21
  9320     0008  280A               	goto	u313_20
  9321     0009                     u313_21:
  9322     0009  2812               	goto	i1l174
  9323     000A                     u313_20:
  9324     000A                     i1l3398:
  9325     000A  1C0B               	btfss	11,0	;volatile
  9326     000B  280D               	goto	u314_21
  9327     000C  280E               	goto	u314_20
  9328     000D                     u314_21:
  9329     000D  2812               	goto	i1l174
  9330     000E                     u314_20:
  9331     000E                     i1l3400:
  9332                           
  9333                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         PIN_MANAGER_IOC();
  9334     000E  3180  2002  3180   	fcall	_PIN_MANAGER_IOC
  9335                           
  9336                           ;mcc_generated_files/interrupt_manager.c: 58:     }
  9337     0011  2824               	goto	i1l180
  9338     0012                     i1l174:	
  9339                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
  9340                           
  9341     0012  1F0B               	btfss	11,6	;volatile
  9342     0013  2815               	goto	u315_21
  9343     0014  2816               	goto	u315_20
  9344     0015                     u315_21:
  9345     0015  2824               	goto	i1l180
  9346     0016                     u315_20:
  9347     0016                     i1l3402:
  9348                           
  9349                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE1bits.TMR1GIE == 1 && PIR1bits.TMR1GIF == 1)
  9350     0016  0021               	movlb	1	; select bank1
  9351     0017  1F91               	btfss	17,7	;volatile
  9352     0018  281A               	goto	u316_21
  9353     0019  281B               	goto	u316_20
  9354     001A                     u316_21:
  9355     001A  2824               	goto	i1l179
  9356     001B                     u316_20:
  9357     001B                     i1l3404:
  9358     001B  0020               	movlb	0	; select bank0
  9359     001C  1F91               	btfss	17,7	;volatile
  9360     001D  281F               	goto	u317_21
  9361     001E  2820               	goto	u317_20
  9362     001F                     u317_21:
  9363     001F  2824               	goto	i1l179
  9364     0020                     u317_20:
  9365     0020                     i1l3406:
  9366                           
  9367                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             TMR1_GATE_ISR();
  9368     0020  3189  215A  3180   	fcall	_TMR1_GATE_ISR
  9369                           
  9370                           ;mcc_generated_files/interrupt_manager.c: 64:         }
  9371     0023  2824               	goto	i1l180
  9372     0024                     i1l179:	
  9373                           ;mcc_generated_files/interrupt_manager.c: 71:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 73:     }
  9374                           
  9375     0024                     i1l180:
  9376     0024  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  9377     0025  0009               	retfie
  9378     0026                     __end_of_INTERRUPT_InterruptManager:
  9379                           
  9380                           	psect	text45
  9381     095A                     __ptext45:	
  9382 ;; *************** function _TMR1_GATE_ISR *****************
  9383 ;; Defined at:
  9384 ;;		line 166 in file "mcc_generated_files/tmr1.c"
  9385 ;; Parameters:    Size  Location     Type
  9386 ;;		None
  9387 ;; Auto vars:     Size  Location     Type
  9388 ;;		None
  9389 ;; Return value:  Size  Location     Type
  9390 ;;                  1    wreg      void 
  9391 ;; Registers used:
  9392 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9393 ;; Tracked objects:
  9394 ;;		On entry : 0/0
  9395 ;;		On exit  : 0/0
  9396 ;;		Unchanged: 0/0
  9397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9398 ;;      Params:         0       0       0       0       0       0
  9399 ;;      Locals:         0       0       0       0       0       0
  9400 ;;      Temps:          0       0       0       0       0       0
  9401 ;;      Totals:         0       0       0       0       0       0
  9402 ;;Total ram usage:        0 bytes
  9403 ;; Hardware stack levels used: 1
  9404 ;; Hardware stack levels required when called: 3
  9405 ;; This function calls:
  9406 ;;		NULL
  9407 ;;		_TMR1_DefaultGateInterruptHandler
  9408 ;;		_mede_height
  9409 ;; This function is called by:
  9410 ;;		_INTERRUPT_InterruptManager
  9411 ;; This function uses a non-reentrant model
  9412 ;;
  9413                           
  9414     095A                     _TMR1_GATE_ISR:	
  9415                           ;psect for function _TMR1_GATE_ISR
  9416                           
  9417     095A                     i1l3230:	
  9418                           ;incstack = 0
  9419                           ; Regs used in _TMR1_GATE_ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9420                           
  9421                           
  9422                           ;mcc_generated_files/tmr1.c: 169:     PIR1bits.TMR1GIF = 0;
  9423     095A  0020               	movlb	0	; select bank0
  9424     095B  1391               	bcf	17,7	;volatile
  9425     095C                     i1l3232:
  9426                           
  9427                           ;mcc_generated_files/tmr1.c: 171:     if(TMR1_GateInterruptHandler)
  9428     095C  0022               	movlb	2	; select bank2
  9429     095D  0832               	movf	_TMR1_GateInterruptHandler^(0+256),w
  9430     095E  0433               	iorwf	(_TMR1_GateInterruptHandler+1)^(0+256),w
  9431     095F  1903               	btfsc	3,2
  9432     0960  2962               	goto	u297_21
  9433     0961  2963               	goto	u297_20
  9434     0962                     u297_21:
  9435     0962  2968               	goto	i1l453
  9436     0963                     u297_20:
  9437     0963                     i1l3234:
  9438                           
  9439                           ;mcc_generated_files/tmr1.c: 172:     {;mcc_generated_files/tmr1.c: 173:         TMR1_Ga
      +                          teInterruptHandler();
  9440     0963  0833               	movf	(_TMR1_GateInterruptHandler+1)^(0+256),w
  9441     0964  008A               	movwf	10
  9442     0965  0832               	movf	_TMR1_GateInterruptHandler^(0+256),w
  9443     0966  000A               	callw
  9444     0967  3189               	pagesel	$
  9445     0968                     i1l453:
  9446     0968  0008               	return
  9447     0969                     __end_of_TMR1_GATE_ISR:
  9448                           
  9449                           	psect	text46
  9450     0003                     __ptext46:	
  9451 ;; *************** function _TMR1_DefaultGateInterruptHandler *****************
  9452 ;; Defined at:
  9453 ;;		line 181 in file "mcc_generated_files/tmr1.c"
  9454 ;; Parameters:    Size  Location     Type
  9455 ;;		None
  9456 ;; Auto vars:     Size  Location     Type
  9457 ;;		None
  9458 ;; Return value:  Size  Location     Type
  9459 ;;                  1    wreg      void 
  9460 ;; Registers used:
  9461 ;;		None
  9462 ;; Tracked objects:
  9463 ;;		On entry : 0/0
  9464 ;;		On exit  : 0/0
  9465 ;;		Unchanged: 0/0
  9466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9467 ;;      Params:         0       0       0       0       0       0
  9468 ;;      Locals:         0       0       0       0       0       0
  9469 ;;      Temps:          0       0       0       0       0       0
  9470 ;;      Totals:         0       0       0       0       0       0
  9471 ;;Total ram usage:        0 bytes
  9472 ;; Hardware stack levels used: 1
  9473 ;; This function calls:
  9474 ;;		Nothing
  9475 ;; This function is called by:
  9476 ;;		_TMR1_Initialize
  9477 ;;		_TMR1_GATE_ISR
  9478 ;; This function uses a non-reentrant model
  9479 ;;
  9480                           
  9481     0003                     _TMR1_DefaultGateInterruptHandler:	
  9482                           ;psect for function _TMR1_DefaultGateInterruptHandler
  9483                           
  9484     0003                     i1l459:	
  9485                           ;incstack = 0
  9486                           ; Regs used in _TMR1_DefaultGateInterruptHandler: []
  9487                           
  9488     0003  0008               	return
  9489     0004                     __end_of_TMR1_DefaultGateInterruptHandler:
  9490                           
  9491                           	psect	text47
  9492     0EA8                     __ptext47:	
  9493 ;; *************** function _mede_height *****************
  9494 ;; Defined at:
  9495 ;;		line 282 in file "main.c"
  9496 ;; Parameters:    Size  Location     Type
  9497 ;;		None
  9498 ;; Auto vars:     Size  Location     Type
  9499 ;;		None
  9500 ;; Return value:  Size  Location     Type
  9501 ;;                  1    wreg      void 
  9502 ;; Registers used:
  9503 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9504 ;; Tracked objects:
  9505 ;;		On entry : 0/0
  9506 ;;		On exit  : 0/0
  9507 ;;		Unchanged: 0/0
  9508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9509 ;;      Params:         0       0       0       0       0       0
  9510 ;;      Locals:         0       4       0       0       0       0
  9511 ;;      Temps:          0       6       0       0       0       0
  9512 ;;      Totals:         0      10       0       0       0       0
  9513 ;;Total ram usage:       10 bytes
  9514 ;; Hardware stack levels used: 1
  9515 ;; Hardware stack levels required when called: 2
  9516 ;; This function calls:
  9517 ;;		_TMR1_ReadTimer
  9518 ;;		_TMR1_Reload
  9519 ;;		___xxtofl
  9520 ;;		i1___flmul
  9521 ;;		i1___fltol
  9522 ;; This function is called by:
  9523 ;;		_main
  9524 ;;		_TMR1_GATE_ISR
  9525 ;; This function uses a non-reentrant model
  9526 ;;
  9527                           
  9528     0EA8                     _mede_height:	
  9529                           ;psect for function _mede_height
  9530                           
  9531     0EA8                     i1l3032:	
  9532                           ;incstack = 0
  9533                           ; Regs used in _mede_height: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9534                           
  9535                           
  9536                           ;main.c: 283:     tempo_voo = TMR1_ReadTimer();
  9537     0EA8  3189  21CA  318E   	fcall	_TMR1_ReadTimer
  9538     0EAB  0871               	movf	?_TMR1_ReadTimer+1,w
  9539     0EAC  0020               	movlb	0	; select bank0
  9540     0EAD  00E5               	movwf	_tempo_voo+1
  9541     0EAE  0870               	movf	?_TMR1_ReadTimer,w
  9542     0EAF  00E4               	movwf	_tempo_voo
  9543     0EB0                     i1l3034:
  9544                           
  9545                           ;main.c: 284:     TMR1_Reload();
  9546     0EB0  3188  20F5  318E   	fcall	_TMR1_Reload
  9547     0EB3                     i1l3036:
  9548                           
  9549                           ;main.c: 285:     if (first_read == 1){
  9550     0EB3  0020               	movlb	0	; select bank0
  9551     0EB4  036F               	decf	_first_read,w
  9552     0EB5  1D03               	btfss	3,2
  9553     0EB6  2EB8               	goto	u260_21
  9554     0EB7  2EB9               	goto	u260_20
  9555     0EB8                     u260_21:
  9556     0EB8  2ECE               	goto	i1l3042
  9557     0EB9                     u260_20:
  9558     0EB9                     i1l3038:
  9559                           
  9560                           ;main.c: 286:         avg_tempo_voo = tempo_voo;
  9561     0EB9  0864               	movf	_tempo_voo,w
  9562     0EBA  00A6               	movwf	___xxtofl@val
  9563     0EBB  0865               	movf	_tempo_voo+1,w
  9564     0EBC  00A7               	movwf	___xxtofl@val+1
  9565     0EBD  01A8               	clrf	___xxtofl@val+2
  9566     0EBE  01A9               	clrf	___xxtofl@val+3
  9567     0EBF  3000               	movlw	0
  9568     0EC0  318D  25FD  318E   	fcall	___xxtofl
  9569     0EC3  0020               	movlb	0	; select bank0
  9570     0EC4  0829               	movf	?___xxtofl+3,w
  9571     0EC5  00D5               	movwf	_avg_tempo_voo+3
  9572     0EC6  0828               	movf	?___xxtofl+2,w
  9573     0EC7  00D4               	movwf	_avg_tempo_voo+2
  9574     0EC8  0827               	movf	?___xxtofl+1,w
  9575     0EC9  00D3               	movwf	_avg_tempo_voo+1
  9576     0ECA  0826               	movf	?___xxtofl,w
  9577     0ECB  00D2               	movwf	_avg_tempo_voo
  9578     0ECC                     i1l3040:
  9579                           
  9580                           ;main.c: 287:         first_read = 0;
  9581     0ECC  01EF               	clrf	_first_read
  9582                           
  9583                           ;main.c: 288:     }
  9584     0ECD  2EFD               	goto	i1l3044
  9585     0ECE                     i1l3042:
  9586                           
  9587                           ;main.c: 290:         avg_tempo_voo = ((uint16_t)avg_tempo_voo + (tempo_voo))>>1;
  9588     0ECE  0855               	movf	_avg_tempo_voo+3,w
  9589     0ECF  00FC               	movwf	i1___fltol@f1+3
  9590     0ED0  0854               	movf	_avg_tempo_voo+2,w
  9591     0ED1  00FB               	movwf	i1___fltol@f1+2
  9592     0ED2  0853               	movf	_avg_tempo_voo+1,w
  9593     0ED3  00FA               	movwf	i1___fltol@f1+1
  9594     0ED4  0852               	movf	_avg_tempo_voo,w
  9595     0ED5  00F9               	movwf	i1___fltol@f1
  9596     0ED6  318B  2384  318E   	fcall	i1___fltol
  9597     0ED9  0020               	movlb	0	; select bank0
  9598     0EDA  0864               	movf	_tempo_voo,w
  9599     0EDB  0779               	addwf	?i1___fltol,w
  9600     0EDC  00C0               	movwf	??_mede_height
  9601     0EDD  0865               	movf	_tempo_voo+1,w
  9602     0EDE  3D7A               	addwfc	?i1___fltol+1,w
  9603     0EDF  00C1               	movwf	??_mede_height+1
  9604     0EE0  36C1               	lsrf	??_mede_height+1,f
  9605     0EE1  0CC0               	rrf	??_mede_height,f
  9606     0EE2  0840               	movf	??_mede_height,w
  9607     0EE3  00C2               	movwf	??_mede_height+2
  9608     0EE4  0841               	movf	??_mede_height+1,w
  9609     0EE5  00C3               	movwf	??_mede_height+3
  9610     0EE6  01C4               	clrf	??_mede_height+4
  9611     0EE7  01C5               	clrf	??_mede_height+5
  9612     0EE8  0845               	movf	??_mede_height+5,w
  9613     0EE9  00A9               	movwf	___xxtofl@val+3
  9614     0EEA  0844               	movf	??_mede_height+4,w
  9615     0EEB  00A8               	movwf	___xxtofl@val+2
  9616     0EEC  0843               	movf	??_mede_height+3,w
  9617     0EED  00A7               	movwf	___xxtofl@val+1
  9618     0EEE  0842               	movf	??_mede_height+2,w
  9619     0EEF  00A6               	movwf	___xxtofl@val
  9620     0EF0  3000               	movlw	0
  9621     0EF1  318D  25FD  318E   	fcall	___xxtofl
  9622     0EF4  0020               	movlb	0	; select bank0
  9623     0EF5  0829               	movf	?___xxtofl+3,w
  9624     0EF6  00D5               	movwf	_avg_tempo_voo+3
  9625     0EF7  0828               	movf	?___xxtofl+2,w
  9626     0EF8  00D4               	movwf	_avg_tempo_voo+2
  9627     0EF9  0827               	movf	?___xxtofl+1,w
  9628     0EFA  00D3               	movwf	_avg_tempo_voo+1
  9629     0EFB  0826               	movf	?___xxtofl,w
  9630     0EFC  00D2               	movwf	_avg_tempo_voo
  9631     0EFD                     i1l3044:
  9632                           
  9633                           ;main.c: 292:     height = (uint16_t)(avg_tempo_voo*lookupTable[(int)(float_temp)]);
  9634     0EFD  086E               	movf	_float_temp+3,w
  9635     0EFE  00FC               	movwf	i1___fltol@f1+3
  9636     0EFF  086D               	movf	_float_temp+2,w
  9637     0F00  00FB               	movwf	i1___fltol@f1+2
  9638     0F01  086C               	movf	_float_temp+1,w
  9639     0F02  00FA               	movwf	i1___fltol@f1+1
  9640     0F03  086B               	movf	_float_temp,w
  9641     0F04  00F9               	movwf	i1___fltol@f1
  9642     0F05  318B  2384  318E   	fcall	i1___fltol
  9643     0F08  087A               	movf	?i1___fltol+1,w
  9644     0F09  0085               	movwf	5
  9645     0F0A  0879               	movf	?i1___fltol,w
  9646     0F0B  0084               	movwf	4
  9647     0F0C  3584               	lslf	4,f
  9648     0F0D  0D85               	rlf	5,f
  9649     0F0E  3584               	lslf	4,f
  9650     0F0F  0D85               	rlf	5,f
  9651     0F10  3000               	movlw	low _lookupTable
  9652     0F11  0784               	addwf	4,f
  9653     0F12  3008               	movlw	high _lookupTable
  9654     0F13  3D05               	addwfc	5,w
  9655     0F14  3880               	iorlw	128
  9656     0F15  0085               	movwf	5
  9657     0F16  3F00               	moviw [0]fsr0
  9658     0F17  0020               	movlb	0	; select bank0
  9659     0F18  00C0               	movwf	??_mede_height
  9660     0F19  3F01               	moviw [1]fsr0
  9661     0F1A  00C1               	movwf	??_mede_height+1
  9662     0F1B  3F02               	moviw [2]fsr0
  9663     0F1C  00C2               	movwf	??_mede_height+2
  9664     0F1D  3F03               	moviw [3]fsr0
  9665     0F1E  00C3               	movwf	??_mede_height+3
  9666     0F1F  0843               	movf	??_mede_height+3,w
  9667     0F20  00AD               	movwf	i1___flmul@a+3
  9668     0F21  0842               	movf	??_mede_height+2,w
  9669     0F22  00AC               	movwf	i1___flmul@a+2
  9670     0F23  0841               	movf	??_mede_height+1,w
  9671     0F24  00AB               	movwf	i1___flmul@a+1
  9672     0F25  0840               	movf	??_mede_height,w
  9673     0F26  00AA               	movwf	i1___flmul@a
  9674     0F27  0855               	movf	_avg_tempo_voo+3,w
  9675     0F28  00A9               	movwf	i1___flmul@b+3
  9676     0F29  0854               	movf	_avg_tempo_voo+2,w
  9677     0F2A  00A8               	movwf	i1___flmul@b+2
  9678     0F2B  0853               	movf	_avg_tempo_voo+1,w
  9679     0F2C  00A7               	movwf	i1___flmul@b+1
  9680     0F2D  0852               	movf	_avg_tempo_voo,w
  9681     0F2E  00A6               	movwf	i1___flmul@b
  9682     0F2F  3182  2299  318E   	fcall	i1___flmul
  9683     0F32  0020               	movlb	0	; select bank0
  9684     0F33  0829               	movf	?i1___flmul+3,w
  9685     0F34  00C9               	movwf	_mede_height$1957+3
  9686     0F35  0828               	movf	?i1___flmul+2,w
  9687     0F36  00C8               	movwf	_mede_height$1957+2
  9688     0F37  0827               	movf	?i1___flmul+1,w
  9689     0F38  00C7               	movwf	_mede_height$1957+1
  9690     0F39  0826               	movf	?i1___flmul,w
  9691     0F3A  00C6               	movwf	_mede_height$1957
  9692     0F3B                     i1l3046:
  9693                           
  9694                           ;main.c: 292:     height = (uint16_t)(avg_tempo_voo*lookupTable[(int)(float_temp)]);
  9695     0F3B  0849               	movf	_mede_height$1957+3,w
  9696     0F3C  00FC               	movwf	i1___fltol@f1+3
  9697     0F3D  0848               	movf	_mede_height$1957+2,w
  9698     0F3E  00FB               	movwf	i1___fltol@f1+2
  9699     0F3F  0847               	movf	_mede_height$1957+1,w
  9700     0F40  00FA               	movwf	i1___fltol@f1+1
  9701     0F41  0846               	movf	_mede_height$1957,w
  9702     0F42  00F9               	movwf	i1___fltol@f1
  9703     0F43  318B  2384  318E   	fcall	i1___fltol
  9704     0F46  087A               	movf	?i1___fltol+1,w
  9705     0F47  0021               	movlb	1	; select bank1
  9706     0F48  00E2               	movwf	(_height+1)^(0+128)
  9707     0F49  0879               	movf	?i1___fltol,w
  9708     0F4A  00E1               	movwf	_height^(0+128)
  9709     0F4B                     i1l3048:
  9710                           
  9711                           ;main.c: 293:     balldist = height;
  9712     0F4B  0861               	movf	_height^(0+128),w
  9713     0F4C  0020               	movlb	0	; select bank0
  9714     0F4D  00DC               	movwf	_balldist
  9715     0F4E  0021               	movlb	1	; select bank1
  9716     0F4F  0862               	movf	(_height+1)^(0+128),w
  9717     0F50  0020               	movlb	0	; select bank0
  9718     0F51  00DD               	movwf	_balldist+1
  9719     0F52  01DE               	clrf	_balldist+2
  9720     0F53                     i1l740:
  9721     0F53  0008               	return
  9722     0F54                     __end_of_mede_height:
  9723                           
  9724                           	psect	text48
  9725     0B84                     __ptext48:	
  9726 ;; *************** function i1___fltol *****************
  9727 ;; Defined at:
  9728 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\fltol.c"
  9729 ;; Parameters:    Size  Location     Type
  9730 ;;  f1              4    9[COMMON] void 
  9731 ;; Auto vars:     Size  Location     Type
  9732 ;;  exp1            1    5[BANK0 ] unsigned char 
  9733 ;;  sign1           1    4[BANK0 ] unsigned char 
  9734 ;; Return value:  Size  Location     Type
  9735 ;;                  4    9[COMMON] long 
  9736 ;; Registers used:
  9737 ;;		wreg, status,2, status,0
  9738 ;; Tracked objects:
  9739 ;;		On entry : 0/0
  9740 ;;		On exit  : 0/0
  9741 ;;		Unchanged: 0/0
  9742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9743 ;;      Params:         4       0       0       0       0       0
  9744 ;;      Locals:         0       2       0       0       0       0
  9745 ;;      Temps:          0       4       0       0       0       0
  9746 ;;      Totals:         4       6       0       0       0       0
  9747 ;;Total ram usage:       10 bytes
  9748 ;; Hardware stack levels used: 1
  9749 ;; This function calls:
  9750 ;;		Nothing
  9751 ;; This function is called by:
  9752 ;;		_mede_height
  9753 ;; This function uses a non-reentrant model
  9754 ;;
  9755                           
  9756     0B84                     i1___fltol:	
  9757                           ;psect for function i1___fltol
  9758                           
  9759     0B84                     i1l2670:	
  9760                           ;incstack = 0
  9761                           ; Regs used in i1___fltol: [wreg+status,2+status,0]
  9762                           
  9763     0B84  1003               	clrc
  9764     0B85  0D7B               	rlf	i1___fltol@f1+2,w
  9765     0B86  0D7C               	rlf	i1___fltol@f1+3,w
  9766     0B87  0020               	movlb	0	; select bank0
  9767     0B88  00A5               	movwf	i1___fltol@exp1
  9768     0B89  0825               	movf	i1___fltol@exp1,w
  9769     0B8A  1D03               	btfss	3,2
  9770     0B8B  2B8D               	goto	u206_21
  9771     0B8C  2B8E               	goto	u206_20
  9772     0B8D                     u206_21:
  9773     0B8D  2B97               	goto	i1l2676
  9774     0B8E                     u206_20:
  9775     0B8E                     i1l2672:
  9776     0B8E  3000               	movlw	0
  9777     0B8F  00FC               	movwf	?i1___fltol+3
  9778     0B90  3000               	movlw	0
  9779     0B91  00FB               	movwf	?i1___fltol+2
  9780     0B92  3000               	movlw	0
  9781     0B93  00FA               	movwf	?i1___fltol+1
  9782     0B94  3000               	movlw	0
  9783     0B95  00F9               	movwf	?i1___fltol
  9784     0B96  2BF4               	goto	i1l1110
  9785     0B97                     i1l2676:
  9786     0B97  0879               	movf	i1___fltol@f1,w
  9787     0B98  00A0               	movwf	??i1___fltol
  9788     0B99  087A               	movf	i1___fltol@f1+1,w
  9789     0B9A  00A1               	movwf	??i1___fltol+1
  9790     0B9B  087B               	movf	i1___fltol@f1+2,w
  9791     0B9C  00A2               	movwf	??i1___fltol+2
  9792     0B9D  087C               	movf	i1___fltol@f1+3,w
  9793     0B9E  00A3               	movwf	??i1___fltol+3
  9794     0B9F  301F               	movlw	31
  9795     0BA0                     u207_25:
  9796     0BA0  36A3               	lsrf	??i1___fltol+3,f
  9797     0BA1  0CA2               	rrf	??i1___fltol+2,f
  9798     0BA2  0CA1               	rrf	??i1___fltol+1,f
  9799     0BA3  0CA0               	rrf	??i1___fltol,f
  9800     0BA4                     u207_20:
  9801     0BA4  0B89               	decfsz	9,f
  9802     0BA5  2BA0               	goto	u207_25
  9803     0BA6  0820               	movf	??i1___fltol,w
  9804     0BA7  00A4               	movwf	i1___fltol@sign1
  9805     0BA8                     i1l2678:
  9806     0BA8  17FB               	bsf	i1___fltol@f1+2,7
  9807     0BA9                     i1l2680:
  9808     0BA9  30FF               	movlw	255
  9809     0BAA  05F9               	andwf	i1___fltol@f1,f
  9810     0BAB  30FF               	movlw	255
  9811     0BAC  05FA               	andwf	i1___fltol@f1+1,f
  9812     0BAD  30FF               	movlw	255
  9813     0BAE  05FB               	andwf	i1___fltol@f1+2,f
  9814     0BAF  3000               	movlw	0
  9815     0BB0  05FC               	andwf	i1___fltol@f1+3,f
  9816     0BB1                     i1l2682:
  9817     0BB1  3096               	movlw	150
  9818     0BB2  02A5               	subwf	i1___fltol@exp1,f
  9819     0BB3                     i1l2684:
  9820     0BB3  1FA5               	btfss	i1___fltol@exp1,7
  9821     0BB4  2BB6               	goto	u208_21
  9822     0BB5  2BB7               	goto	u208_20
  9823     0BB6                     u208_21:
  9824     0BB6  2BCF               	goto	i1l2694
  9825     0BB7                     u208_20:
  9826     0BB7                     i1l2686:
  9827     0BB7  0825               	movf	i1___fltol@exp1,w
  9828     0BB8  3A80               	xorlw	128
  9829     0BB9  3E97               	addlw	151
  9830     0BBA  1803               	skipnc
  9831     0BBB  2BBD               	goto	u209_21
  9832     0BBC  2BBE               	goto	u209_20
  9833     0BBD                     u209_21:
  9834     0BBD  2BBF               	goto	i1l2692
  9835     0BBE                     u209_20:
  9836     0BBE  2B8E               	goto	i1l2672
  9837     0BBF                     i1l2692:
  9838     0BBF  3001               	movlw	1
  9839     0BC0                     u210_25:
  9840     0BC0  36FC               	lsrf	i1___fltol@f1+3,f
  9841     0BC1  0CFB               	rrf	i1___fltol@f1+2,f
  9842     0BC2  0CFA               	rrf	i1___fltol@f1+1,f
  9843     0BC3  0CF9               	rrf	i1___fltol@f1,f
  9844     0BC4  0B89               	decfsz	9,f
  9845     0BC5  2BC0               	goto	u210_25
  9846     0BC6  3001               	movlw	1
  9847     0BC7  00A0               	movwf	??i1___fltol
  9848     0BC8  0820               	movf	??i1___fltol,w
  9849     0BC9  07A5               	addwf	i1___fltol@exp1,f
  9850     0BCA  1D03               	btfss	3,2
  9851     0BCB  2BCD               	goto	u211_21
  9852     0BCC  2BCE               	goto	u211_20
  9853     0BCD                     u211_21:
  9854     0BCD  2BBF               	goto	i1l2692
  9855     0BCE                     u211_20:
  9856     0BCE  2BE4               	goto	i1l2702
  9857     0BCF                     i1l2694:
  9858     0BCF  3020               	movlw	32
  9859     0BD0  0225               	subwf	i1___fltol@exp1,w
  9860     0BD1  1C03               	skipc
  9861     0BD2  2BD4               	goto	u212_21
  9862     0BD3  2BD5               	goto	u212_20
  9863     0BD4                     u212_21:
  9864     0BD4  2BDF               	goto	i1l1117
  9865     0BD5                     u212_20:
  9866     0BD5  2B8E               	goto	i1l2672
  9867     0BD6                     i1l2700:
  9868     0BD6  3001               	movlw	1
  9869     0BD7                     u213_25:
  9870     0BD7  35F9               	lslf	i1___fltol@f1,f
  9871     0BD8  0DFA               	rlf	i1___fltol@f1+1,f
  9872     0BD9  0DFB               	rlf	i1___fltol@f1+2,f
  9873     0BDA  0DFC               	rlf	i1___fltol@f1+3,f
  9874     0BDB  0B89               	decfsz	9,f
  9875     0BDC  2BD7               	goto	u213_25
  9876     0BDD  3001               	movlw	1
  9877     0BDE  02A5               	subwf	i1___fltol@exp1,f
  9878     0BDF                     i1l1117:
  9879     0BDF  0825               	movf	i1___fltol@exp1,w
  9880     0BE0  1D03               	btfss	3,2
  9881     0BE1  2BE3               	goto	u214_21
  9882     0BE2  2BE4               	goto	u214_20
  9883     0BE3                     u214_21:
  9884     0BE3  2BD6               	goto	i1l2700
  9885     0BE4                     u214_20:
  9886     0BE4                     i1l2702:
  9887     0BE4  0824               	movf	i1___fltol@sign1,w
  9888     0BE5  1903               	btfsc	3,2
  9889     0BE6  2BE8               	goto	u215_21
  9890     0BE7  2BE9               	goto	u215_20
  9891     0BE8                     u215_21:
  9892     0BE8  2BF4               	goto	i1l1120
  9893     0BE9                     u215_20:
  9894     0BE9                     i1l2704:
  9895     0BE9  09F9               	comf	i1___fltol@f1,f
  9896     0BEA  09FA               	comf	i1___fltol@f1+1,f
  9897     0BEB  09FB               	comf	i1___fltol@f1+2,f
  9898     0BEC  09FC               	comf	i1___fltol@f1+3,f
  9899     0BED  0AF9               	incf	i1___fltol@f1,f
  9900     0BEE  1903               	skipnz
  9901     0BEF  0AFA               	incf	i1___fltol@f1+1,f
  9902     0BF0  1903               	skipnz
  9903     0BF1  0AFB               	incf	i1___fltol@f1+2,f
  9904     0BF2  1903               	skipnz
  9905     0BF3  0AFC               	incf	i1___fltol@f1+3,f
  9906     0BF4                     i1l1120:
  9907     0BF4                     i1l1110:
  9908     0BF4  0008               	return
  9909     0BF5                     __end_ofi1___fltol:
  9910                           
  9911                           	psect	text49
  9912     0299                     __ptext49:	
  9913 ;; *************** function i1___flmul *****************
  9914 ;; Defined at:
  9915 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcmul.c"
  9916 ;; Parameters:    Size  Location     Type
  9917 ;;  b               4    6[BANK0 ] long 
  9918 ;;  a               4   10[BANK0 ] long 
  9919 ;; Auto vars:     Size  Location     Type
  9920 ;;  prod            4   26[BANK0 ] struct .
  9921 ;;  grs             4   20[BANK0 ] unsigned long 
  9922 ;;  temp            2   30[BANK0 ] struct .
  9923 ;;  bexp            1   25[BANK0 ] unsigned char 
  9924 ;;  aexp            1   24[BANK0 ] unsigned char 
  9925 ;;  sign            1   19[BANK0 ] unsigned char 
  9926 ;; Return value:  Size  Location     Type
  9927 ;;                  4    6[BANK0 ] unsigned char 
  9928 ;; Registers used:
  9929 ;;		wreg, status,2, status,0, pclath, cstack
  9930 ;; Tracked objects:
  9931 ;;		On entry : 0/0
  9932 ;;		On exit  : 0/0
  9933 ;;		Unchanged: 0/0
  9934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9935 ;;      Params:         0       8       0       0       0       0
  9936 ;;      Locals:         0      13       0       0       0       0
  9937 ;;      Temps:          0       5       0       0       0       0
  9938 ;;      Totals:         0      26       0       0       0       0
  9939 ;;Total ram usage:       26 bytes
  9940 ;; Hardware stack levels used: 1
  9941 ;; Hardware stack levels required when called: 1
  9942 ;; This function calls:
  9943 ;;		i1__Umul8_16
  9944 ;; This function is called by:
  9945 ;;		_mede_height
  9946 ;; This function uses a non-reentrant model
  9947 ;;
  9948                           
  9949     0299                     i1___flmul:	
  9950                           ;psect for function i1___flmul
  9951                           
  9952     0299                     i1l2706:	
  9953                           ;incstack = 0
  9954                           ; Regs used in i1___flmul: [wreg+status,2+status,0+pclath+cstack]
  9955                           
  9956     0299  0020               	movlb	0	; select bank0
  9957     029A  0829               	movf	i1___flmul@b+3,w
  9958     029B  3980               	andlw	128
  9959     029C  00B3               	movwf	i1___flmul@sign
  9960     029D                     i1l2708:
  9961     029D  3529               	lslf	i1___flmul@b+3,w
  9962     029E  00B9               	movwf	i1___flmul@bexp
  9963     029F                     i1l2710:
  9964     029F  1FA8               	btfss	i1___flmul@b+2,7
  9965     02A0  2AA2               	goto	u216_21
  9966     02A1  2AA3               	goto	u216_20
  9967     02A2                     u216_21:
  9968     02A2  2AA4               	goto	i1l2714
  9969     02A3                     u216_20:
  9970     02A3                     i1l2712:
  9971     02A3  1439               	bsf	i1___flmul@bexp,0
  9972     02A4                     i1l2714:
  9973     02A4  0839               	movf	i1___flmul@bexp,w
  9974     02A5  1903               	btfsc	3,2
  9975     02A6  2AA8               	goto	u217_21
  9976     02A7  2AA9               	goto	u217_20
  9977     02A8                     u217_21:
  9978     02A8  2AB8               	goto	i1l2722
  9979     02A9                     u217_20:
  9980     02A9                     i1l2716:
  9981     02A9  0A39               	incf	i1___flmul@bexp,w
  9982     02AA  1D03               	btfss	3,2
  9983     02AB  2AAD               	goto	u218_21
  9984     02AC  2AAE               	goto	u218_20
  9985     02AD                     u218_21:
  9986     02AD  2AB6               	goto	i1l2720
  9987     02AE                     u218_20:
  9988     02AE                     i1l2718:
  9989     02AE  3000               	movlw	0
  9990     02AF  00A9               	movwf	i1___flmul@b+3
  9991     02B0  3000               	movlw	0
  9992     02B1  00A8               	movwf	i1___flmul@b+2
  9993     02B2  3000               	movlw	0
  9994     02B3  00A7               	movwf	i1___flmul@b+1
  9995     02B4  3000               	movlw	0
  9996     02B5  00A6               	movwf	i1___flmul@b
  9997     02B6                     i1l2720:
  9998     02B6  17A8               	bsf	i1___flmul@b+2,7
  9999     02B7  2AC0               	goto	i1l2724
 10000     02B8                     i1l2722:
 10001     02B8  3000               	movlw	0
 10002     02B9  00A9               	movwf	i1___flmul@b+3
 10003     02BA  3000               	movlw	0
 10004     02BB  00A8               	movwf	i1___flmul@b+2
 10005     02BC  3000               	movlw	0
 10006     02BD  00A7               	movwf	i1___flmul@b+1
 10007     02BE  3000               	movlw	0
 10008     02BF  00A6               	movwf	i1___flmul@b
 10009     02C0                     i1l2724:
 10010     02C0  082D               	movf	i1___flmul@a+3,w
 10011     02C1  3980               	andlw	128
 10012     02C2  00AE               	movwf	??i1___flmul
 10013     02C3  082E               	movf	??i1___flmul,w
 10014     02C4  06B3               	xorwf	i1___flmul@sign,f
 10015     02C5                     i1l2726:
 10016     02C5  352D               	lslf	i1___flmul@a+3,w
 10017     02C6  00B8               	movwf	i1___flmul@aexp
 10018     02C7                     i1l2728:
 10019     02C7  1FAC               	btfss	i1___flmul@a+2,7
 10020     02C8  2ACA               	goto	u219_21
 10021     02C9  2ACB               	goto	u219_20
 10022     02CA                     u219_21:
 10023     02CA  2ACC               	goto	i1l2732
 10024     02CB                     u219_20:
 10025     02CB                     i1l2730:
 10026     02CB  1438               	bsf	i1___flmul@aexp,0
 10027     02CC                     i1l2732:
 10028     02CC  0838               	movf	i1___flmul@aexp,w
 10029     02CD  1903               	btfsc	3,2
 10030     02CE  2AD0               	goto	u220_21
 10031     02CF  2AD1               	goto	u220_20
 10032     02D0                     u220_21:
 10033     02D0  2AE0               	goto	i1l2740
 10034     02D1                     u220_20:
 10035     02D1                     i1l2734:
 10036     02D1  0A38               	incf	i1___flmul@aexp,w
 10037     02D2  1D03               	btfss	3,2
 10038     02D3  2AD5               	goto	u221_21
 10039     02D4  2AD6               	goto	u221_20
 10040     02D5                     u221_21:
 10041     02D5  2ADE               	goto	i1l2738
 10042     02D6                     u221_20:
 10043     02D6                     i1l2736:
 10044     02D6  3000               	movlw	0
 10045     02D7  00AD               	movwf	i1___flmul@a+3
 10046     02D8  3000               	movlw	0
 10047     02D9  00AC               	movwf	i1___flmul@a+2
 10048     02DA  3000               	movlw	0
 10049     02DB  00AB               	movwf	i1___flmul@a+1
 10050     02DC  3000               	movlw	0
 10051     02DD  00AA               	movwf	i1___flmul@a
 10052     02DE                     i1l2738:
 10053     02DE  17AC               	bsf	i1___flmul@a+2,7
 10054     02DF  2AE8               	goto	i1l2742
 10055     02E0                     i1l2740:
 10056     02E0  3000               	movlw	0
 10057     02E1  00AD               	movwf	i1___flmul@a+3
 10058     02E2  3000               	movlw	0
 10059     02E3  00AC               	movwf	i1___flmul@a+2
 10060     02E4  3000               	movlw	0
 10061     02E5  00AB               	movwf	i1___flmul@a+1
 10062     02E6  3000               	movlw	0
 10063     02E7  00AA               	movwf	i1___flmul@a
 10064     02E8                     i1l2742:
 10065     02E8  0838               	movf	i1___flmul@aexp,w
 10066     02E9  1903               	btfsc	3,2
 10067     02EA  2AEC               	goto	u222_21
 10068     02EB  2AED               	goto	u222_20
 10069     02EC                     u222_21:
 10070     02EC  2AF2               	goto	i1l2746
 10071     02ED                     u222_20:
 10072     02ED                     i1l2744:
 10073     02ED  0839               	movf	i1___flmul@bexp,w
 10074     02EE  1D03               	btfss	3,2
 10075     02EF  2AF1               	goto	u223_21
 10076     02F0  2AF2               	goto	u223_20
 10077     02F1                     u223_21:
 10078     02F1  2AFB               	goto	i1l2750
 10079     02F2                     u223_20:
 10080     02F2                     i1l2746:
 10081     02F2  3000               	movlw	0
 10082     02F3  00A9               	movwf	?i1___flmul+3
 10083     02F4  3000               	movlw	0
 10084     02F5  00A8               	movwf	?i1___flmul+2
 10085     02F6  3000               	movlw	0
 10086     02F7  00A7               	movwf	?i1___flmul+1
 10087     02F8  3000               	movlw	0
 10088     02F9  00A6               	movwf	?i1___flmul
 10089     02FA  2CD3               	goto	i1l1313
 10090     02FB                     i1l2750:
 10091     02FB  0826               	movf	i1___flmul@b,w
 10092     02FC  00F0               	movwf	i1__Umul8_16@multiplicand
 10093     02FD  082C               	movf	i1___flmul@a+2,w
 10094     02FE  318A  2237  3182   	fcall	i1__Umul8_16
 10095     0301  0871               	movf	?i1__Umul8_16+1,w
 10096     0302  0020               	movlb	0	; select bank0
 10097     0303  00BF               	movwf	i1___flmul@temp+1
 10098     0304  0870               	movf	?i1__Umul8_16,w
 10099     0305  00BE               	movwf	i1___flmul@temp
 10100     0306                     i1l2752:
 10101     0306  083E               	movf	i1___flmul@temp,w
 10102     0307  00AE               	movwf	??i1___flmul
 10103     0308  01AF               	clrf	??i1___flmul+1
 10104     0309  01B0               	clrf	??i1___flmul+2
 10105     030A  01B1               	clrf	??i1___flmul+3
 10106     030B  0831               	movf	??i1___flmul+3,w
 10107     030C  00B7               	movwf	i1___flmul@grs+3
 10108     030D  0830               	movf	??i1___flmul+2,w
 10109     030E  00B6               	movwf	i1___flmul@grs+2
 10110     030F  082F               	movf	??i1___flmul+1,w
 10111     0310  00B5               	movwf	i1___flmul@grs+1
 10112     0311  082E               	movf	??i1___flmul,w
 10113     0312  00B4               	movwf	i1___flmul@grs
 10114     0313                     i1l2754:
 10115     0313  083F               	movf	i1___flmul@temp+1,w
 10116     0314  00AE               	movwf	??i1___flmul
 10117     0315  01AF               	clrf	??i1___flmul+1
 10118     0316  01B0               	clrf	??i1___flmul+2
 10119     0317  01B1               	clrf	??i1___flmul+3
 10120     0318  0831               	movf	??i1___flmul+3,w
 10121     0319  00BD               	movwf	i1___flmul@prod+3
 10122     031A  0830               	movf	??i1___flmul+2,w
 10123     031B  00BC               	movwf	i1___flmul@prod+2
 10124     031C  082F               	movf	??i1___flmul+1,w
 10125     031D  00BB               	movwf	i1___flmul@prod+1
 10126     031E  082E               	movf	??i1___flmul,w
 10127     031F  00BA               	movwf	i1___flmul@prod
 10128     0320  0827               	movf	i1___flmul@b+1,w
 10129     0321  00F0               	movwf	i1__Umul8_16@multiplicand
 10130     0322  082B               	movf	i1___flmul@a+1,w
 10131     0323  318A  2237  3182   	fcall	i1__Umul8_16
 10132     0326  0871               	movf	?i1__Umul8_16+1,w
 10133     0327  0020               	movlb	0	; select bank0
 10134     0328  00BF               	movwf	i1___flmul@temp+1
 10135     0329  0870               	movf	?i1__Umul8_16,w
 10136     032A  00BE               	movwf	i1___flmul@temp
 10137     032B                     i1l2756:
 10138     032B  083E               	movf	i1___flmul@temp,w
 10139     032C  00AE               	movwf	??i1___flmul
 10140     032D  01AF               	clrf	??i1___flmul+1
 10141     032E  01B0               	clrf	??i1___flmul+2
 10142     032F  01B1               	clrf	??i1___flmul+3
 10143     0330  082E               	movf	??i1___flmul,w
 10144     0331  07B4               	addwf	i1___flmul@grs,f
 10145     0332  082F               	movf	??i1___flmul+1,w
 10146     0333  3DB5               	addwfc	i1___flmul@grs+1,f
 10147     0334  0830               	movf	??i1___flmul+2,w
 10148     0335  3DB6               	addwfc	i1___flmul@grs+2,f
 10149     0336  0831               	movf	??i1___flmul+3,w
 10150     0337  3DB7               	addwfc	i1___flmul@grs+3,f
 10151     0338                     i1l2758:
 10152     0338  083F               	movf	i1___flmul@temp+1,w
 10153     0339  00AE               	movwf	??i1___flmul
 10154     033A  01AF               	clrf	??i1___flmul+1
 10155     033B  01B0               	clrf	??i1___flmul+2
 10156     033C  01B1               	clrf	??i1___flmul+3
 10157     033D  082E               	movf	??i1___flmul,w
 10158     033E  07BA               	addwf	i1___flmul@prod,f
 10159     033F  082F               	movf	??i1___flmul+1,w
 10160     0340  3DBB               	addwfc	i1___flmul@prod+1,f
 10161     0341  0830               	movf	??i1___flmul+2,w
 10162     0342  3DBC               	addwfc	i1___flmul@prod+2,f
 10163     0343  0831               	movf	??i1___flmul+3,w
 10164     0344  3DBD               	addwfc	i1___flmul@prod+3,f
 10165     0345  0828               	movf	i1___flmul@b+2,w
 10166     0346  00F0               	movwf	i1__Umul8_16@multiplicand
 10167     0347  082A               	movf	i1___flmul@a,w
 10168     0348  318A  2237  3182   	fcall	i1__Umul8_16
 10169     034B  0871               	movf	?i1__Umul8_16+1,w
 10170     034C  0020               	movlb	0	; select bank0
 10171     034D  00BF               	movwf	i1___flmul@temp+1
 10172     034E  0870               	movf	?i1__Umul8_16,w
 10173     034F  00BE               	movwf	i1___flmul@temp
 10174     0350                     i1l2760:
 10175     0350  083E               	movf	i1___flmul@temp,w
 10176     0351  00AE               	movwf	??i1___flmul
 10177     0352  01AF               	clrf	??i1___flmul+1
 10178     0353  01B0               	clrf	??i1___flmul+2
 10179     0354  01B1               	clrf	??i1___flmul+3
 10180     0355  082E               	movf	??i1___flmul,w
 10181     0356  07B4               	addwf	i1___flmul@grs,f
 10182     0357  082F               	movf	??i1___flmul+1,w
 10183     0358  3DB5               	addwfc	i1___flmul@grs+1,f
 10184     0359  0830               	movf	??i1___flmul+2,w
 10185     035A  3DB6               	addwfc	i1___flmul@grs+2,f
 10186     035B  0831               	movf	??i1___flmul+3,w
 10187     035C  3DB7               	addwfc	i1___flmul@grs+3,f
 10188     035D                     i1l2762:
 10189     035D  083F               	movf	i1___flmul@temp+1,w
 10190     035E  00AE               	movwf	??i1___flmul
 10191     035F  01AF               	clrf	??i1___flmul+1
 10192     0360  01B0               	clrf	??i1___flmul+2
 10193     0361  01B1               	clrf	??i1___flmul+3
 10194     0362  082E               	movf	??i1___flmul,w
 10195     0363  07BA               	addwf	i1___flmul@prod,f
 10196     0364  082F               	movf	??i1___flmul+1,w
 10197     0365  3DBB               	addwfc	i1___flmul@prod+1,f
 10198     0366  0830               	movf	??i1___flmul+2,w
 10199     0367  3DBC               	addwfc	i1___flmul@prod+2,f
 10200     0368  0831               	movf	??i1___flmul+3,w
 10201     0369  3DBD               	addwfc	i1___flmul@prod+3,f
 10202     036A                     i1l2764:
 10203     036A  3008               	movlw	8
 10204     036B                     u224_25:
 10205     036B  35B4               	lslf	i1___flmul@grs,f
 10206     036C  0DB5               	rlf	i1___flmul@grs+1,f
 10207     036D  0DB6               	rlf	i1___flmul@grs+2,f
 10208     036E  0DB7               	rlf	i1___flmul@grs+3,f
 10209     036F  0B89               	decfsz	9,f
 10210     0370  2B6B               	goto	u224_25
 10211     0371                     i1l2766:
 10212     0371  0827               	movf	i1___flmul@b+1,w
 10213     0372  00F0               	movwf	i1__Umul8_16@multiplicand
 10214     0373  082A               	movf	i1___flmul@a,w
 10215     0374  318A  2237  3182   	fcall	i1__Umul8_16
 10216     0377  0871               	movf	?i1__Umul8_16+1,w
 10217     0378  0020               	movlb	0	; select bank0
 10218     0379  00BF               	movwf	i1___flmul@temp+1
 10219     037A  0870               	movf	?i1__Umul8_16,w
 10220     037B  00BE               	movwf	i1___flmul@temp
 10221     037C                     i1l2768:
 10222     037C  083E               	movf	i1___flmul@temp,w
 10223     037D  07B4               	addwf	i1___flmul@grs,f
 10224     037E  083F               	movf	i1___flmul@temp+1,w
 10225     037F  3DB5               	addwfc	i1___flmul@grs+1,f
 10226     0380  3000               	movlw	0
 10227     0381  3DB6               	addwfc	i1___flmul@grs+2,f
 10228     0382  3DB7               	addwfc	i1___flmul@grs+3,f
 10229     0383                     i1l2770:
 10230     0383  0826               	movf	i1___flmul@b,w
 10231     0384  00F0               	movwf	i1__Umul8_16@multiplicand
 10232     0385  082B               	movf	i1___flmul@a+1,w
 10233     0386  318A  2237  3182   	fcall	i1__Umul8_16
 10234     0389  0871               	movf	?i1__Umul8_16+1,w
 10235     038A  0020               	movlb	0	; select bank0
 10236     038B  00BF               	movwf	i1___flmul@temp+1
 10237     038C  0870               	movf	?i1__Umul8_16,w
 10238     038D  00BE               	movwf	i1___flmul@temp
 10239     038E                     i1l2772:
 10240     038E  083E               	movf	i1___flmul@temp,w
 10241     038F  07B4               	addwf	i1___flmul@grs,f
 10242     0390  083F               	movf	i1___flmul@temp+1,w
 10243     0391  3DB5               	addwfc	i1___flmul@grs+1,f
 10244     0392  3000               	movlw	0
 10245     0393  3DB6               	addwfc	i1___flmul@grs+2,f
 10246     0394  3DB7               	addwfc	i1___flmul@grs+3,f
 10247     0395                     i1l2774:
 10248     0395  3008               	movlw	8
 10249     0396                     u225_25:
 10250     0396  35B4               	lslf	i1___flmul@grs,f
 10251     0397  0DB5               	rlf	i1___flmul@grs+1,f
 10252     0398  0DB6               	rlf	i1___flmul@grs+2,f
 10253     0399  0DB7               	rlf	i1___flmul@grs+3,f
 10254     039A  0B89               	decfsz	9,f
 10255     039B  2B96               	goto	u225_25
 10256     039C  0826               	movf	i1___flmul@b,w
 10257     039D  00F0               	movwf	i1__Umul8_16@multiplicand
 10258     039E  082A               	movf	i1___flmul@a,w
 10259     039F  318A  2237  3182   	fcall	i1__Umul8_16
 10260     03A2  0871               	movf	?i1__Umul8_16+1,w
 10261     03A3  0020               	movlb	0	; select bank0
 10262     03A4  00BF               	movwf	i1___flmul@temp+1
 10263     03A5  0870               	movf	?i1__Umul8_16,w
 10264     03A6  00BE               	movwf	i1___flmul@temp
 10265     03A7                     i1l2776:
 10266     03A7  083E               	movf	i1___flmul@temp,w
 10267     03A8  07B4               	addwf	i1___flmul@grs,f
 10268     03A9  083F               	movf	i1___flmul@temp+1,w
 10269     03AA  3DB5               	addwfc	i1___flmul@grs+1,f
 10270     03AB  3000               	movlw	0
 10271     03AC  3DB6               	addwfc	i1___flmul@grs+2,f
 10272     03AD  3DB7               	addwfc	i1___flmul@grs+3,f
 10273     03AE                     i1l2778:
 10274     03AE  0827               	movf	i1___flmul@b+1,w
 10275     03AF  00F0               	movwf	i1__Umul8_16@multiplicand
 10276     03B0  082C               	movf	i1___flmul@a+2,w
 10277     03B1  318A  2237  3182   	fcall	i1__Umul8_16
 10278     03B4  0871               	movf	?i1__Umul8_16+1,w
 10279     03B5  0020               	movlb	0	; select bank0
 10280     03B6  00BF               	movwf	i1___flmul@temp+1
 10281     03B7  0870               	movf	?i1__Umul8_16,w
 10282     03B8  00BE               	movwf	i1___flmul@temp
 10283     03B9  083E               	movf	i1___flmul@temp,w
 10284     03BA  07BA               	addwf	i1___flmul@prod,f
 10285     03BB  083F               	movf	i1___flmul@temp+1,w
 10286     03BC  3DBB               	addwfc	i1___flmul@prod+1,f
 10287     03BD  3000               	movlw	0
 10288     03BE  3DBC               	addwfc	i1___flmul@prod+2,f
 10289     03BF  3DBD               	addwfc	i1___flmul@prod+3,f
 10290     03C0                     i1l2780:
 10291     03C0  0828               	movf	i1___flmul@b+2,w
 10292     03C1  00F0               	movwf	i1__Umul8_16@multiplicand
 10293     03C2  082B               	movf	i1___flmul@a+1,w
 10294     03C3  318A  2237  3182   	fcall	i1__Umul8_16
 10295     03C6  0871               	movf	?i1__Umul8_16+1,w
 10296     03C7  0020               	movlb	0	; select bank0
 10297     03C8  00BF               	movwf	i1___flmul@temp+1
 10298     03C9  0870               	movf	?i1__Umul8_16,w
 10299     03CA  00BE               	movwf	i1___flmul@temp
 10300     03CB                     i1l2782:
 10301     03CB  083E               	movf	i1___flmul@temp,w
 10302     03CC  07BA               	addwf	i1___flmul@prod,f
 10303     03CD  083F               	movf	i1___flmul@temp+1,w
 10304     03CE  3DBB               	addwfc	i1___flmul@prod+1,f
 10305     03CF  3000               	movlw	0
 10306     03D0  3DBC               	addwfc	i1___flmul@prod+2,f
 10307     03D1  3DBD               	addwfc	i1___flmul@prod+3,f
 10308     03D2  0828               	movf	i1___flmul@b+2,w
 10309     03D3  00F0               	movwf	i1__Umul8_16@multiplicand
 10310     03D4  082C               	movf	i1___flmul@a+2,w
 10311     03D5  318A  2237  3182   	fcall	i1__Umul8_16
 10312     03D8  0871               	movf	?i1__Umul8_16+1,w
 10313     03D9  0020               	movlb	0	; select bank0
 10314     03DA  00BF               	movwf	i1___flmul@temp+1
 10315     03DB  0870               	movf	?i1__Umul8_16,w
 10316     03DC  00BE               	movwf	i1___flmul@temp
 10317     03DD                     i1l2784:
 10318     03DD  083E               	movf	i1___flmul@temp,w
 10319     03DE  00AE               	movwf	??i1___flmul
 10320     03DF  083F               	movf	i1___flmul@temp+1,w
 10321     03E0  00AF               	movwf	??i1___flmul+1
 10322     03E1  01B0               	clrf	??i1___flmul+2
 10323     03E2  01B1               	clrf	??i1___flmul+3
 10324     03E3  3008               	movlw	8
 10325     03E4                     u226_25:
 10326     03E4  35AE               	lslf	??i1___flmul,f
 10327     03E5  0DAF               	rlf	??i1___flmul+1,f
 10328     03E6  0DB0               	rlf	??i1___flmul+2,f
 10329     03E7  0DB1               	rlf	??i1___flmul+3,f
 10330     03E8                     u226_20:
 10331     03E8  0B89               	decfsz	9,f
 10332     03E9  2BE4               	goto	u226_25
 10333     03EA  082E               	movf	??i1___flmul,w
 10334     03EB  07BA               	addwf	i1___flmul@prod,f
 10335     03EC  082F               	movf	??i1___flmul+1,w
 10336     03ED  3DBB               	addwfc	i1___flmul@prod+1,f
 10337     03EE  0830               	movf	??i1___flmul+2,w
 10338     03EF  3DBC               	addwfc	i1___flmul@prod+2,f
 10339     03F0  0831               	movf	??i1___flmul+3,w
 10340     03F1  3DBD               	addwfc	i1___flmul@prod+3,f
 10341     03F2                     i1l2786:
 10342     03F2  0834               	movf	i1___flmul@grs,w
 10343     03F3  00AE               	movwf	??i1___flmul
 10344     03F4  0835               	movf	i1___flmul@grs+1,w
 10345     03F5  00AF               	movwf	??i1___flmul+1
 10346     03F6  0836               	movf	i1___flmul@grs+2,w
 10347     03F7  00B0               	movwf	??i1___flmul+2
 10348     03F8  0837               	movf	i1___flmul@grs+3,w
 10349     03F9  00B1               	movwf	??i1___flmul+3
 10350     03FA  3018               	movlw	24
 10351     03FB                     u227_25:
 10352     03FB  36B1               	lsrf	??i1___flmul+3,f
 10353     03FC  0CB0               	rrf	??i1___flmul+2,f
 10354     03FD  0CAF               	rrf	??i1___flmul+1,f
 10355     03FE  0CAE               	rrf	??i1___flmul,f
 10356     03FF                     u227_20:
 10357     03FF  0B89               	decfsz	9,f
 10358     0400  2BFB               	goto	u227_25
 10359     0401  082E               	movf	??i1___flmul,w
 10360     0402  07BA               	addwf	i1___flmul@prod,f
 10361     0403  082F               	movf	??i1___flmul+1,w
 10362     0404  3DBB               	addwfc	i1___flmul@prod+1,f
 10363     0405  0830               	movf	??i1___flmul+2,w
 10364     0406  3DBC               	addwfc	i1___flmul@prod+2,f
 10365     0407  0831               	movf	??i1___flmul+3,w
 10366     0408  3DBD               	addwfc	i1___flmul@prod+3,f
 10367     0409                     i1l2788:
 10368     0409  3008               	movlw	8
 10369     040A                     u228_25:
 10370     040A  35B4               	lslf	i1___flmul@grs,f
 10371     040B  0DB5               	rlf	i1___flmul@grs+1,f
 10372     040C  0DB6               	rlf	i1___flmul@grs+2,f
 10373     040D  0DB7               	rlf	i1___flmul@grs+3,f
 10374     040E  0B89               	decfsz	9,f
 10375     040F  2C0A               	goto	u228_25
 10376     0410                     i1l2790:
 10377     0410  0839               	movf	i1___flmul@bexp,w
 10378     0411  0738               	addwf	i1___flmul@aexp,w
 10379     0412  00AE               	movwf	??i1___flmul
 10380     0413  01AF               	clrf	??i1___flmul+1
 10381     0414  0DAF               	rlf	??i1___flmul+1,f
 10382     0415  082E               	movf	??i1___flmul,w
 10383     0416  3E82               	addlw	130
 10384     0417  00BE               	movwf	i1___flmul@temp
 10385     0418  30FF               	movlw	255
 10386     0419  3D2F               	addwfc	??i1___flmul+1,w
 10387     041A  00BF               	movwf	i1___flmul@temp+1
 10388     041B  2C33               	goto	i1l2802
 10389     041C                     i1l2792:
 10390     041C  3001               	movlw	1
 10391     041D                     u229_25:
 10392     041D  35BA               	lslf	i1___flmul@prod,f
 10393     041E  0DBB               	rlf	i1___flmul@prod+1,f
 10394     041F  0DBC               	rlf	i1___flmul@prod+2,f
 10395     0420  0DBD               	rlf	i1___flmul@prod+3,f
 10396     0421  0B89               	decfsz	9,f
 10397     0422  2C1D               	goto	u229_25
 10398     0423                     i1l2794:
 10399     0423  1FB7               	btfss	i1___flmul@grs+3,7
 10400     0424  2C26               	goto	u230_21
 10401     0425  2C27               	goto	u230_20
 10402     0426                     u230_21:
 10403     0426  2C28               	goto	i1l2798
 10404     0427                     u230_20:
 10405     0427                     i1l2796:
 10406     0427  143A               	bsf	i1___flmul@prod,0
 10407     0428                     i1l2798:
 10408     0428  3001               	movlw	1
 10409     0429                     u231_25:
 10410     0429  35B4               	lslf	i1___flmul@grs,f
 10411     042A  0DB5               	rlf	i1___flmul@grs+1,f
 10412     042B  0DB6               	rlf	i1___flmul@grs+2,f
 10413     042C  0DB7               	rlf	i1___flmul@grs+3,f
 10414     042D  0B89               	decfsz	9,f
 10415     042E  2C29               	goto	u231_25
 10416     042F                     i1l2800:
 10417     042F  30FF               	movlw	255
 10418     0430  07BE               	addwf	i1___flmul@temp,f
 10419     0431  30FF               	movlw	255
 10420     0432  3DBF               	addwfc	i1___flmul@temp+1,f
 10421     0433                     i1l2802:
 10422     0433  1FBC               	btfss	i1___flmul@prod+2,7
 10423     0434  2C36               	goto	u232_21
 10424     0435  2C37               	goto	u232_20
 10425     0436                     u232_21:
 10426     0436  2C1C               	goto	i1l2792
 10427     0437                     u232_20:
 10428     0437                     i1l2804:
 10429     0437  01B8               	clrf	i1___flmul@aexp
 10430     0438                     i1l2806:
 10431     0438  1FB7               	btfss	i1___flmul@grs+3,7
 10432     0439  2C3B               	goto	u233_21
 10433     043A  2C3C               	goto	u233_20
 10434     043B                     u233_21:
 10435     043B  2C58               	goto	i1l2814
 10436     043C                     u233_20:
 10437     043C                     i1l2808:
 10438     043C  30FF               	movlw	255
 10439     043D  0534               	andwf	i1___flmul@grs,w
 10440     043E  00AE               	movwf	??i1___flmul
 10441     043F  30FF               	movlw	255
 10442     0440  0535               	andwf	i1___flmul@grs+1,w
 10443     0441  00AF               	movwf	??i1___flmul+1
 10444     0442  30FF               	movlw	255
 10445     0443  0536               	andwf	i1___flmul@grs+2,w
 10446     0444  00B0               	movwf	??i1___flmul+2
 10447     0445  307F               	movlw	127
 10448     0446  0537               	andwf	i1___flmul@grs+3,w
 10449     0447  00B1               	movwf	??i1___flmul+3
 10450     0448  0831               	movf	??i1___flmul+3,w
 10451     0449  0430               	iorwf	??i1___flmul+2,w
 10452     044A  042F               	iorwf	??i1___flmul+1,w
 10453     044B  042E               	iorwf	??i1___flmul,w
 10454     044C  1903               	skipnz
 10455     044D  2C4F               	goto	u234_21
 10456     044E  2C50               	goto	u234_20
 10457     044F                     u234_21:
 10458     044F  2C53               	goto	i1l1319
 10459     0450                     u234_20:
 10460     0450                     i1l2810:
 10461     0450  01B8               	clrf	i1___flmul@aexp
 10462     0451  0AB8               	incf	i1___flmul@aexp,f
 10463     0452  2C58               	goto	i1l2814
 10464     0453                     i1l1319:
 10465     0453  1C3A               	btfss	i1___flmul@prod,0
 10466     0454  2C56               	goto	u235_21
 10467     0455  2C57               	goto	u235_20
 10468     0456                     u235_21:
 10469     0456  2C58               	goto	i1l2814
 10470     0457                     u235_20:
 10471     0457  2C50               	goto	i1l2810
 10472     0458                     i1l2814:
 10473     0458  0838               	movf	i1___flmul@aexp,w
 10474     0459  1903               	btfsc	3,2
 10475     045A  2C5C               	goto	u236_21
 10476     045B  2C5D               	goto	u236_20
 10477     045C                     u236_21:
 10478     045C  2C85               	goto	i1l2824
 10479     045D                     u236_20:
 10480     045D                     i1l2816:
 10481     045D  3001               	movlw	1
 10482     045E  07BA               	addwf	i1___flmul@prod,f
 10483     045F  3000               	movlw	0
 10484     0460  3DBB               	addwfc	i1___flmul@prod+1,f
 10485     0461  3000               	movlw	0
 10486     0462  3DBC               	addwfc	i1___flmul@prod+2,f
 10487     0463  3000               	movlw	0
 10488     0464  3DBD               	addwfc	i1___flmul@prod+3,f
 10489     0465                     i1l2818:
 10490     0465  1C3D               	btfss	i1___flmul@prod+3,0
 10491     0466  2C68               	goto	u237_21
 10492     0467  2C69               	goto	u237_20
 10493     0468                     u237_21:
 10494     0468  2C85               	goto	i1l2824
 10495     0469                     u237_20:
 10496     0469                     i1l2820:
 10497     0469  083A               	movf	i1___flmul@prod,w
 10498     046A  00AE               	movwf	??i1___flmul
 10499     046B  083B               	movf	i1___flmul@prod+1,w
 10500     046C  00AF               	movwf	??i1___flmul+1
 10501     046D  083C               	movf	i1___flmul@prod+2,w
 10502     046E  00B0               	movwf	??i1___flmul+2
 10503     046F  083D               	movf	i1___flmul@prod+3,w
 10504     0470  00B1               	movwf	??i1___flmul+3
 10505     0471  3001               	movlw	1
 10506     0472  00B2               	movwf	??i1___flmul+4
 10507     0473                     u238_25:
 10508     0473  37B1               	asrf	??i1___flmul+3,f
 10509     0474  0CB0               	rrf	??i1___flmul+2,f
 10510     0475  0CAF               	rrf	??i1___flmul+1,f
 10511     0476  0CAE               	rrf	??i1___flmul,f
 10512     0477                     u238_20:
 10513     0477  0BB2               	decfsz	??i1___flmul+4,f
 10514     0478  2C73               	goto	u238_25
 10515     0479  0831               	movf	??i1___flmul+3,w
 10516     047A  00BD               	movwf	i1___flmul@prod+3
 10517     047B  0830               	movf	??i1___flmul+2,w
 10518     047C  00BC               	movwf	i1___flmul@prod+2
 10519     047D  082F               	movf	??i1___flmul+1,w
 10520     047E  00BB               	movwf	i1___flmul@prod+1
 10521     047F  082E               	movf	??i1___flmul,w
 10522     0480  00BA               	movwf	i1___flmul@prod
 10523     0481                     i1l2822:
 10524     0481  3001               	movlw	1
 10525     0482  07BE               	addwf	i1___flmul@temp,f
 10526     0483  3000               	movlw	0
 10527     0484  3DBF               	addwfc	i1___flmul@temp+1,f
 10528     0485                     i1l2824:
 10529     0485  083F               	movf	i1___flmul@temp+1,w
 10530     0486  3A80               	xorlw	128
 10531     0487  00AE               	movwf	??i1___flmul
 10532     0488  3080               	movlw	128
 10533     0489  022E               	subwf	??i1___flmul,w
 10534     048A  1D03               	skipz
 10535     048B  2C8E               	goto	u239_25
 10536     048C  30FF               	movlw	255
 10537     048D  023E               	subwf	i1___flmul@temp,w
 10538     048E                     u239_25:
 10539     048E  1C03               	skipc
 10540     048F  2C91               	goto	u239_21
 10541     0490  2C92               	goto	u239_20
 10542     0491                     u239_21:
 10543     0491  2C9C               	goto	i1l2828
 10544     0492                     u239_20:
 10545     0492                     i1l2826:
 10546     0492  307F               	movlw	127
 10547     0493  0020               	movlb	0	; select bank0
 10548     0494  00BD               	movwf	i1___flmul@prod+3
 10549     0495  3080               	movlw	128
 10550     0496  00BC               	movwf	i1___flmul@prod+2
 10551     0497  3000               	movlw	0
 10552     0498  00BB               	movwf	i1___flmul@prod+1
 10553     0499  3000               	movlw	0
 10554     049A  00BA               	movwf	i1___flmul@prod
 10555     049B  2CC7               	goto	i1l1325
 10556     049C                     i1l2828:
 10557     049C  0020               	movlb	0	; select bank0
 10558     049D  083F               	movf	i1___flmul@temp+1,w
 10559     049E  3A80               	xorlw	128
 10560     049F  00AE               	movwf	??i1___flmul
 10561     04A0  3080               	movlw	128
 10562     04A1  022E               	subwf	??i1___flmul,w
 10563     04A2  1D03               	skipz
 10564     04A3  2CA6               	goto	u240_25
 10565     04A4  3001               	movlw	1
 10566     04A5  023E               	subwf	i1___flmul@temp,w
 10567     04A6                     u240_25:
 10568     04A6  1803               	skipnc
 10569     04A7  2CA9               	goto	u240_21
 10570     04A8  2CAA               	goto	u240_20
 10571     04A9                     u240_21:
 10572     04A9  2CB5               	goto	i1l2834
 10573     04AA                     u240_20:
 10574     04AA                     i1l2830:
 10575     04AA  3000               	movlw	0
 10576     04AB  0020               	movlb	0	; select bank0
 10577     04AC  00BD               	movwf	i1___flmul@prod+3
 10578     04AD  3000               	movlw	0
 10579     04AE  00BC               	movwf	i1___flmul@prod+2
 10580     04AF  3000               	movlw	0
 10581     04B0  00BB               	movwf	i1___flmul@prod+1
 10582     04B1  3000               	movlw	0
 10583     04B2  00BA               	movwf	i1___flmul@prod
 10584     04B3                     i1l2832:
 10585     04B3  01B3               	clrf	i1___flmul@sign
 10586     04B4  2CC7               	goto	i1l1325
 10587     04B5                     i1l2834:
 10588     04B5  0020               	movlb	0	; select bank0
 10589     04B6  083E               	movf	i1___flmul@temp,w
 10590     04B7  00B9               	movwf	i1___flmul@bexp
 10591     04B8  30FF               	movlw	255
 10592     04B9  05BA               	andwf	i1___flmul@prod,f
 10593     04BA  30FF               	movlw	255
 10594     04BB  05BB               	andwf	i1___flmul@prod+1,f
 10595     04BC  307F               	movlw	127
 10596     04BD  05BC               	andwf	i1___flmul@prod+2,f
 10597     04BE  3000               	movlw	0
 10598     04BF  05BD               	andwf	i1___flmul@prod+3,f
 10599     04C0                     i1l2836:
 10600     04C0  1C39               	btfss	i1___flmul@bexp,0
 10601     04C1  2CC3               	goto	u241_21
 10602     04C2  2CC4               	goto	u241_20
 10603     04C3                     u241_21:
 10604     04C3  2CC5               	goto	i1l2840
 10605     04C4                     u241_20:
 10606     04C4                     i1l2838:
 10607     04C4  17BC               	bsf	i1___flmul@prod+2,7
 10608     04C5                     i1l2840:
 10609     04C5  3639               	lsrf	i1___flmul@bexp,w
 10610     04C6  00BD               	movwf	i1___flmul@prod+3
 10611     04C7                     i1l1325:
 10612     04C7  0833               	movf	i1___flmul@sign,w
 10613     04C8  00AE               	movwf	??i1___flmul
 10614     04C9  082E               	movf	??i1___flmul,w
 10615     04CA  04BD               	iorwf	i1___flmul@prod+3,f
 10616     04CB                     i1l2842:
 10617     04CB  083D               	movf	i1___flmul@prod+3,w
 10618     04CC  00A9               	movwf	?i1___flmul+3
 10619     04CD  083C               	movf	i1___flmul@prod+2,w
 10620     04CE  00A8               	movwf	?i1___flmul+2
 10621     04CF  083B               	movf	i1___flmul@prod+1,w
 10622     04D0  00A7               	movwf	?i1___flmul+1
 10623     04D1  083A               	movf	i1___flmul@prod,w
 10624     04D2  00A6               	movwf	?i1___flmul
 10625     04D3                     i1l1313:
 10626     04D3  0008               	return
 10627     04D4                     __end_ofi1___flmul:
 10628                           
 10629                           	psect	text50
 10630     0A37                     __ptext50:	
 10631 ;; *************** function i1__Umul8_16 *****************
 10632 ;; Defined at:
 10633 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul8_16.c"
 10634 ;; Parameters:    Size  Location     Type
 10635 ;;  multiplier      1    wreg     unsigned char 
 10636 ;;  multiplicand    1    0[COMMON] unsigned char 
 10637 ;; Auto vars:     Size  Location     Type
 10638 ;;  multiplier      1    8[COMMON] unsigned char 
 10639 ;;  word_mpld       2    6[COMMON] unsigned short 
 10640 ;;  product         2    4[COMMON] unsigned short 
 10641 ;; Return value:  Size  Location     Type
 10642 ;;                  2    0[COMMON] unsigned int 
 10643 ;; Registers used:
 10644 ;;		wreg, status,2, status,0
 10645 ;; Tracked objects:
 10646 ;;		On entry : 0/0
 10647 ;;		On exit  : 0/0
 10648 ;;		Unchanged: 0/0
 10649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10650 ;;      Params:         2       0       0       0       0       0
 10651 ;;      Locals:         5       0       0       0       0       0
 10652 ;;      Temps:          2       0       0       0       0       0
 10653 ;;      Totals:         9       0       0       0       0       0
 10654 ;;Total ram usage:        9 bytes
 10655 ;; Hardware stack levels used: 1
 10656 ;; This function calls:
 10657 ;;		Nothing
 10658 ;; This function is called by:
 10659 ;;		i1___flmul
 10660 ;; This function uses a non-reentrant model
 10661 ;;
 10662                           
 10663     0A37                     i1__Umul8_16:	
 10664                           ;psect for function i1__Umul8_16
 10665                           
 10666                           
 10667                           ;incstack = 0
 10668                           ; Regs used in i1__Umul8_16: [wreg+status,2+status,0]
 10669                           ;i1__Umul8_16@multiplier stored from wreg
 10670     0A37  00F8               	movwf	i1__Umul8_16@multiplier
 10671     0A38                     i1l2508:
 10672     0A38  01F4               	clrf	i1__Umul8_16@product
 10673     0A39  01F5               	clrf	i1__Umul8_16@product+1
 10674     0A3A                     i1l2510:
 10675     0A3A  0870               	movf	i1__Umul8_16@multiplicand,w
 10676     0A3B  00F2               	movwf	??i1__Umul8_16
 10677     0A3C  01F3               	clrf	??i1__Umul8_16+1
 10678     0A3D  0872               	movf	??i1__Umul8_16,w
 10679     0A3E  00F6               	movwf	i1__Umul8_16@word_mpld
 10680     0A3F  0873               	movf	??i1__Umul8_16+1,w
 10681     0A40  00F7               	movwf	i1__Umul8_16@word_mpld+1
 10682     0A41                     i1l2512:
 10683     0A41  1C78               	btfss	i1__Umul8_16@multiplier,0
 10684     0A42  2A44               	goto	u169_21
 10685     0A43  2A45               	goto	u169_20
 10686     0A44                     u169_21:
 10687     0A44  2A49               	goto	i1l1332
 10688     0A45                     u169_20:
 10689     0A45                     i1l2514:
 10690     0A45  0876               	movf	i1__Umul8_16@word_mpld,w
 10691     0A46  07F4               	addwf	i1__Umul8_16@product,f
 10692     0A47  0877               	movf	i1__Umul8_16@word_mpld+1,w
 10693     0A48  3DF5               	addwfc	i1__Umul8_16@product+1,f
 10694     0A49                     i1l1332:
 10695     0A49  3001               	movlw	1
 10696     0A4A                     u170_25:
 10697     0A4A  35F6               	lslf	i1__Umul8_16@word_mpld,f
 10698     0A4B  0DF7               	rlf	i1__Umul8_16@word_mpld+1,f
 10699     0A4C  0B89               	decfsz	9,f
 10700     0A4D  2A4A               	goto	u170_25
 10701     0A4E  1003               	clrc
 10702     0A4F  0CF8               	rrf	i1__Umul8_16@multiplier,f
 10703     0A50                     i1l2516:
 10704     0A50  0878               	movf	i1__Umul8_16@multiplier,w
 10705     0A51  1D03               	btfss	3,2
 10706     0A52  2A54               	goto	u171_21
 10707     0A53  2A55               	goto	u171_20
 10708     0A54                     u171_21:
 10709     0A54  2A41               	goto	i1l2512
 10710     0A55                     u171_20:
 10711     0A55                     i1l2518:
 10712     0A55  0875               	movf	i1__Umul8_16@product+1,w
 10713     0A56  00F1               	movwf	?i1__Umul8_16+1
 10714     0A57  0874               	movf	i1__Umul8_16@product,w
 10715     0A58  00F0               	movwf	?i1__Umul8_16
 10716     0A59                     i1l1334:
 10717     0A59  0008               	return
 10718     0A5A                     __end_ofi1__Umul8_16:
 10719                           
 10720                           	psect	text51
 10721     0DFD                     __ptext51:	
 10722 ;; *************** function ___xxtofl *****************
 10723 ;; Defined at:
 10724 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\xxtofl.c"
 10725 ;; Parameters:    Size  Location     Type
 10726 ;;  sign            1    wreg     unsigned char 
 10727 ;;  val             4    6[BANK0 ] long 
 10728 ;; Auto vars:     Size  Location     Type
 10729 ;;  sign            1   14[BANK0 ] unsigned char 
 10730 ;;  arg             4   16[BANK0 ] unsigned long 
 10731 ;;  exp             1   15[BANK0 ] unsigned char 
 10732 ;; Return value:  Size  Location     Type
 10733 ;;                  4    6[BANK0 ] unsigned char 
 10734 ;; Registers used:
 10735 ;;		wreg, status,2, status,0
 10736 ;; Tracked objects:
 10737 ;;		On entry : 0/0
 10738 ;;		On exit  : 0/0
 10739 ;;		Unchanged: 0/0
 10740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10741 ;;      Params:         0       4       0       0       0       0
 10742 ;;      Locals:         0       6       0       0       0       0
 10743 ;;      Temps:          0       4       0       0       0       0
 10744 ;;      Totals:         0      14       0       0       0       0
 10745 ;;Total ram usage:       14 bytes
 10746 ;; Hardware stack levels used: 1
 10747 ;; This function calls:
 10748 ;;		Nothing
 10749 ;; This function is called by:
 10750 ;;		_mede_height
 10751 ;; This function uses a non-reentrant model
 10752 ;;
 10753                           
 10754     0DFD                     ___xxtofl:	
 10755                           ;psect for function ___xxtofl
 10756                           
 10757                           
 10758                           ;incstack = 0
 10759                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 10760                           ;___xxtofl@sign stored from wreg
 10761     0DFD  0020               	movlb	0	; select bank0
 10762     0DFE  00AE               	movwf	___xxtofl@sign
 10763     0DFF                     i1l2626:
 10764     0DFF  082E               	movf	___xxtofl@sign,w
 10765     0E00  1903               	btfsc	3,2
 10766     0E01  2E03               	goto	u192_21
 10767     0E02  2E04               	goto	u192_20
 10768     0E03                     u192_21:
 10769     0E03  2E18               	goto	i1l2632
 10770     0E04                     u192_20:
 10771     0E04                     i1l2628:
 10772     0E04  1FA9               	btfss	___xxtofl@val+3,7
 10773     0E05  2E07               	goto	u193_21
 10774     0E06  2E08               	goto	u193_20
 10775     0E07                     u193_21:
 10776     0E07  2E18               	goto	i1l2632
 10777     0E08                     u193_20:
 10778     0E08                     i1l2630:
 10779     0E08  0926               	comf	___xxtofl@val,w
 10780     0E09  00B0               	movwf	___xxtofl@arg
 10781     0E0A  0927               	comf	___xxtofl@val+1,w
 10782     0E0B  00B1               	movwf	___xxtofl@arg+1
 10783     0E0C  0928               	comf	___xxtofl@val+2,w
 10784     0E0D  00B2               	movwf	___xxtofl@arg+2
 10785     0E0E  0929               	comf	___xxtofl@val+3,w
 10786     0E0F  00B3               	movwf	___xxtofl@arg+3
 10787     0E10  0AB0               	incf	___xxtofl@arg,f
 10788     0E11  1903               	skipnz
 10789     0E12  0AB1               	incf	___xxtofl@arg+1,f
 10790     0E13  1903               	skipnz
 10791     0E14  0AB2               	incf	___xxtofl@arg+2,f
 10792     0E15  1903               	skipnz
 10793     0E16  0AB3               	incf	___xxtofl@arg+3,f
 10794     0E17  2E20               	goto	i1l1357
 10795     0E18                     i1l2632:
 10796     0E18  0829               	movf	___xxtofl@val+3,w
 10797     0E19  00B3               	movwf	___xxtofl@arg+3
 10798     0E1A  0828               	movf	___xxtofl@val+2,w
 10799     0E1B  00B2               	movwf	___xxtofl@arg+2
 10800     0E1C  0827               	movf	___xxtofl@val+1,w
 10801     0E1D  00B1               	movwf	___xxtofl@arg+1
 10802     0E1E  0826               	movf	___xxtofl@val,w
 10803     0E1F  00B0               	movwf	___xxtofl@arg
 10804     0E20                     i1l1357:
 10805     0E20  0829               	movf	___xxtofl@val+3,w
 10806     0E21  0428               	iorwf	___xxtofl@val+2,w
 10807     0E22  0427               	iorwf	___xxtofl@val+1,w
 10808     0E23  0426               	iorwf	___xxtofl@val,w
 10809     0E24  1D03               	skipz
 10810     0E25  2E27               	goto	u194_21
 10811     0E26  2E28               	goto	u194_20
 10812     0E27                     u194_21:
 10813     0E27  2E31               	goto	i1l2638
 10814     0E28                     u194_20:
 10815     0E28                     i1l2634:
 10816     0E28  3000               	movlw	0
 10817     0E29  00A9               	movwf	?___xxtofl+3
 10818     0E2A  3000               	movlw	0
 10819     0E2B  00A8               	movwf	?___xxtofl+2
 10820     0E2C  3000               	movlw	0
 10821     0E2D  00A7               	movwf	?___xxtofl+1
 10822     0E2E  3000               	movlw	0
 10823     0E2F  00A6               	movwf	?___xxtofl
 10824     0E30  2EA7               	goto	i1l1359
 10825     0E31                     i1l2638:
 10826     0E31  3096               	movlw	150
 10827     0E32  00AF               	movwf	___xxtofl@exp
 10828     0E33  2E3F               	goto	i1l2642
 10829     0E34                     i1l2640:
 10830     0E34  3001               	movlw	1
 10831     0E35  00AA               	movwf	??___xxtofl
 10832     0E36  082A               	movf	??___xxtofl,w
 10833     0E37  07AF               	addwf	___xxtofl@exp,f
 10834     0E38  3001               	movlw	1
 10835     0E39                     u195_25:
 10836     0E39  36B3               	lsrf	___xxtofl@arg+3,f
 10837     0E3A  0CB2               	rrf	___xxtofl@arg+2,f
 10838     0E3B  0CB1               	rrf	___xxtofl@arg+1,f
 10839     0E3C  0CB0               	rrf	___xxtofl@arg,f
 10840     0E3D  0B89               	decfsz	9,f
 10841     0E3E  2E39               	goto	u195_25
 10842     0E3F                     i1l2642:
 10843     0E3F  30FE               	movlw	254
 10844     0E40  0533               	andwf	___xxtofl@arg+3,w
 10845     0E41  1D03               	btfss	3,2
 10846     0E42  2E44               	goto	u196_21
 10847     0E43  2E45               	goto	u196_20
 10848     0E44                     u196_21:
 10849     0E44  2E34               	goto	i1l2640
 10850     0E45                     u196_20:
 10851     0E45  2E59               	goto	i1l1363
 10852     0E46                     i1l2644:
 10853     0E46  3001               	movlw	1
 10854     0E47  00AA               	movwf	??___xxtofl
 10855     0E48  082A               	movf	??___xxtofl,w
 10856     0E49  07AF               	addwf	___xxtofl@exp,f
 10857     0E4A                     i1l2646:
 10858     0E4A  3001               	movlw	1
 10859     0E4B  07B0               	addwf	___xxtofl@arg,f
 10860     0E4C  3000               	movlw	0
 10861     0E4D  3DB1               	addwfc	___xxtofl@arg+1,f
 10862     0E4E  3000               	movlw	0
 10863     0E4F  3DB2               	addwfc	___xxtofl@arg+2,f
 10864     0E50  3000               	movlw	0
 10865     0E51  3DB3               	addwfc	___xxtofl@arg+3,f
 10866     0E52                     i1l2648:
 10867     0E52  3001               	movlw	1
 10868     0E53                     u197_25:
 10869     0E53  36B3               	lsrf	___xxtofl@arg+3,f
 10870     0E54  0CB2               	rrf	___xxtofl@arg+2,f
 10871     0E55  0CB1               	rrf	___xxtofl@arg+1,f
 10872     0E56  0CB0               	rrf	___xxtofl@arg,f
 10873     0E57  0B89               	decfsz	9,f
 10874     0E58  2E53               	goto	u197_25
 10875     0E59                     i1l1363:
 10876     0E59  30FF               	movlw	255
 10877     0E5A  0533               	andwf	___xxtofl@arg+3,w
 10878     0E5B  1D03               	btfss	3,2
 10879     0E5C  2E5E               	goto	u198_21
 10880     0E5D  2E5F               	goto	u198_20
 10881     0E5E                     u198_21:
 10882     0E5E  2E46               	goto	i1l2644
 10883     0E5F                     u198_20:
 10884     0E5F  2E69               	goto	i1l2652
 10885     0E60                     i1l2650:
 10886     0E60  3001               	movlw	1
 10887     0E61  02AF               	subwf	___xxtofl@exp,f
 10888     0E62  3001               	movlw	1
 10889     0E63                     u199_25:
 10890     0E63  35B0               	lslf	___xxtofl@arg,f
 10891     0E64  0DB1               	rlf	___xxtofl@arg+1,f
 10892     0E65  0DB2               	rlf	___xxtofl@arg+2,f
 10893     0E66  0DB3               	rlf	___xxtofl@arg+3,f
 10894     0E67  0B89               	decfsz	9,f
 10895     0E68  2E63               	goto	u199_25
 10896     0E69                     i1l2652:
 10897     0E69  1BB2               	btfsc	___xxtofl@arg+2,7
 10898     0E6A  2E6C               	goto	u200_21
 10899     0E6B  2E6D               	goto	u200_20
 10900     0E6C                     u200_21:
 10901     0E6C  2E73               	goto	i1l1370
 10902     0E6D                     u200_20:
 10903     0E6D                     i1l2654:
 10904     0E6D  3002               	movlw	2
 10905     0E6E  022F               	subwf	___xxtofl@exp,w
 10906     0E6F  1803               	skipnc
 10907     0E70  2E72               	goto	u201_21
 10908     0E71  2E73               	goto	u201_20
 10909     0E72                     u201_21:
 10910     0E72  2E60               	goto	i1l2650
 10911     0E73                     u201_20:
 10912     0E73                     i1l1370:
 10913     0E73  182F               	btfsc	___xxtofl@exp,0
 10914     0E74  2E76               	goto	u202_21
 10915     0E75  2E77               	goto	u202_20
 10916     0E76                     u202_21:
 10917     0E76  2E7F               	goto	i1l1371
 10918     0E77                     u202_20:
 10919     0E77                     i1l2656:
 10920     0E77  30FF               	movlw	255
 10921     0E78  05B0               	andwf	___xxtofl@arg,f
 10922     0E79  30FF               	movlw	255
 10923     0E7A  05B1               	andwf	___xxtofl@arg+1,f
 10924     0E7B  307F               	movlw	127
 10925     0E7C  05B2               	andwf	___xxtofl@arg+2,f
 10926     0E7D  30FF               	movlw	255
 10927     0E7E  05B3               	andwf	___xxtofl@arg+3,f
 10928     0E7F                     i1l1371:
 10929     0E7F  1003               	clrc
 10930     0E80  0CAF               	rrf	___xxtofl@exp,f
 10931     0E81                     i1l2658:
 10932     0E81  082F               	movf	___xxtofl@exp,w
 10933     0E82  00AA               	movwf	??___xxtofl
 10934     0E83  01AB               	clrf	??___xxtofl+1
 10935     0E84  01AC               	clrf	??___xxtofl+2
 10936     0E85  01AD               	clrf	??___xxtofl+3
 10937     0E86  3018               	movlw	24
 10938     0E87                     u203_25:
 10939     0E87  35AA               	lslf	??___xxtofl,f
 10940     0E88  0DAB               	rlf	??___xxtofl+1,f
 10941     0E89  0DAC               	rlf	??___xxtofl+2,f
 10942     0E8A  0DAD               	rlf	??___xxtofl+3,f
 10943     0E8B                     u203_20:
 10944     0E8B  0B89               	decfsz	9,f
 10945     0E8C  2E87               	goto	u203_25
 10946     0E8D  082A               	movf	??___xxtofl,w
 10947     0E8E  04B0               	iorwf	___xxtofl@arg,f
 10948     0E8F  082B               	movf	??___xxtofl+1,w
 10949     0E90  04B1               	iorwf	___xxtofl@arg+1,f
 10950     0E91  082C               	movf	??___xxtofl+2,w
 10951     0E92  04B2               	iorwf	___xxtofl@arg+2,f
 10952     0E93  082D               	movf	??___xxtofl+3,w
 10953     0E94  04B3               	iorwf	___xxtofl@arg+3,f
 10954     0E95                     i1l2660:
 10955     0E95  082E               	movf	___xxtofl@sign,w
 10956     0E96  1903               	btfsc	3,2
 10957     0E97  2E99               	goto	u204_21
 10958     0E98  2E9A               	goto	u204_20
 10959     0E99                     u204_21:
 10960     0E99  2E9F               	goto	i1l2666
 10961     0E9A                     u204_20:
 10962     0E9A                     i1l2662:
 10963     0E9A  1FA9               	btfss	___xxtofl@val+3,7
 10964     0E9B  2E9D               	goto	u205_21
 10965     0E9C  2E9E               	goto	u205_20
 10966     0E9D                     u205_21:
 10967     0E9D  2E9F               	goto	i1l2666
 10968     0E9E                     u205_20:
 10969     0E9E                     i1l2664:
 10970     0E9E  17B3               	bsf	___xxtofl@arg+3,7
 10971     0E9F                     i1l2666:
 10972     0E9F  0833               	movf	___xxtofl@arg+3,w
 10973     0EA0  00A9               	movwf	?___xxtofl+3
 10974     0EA1  0832               	movf	___xxtofl@arg+2,w
 10975     0EA2  00A8               	movwf	?___xxtofl+2
 10976     0EA3  0831               	movf	___xxtofl@arg+1,w
 10977     0EA4  00A7               	movwf	?___xxtofl+1
 10978     0EA5  0830               	movf	___xxtofl@arg,w
 10979     0EA6  00A6               	movwf	?___xxtofl
 10980     0EA7                     i1l1359:
 10981     0EA7  0008               	return
 10982     0EA8                     __end_of___xxtofl:
 10983                           
 10984                           	psect	text52
 10985     08F5                     __ptext52:	
 10986 ;; *************** function _TMR1_Reload *****************
 10987 ;; Defined at:
 10988 ;;		line 146 in file "mcc_generated_files/tmr1.c"
 10989 ;; Parameters:    Size  Location     Type
 10990 ;;		None
 10991 ;; Auto vars:     Size  Location     Type
 10992 ;;		None
 10993 ;; Return value:  Size  Location     Type
 10994 ;;                  1    wreg      void 
 10995 ;; Registers used:
 10996 ;;		wreg, status,2, status,0, pclath, cstack
 10997 ;; Tracked objects:
 10998 ;;		On entry : 0/0
 10999 ;;		On exit  : 0/0
 11000 ;;		Unchanged: 0/0
 11001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 11002 ;;      Params:         0       0       0       0       0       0
 11003 ;;      Locals:         0       0       0       0       0       0
 11004 ;;      Temps:          0       0       0       0       0       0
 11005 ;;      Totals:         0       0       0       0       0       0
 11006 ;;Total ram usage:        0 bytes
 11007 ;; Hardware stack levels used: 1
 11008 ;; Hardware stack levels required when called: 1
 11009 ;; This function calls:
 11010 ;;		_TMR1_WriteTimer
 11011 ;; This function is called by:
 11012 ;;		_mede_height
 11013 ;; This function uses a non-reentrant model
 11014 ;;
 11015                           
 11016     08F5                     _TMR1_Reload:	
 11017                           ;psect for function _TMR1_Reload
 11018                           
 11019     08F5                     i1l2536:	
 11020                           ;incstack = 0
 11021                           ; Regs used in _TMR1_Reload: [wreg+status,2+status,0+pclath+cstack]
 11022                           
 11023                           
 11024                           ;mcc_generated_files/tmr1.c: 148:     TMR1_WriteTimer(timer1ReloadVal);
 11025     08F5  0021               	movlb	1	; select bank1
 11026     08F6  0866               	movf	(_timer1ReloadVal+1)^(0+128),w	;volatile
 11027     08F7  00F1               	movwf	TMR1_WriteTimer@timerVal+1
 11028     08F8  0865               	movf	_timer1ReloadVal^(0+128),w	;volatile
 11029     08F9  00F0               	movwf	TMR1_WriteTimer@timerVal
 11030     08FA  3189  2179  3188   	fcall	_TMR1_WriteTimer
 11031     08FD                     i1l440:
 11032     08FD  0008               	return
 11033     08FE                     __end_of_TMR1_Reload:
 11034                           
 11035                           	psect	text53
 11036     0979                     __ptext53:	
 11037 ;; *************** function _TMR1_WriteTimer *****************
 11038 ;; Defined at:
 11039 ;;		line 124 in file "mcc_generated_files/tmr1.c"
 11040 ;; Parameters:    Size  Location     Type
 11041 ;;  timerVal        2    0[COMMON] unsigned short 
 11042 ;; Auto vars:     Size  Location     Type
 11043 ;;		None
 11044 ;; Return value:  Size  Location     Type
 11045 ;;                  1    wreg      void 
 11046 ;; Registers used:
 11047 ;;		wreg, status,2
 11048 ;; Tracked objects:
 11049 ;;		On entry : 0/0
 11050 ;;		On exit  : 0/0
 11051 ;;		Unchanged: 0/0
 11052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 11053 ;;      Params:         2       0       0       0       0       0
 11054 ;;      Locals:         0       0       0       0       0       0
 11055 ;;      Temps:          0       0       0       0       0       0
 11056 ;;      Totals:         2       0       0       0       0       0
 11057 ;;Total ram usage:        2 bytes
 11058 ;; Hardware stack levels used: 1
 11059 ;; This function calls:
 11060 ;;		Nothing
 11061 ;; This function is called by:
 11062 ;;		_TMR1_Reload
 11063 ;; This function uses a non-reentrant model
 11064 ;;
 11065                           
 11066     0979                     _TMR1_WriteTimer:	
 11067                           ;psect for function _TMR1_WriteTimer
 11068                           
 11069     0979                     i1l2494:	
 11070                           ;incstack = 0
 11071                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
 11072                           
 11073                           
 11074                           ;mcc_generated_files/tmr1.c: 124: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 125: {;mcc_generated_files/tmr1.c: 126:     if (T1CONbits.nT1SYNC == 1)
 11075     0979  0020               	movlb	0	; select bank0
 11076     097A  1D18               	btfss	24,2	;volatile
 11077     097B  297D               	goto	u168_21
 11078     097C  297E               	goto	u168_20
 11079     097D                     u168_21:
 11080     097D  2985               	goto	i1l2504
 11081     097E                     u168_20:
 11082     097E                     i1l2496:
 11083                           
 11084                           ;mcc_generated_files/tmr1.c: 127:     {;mcc_generated_files/tmr1.c: 129:         T1CONbi
      +                          ts.TMR1ON = 0;
 11085     097E  1018               	bcf	24,0	;volatile
 11086     097F                     i1l2498:
 11087                           
 11088                           ;mcc_generated_files/tmr1.c: 132:         TMR1H = (uint8_t)(timerVal >> 8);
 11089     097F  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 11090     0980  0097               	movwf	23	;volatile
 11091     0981                     i1l2500:
 11092                           
 11093                           ;mcc_generated_files/tmr1.c: 133:         TMR1L = (uint8_t)timerVal;
 11094     0981  0870               	movf	TMR1_WriteTimer@timerVal,w
 11095     0982  0096               	movwf	22	;volatile
 11096     0983                     i1l2502:
 11097                           
 11098                           ;mcc_generated_files/tmr1.c: 136:         T1CONbits.TMR1ON =1;
 11099     0983  1418               	bsf	24,0	;volatile
 11100                           
 11101                           ;mcc_generated_files/tmr1.c: 137:     }
 11102     0984  2989               	goto	i1l437
 11103     0985                     i1l2504:
 11104                           
 11105                           ;mcc_generated_files/tmr1.c: 139:     {;mcc_generated_files/tmr1.c: 141:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
 11106     0985  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 11107     0986  0097               	movwf	23	;volatile
 11108     0987                     i1l2506:
 11109                           
 11110                           ;mcc_generated_files/tmr1.c: 142:         TMR1L = (uint8_t)timerVal;
 11111     0987  0870               	movf	TMR1_WriteTimer@timerVal,w
 11112     0988  0096               	movwf	22	;volatile
 11113     0989                     i1l437:
 11114     0989  0008               	return
 11115     098A                     __end_of_TMR1_WriteTimer:
 11116                           
 11117                           	psect	text54
 11118     09CA                     __ptext54:	
 11119 ;; *************** function _TMR1_ReadTimer *****************
 11120 ;; Defined at:
 11121 ;;		line 109 in file "mcc_generated_files/tmr1.c"
 11122 ;; Parameters:    Size  Location     Type
 11123 ;;		None
 11124 ;; Auto vars:     Size  Location     Type
 11125 ;;  readVal         2    7[COMMON] unsigned short 
 11126 ;;  readValLow      1   10[COMMON] unsigned char 
 11127 ;;  readValHigh     1    9[COMMON] unsigned char 
 11128 ;; Return value:  Size  Location     Type
 11129 ;;                  2    0[COMMON] unsigned short 
 11130 ;; Registers used:
 11131 ;;		wreg
 11132 ;; Tracked objects:
 11133 ;;		On entry : 0/0
 11134 ;;		On exit  : 0/0
 11135 ;;		Unchanged: 0/0
 11136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 11137 ;;      Params:         2       0       0       0       0       0
 11138 ;;      Locals:         4       0       0       0       0       0
 11139 ;;      Temps:          5       0       0       0       0       0
 11140 ;;      Totals:        11       0       0       0       0       0
 11141 ;;Total ram usage:       11 bytes
 11142 ;; Hardware stack levels used: 1
 11143 ;; This function calls:
 11144 ;;		Nothing
 11145 ;; This function is called by:
 11146 ;;		_mede_height
 11147 ;; This function uses a non-reentrant model
 11148 ;;
 11149                           
 11150     09CA                     _TMR1_ReadTimer:	
 11151                           ;psect for function _TMR1_ReadTimer
 11152                           
 11153     09CA                     i1l2532:	
 11154                           ;incstack = 0
 11155                           ; Regs used in _TMR1_ReadTimer: [wreg]
 11156                           
 11157                           
 11158                           ;mcc_generated_files/tmr1.c: 111:     uint16_t readVal;;mcc_generated_files/tmr1.c: 112:
      +                               uint8_t readValHigh;;mcc_generated_files/tmr1.c: 113:     uint8_t readValLow;;mcc_g
      +                          enerated_files/tmr1.c: 116:     readValLow = TMR1L;
 11159     09CA  0020               	movlb	0	; select bank0
 11160     09CB  0816               	movf	22,w	;volatile
 11161     09CC  00FA               	movwf	TMR1_ReadTimer@readValLow
 11162                           
 11163                           ;mcc_generated_files/tmr1.c: 117:     readValHigh = TMR1H;
 11164     09CD  0817               	movf	23,w	;volatile
 11165     09CE  00F9               	movwf	TMR1_ReadTimer@readValHigh
 11166                           
 11167                           ;mcc_generated_files/tmr1.c: 119:     readVal = ((uint16_t)readValHigh << 8) | readValLo
      +                          w;
 11168     09CF  087A               	movf	TMR1_ReadTimer@readValLow,w
 11169     09D0  00F2               	movwf	??_TMR1_ReadTimer
 11170     09D1  01F3               	clrf	??_TMR1_ReadTimer+1
 11171     09D2  0879               	movf	TMR1_ReadTimer@readValHigh,w
 11172     09D3  00F4               	movwf	??_TMR1_ReadTimer+2
 11173     09D4  01F5               	clrf	??_TMR1_ReadTimer+3
 11174     09D5  0874               	movf	??_TMR1_ReadTimer+2,w
 11175     09D6  00F5               	movwf	??_TMR1_ReadTimer+3
 11176     09D7  01F4               	clrf	??_TMR1_ReadTimer+2
 11177     09D8  0872               	movf	??_TMR1_ReadTimer,w
 11178     09D9  0474               	iorwf	??_TMR1_ReadTimer+2,w
 11179     09DA  00F7               	movwf	TMR1_ReadTimer@readVal
 11180     09DB  0873               	movf	??_TMR1_ReadTimer+1,w
 11181     09DC  0475               	iorwf	??_TMR1_ReadTimer+3,w
 11182     09DD  00F8               	movwf	TMR1_ReadTimer@readVal+1
 11183                           
 11184                           ;mcc_generated_files/tmr1.c: 121:     return readVal;
 11185     09DE  0878               	movf	TMR1_ReadTimer@readVal+1,w
 11186     09DF  00F1               	movwf	?_TMR1_ReadTimer+1
 11187     09E0  0877               	movf	TMR1_ReadTimer@readVal,w
 11188     09E1  00F0               	movwf	?_TMR1_ReadTimer
 11189     09E2                     i1l432:
 11190     09E2  0008               	return
 11191     09E3                     __end_of_TMR1_ReadTimer:
 11192                           
 11193                           	psect	text55
 11194     0002                     __ptext55:	
 11195 ;; *************** function _PIN_MANAGER_IOC *****************
 11196 ;; Defined at:
 11197 ;;		line 98 in file "mcc_generated_files/pin_manager.c"
 11198 ;; Parameters:    Size  Location     Type
 11199 ;;		None
 11200 ;; Auto vars:     Size  Location     Type
 11201 ;;		None
 11202 ;; Return value:  Size  Location     Type
 11203 ;;                  1    wreg      void 
 11204 ;; Registers used:
 11205 ;;		None
 11206 ;; Tracked objects:
 11207 ;;		On entry : 0/0
 11208 ;;		On exit  : 0/0
 11209 ;;		Unchanged: 0/0
 11210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 11211 ;;      Params:         0       0       0       0       0       0
 11212 ;;      Locals:         0       0       0       0       0       0
 11213 ;;      Temps:          0       0       0       0       0       0
 11214 ;;      Totals:         0       0       0       0       0       0
 11215 ;;Total ram usage:        0 bytes
 11216 ;; Hardware stack levels used: 1
 11217 ;; This function calls:
 11218 ;;		Nothing
 11219 ;; This function is called by:
 11220 ;;		_INTERRUPT_InterruptManager
 11221 ;; This function uses a non-reentrant model
 11222 ;;
 11223                           
 11224     0002                     _PIN_MANAGER_IOC:	
 11225                           ;psect for function _PIN_MANAGER_IOC
 11226                           
 11227     0002                     i1l75:	
 11228                           ;incstack = 0
 11229                           ; Regs used in _PIN_MANAGER_IOC: []
 11230                           
 11231     0002  0008               	return
 11232     0003                     __end_of_PIN_MANAGER_IOC:
 11233     007E                     btemp	set	126	;btemp
 11234     007E                     int$flags	set	126
 11235     007E                     wtemp0	set	126
 11236                           
 11237                           	psect	config
 11238                           
 11239                           ;Config register CONFIG1 @ 0x8007
 11240                           ;	Oscillator Selection
 11241                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
 11242                           ;	Watchdog Timer Enable
 11243                           ;	WDTE = OFF, WDT disabled
 11244                           ;	Power-up Timer Enable
 11245                           ;	PWRTE = OFF, PWRT disabled
 11246                           ;	MCLR Pin Function Select
 11247                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
 11248                           ;	Flash Program Memory Code Protection
 11249                           ;	CP = OFF, Program memory code protection is disabled
 11250                           ;	Data Memory Code Protection
 11251                           ;	CPD = OFF, Data memory code protection is disabled
 11252                           ;	Brown-out Reset Enable
 11253                           ;	BOREN = ON, Brown-out Reset enabled
 11254                           ;	Clock Out Enable
 11255                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
 11256                           ;	Internal/External Switchover
 11257                           ;	IESO = ON, Internal/External Switchover mode is enabled
 11258                           ;	Fail-Safe Clock Monitor Enable
 11259                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 11260     8007                     	org	32775
 11261     8007  3FE4               	dw	16356
 11262                           
 11263                           ;Config register CONFIG2 @ 0x8008
 11264                           ;	Flash Memory Self-Write Protection
 11265                           ;	WRT = OFF, Write protection off
 11266                           ;	PLL Enable
 11267                           ;	PLLEN = OFF, 4x PLL disabled
 11268                           ;	Stack Overflow/Underflow Reset Enable
 11269                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 11270                           ;	Brown-out Reset Voltage Selection
 11271                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
 11272                           ;	In-Circuit Debugger Mode
 11273                           ;	DEBUG = 0x1, unprogrammed default
 11274                           ;	Low-Voltage Programming Enable
 11275                           ;	LVP = ON, Low-voltage programming enabled
 11276     8008                     	org	32776
 11277     8008  3EFF               	dw	16127

Data Sizes:
    Strings     0
    Constant    204
    Data        23
    BSS         74
    Persistent  40
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     42      80
    BANK1            80     46      79
    BANK2            80      0      33
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), NULL(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), NULL(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), NULL(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    TMR1_GateInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> mede_height(), TMR1_DefaultGateInterruptHandler(), NULL(), 

    TMR1_SetGateInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> mede_height(), TMR1_DefaultGateInterruptHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _mede_height->i1___fltol
    i1___fltol->i1__Umul8_16
    i1___flmul->i1___fltol
    ___xxtofl->i1___fltol
    _TMR1_Reload->_TMR1_WriteTimer

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _TMR1_GATE_ISR->_mede_height
    _mede_height->i1___flmul
    i1___flmul->i1___fltol
    ___xxtofl->i1___fltol

Critical Paths under _main in BANK1

    _setaPorta->_daUmPasso
    _fluxpos->_daUmPasso
    _daUmPasso->_definePassoMotor
    _envia_Tx->___fltol
    ___fltol->___flmul
    ___flmul->__Umul8_16
    _controlchoose->_pwmcontrol
    _pwmcontrol->___atdiv
    _fluxcontrol->___atdiv
    ___atdiv->___tmul
    _analisa_Rx->_EPWM1_LoadDutyValue
    _TMR1_Initialize->_TMR1_SetGateInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    9645
                                             45 BANK1      1     1      0
                        _EUSART_Read
                 _EUSART_is_rx_ready
                  _SYSTEM_Initialize
                     _TMR0_ReadTimer
       _TMR1_SetGateInterruptHandler
                     _TMR4_StopTimer
            _TMR6_LoadPeriodRegister
                    _TMR6_WriteTimer
                         _analisa_Rx
                      _controlchoose
                           _envia_Tx
                            _fluxpos
                          _setaPorta
 ---------------------------------------------------------------------------------
 (1) _setaPorta                                            1     1      0     306
                                              4 BANK1      1     1      0
               _CMP1_GetOutputStatus
                          _daUmPasso
 ---------------------------------------------------------------------------------
 (2) _CMP1_GetOutputStatus                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _fluxpos                                              4     4      0     306
                                              4 BANK1      4     4      0
                          _daUmPasso
 ---------------------------------------------------------------------------------
 (2) _daUmPasso                                            1     1      0     306
                                              3 BANK1      1     1      0
                   _definePassoMotor
 ---------------------------------------------------------------------------------
 (3) _definePassoMotor                                     3     2      1     240
                                              0 BANK1      3     2      1
 ---------------------------------------------------------------------------------
 (1) _envia_Tx                                             0     0      0    3070
                       _EUSART_Write
                            ___flmul
                            ___fltol
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     531
                                             35 BANK1     10     6      4
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    2517
                                              9 BANK1     26    18      8
                          __Umul8_16
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     799
                                              0 BANK1      9     7      2
 ---------------------------------------------------------------------------------
 (2) _EUSART_Write                                         1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _controlchoose                                        0     0      0    4982
                    _TMR4_StartTimer
                        _fluxcontrol
                         _pwmcontrol
 ---------------------------------------------------------------------------------
 (2) _pwmcontrol                                          12    12      0    2627
                                             21 BANK1     12    12      0
                _EPWM1_LoadDutyValue
                            ___atdiv
                             ___tmul
 ---------------------------------------------------------------------------------
 (2) _fluxcontrol                                          6     6      0    2355
                                             21 BANK1      6     6      0
                            ___atdiv
                             ___tmul
 ---------------------------------------------------------------------------------
 (3) ___tmul                                               9     3      6    1596
                                              0 BANK1      9     3      6
 ---------------------------------------------------------------------------------
 (3) ___atdiv                                             12     6      6     756
                                              9 BANK1     12     6      6
                             ___tmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _TMR4_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _analisa_Rx                                           2     2      0     272
                                              4 BANK1      2     2      0
                _EPWM1_LoadDutyValue
 ---------------------------------------------------------------------------------
 (3) _EPWM1_LoadDutyValue                                  4     2      2     272
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (1) _TMR6_WriteTimer                                      1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _TMR6_LoadPeriodRegister                              1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _TMR4_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR0_ReadTimer                                       1     1      0      23
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     468
                     _ADC_Initialize
                    _CMP1_Initialize
                     _DAC_Initialize
                   _EPWM1_Initialize
                  _EUSART_Initialize
                     _FVR_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
                    _TMR6_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     174
       _TMR1_SetGateInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetGateInterruptHandler                         2     0      2     174
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     294
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _EPWM1_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DAC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CMP1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_is_rx_ready                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Read                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0    2904
                    _PIN_MANAGER_IOC
                      _TMR1_GATE_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR1_GATE_ISR                                        0     0      0    2904
                                NULL *
   _TMR1_DefaultGateInterruptHandler *
                        _mede_height *
 ---------------------------------------------------------------------------------
 (6) _mede_height                                         10    10      0    2904
                                             32 BANK0     10    10      0
                     _TMR1_ReadTimer
                        _TMR1_Reload
                           ___xxtofl
                          i1___flmul
                          i1___fltol
 ---------------------------------------------------------------------------------
 (7) i1___fltol                                           10     6      4     307
                                              9 COMMON     4     0      4
                                              0 BANK0      6     6      0
                        i1__Umul8_16 (ARG)
 ---------------------------------------------------------------------------------
 (7) i1___flmul                                           26    18      8    1867
                                              6 BANK0     26    18      8
                        i1__Umul8_16
                          i1___fltol (ARG)
 ---------------------------------------------------------------------------------
 (8) i1__Umul8_16                                          9     7      2     349
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (7) ___xxtofl                                            14    10      4     474
                                              6 BANK0     14    10      4
                          i1___fltol (ARG)
 ---------------------------------------------------------------------------------
 (7) _TMR1_Reload                                          0     0      0     164
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (8) _TMR1_WriteTimer                                      2     0      2     164
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (7) _TMR1_ReadTimer                                      11     9      2      69
                                              0 COMMON    11     9      2
 ---------------------------------------------------------------------------------
 (6) _TMR1_DefaultGateInterruptHandler                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _PIN_MANAGER_IOC                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Read
   _EUSART_is_rx_ready
   _SYSTEM_Initialize
     _ADC_Initialize
     _CMP1_Initialize
     _DAC_Initialize
     _EPWM1_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _FVR_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
     _TMR1_Initialize
       _TMR1_SetGateInterruptHandler
     _TMR2_Initialize
     _TMR4_Initialize
     _TMR6_Initialize
     _WDT_Initialize
   _TMR0_ReadTimer
   _TMR1_SetGateInterruptHandler
   _TMR4_StopTimer
   _TMR6_LoadPeriodRegister
   _TMR6_WriteTimer
   _analisa_Rx
     _EPWM1_LoadDutyValue
   _controlchoose
     _TMR4_StartTimer
     _fluxcontrol
       ___atdiv
         ___tmul (ARG)
       ___tmul
     _pwmcontrol
       _EPWM1_LoadDutyValue
       ___atdiv
       ___tmul
   _envia_Tx
     _EUSART_Write
     ___flmul
       __Umul8_16
     ___fltol
       ___flmul (ARG)
   _fluxpos
     _daUmPasso
       _definePassoMotor
   _setaPorta
     _CMP1_GetOutputStatus
     _daUmPasso

 _INTERRUPT_InterruptManager (ROOT)
   _PIN_MANAGER_IOC
   _TMR1_GATE_ISR
     NULL(Fake) *
     _TMR1_DefaultGateInterruptHandler *
     _mede_height *
       _TMR1_ReadTimer
       _TMR1_Reload
         _TMR1_WriteTimer
       ___xxtofl
         i1___fltol (ARG)
           i1__Umul8_16 (ARG)
       i1___flmul
         i1__Umul8_16
         i1___fltol (ARG)
       i1___fltol

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      CE       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     2A      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     2E      4F       8       98.8%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      21      10       41.2%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      CE      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Thu Sep 05 16:38:57 2024

                                           l42 08E4                                             l45 0018  
                                           l39 0AF5                                             l72 09B2  
                            ??_CMP1_Initialize 00A0                                             l88 08F4  
                             ___atdiv@quotient 00B2                                             _dc 00D7  
                                  i1___flmul@a 002A                                    i1___flmul@b 0026  
                       __end_of_FVR_Initialize 0015                                _timer0ReloadVal 007D  
                          __Umul8_16@word_mpld 00A6                                            l120 0935  
                                          l123 002A                                            l126 0021  
                                          l231 0004                                            l223 0AA2  
                                          l240 0969                                            l250 094B  
                                          l244 0978                                            l156 0959  
                                          l318 08EC                                            l262 090F  
                                          l423 09FE                                            l159 0A1A  
                                          l247 0942                                            l361 000A  
                                          l265 0918                                            l346 0010  
                                          l282 001E                                            l603 0621  
                                          l268 0906                                            l364 002E  
                                          l620 0A36                                            l701 0B5B  
                                          l710 0B61                                            l614 0D57  
                                          l279 092B                                            l703 0B5D  
                                          l456 0921                                            l392 0027  
                                          l712 0B63                                            l377 093F  
                                          l721 0B69                                            l705 0B5E  
                                          l298 0014                                            l642 07FF  
                                          l626 09C9                                            l714 0B64  
                                          l723 0B6A                                            l707 0B5F  
                                          l651 0B29                                            l619 0A31  
                                          l716 0B65                                            l389 08D1  
                                          l645 0DFC                                            l725 0B6B  
                                          l661 0B2F                                            l653 0B2B  
                                          l590 0725                                            l670 0B35  
                                          l727 0B83                                            l719 0B67  
                                          l663 0B31                                            l655 0B2C  
                                          l735 0ACA                                            l751 0F85  
                                          l672 0B37                                            l681 0B3D  
                                          l665 0B32                                            l657 0B2D  
                                          l586 070E                                            l674 0B38  
                                          l587 071A                                            l691 0B55  
                                          l683 0B3E                                            l667 0B33  
                                          l924 0B20                                            l676 0B39  
                                          l693 0B57                                            l685 0B3F  
                                          l599 0602                                            l695 0B58  
                                          l679 0B3B                                            l697 0B59  
                                          _PR2 001B                                            _PR4 0416  
                                          _PR6 041D                                _timer1ReloadVal 00E5  
                                          _kif 012C                                            _kdp 0123  
                                          _kip 0126                                            _kpf 012F  
                                          _vRx 00D9                                            _pas 0069  
                                          _vTx 00DB                                            _kpp 0129  
               ?_EUSART_SetFramingErrorHandler 00A0                                   i1___fltol@f1 0079  
                                 ?_mede_height 0070                                _TMR2_Initialize 08ED  
                                          wreg 0009                                   ___flmul@aexp 00BB  
                                 ___flmul@bexp 00BC       __end_of_TMR1_DefaultGateInterruptHandler 0004  
           ??_TMR1_DefaultGateInterruptHandler 0070              ?_TMR1_DefaultGateInterruptHandler 0070  
             _TMR1_DefaultGateInterruptHandler 0003                                   ___flmul@sign 00B6  
                                 ___flmul@temp 00C1                                   ___flmul@prod 00BD  
                                 ?_EUSART_Read 0070                                   ___fltol@exp1 00CC  
                                         l1110 0C65                                           l1120 0C65  
                                         l1033 0C76                                           l1043 0CDE  
                                         l1117 0C50                                           l3000 0550  
                                         l1313 0298                                           l3010 0607  
                                         l3002 055D                                           l3012 060A  
                                         l3004 0564                                           l1332 0A6D  
                                         l3100 007B                                           l3020 0AAA  
                                         l1325 028C                                           l3014 060E  
                                         l3006 05F1                                           l1334 0A7D  
                                         l3110 0090                                           l3102 007D  
                                         l3022 0AAF                                           l3030 0AC4  
                                         l1319 0218                                           l3016 0615  
                                         l3008 05FC                                           l3200 022E  
                                         l3120 00A5                                           l3112 0091  
                                         l3104 0085                                           l3024 0AB4  
                                         l3210 026F                                           l3202 0246  
                                         l3130 00C0                                           l3122 00AD  
                                         l3114 0096                                           l3106 008A  
                                         l3050 0BF5                                           l3026 0AB9  
                                         l3018 0AA5                                           l3300 0726  
                                         l3220 028A                                           l3212 0278  
                                         l3204 024A                                           l3140 0115  
                                         l3132 00CB                                           l3124 00B2  
                                         l3116 009B                                           l3108 008C  
                                         l3060 0C1A                                           l3052 0BFF  
                                         l3028 0ABD                                           l3310 074B  
                                         l3302 0727                                           l3222 0290  
                                         l3214 027A                                           l3206 0257  
                                         l3150 0148                                           l3142 0122  
                                         l3134 00D8                                           l3126 00B7  
                                         l3118 00A3                                           l3062 0C22  
                                         l3240 0969                                           l3320 0761  
                                         l3312 074F                                           l3304 072E  
                                         l2600 0CBF                                           l3216 0285  
                                         l3208 0261                                           l3160 0185  
                                         l3152 0153                                           l3144 012F  
                                         l3136 00F0                                           l3080 0C47  
                                         l3072 0C30                                           l3064 0C24  
                                         l3056 0C08                                           l3242 096E  
                                         l2530 0919                                           l3226 0ACB  
                                         l2522 09FF                                           l3330 0791  
                                         l3322 0768                                           l3314 0753  
                                         l3306 0747                                           l2602 0CC5  
                                         l3218 0289                                           l3170 01D5  
                                         l3162 0190                                           l3154 015A  
                                         l3146 0136                                           l3138 00FD  
                                         l3090 0064                                           l3082 0C55  
                                         l3066 0C28                                           l3074 0C40  
                                         l3058 0C19                                           l3410 0F5F  
                                         l3244 0970                                           l3236 0000  
                                         l2524 0907                                           l3252 0019  
                                         l3228 001F                                           l3340 07AB  
                                         l3332 0795                                           l3324 077B  
                                         l3316 0757                                           l2604 0CCB  
                                         l2620 0A74                                           l2612 0A5C  
                                         l3180 01F4                                           l3172 01E1  
                                         l3164 01A2                                           l3156 016C  
                                         l3148 0141                                           l3092 0068  
                                         l3084 0C5A                                           l3260 0CDF  
                                         l3420 0F6A                                           l3412 0F60  
                                         l3246 0975                                           l2526 0910  
                                         l3350 07DB                                           l3342 07B2  
                                         l3334 079C                                           l3326 078A  
                                         l3318 075E                                           l2606 0CD0  
                                         l2622 0A79                                           l2614 0A5E  
                                         l3190 0215                                           l3174 01E8  
                                         l3182 01F8                                           l3166 01B7  
                                         l3158 0173                                           l3094 0069  
                                         l3086 005E                                           l3270 0D35  
                                         l3262 0CE6                                           l3430 0F7E  
                                         l3422 0F6D                                           l3414 0F61  
                                         l3248 0977                                           l2528 08FE  
                                         l3256 08CE                                           l3352 07DF  
                                         l3344 07C5                                           l3336 07A3  
                                         l3328 078D                                           l2608 0CD8  
                                         l2560 0AFD                                           l2616 0A65  
                                         l3184 01FC                                           l3176 01EC  
                                         l3168 01CE                                           l3096 006E  
                                         l3088 0062                                           l2552 0B6D  
                                         l2544 0B41                                           l3264 0CF4  
                                         l3272 0D3A                                           l3280 0A1B  
                                         l3432 0F82                                           l3424 0F70  
                                         l3416 0F64                                           l3408 0F54  
                                         l3258 0024                                           l3362 07E7  
                                         l3346 07D4                                           l3370 07F0  
                                         l2562 0B01                                           l3290 09B3  
                                         l2618 0A69                                           l3194 021D  
                                         l3186 01FD                                           l3178 01ED  
                                         l3098 0073                                           l2554 0B7B  
                                         l2546 0B4F                                           l2538 0B23  
                                         l3274 0D44                                           l3266 0D12  
                                         l3282 0A1C                                           l3450 0FB4  
                                         l3442 0F9D                                           l3434 0F8A  
                                         l3426 0F78                                           l3418 0F69  
                                         l2900 093A                                           l3364 07EE  
                                         l3348 07D7                                           l2580 0C82  
                                         l2572 0C66                                           l2564 0B07  
                                         l3292 09B9                                           l3196 0222  
                                         l3188 0201                                           l3380 0D6E  
                                         l3372 0D58                                           l2556 0B80  
                                         l3276 0D49                                           l3268 0D17  
                                         l3284 0A20                                           l3460 0FC3  
                                         l3452 0FB8                                           l3444 0FA5  
                                         l3436 0F8E                                           l3428 0F7D  
                                         l2910 08E9                                           l2902 093C  
                                         l2590 0CA0                                           l2582 0C86  
                                         l2574 0C68                                           l2566 0B0D  
                                         l2558 0AF6                                           l3294 09BD  
                                         l3198 022A                                           l3390 0DEE  
                                         l3382 0DD2                                           l3374 0D5D  
                                         l3278 0D53                                           l3286 0A29  
                                         l3470 0FD5                                           l3462 0FC6  
                                         l3454 0FBC                                           l3438 0F96  
                                         l3446 0FAA                                           l2904 0005  
                                         l2920 0954                                           l2912 094C  
                                         l2592 0CA4                                           l2584 0C8C  
                                         l2576 0C6C                                           l2568 0B1A  
                                         l3296 09C3                                           l3392 0DF3  
                                         l3384 0DD7                                           l3376 0D65  
                                         l3288 0A34                                           l3480 0FE3  
                                         l3464 0FC8                                           l3472 0FD7  
                                         l3448 0FB1                                           l3456 0FBE  
                                         l2906 08E5                                           l2922 0957  
                                         l2914 094F                                           l2850 09A2  
                                         l2930 09E8                                           l2594 0CAA  
                                         l2586 0C93                                           l2578 0C7A  
                                         l3298 09C6                                           l3394 0DF7  
                                         l3386 0DDB                                           l3378 0D69  
                                         l3490 0FFA                                           l3482 0FE6  
                                         l3474 0FDC                                           l3466 0FCC  
                                         l3458 0FC2                                           l2908 08E8  
                                         l2916 0950                                           l2940 0A7E  
                                         l2860 08DE                                           l2852 09A4  
                                         l2932 09F0                                           l2924 09E3  
                                         l2596 0CB8                                           l2588 0C96  
                                         l3388 0DE0                                           l3476 0FDD  
                                         l3484 0FE8                                           l3468 0FD2  
                                         l2918 0952                                           l2950 0AA0  
                                         l2942 0A87                                           l2870 0011  
                                         l2862 08E1                                           l2854 09A7  
                                         l2846 099C                                           l2934 09F2  
                                         l2926 09E6                                           l2598 0CBE  
                                         l3486 0FF3                                           l3478 0FE1  
                                         l2944 0A88                                           l2864 08E2  
                                         l2856 09AC                                           l2848 099F  
                                         l2936 09F4                                           l2928 09E7  
                                         l2880 08ED                                           l2872 092C  
                                         l2952 0028                                           l3488 0FF8  
                                         l2946 0A90                                           l2858 09B1  
                                         l2890 0927                                           l2938 09FB  
                                         l2882 08F0                                           l2874 092F  
                                         l2866 0015                                           l2970 0699  
                                         l2962 0622                                           l2954 0942  
                                         l2868 000B                                           l2948 0A98  
                                         l2892 0929                                           l2884 08F1  
                                         l2876 0930                                           l2980 06FB  
                                         l2972 06A6                                           l2964 0655  
                                         l2956 0947                                           l2894 092A  
                                         l2886 08F2                                           l2878 0932  
                                         l2982 0708                                           l2974 06AE  
                                         l2966 0663                                           l2990 0507  
                                         l2958 002B                                           l2888 0922  
                                         l2896 0936                                           l2984 0713  
                                         l2976 06BB                                           l2968 0672  
                                         l2992 0515                                           l2898 0939  
                                         l2986 0716                                           l2978 06C2  
                                         l2994 0524                                           l2996 053B  
                                         l2988 04D4                                           l2998 0548  
                                         u3000 0CE6                                           u3001 0CE5  
                                         u3010 0D12                                           u3011 0D11  
                                         u3100 0768                                           u3020 0D35  
                                         u3101 0767                                           u3021 0D34  
                                         u3013 0D0E                                           _LATA 010C  
                                         u3110 07B2                                           u3030 0D44  
                                         _LATB 010D                                           u3111 07B1  
                                         u3031 0D43                                           u3023 0D31  
                                         u3120 07EE                                           u3040 0D53  
                                         u3200 0F8A                                           u3121 07ED  
                                         u3041 0D52                                           u3201 0F89  
                                         u3050 0A31                                           u3210 0F96  
                                         u3035 0D40                                           u3051 0A30  
                                         u3211 0F95                                           u3060 09B9  
                                         u2420 0947                                           u3220 0F9C  
                                         u2501 04E3                                           u3061 09B8  
                                         u2421 0946                                           u3045 0D4F  
                                         u3221 0F9B                                           u2510 0515  
                                         u2502 04E5                                           u3070 09C3  
                                         u3230 0FB1                                           u2431 0631  
                                         u2511 0514                                           u2503 04EF  
                                         u3071 09C2                                           u3231 0FB0  
                                         u3080 072E                                           u1800 0C7A  
                                         u2440 0663                                           u2432 0633  
                                         u2520 0524                                           u2504 04F1  
                                         u3240 0FC2                                           u3081 072D  
                                         u1801 0C79                                           u2441 0662  
                                         u2433 063D                                           u2521 0523  
                                         u3241 0FC1                                           u3090 0747  
                                         u1810 0C93                                           u2450 0672  
                                         u2434 063F                                           u2530 0548  
                                         u2610 0BFF                                           u1730 0B28  
                                         u3250 0FD2                                           u3091 0746  
                                         u1811 0C92                                           u2451 0671  
                                         u2531 0547                                           u2611 0BFE  
                                         u1731 0B27                                           u3307 0A24  
                                         u3251 0FD1                                           u2460 06A6  
                                         u2540 055D                                           u2700 0C5A  
                                         u2620 0C15                                           u1740 0B54  
                                         u3260 0FDC                                           u3180 0F69  
                                         u1725 0A10                                           u2461 06A5  
                                         u2541 055C                                           u2701 0C59  
                                         u1741 0B53                                           u3261 0FDB  
                                         u3181 0F68                                           u1830 0CA4  
                                         u1750 0B01                                           u2470 06BB  
                                         u2550 05FC                                           u1910 0A79  
                                         u2710 0068                                           u2630 0C28  
                                         u3270 0FF3                                           u3190 0F78  
                                         u1831 0CA3                                           u1751 0B00  
                                         u2471 06BA                                           u2551 05FB  
                                         u1911 0A78                                           u2711 0067  
                                         u2631 0C27                                           u3271 0FF2  
                                         u3191 0F77                                           u2480 0708  
                                         u2560 0607                                           u2720 006E  
                                         u2640 0C2F                                           u3280 0FF8  
                                         u1825 0C97                                           u2481 0707  
                                         u2561 0606                                           u1905 0A6E  
                                         u2721 006D                                           u2641 0C2E  
                                         u2625 0C11                                           u3281 0FF7  
                                         u1850 0CB8                                           u2490 0713  
                                         u2810 01AD                                           u2730 0073  
                                         u2570 0AAA                                           u1851 0CB7  
                                         u2491 0712                                           u2731 0072  
                                         u2571 0AA9                                           u1780 0B1A  
                                         u2900 021C                                           u2820 01C4  
                                         u2740 0090                                           u2660 0C3F  
                                         u2580 0AAF                                           u1845 0CA5  
                                         u1781 0B19                                           u1765 0B08  
                                         u2901 021B                                           u2805 015B  
                                         u2741 008F                                           u2661 0C3E  
                                         u2581 0AAE                                           u1870 0CCB  
                                         u1790 0C6C                                           u2910 0222  
                                         u2750 0096                                           u2670 0C46  
                                         u2590 0AB9                                           u1871 0CCA  
                                         u1855 0CB4                                           u1791 0C6B  
                                         u1775 0B0E                                           u2911 0221  
                                         u2815 01A9                                           u2751 0095  
                                         u2671 0C45                                           u2655 0C31  
                                         u2591 0AB8                                           u1880 0CD0  
                                         u2920 022E                                           u2760 009B  
                                         u1881 0CCF                                           u1865 0CC0  
                                         u2921 022D                                           u2825 01C0  
                                         u2761 009A                                           u3297 0FE4  
                                         u1890 0A69                                           u2930 023C  
                                         u2850 01EC                                           u2770 00B2  
                                         u2690 0C55                                           u1891 0A68  
                                         u2851 01EB                                           u2835 01CF  
                                         u2771 00B1                                           u2691 0C54  
                                         u2940 0257                                           u2780 00B7  
                                         u2941 0256                                           u2845 01E2  
                                         u2781 00B6                                           u2685 0C48  
                                         u2950 026F                                           u2870 01FC  
                                         u2951 026E                                           u2935 0238  
                                         u2871 01FB                                           u2960 0289  
                                         u2880 0201                                           u2961 0288  
                                         u2945 0253                                           u2881 0200  
                                         u2865 01EE                                           u2890 0215  
                                         u2955 026B                                           u2891 0214  
                                         u2795 0130                                           u2980 096E  
                                         u2981 096D                                           u2990 0975  
                                         u2991 0974                                           i1l75 0002  
                                         _TMR0 0015                                           _TMR2 001A  
                                         _TMR4 0415                                           _TMR6 041C  
                                         _WPUA 020C                                           _WPUB 020D  
                            ??_TMR6_WriteTimer 00A0                  ?_TMR1_SetGateInterruptHandler 00A0  
                                         _main 0F54                                           _flux 0056  
                                i1___flmul@grs 0034                                           fsr0h 0005  
                                         fsr1h 0007                                           indf0 0000  
                                         fsr0l 0004                                           indf1 0001  
                                         fsr1l 0006                                           btemp 007E  
                                         start 0026                          ??_EPWM1_LoadDutyValue 00A2  
                      __end_of_TMR0_Initialize 092C                                ?_FVR_Initialize 0070  
                                ?_EUSART_Write 0070                  __end_of_OSCILLATOR_Initialize 08E5  
                                ___fltol@sign1 00CB                                          ?_main 0070  
                              __end_of___atdiv 0CDF                                __end_of___flmul 0299  
                              __end_of___fltol 0C66                                          _T1CON 0018  
                                        _T2CON 001C                                          _T4CON 0417  
                                        _T6CON 041E                                          i1l180 0024  
                                        i1l174 0012                                          i1l432 09E2  
                                        i1l440 08FD                                          i1l179 0024  
                                        i1l437 0989                                          i1l453 0968  
                                        i1l459 0003                                          i1l740 0F53  
                                        _RCREG 0199                                          _RCSTA 019D  
                                        _TMR1H 0017                                          _TMR1L 0016  
                                        _TRISA 008C                                          _TRISB 008D  
                                 ?_fluxcontrol 0070                                          _TXREG 019A  
                                        _TXSTA 019E                                _TMR4_Initialize 092C  
                      __end_of_PIN_MANAGER_IOC 0003                                 _WDT_Initialize 0015  
                               i1___flmul@aexp 0038                                 i1___flmul@bexp 0039  
                                        _error 00D4                      ??_TMR6_LoadPeriodRegister 00A0  
                                        _passo 00EC                                __end_of_fluxpos 0D58  
                               i1___flmul@sign 0033                                 i1___flmul@temp 003E  
                               i1___flmul@prod 003A                                  _controlchoice 00ED  
                                _controlchoose 09B3                        __end_of_TMR1_Initialize 09FF  
                                        pclath 000A                                 i1___fltol@exp1 0025  
                                        status 0003                                          wtemp0 007E  
                             daUmPasso@sentido 00A3                                _TMR1_WriteTimer 0979  
                             ??_DAC_Initialize 00A0                   __end_of_CMP1_GetOutputStatus 002F  
                              __initialization 0029                                   __end_of_main 1000  
                               ??_EUSART_Write 00A0                        __end_of_TMR2_Initialize 08F5  
                  ?_INTERRUPT_InterruptManager 0070                                         ??_main 00CD  
                       __end_of_WDT_Initialize 0019                                _TMR6_Initialize 0936  
            _EUSART_DefaultFramingErrorHandler 0000                                         _ADCON0 009D  
                                       _ADCON1 009E                     _EUSART_OverrunErrorHandler 0136  
                               ?_controlchoose 0070                                         _ADRESH 009C  
                                       _ADRESL 009B                                         _CCPR1H 0292  
                                       _CCPR1L 0291                                         _ANSELA 018C  
                                       _ANSELB 018D                     __end_of_EUSART_is_rx_ready 0005  
                                       _BORCON 0116                                         _T1GCON 0019  
                                       i1l1110 0BF4                                         i1l1120 0BF4  
                      TMR1_WriteTimer@timerVal 0070                                         i1l1117 0BDF  
                                       i1l1313 04D3                                         i1l1332 0A49  
                                       i1l1325 04C7                                         i1l1334 0A59  
                                       i1l1319 0453                                         u200_20 0E6D  
                                       i1l3040 0ECC                                         i1l3032 0EA8  
                                       u200_21 0E6C                                         i1l1370 0E73  
                                       i1l3042 0ECE                                         i1l3034 0EB0  
                                       i1l1371 0E7F                                         i1l1363 0E59  
                                       i1l2500 0981                                         i1l3044 0EFD  
                                       i1l3036 0EB3                                         i1l1357 0E20  
                                       i1l2502 0983                                         i1l2510 0A3A  
                                       i1l3046 0F3B                                         i1l3038 0EB9  
                                       i1l3230 095A                                         i1l1359 0EA7  
                                       i1l2504 0985                                         u201_20 0E73  
                                       i1l2512 0A41                                         i1l3048 0F4B  
                                       i1l3232 095C                                         i1l3400 000E  
                                       u201_21 0E72                                         i1l2506 0987  
                                       i1l2514 0A45                                         i1l3234 0963  
                                       i1l3402 0016                                         i1l2532 09CA  
                                       i1l2516 0A50                                         i1l2508 0A38  
                                       i1l2700 0BD6                                         i1l3404 001B  
                                       i1l2630 0E08                                         i1l2518 0A55  
                                       i1l2710 029F                                         i1l2702 0BE4  
                                       i1l3406 0020                                         i1l2536 08F5  
                                       u202_20 0E77                                         i1l2640 0E34  
                                       i1l2632 0E18                                         i1l2800 042F  
                                       i1l2720 02B6                                         i1l2712 02A3  
                                       i1l2704 0BE9                                         u202_21 0E76  
                                       i1l2650 0E60                                         i1l2642 0E3F  
                                       i1l2634 0E28                                         i1l2626 0DFF  
                                       i1l2810 0450                                         i1l2802 0433  
                                       i1l2730 02CB                                         i1l2722 02B8  
                                       i1l2714 02A4                                         i1l2706 0299  
                                       i1l2660 0E95                                         i1l2652 0E69  
                                       i1l2644 0E46                                         i1l2628 0E04  
                                       i1l2820 0469                                         i1l2804 0437  
                                       i1l2740 02E0                                         i1l2732 02CC  
                                       i1l2724 02C0                                         i1l2716 02A9  
                                       i1l2708 029D                                         u210_25 0BC0  
                                       i1l2494 0979                                         i1l2662 0E9A  
                                       i1l2654 0E6D                                         i1l2646 0E4A  
                                       i1l2638 0E31                                         i1l2830 04AA  
                                       i1l2822 0481                                         i1l2814 0458  
                                       i1l2806 0438                                         i1l2750 02FB  
                                       i1l2742 02E8                                         i1l2734 02D1  
                                       i1l2726 02C5                                         i1l2718 02AE  
                                       i1l2670 0B84                                         i1l2496 097E  
                                       i1l2664 0E9E                                         u203_20 0E8B  
                                       i1l2656 0E77                                         i1l2648 0E52  
                                       i1l2840 04C5                                         i1l2832 04B3  
                                       i1l2816 045D                                         i1l2824 0485  
                                       i1l2808 043C                                         i1l2760 0350  
                                       i1l2752 0306                                         i1l2744 02ED  
                                       i1l2736 02D6                                         i1l2728 02C7  
                                       u211_20 0BCE                                         i1l2680 0BA9  
                                       i1l2672 0B8E                                         u211_21 0BCD  
                                       i1l2498 097F                                         i1l2666 0E9F  
                                       i1l2658 0E81                                         i1l2842 04CB  
                                       i1l2834 04B5                                         i1l2826 0492  
                                       i1l2818 0465                                         i1l2770 0383  
                                       i1l2762 035D                                         i1l2754 0313  
                                       i1l2746 02F2                                         i1l2738 02DE  
                                       i1l2682 0BB1                                         i1l2836 04C0  
                                       i1l2828 049C                                         i1l2780 03C0  
                                       i1l2772 038E                                         i1l2764 036A  
                                       i1l2756 032B                                         i1l2692 0BBF  
                                       i1l2684 0BB3                                         i1l2676 0B97  
                                       i1l3396 0006                                         u203_25 0E87  
                                       i1l2838 04C4                                         i1l2790 0410  
                                       i1l2782 03CB                                         i1l2774 0395  
                                       i1l2766 0371                                         i1l2758 0338  
                                       i1l2686 0BB7                                         i1l2694 0BCF  
                                       i1l2678 0BA8                                         i1l3398 000A  
                                       u204_20 0E9A                                         i1l2792 041C  
                                       i1l2784 03DD                                         i1l2776 03A7  
                                       i1l2768 037C                                         u220_20 02D1  
                                       u212_20 0BD5                                         u204_21 0E99  
                                       u220_21 02D0                                         u212_21 0BD4  
                                       i1l2794 0423                                         i1l2786 03F2  
                                       i1l2778 03AE                                         i1l2796 0427  
                                       i1l2788 0409                                         i1l2798 0428  
                                       u205_20 0E9E                                         u221_20 02D6  
                                       u205_21 0E9D                                         u221_21 02D5  
                                       u213_25 0BD7                                         u230_20 0427  
                                       u222_20 02ED                                         u214_20 0BE4  
                                       u206_20 0B8E                                         u230_21 0426  
                                       u222_21 02EC                                         u214_21 0BE3  
                                       u206_21 0B8D                                         u223_20 02F2  
                                       u215_20 0BE9                                         u207_20 0BA4  
                                       u223_21 02F1                                         u215_21 0BE8  
                                       u231_25 0429                                         u207_25 0BA0  
                                       u240_20 04AA                                         u232_20 0437  
                                       u216_20 02A3                                         u208_20 0BB7  
                                       u240_21 04A9                                         u232_21 0436  
                                       u216_21 02A2                                         u208_21 0BB6  
                                       u240_25 04A6                                         u224_25 036B  
                                       u241_20 04C4                                         u233_20 043C  
                                       u217_20 02A9                                         u209_20 0BBE  
                                       u313_20 000A                                         u241_21 04C3  
                                       u233_21 043B                                         u217_21 02A8  
                                       u209_21 0BBD                                         u313_21 0009  
                                       u225_25 0396                                         u234_20 0450  
                                       u226_20 03E8                                         u218_20 02AE  
                                       u314_20 000E                                         u234_21 044F  
                                       u218_21 02AD                                         u314_21 000D  
                                       u170_25 0A4A                                         u226_25 03E4  
                                       u171_20 0A55                                         u235_20 0457  
                                       u227_20 03FF                                         u219_20 02CB  
                                       u315_20 0016                                         _FVRCON 0117  
                                       u171_21 0A54                                         u235_21 0456  
                                       u219_21 02CA                                         u315_21 0015  
                                       u227_25 03FB                                         u236_20 045D  
                                       u260_20 0EB9                                         u316_20 001B  
                                       u236_21 045C                                         u260_21 0EB8  
                                       u316_21 001A                                         u228_25 040A  
                                       u237_20 0469                                         u317_20 0020  
                                       u237_21 0468                                         u317_21 001F  
                                       u229_25 041D                                         u238_20 0477  
                                       u238_25 0473                                         u239_20 0492  
                                       u239_21 0491                                         u239_25 048E  
                                       u168_20 097E                                         u192_20 0E04  
                                       u168_21 097D                                         u192_21 0E03  
                                       u193_20 0E08                                         u169_20 0A45  
                                       u193_21 0E07                                         u169_21 0A44  
                                       u194_20 0E28                                         u194_21 0E27  
                                       u195_25 0E39                                         u196_20 0E45  
                                       u196_21 0E44                                         u197_25 0E53  
                                       u198_20 0E5F                                         u198_21 0E5E  
                                       u199_25 0E63                                         u297_20 0963  
                                       u297_21 0962                                         _OSCCON 0099  
                                       _SPBRGH 019C                                         _SPBRGL 019B  
                                       _WDTCON 0097                               __end_of___xxtofl 0EA8  
                              _TMR4_StartTimer 0028                          __end_of_TMR1_GATE_ISR 0969  
               ??_TMR1_SetGateInterruptHandler 00A2                                   _CCPTMRS0bits 029E  
                                 ?_TMR1_Reload 0070                                         ___tmul 0AF6  
                                    ??___atdiv 00AF                                      ??___flmul 00B1  
                                    ??___fltol 00C7                               __end_of_envia_Tx 0DFD  
                                       _height 00E1                                         _dinput 013A  
                             ?_TMR0_Initialize 0070                                         _errorp 005F  
                      __end_of_TMR4_Initialize 0936                                         _outpre 00CE  
                                       _output 00E3                              __end_ofi1___flmul 04D4  
                            __end_ofi1___fltol 0BF5                                      ??_fluxpos 00A4  
                              ?_WDT_Initialize 0070                                i1___fltol@sign1 0024  
 TMR1_SetGateInterruptHandler@InterruptHandler 00A0                               ?_PIN_MANAGER_IOC 0070  
                      __end_of_TMR1_WriteTimer 098A                               ?_TMR1_Initialize 0070  
                                 ___xxtofl@arg 0030                                   ___xxtofl@exp 002F  
                            _SYSTEM_Initialize 0ACB                                   ___xxtofl@val 0026  
                      __end_of__initialization 005A                                _CMP1_Initialize 0005  
                           ?_SYSTEM_Initialize 0070                                     ___fltol@f1 00C3  
                                 ?i1__Umul8_16 0070                              ?_EPWM1_Initialize 0070  
                               __pcstackCOMMON 0070                                   __pidataBANK0 002F  
                                 __pidataBANK2 098A                            ??_SYSTEM_Initialize 00A2  
                           ??_EPWM1_Initialize 00A0                               ?_TMR2_Initialize 0070  
                      __end_of_TMR6_Initialize 0940                                 _OPTION_REGbits 0095  
                              _TMR6_WriteTimer 08CC                                ??_controlchoose 00C1  
              ??_EUSART_SetOverrunErrorHandler 00A2                           _CMP1_GetOutputStatus 002B  
                      __end_of_TMR4_StartTimer 002B                      __end_of_SYSTEM_Initialize 0AF6  
                                   __pbssBANK0 004A                                     __pbssBANK1 00CE  
                                   __pbssBANK2 013A                           __end_of_EUSART_Write 094C  
                                   _analisa_Rx 0726                              __end_of__Umul8_16 0A7E  
                             ??_FVR_Initialize 00A0                                     __pmaintext 0F54  
                                      ?___tmul 00A0                                     __pintentry 0004  
                                      _DACCON0 0118                                        _DACCON1 0119  
                                      _CM1CON0 0111                                        _CM1CON1 0112  
                                      _CCP1CON 0293                                        _ECCP1AS 0295  
                                      _BAUDCON 019F                               ?_TMR4_Initialize 0070  
                            __end_of_daUmPasso 0ACB                                        _APFCON0 011D  
                                      _APFCON1 011E                                     _avg_height 013F  
                             _definePassoMotor 0B21                                      ?___xxtofl 0026  
                          i1__Umul8_16@product 0074                          ?_CMP1_GetOutputStatus 0070  
                                      _OSCTUNE 0098                                        _PWM1CON 0294  
                      __end_of_CMP1_Initialize 000B                       ??_EUSART_SetErrorHandler 00A2  
                             ?_TMR1_WriteTimer 0070                         definePassoMotor@passom 00A2  
                                    ?_envia_Tx 0070                                     _float_temp 006B  
                  __end_of_EPWM1_LoadDutyValue 0A1B                               _mede_height$1957 0046  
                                   _first_read 006F                           _ADC_InterruptHandler 0066  
                                      ___atdiv 0C66                                        ___flmul 005E  
                                      ___fltol 0BF5                        __end_of_TMR6_WriteTimer 08D2  
                                      _ballset 0059                               ?_TMR6_Initialize 0070  
                     TMR1_ReadTimer@readValLow 007A                                        __ptext1 0A1B  
                                      __ptext2 002B                                        __ptext3 0CDF  
                                      __ptext4 0AA3                                        __ptext5 0B21  
                                      __ptext6 0D58                                        __ptext7 0BF5  
                                      __ptext8 005E                                        __ptext9 0A5A  
                    TMR1_ReadTimer@readValHigh 0079                                      _T1CONbits 0018  
                                      _countRx 00E9                          _OSCILLATOR_Initialize 08DE  
                                    _T2CONbits 001C                                        _fluxpos 0CDF  
                                   ??___xxtofl 002A                                      _CMOUTbits 0115  
                                    _T4CONbits 0417                       ??_PIN_MANAGER_Initialize 00A0  
                                      _sentido 006A                                      _T6CONbits 041E  
                                      clrloop0 08D3                               ?_TMR4_StartTimer 0070  
                                   _passo_ctrl 00EA                           end_of_initialization 005A  
                                   ??_envia_Tx 00CD          __end_of_EUSART_SetOverrunErrorHandler 0919  
                _EUSART_SetOverrunErrorHandler 0910                              __end_of_setaPorta 0A37  
                                      init_ram 08D8                                        initloop 08D9  
                                  ?_analisa_Rx 0070                              _EUSART_Initialize 0A7E  
                           ?_EUSART_Initialize 0070                          TMR0_ReadTimer@readVal 00A0  
                                    _RCSTAbits 019D                             _EUSART_is_rx_ready 0000  
                               _TMR0_ReadTimer 0019                            ??_EUSART_Initialize 00A2  
                        i1__Umul8_16@word_mpld 0076                               ??_WDT_Initialize 00A0  
                          ?_EUSART_is_rx_ready 0070                         ??_CMP1_GetOutputStatus 00A0  
                               _TMR1_ReadTimer 09CA                       ?_TMR6_LoadPeriodRegister 0070  
                                ___xxtofl@sign 002E                                      i1___flmul 0299  
                                    i1___fltol 0B84                               ?_CMP1_Initialize 0070  
                                   _pwmcontrol 04D4                                    ___flmul@grs 00B7  
                    __end_of_EUSART_Initialize 0AA3                           ??_EUSART_is_rx_ready 00A0  
                                    _TXSTAbits 019E                         __end_of_TMR0_ReadTimer 001F  
                   _EUSART_DefaultErrorHandler 0000                               ?_TMR6_WriteTimer 0070  
                               __end_of___tmul 0B21                                   _EUSART_Write 0940  
                               _ADC_Initialize 08E5                         ?_OSCILLATOR_Initialize 0070  
                       __end_of_TMR1_ReadTimer 09E3                                  ??_mede_height 0040  
                          start_initialization 0029                                     ?i1___flmul 0026  
                                ??_EUSART_Read 00A0                                     ?i1___fltol 0079  
                 EPWM1_LoadDutyValue@dutyValue 00A0                       __end_of_definePassoMotor 0B84  
               ?_EUSART_SetOverrunErrorHandler 00A0                                 _TMR4_StopTimer 001F  
                   _EUSART_FramingErrorHandler 0138                                ?_TMR0_ReadTimer 0070  
                                     ??___tmul 00A6                         _EUSART_SetErrorHandler 08FE  
                       __end_of_ADC_Initialize 08ED                                      __Umul8_16 0A5A  
                                  __pdataBANK0 006B                                    __pdataBANK2 0120  
              __end_of_TMR6_LoadPeriodRegister 0028                                 ___tmul@product 00A6  
                              ?_TMR1_ReadTimer 0070                                  ??_fluxcontrol 00B5  
                                    ___flmul@a 00AD                                      _daUmPasso 0AA3  
                                    ___flmul@b 00A9                                    __pbssCOMMON 007D  
                                    ___latbits 0001                                  __pcstackBANK0 0020  
                                __pcstackBANK1 00A0                          __end_of_controlchoose 09CA  
                          __end_of_mede_height 0F54                                    ?_pwmcontrol 0070  
                          __end_of_EUSART_Read 0979                                      __pnvBANK2 0132  
                       __end_of_TMR4_StopTimer 0022                         _PIN_MANAGER_Initialize 099C  
                                _TMR1_GATE_ISR 095A                       i1__Umul8_16@multiplicand 0070  
                                     ?___atdiv 00A9                                       ?___flmul 00A9  
                                     ?___fltol 00C3                                     ?__Umul8_16 00A0  
                              ?_ADC_Initialize 0070                                      _fim_curso 00EB  
                 ??_INTERRUPT_InterruptManager 007D                                       ?_fluxpos 0070  
                                   ?_daUmPasso 0070                                      _nao_salva 00E7  
                                  ??i1___flmul 002E                                    ??i1___fltol 0020  
                                    _func_mode 0068                            __end_of_fluxcontrol 0726  
                            ??_TMR0_Initialize 00A0                                       _LATAbits 010C  
       EUSART_SetErrorHandler@interruptHandler 00A0                                   ??_analisa_Rx 00A4  
                                    clear_ram0 08D2                                       _PIE1bits 0091  
                            _eusartRxLastError 00EE                                ?_TMR4_StopTimer 0070  
                                    _setaPorta 0A1B                                 ?_TMR1_GATE_ISR 0070  
                                     _PIR1bits 0011                ??_EUSART_SetFramingErrorHandler 00A2  
                                     _PIR3bits 0013                                  ??_TMR1_Reload 0072  
                                    _sp_height 0062                                      _tempo_voo 0064  
            _EUSART_DefaultOverrunErrorHandler 0000                                       _PSTR1CON 0296  
                            ??_PIN_MANAGER_IOC 0070                      _TMR1_GateInterruptHandler 0132  
                            ??_TMR1_Initialize 00A2                                     _ADCON0bits 009D  
                               _DAC_Initialize 000B                                    _mede_height 0EA8  
                             _EPWM1_Initialize 094C                        definePassoMotor@sentido 00A0  
                          ___tmul@multiplicand 00A3                                      _outputsum 00D1  
                           __end_of_analisa_Rx 0800                                    _EUSART_Read 0969  
                            ??_TMR2_Initialize 00A0                                  ??i1__Umul8_16 0072  
                          __end_of_lookupTable 08CC                                     ?_setaPorta 0070  
                        TMR1_ReadTimer@readVal 0077                        ??_OSCILLATOR_Initialize 00A0  
                                  ??__Umul8_16 00A2                            _EUSART_ErrorHandler 0134  
                       __end_of_DAC_Initialize 0011                                       _adc_temp 013D  
                          __end_of_TMR1_Reload 08FE                                       _balldist 005C  
                                     ___xxtofl 0DFD                                    ??_daUmPasso 00A3  
                                  _fluxcontrol 0622                                       __ptext10 0940  
                                     __ptext11 09B3                                       __ptext20 0022  
                                     __ptext12 04D4                                       __ptext21 001F  
                                     __ptext13 0622                                     _T1GCONbits 0019  
                                     __ptext30 0922                                       __ptext22 0019  
                                     __ptext14 0AF6                                       __ptext31 099C  
                                     __ptext23 0ACB                                       __ptext15 0C66  
                                     __ptext40 0005                                       __ptext32 08DE  
                                     __ptext24 0015                                       __ptext16 0028  
                                     __ptext41 08E5                                       __ptext33 0011  
                                     __ptext25 0936                                       __ptext17 0726  
                                     __ptext50 0A37                                       __ptext42 0000  
                                     __ptext34 0A7E                                       __ptext26 092C  
                                     __ptext18 09FF                                       __ptext51 0DFD  
                                     __ptext43 0969                                       __ptext35 0910  
                                     __ptext27 08ED                                       __ptext19 08CC  
                                     __ptext52 08F5                                       __ptext36 0907  
                                     __ptext28 09E3                                       __ptext53 0979  
                                     __ptext45 095A                                       __ptext37 08FE  
                                     __ptext29 0919                                       __ptext54 09CA  
                                     __ptext46 0003                                       __ptext38 094C  
                                     __ptext55 0002                                       __ptext47 0EA8  
                                     __ptext39 000B                                       __ptext48 0B84  
                                     __ptext49 0299                                       _bufferRx 004A  
                                     _envia_Tx 0D58                                       _count_Tx 00E8  
                      TMR6_WriteTimer@timerVal 00A0               TMR6_LoadPeriodRegister@periodVal 00A0  
                            ??_TMR4_Initialize 00A0                               ??_TMR0_ReadTimer 00A0  
                              ??_TMR1_GATE_ISR 007D                        ?_EUSART_SetErrorHandler 00A0  
                            ?_definePassoMotor 00A0  EUSART_SetOverrunErrorHandler@interruptHandler 00A0  
                           ??_definePassoMotor 00A1                               ??_TMR1_ReadTimer 0072  
                                     int$flags 007E                                       _position 00DF  
                          __end_ofi1__Umul8_16 0A5A             __end_of_INTERRUPT_InterruptManager 0026  
                   _INTERRUPT_InterruptManager 0004          __end_of_EUSART_SetFramingErrorHandler 0910  
                _EUSART_SetFramingErrorHandler 0907                                ?_DAC_Initialize 0070  
                            ??_TMR1_WriteTimer 0072                                     _INTCONbits 000B  
                                   _FVRCONbits 0117                                  _avg_tempo_voo 0052  
                                 ??_pwmcontrol 00B5                                    _lookupTable 0800  
                                     intlevel1 0000                         i1__Umul8_16@multiplier 0078  
                      ?_PIN_MANAGER_Initialize 0070                              ??_TMR6_Initialize 00A0  
               __end_of_EUSART_SetErrorHandler 0907                                    ??_setaPorta 00A4  
                             ??_ADC_Initialize 00A0                                    _TMR1_Reload 08F5  
                            ___tmul@multiplier 00A0  EUSART_SetFramingErrorHandler@interruptHandler 00A0  
                            ??_TMR4_StartTimer 00A0                                  __pstringtext1 0800  
                           __end_of_pwmcontrol 0622                                 _FVR_Initialize 0011  
                       __Umul8_16@multiplicand 00A0                                     _OPTION_REG 0095  
                              _TMR0_Initialize 0922                                    _timecontrol 0120  
                          _EPWM1_LoadDutyValue 09FF                               ___atdiv@dividend 00AC  
                           EUSART_Write@txData 00A0           __end_of_TMR1_SetGateInterruptHandler 0922  
                 _TMR1_SetGateInterruptHandler 0919                 __end_of_PIN_MANAGER_Initialize 09B3  
                             ??_TMR4_StopTimer 00A0                        _TMR6_LoadPeriodRegister 0022  
                                  _sp_position 00DD                                ___atdiv@divisor 00A9  
                              _PIN_MANAGER_IOC 0002                           __Umul8_16@multiplier 00A8  
                              ___atdiv@counter 00B0                                    i1__Umul8_16 0A37  
                              _TMR1_Initialize 09E3                       __end_of_EPWM1_Initialize 095A  
                         ?_EPWM1_LoadDutyValue 00A0                              __Umul8_16@product 00A4  
                                 ___atdiv@sign 00B1  
