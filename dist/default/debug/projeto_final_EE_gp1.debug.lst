

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Tue Sep 03 15:13:39 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F1827
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     6                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2
    44                           	psect	text27,local,class=CODE,merge=1,delta=2
    45                           	psect	text28,local,class=CODE,merge=1,delta=2
    46                           	psect	text29,local,class=CODE,merge=1,delta=2
    47                           	psect	text30,local,class=CODE,merge=1,delta=2
    48                           	psect	text31,local,class=CODE,merge=1,delta=2
    49                           	psect	text32,local,class=CODE,merge=1,delta=2
    50                           	psect	text33,local,class=CODE,merge=1,delta=2
    51                           	psect	text34,local,class=CODE,merge=1,delta=2
    52                           	psect	text35,local,class=CODE,merge=1,delta=2
    53                           	psect	text36,local,class=CODE,merge=1,delta=2
    54                           	psect	text37,local,class=CODE,merge=1,delta=2
    55                           	psect	text38,local,class=CODE,merge=1,delta=2
    56                           	psect	text39,local,class=CODE,merge=1,delta=2
    57                           	psect	text40,local,class=CODE,merge=1,delta=2
    58                           	psect	text41,local,class=CODE,merge=1,delta=2
    59                           	psect	text42,local,class=CODE,merge=1,delta=2
    60                           	psect	intentry,global,class=CODE,delta=2
    61                           	psect	text44,local,class=CODE,merge=1,delta=2
    62                           	psect	text45,local,class=CODE,merge=1,delta=2
    63                           	psect	text46,local,class=CODE,merge=1,delta=2
    64                           	psect	text47,local,class=CODE,merge=1,delta=2
    65                           	psect	text48,local,class=CODE,merge=1,delta=2
    66                           	psect	text49,local,class=CODE,merge=1,delta=2
    67                           	psect	text50,local,class=CODE,merge=1,delta=2
    68                           	psect	text51,local,class=CODE,merge=1,delta=2
    69                           	psect	text52,local,class=CODE,merge=1,delta=2
    70                           	psect	text53,local,class=CODE,merge=1,delta=2
    71                           	psect	text54,local,class=CODE,merge=1,delta=2
    72                           	psect	text55,local,class=CODE,merge=1,delta=2
    73                           	psect	text56,local,class=CODE,merge=1,delta=2,group=1
    74                           	psect	text57,local,class=CODE,merge=1,delta=2,group=1
    75                           	psect	text58,local,class=CODE,merge=1,delta=2,group=1
    76                           	psect	text59,local,class=CODE,merge=1,delta=2,group=1
    77                           	psect	text60,local,class=CODE,merge=1,delta=2
    78                           	psect	text61,local,class=CODE,merge=1,delta=2
    79                           	psect	text62,local,class=CODE,merge=1,delta=2
    80                           	psect	text63,local,class=CODE,merge=1,delta=2
    81                           	psect	text64,local,class=CODE,merge=1,delta=2
    82                           	psect	text65,local,class=CODE,merge=1,delta=2
    83                           	psect	text66,local,class=CODE,merge=1,delta=2
    84                           	psect	text67,local,class=CODE,merge=1,delta=2
    85                           	psect	text68,local,class=CODE,merge=1,delta=2
    86                           	psect	text69,local,class=CODE,merge=1,delta=2
    87                           	psect	text70,local,class=CODE,merge=1,delta=2
    88                           	psect	text71,local,class=CODE,merge=1,delta=2
    89                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    90                           	dabs	1,0x7E,2
    91     0000                     
    92                           ; Generated 07/09/2023 GMT
    93                           ; 
    94                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    95                           ; All rights reserved.
    96                           ; 
    97                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    98                           ; 
    99                           ; Redistribution and use in source and binary forms, with or without modification, are
   100                           ; permitted provided that the following conditions are met:
   101                           ; 
   102                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   103                           ;        conditions and the following disclaimer.
   104                           ; 
   105                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   106                           ;        of conditions and the following disclaimer in the documentation and/or other
   107                           ;        materials provided with the distribution. Publication is not required when
   108                           ;        this file is used in an embedded application.
   109                           ; 
   110                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   111                           ;        software without specific prior written permission.
   112                           ; 
   113                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   114                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   115                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   116                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   117                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   118                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   119                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   120                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   121                           ; 
   122                           ; 
   123                           ; Code-generator required, PIC16F1827 Definitions
   124                           ; 
   125                           ; SFR Addresses
   126     0000                     	;# 
   127     0001                     	;# 
   128     0002                     	;# 
   129     0003                     	;# 
   130     0004                     	;# 
   131     0005                     	;# 
   132     0006                     	;# 
   133     0007                     	;# 
   134     0008                     	;# 
   135     0009                     	;# 
   136     000A                     	;# 
   137     000B                     	;# 
   138     000C                     	;# 
   139     000D                     	;# 
   140     0011                     	;# 
   141     0012                     	;# 
   142     0013                     	;# 
   143     0014                     	;# 
   144     0015                     	;# 
   145     0016                     	;# 
   146     0016                     	;# 
   147     0017                     	;# 
   148     0018                     	;# 
   149     0019                     	;# 
   150     001A                     	;# 
   151     001B                     	;# 
   152     001C                     	;# 
   153     001E                     	;# 
   154     001F                     	;# 
   155     008C                     	;# 
   156     008D                     	;# 
   157     0091                     	;# 
   158     0092                     	;# 
   159     0093                     	;# 
   160     0094                     	;# 
   161     0095                     	;# 
   162     0096                     	;# 
   163     0097                     	;# 
   164     0098                     	;# 
   165     0099                     	;# 
   166     009A                     	;# 
   167     009B                     	;# 
   168     009B                     	;# 
   169     009C                     	;# 
   170     009D                     	;# 
   171     009E                     	;# 
   172     010C                     	;# 
   173     010D                     	;# 
   174     0111                     	;# 
   175     0112                     	;# 
   176     0113                     	;# 
   177     0114                     	;# 
   178     0115                     	;# 
   179     0116                     	;# 
   180     0117                     	;# 
   181     0118                     	;# 
   182     0119                     	;# 
   183     011A                     	;# 
   184     011B                     	;# 
   185     011D                     	;# 
   186     011E                     	;# 
   187     018C                     	;# 
   188     018D                     	;# 
   189     0191                     	;# 
   190     0191                     	;# 
   191     0192                     	;# 
   192     0193                     	;# 
   193     0193                     	;# 
   194     0193                     	;# 
   195     0194                     	;# 
   196     0195                     	;# 
   197     0196                     	;# 
   198     0199                     	;# 
   199     019A                     	;# 
   200     019B                     	;# 
   201     019B                     	;# 
   202     019B                     	;# 
   203     019B                     	;# 
   204     019C                     	;# 
   205     019C                     	;# 
   206     019D                     	;# 
   207     019E                     	;# 
   208     019F                     	;# 
   209     020C                     	;# 
   210     020D                     	;# 
   211     0211                     	;# 
   212     0211                     	;# 
   213     0212                     	;# 
   214     0212                     	;# 
   215     0213                     	;# 
   216     0213                     	;# 
   217     0214                     	;# 
   218     0214                     	;# 
   219     0215                     	;# 
   220     0215                     	;# 
   221     0215                     	;# 
   222     0216                     	;# 
   223     0216                     	;# 
   224     0217                     	;# 
   225     0217                     	;# 
   226     0219                     	;# 
   227     021A                     	;# 
   228     021B                     	;# 
   229     021C                     	;# 
   230     021D                     	;# 
   231     021E                     	;# 
   232     021F                     	;# 
   233     0291                     	;# 
   234     0291                     	;# 
   235     0292                     	;# 
   236     0293                     	;# 
   237     0294                     	;# 
   238     0295                     	;# 
   239     0295                     	;# 
   240     0296                     	;# 
   241     0298                     	;# 
   242     0298                     	;# 
   243     0299                     	;# 
   244     029A                     	;# 
   245     029B                     	;# 
   246     029C                     	;# 
   247     029C                     	;# 
   248     029D                     	;# 
   249     029E                     	;# 
   250     029E                     	;# 
   251     0311                     	;# 
   252     0311                     	;# 
   253     0312                     	;# 
   254     0313                     	;# 
   255     0318                     	;# 
   256     0318                     	;# 
   257     0319                     	;# 
   258     031A                     	;# 
   259     0394                     	;# 
   260     0395                     	;# 
   261     0396                     	;# 
   262     039A                     	;# 
   263     039C                     	;# 
   264     039D                     	;# 
   265     039E                     	;# 
   266     039F                     	;# 
   267     0415                     	;# 
   268     0416                     	;# 
   269     0417                     	;# 
   270     041C                     	;# 
   271     041D                     	;# 
   272     041E                     	;# 
   273     0FE4                     	;# 
   274     0FE5                     	;# 
   275     0FE6                     	;# 
   276     0FE7                     	;# 
   277     0FE8                     	;# 
   278     0FE9                     	;# 
   279     0FEA                     	;# 
   280     0FEB                     	;# 
   281     0FED                     	;# 
   282     0FEE                     	;# 
   283     0FEF                     	;# 
   284     0000                     	;# 
   285     0001                     	;# 
   286     0002                     	;# 
   287     0003                     	;# 
   288     0004                     	;# 
   289     0005                     	;# 
   290     0006                     	;# 
   291     0007                     	;# 
   292     0008                     	;# 
   293     0009                     	;# 
   294     000A                     	;# 
   295     000B                     	;# 
   296     000C                     	;# 
   297     000D                     	;# 
   298     0011                     	;# 
   299     0012                     	;# 
   300     0013                     	;# 
   301     0014                     	;# 
   302     0015                     	;# 
   303     0016                     	;# 
   304     0016                     	;# 
   305     0017                     	;# 
   306     0018                     	;# 
   307     0019                     	;# 
   308     001A                     	;# 
   309     001B                     	;# 
   310     001C                     	;# 
   311     001E                     	;# 
   312     001F                     	;# 
   313     008C                     	;# 
   314     008D                     	;# 
   315     0091                     	;# 
   316     0092                     	;# 
   317     0093                     	;# 
   318     0094                     	;# 
   319     0095                     	;# 
   320     0096                     	;# 
   321     0097                     	;# 
   322     0098                     	;# 
   323     0099                     	;# 
   324     009A                     	;# 
   325     009B                     	;# 
   326     009B                     	;# 
   327     009C                     	;# 
   328     009D                     	;# 
   329     009E                     	;# 
   330     010C                     	;# 
   331     010D                     	;# 
   332     0111                     	;# 
   333     0112                     	;# 
   334     0113                     	;# 
   335     0114                     	;# 
   336     0115                     	;# 
   337     0116                     	;# 
   338     0117                     	;# 
   339     0118                     	;# 
   340     0119                     	;# 
   341     011A                     	;# 
   342     011B                     	;# 
   343     011D                     	;# 
   344     011E                     	;# 
   345     018C                     	;# 
   346     018D                     	;# 
   347     0191                     	;# 
   348     0191                     	;# 
   349     0192                     	;# 
   350     0193                     	;# 
   351     0193                     	;# 
   352     0193                     	;# 
   353     0194                     	;# 
   354     0195                     	;# 
   355     0196                     	;# 
   356     0199                     	;# 
   357     019A                     	;# 
   358     019B                     	;# 
   359     019B                     	;# 
   360     019B                     	;# 
   361     019B                     	;# 
   362     019C                     	;# 
   363     019C                     	;# 
   364     019D                     	;# 
   365     019E                     	;# 
   366     019F                     	;# 
   367     020C                     	;# 
   368     020D                     	;# 
   369     0211                     	;# 
   370     0211                     	;# 
   371     0212                     	;# 
   372     0212                     	;# 
   373     0213                     	;# 
   374     0213                     	;# 
   375     0214                     	;# 
   376     0214                     	;# 
   377     0215                     	;# 
   378     0215                     	;# 
   379     0215                     	;# 
   380     0216                     	;# 
   381     0216                     	;# 
   382     0217                     	;# 
   383     0217                     	;# 
   384     0219                     	;# 
   385     021A                     	;# 
   386     021B                     	;# 
   387     021C                     	;# 
   388     021D                     	;# 
   389     021E                     	;# 
   390     021F                     	;# 
   391     0291                     	;# 
   392     0291                     	;# 
   393     0292                     	;# 
   394     0293                     	;# 
   395     0294                     	;# 
   396     0295                     	;# 
   397     0295                     	;# 
   398     0296                     	;# 
   399     0298                     	;# 
   400     0298                     	;# 
   401     0299                     	;# 
   402     029A                     	;# 
   403     029B                     	;# 
   404     029C                     	;# 
   405     029C                     	;# 
   406     029D                     	;# 
   407     029E                     	;# 
   408     029E                     	;# 
   409     0311                     	;# 
   410     0311                     	;# 
   411     0312                     	;# 
   412     0313                     	;# 
   413     0318                     	;# 
   414     0318                     	;# 
   415     0319                     	;# 
   416     031A                     	;# 
   417     0394                     	;# 
   418     0395                     	;# 
   419     0396                     	;# 
   420     039A                     	;# 
   421     039C                     	;# 
   422     039D                     	;# 
   423     039E                     	;# 
   424     039F                     	;# 
   425     0415                     	;# 
   426     0416                     	;# 
   427     0417                     	;# 
   428     041C                     	;# 
   429     041D                     	;# 
   430     041E                     	;# 
   431     0FE4                     	;# 
   432     0FE5                     	;# 
   433     0FE6                     	;# 
   434     0FE7                     	;# 
   435     0FE8                     	;# 
   436     0FE9                     	;# 
   437     0FEA                     	;# 
   438     0FEB                     	;# 
   439     0FED                     	;# 
   440     0FEE                     	;# 
   441     0FEF                     	;# 
   442     0000                     	;# 
   443     0001                     	;# 
   444     0002                     	;# 
   445     0003                     	;# 
   446     0004                     	;# 
   447     0005                     	;# 
   448     0006                     	;# 
   449     0007                     	;# 
   450     0008                     	;# 
   451     0009                     	;# 
   452     000A                     	;# 
   453     000B                     	;# 
   454     000C                     	;# 
   455     000D                     	;# 
   456     0011                     	;# 
   457     0012                     	;# 
   458     0013                     	;# 
   459     0014                     	;# 
   460     0015                     	;# 
   461     0016                     	;# 
   462     0016                     	;# 
   463     0017                     	;# 
   464     0018                     	;# 
   465     0019                     	;# 
   466     001A                     	;# 
   467     001B                     	;# 
   468     001C                     	;# 
   469     001E                     	;# 
   470     001F                     	;# 
   471     008C                     	;# 
   472     008D                     	;# 
   473     0091                     	;# 
   474     0092                     	;# 
   475     0093                     	;# 
   476     0094                     	;# 
   477     0095                     	;# 
   478     0096                     	;# 
   479     0097                     	;# 
   480     0098                     	;# 
   481     0099                     	;# 
   482     009A                     	;# 
   483     009B                     	;# 
   484     009B                     	;# 
   485     009C                     	;# 
   486     009D                     	;# 
   487     009E                     	;# 
   488     010C                     	;# 
   489     010D                     	;# 
   490     0111                     	;# 
   491     0112                     	;# 
   492     0113                     	;# 
   493     0114                     	;# 
   494     0115                     	;# 
   495     0116                     	;# 
   496     0117                     	;# 
   497     0118                     	;# 
   498     0119                     	;# 
   499     011A                     	;# 
   500     011B                     	;# 
   501     011D                     	;# 
   502     011E                     	;# 
   503     018C                     	;# 
   504     018D                     	;# 
   505     0191                     	;# 
   506     0191                     	;# 
   507     0192                     	;# 
   508     0193                     	;# 
   509     0193                     	;# 
   510     0193                     	;# 
   511     0194                     	;# 
   512     0195                     	;# 
   513     0196                     	;# 
   514     0199                     	;# 
   515     019A                     	;# 
   516     019B                     	;# 
   517     019B                     	;# 
   518     019B                     	;# 
   519     019B                     	;# 
   520     019C                     	;# 
   521     019C                     	;# 
   522     019D                     	;# 
   523     019E                     	;# 
   524     019F                     	;# 
   525     020C                     	;# 
   526     020D                     	;# 
   527     0211                     	;# 
   528     0211                     	;# 
   529     0212                     	;# 
   530     0212                     	;# 
   531     0213                     	;# 
   532     0213                     	;# 
   533     0214                     	;# 
   534     0214                     	;# 
   535     0215                     	;# 
   536     0215                     	;# 
   537     0215                     	;# 
   538     0216                     	;# 
   539     0216                     	;# 
   540     0217                     	;# 
   541     0217                     	;# 
   542     0219                     	;# 
   543     021A                     	;# 
   544     021B                     	;# 
   545     021C                     	;# 
   546     021D                     	;# 
   547     021E                     	;# 
   548     021F                     	;# 
   549     0291                     	;# 
   550     0291                     	;# 
   551     0292                     	;# 
   552     0293                     	;# 
   553     0294                     	;# 
   554     0295                     	;# 
   555     0295                     	;# 
   556     0296                     	;# 
   557     0298                     	;# 
   558     0298                     	;# 
   559     0299                     	;# 
   560     029A                     	;# 
   561     029B                     	;# 
   562     029C                     	;# 
   563     029C                     	;# 
   564     029D                     	;# 
   565     029E                     	;# 
   566     029E                     	;# 
   567     0311                     	;# 
   568     0311                     	;# 
   569     0312                     	;# 
   570     0313                     	;# 
   571     0318                     	;# 
   572     0318                     	;# 
   573     0319                     	;# 
   574     031A                     	;# 
   575     0394                     	;# 
   576     0395                     	;# 
   577     0396                     	;# 
   578     039A                     	;# 
   579     039C                     	;# 
   580     039D                     	;# 
   581     039E                     	;# 
   582     039F                     	;# 
   583     0415                     	;# 
   584     0416                     	;# 
   585     0417                     	;# 
   586     041C                     	;# 
   587     041D                     	;# 
   588     041E                     	;# 
   589     0FE4                     	;# 
   590     0FE5                     	;# 
   591     0FE6                     	;# 
   592     0FE7                     	;# 
   593     0FE8                     	;# 
   594     0FE9                     	;# 
   595     0FEA                     	;# 
   596     0FEB                     	;# 
   597     0FED                     	;# 
   598     0FEE                     	;# 
   599     0FEF                     	;# 
   600     0000                     	;# 
   601     0001                     	;# 
   602     0002                     	;# 
   603     0003                     	;# 
   604     0004                     	;# 
   605     0005                     	;# 
   606     0006                     	;# 
   607     0007                     	;# 
   608     0008                     	;# 
   609     0009                     	;# 
   610     000A                     	;# 
   611     000B                     	;# 
   612     000C                     	;# 
   613     000D                     	;# 
   614     0011                     	;# 
   615     0012                     	;# 
   616     0013                     	;# 
   617     0014                     	;# 
   618     0015                     	;# 
   619     0016                     	;# 
   620     0016                     	;# 
   621     0017                     	;# 
   622     0018                     	;# 
   623     0019                     	;# 
   624     001A                     	;# 
   625     001B                     	;# 
   626     001C                     	;# 
   627     001E                     	;# 
   628     001F                     	;# 
   629     008C                     	;# 
   630     008D                     	;# 
   631     0091                     	;# 
   632     0092                     	;# 
   633     0093                     	;# 
   634     0094                     	;# 
   635     0095                     	;# 
   636     0096                     	;# 
   637     0097                     	;# 
   638     0098                     	;# 
   639     0099                     	;# 
   640     009A                     	;# 
   641     009B                     	;# 
   642     009B                     	;# 
   643     009C                     	;# 
   644     009D                     	;# 
   645     009E                     	;# 
   646     010C                     	;# 
   647     010D                     	;# 
   648     0111                     	;# 
   649     0112                     	;# 
   650     0113                     	;# 
   651     0114                     	;# 
   652     0115                     	;# 
   653     0116                     	;# 
   654     0117                     	;# 
   655     0118                     	;# 
   656     0119                     	;# 
   657     011A                     	;# 
   658     011B                     	;# 
   659     011D                     	;# 
   660     011E                     	;# 
   661     018C                     	;# 
   662     018D                     	;# 
   663     0191                     	;# 
   664     0191                     	;# 
   665     0192                     	;# 
   666     0193                     	;# 
   667     0193                     	;# 
   668     0193                     	;# 
   669     0194                     	;# 
   670     0195                     	;# 
   671     0196                     	;# 
   672     0199                     	;# 
   673     019A                     	;# 
   674     019B                     	;# 
   675     019B                     	;# 
   676     019B                     	;# 
   677     019B                     	;# 
   678     019C                     	;# 
   679     019C                     	;# 
   680     019D                     	;# 
   681     019E                     	;# 
   682     019F                     	;# 
   683     020C                     	;# 
   684     020D                     	;# 
   685     0211                     	;# 
   686     0211                     	;# 
   687     0212                     	;# 
   688     0212                     	;# 
   689     0213                     	;# 
   690     0213                     	;# 
   691     0214                     	;# 
   692     0214                     	;# 
   693     0215                     	;# 
   694     0215                     	;# 
   695     0215                     	;# 
   696     0216                     	;# 
   697     0216                     	;# 
   698     0217                     	;# 
   699     0217                     	;# 
   700     0219                     	;# 
   701     021A                     	;# 
   702     021B                     	;# 
   703     021C                     	;# 
   704     021D                     	;# 
   705     021E                     	;# 
   706     021F                     	;# 
   707     0291                     	;# 
   708     0291                     	;# 
   709     0292                     	;# 
   710     0293                     	;# 
   711     0294                     	;# 
   712     0295                     	;# 
   713     0295                     	;# 
   714     0296                     	;# 
   715     0298                     	;# 
   716     0298                     	;# 
   717     0299                     	;# 
   718     029A                     	;# 
   719     029B                     	;# 
   720     029C                     	;# 
   721     029C                     	;# 
   722     029D                     	;# 
   723     029E                     	;# 
   724     029E                     	;# 
   725     0311                     	;# 
   726     0311                     	;# 
   727     0312                     	;# 
   728     0313                     	;# 
   729     0318                     	;# 
   730     0318                     	;# 
   731     0319                     	;# 
   732     031A                     	;# 
   733     0394                     	;# 
   734     0395                     	;# 
   735     0396                     	;# 
   736     039A                     	;# 
   737     039C                     	;# 
   738     039D                     	;# 
   739     039E                     	;# 
   740     039F                     	;# 
   741     0415                     	;# 
   742     0416                     	;# 
   743     0417                     	;# 
   744     041C                     	;# 
   745     041D                     	;# 
   746     041E                     	;# 
   747     0FE4                     	;# 
   748     0FE5                     	;# 
   749     0FE6                     	;# 
   750     0FE7                     	;# 
   751     0FE8                     	;# 
   752     0FE9                     	;# 
   753     0FEA                     	;# 
   754     0FEB                     	;# 
   755     0FED                     	;# 
   756     0FEE                     	;# 
   757     0FEF                     	;# 
   758     0000                     	;# 
   759     0001                     	;# 
   760     0002                     	;# 
   761     0003                     	;# 
   762     0004                     	;# 
   763     0005                     	;# 
   764     0006                     	;# 
   765     0007                     	;# 
   766     0008                     	;# 
   767     0009                     	;# 
   768     000A                     	;# 
   769     000B                     	;# 
   770     000C                     	;# 
   771     000D                     	;# 
   772     0011                     	;# 
   773     0012                     	;# 
   774     0013                     	;# 
   775     0014                     	;# 
   776     0015                     	;# 
   777     0016                     	;# 
   778     0016                     	;# 
   779     0017                     	;# 
   780     0018                     	;# 
   781     0019                     	;# 
   782     001A                     	;# 
   783     001B                     	;# 
   784     001C                     	;# 
   785     001E                     	;# 
   786     001F                     	;# 
   787     008C                     	;# 
   788     008D                     	;# 
   789     0091                     	;# 
   790     0092                     	;# 
   791     0093                     	;# 
   792     0094                     	;# 
   793     0095                     	;# 
   794     0096                     	;# 
   795     0097                     	;# 
   796     0098                     	;# 
   797     0099                     	;# 
   798     009A                     	;# 
   799     009B                     	;# 
   800     009B                     	;# 
   801     009C                     	;# 
   802     009D                     	;# 
   803     009E                     	;# 
   804     010C                     	;# 
   805     010D                     	;# 
   806     0111                     	;# 
   807     0112                     	;# 
   808     0113                     	;# 
   809     0114                     	;# 
   810     0115                     	;# 
   811     0116                     	;# 
   812     0117                     	;# 
   813     0118                     	;# 
   814     0119                     	;# 
   815     011A                     	;# 
   816     011B                     	;# 
   817     011D                     	;# 
   818     011E                     	;# 
   819     018C                     	;# 
   820     018D                     	;# 
   821     0191                     	;# 
   822     0191                     	;# 
   823     0192                     	;# 
   824     0193                     	;# 
   825     0193                     	;# 
   826     0193                     	;# 
   827     0194                     	;# 
   828     0195                     	;# 
   829     0196                     	;# 
   830     0199                     	;# 
   831     019A                     	;# 
   832     019B                     	;# 
   833     019B                     	;# 
   834     019B                     	;# 
   835     019B                     	;# 
   836     019C                     	;# 
   837     019C                     	;# 
   838     019D                     	;# 
   839     019E                     	;# 
   840     019F                     	;# 
   841     020C                     	;# 
   842     020D                     	;# 
   843     0211                     	;# 
   844     0211                     	;# 
   845     0212                     	;# 
   846     0212                     	;# 
   847     0213                     	;# 
   848     0213                     	;# 
   849     0214                     	;# 
   850     0214                     	;# 
   851     0215                     	;# 
   852     0215                     	;# 
   853     0215                     	;# 
   854     0216                     	;# 
   855     0216                     	;# 
   856     0217                     	;# 
   857     0217                     	;# 
   858     0219                     	;# 
   859     021A                     	;# 
   860     021B                     	;# 
   861     021C                     	;# 
   862     021D                     	;# 
   863     021E                     	;# 
   864     021F                     	;# 
   865     0291                     	;# 
   866     0291                     	;# 
   867     0292                     	;# 
   868     0293                     	;# 
   869     0294                     	;# 
   870     0295                     	;# 
   871     0295                     	;# 
   872     0296                     	;# 
   873     0298                     	;# 
   874     0298                     	;# 
   875     0299                     	;# 
   876     029A                     	;# 
   877     029B                     	;# 
   878     029C                     	;# 
   879     029C                     	;# 
   880     029D                     	;# 
   881     029E                     	;# 
   882     029E                     	;# 
   883     0311                     	;# 
   884     0311                     	;# 
   885     0312                     	;# 
   886     0313                     	;# 
   887     0318                     	;# 
   888     0318                     	;# 
   889     0319                     	;# 
   890     031A                     	;# 
   891     0394                     	;# 
   892     0395                     	;# 
   893     0396                     	;# 
   894     039A                     	;# 
   895     039C                     	;# 
   896     039D                     	;# 
   897     039E                     	;# 
   898     039F                     	;# 
   899     0415                     	;# 
   900     0416                     	;# 
   901     0417                     	;# 
   902     041C                     	;# 
   903     041D                     	;# 
   904     041E                     	;# 
   905     0FE4                     	;# 
   906     0FE5                     	;# 
   907     0FE6                     	;# 
   908     0FE7                     	;# 
   909     0FE8                     	;# 
   910     0FE9                     	;# 
   911     0FEA                     	;# 
   912     0FEB                     	;# 
   913     0FED                     	;# 
   914     0FEE                     	;# 
   915     0FEF                     	;# 
   916     0000                     	;# 
   917     0001                     	;# 
   918     0002                     	;# 
   919     0003                     	;# 
   920     0004                     	;# 
   921     0005                     	;# 
   922     0006                     	;# 
   923     0007                     	;# 
   924     0008                     	;# 
   925     0009                     	;# 
   926     000A                     	;# 
   927     000B                     	;# 
   928     000C                     	;# 
   929     000D                     	;# 
   930     0011                     	;# 
   931     0012                     	;# 
   932     0013                     	;# 
   933     0014                     	;# 
   934     0015                     	;# 
   935     0016                     	;# 
   936     0016                     	;# 
   937     0017                     	;# 
   938     0018                     	;# 
   939     0019                     	;# 
   940     001A                     	;# 
   941     001B                     	;# 
   942     001C                     	;# 
   943     001E                     	;# 
   944     001F                     	;# 
   945     008C                     	;# 
   946     008D                     	;# 
   947     0091                     	;# 
   948     0092                     	;# 
   949     0093                     	;# 
   950     0094                     	;# 
   951     0095                     	;# 
   952     0096                     	;# 
   953     0097                     	;# 
   954     0098                     	;# 
   955     0099                     	;# 
   956     009A                     	;# 
   957     009B                     	;# 
   958     009B                     	;# 
   959     009C                     	;# 
   960     009D                     	;# 
   961     009E                     	;# 
   962     010C                     	;# 
   963     010D                     	;# 
   964     0111                     	;# 
   965     0112                     	;# 
   966     0113                     	;# 
   967     0114                     	;# 
   968     0115                     	;# 
   969     0116                     	;# 
   970     0117                     	;# 
   971     0118                     	;# 
   972     0119                     	;# 
   973     011A                     	;# 
   974     011B                     	;# 
   975     011D                     	;# 
   976     011E                     	;# 
   977     018C                     	;# 
   978     018D                     	;# 
   979     0191                     	;# 
   980     0191                     	;# 
   981     0192                     	;# 
   982     0193                     	;# 
   983     0193                     	;# 
   984     0193                     	;# 
   985     0194                     	;# 
   986     0195                     	;# 
   987     0196                     	;# 
   988     0199                     	;# 
   989     019A                     	;# 
   990     019B                     	;# 
   991     019B                     	;# 
   992     019B                     	;# 
   993     019B                     	;# 
   994     019C                     	;# 
   995     019C                     	;# 
   996     019D                     	;# 
   997     019E                     	;# 
   998     019F                     	;# 
   999     020C                     	;# 
  1000     020D                     	;# 
  1001     0211                     	;# 
  1002     0211                     	;# 
  1003     0212                     	;# 
  1004     0212                     	;# 
  1005     0213                     	;# 
  1006     0213                     	;# 
  1007     0214                     	;# 
  1008     0214                     	;# 
  1009     0215                     	;# 
  1010     0215                     	;# 
  1011     0215                     	;# 
  1012     0216                     	;# 
  1013     0216                     	;# 
  1014     0217                     	;# 
  1015     0217                     	;# 
  1016     0219                     	;# 
  1017     021A                     	;# 
  1018     021B                     	;# 
  1019     021C                     	;# 
  1020     021D                     	;# 
  1021     021E                     	;# 
  1022     021F                     	;# 
  1023     0291                     	;# 
  1024     0291                     	;# 
  1025     0292                     	;# 
  1026     0293                     	;# 
  1027     0294                     	;# 
  1028     0295                     	;# 
  1029     0295                     	;# 
  1030     0296                     	;# 
  1031     0298                     	;# 
  1032     0298                     	;# 
  1033     0299                     	;# 
  1034     029A                     	;# 
  1035     029B                     	;# 
  1036     029C                     	;# 
  1037     029C                     	;# 
  1038     029D                     	;# 
  1039     029E                     	;# 
  1040     029E                     	;# 
  1041     0311                     	;# 
  1042     0311                     	;# 
  1043     0312                     	;# 
  1044     0313                     	;# 
  1045     0318                     	;# 
  1046     0318                     	;# 
  1047     0319                     	;# 
  1048     031A                     	;# 
  1049     0394                     	;# 
  1050     0395                     	;# 
  1051     0396                     	;# 
  1052     039A                     	;# 
  1053     039C                     	;# 
  1054     039D                     	;# 
  1055     039E                     	;# 
  1056     039F                     	;# 
  1057     0415                     	;# 
  1058     0416                     	;# 
  1059     0417                     	;# 
  1060     041C                     	;# 
  1061     041D                     	;# 
  1062     041E                     	;# 
  1063     0FE4                     	;# 
  1064     0FE5                     	;# 
  1065     0FE6                     	;# 
  1066     0FE7                     	;# 
  1067     0FE8                     	;# 
  1068     0FE9                     	;# 
  1069     0FEA                     	;# 
  1070     0FEB                     	;# 
  1071     0FED                     	;# 
  1072     0FEE                     	;# 
  1073     0FEF                     	;# 
  1074     0000                     	;# 
  1075     0001                     	;# 
  1076     0002                     	;# 
  1077     0003                     	;# 
  1078     0004                     	;# 
  1079     0005                     	;# 
  1080     0006                     	;# 
  1081     0007                     	;# 
  1082     0008                     	;# 
  1083     0009                     	;# 
  1084     000A                     	;# 
  1085     000B                     	;# 
  1086     000C                     	;# 
  1087     000D                     	;# 
  1088     0011                     	;# 
  1089     0012                     	;# 
  1090     0013                     	;# 
  1091     0014                     	;# 
  1092     0015                     	;# 
  1093     0016                     	;# 
  1094     0016                     	;# 
  1095     0017                     	;# 
  1096     0018                     	;# 
  1097     0019                     	;# 
  1098     001A                     	;# 
  1099     001B                     	;# 
  1100     001C                     	;# 
  1101     001E                     	;# 
  1102     001F                     	;# 
  1103     008C                     	;# 
  1104     008D                     	;# 
  1105     0091                     	;# 
  1106     0092                     	;# 
  1107     0093                     	;# 
  1108     0094                     	;# 
  1109     0095                     	;# 
  1110     0096                     	;# 
  1111     0097                     	;# 
  1112     0098                     	;# 
  1113     0099                     	;# 
  1114     009A                     	;# 
  1115     009B                     	;# 
  1116     009B                     	;# 
  1117     009C                     	;# 
  1118     009D                     	;# 
  1119     009E                     	;# 
  1120     010C                     	;# 
  1121     010D                     	;# 
  1122     0111                     	;# 
  1123     0112                     	;# 
  1124     0113                     	;# 
  1125     0114                     	;# 
  1126     0115                     	;# 
  1127     0116                     	;# 
  1128     0117                     	;# 
  1129     0118                     	;# 
  1130     0119                     	;# 
  1131     011A                     	;# 
  1132     011B                     	;# 
  1133     011D                     	;# 
  1134     011E                     	;# 
  1135     018C                     	;# 
  1136     018D                     	;# 
  1137     0191                     	;# 
  1138     0191                     	;# 
  1139     0192                     	;# 
  1140     0193                     	;# 
  1141     0193                     	;# 
  1142     0193                     	;# 
  1143     0194                     	;# 
  1144     0195                     	;# 
  1145     0196                     	;# 
  1146     0199                     	;# 
  1147     019A                     	;# 
  1148     019B                     	;# 
  1149     019B                     	;# 
  1150     019B                     	;# 
  1151     019B                     	;# 
  1152     019C                     	;# 
  1153     019C                     	;# 
  1154     019D                     	;# 
  1155     019E                     	;# 
  1156     019F                     	;# 
  1157     020C                     	;# 
  1158     020D                     	;# 
  1159     0211                     	;# 
  1160     0211                     	;# 
  1161     0212                     	;# 
  1162     0212                     	;# 
  1163     0213                     	;# 
  1164     0213                     	;# 
  1165     0214                     	;# 
  1166     0214                     	;# 
  1167     0215                     	;# 
  1168     0215                     	;# 
  1169     0215                     	;# 
  1170     0216                     	;# 
  1171     0216                     	;# 
  1172     0217                     	;# 
  1173     0217                     	;# 
  1174     0219                     	;# 
  1175     021A                     	;# 
  1176     021B                     	;# 
  1177     021C                     	;# 
  1178     021D                     	;# 
  1179     021E                     	;# 
  1180     021F                     	;# 
  1181     0291                     	;# 
  1182     0291                     	;# 
  1183     0292                     	;# 
  1184     0293                     	;# 
  1185     0294                     	;# 
  1186     0295                     	;# 
  1187     0295                     	;# 
  1188     0296                     	;# 
  1189     0298                     	;# 
  1190     0298                     	;# 
  1191     0299                     	;# 
  1192     029A                     	;# 
  1193     029B                     	;# 
  1194     029C                     	;# 
  1195     029C                     	;# 
  1196     029D                     	;# 
  1197     029E                     	;# 
  1198     029E                     	;# 
  1199     0311                     	;# 
  1200     0311                     	;# 
  1201     0312                     	;# 
  1202     0313                     	;# 
  1203     0318                     	;# 
  1204     0318                     	;# 
  1205     0319                     	;# 
  1206     031A                     	;# 
  1207     0394                     	;# 
  1208     0395                     	;# 
  1209     0396                     	;# 
  1210     039A                     	;# 
  1211     039C                     	;# 
  1212     039D                     	;# 
  1213     039E                     	;# 
  1214     039F                     	;# 
  1215     0415                     	;# 
  1216     0416                     	;# 
  1217     0417                     	;# 
  1218     041C                     	;# 
  1219     041D                     	;# 
  1220     041E                     	;# 
  1221     0FE4                     	;# 
  1222     0FE5                     	;# 
  1223     0FE6                     	;# 
  1224     0FE7                     	;# 
  1225     0FE8                     	;# 
  1226     0FE9                     	;# 
  1227     0FEA                     	;# 
  1228     0FEB                     	;# 
  1229     0FED                     	;# 
  1230     0FEE                     	;# 
  1231     0FEF                     	;# 
  1232     0000                     	;# 
  1233     0001                     	;# 
  1234     0002                     	;# 
  1235     0003                     	;# 
  1236     0004                     	;# 
  1237     0005                     	;# 
  1238     0006                     	;# 
  1239     0007                     	;# 
  1240     0008                     	;# 
  1241     0009                     	;# 
  1242     000A                     	;# 
  1243     000B                     	;# 
  1244     000C                     	;# 
  1245     000D                     	;# 
  1246     0011                     	;# 
  1247     0012                     	;# 
  1248     0013                     	;# 
  1249     0014                     	;# 
  1250     0015                     	;# 
  1251     0016                     	;# 
  1252     0016                     	;# 
  1253     0017                     	;# 
  1254     0018                     	;# 
  1255     0019                     	;# 
  1256     001A                     	;# 
  1257     001B                     	;# 
  1258     001C                     	;# 
  1259     001E                     	;# 
  1260     001F                     	;# 
  1261     008C                     	;# 
  1262     008D                     	;# 
  1263     0091                     	;# 
  1264     0092                     	;# 
  1265     0093                     	;# 
  1266     0094                     	;# 
  1267     0095                     	;# 
  1268     0096                     	;# 
  1269     0097                     	;# 
  1270     0098                     	;# 
  1271     0099                     	;# 
  1272     009A                     	;# 
  1273     009B                     	;# 
  1274     009B                     	;# 
  1275     009C                     	;# 
  1276     009D                     	;# 
  1277     009E                     	;# 
  1278     010C                     	;# 
  1279     010D                     	;# 
  1280     0111                     	;# 
  1281     0112                     	;# 
  1282     0113                     	;# 
  1283     0114                     	;# 
  1284     0115                     	;# 
  1285     0116                     	;# 
  1286     0117                     	;# 
  1287     0118                     	;# 
  1288     0119                     	;# 
  1289     011A                     	;# 
  1290     011B                     	;# 
  1291     011D                     	;# 
  1292     011E                     	;# 
  1293     018C                     	;# 
  1294     018D                     	;# 
  1295     0191                     	;# 
  1296     0191                     	;# 
  1297     0192                     	;# 
  1298     0193                     	;# 
  1299     0193                     	;# 
  1300     0193                     	;# 
  1301     0194                     	;# 
  1302     0195                     	;# 
  1303     0196                     	;# 
  1304     0199                     	;# 
  1305     019A                     	;# 
  1306     019B                     	;# 
  1307     019B                     	;# 
  1308     019B                     	;# 
  1309     019B                     	;# 
  1310     019C                     	;# 
  1311     019C                     	;# 
  1312     019D                     	;# 
  1313     019E                     	;# 
  1314     019F                     	;# 
  1315     020C                     	;# 
  1316     020D                     	;# 
  1317     0211                     	;# 
  1318     0211                     	;# 
  1319     0212                     	;# 
  1320     0212                     	;# 
  1321     0213                     	;# 
  1322     0213                     	;# 
  1323     0214                     	;# 
  1324     0214                     	;# 
  1325     0215                     	;# 
  1326     0215                     	;# 
  1327     0215                     	;# 
  1328     0216                     	;# 
  1329     0216                     	;# 
  1330     0217                     	;# 
  1331     0217                     	;# 
  1332     0219                     	;# 
  1333     021A                     	;# 
  1334     021B                     	;# 
  1335     021C                     	;# 
  1336     021D                     	;# 
  1337     021E                     	;# 
  1338     021F                     	;# 
  1339     0291                     	;# 
  1340     0291                     	;# 
  1341     0292                     	;# 
  1342     0293                     	;# 
  1343     0294                     	;# 
  1344     0295                     	;# 
  1345     0295                     	;# 
  1346     0296                     	;# 
  1347     0298                     	;# 
  1348     0298                     	;# 
  1349     0299                     	;# 
  1350     029A                     	;# 
  1351     029B                     	;# 
  1352     029C                     	;# 
  1353     029C                     	;# 
  1354     029D                     	;# 
  1355     029E                     	;# 
  1356     029E                     	;# 
  1357     0311                     	;# 
  1358     0311                     	;# 
  1359     0312                     	;# 
  1360     0313                     	;# 
  1361     0318                     	;# 
  1362     0318                     	;# 
  1363     0319                     	;# 
  1364     031A                     	;# 
  1365     0394                     	;# 
  1366     0395                     	;# 
  1367     0396                     	;# 
  1368     039A                     	;# 
  1369     039C                     	;# 
  1370     039D                     	;# 
  1371     039E                     	;# 
  1372     039F                     	;# 
  1373     0415                     	;# 
  1374     0416                     	;# 
  1375     0417                     	;# 
  1376     041C                     	;# 
  1377     041D                     	;# 
  1378     041E                     	;# 
  1379     0FE4                     	;# 
  1380     0FE5                     	;# 
  1381     0FE6                     	;# 
  1382     0FE7                     	;# 
  1383     0FE8                     	;# 
  1384     0FE9                     	;# 
  1385     0FEA                     	;# 
  1386     0FEB                     	;# 
  1387     0FED                     	;# 
  1388     0FEE                     	;# 
  1389     0FEF                     	;# 
  1390     0000                     	;# 
  1391     0001                     	;# 
  1392     0002                     	;# 
  1393     0003                     	;# 
  1394     0004                     	;# 
  1395     0005                     	;# 
  1396     0006                     	;# 
  1397     0007                     	;# 
  1398     0008                     	;# 
  1399     0009                     	;# 
  1400     000A                     	;# 
  1401     000B                     	;# 
  1402     000C                     	;# 
  1403     000D                     	;# 
  1404     0011                     	;# 
  1405     0012                     	;# 
  1406     0013                     	;# 
  1407     0014                     	;# 
  1408     0015                     	;# 
  1409     0016                     	;# 
  1410     0016                     	;# 
  1411     0017                     	;# 
  1412     0018                     	;# 
  1413     0019                     	;# 
  1414     001A                     	;# 
  1415     001B                     	;# 
  1416     001C                     	;# 
  1417     001E                     	;# 
  1418     001F                     	;# 
  1419     008C                     	;# 
  1420     008D                     	;# 
  1421     0091                     	;# 
  1422     0092                     	;# 
  1423     0093                     	;# 
  1424     0094                     	;# 
  1425     0095                     	;# 
  1426     0096                     	;# 
  1427     0097                     	;# 
  1428     0098                     	;# 
  1429     0099                     	;# 
  1430     009A                     	;# 
  1431     009B                     	;# 
  1432     009B                     	;# 
  1433     009C                     	;# 
  1434     009D                     	;# 
  1435     009E                     	;# 
  1436     010C                     	;# 
  1437     010D                     	;# 
  1438     0111                     	;# 
  1439     0112                     	;# 
  1440     0113                     	;# 
  1441     0114                     	;# 
  1442     0115                     	;# 
  1443     0116                     	;# 
  1444     0117                     	;# 
  1445     0118                     	;# 
  1446     0119                     	;# 
  1447     011A                     	;# 
  1448     011B                     	;# 
  1449     011D                     	;# 
  1450     011E                     	;# 
  1451     018C                     	;# 
  1452     018D                     	;# 
  1453     0191                     	;# 
  1454     0191                     	;# 
  1455     0192                     	;# 
  1456     0193                     	;# 
  1457     0193                     	;# 
  1458     0193                     	;# 
  1459     0194                     	;# 
  1460     0195                     	;# 
  1461     0196                     	;# 
  1462     0199                     	;# 
  1463     019A                     	;# 
  1464     019B                     	;# 
  1465     019B                     	;# 
  1466     019B                     	;# 
  1467     019B                     	;# 
  1468     019C                     	;# 
  1469     019C                     	;# 
  1470     019D                     	;# 
  1471     019E                     	;# 
  1472     019F                     	;# 
  1473     020C                     	;# 
  1474     020D                     	;# 
  1475     0211                     	;# 
  1476     0211                     	;# 
  1477     0212                     	;# 
  1478     0212                     	;# 
  1479     0213                     	;# 
  1480     0213                     	;# 
  1481     0214                     	;# 
  1482     0214                     	;# 
  1483     0215                     	;# 
  1484     0215                     	;# 
  1485     0215                     	;# 
  1486     0216                     	;# 
  1487     0216                     	;# 
  1488     0217                     	;# 
  1489     0217                     	;# 
  1490     0219                     	;# 
  1491     021A                     	;# 
  1492     021B                     	;# 
  1493     021C                     	;# 
  1494     021D                     	;# 
  1495     021E                     	;# 
  1496     021F                     	;# 
  1497     0291                     	;# 
  1498     0291                     	;# 
  1499     0292                     	;# 
  1500     0293                     	;# 
  1501     0294                     	;# 
  1502     0295                     	;# 
  1503     0295                     	;# 
  1504     0296                     	;# 
  1505     0298                     	;# 
  1506     0298                     	;# 
  1507     0299                     	;# 
  1508     029A                     	;# 
  1509     029B                     	;# 
  1510     029C                     	;# 
  1511     029C                     	;# 
  1512     029D                     	;# 
  1513     029E                     	;# 
  1514     029E                     	;# 
  1515     0311                     	;# 
  1516     0311                     	;# 
  1517     0312                     	;# 
  1518     0313                     	;# 
  1519     0318                     	;# 
  1520     0318                     	;# 
  1521     0319                     	;# 
  1522     031A                     	;# 
  1523     0394                     	;# 
  1524     0395                     	;# 
  1525     0396                     	;# 
  1526     039A                     	;# 
  1527     039C                     	;# 
  1528     039D                     	;# 
  1529     039E                     	;# 
  1530     039F                     	;# 
  1531     0415                     	;# 
  1532     0416                     	;# 
  1533     0417                     	;# 
  1534     041C                     	;# 
  1535     041D                     	;# 
  1536     041E                     	;# 
  1537     0FE4                     	;# 
  1538     0FE5                     	;# 
  1539     0FE6                     	;# 
  1540     0FE7                     	;# 
  1541     0FE8                     	;# 
  1542     0FE9                     	;# 
  1543     0FEA                     	;# 
  1544     0FEB                     	;# 
  1545     0FED                     	;# 
  1546     0FEE                     	;# 
  1547     0FEF                     	;# 
  1548     0000                     	;# 
  1549     0001                     	;# 
  1550     0002                     	;# 
  1551     0003                     	;# 
  1552     0004                     	;# 
  1553     0005                     	;# 
  1554     0006                     	;# 
  1555     0007                     	;# 
  1556     0008                     	;# 
  1557     0009                     	;# 
  1558     000A                     	;# 
  1559     000B                     	;# 
  1560     000C                     	;# 
  1561     000D                     	;# 
  1562     0011                     	;# 
  1563     0012                     	;# 
  1564     0013                     	;# 
  1565     0014                     	;# 
  1566     0015                     	;# 
  1567     0016                     	;# 
  1568     0016                     	;# 
  1569     0017                     	;# 
  1570     0018                     	;# 
  1571     0019                     	;# 
  1572     001A                     	;# 
  1573     001B                     	;# 
  1574     001C                     	;# 
  1575     001E                     	;# 
  1576     001F                     	;# 
  1577     008C                     	;# 
  1578     008D                     	;# 
  1579     0091                     	;# 
  1580     0092                     	;# 
  1581     0093                     	;# 
  1582     0094                     	;# 
  1583     0095                     	;# 
  1584     0096                     	;# 
  1585     0097                     	;# 
  1586     0098                     	;# 
  1587     0099                     	;# 
  1588     009A                     	;# 
  1589     009B                     	;# 
  1590     009B                     	;# 
  1591     009C                     	;# 
  1592     009D                     	;# 
  1593     009E                     	;# 
  1594     010C                     	;# 
  1595     010D                     	;# 
  1596     0111                     	;# 
  1597     0112                     	;# 
  1598     0113                     	;# 
  1599     0114                     	;# 
  1600     0115                     	;# 
  1601     0116                     	;# 
  1602     0117                     	;# 
  1603     0118                     	;# 
  1604     0119                     	;# 
  1605     011A                     	;# 
  1606     011B                     	;# 
  1607     011D                     	;# 
  1608     011E                     	;# 
  1609     018C                     	;# 
  1610     018D                     	;# 
  1611     0191                     	;# 
  1612     0191                     	;# 
  1613     0192                     	;# 
  1614     0193                     	;# 
  1615     0193                     	;# 
  1616     0193                     	;# 
  1617     0194                     	;# 
  1618     0195                     	;# 
  1619     0196                     	;# 
  1620     0199                     	;# 
  1621     019A                     	;# 
  1622     019B                     	;# 
  1623     019B                     	;# 
  1624     019B                     	;# 
  1625     019B                     	;# 
  1626     019C                     	;# 
  1627     019C                     	;# 
  1628     019D                     	;# 
  1629     019E                     	;# 
  1630     019F                     	;# 
  1631     020C                     	;# 
  1632     020D                     	;# 
  1633     0211                     	;# 
  1634     0211                     	;# 
  1635     0212                     	;# 
  1636     0212                     	;# 
  1637     0213                     	;# 
  1638     0213                     	;# 
  1639     0214                     	;# 
  1640     0214                     	;# 
  1641     0215                     	;# 
  1642     0215                     	;# 
  1643     0215                     	;# 
  1644     0216                     	;# 
  1645     0216                     	;# 
  1646     0217                     	;# 
  1647     0217                     	;# 
  1648     0219                     	;# 
  1649     021A                     	;# 
  1650     021B                     	;# 
  1651     021C                     	;# 
  1652     021D                     	;# 
  1653     021E                     	;# 
  1654     021F                     	;# 
  1655     0291                     	;# 
  1656     0291                     	;# 
  1657     0292                     	;# 
  1658     0293                     	;# 
  1659     0294                     	;# 
  1660     0295                     	;# 
  1661     0295                     	;# 
  1662     0296                     	;# 
  1663     0298                     	;# 
  1664     0298                     	;# 
  1665     0299                     	;# 
  1666     029A                     	;# 
  1667     029B                     	;# 
  1668     029C                     	;# 
  1669     029C                     	;# 
  1670     029D                     	;# 
  1671     029E                     	;# 
  1672     029E                     	;# 
  1673     0311                     	;# 
  1674     0311                     	;# 
  1675     0312                     	;# 
  1676     0313                     	;# 
  1677     0318                     	;# 
  1678     0318                     	;# 
  1679     0319                     	;# 
  1680     031A                     	;# 
  1681     0394                     	;# 
  1682     0395                     	;# 
  1683     0396                     	;# 
  1684     039A                     	;# 
  1685     039C                     	;# 
  1686     039D                     	;# 
  1687     039E                     	;# 
  1688     039F                     	;# 
  1689     0415                     	;# 
  1690     0416                     	;# 
  1691     0417                     	;# 
  1692     041C                     	;# 
  1693     041D                     	;# 
  1694     041E                     	;# 
  1695     0FE4                     	;# 
  1696     0FE5                     	;# 
  1697     0FE6                     	;# 
  1698     0FE7                     	;# 
  1699     0FE8                     	;# 
  1700     0FE9                     	;# 
  1701     0FEA                     	;# 
  1702     0FEB                     	;# 
  1703     0FED                     	;# 
  1704     0FEE                     	;# 
  1705     0FEF                     	;# 
  1706     0000                     	;# 
  1707     0001                     	;# 
  1708     0002                     	;# 
  1709     0003                     	;# 
  1710     0004                     	;# 
  1711     0005                     	;# 
  1712     0006                     	;# 
  1713     0007                     	;# 
  1714     0008                     	;# 
  1715     0009                     	;# 
  1716     000A                     	;# 
  1717     000B                     	;# 
  1718     000C                     	;# 
  1719     000D                     	;# 
  1720     0011                     	;# 
  1721     0012                     	;# 
  1722     0013                     	;# 
  1723     0014                     	;# 
  1724     0015                     	;# 
  1725     0016                     	;# 
  1726     0016                     	;# 
  1727     0017                     	;# 
  1728     0018                     	;# 
  1729     0019                     	;# 
  1730     001A                     	;# 
  1731     001B                     	;# 
  1732     001C                     	;# 
  1733     001E                     	;# 
  1734     001F                     	;# 
  1735     008C                     	;# 
  1736     008D                     	;# 
  1737     0091                     	;# 
  1738     0092                     	;# 
  1739     0093                     	;# 
  1740     0094                     	;# 
  1741     0095                     	;# 
  1742     0096                     	;# 
  1743     0097                     	;# 
  1744     0098                     	;# 
  1745     0099                     	;# 
  1746     009A                     	;# 
  1747     009B                     	;# 
  1748     009B                     	;# 
  1749     009C                     	;# 
  1750     009D                     	;# 
  1751     009E                     	;# 
  1752     010C                     	;# 
  1753     010D                     	;# 
  1754     0111                     	;# 
  1755     0112                     	;# 
  1756     0113                     	;# 
  1757     0114                     	;# 
  1758     0115                     	;# 
  1759     0116                     	;# 
  1760     0117                     	;# 
  1761     0118                     	;# 
  1762     0119                     	;# 
  1763     011A                     	;# 
  1764     011B                     	;# 
  1765     011D                     	;# 
  1766     011E                     	;# 
  1767     018C                     	;# 
  1768     018D                     	;# 
  1769     0191                     	;# 
  1770     0191                     	;# 
  1771     0192                     	;# 
  1772     0193                     	;# 
  1773     0193                     	;# 
  1774     0193                     	;# 
  1775     0194                     	;# 
  1776     0195                     	;# 
  1777     0196                     	;# 
  1778     0199                     	;# 
  1779     019A                     	;# 
  1780     019B                     	;# 
  1781     019B                     	;# 
  1782     019B                     	;# 
  1783     019B                     	;# 
  1784     019C                     	;# 
  1785     019C                     	;# 
  1786     019D                     	;# 
  1787     019E                     	;# 
  1788     019F                     	;# 
  1789     020C                     	;# 
  1790     020D                     	;# 
  1791     0211                     	;# 
  1792     0211                     	;# 
  1793     0212                     	;# 
  1794     0212                     	;# 
  1795     0213                     	;# 
  1796     0213                     	;# 
  1797     0214                     	;# 
  1798     0214                     	;# 
  1799     0215                     	;# 
  1800     0215                     	;# 
  1801     0215                     	;# 
  1802     0216                     	;# 
  1803     0216                     	;# 
  1804     0217                     	;# 
  1805     0217                     	;# 
  1806     0219                     	;# 
  1807     021A                     	;# 
  1808     021B                     	;# 
  1809     021C                     	;# 
  1810     021D                     	;# 
  1811     021E                     	;# 
  1812     021F                     	;# 
  1813     0291                     	;# 
  1814     0291                     	;# 
  1815     0292                     	;# 
  1816     0293                     	;# 
  1817     0294                     	;# 
  1818     0295                     	;# 
  1819     0295                     	;# 
  1820     0296                     	;# 
  1821     0298                     	;# 
  1822     0298                     	;# 
  1823     0299                     	;# 
  1824     029A                     	;# 
  1825     029B                     	;# 
  1826     029C                     	;# 
  1827     029C                     	;# 
  1828     029D                     	;# 
  1829     029E                     	;# 
  1830     029E                     	;# 
  1831     0311                     	;# 
  1832     0311                     	;# 
  1833     0312                     	;# 
  1834     0313                     	;# 
  1835     0318                     	;# 
  1836     0318                     	;# 
  1837     0319                     	;# 
  1838     031A                     	;# 
  1839     0394                     	;# 
  1840     0395                     	;# 
  1841     0396                     	;# 
  1842     039A                     	;# 
  1843     039C                     	;# 
  1844     039D                     	;# 
  1845     039E                     	;# 
  1846     039F                     	;# 
  1847     0415                     	;# 
  1848     0416                     	;# 
  1849     0417                     	;# 
  1850     041C                     	;# 
  1851     041D                     	;# 
  1852     041E                     	;# 
  1853     0FE4                     	;# 
  1854     0FE5                     	;# 
  1855     0FE6                     	;# 
  1856     0FE7                     	;# 
  1857     0FE8                     	;# 
  1858     0FE9                     	;# 
  1859     0FEA                     	;# 
  1860     0FEB                     	;# 
  1861     0FED                     	;# 
  1862     0FEE                     	;# 
  1863     0FEF                     	;# 
  1864     0000                     	;# 
  1865     0001                     	;# 
  1866     0002                     	;# 
  1867     0003                     	;# 
  1868     0004                     	;# 
  1869     0005                     	;# 
  1870     0006                     	;# 
  1871     0007                     	;# 
  1872     0008                     	;# 
  1873     0009                     	;# 
  1874     000A                     	;# 
  1875     000B                     	;# 
  1876     000C                     	;# 
  1877     000D                     	;# 
  1878     0011                     	;# 
  1879     0012                     	;# 
  1880     0013                     	;# 
  1881     0014                     	;# 
  1882     0015                     	;# 
  1883     0016                     	;# 
  1884     0016                     	;# 
  1885     0017                     	;# 
  1886     0018                     	;# 
  1887     0019                     	;# 
  1888     001A                     	;# 
  1889     001B                     	;# 
  1890     001C                     	;# 
  1891     001E                     	;# 
  1892     001F                     	;# 
  1893     008C                     	;# 
  1894     008D                     	;# 
  1895     0091                     	;# 
  1896     0092                     	;# 
  1897     0093                     	;# 
  1898     0094                     	;# 
  1899     0095                     	;# 
  1900     0096                     	;# 
  1901     0097                     	;# 
  1902     0098                     	;# 
  1903     0099                     	;# 
  1904     009A                     	;# 
  1905     009B                     	;# 
  1906     009B                     	;# 
  1907     009C                     	;# 
  1908     009D                     	;# 
  1909     009E                     	;# 
  1910     010C                     	;# 
  1911     010D                     	;# 
  1912     0111                     	;# 
  1913     0112                     	;# 
  1914     0113                     	;# 
  1915     0114                     	;# 
  1916     0115                     	;# 
  1917     0116                     	;# 
  1918     0117                     	;# 
  1919     0118                     	;# 
  1920     0119                     	;# 
  1921     011A                     	;# 
  1922     011B                     	;# 
  1923     011D                     	;# 
  1924     011E                     	;# 
  1925     018C                     	;# 
  1926     018D                     	;# 
  1927     0191                     	;# 
  1928     0191                     	;# 
  1929     0192                     	;# 
  1930     0193                     	;# 
  1931     0193                     	;# 
  1932     0193                     	;# 
  1933     0194                     	;# 
  1934     0195                     	;# 
  1935     0196                     	;# 
  1936     0199                     	;# 
  1937     019A                     	;# 
  1938     019B                     	;# 
  1939     019B                     	;# 
  1940     019B                     	;# 
  1941     019B                     	;# 
  1942     019C                     	;# 
  1943     019C                     	;# 
  1944     019D                     	;# 
  1945     019E                     	;# 
  1946     019F                     	;# 
  1947     020C                     	;# 
  1948     020D                     	;# 
  1949     0211                     	;# 
  1950     0211                     	;# 
  1951     0212                     	;# 
  1952     0212                     	;# 
  1953     0213                     	;# 
  1954     0213                     	;# 
  1955     0214                     	;# 
  1956     0214                     	;# 
  1957     0215                     	;# 
  1958     0215                     	;# 
  1959     0215                     	;# 
  1960     0216                     	;# 
  1961     0216                     	;# 
  1962     0217                     	;# 
  1963     0217                     	;# 
  1964     0219                     	;# 
  1965     021A                     	;# 
  1966     021B                     	;# 
  1967     021C                     	;# 
  1968     021D                     	;# 
  1969     021E                     	;# 
  1970     021F                     	;# 
  1971     0291                     	;# 
  1972     0291                     	;# 
  1973     0292                     	;# 
  1974     0293                     	;# 
  1975     0294                     	;# 
  1976     0295                     	;# 
  1977     0295                     	;# 
  1978     0296                     	;# 
  1979     0298                     	;# 
  1980     0298                     	;# 
  1981     0299                     	;# 
  1982     029A                     	;# 
  1983     029B                     	;# 
  1984     029C                     	;# 
  1985     029C                     	;# 
  1986     029D                     	;# 
  1987     029E                     	;# 
  1988     029E                     	;# 
  1989     0311                     	;# 
  1990     0311                     	;# 
  1991     0312                     	;# 
  1992     0313                     	;# 
  1993     0318                     	;# 
  1994     0318                     	;# 
  1995     0319                     	;# 
  1996     031A                     	;# 
  1997     0394                     	;# 
  1998     0395                     	;# 
  1999     0396                     	;# 
  2000     039A                     	;# 
  2001     039C                     	;# 
  2002     039D                     	;# 
  2003     039E                     	;# 
  2004     039F                     	;# 
  2005     0415                     	;# 
  2006     0416                     	;# 
  2007     0417                     	;# 
  2008     041C                     	;# 
  2009     041D                     	;# 
  2010     041E                     	;# 
  2011     0FE4                     	;# 
  2012     0FE5                     	;# 
  2013     0FE6                     	;# 
  2014     0FE7                     	;# 
  2015     0FE8                     	;# 
  2016     0FE9                     	;# 
  2017     0FEA                     	;# 
  2018     0FEB                     	;# 
  2019     0FED                     	;# 
  2020     0FEE                     	;# 
  2021     0FEF                     	;# 
  2022     0000                     	;# 
  2023     0001                     	;# 
  2024     0002                     	;# 
  2025     0003                     	;# 
  2026     0004                     	;# 
  2027     0005                     	;# 
  2028     0006                     	;# 
  2029     0007                     	;# 
  2030     0008                     	;# 
  2031     0009                     	;# 
  2032     000A                     	;# 
  2033     000B                     	;# 
  2034     000C                     	;# 
  2035     000D                     	;# 
  2036     0011                     	;# 
  2037     0012                     	;# 
  2038     0013                     	;# 
  2039     0014                     	;# 
  2040     0015                     	;# 
  2041     0016                     	;# 
  2042     0016                     	;# 
  2043     0017                     	;# 
  2044     0018                     	;# 
  2045     0019                     	;# 
  2046     001A                     	;# 
  2047     001B                     	;# 
  2048     001C                     	;# 
  2049     001E                     	;# 
  2050     001F                     	;# 
  2051     008C                     	;# 
  2052     008D                     	;# 
  2053     0091                     	;# 
  2054     0092                     	;# 
  2055     0093                     	;# 
  2056     0094                     	;# 
  2057     0095                     	;# 
  2058     0096                     	;# 
  2059     0097                     	;# 
  2060     0098                     	;# 
  2061     0099                     	;# 
  2062     009A                     	;# 
  2063     009B                     	;# 
  2064     009B                     	;# 
  2065     009C                     	;# 
  2066     009D                     	;# 
  2067     009E                     	;# 
  2068     010C                     	;# 
  2069     010D                     	;# 
  2070     0111                     	;# 
  2071     0112                     	;# 
  2072     0113                     	;# 
  2073     0114                     	;# 
  2074     0115                     	;# 
  2075     0116                     	;# 
  2076     0117                     	;# 
  2077     0118                     	;# 
  2078     0119                     	;# 
  2079     011A                     	;# 
  2080     011B                     	;# 
  2081     011D                     	;# 
  2082     011E                     	;# 
  2083     018C                     	;# 
  2084     018D                     	;# 
  2085     0191                     	;# 
  2086     0191                     	;# 
  2087     0192                     	;# 
  2088     0193                     	;# 
  2089     0193                     	;# 
  2090     0193                     	;# 
  2091     0194                     	;# 
  2092     0195                     	;# 
  2093     0196                     	;# 
  2094     0199                     	;# 
  2095     019A                     	;# 
  2096     019B                     	;# 
  2097     019B                     	;# 
  2098     019B                     	;# 
  2099     019B                     	;# 
  2100     019C                     	;# 
  2101     019C                     	;# 
  2102     019D                     	;# 
  2103     019E                     	;# 
  2104     019F                     	;# 
  2105     020C                     	;# 
  2106     020D                     	;# 
  2107     0211                     	;# 
  2108     0211                     	;# 
  2109     0212                     	;# 
  2110     0212                     	;# 
  2111     0213                     	;# 
  2112     0213                     	;# 
  2113     0214                     	;# 
  2114     0214                     	;# 
  2115     0215                     	;# 
  2116     0215                     	;# 
  2117     0215                     	;# 
  2118     0216                     	;# 
  2119     0216                     	;# 
  2120     0217                     	;# 
  2121     0217                     	;# 
  2122     0219                     	;# 
  2123     021A                     	;# 
  2124     021B                     	;# 
  2125     021C                     	;# 
  2126     021D                     	;# 
  2127     021E                     	;# 
  2128     021F                     	;# 
  2129     0291                     	;# 
  2130     0291                     	;# 
  2131     0292                     	;# 
  2132     0293                     	;# 
  2133     0294                     	;# 
  2134     0295                     	;# 
  2135     0295                     	;# 
  2136     0296                     	;# 
  2137     0298                     	;# 
  2138     0298                     	;# 
  2139     0299                     	;# 
  2140     029A                     	;# 
  2141     029B                     	;# 
  2142     029C                     	;# 
  2143     029C                     	;# 
  2144     029D                     	;# 
  2145     029E                     	;# 
  2146     029E                     	;# 
  2147     0311                     	;# 
  2148     0311                     	;# 
  2149     0312                     	;# 
  2150     0313                     	;# 
  2151     0318                     	;# 
  2152     0318                     	;# 
  2153     0319                     	;# 
  2154     031A                     	;# 
  2155     0394                     	;# 
  2156     0395                     	;# 
  2157     0396                     	;# 
  2158     039A                     	;# 
  2159     039C                     	;# 
  2160     039D                     	;# 
  2161     039E                     	;# 
  2162     039F                     	;# 
  2163     0415                     	;# 
  2164     0416                     	;# 
  2165     0417                     	;# 
  2166     041C                     	;# 
  2167     041D                     	;# 
  2168     041E                     	;# 
  2169     0FE4                     	;# 
  2170     0FE5                     	;# 
  2171     0FE6                     	;# 
  2172     0FE7                     	;# 
  2173     0FE8                     	;# 
  2174     0FE9                     	;# 
  2175     0FEA                     	;# 
  2176     0FEB                     	;# 
  2177     0FED                     	;# 
  2178     0FEE                     	;# 
  2179     0FEF                     	;# 
  2180     0000                     	;# 
  2181     0001                     	;# 
  2182     0002                     	;# 
  2183     0003                     	;# 
  2184     0004                     	;# 
  2185     0005                     	;# 
  2186     0006                     	;# 
  2187     0007                     	;# 
  2188     0008                     	;# 
  2189     0009                     	;# 
  2190     000A                     	;# 
  2191     000B                     	;# 
  2192     000C                     	;# 
  2193     000D                     	;# 
  2194     0011                     	;# 
  2195     0012                     	;# 
  2196     0013                     	;# 
  2197     0014                     	;# 
  2198     0015                     	;# 
  2199     0016                     	;# 
  2200     0016                     	;# 
  2201     0017                     	;# 
  2202     0018                     	;# 
  2203     0019                     	;# 
  2204     001A                     	;# 
  2205     001B                     	;# 
  2206     001C                     	;# 
  2207     001E                     	;# 
  2208     001F                     	;# 
  2209     008C                     	;# 
  2210     008D                     	;# 
  2211     0091                     	;# 
  2212     0092                     	;# 
  2213     0093                     	;# 
  2214     0094                     	;# 
  2215     0095                     	;# 
  2216     0096                     	;# 
  2217     0097                     	;# 
  2218     0098                     	;# 
  2219     0099                     	;# 
  2220     009A                     	;# 
  2221     009B                     	;# 
  2222     009B                     	;# 
  2223     009C                     	;# 
  2224     009D                     	;# 
  2225     009E                     	;# 
  2226     010C                     	;# 
  2227     010D                     	;# 
  2228     0111                     	;# 
  2229     0112                     	;# 
  2230     0113                     	;# 
  2231     0114                     	;# 
  2232     0115                     	;# 
  2233     0116                     	;# 
  2234     0117                     	;# 
  2235     0118                     	;# 
  2236     0119                     	;# 
  2237     011A                     	;# 
  2238     011B                     	;# 
  2239     011D                     	;# 
  2240     011E                     	;# 
  2241     018C                     	;# 
  2242     018D                     	;# 
  2243     0191                     	;# 
  2244     0191                     	;# 
  2245     0192                     	;# 
  2246     0193                     	;# 
  2247     0193                     	;# 
  2248     0193                     	;# 
  2249     0194                     	;# 
  2250     0195                     	;# 
  2251     0196                     	;# 
  2252     0199                     	;# 
  2253     019A                     	;# 
  2254     019B                     	;# 
  2255     019B                     	;# 
  2256     019B                     	;# 
  2257     019B                     	;# 
  2258     019C                     	;# 
  2259     019C                     	;# 
  2260     019D                     	;# 
  2261     019E                     	;# 
  2262     019F                     	;# 
  2263     020C                     	;# 
  2264     020D                     	;# 
  2265     0211                     	;# 
  2266     0211                     	;# 
  2267     0212                     	;# 
  2268     0212                     	;# 
  2269     0213                     	;# 
  2270     0213                     	;# 
  2271     0214                     	;# 
  2272     0214                     	;# 
  2273     0215                     	;# 
  2274     0215                     	;# 
  2275     0215                     	;# 
  2276     0216                     	;# 
  2277     0216                     	;# 
  2278     0217                     	;# 
  2279     0217                     	;# 
  2280     0219                     	;# 
  2281     021A                     	;# 
  2282     021B                     	;# 
  2283     021C                     	;# 
  2284     021D                     	;# 
  2285     021E                     	;# 
  2286     021F                     	;# 
  2287     0291                     	;# 
  2288     0291                     	;# 
  2289     0292                     	;# 
  2290     0293                     	;# 
  2291     0294                     	;# 
  2292     0295                     	;# 
  2293     0295                     	;# 
  2294     0296                     	;# 
  2295     0298                     	;# 
  2296     0298                     	;# 
  2297     0299                     	;# 
  2298     029A                     	;# 
  2299     029B                     	;# 
  2300     029C                     	;# 
  2301     029C                     	;# 
  2302     029D                     	;# 
  2303     029E                     	;# 
  2304     029E                     	;# 
  2305     0311                     	;# 
  2306     0311                     	;# 
  2307     0312                     	;# 
  2308     0313                     	;# 
  2309     0318                     	;# 
  2310     0318                     	;# 
  2311     0319                     	;# 
  2312     031A                     	;# 
  2313     0394                     	;# 
  2314     0395                     	;# 
  2315     0396                     	;# 
  2316     039A                     	;# 
  2317     039C                     	;# 
  2318     039D                     	;# 
  2319     039E                     	;# 
  2320     039F                     	;# 
  2321     0415                     	;# 
  2322     0416                     	;# 
  2323     0417                     	;# 
  2324     041C                     	;# 
  2325     041D                     	;# 
  2326     041E                     	;# 
  2327     0FE4                     	;# 
  2328     0FE5                     	;# 
  2329     0FE6                     	;# 
  2330     0FE7                     	;# 
  2331     0FE8                     	;# 
  2332     0FE9                     	;# 
  2333     0FEA                     	;# 
  2334     0FEB                     	;# 
  2335     0FED                     	;# 
  2336     0FEE                     	;# 
  2337     0FEF                     	;# 
  2338     0000                     	;# 
  2339     0001                     	;# 
  2340     0002                     	;# 
  2341     0003                     	;# 
  2342     0004                     	;# 
  2343     0005                     	;# 
  2344     0006                     	;# 
  2345     0007                     	;# 
  2346     0008                     	;# 
  2347     0009                     	;# 
  2348     000A                     	;# 
  2349     000B                     	;# 
  2350     000C                     	;# 
  2351     000D                     	;# 
  2352     0011                     	;# 
  2353     0012                     	;# 
  2354     0013                     	;# 
  2355     0014                     	;# 
  2356     0015                     	;# 
  2357     0016                     	;# 
  2358     0016                     	;# 
  2359     0017                     	;# 
  2360     0018                     	;# 
  2361     0019                     	;# 
  2362     001A                     	;# 
  2363     001B                     	;# 
  2364     001C                     	;# 
  2365     001E                     	;# 
  2366     001F                     	;# 
  2367     008C                     	;# 
  2368     008D                     	;# 
  2369     0091                     	;# 
  2370     0092                     	;# 
  2371     0093                     	;# 
  2372     0094                     	;# 
  2373     0095                     	;# 
  2374     0096                     	;# 
  2375     0097                     	;# 
  2376     0098                     	;# 
  2377     0099                     	;# 
  2378     009A                     	;# 
  2379     009B                     	;# 
  2380     009B                     	;# 
  2381     009C                     	;# 
  2382     009D                     	;# 
  2383     009E                     	;# 
  2384     010C                     	;# 
  2385     010D                     	;# 
  2386     0111                     	;# 
  2387     0112                     	;# 
  2388     0113                     	;# 
  2389     0114                     	;# 
  2390     0115                     	;# 
  2391     0116                     	;# 
  2392     0117                     	;# 
  2393     0118                     	;# 
  2394     0119                     	;# 
  2395     011A                     	;# 
  2396     011B                     	;# 
  2397     011D                     	;# 
  2398     011E                     	;# 
  2399     018C                     	;# 
  2400     018D                     	;# 
  2401     0191                     	;# 
  2402     0191                     	;# 
  2403     0192                     	;# 
  2404     0193                     	;# 
  2405     0193                     	;# 
  2406     0193                     	;# 
  2407     0194                     	;# 
  2408     0195                     	;# 
  2409     0196                     	;# 
  2410     0199                     	;# 
  2411     019A                     	;# 
  2412     019B                     	;# 
  2413     019B                     	;# 
  2414     019B                     	;# 
  2415     019B                     	;# 
  2416     019C                     	;# 
  2417     019C                     	;# 
  2418     019D                     	;# 
  2419     019E                     	;# 
  2420     019F                     	;# 
  2421     020C                     	;# 
  2422     020D                     	;# 
  2423     0211                     	;# 
  2424     0211                     	;# 
  2425     0212                     	;# 
  2426     0212                     	;# 
  2427     0213                     	;# 
  2428     0213                     	;# 
  2429     0214                     	;# 
  2430     0214                     	;# 
  2431     0215                     	;# 
  2432     0215                     	;# 
  2433     0215                     	;# 
  2434     0216                     	;# 
  2435     0216                     	;# 
  2436     0217                     	;# 
  2437     0217                     	;# 
  2438     0219                     	;# 
  2439     021A                     	;# 
  2440     021B                     	;# 
  2441     021C                     	;# 
  2442     021D                     	;# 
  2443     021E                     	;# 
  2444     021F                     	;# 
  2445     0291                     	;# 
  2446     0291                     	;# 
  2447     0292                     	;# 
  2448     0293                     	;# 
  2449     0294                     	;# 
  2450     0295                     	;# 
  2451     0295                     	;# 
  2452     0296                     	;# 
  2453     0298                     	;# 
  2454     0298                     	;# 
  2455     0299                     	;# 
  2456     029A                     	;# 
  2457     029B                     	;# 
  2458     029C                     	;# 
  2459     029C                     	;# 
  2460     029D                     	;# 
  2461     029E                     	;# 
  2462     029E                     	;# 
  2463     0311                     	;# 
  2464     0311                     	;# 
  2465     0312                     	;# 
  2466     0313                     	;# 
  2467     0318                     	;# 
  2468     0318                     	;# 
  2469     0319                     	;# 
  2470     031A                     	;# 
  2471     0394                     	;# 
  2472     0395                     	;# 
  2473     0396                     	;# 
  2474     039A                     	;# 
  2475     039C                     	;# 
  2476     039D                     	;# 
  2477     039E                     	;# 
  2478     039F                     	;# 
  2479     0415                     	;# 
  2480     0416                     	;# 
  2481     0417                     	;# 
  2482     041C                     	;# 
  2483     041D                     	;# 
  2484     041E                     	;# 
  2485     0FE4                     	;# 
  2486     0FE5                     	;# 
  2487     0FE6                     	;# 
  2488     0FE7                     	;# 
  2489     0FE8                     	;# 
  2490     0FE9                     	;# 
  2491     0FEA                     	;# 
  2492     0FEB                     	;# 
  2493     0FED                     	;# 
  2494     0FEE                     	;# 
  2495     0FEF                     	;# 
  2496     0000                     	;# 
  2497     0001                     	;# 
  2498     0002                     	;# 
  2499     0003                     	;# 
  2500     0004                     	;# 
  2501     0005                     	;# 
  2502     0006                     	;# 
  2503     0007                     	;# 
  2504     0008                     	;# 
  2505     0009                     	;# 
  2506     000A                     	;# 
  2507     000B                     	;# 
  2508     000C                     	;# 
  2509     000D                     	;# 
  2510     0011                     	;# 
  2511     0012                     	;# 
  2512     0013                     	;# 
  2513     0014                     	;# 
  2514     0015                     	;# 
  2515     0016                     	;# 
  2516     0016                     	;# 
  2517     0017                     	;# 
  2518     0018                     	;# 
  2519     0019                     	;# 
  2520     001A                     	;# 
  2521     001B                     	;# 
  2522     001C                     	;# 
  2523     001E                     	;# 
  2524     001F                     	;# 
  2525     008C                     	;# 
  2526     008D                     	;# 
  2527     0091                     	;# 
  2528     0092                     	;# 
  2529     0093                     	;# 
  2530     0094                     	;# 
  2531     0095                     	;# 
  2532     0096                     	;# 
  2533     0097                     	;# 
  2534     0098                     	;# 
  2535     0099                     	;# 
  2536     009A                     	;# 
  2537     009B                     	;# 
  2538     009B                     	;# 
  2539     009C                     	;# 
  2540     009D                     	;# 
  2541     009E                     	;# 
  2542     010C                     	;# 
  2543     010D                     	;# 
  2544     0111                     	;# 
  2545     0112                     	;# 
  2546     0113                     	;# 
  2547     0114                     	;# 
  2548     0115                     	;# 
  2549     0116                     	;# 
  2550     0117                     	;# 
  2551     0118                     	;# 
  2552     0119                     	;# 
  2553     011A                     	;# 
  2554     011B                     	;# 
  2555     011D                     	;# 
  2556     011E                     	;# 
  2557     018C                     	;# 
  2558     018D                     	;# 
  2559     0191                     	;# 
  2560     0191                     	;# 
  2561     0192                     	;# 
  2562     0193                     	;# 
  2563     0193                     	;# 
  2564     0193                     	;# 
  2565     0194                     	;# 
  2566     0195                     	;# 
  2567     0196                     	;# 
  2568     0199                     	;# 
  2569     019A                     	;# 
  2570     019B                     	;# 
  2571     019B                     	;# 
  2572     019B                     	;# 
  2573     019B                     	;# 
  2574     019C                     	;# 
  2575     019C                     	;# 
  2576     019D                     	;# 
  2577     019E                     	;# 
  2578     019F                     	;# 
  2579     020C                     	;# 
  2580     020D                     	;# 
  2581     0211                     	;# 
  2582     0211                     	;# 
  2583     0212                     	;# 
  2584     0212                     	;# 
  2585     0213                     	;# 
  2586     0213                     	;# 
  2587     0214                     	;# 
  2588     0214                     	;# 
  2589     0215                     	;# 
  2590     0215                     	;# 
  2591     0215                     	;# 
  2592     0216                     	;# 
  2593     0216                     	;# 
  2594     0217                     	;# 
  2595     0217                     	;# 
  2596     0219                     	;# 
  2597     021A                     	;# 
  2598     021B                     	;# 
  2599     021C                     	;# 
  2600     021D                     	;# 
  2601     021E                     	;# 
  2602     021F                     	;# 
  2603     0291                     	;# 
  2604     0291                     	;# 
  2605     0292                     	;# 
  2606     0293                     	;# 
  2607     0294                     	;# 
  2608     0295                     	;# 
  2609     0295                     	;# 
  2610     0296                     	;# 
  2611     0298                     	;# 
  2612     0298                     	;# 
  2613     0299                     	;# 
  2614     029A                     	;# 
  2615     029B                     	;# 
  2616     029C                     	;# 
  2617     029C                     	;# 
  2618     029D                     	;# 
  2619     029E                     	;# 
  2620     029E                     	;# 
  2621     0311                     	;# 
  2622     0311                     	;# 
  2623     0312                     	;# 
  2624     0313                     	;# 
  2625     0318                     	;# 
  2626     0318                     	;# 
  2627     0319                     	;# 
  2628     031A                     	;# 
  2629     0394                     	;# 
  2630     0395                     	;# 
  2631     0396                     	;# 
  2632     039A                     	;# 
  2633     039C                     	;# 
  2634     039D                     	;# 
  2635     039E                     	;# 
  2636     039F                     	;# 
  2637     0415                     	;# 
  2638     0416                     	;# 
  2639     0417                     	;# 
  2640     041C                     	;# 
  2641     041D                     	;# 
  2642     041E                     	;# 
  2643     0FE4                     	;# 
  2644     0FE5                     	;# 
  2645     0FE6                     	;# 
  2646     0FE7                     	;# 
  2647     0FE8                     	;# 
  2648     0FE9                     	;# 
  2649     0FEA                     	;# 
  2650     0FEB                     	;# 
  2651     0FED                     	;# 
  2652     0FEE                     	;# 
  2653     0FEF                     	;# 
  2654                           
  2655                           	psect	idataBANK1
  2656     0D24                     __pidataBANK1:
  2657                           
  2658                           ;initializer for _kdp
  2659     0D24  3401               	retlw	1
  2660     0D25  3400               	retlw	0
  2661                           
  2662                           ;initializer for _kip
  2663     0D26  3413               	retlw	19
  2664     0D27  3400               	retlw	0
  2665                           
  2666                           ;initializer for _kpp
  2667     0D28  340C               	retlw	12
  2668     0D29  3400               	retlw	0
  2669                           
  2670                           ;initializer for _kif
  2671     0D2A  3469               	retlw	105
  2672     0D2B  3400               	retlw	0
  2673                           
  2674                           ;initializer for _kpf
  2675     0D2C  342D               	retlw	45
  2676     0D2D  3400               	retlw	0
  2677                           
  2678                           ;initializer for _controlchoice
  2679     0D2E  3401               	retlw	1
  2680                           
  2681                           	psect	nvBANK1
  2682     00D9                     __pnvBANK1:
  2683     00D9                     _TMR1_GateInterruptHandler:
  2684     00D9                     	ds	2
  2685     00DB                     _TMR0_InterruptHandler:
  2686     00DB                     	ds	2
  2687     00DD                     _EUSART_FramingErrorHandler:
  2688     00DD                     	ds	2
  2689     00DF                     _EUSART_TxDefaultInterruptHandler:
  2690     00DF                     	ds	2
  2691     00E1                     _EUSART_RxDefaultInterruptHandler:
  2692     00E1                     	ds	2
  2693     00E3                     _TMR2_InterruptHandler:
  2694     00E3                     	ds	2
  2695                           
  2696                           	psect	nvBANK2
  2697     0138                     __pnvBANK2:
  2698     0138                     _adc_temp:
  2699     0138                     	ds	2
  2700     013A                     _EUSART_ErrorHandler:
  2701     013A                     	ds	2
  2702     013C                     _EUSART_OverrunErrorHandler:
  2703     013C                     	ds	2
  2704     0019                     _T1GCONbits	set	25
  2705     0018                     _T1CONbits	set	24
  2706     0018                     _T1CON	set	24
  2707     0016                     _TMR1L	set	22
  2708     0017                     _TMR1H	set	23
  2709     0019                     _T1GCON	set	25
  2710     0015                     _TMR0	set	21
  2711     0013                     _PIR3bits	set	19
  2712     001C                     _T2CONbits	set	28
  2713     001C                     _T2CON	set	28
  2714     0011                     _PIR1bits	set	17
  2715     001A                     _TMR2	set	26
  2716     001B                     _PR2	set	27
  2717     000B                     _INTCONbits	set	11
  2718     009D                     _ADCON0bits	set	157
  2719     009D                     _ADCON0	set	157
  2720     009C                     _ADRESH	set	156
  2721     009B                     _ADRESL	set	155
  2722     009E                     _ADCON1	set	158
  2723     0095                     _OPTION_REG	set	149
  2724     0091                     _PIE1bits	set	145
  2725     0095                     _OPTION_REGbits	set	149
  2726     008D                     _TRISB	set	141
  2727     008C                     _TRISA	set	140
  2728     0097                     _WDTCON	set	151
  2729     0098                     _OSCTUNE	set	152
  2730     0099                     _OSCCON	set	153
  2731     010C                     _LATAbits	set	268
  2732     0115                     _CMOUTbits	set	277
  2733     0112                     _CM1CON1	set	274
  2734     0111                     _CM1CON0	set	273
  2735     0119                     _DACCON1	set	281
  2736     0118                     _DACCON0	set	280
  2737     0117                     _FVRCONbits	set	279
  2738     0117                     _FVRCON	set	279
  2739     011E                     _APFCON1	set	286
  2740     011D                     _APFCON0	set	285
  2741     010D                     _LATB	set	269
  2742     010C                     _LATA	set	268
  2743     0116                     _BORCON	set	278
  2744     0199                     _RCREG	set	409
  2745     019D                     _RCSTAbits	set	413
  2746     019A                     _TXREG	set	410
  2747     019E                     _TXSTAbits	set	414
  2748     019C                     _SPBRGH	set	412
  2749     019B                     _SPBRGL	set	411
  2750     019E                     _TXSTA	set	414
  2751     019D                     _RCSTA	set	413
  2752     019F                     _BAUDCON	set	415
  2753     018C                     _ANSELA	set	396
  2754     018D                     _ANSELB	set	397
  2755     020C                     _WPUA	set	524
  2756     020D                     _WPUB	set	525
  2757     029E                     _CCPTMRS0bits	set	670
  2758     0291                     _CCPR1L	set	657
  2759     0292                     _CCPR1H	set	658
  2760     0296                     _PSTR1CON	set	662
  2761     0294                     _PWM1CON	set	660
  2762     0295                     _ECCP1AS	set	661
  2763     0293                     _CCP1CON	set	659
  2764     041E                     _T6CONbits	set	1054
  2765     041E                     _T6CON	set	1054
  2766     041C                     _TMR6	set	1052
  2767     041D                     _PR6	set	1053
  2768     0417                     _T4CONbits	set	1047
  2769     0417                     _T4CON	set	1047
  2770     0415                     _TMR4	set	1045
  2771     0416                     _PR4	set	1046
  2772                           
  2773                           	psect	cinit
  2774     0064                     start_initialization:	
  2775                           ; #config settings
  2776                           
  2777     0064                     __initialization:
  2778                           
  2779                           ; Initialize objects allocated to BANK1
  2780     0064  3024               	movlw	low __pidataBANK1
  2781     0065  0084               	movwf	4
  2782     0066  308D               	movlw	(high __pidataBANK1)| (0+128)
  2783     0067  0085               	movwf	5
  2784     0068  30E5               	movlw	low __pdataBANK1
  2785     0069  0086               	movwf	6
  2786     006A  3000               	movlw	high __pdataBANK1
  2787     006B  0087               	movwf	7
  2788     006C  300B               	movlw	11
  2789     006D  318C  24F1  3180   	fcall	init_ram
  2790                           
  2791                           ; Clear objects allocated to BANK0
  2792     0070  3054               	movlw	low __pbssBANK0
  2793     0071  0084               	movwf	4
  2794     0072  3000               	movlw	high __pbssBANK0
  2795     0073  0085               	movwf	5
  2796     0074  301C               	movlw	28
  2797     0075  318C  24EB  3180   	fcall	clear_ram0
  2798                           
  2799                           ; Clear objects allocated to BANK1
  2800     0078  30A0               	movlw	low __pbssBANK1
  2801     0079  0084               	movwf	4
  2802     007A  3000               	movlw	high __pbssBANK1
  2803     007B  0085               	movwf	5
  2804     007C  3026               	movlw	38
  2805     007D  318C  24EB  3180   	fcall	clear_ram0
  2806                           
  2807                           ; Clear objects allocated to BANK2
  2808     0080  3020               	movlw	low __pbssBANK2
  2809     0081  0084               	movwf	4
  2810     0082  3001               	movlw	high __pbssBANK2
  2811     0083  0085               	movwf	5
  2812     0084  3018               	movlw	24
  2813     0085  318C  24EB  3180   	fcall	clear_ram0
  2814     0088                     end_of_initialization:	
  2815                           ;End of C runtime variable initialization code
  2816                           
  2817     0088                     __end_of__initialization:
  2818     0088  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2819     0089  0020               	movlb	0
  2820     008A  3186  2E8A         	ljmp	_main	;jump to C main() function
  2821                           
  2822                           	psect	bssBANK0
  2823     0054                     __pbssBANK0:
  2824     0054                     _bufferRx:
  2825     0054                     	ds	8
  2826     005C                     _position:
  2827     005C                     	ds	2
  2828     005E                     _height:
  2829     005E                     	ds	2
  2830     0060                     _dc:
  2831     0060                     	ds	2
  2832     0062                     _sp_height:
  2833     0062                     	ds	2
  2834     0064                     _vRx:
  2835     0064                     	ds	2
  2836     0066                     _vTx:
  2837     0066                     	ds	2
  2838     0068                     _flux:
  2839     0068                     	ds	2
  2840     006A                     _pas:
  2841     006A                     	ds	1
  2842     006B                     _count_Tx:
  2843     006B                     	ds	1
  2844     006C                     _count_40ms:
  2845     006C                     	ds	1
  2846     006D                     _countRx:
  2847     006D                     	ds	1
  2848     006E                     _func_mode:
  2849     006E                     	ds	1
  2850     006F                     _Rx_ctrl:
  2851     006F                     	ds	1
  2852                           
  2853                           	psect	bssBANK1
  2854     00A0                     __pbssBANK1:
  2855     00A0                     _float_temp:
  2856     00A0                     	ds	4
  2857     00A4                     _tempo_voo:
  2858     00A4                     	ds	4
  2859     00A8                     _sp_position:
  2860     00A8                     	ds	2
  2861     00AA                     _output:
  2862     00AA                     	ds	2
  2863     00AC                     _outputsum:
  2864     00AC                     	ds	2
  2865     00AE                     _dinput:
  2866     00AE                     	ds	2
  2867     00B0                     _ballset:
  2868     00B0                     	ds	2
  2869     00B2                     _balldist:
  2870     00B2                     	ds	2
  2871     00B4                     _error:
  2872     00B4                     	ds	2
  2873     00B6                     _timer1ReloadVal:
  2874     00B6                     	ds	2
  2875     00B8                     _ADC_InterruptHandler:
  2876     00B8                     	ds	2
  2877     00BA                     _fim_curso:
  2878     00BA                     	ds	1
  2879     00BB                     _passo:
  2880     00BB                     	ds	1
  2881     00BC                     _sentido:
  2882     00BC                     	ds	1
  2883     00BD                     _timecontrol:
  2884     00BD                     	ds	1
  2885     00BE                     _timer0ReloadVal:
  2886     00BE                     	ds	1
  2887     00BF                     _eusartRxLastError:
  2888     00BF                     	ds	1
  2889     00C0                     _eusartRxCount:
  2890     00C0                     	ds	1
  2891     00C1                     _eusartRxTail:
  2892     00C1                     	ds	1
  2893     00C2                     _eusartRxHead:
  2894     00C2                     	ds	1
  2895     00C3                     _eusartTxBufferRemaining:
  2896     00C3                     	ds	1
  2897     00C4                     _eusartTxTail:
  2898     00C4                     	ds	1
  2899     00C5                     _eusartTxHead:
  2900     00C5                     	ds	1
  2901                           
  2902                           	psect	dataBANK1
  2903     00E5                     __pdataBANK1:
  2904     00E5                     _kdp:
  2905     00E5                     	ds	2
  2906     00E7                     _kip:
  2907     00E7                     	ds	2
  2908     00E9                     _kpp:
  2909     00E9                     	ds	2
  2910     00EB                     _kif:
  2911     00EB                     	ds	2
  2912     00ED                     _kpf:
  2913     00ED                     	ds	2
  2914     00EF                     _controlchoice:
  2915     00EF                     	ds	1
  2916                           
  2917                           	psect	bssBANK2
  2918     0120                     __pbssBANK2:
  2919     0120                     _eusartRxStatusBuffer:
  2920     0120                     	ds	8
  2921     0128                     _eusartRxBuffer:
  2922     0128                     	ds	8
  2923     0130                     _eusartTxBuffer:
  2924     0130                     	ds	8
  2925                           
  2926                           	psect	inittext
  2927     0CF1                     init_ram:
  2928     0CF1  00FE               	movwf	btemp
  2929     0CF2                     initloop:
  2930     0CF2  0012               	moviw fsr0++
  2931     0CF3  001E               	movwi fsr1++
  2932     0CF4  0BFE               	decfsz	btemp,f
  2933     0CF5  2CF2               	goto	initloop
  2934     0CF6  3400               	retlw	0
  2935                           
  2936                           	psect	clrtext
  2937     0CEB                     clear_ram0:	
  2938                           ;	Called with FSR0 containing the base address, and
  2939                           ;	WREG with the size to clear
  2940                           
  2941     0CEB  0064               	clrwdt	;clear the watchdog before getting into this loop
  2942     0CEC                     clrloop0:
  2943     0CEC  0180               	clrf	0	;clear RAM location pointed to by FSR
  2944     0CED  3101               	addfsr 0,1
  2945     0CEE  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2946     0CEF  2CEC               	goto	clrloop0	;have we reached the end yet?
  2947     0CF0  3400               	retlw	0	;all done for this memory range, return
  2948                           
  2949                           	psect	cstackBANK1
  2950     00C6                     __pcstackBANK1:
  2951     00C6                     ??_PIN_MANAGER_Initialize:
  2952     00C6                     ??_OSCILLATOR_Initialize:	
  2953                           ; 1 bytes @ 0x0
  2954                           
  2955     00C6                     ??_WDT_Initialize:	
  2956                           ; 1 bytes @ 0x0
  2957                           
  2958     00C6                     ??_FVR_Initialize:	
  2959                           ; 1 bytes @ 0x0
  2960                           
  2961     00C6                     ??_DAC_Initialize:	
  2962                           ; 1 bytes @ 0x0
  2963                           
  2964     00C6                     ??_TMR4_Initialize:	
  2965                           ; 1 bytes @ 0x0
  2966                           
  2967     00C6                     ??_TMR6_Initialize:	
  2968                           ; 1 bytes @ 0x0
  2969                           
  2970     00C6                     ??_CMP1_Initialize:	
  2971                           ; 1 bytes @ 0x0
  2972                           
  2973     00C6                     ??_ADC_Initialize:	
  2974                           ; 1 bytes @ 0x0
  2975                           
  2976     00C6                     ??_EPWM1_Initialize:	
  2977                           ; 1 bytes @ 0x0
  2978                           
  2979     00C6                     ?_TMR2_SetInterruptHandler:	
  2980                           ; 1 bytes @ 0x0
  2981                           
  2982     00C6                     ?_EUSART_SetRxInterruptHandler:	
  2983                           ; 1 bytes @ 0x0
  2984                           
  2985     00C6                     ?_EUSART_SetTxInterruptHandler:	
  2986                           ; 1 bytes @ 0x0
  2987                           
  2988     00C6                     ?_EUSART_SetFramingErrorHandler:	
  2989                           ; 1 bytes @ 0x0
  2990                           
  2991     00C6                     ?_EUSART_SetOverrunErrorHandler:	
  2992                           ; 1 bytes @ 0x0
  2993                           
  2994     00C6                     ?_EUSART_SetErrorHandler:	
  2995                           ; 1 bytes @ 0x0
  2996                           
  2997     00C6                     ?_TMR0_SetInterruptHandler:	
  2998                           ; 1 bytes @ 0x0
  2999                           
  3000     00C6                     ?_TMR1_SetGateInterruptHandler:	
  3001                           ; 1 bytes @ 0x0
  3002                           
  3003     00C6                     ??_fluxpos:	
  3004                           ; 1 bytes @ 0x0
  3005                           
  3006     00C6                     ??_TMR4_StartTimer:	
  3007                           ; 1 bytes @ 0x0
  3008                           
  3009     00C6                     ??_TMR4_StopTimer:	
  3010                           ; 1 bytes @ 0x0
  3011                           
  3012     00C6                     ??_TMR4_ReadTimer:	
  3013                           ; 1 bytes @ 0x0
  3014                           
  3015     00C6                     ??_TMR4_LoadPeriodRegister:	
  3016                           ; 1 bytes @ 0x0
  3017                           
  3018     00C6                     ?_EPWM1_LoadDutyValue:	
  3019                           ; 1 bytes @ 0x0
  3020                           
  3021     00C6                     ??_CMP1_GetOutputStatus:	
  3022                           ; 1 bytes @ 0x0
  3023                           
  3024     00C6                     ??_TMR6_StartTimer:	
  3025                           ; 1 bytes @ 0x0
  3026                           
  3027     00C6                     ??_TMR6_StopTimer:	
  3028                           ; 1 bytes @ 0x0
  3029                           
  3030     00C6                     ??_TMR6_ReadTimer:	
  3031                           ; 1 bytes @ 0x0
  3032                           
  3033     00C6                     ??_TMR6_LoadPeriodRegister:	
  3034                           ; 1 bytes @ 0x0
  3035                           
  3036     00C6                     ?_definePassoMotor:	
  3037                           ; 1 bytes @ 0x0
  3038                           
  3039     00C6                     ?_ADC_GetConversion:	
  3040                           ; 1 bytes @ 0x0
  3041                           
  3042     00C6                     ?___wmul:	
  3043                           ; 2 bytes @ 0x0
  3044                           
  3045     00C6                     TMR4_ReadTimer@readVal:	
  3046                           ; 2 bytes @ 0x0
  3047                           
  3048     00C6                     TMR4_LoadPeriodRegister@periodVal:	
  3049                           ; 1 bytes @ 0x0
  3050                           
  3051     00C6                     TMR6_ReadTimer@readVal:	
  3052                           ; 1 bytes @ 0x0
  3053                           
  3054     00C6                     TMR6_LoadPeriodRegister@periodVal:	
  3055                           ; 1 bytes @ 0x0
  3056                           
  3057     00C6                     definePassoMotor@sentido:	
  3058                           ; 1 bytes @ 0x0
  3059                           
  3060     00C6                     TMR2_SetInterruptHandler@InterruptHandler:	
  3061                           ; 1 bytes @ 0x0
  3062                           
  3063     00C6                     EPWM1_LoadDutyValue@dutyValue:	
  3064                           ; 2 bytes @ 0x0
  3065                           
  3066     00C6                     EUSART_SetFramingErrorHandler@interruptHandler:	
  3067                           ; 2 bytes @ 0x0
  3068                           
  3069     00C6                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  3070                           ; 2 bytes @ 0x0
  3071                           
  3072     00C6                     EUSART_SetErrorHandler@interruptHandler:	
  3073                           ; 2 bytes @ 0x0
  3074                           
  3075     00C6                     EUSART_SetTxInterruptHandler@interruptHandler:	
  3076                           ; 2 bytes @ 0x0
  3077                           
  3078     00C6                     EUSART_SetRxInterruptHandler@interruptHandler:	
  3079                           ; 2 bytes @ 0x0
  3080                           
  3081     00C6                     TMR0_SetInterruptHandler@InterruptHandler:	
  3082                           ; 2 bytes @ 0x0
  3083                           
  3084     00C6                     TMR1_SetGateInterruptHandler@InterruptHandler:	
  3085                           ; 2 bytes @ 0x0
  3086                           
  3087     00C6                     ___wmul@multiplier:	
  3088                           ; 2 bytes @ 0x0
  3089                           
  3090                           
  3091                           ; 2 bytes @ 0x0
  3092     00C6                     	ds	1
  3093     00C7                     ??_definePassoMotor:
  3094     00C7                     definePassoMotor@passo:	
  3095                           ; 1 bytes @ 0x1
  3096                           
  3097                           
  3098                           ; 1 bytes @ 0x1
  3099     00C7                     	ds	1
  3100     00C8                     ??_TMR2_Initialize:
  3101     00C8                     ??_TMR0_Initialize:	
  3102                           ; 1 bytes @ 0x2
  3103                           
  3104     00C8                     ??_TMR1_Initialize:	
  3105                           ; 1 bytes @ 0x2
  3106                           
  3107     00C8                     ??_EUSART_Initialize:	
  3108                           ; 1 bytes @ 0x2
  3109                           
  3110     00C8                     ??_TMR2_SetInterruptHandler:	
  3111                           ; 1 bytes @ 0x2
  3112                           
  3113     00C8                     ??_EUSART_SetRxInterruptHandler:	
  3114                           ; 1 bytes @ 0x2
  3115                           
  3116     00C8                     ??_EUSART_SetTxInterruptHandler:	
  3117                           ; 1 bytes @ 0x2
  3118                           
  3119     00C8                     ??_EUSART_SetFramingErrorHandler:	
  3120                           ; 1 bytes @ 0x2
  3121                           
  3122     00C8                     ??_EUSART_SetOverrunErrorHandler:	
  3123                           ; 1 bytes @ 0x2
  3124                           
  3125     00C8                     ??_EUSART_SetErrorHandler:	
  3126                           ; 1 bytes @ 0x2
  3127                           
  3128     00C8                     ??_TMR0_SetInterruptHandler:	
  3129                           ; 1 bytes @ 0x2
  3130                           
  3131     00C8                     ??_TMR1_SetGateInterruptHandler:	
  3132                           ; 1 bytes @ 0x2
  3133                           
  3134     00C8                     ??_SYSTEM_Initialize:	
  3135                           ; 1 bytes @ 0x2
  3136                           
  3137     00C8                     ??_EPWM1_LoadDutyValue:	
  3138                           ; 1 bytes @ 0x2
  3139                           
  3140     00C8                     ??_ADC_GetConversion:	
  3141                           ; 1 bytes @ 0x2
  3142                           
  3143     00C8                     ??_daUmPasso:	
  3144                           ; 1 bytes @ 0x2
  3145                           
  3146     00C8                     ___wmul@multiplicand:	
  3147                           ; 1 bytes @ 0x2
  3148                           
  3149                           
  3150                           ; 2 bytes @ 0x2
  3151     00C8                     	ds	1
  3152     00C9                     ADC_GetConversion@channel:
  3153     00C9                     daUmPasso@sentido:	
  3154                           ; 1 bytes @ 0x3
  3155                           
  3156                           
  3157                           ; 1 bytes @ 0x3
  3158     00C9                     	ds	1
  3159     00CA                     ??___wmul:
  3160     00CA                     ___wmul@product:	
  3161                           ; 1 bytes @ 0x4
  3162                           
  3163                           
  3164                           ; 2 bytes @ 0x4
  3165     00CA                     	ds	2
  3166     00CC                     ?___lwdiv:
  3167     00CC                     ___lwdiv@divisor:	
  3168                           ; 2 bytes @ 0x6
  3169                           
  3170                           
  3171                           ; 2 bytes @ 0x6
  3172     00CC                     	ds	2
  3173     00CE                     ___lwdiv@dividend:
  3174                           
  3175                           ; 2 bytes @ 0x8
  3176     00CE                     	ds	2
  3177     00D0                     ??___lwdiv:
  3178                           
  3179                           ; 1 bytes @ 0xA
  3180     00D0                     	ds	1
  3181     00D1                     ___lwdiv@quotient:
  3182                           
  3183                           ; 2 bytes @ 0xB
  3184     00D1                     	ds	2
  3185     00D3                     ___lwdiv@counter:
  3186                           
  3187                           ; 1 bytes @ 0xD
  3188     00D3                     	ds	1
  3189     00D4                     ??_fluxcontrol:
  3190     00D4                     ??_pwmcontrol:	
  3191                           ; 1 bytes @ 0xE
  3192                           
  3193                           
  3194                           ; 1 bytes @ 0xE
  3195     00D4                     	ds	2
  3196     00D6                     _fluxcontrol$2026:
  3197     00D6                     _pwmcontrol$2027:	
  3198                           ; 2 bytes @ 0x10
  3199                           
  3200                           
  3201                           ; 2 bytes @ 0x10
  3202     00D6                     	ds	2
  3203     00D8                     ??_controlchoose:
  3204     00D8                     ??_main:	
  3205                           ; 1 bytes @ 0x12
  3206                           
  3207                           
  3208                           ; 1 bytes @ 0x12
  3209     00D8                     	ds	1
  3210                           
  3211                           	psect	cstackCOMMON
  3212     0070                     __pcstackCOMMON:
  3213     0070                     ?_PIN_MANAGER_Initialize:
  3214     0070                     ?_OSCILLATOR_Initialize:	
  3215                           ; 1 bytes @ 0x0
  3216                           
  3217     0070                     ?_WDT_Initialize:	
  3218                           ; 1 bytes @ 0x0
  3219                           
  3220     0070                     ?_FVR_Initialize:	
  3221                           ; 1 bytes @ 0x0
  3222                           
  3223     0070                     ?_DAC_Initialize:	
  3224                           ; 1 bytes @ 0x0
  3225                           
  3226     0070                     ?_TMR4_Initialize:	
  3227                           ; 1 bytes @ 0x0
  3228                           
  3229     0070                     ?_TMR2_Initialize:	
  3230                           ; 1 bytes @ 0x0
  3231                           
  3232     0070                     ?_TMR0_Initialize:	
  3233                           ; 1 bytes @ 0x0
  3234                           
  3235     0070                     ?_TMR6_Initialize:	
  3236                           ; 1 bytes @ 0x0
  3237                           
  3238     0070                     ?_CMP1_Initialize:	
  3239                           ; 1 bytes @ 0x0
  3240                           
  3241     0070                     ?_ADC_Initialize:	
  3242                           ; 1 bytes @ 0x0
  3243                           
  3244     0070                     ?_EPWM1_Initialize:	
  3245                           ; 1 bytes @ 0x0
  3246                           
  3247     0070                     ?_TMR1_Initialize:	
  3248                           ; 1 bytes @ 0x0
  3249                           
  3250     0070                     ?_EUSART_Initialize:	
  3251                           ; 1 bytes @ 0x0
  3252                           
  3253     0070                     ?_TMR2_DefaultInterruptHandler:	
  3254                           ; 1 bytes @ 0x0
  3255                           
  3256     0070                     ??_TMR2_DefaultInterruptHandler:	
  3257                           ; 1 bytes @ 0x0
  3258                           
  3259     0070                     ?_TMR0_ISR:	
  3260                           ; 1 bytes @ 0x0
  3261                           
  3262     0070                     ?_TMR1_GATE_ISR:	
  3263                           ; 1 bytes @ 0x0
  3264                           
  3265     0070                     ?_EUSART_Receive_ISR:	
  3266                           ; 1 bytes @ 0x0
  3267                           
  3268     0070                     ?_EUSART_Transmit_ISR:	
  3269                           ; 1 bytes @ 0x0
  3270                           
  3271     0070                     ??_EUSART_Transmit_ISR:	
  3272                           ; 1 bytes @ 0x0
  3273                           
  3274     0070                     ?_EUSART_DefaultFramingErrorHandler:	
  3275                           ; 1 bytes @ 0x0
  3276                           
  3277     0070                     ??_EUSART_DefaultFramingErrorHandler:	
  3278                           ; 1 bytes @ 0x0
  3279                           
  3280     0070                     ?_EUSART_DefaultOverrunErrorHandler:	
  3281                           ; 1 bytes @ 0x0
  3282                           
  3283     0070                     ??_EUSART_DefaultOverrunErrorHandler:	
  3284                           ; 1 bytes @ 0x0
  3285                           
  3286     0070                     ?_EUSART_DefaultErrorHandler:	
  3287                           ; 1 bytes @ 0x0
  3288                           
  3289     0070                     ?_EUSART_RxDataHandler:	
  3290                           ; 1 bytes @ 0x0
  3291                           
  3292     0070                     ??_EUSART_RxDataHandler:	
  3293                           ; 1 bytes @ 0x0
  3294                           
  3295     0070                     ?_TMR0_DefaultInterruptHandler:	
  3296                           ; 1 bytes @ 0x0
  3297                           
  3298     0070                     ??_TMR0_DefaultInterruptHandler:	
  3299                           ; 1 bytes @ 0x0
  3300                           
  3301     0070                     ?_TMR1_DefaultGateInterruptHandler:	
  3302                           ; 1 bytes @ 0x0
  3303                           
  3304     0070                     ??_TMR1_DefaultGateInterruptHandler:	
  3305                           ; 1 bytes @ 0x0
  3306                           
  3307     0070                     ?_fluxpos:	
  3308                           ; 1 bytes @ 0x0
  3309                           
  3310     0070                     ?_SYSTEM_Initialize:	
  3311                           ; 1 bytes @ 0x0
  3312                           
  3313     0070                     ?_PIN_MANAGER_IOC:	
  3314                           ; 1 bytes @ 0x0
  3315                           
  3316     0070                     ??_PIN_MANAGER_IOC:	
  3317                           ; 1 bytes @ 0x0
  3318                           
  3319     0070                     ?_TMR2_ISR:	
  3320                           ; 1 bytes @ 0x0
  3321                           
  3322     0070                     ?_TMR4_StartTimer:	
  3323                           ; 1 bytes @ 0x0
  3324                           
  3325     0070                     ?_TMR4_StopTimer:	
  3326                           ; 1 bytes @ 0x0
  3327                           
  3328     0070                     ?_TMR4_ReadTimer:	
  3329                           ; 1 bytes @ 0x0
  3330                           
  3331     0070                     ?_TMR4_LoadPeriodRegister:	
  3332                           ; 1 bytes @ 0x0
  3333                           
  3334     0070                     ?_INTERRUPT_InterruptManager:	
  3335                           ; 1 bytes @ 0x0
  3336                           
  3337     0070                     ?_EUSART_Read:	
  3338                           ; 1 bytes @ 0x0
  3339                           
  3340     0070                     ??_EUSART_Read:	
  3341                           ; 1 bytes @ 0x0
  3342                           
  3343     0070                     ?_EUSART_Write:	
  3344                           ; 1 bytes @ 0x0
  3345                           
  3346     0070                     ??_EUSART_Write:	
  3347                           ; 1 bytes @ 0x0
  3348                           
  3349     0070                     ?_TMR0_Reload:	
  3350                           ; 1 bytes @ 0x0
  3351                           
  3352     0070                     ??_TMR0_Reload:	
  3353                           ; 1 bytes @ 0x0
  3354                           
  3355     0070                     ?_CMP1_GetOutputStatus:	
  3356                           ; 1 bytes @ 0x0
  3357                           
  3358     0070                     ?_TMR6_StartTimer:	
  3359                           ; 1 bytes @ 0x0
  3360                           
  3361     0070                     ?_TMR6_StopTimer:	
  3362                           ; 1 bytes @ 0x0
  3363                           
  3364     0070                     ?_TMR6_ReadTimer:	
  3365                           ; 1 bytes @ 0x0
  3366                           
  3367     0070                     ?_TMR6_LoadPeriodRegister:	
  3368                           ; 1 bytes @ 0x0
  3369                           
  3370     0070                     ?_fluxcontrol:	
  3371                           ; 1 bytes @ 0x0
  3372                           
  3373     0070                     ?_pwmcontrol:	
  3374                           ; 1 bytes @ 0x0
  3375                           
  3376     0070                     ?_controlchoose:	
  3377                           ; 1 bytes @ 0x0
  3378                           
  3379     0070                     ?_analisa_Rx:	
  3380                           ; 1 bytes @ 0x0
  3381                           
  3382     0070                     ?_envia_Tx:	
  3383                           ; 1 bytes @ 0x0
  3384                           
  3385     0070                     ?_end_Rx:	
  3386                           ; 1 bytes @ 0x0
  3387                           
  3388     0070                     ?_receive:	
  3389                           ; 1 bytes @ 0x0
  3390                           
  3391     0070                     ?_trigger_Rx:	
  3392                           ; 1 bytes @ 0x0
  3393                           
  3394     0070                     ?_daUmPasso:	
  3395                           ; 1 bytes @ 0x0
  3396                           
  3397     0070                     ?_mede_height:	
  3398                           ; 1 bytes @ 0x0
  3399                           
  3400     0070                     ?_main:	
  3401                           ; 1 bytes @ 0x0
  3402                           
  3403     0070                     ?i1_EPWM1_LoadDutyValue:	
  3404                           ; 1 bytes @ 0x0
  3405                           
  3406     0070                     ?__Umul8_16:	
  3407                           ; 1 bytes @ 0x0
  3408                           
  3409     0070                     ?_TMR1_ReadTimer:	
  3410                           ; 2 bytes @ 0x0
  3411                           
  3412     0070                     __Umul8_16@multiplicand:	
  3413                           ; 2 bytes @ 0x0
  3414                           
  3415     0070                     i1EPWM1_LoadDutyValue@dutyValue:	
  3416                           ; 1 bytes @ 0x0
  3417                           
  3418                           
  3419                           ; 2 bytes @ 0x0
  3420     0070                     	ds	1
  3421     0071                     ??_EUSART_Receive_ISR:
  3422     0071                     ??_EUSART_DefaultErrorHandler:	
  3423                           ; 1 bytes @ 0x1
  3424                           
  3425     0071                     EUSART_Read@readValue:	
  3426                           ; 1 bytes @ 0x1
  3427                           
  3428     0071                     EUSART_Write@txData:	
  3429                           ; 1 bytes @ 0x1
  3430                           
  3431                           
  3432                           ; 1 bytes @ 0x1
  3433     0071                     	ds	1
  3434     0072                     ??__Umul8_16:
  3435     0072                     ??_TMR1_ReadTimer:	
  3436                           ; 1 bytes @ 0x2
  3437                           
  3438     0072                     ??_receive:	
  3439                           ; 1 bytes @ 0x2
  3440                           
  3441     0072                     ??i1_EPWM1_LoadDutyValue:	
  3442                           ; 1 bytes @ 0x2
  3443                           
  3444                           
  3445                           ; 1 bytes @ 0x2
  3446     0072                     	ds	2
  3447     0074                     ??_analisa_Rx:
  3448     0074                     __Umul8_16@product:	
  3449                           ; 1 bytes @ 0x4
  3450                           
  3451                           
  3452                           ; 2 bytes @ 0x4
  3453     0074                     	ds	2
  3454     0076                     ??_end_Rx:
  3455     0076                     __Umul8_16@word_mpld:	
  3456                           ; 1 bytes @ 0x6
  3457                           
  3458                           
  3459                           ; 2 bytes @ 0x6
  3460     0076                     	ds	1
  3461     0077                     ??_TMR0_ISR:
  3462     0077                     TMR1_ReadTimer@readVal:	
  3463                           ; 1 bytes @ 0x7
  3464                           
  3465                           
  3466                           ; 2 bytes @ 0x7
  3467     0077                     	ds	1
  3468     0078                     __Umul8_16@multiplier:
  3469                           
  3470                           ; 1 bytes @ 0x8
  3471     0078                     	ds	1
  3472     0079                     TMR1_ReadTimer@readValHigh:
  3473                           
  3474                           ; 1 bytes @ 0x9
  3475     0079                     	ds	1
  3476     007A                     TMR1_ReadTimer@readValLow:
  3477                           
  3478                           ; 1 bytes @ 0xA
  3479     007A                     	ds	1
  3480     007B                     ___fltol@sign1:
  3481                           
  3482                           ; 1 bytes @ 0xB
  3483     007B                     	ds	1
  3484     007C                     ___fltol@exp1:
  3485                           
  3486                           ; 1 bytes @ 0xC
  3487     007C                     	ds	1
  3488     007D                     ??_TMR1_GATE_ISR:
  3489     007D                     ??_envia_Tx:	
  3490                           ; 1 bytes @ 0xD
  3491                           
  3492     007D                     ??_trigger_Rx:	
  3493                           ; 1 bytes @ 0xD
  3494                           
  3495                           
  3496                           ; 1 bytes @ 0xD
  3497     007D                     	ds	1
  3498     007E                     ??_TMR2_ISR:
  3499     007E                     ??_INTERRUPT_InterruptManager:	
  3500                           ; 1 bytes @ 0xE
  3501                           
  3502                           
  3503                           	psect	cstackBANK0
  3504     0020                     __pcstackBANK0:	
  3505                           ; 1 bytes @ 0xE
  3506                           
  3507     0020                     ?___xxtofl:
  3508     0020                     ___xxtofl@val:	
  3509                           ; 4 bytes @ 0x0
  3510                           
  3511                           
  3512                           ; 4 bytes @ 0x0
  3513     0020                     	ds	4
  3514     0024                     ??___xxtofl:
  3515                           
  3516                           ; 1 bytes @ 0x4
  3517     0024                     	ds	4
  3518     0028                     ___xxtofl@sign:
  3519                           
  3520                           ; 1 bytes @ 0x8
  3521     0028                     	ds	1
  3522     0029                     ___xxtofl@exp:
  3523                           
  3524                           ; 1 bytes @ 0x9
  3525     0029                     	ds	1
  3526     002A                     ___xxtofl@arg:
  3527                           
  3528                           ; 4 bytes @ 0xA
  3529     002A                     	ds	4
  3530     002E                     ?___flmul:
  3531     002E                     ___flmul@b:	
  3532                           ; 4 bytes @ 0xE
  3533                           
  3534                           
  3535                           ; 4 bytes @ 0xE
  3536     002E                     	ds	4
  3537     0032                     ___flmul@a:
  3538                           
  3539                           ; 4 bytes @ 0x12
  3540     0032                     	ds	4
  3541     0036                     ??___flmul:
  3542                           
  3543                           ; 1 bytes @ 0x16
  3544     0036                     	ds	5
  3545     003B                     ___flmul@sign:
  3546                           
  3547                           ; 1 bytes @ 0x1B
  3548     003B                     	ds	1
  3549     003C                     ___flmul@grs:
  3550                           
  3551                           ; 4 bytes @ 0x1C
  3552     003C                     	ds	4
  3553     0040                     ___flmul@aexp:
  3554                           
  3555                           ; 1 bytes @ 0x20
  3556     0040                     	ds	1
  3557     0041                     ___flmul@bexp:
  3558                           
  3559                           ; 1 bytes @ 0x21
  3560     0041                     	ds	1
  3561     0042                     ___flmul@prod:
  3562                           
  3563                           ; 4 bytes @ 0x22
  3564     0042                     	ds	4
  3565     0046                     ___flmul@temp:
  3566                           
  3567                           ; 2 bytes @ 0x26
  3568     0046                     	ds	2
  3569     0048                     ?___fltol:
  3570     0048                     ___fltol@f1:	
  3571                           ; 4 bytes @ 0x28
  3572                           
  3573                           
  3574                           ; 4 bytes @ 0x28
  3575     0048                     	ds	4
  3576     004C                     ??___fltol:
  3577                           
  3578                           ; 1 bytes @ 0x2C
  3579     004C                     	ds	4
  3580     0050                     ??_mede_height:
  3581                           
  3582                           ; 1 bytes @ 0x30
  3583     0050                     	ds	4
  3584                           
  3585                           	psect	maintext
  3586     068A                     __pmaintext:	
  3587 ;;
  3588 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  3589 ;;
  3590 ;; *************** function _main *****************
  3591 ;; Defined at:
  3592 ;;		line 299 in file "main.c"
  3593 ;; Parameters:    Size  Location     Type
  3594 ;;		None
  3595 ;; Auto vars:     Size  Location     Type
  3596 ;;		None
  3597 ;; Return value:  Size  Location     Type
  3598 ;;                  1    wreg      void 
  3599 ;; Registers used:
  3600 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3601 ;; Tracked objects:
  3602 ;;		On entry : B1F/0
  3603 ;;		On exit  : 0/0
  3604 ;;		Unchanged: 0/0
  3605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3606 ;;      Params:         0       0       0       0       0       0
  3607 ;;      Locals:         0       0       0       0       0       0
  3608 ;;      Temps:          0       0       1       0       0       0
  3609 ;;      Totals:         0       0       1       0       0       0
  3610 ;;Total ram usage:        1 bytes
  3611 ;; Hardware stack levels required when called: 9
  3612 ;; This function calls:
  3613 ;;		_ADC_GetConversion
  3614 ;;		_EUSART_SetRxInterruptHandler
  3615 ;;		_SYSTEM_Initialize
  3616 ;;		_TMR0_SetInterruptHandler
  3617 ;;		_TMR1_SetGateInterruptHandler
  3618 ;;		_TMR2_SetInterruptHandler
  3619 ;;		_TMR4_ReadTimer
  3620 ;;		_TMR4_StopTimer
  3621 ;;		_TMR6_LoadPeriodRegister
  3622 ;;		_TMR6_ReadTimer
  3623 ;;		_TMR6_StartTimer
  3624 ;;		_TMR6_StopTimer
  3625 ;;		_controlchoose
  3626 ;;		_daUmPasso
  3627 ;; This function is called by:
  3628 ;;		Startup code after reset
  3629 ;; This function uses a non-reentrant model
  3630 ;;
  3631                           
  3632     068A                     _main:	
  3633                           ;psect for function _main
  3634                           
  3635     068A                     l3250:	
  3636                           ;incstack = 0
  3637                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3638                           
  3639                           
  3640                           ;main.c: 302:     SYSTEM_Initialize();
  3641     068A  3187  27CD  3186   	fcall	_SYSTEM_Initialize
  3642                           
  3643                           ;main.c: 303:     TMR0_SetInterruptHandler(end_Rx);
  3644     068D  30A7               	movlw	low _end_Rx
  3645     068E  0021               	movlb	1	; select bank1
  3646     068F  00C6               	movwf	TMR0_SetInterruptHandler@InterruptHandler^(0+128)
  3647     0690  300D               	movlw	high _end_Rx
  3648     0691  00C7               	movwf	(TMR0_SetInterruptHandler@InterruptHandler^(0+128)+1)
  3649     0692  318C  24C1  3186   	fcall	_TMR0_SetInterruptHandler
  3650                           
  3651                           ;main.c: 304:     EUSART_SetRxInterruptHandler(receive);
  3652     0695  308B               	movlw	low _receive
  3653     0696  0021               	movlb	1	; select bank1
  3654     0697  00C6               	movwf	EUSART_SetRxInterruptHandler@interruptHandler^(0+128)
  3655     0698  300E               	movlw	high _receive
  3656     0699  00C7               	movwf	(EUSART_SetRxInterruptHandler@interruptHandler^(0+128)+1)
  3657     069A  318C  24B5  3186   	fcall	_EUSART_SetRxInterruptHandler
  3658                           
  3659                           ;main.c: 305:     TMR1_SetGateInterruptHandler(mede_height);
  3660     069D  3032               	movlw	low _mede_height
  3661     069E  0021               	movlb	1	; select bank1
  3662     069F  00C6               	movwf	TMR1_SetGateInterruptHandler@InterruptHandler^(0+128)
  3663     06A0  3005               	movlw	high _mede_height
  3664     06A1  00C7               	movwf	(TMR1_SetGateInterruptHandler@InterruptHandler^(0+128)+1)
  3665     06A2  318C  24C7  3186   	fcall	_TMR1_SetGateInterruptHandler
  3666                           
  3667                           ;main.c: 306:     TMR2_SetInterruptHandler(trigger_Rx);
  3668     06A5  301E               	movlw	low _trigger_Rx
  3669     06A6  0021               	movlb	1	; select bank1
  3670     06A7  00C6               	movwf	TMR2_SetInterruptHandler@InterruptHandler^(0+128)
  3671     06A8  300E               	movlw	high _trigger_Rx
  3672     06A9  00C7               	movwf	(TMR2_SetInterruptHandler@InterruptHandler^(0+128)+1)
  3673     06AA  318C  24CD  3186   	fcall	_TMR2_SetInterruptHandler
  3674     06AD                     l3252:
  3675                           
  3676                           ;main.c: 311:     (INTCONbits.GIE = 1);
  3677     06AD  178B               	bsf	11,7	;volatile
  3678     06AE                     l3254:
  3679                           
  3680                           ;main.c: 314:     (INTCONbits.PEIE = 1);
  3681     06AE  170B               	bsf	11,6	;volatile
  3682     06AF                     l841:	
  3683                           ;main.c: 322:     while (1)
  3684                           
  3685                           
  3686                           ;main.c: 323:     {;main.c: 325:         adc_temp = ADC_GetConversion(channel_AN8);
  3687     06AF  3008               	movlw	8
  3688     06B0  318E  2638  3186   	fcall	_ADC_GetConversion
  3689     06B3  0021               	movlb	1	; select bank1
  3690     06B4  0847               	movf	(?_ADC_GetConversion+1)^(0+128),w
  3691     06B5  0022               	movlb	2	; select bank2
  3692     06B6  00B9               	movwf	(_adc_temp+1)^(0+256)
  3693     06B7  0021               	movlb	1	; select bank1
  3694     06B8  0846               	movf	?_ADC_GetConversion^(0+128),w
  3695     06B9  0022               	movlb	2	; select bank2
  3696     06BA  00B8               	movwf	_adc_temp^(0+256)
  3697     06BB                     l3256:
  3698                           
  3699                           ;main.c: 326:         if((timecontrol = TMR4_ReadTimer()) >= 209){
  3700     06BB  318C  24D3  3186   	fcall	_TMR4_ReadTimer
  3701     06BE  0021               	movlb	1	; select bank1
  3702     06BF  00BD               	movwf	_timecontrol^(0+128)
  3703     06C0  30D1               	movlw	209
  3704     06C1  023D               	subwf	_timecontrol^(0+128),w
  3705     06C2  1C03               	skipc
  3706     06C3  2EC5               	goto	u2461
  3707     06C4  2EC6               	goto	u2460
  3708     06C5                     u2461:
  3709     06C5  2ECC               	goto	l3262
  3710     06C6                     u2460:
  3711     06C6                     l3258:
  3712                           
  3713                           ;main.c: 327:             TMR4_StopTimer();
  3714     06C6  318C  247E  3186   	fcall	_TMR4_StopTimer
  3715     06C9                     l3260:
  3716                           
  3717                           ;main.c: 328:             controlchoose();
  3718     06C9  318D  2592  3186   	fcall	_controlchoose
  3719     06CC                     l3262:
  3720                           
  3721                           ;main.c: 330:         if(TMR6_ReadTimer() >= 0x25 && !controlchoice){
  3722     06CC  318C  24DF  3186   	fcall	_TMR6_ReadTimer
  3723     06CF  0021               	movlb	1	; select bank1
  3724     06D0  00D8               	movwf	??_main^(0+128)
  3725     06D1  3025               	movlw	37
  3726     06D2  0258               	subwf	??_main^(0+128),w
  3727     06D3  1C03               	skipc
  3728     06D4  2ED6               	goto	u2471
  3729     06D5  2ED7               	goto	u2470
  3730     06D6                     u2471:
  3731     06D6  2EAF               	goto	l841
  3732     06D7                     u2470:
  3733     06D7                     l3264:
  3734     06D7  086F               	movf	_controlchoice^(0+128),w
  3735     06D8  1D03               	btfss	3,2
  3736     06D9  2EDB               	goto	u2481
  3737     06DA  2EDC               	goto	u2480
  3738     06DB                     u2481:
  3739     06DB  2EAF               	goto	l841
  3740     06DC                     u2480:
  3741     06DC                     l3266:
  3742                           
  3743                           ;main.c: 331:             TMR6_StopTimer();
  3744     06DC  318C  2484  3186   	fcall	_TMR6_StopTimer
  3745     06DF                     l3268:
  3746                           
  3747                           ;main.c: 332:             daUmPasso(sentido);
  3748     06DF  0021               	movlb	1	; select bank1
  3749     06E0  083C               	movf	_sentido^(0+128),w
  3750     06E1  3187  2749  3186   	fcall	_daUmPasso
  3751     06E4                     l3270:
  3752                           
  3753                           ;main.c: 333:             TMR6_LoadPeriodRegister(0);
  3754     06E4  3000               	movlw	0
  3755     06E5  318C  24D9  3186   	fcall	_TMR6_LoadPeriodRegister
  3756     06E8                     l3272:
  3757                           
  3758                           ;main.c: 334:             TMR6_StartTimer();
  3759     06E8  318C  2481  3186   	fcall	_TMR6_StartTimer
  3760     06EB  2EAF               	goto	l841
  3761     06EC  3180  2862         	ljmp	start
  3762     06EE                     __end_of_main:
  3763                           
  3764                           	psect	text1
  3765     0749                     __ptext1:	
  3766 ;; *************** function _daUmPasso *****************
  3767 ;; Defined at:
  3768 ;;		line 263 in file "main.c"
  3769 ;; Parameters:    Size  Location     Type
  3770 ;;  sentido         1    wreg     unsigned char 
  3771 ;; Auto vars:     Size  Location     Type
  3772 ;;  sentido         1    3[BANK1 ] unsigned char 
  3773 ;; Return value:  Size  Location     Type
  3774 ;;                  1    wreg      void 
  3775 ;; Registers used:
  3776 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3777 ;; Tracked objects:
  3778 ;;		On entry : 0/0
  3779 ;;		On exit  : 0/0
  3780 ;;		Unchanged: 0/0
  3781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3782 ;;      Params:         0       0       0       0       0       0
  3783 ;;      Locals:         0       0       1       0       0       0
  3784 ;;      Temps:          0       0       1       0       0       0
  3785 ;;      Totals:         0       0       2       0       0       0
  3786 ;;Total ram usage:        2 bytes
  3787 ;; Hardware stack levels used: 1
  3788 ;; Hardware stack levels required when called: 7
  3789 ;; This function calls:
  3790 ;;		_CMP1_GetOutputStatus
  3791 ;;		_definePassoMotor
  3792 ;; This function is called by:
  3793 ;;		_main
  3794 ;; This function uses a non-reentrant model
  3795 ;;
  3796                           
  3797     0749                     _daUmPasso:	
  3798                           ;psect for function _daUmPasso
  3799                           
  3800                           
  3801                           ;incstack = 0
  3802                           ; Regs used in _daUmPasso: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3803                           ;daUmPasso@sentido stored from wreg
  3804     0749  0021               	movlb	1	; select bank1
  3805     074A  00C9               	movwf	daUmPasso@sentido^(0+128)
  3806     074B                     l3192:
  3807                           
  3808                           ;main.c: 265:     passo++;
  3809     074B  3001               	movlw	1
  3810     074C  00C8               	movwf	??_daUmPasso^(0+128)
  3811     074D  0848               	movf	??_daUmPasso^(0+128),w
  3812     074E  07BB               	addwf	_passo^(0+128),f
  3813     074F                     l3194:
  3814                           
  3815                           ;main.c: 266:     passo = passo & 0b00000011;
  3816     074F  083B               	movf	_passo^(0+128),w
  3817     0750  3903               	andlw	3
  3818     0751  00BB               	movwf	_passo^(0+128)
  3819     0752                     l3196:
  3820                           
  3821                           ;main.c: 268:     if (CMP1_GetOutputStatus()) {
  3822     0752  318C  249A  3187   	fcall	_CMP1_GetOutputStatus
  3823     0755  3A00               	xorlw	0
  3824     0756  1903               	skipnz
  3825     0757  2F59               	goto	u2291
  3826     0758  2F5A               	goto	u2290
  3827     0759                     u2291:
  3828     0759  2F61               	goto	l3202
  3829     075A                     u2290:
  3830     075A                     l3198:
  3831                           
  3832                           ;main.c: 269:         fim_curso = 1;
  3833     075A  0021               	movlb	1	; select bank1
  3834     075B  01BA               	clrf	_fim_curso^(0+128)
  3835     075C  0ABA               	incf	_fim_curso^(0+128),f
  3836     075D                     l3200:
  3837                           
  3838                           ;main.c: 270:         position = 0;
  3839     075D  0020               	movlb	0	; select bank0
  3840     075E  01DC               	clrf	_position
  3841     075F  01DD               	clrf	_position+1
  3842                           
  3843                           ;main.c: 271:     } else {
  3844     0760  2F63               	goto	l3204
  3845     0761                     l3202:
  3846                           
  3847                           ;main.c: 272:         fim_curso = 0;
  3848     0761  0021               	movlb	1	; select bank1
  3849     0762  01BA               	clrf	_fim_curso^(0+128)
  3850     0763                     l3204:
  3851                           
  3852                           ;main.c: 275:     if (fim_curso) {
  3853     0763  0021               	movlb	1	; select bank1
  3854     0764  083A               	movf	_fim_curso^(0+128),w
  3855     0765  1903               	btfsc	3,2
  3856     0766  2F68               	goto	u2301
  3857     0767  2F69               	goto	u2300
  3858     0768                     u2301:
  3859     0768  2F86               	goto	l3216
  3860     0769                     u2300:
  3861     0769                     l3206:
  3862                           
  3863                           ;main.c: 277:         if(sentido == 1){
  3864     0769  0349               	decf	daUmPasso@sentido^(0+128),w
  3865     076A  1D03               	btfss	3,2
  3866     076B  2F6D               	goto	u2311
  3867     076C  2F6E               	goto	u2310
  3868     076D                     u2311:
  3869     076D  2F74               	goto	l3210
  3870     076E                     u2310:
  3871     076E                     l3208:
  3872                           
  3873                           ;main.c: 278:             position--;
  3874     076E  3001               	movlw	1
  3875     076F  0020               	movlb	0	; select bank0
  3876     0770  02DC               	subwf	_position,f
  3877     0771  3000               	movlw	0
  3878     0772  3BDD               	subwfb	_position+1,f
  3879                           
  3880                           ;main.c: 279:         }
  3881     0773  2F7E               	goto	l3214
  3882     0774                     l3210:
  3883     0774  0849               	movf	daUmPasso@sentido^(0+128),w
  3884     0775  1D03               	btfss	3,2
  3885     0776  2F78               	goto	u2321
  3886     0777  2F79               	goto	u2320
  3887     0778                     u2321:
  3888     0778  2F7E               	goto	l3214
  3889     0779                     u2320:
  3890     0779                     l3212:
  3891                           
  3892                           ;main.c: 281:             position++;
  3893     0779  3001               	movlw	1
  3894     077A  0020               	movlb	0	; select bank0
  3895     077B  07DC               	addwf	_position,f
  3896     077C  3000               	movlw	0
  3897     077D  3DDD               	addwfc	_position+1,f
  3898     077E                     l3214:
  3899                           
  3900                           ;main.c: 283:         definePassoMotor(passo, sentido);
  3901     077E  0021               	movlb	1	; select bank1
  3902     077F  0849               	movf	daUmPasso@sentido^(0+128),w
  3903     0780  00C6               	movwf	definePassoMotor@sentido^(0+128)
  3904     0781  083B               	movf	_passo^(0+128),w
  3905     0782  3186  26EE  3187   	fcall	_definePassoMotor
  3906                           
  3907                           ;main.c: 284:     } else {
  3908     0785  2F8C               	goto	l830
  3909     0786                     l3216:
  3910                           
  3911                           ;main.c: 285:         definePassoMotor(passo, 1);
  3912     0786  01C6               	clrf	definePassoMotor@sentido^(0+128)
  3913     0787  0AC6               	incf	definePassoMotor@sentido^(0+128),f
  3914     0788  083B               	movf	_passo^(0+128),w
  3915     0789  3186  26EE  3187   	fcall	_definePassoMotor
  3916     078C                     l830:
  3917     078C  0008               	return
  3918     078D                     __end_of_daUmPasso:
  3919                           
  3920                           	psect	text2
  3921     06EE                     __ptext2:	
  3922 ;; *************** function _definePassoMotor *****************
  3923 ;; Defined at:
  3924 ;;		line 204 in file "main.c"
  3925 ;; Parameters:    Size  Location     Type
  3926 ;;  passo           1    wreg     unsigned char 
  3927 ;;  sentido         1    0[BANK1 ] unsigned char 
  3928 ;; Auto vars:     Size  Location     Type
  3929 ;;  passo           1    1[BANK1 ] unsigned char 
  3930 ;; Return value:  Size  Location     Type
  3931 ;;                  1    wreg      void 
  3932 ;; Registers used:
  3933 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3934 ;; Tracked objects:
  3935 ;;		On entry : 0/0
  3936 ;;		On exit  : 0/0
  3937 ;;		Unchanged: 0/0
  3938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3939 ;;      Params:         0       0       1       0       0       0
  3940 ;;      Locals:         0       0       1       0       0       0
  3941 ;;      Temps:          0       0       0       0       0       0
  3942 ;;      Totals:         0       0       2       0       0       0
  3943 ;;Total ram usage:        2 bytes
  3944 ;; Hardware stack levels used: 1
  3945 ;; Hardware stack levels required when called: 6
  3946 ;; This function calls:
  3947 ;;		Nothing
  3948 ;; This function is called by:
  3949 ;;		_daUmPasso
  3950 ;; This function uses a non-reentrant model
  3951 ;;
  3952                           
  3953     06EE                     _definePassoMotor:	
  3954                           ;psect for function _definePassoMotor
  3955                           
  3956                           
  3957                           ;incstack = 0
  3958                           ; Regs used in _definePassoMotor: [wreg-fsr0h+status,2+status,0]
  3959                           ;definePassoMotor@passo stored from wreg
  3960     06EE  0021               	movlb	1	; select bank1
  3961     06EF  00C7               	movwf	definePassoMotor@passo^(0+128)
  3962     06F0                     l3056:
  3963                           
  3964                           ;main.c: 205:     if (sentido == 1) {
  3965     06F0  0346               	decf	definePassoMotor@sentido^(0+128),w
  3966     06F1  1D03               	btfss	3,2
  3967     06F2  2EF4               	goto	u2151
  3968     06F3  2EF5               	goto	u2150
  3969     06F4                     u2151:
  3970     06F4  2F1C               	goto	l3064
  3971     06F5                     u2150:
  3972     06F5  2F0E               	goto	l3062
  3973     06F6                     l744:	
  3974                           ;main.c: 208:                 do { LATAbits.LATA1 = 1; } while(0);
  3975                           
  3976     06F6  0022               	movlb	2	; select bank2
  3977     06F7  148C               	bsf	12,1	;volatile
  3978     06F8                     l746:	
  3979                           ;main.c: 209:                 do { LATAbits.LATA2 = 1; } while(0);
  3980                           
  3981     06F8  150C               	bsf	12,2	;volatile
  3982     06F9                     l748:	
  3983                           ;main.c: 210:                 do { LATAbits.LATA3 = 0; } while(0);
  3984                           
  3985     06F9  118C               	bcf	12,3	;volatile
  3986     06FA                     l750:	
  3987                           ;main.c: 211:                 do { LATAbits.LATA4 = 0; } while(0);
  3988                           
  3989     06FA  120C               	bcf	12,4	;volatile
  3990     06FB  2F48               	goto	l820
  3991     06FC                     l754:	
  3992                           ;main.c: 214:                 do { LATAbits.LATA1 = 0; } while(0);
  3993                           
  3994     06FC  0022               	movlb	2	; select bank2
  3995     06FD  108C               	bcf	12,1	;volatile
  3996     06FE                     l756:	
  3997                           ;main.c: 215:                 do { LATAbits.LATA2 = 1; } while(0);
  3998                           
  3999     06FE  150C               	bsf	12,2	;volatile
  4000     06FF                     l758:	
  4001                           ;main.c: 216:                 do { LATAbits.LATA3 = 1; } while(0);
  4002                           
  4003     06FF  158C               	bsf	12,3	;volatile
  4004     0700                     l760:	
  4005                           ;main.c: 217:                 do { LATAbits.LATA4 = 0; } while(0);
  4006                           
  4007     0700  120C               	bcf	12,4	;volatile
  4008     0701  2F48               	goto	l820
  4009     0702                     l763:	
  4010                           ;main.c: 220:                 do { LATAbits.LATA1 = 0; } while(0);
  4011                           
  4012     0702  0022               	movlb	2	; select bank2
  4013     0703  108C               	bcf	12,1	;volatile
  4014     0704                     l765:	
  4015                           ;main.c: 221:                 do { LATAbits.LATA2 = 0; } while(0);
  4016                           
  4017     0704  110C               	bcf	12,2	;volatile
  4018     0705                     l767:	
  4019                           ;main.c: 222:                 do { LATAbits.LATA3 = 1; } while(0);
  4020                           
  4021     0705  158C               	bsf	12,3	;volatile
  4022     0706                     l769:	
  4023                           ;main.c: 223:                 do { LATAbits.LATA4 = 1; } while(0);
  4024                           
  4025     0706  160C               	bsf	12,4	;volatile
  4026     0707  2F48               	goto	l820
  4027     0708                     l772:	
  4028                           ;main.c: 226:                 do { LATAbits.LATA1 = 1; } while(0);
  4029                           
  4030     0708  0022               	movlb	2	; select bank2
  4031     0709  148C               	bsf	12,1	;volatile
  4032     070A                     l774:	
  4033                           ;main.c: 227:                 do { LATAbits.LATA2 = 0; } while(0);
  4034                           
  4035     070A  110C               	bcf	12,2	;volatile
  4036     070B                     l776:	
  4037                           ;main.c: 228:                 do { LATAbits.LATA3 = 0; } while(0);
  4038                           
  4039     070B  118C               	bcf	12,3	;volatile
  4040     070C                     l778:	
  4041                           ;main.c: 229:                 do { LATAbits.LATA4 = 1; } while(0);
  4042                           
  4043     070C  160C               	bsf	12,4	;volatile
  4044     070D  2F48               	goto	l820
  4045     070E                     l3062:
  4046     070E  0847               	movf	definePassoMotor@passo^(0+128),w
  4047                           
  4048                           ; Switch size 1, requested type "simple"
  4049                           ; Number of cases is 4, Range of values is 0 to 3
  4050                           ; switch strategies available:
  4051                           ; Name         Instructions Cycles
  4052                           ; simple_byte           13     7 (average)
  4053                           ; direct_byte           14     6 (fixed)
  4054                           ; jumptable            260     6 (fixed)
  4055                           ;	Chosen strategy is simple_byte
  4056     070F  3A00               	xorlw	0	; case 0
  4057     0710  1903               	skipnz
  4058     0711  2EF6               	goto	l744
  4059     0712  3A01               	xorlw	1	; case 1
  4060     0713  1903               	skipnz
  4061     0714  2EFC               	goto	l754
  4062     0715  3A03               	xorlw	3	; case 2
  4063     0716  1903               	skipnz
  4064     0717  2F02               	goto	l763
  4065     0718  3A01               	xorlw	1	; case 3
  4066     0719  1903               	skipnz
  4067     071A  2F08               	goto	l772
  4068     071B  2F48               	goto	l820
  4069     071C                     l3064:
  4070     071C  0846               	movf	definePassoMotor@sentido^(0+128),w
  4071     071D  1D03               	btfss	3,2
  4072     071E  2F20               	goto	u2161
  4073     071F  2F21               	goto	u2160
  4074     0720                     u2161:
  4075     0720  2F48               	goto	l820
  4076     0721                     u2160:
  4077     0721  2F3A               	goto	l3070
  4078     0722                     l784:	
  4079                           ;main.c: 236:                 do { LATAbits.LATA4 = 1; } while(0);
  4080                           
  4081     0722  0022               	movlb	2	; select bank2
  4082     0723  160C               	bsf	12,4	;volatile
  4083     0724                     l786:	
  4084                           ;main.c: 237:                 do { LATAbits.LATA3 = 1; } while(0);
  4085                           
  4086     0724  158C               	bsf	12,3	;volatile
  4087     0725                     l788:	
  4088                           ;main.c: 238:                 do { LATAbits.LATA2 = 0; } while(0);
  4089                           
  4090     0725  110C               	bcf	12,2	;volatile
  4091     0726                     l790:	
  4092                           ;main.c: 239:                 do { LATAbits.LATA1 = 0; } while(0);
  4093                           
  4094     0726  108C               	bcf	12,1	;volatile
  4095     0727  2F48               	goto	l820
  4096     0728                     l794:	
  4097                           ;main.c: 242:                 do { LATAbits.LATA4 = 0; } while(0);
  4098                           
  4099     0728  0022               	movlb	2	; select bank2
  4100     0729  120C               	bcf	12,4	;volatile
  4101     072A                     l796:	
  4102                           ;main.c: 243:                 do { LATAbits.LATA3 = 1; } while(0);
  4103                           
  4104     072A  158C               	bsf	12,3	;volatile
  4105     072B                     l798:	
  4106                           ;main.c: 244:                 do { LATAbits.LATA2 = 1; } while(0);
  4107                           
  4108     072B  150C               	bsf	12,2	;volatile
  4109     072C                     l800:	
  4110                           ;main.c: 245:                 do { LATAbits.LATA1 = 0; } while(0);
  4111                           
  4112     072C  108C               	bcf	12,1	;volatile
  4113     072D  2F48               	goto	l820
  4114     072E                     l803:	
  4115                           ;main.c: 248:                 do { LATAbits.LATA4 = 0; } while(0);
  4116                           
  4117     072E  0022               	movlb	2	; select bank2
  4118     072F  120C               	bcf	12,4	;volatile
  4119     0730                     l805:	
  4120                           ;main.c: 249:                 do { LATAbits.LATA3 = 0; } while(0);
  4121                           
  4122     0730  118C               	bcf	12,3	;volatile
  4123     0731                     l807:	
  4124                           ;main.c: 250:                 do { LATAbits.LATA2 = 1; } while(0);
  4125                           
  4126     0731  150C               	bsf	12,2	;volatile
  4127     0732                     l809:	
  4128                           ;main.c: 251:                 do { LATAbits.LATA1 = 1; } while(0);
  4129                           
  4130     0732  148C               	bsf	12,1	;volatile
  4131     0733  2F48               	goto	l820
  4132     0734                     l812:	
  4133                           ;main.c: 254:                 do { LATAbits.LATA4 = 1; } while(0);
  4134                           
  4135     0734  0022               	movlb	2	; select bank2
  4136     0735  160C               	bsf	12,4	;volatile
  4137     0736                     l814:	
  4138                           ;main.c: 255:                 do { LATAbits.LATA3 = 0; } while(0);
  4139                           
  4140     0736  118C               	bcf	12,3	;volatile
  4141     0737                     l816:	
  4142                           ;main.c: 256:                 do { LATAbits.LATA2 = 0; } while(0);
  4143                           
  4144     0737  110C               	bcf	12,2	;volatile
  4145     0738                     l818:	
  4146                           ;main.c: 257:                 do { LATAbits.LATA1 = 1; } while(0);
  4147                           
  4148     0738  148C               	bsf	12,1	;volatile
  4149     0739  2F48               	goto	l820
  4150     073A                     l3070:
  4151     073A  0847               	movf	definePassoMotor@passo^(0+128),w
  4152                           
  4153                           ; Switch size 1, requested type "simple"
  4154                           ; Number of cases is 4, Range of values is 0 to 3
  4155                           ; switch strategies available:
  4156                           ; Name         Instructions Cycles
  4157                           ; simple_byte           13     7 (average)
  4158                           ; direct_byte           14     6 (fixed)
  4159                           ; jumptable            260     6 (fixed)
  4160                           ;	Chosen strategy is simple_byte
  4161     073B  3A00               	xorlw	0	; case 0
  4162     073C  1903               	skipnz
  4163     073D  2F22               	goto	l784
  4164     073E  3A01               	xorlw	1	; case 1
  4165     073F  1903               	skipnz
  4166     0740  2F28               	goto	l794
  4167     0741  3A03               	xorlw	3	; case 2
  4168     0742  1903               	skipnz
  4169     0743  2F2E               	goto	l803
  4170     0744  3A01               	xorlw	1	; case 3
  4171     0745  1903               	skipnz
  4172     0746  2F34               	goto	l812
  4173     0747  2F48               	goto	l820
  4174     0748                     l820:
  4175     0748  0008               	return
  4176     0749                     __end_of_definePassoMotor:
  4177                           
  4178                           	psect	text3
  4179     0C9A                     __ptext3:	
  4180 ;; *************** function _CMP1_GetOutputStatus *****************
  4181 ;; Defined at:
  4182 ;;		line 69 in file "mcc_generated_files/cmp1.c"
  4183 ;; Parameters:    Size  Location     Type
  4184 ;;		None
  4185 ;; Auto vars:     Size  Location     Type
  4186 ;;		None
  4187 ;; Return value:  Size  Location     Type
  4188 ;;                  1    wreg      _Bool 
  4189 ;; Registers used:
  4190 ;;		wreg, status,2, status,0
  4191 ;; Tracked objects:
  4192 ;;		On entry : 0/0
  4193 ;;		On exit  : 0/0
  4194 ;;		Unchanged: 0/0
  4195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4196 ;;      Params:         0       0       0       0       0       0
  4197 ;;      Locals:         0       0       0       0       0       0
  4198 ;;      Temps:          0       0       0       0       0       0
  4199 ;;      Totals:         0       0       0       0       0       0
  4200 ;;Total ram usage:        0 bytes
  4201 ;; Hardware stack levels used: 1
  4202 ;; Hardware stack levels required when called: 6
  4203 ;; This function calls:
  4204 ;;		Nothing
  4205 ;; This function is called by:
  4206 ;;		_daUmPasso
  4207 ;; This function uses a non-reentrant model
  4208 ;;
  4209                           
  4210     0C9A                     _CMP1_GetOutputStatus:	
  4211                           ;psect for function _CMP1_GetOutputStatus
  4212                           
  4213     0C9A                     l2992:	
  4214                           ;incstack = 0
  4215                           ; Regs used in _CMP1_GetOutputStatus: [wreg+status,2+status,0]
  4216                           
  4217                           
  4218                           ;mcc_generated_files/cmp1.c: 71:  return (CMOUTbits.MC1OUT);
  4219     0C9A  0022               	movlb	2	; select bank2
  4220     0C9B  0815               	movf	21,w	;volatile
  4221     0C9C  3901               	andlw	1
  4222     0C9D                     l463:
  4223     0C9D  0008               	return
  4224     0C9E                     __end_of_CMP1_GetOutputStatus:
  4225                           
  4226                           	psect	text4
  4227     0D92                     __ptext4:	
  4228 ;; *************** function _controlchoose *****************
  4229 ;; Defined at:
  4230 ;;		line 80 in file "main.c"
  4231 ;; Parameters:    Size  Location     Type
  4232 ;;		None
  4233 ;; Auto vars:     Size  Location     Type
  4234 ;;		None
  4235 ;; Return value:  Size  Location     Type
  4236 ;;                  1    wreg      void 
  4237 ;; Registers used:
  4238 ;;		wreg, status,2, status,0, pclath, cstack
  4239 ;; Tracked objects:
  4240 ;;		On entry : 0/0
  4241 ;;		On exit  : 0/0
  4242 ;;		Unchanged: 0/0
  4243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4244 ;;      Params:         0       0       0       0       0       0
  4245 ;;      Locals:         0       0       0       0       0       0
  4246 ;;      Temps:          0       0       0       0       0       0
  4247 ;;      Totals:         0       0       0       0       0       0
  4248 ;;Total ram usage:        0 bytes
  4249 ;; Hardware stack levels used: 1
  4250 ;; Hardware stack levels required when called: 8
  4251 ;; This function calls:
  4252 ;;		_TMR4_LoadPeriodRegister
  4253 ;;		_TMR4_StartTimer
  4254 ;;		_fluxcontrol
  4255 ;;		_pwmcontrol
  4256 ;; This function is called by:
  4257 ;;		_main
  4258 ;; This function uses a non-reentrant model
  4259 ;;
  4260                           
  4261     0D92                     _controlchoose:	
  4262                           ;psect for function _controlchoose
  4263                           
  4264     0D92                     l3172:	
  4265                           ;incstack = 0
  4266                           ; Regs used in _controlchoose: [wreg+status,2+status,0+pclath+cstack]
  4267                           
  4268                           
  4269                           ;main.c: 81:     if (controlchoice == 1){
  4270     0D92  0021               	movlb	1	; select bank1
  4271     0D93  036F               	decf	_controlchoice^(0+128),w
  4272     0D94  1D03               	btfss	3,2
  4273     0D95  2D97               	goto	u2271
  4274     0D96  2D98               	goto	u2270
  4275     0D97                     u2271:
  4276     0D97  2D9C               	goto	l3176
  4277     0D98                     u2270:
  4278     0D98                     l3174:
  4279                           
  4280                           ;main.c: 82:         pwmcontrol ();
  4281     0D98  3184  24A0  318D   	fcall	_pwmcontrol
  4282                           
  4283                           ;main.c: 83:     } else {
  4284     0D9B  2D9F               	goto	l701
  4285     0D9C                     l3176:
  4286                           
  4287                           ;main.c: 84:         fluxcontrol ();
  4288     0D9C  3183  2372  318D   	fcall	_fluxcontrol
  4289     0D9F                     l701:	
  4290                           ;main.c: 85:     }
  4291                           
  4292                           
  4293                           ;main.c: 86:     TMR4_LoadPeriodRegister(0);
  4294     0D9F  3000               	movlw	0
  4295     0DA0  318C  24E5  318D   	fcall	_TMR4_LoadPeriodRegister
  4296     0DA3                     l3178:
  4297                           
  4298                           ;main.c: 87:     TMR4_StartTimer();
  4299     0DA3  318C  2487  318D   	fcall	_TMR4_StartTimer
  4300     0DA6                     l702:
  4301     0DA6  0008               	return
  4302     0DA7                     __end_of_controlchoose:
  4303                           
  4304                           	psect	text5
  4305     04A0                     __ptext5:	
  4306 ;; *************** function _pwmcontrol *****************
  4307 ;; Defined at:
  4308 ;;		line 62 in file "main.c"
  4309 ;; Parameters:    Size  Location     Type
  4310 ;;		None
  4311 ;; Auto vars:     Size  Location     Type
  4312 ;;		None
  4313 ;; Return value:  Size  Location     Type
  4314 ;;                  1    wreg      void 
  4315 ;; Registers used:
  4316 ;;		wreg, status,2, status,0, pclath, cstack
  4317 ;; Tracked objects:
  4318 ;;		On entry : 0/0
  4319 ;;		On exit  : 0/0
  4320 ;;		Unchanged: 0/0
  4321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4322 ;;      Params:         0       0       0       0       0       0
  4323 ;;      Locals:         0       0       2       0       0       0
  4324 ;;      Temps:          0       0       2       0       0       0
  4325 ;;      Totals:         0       0       4       0       0       0
  4326 ;;Total ram usage:        4 bytes
  4327 ;; Hardware stack levels used: 1
  4328 ;; Hardware stack levels required when called: 7
  4329 ;; This function calls:
  4330 ;;		_EPWM1_LoadDutyValue
  4331 ;;		___lwdiv
  4332 ;;		___wmul
  4333 ;; This function is called by:
  4334 ;;		_controlchoose
  4335 ;; This function uses a non-reentrant model
  4336 ;;
  4337                           
  4338     04A0                     _pwmcontrol:	
  4339                           ;psect for function _pwmcontrol
  4340                           
  4341     04A0                     l3016:	
  4342                           ;incstack = 0
  4343                           ; Regs used in _pwmcontrol: [wreg+status,2+status,0+pclath+cstack]
  4344                           
  4345                           
  4346                           ;main.c: 63:     error = ballset-balldist;
  4347     04A0  0021               	movlb	1	; select bank1
  4348     04A1  0832               	movf	_balldist^(0+128),w
  4349     04A2  0230               	subwf	_ballset^(0+128),w
  4350     04A3  00B4               	movwf	_error^(0+128)
  4351     04A4  0833               	movf	(_balldist+1)^(0+128),w
  4352     04A5  3B31               	subwfb	(_ballset+1)^(0+128),w
  4353     04A6  00B5               	movwf	(_error+1)^(0+128)
  4354     04A7                     l3018:
  4355                           
  4356                           ;main.c: 64:     if(error > 150 || error < 150){
  4357     04A7  0835               	movf	(_error+1)^(0+128),w
  4358     04A8  3A80               	xorlw	128
  4359     04A9  00D4               	movwf	??_pwmcontrol^(0+128)
  4360     04AA  3080               	movlw	128
  4361     04AB  0254               	subwf	??_pwmcontrol^(0+128),w
  4362     04AC  1D03               	skipz
  4363     04AD  2CB0               	goto	u2085
  4364     04AE  3097               	movlw	151
  4365     04AF  0234               	subwf	_error^(0+128),w
  4366     04B0                     u2085:
  4367     04B0  1803               	skipnc
  4368     04B1  2CB3               	goto	u2081
  4369     04B2  2CB4               	goto	u2080
  4370     04B3                     u2081:
  4371     04B3  2CC2               	goto	l3022
  4372     04B4                     u2080:
  4373     04B4                     l3020:
  4374     04B4  0021               	movlb	1	; select bank1
  4375     04B5  0835               	movf	(_error+1)^(0+128),w
  4376     04B6  3A80               	xorlw	128
  4377     04B7  00D4               	movwf	??_pwmcontrol^(0+128)
  4378     04B8  3080               	movlw	128
  4379     04B9  0254               	subwf	??_pwmcontrol^(0+128),w
  4380     04BA  1D03               	skipz
  4381     04BB  2CBE               	goto	u2095
  4382     04BC  3096               	movlw	150
  4383     04BD  0234               	subwf	_error^(0+128),w
  4384     04BE                     u2095:
  4385     04BE  1803               	skipnc
  4386     04BF  2CC1               	goto	u2091
  4387     04C0  2CC2               	goto	u2090
  4388     04C1                     u2091:
  4389     04C1  2D31               	goto	l690
  4390     04C2                     u2090:
  4391     04C2                     l3022:
  4392     04C2  0021               	movlb	1	; select bank1
  4393     04C3  083D               	movf	_timecontrol^(0+128),w
  4394     04C4  00D4               	movwf	??_pwmcontrol^(0+128)
  4395     04C5  01D5               	clrf	(??_pwmcontrol^(0+128)+1)
  4396     04C6  0854               	movf	??_pwmcontrol^(0+128),w
  4397     04C7  00C6               	movwf	___wmul@multiplier^(0+128)
  4398     04C8  0855               	movf	(??_pwmcontrol+1)^(0+128),w
  4399     04C9  00C7               	movwf	(___wmul@multiplier+1)^(0+128)
  4400     04CA  0835               	movf	(_error+1)^(0+128),w
  4401     04CB  00C9               	movwf	(___wmul@multiplicand+1)^(0+128)
  4402     04CC  0834               	movf	_error^(0+128),w
  4403     04CD  00C8               	movwf	___wmul@multiplicand^(0+128)
  4404     04CE  318E  26A9  3184   	fcall	___wmul
  4405     04D1  0021               	movlb	1	; select bank1
  4406     04D2  0847               	movf	(?___wmul+1)^(0+128),w
  4407     04D3  00D7               	movwf	(_pwmcontrol$2027+1)^(0+128)
  4408     04D4  0846               	movf	?___wmul^(0+128),w
  4409     04D5  00D6               	movwf	_pwmcontrol$2027^(0+128)
  4410     04D6  30E8               	movlw	232
  4411     04D7  00CC               	movwf	___lwdiv@divisor^(0+128)
  4412     04D8  3003               	movlw	3
  4413     04D9  00CD               	movwf	(___lwdiv@divisor^(0+128)+1)
  4414     04DA  0857               	movf	(_pwmcontrol$2027+1)^(0+128),w
  4415     04DB  00C7               	movwf	(___wmul@multiplier+1)^(0+128)
  4416     04DC  0856               	movf	_pwmcontrol$2027^(0+128),w
  4417     04DD  00C6               	movwf	___wmul@multiplier^(0+128)
  4418     04DE  3013               	movlw	19
  4419     04DF  00C8               	movwf	___wmul@multiplicand^(0+128)
  4420     04E0  3000               	movlw	0
  4421     04E1  00C9               	movwf	(___wmul@multiplicand^(0+128)+1)
  4422     04E2  318E  26A9  3184   	fcall	___wmul
  4423     04E5  0021               	movlb	1	; select bank1
  4424     04E6  0847               	movf	(?___wmul+1)^(0+128),w
  4425     04E7  00CF               	movwf	(___lwdiv@dividend+1)^(0+128)
  4426     04E8  0846               	movf	?___wmul^(0+128),w
  4427     04E9  00CE               	movwf	___lwdiv@dividend^(0+128)
  4428     04EA  318F  2784  3184   	fcall	___lwdiv
  4429     04ED  0021               	movlb	1	; select bank1
  4430     04EE  084C               	movf	?___lwdiv^(0+128),w
  4431     04EF  07AC               	addwf	_outputsum^(0+128),f
  4432     04F0  084D               	movf	(?___lwdiv+1)^(0+128),w
  4433     04F1  3DAD               	addwfc	(_outputsum+1)^(0+128),f
  4434     04F2                     l3024:
  4435                           
  4436                           ;main.c: 66:         if (outputsum > 10230) outputsum = 10230;
  4437     04F2  3027               	movlw	39
  4438     04F3  022D               	subwf	(_outputsum+1)^(0+128),w
  4439     04F4  30F7               	movlw	247
  4440     04F5  1903               	skipnz
  4441     04F6  022C               	subwf	_outputsum^(0+128),w
  4442     04F7  1C03               	skipc
  4443     04F8  2CFA               	goto	u2101
  4444     04F9  2CFB               	goto	u2100
  4445     04FA                     u2101:
  4446     04FA  2CFF               	goto	l3028
  4447     04FB                     u2100:
  4448     04FB                     l3026:
  4449     04FB  30F6               	movlw	246
  4450     04FC  00AC               	movwf	_outputsum^(0+128)
  4451     04FD  3027               	movlw	39
  4452     04FE  00AD               	movwf	(_outputsum^(0+128)+1)
  4453     04FF                     l3028:
  4454                           
  4455                           ;main.c: 67:         output = ((kpp*error + outputsum)/10);
  4456     04FF  300A               	movlw	10
  4457     0500  00CC               	movwf	___lwdiv@divisor^(0+128)
  4458     0501  3000               	movlw	0
  4459     0502  00CD               	movwf	(___lwdiv@divisor^(0+128)+1)
  4460     0503  0835               	movf	(_error+1)^(0+128),w
  4461     0504  00C7               	movwf	(___wmul@multiplier+1)^(0+128)
  4462     0505  0834               	movf	_error^(0+128),w
  4463     0506  00C6               	movwf	___wmul@multiplier^(0+128)
  4464     0507  300C               	movlw	12
  4465     0508  00C8               	movwf	___wmul@multiplicand^(0+128)
  4466     0509  3000               	movlw	0
  4467     050A  00C9               	movwf	(___wmul@multiplicand^(0+128)+1)
  4468     050B  318E  26A9  3184   	fcall	___wmul
  4469     050E  0021               	movlb	1	; select bank1
  4470     050F  082C               	movf	_outputsum^(0+128),w
  4471     0510  0746               	addwf	?___wmul^(0+128),w
  4472     0511  00CE               	movwf	___lwdiv@dividend^(0+128)
  4473     0512  082D               	movf	(_outputsum+1)^(0+128),w
  4474     0513  3D47               	addwfc	(?___wmul+1)^(0+128),w
  4475     0514  00CF               	movwf	(___lwdiv@dividend+1)^(0+128)
  4476     0515  318F  2784  3184   	fcall	___lwdiv
  4477     0518  0021               	movlb	1	; select bank1
  4478     0519  084D               	movf	(?___lwdiv+1)^(0+128),w
  4479     051A  00AB               	movwf	(_output+1)^(0+128)
  4480     051B  084C               	movf	?___lwdiv^(0+128),w
  4481     051C  00AA               	movwf	_output^(0+128)
  4482     051D                     l3030:
  4483                           
  4484                           ;main.c: 68:         if(output > 1023) output = 1023;
  4485     051D  3004               	movlw	4
  4486     051E  022B               	subwf	(_output+1)^(0+128),w
  4487     051F  3000               	movlw	0
  4488     0520  1903               	skipnz
  4489     0521  022A               	subwf	_output^(0+128),w
  4490     0522  1C03               	skipc
  4491     0523  2D25               	goto	u2111
  4492     0524  2D26               	goto	u2110
  4493     0525                     u2111:
  4494     0525  2D2A               	goto	l3034
  4495     0526                     u2110:
  4496     0526                     l3032:
  4497     0526  30FF               	movlw	255
  4498     0527  00AA               	movwf	_output^(0+128)
  4499     0528  3003               	movlw	3
  4500     0529  00AB               	movwf	(_output^(0+128)+1)
  4501     052A                     l3034:
  4502                           
  4503                           ;main.c: 69:         EPWM1_LoadDutyValue(output);
  4504     052A  082B               	movf	(_output+1)^(0+128),w
  4505     052B  00C7               	movwf	(EPWM1_LoadDutyValue@dutyValue+1)^(0+128)
  4506     052C  082A               	movf	_output^(0+128),w
  4507     052D  00C6               	movwf	EPWM1_LoadDutyValue@dutyValue^(0+128)
  4508     052E  318E  266F  3184   	fcall	_EPWM1_LoadDutyValue
  4509     0531                     l690:
  4510     0531  0008               	return
  4511     0532                     __end_of_pwmcontrol:
  4512                           
  4513                           	psect	text6
  4514     0E6F                     __ptext6:	
  4515 ;; *************** function _EPWM1_LoadDutyValue *****************
  4516 ;; Defined at:
  4517 ;;		line 90 in file "mcc_generated_files/epwm1.c"
  4518 ;; Parameters:    Size  Location     Type
  4519 ;;  dutyValue       2    0[BANK1 ] unsigned short 
  4520 ;; Auto vars:     Size  Location     Type
  4521 ;;		None
  4522 ;; Return value:  Size  Location     Type
  4523 ;;                  1    wreg      void 
  4524 ;; Registers used:
  4525 ;;		wreg, status,2, status,0
  4526 ;; Tracked objects:
  4527 ;;		On entry : 0/0
  4528 ;;		On exit  : 0/0
  4529 ;;		Unchanged: 0/0
  4530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4531 ;;      Params:         0       0       2       0       0       0
  4532 ;;      Locals:         0       0       0       0       0       0
  4533 ;;      Temps:          0       0       2       0       0       0
  4534 ;;      Totals:         0       0       4       0       0       0
  4535 ;;Total ram usage:        4 bytes
  4536 ;; Hardware stack levels used: 1
  4537 ;; Hardware stack levels required when called: 6
  4538 ;; This function calls:
  4539 ;;		Nothing
  4540 ;; This function is called by:
  4541 ;;		_pwmcontrol
  4542 ;; This function uses a non-reentrant model
  4543 ;;
  4544                           
  4545     0E6F                     _EPWM1_LoadDutyValue:	
  4546                           ;psect for function _EPWM1_LoadDutyValue
  4547                           
  4548     0E6F                     l2618:	
  4549                           ;incstack = 0
  4550                           ; Regs used in _EPWM1_LoadDutyValue: [wreg+status,2+status,0]
  4551                           
  4552                           
  4553                           ;mcc_generated_files/epwm1.c: 90: void EPWM1_LoadDutyValue(uint16_t dutyValue);mcc_gener
      +                          ated_files/epwm1.c: 91: {;mcc_generated_files/epwm1.c: 93:     CCPR1L = ((dutyValue & 0x
      +                          03FC)>>2);
  4554     0E6F  0021               	movlb	1	; select bank1
  4555     0E70  0847               	movf	(EPWM1_LoadDutyValue@dutyValue+1)^(0+128),w
  4556     0E71  00C9               	movwf	(??_EPWM1_LoadDutyValue^(0+128)+1)
  4557     0E72  0846               	movf	EPWM1_LoadDutyValue@dutyValue^(0+128),w
  4558     0E73  00C8               	movwf	??_EPWM1_LoadDutyValue^(0+128)
  4559     0E74  36C9               	lsrf	(??_EPWM1_LoadDutyValue^(0+128)+1),f
  4560     0E75  0CC8               	rrf	??_EPWM1_LoadDutyValue^(0+128),f
  4561     0E76  36C9               	lsrf	(??_EPWM1_LoadDutyValue^(0+128)+1),f
  4562     0E77  0CC8               	rrf	??_EPWM1_LoadDutyValue^(0+128),f
  4563     0E78  0848               	movf	??_EPWM1_LoadDutyValue^(0+128),w
  4564     0E79  0025               	movlb	5	; select bank5
  4565     0E7A  0091               	movwf	17	;volatile
  4566                           
  4567                           ;mcc_generated_files/epwm1.c: 96:     CCP1CON = ((uint8_t)(CCP1CON & 0xCF) | ((dutyValue
      +                           & 0x0003)<<4));
  4568     0E7B  0021               	movlb	1	; select bank1
  4569     0E7C  0846               	movf	EPWM1_LoadDutyValue@dutyValue^(0+128),w
  4570     0E7D  3903               	andlw	3
  4571     0E7E  00C8               	movwf	??_EPWM1_LoadDutyValue^(0+128)
  4572     0E7F  3004               	movlw	4
  4573     0E80                     u1695:
  4574     0E80  35C8               	lslf	??_EPWM1_LoadDutyValue^(0+128),f
  4575     0E81  0B89               	decfsz	9,f
  4576     0E82  2E80               	goto	u1695
  4577     0E83  0025               	movlb	5	; select bank5
  4578     0E84  0813               	movf	19,w	;volatile
  4579     0E85  39CF               	andlw	207
  4580     0E86  0021               	movlb	1	; select bank1
  4581     0E87  0448               	iorwf	??_EPWM1_LoadDutyValue^(0+128),w
  4582     0E88  0025               	movlb	5	; select bank5
  4583     0E89  0093               	movwf	19	;volatile
  4584     0E8A                     l173:
  4585     0E8A  0008               	return
  4586     0E8B                     __end_of_EPWM1_LoadDutyValue:
  4587                           
  4588                           	psect	text7
  4589     0372                     __ptext7:	
  4590 ;; *************** function _fluxcontrol *****************
  4591 ;; Defined at:
  4592 ;;		line 51 in file "main.c"
  4593 ;; Parameters:    Size  Location     Type
  4594 ;;		None
  4595 ;; Auto vars:     Size  Location     Type
  4596 ;;		None
  4597 ;; Return value:  Size  Location     Type
  4598 ;;                  1    wreg      void 
  4599 ;; Registers used:
  4600 ;;		wreg, status,2, status,0, pclath, cstack
  4601 ;; Tracked objects:
  4602 ;;		On entry : 0/0
  4603 ;;		On exit  : 0/0
  4604 ;;		Unchanged: 0/0
  4605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4606 ;;      Params:         0       0       0       0       0       0
  4607 ;;      Locals:         0       0       2       0       0       0
  4608 ;;      Temps:          0       0       2       0       0       0
  4609 ;;      Totals:         0       0       4       0       0       0
  4610 ;;Total ram usage:        4 bytes
  4611 ;; Hardware stack levels used: 1
  4612 ;; Hardware stack levels required when called: 7
  4613 ;; This function calls:
  4614 ;;		___lwdiv
  4615 ;;		___wmul
  4616 ;;		_fluxpos
  4617 ;; This function is called by:
  4618 ;;		_controlchoose
  4619 ;; This function uses a non-reentrant model
  4620 ;;
  4621                           
  4622     0372                     _fluxcontrol:	
  4623                           ;psect for function _fluxcontrol
  4624                           
  4625     0372                     l2996:	
  4626                           ;incstack = 0
  4627                           ; Regs used in _fluxcontrol: [wreg+status,2+status,0+pclath+cstack]
  4628                           
  4629                           
  4630                           ;main.c: 52:     error = (ballset-balldist)*10;
  4631     0372  0021               	movlb	1	; select bank1
  4632     0373  0832               	movf	_balldist^(0+128),w
  4633     0374  0230               	subwf	_ballset^(0+128),w
  4634     0375  00C6               	movwf	___wmul@multiplier^(0+128)
  4635     0376  0833               	movf	(_balldist+1)^(0+128),w
  4636     0377  3B31               	subwfb	(_ballset+1)^(0+128),w
  4637     0378  00C7               	movwf	(___wmul@multiplier+1)^(0+128)
  4638     0379  300A               	movlw	10
  4639     037A  00C8               	movwf	___wmul@multiplicand^(0+128)
  4640     037B  3000               	movlw	0
  4641     037C  00C9               	movwf	(___wmul@multiplicand^(0+128)+1)
  4642     037D  318E  26A9  3183   	fcall	___wmul
  4643     0380  0021               	movlb	1	; select bank1
  4644     0381  0847               	movf	(?___wmul+1)^(0+128),w
  4645     0382  00B5               	movwf	(_error+1)^(0+128)
  4646     0383  0846               	movf	?___wmul^(0+128),w
  4647     0384  00B4               	movwf	_error^(0+128)
  4648     0385                     l2998:
  4649                           
  4650                           ;main.c: 53:     if(error > 150 || error < 150){
  4651     0385  0835               	movf	(_error+1)^(0+128),w
  4652     0386  3A80               	xorlw	128
  4653     0387  00D4               	movwf	??_fluxcontrol^(0+128)
  4654     0388  3080               	movlw	128
  4655     0389  0254               	subwf	??_fluxcontrol^(0+128),w
  4656     038A  1D03               	skipz
  4657     038B  2B8E               	goto	u2045
  4658     038C  3097               	movlw	151
  4659     038D  0234               	subwf	_error^(0+128),w
  4660     038E                     u2045:
  4661     038E  1803               	skipnc
  4662     038F  2B91               	goto	u2041
  4663     0390  2B92               	goto	u2040
  4664     0391                     u2041:
  4665     0391  2BA0               	goto	l3002
  4666     0392                     u2040:
  4667     0392                     l3000:
  4668     0392  0021               	movlb	1	; select bank1
  4669     0393  0835               	movf	(_error+1)^(0+128),w
  4670     0394  3A80               	xorlw	128
  4671     0395  00D4               	movwf	??_fluxcontrol^(0+128)
  4672     0396  3080               	movlw	128
  4673     0397  0254               	subwf	??_fluxcontrol^(0+128),w
  4674     0398  1D03               	skipz
  4675     0399  2B9C               	goto	u2055
  4676     039A  3096               	movlw	150
  4677     039B  0234               	subwf	_error^(0+128),w
  4678     039C                     u2055:
  4679     039C  1803               	skipnc
  4680     039D  2B9F               	goto	u2051
  4681     039E  2BA0               	goto	u2050
  4682     039F                     u2051:
  4683     039F  2C0B               	goto	l682
  4684     03A0                     u2050:
  4685     03A0                     l3002:
  4686     03A0  0021               	movlb	1	; select bank1
  4687     03A1  083D               	movf	_timecontrol^(0+128),w
  4688     03A2  00D4               	movwf	??_fluxcontrol^(0+128)
  4689     03A3  01D5               	clrf	(??_fluxcontrol^(0+128)+1)
  4690     03A4  0854               	movf	??_fluxcontrol^(0+128),w
  4691     03A5  00C6               	movwf	___wmul@multiplier^(0+128)
  4692     03A6  0855               	movf	(??_fluxcontrol+1)^(0+128),w
  4693     03A7  00C7               	movwf	(___wmul@multiplier+1)^(0+128)
  4694     03A8  0835               	movf	(_error+1)^(0+128),w
  4695     03A9  00C9               	movwf	(___wmul@multiplicand+1)^(0+128)
  4696     03AA  0834               	movf	_error^(0+128),w
  4697     03AB  00C8               	movwf	___wmul@multiplicand^(0+128)
  4698     03AC  318E  26A9  3183   	fcall	___wmul
  4699     03AF  0021               	movlb	1	; select bank1
  4700     03B0  0847               	movf	(?___wmul+1)^(0+128),w
  4701     03B1  00D7               	movwf	(_fluxcontrol$2026+1)^(0+128)
  4702     03B2  0846               	movf	?___wmul^(0+128),w
  4703     03B3  00D6               	movwf	_fluxcontrol$2026^(0+128)
  4704     03B4  30E8               	movlw	232
  4705     03B5  00CC               	movwf	___lwdiv@divisor^(0+128)
  4706     03B6  3003               	movlw	3
  4707     03B7  00CD               	movwf	(___lwdiv@divisor^(0+128)+1)
  4708     03B8  0857               	movf	(_fluxcontrol$2026+1)^(0+128),w
  4709     03B9  00C7               	movwf	(___wmul@multiplier+1)^(0+128)
  4710     03BA  0856               	movf	_fluxcontrol$2026^(0+128),w
  4711     03BB  00C6               	movwf	___wmul@multiplier^(0+128)
  4712     03BC  3069               	movlw	105
  4713     03BD  00C8               	movwf	___wmul@multiplicand^(0+128)
  4714     03BE  3000               	movlw	0
  4715     03BF  00C9               	movwf	(___wmul@multiplicand^(0+128)+1)
  4716     03C0  318E  26A9  3183   	fcall	___wmul
  4717     03C3  0021               	movlb	1	; select bank1
  4718     03C4  0847               	movf	(?___wmul+1)^(0+128),w
  4719     03C5  00CF               	movwf	(___lwdiv@dividend+1)^(0+128)
  4720     03C6  0846               	movf	?___wmul^(0+128),w
  4721     03C7  00CE               	movwf	___lwdiv@dividend^(0+128)
  4722     03C8  318F  2784  3183   	fcall	___lwdiv
  4723     03CB  0021               	movlb	1	; select bank1
  4724     03CC  084C               	movf	?___lwdiv^(0+128),w
  4725     03CD  07AC               	addwf	_outputsum^(0+128),f
  4726     03CE  084D               	movf	(?___lwdiv+1)^(0+128),w
  4727     03CF  3DAD               	addwfc	(_outputsum+1)^(0+128),f
  4728     03D0                     l3004:
  4729                           
  4730                           ;main.c: 55:         if (outputsum > 45000) outputsum = 45000;
  4731     03D0  30AF               	movlw	175
  4732     03D1  022D               	subwf	(_outputsum+1)^(0+128),w
  4733     03D2  30C9               	movlw	201
  4734     03D3  1903               	skipnz
  4735     03D4  022C               	subwf	_outputsum^(0+128),w
  4736     03D5  1C03               	skipc
  4737     03D6  2BD8               	goto	u2061
  4738     03D7  2BD9               	goto	u2060
  4739     03D8                     u2061:
  4740     03D8  2BDD               	goto	l3008
  4741     03D9                     u2060:
  4742     03D9                     l3006:
  4743     03D9  30C8               	movlw	200
  4744     03DA  00AC               	movwf	_outputsum^(0+128)
  4745     03DB  30AF               	movlw	175
  4746     03DC  00AD               	movwf	(_outputsum^(0+128)+1)
  4747     03DD                     l3008:
  4748                           
  4749                           ;main.c: 56:         output = ((kpf*error + outputsum)/100);
  4750     03DD  3064               	movlw	100
  4751     03DE  00CC               	movwf	___lwdiv@divisor^(0+128)
  4752     03DF  3000               	movlw	0
  4753     03E0  00CD               	movwf	(___lwdiv@divisor^(0+128)+1)
  4754     03E1  0835               	movf	(_error+1)^(0+128),w
  4755     03E2  00C7               	movwf	(___wmul@multiplier+1)^(0+128)
  4756     03E3  0834               	movf	_error^(0+128),w
  4757     03E4  00C6               	movwf	___wmul@multiplier^(0+128)
  4758     03E5  302D               	movlw	45
  4759     03E6  00C8               	movwf	___wmul@multiplicand^(0+128)
  4760     03E7  3000               	movlw	0
  4761     03E8  00C9               	movwf	(___wmul@multiplicand^(0+128)+1)
  4762     03E9  318E  26A9  3183   	fcall	___wmul
  4763     03EC  0021               	movlb	1	; select bank1
  4764     03ED  082C               	movf	_outputsum^(0+128),w
  4765     03EE  0746               	addwf	?___wmul^(0+128),w
  4766     03EF  00CE               	movwf	___lwdiv@dividend^(0+128)
  4767     03F0  082D               	movf	(_outputsum+1)^(0+128),w
  4768     03F1  3D47               	addwfc	(?___wmul+1)^(0+128),w
  4769     03F2  00CF               	movwf	(___lwdiv@dividend+1)^(0+128)
  4770     03F3  318F  2784  3183   	fcall	___lwdiv
  4771     03F6  0021               	movlb	1	; select bank1
  4772     03F7  084D               	movf	(?___lwdiv+1)^(0+128),w
  4773     03F8  00AB               	movwf	(_output+1)^(0+128)
  4774     03F9  084C               	movf	?___lwdiv^(0+128),w
  4775     03FA  00AA               	movwf	_output^(0+128)
  4776     03FB                     l3010:
  4777                           
  4778                           ;main.c: 57:         if (output > 450) output = 450;
  4779     03FB  3001               	movlw	1
  4780     03FC  022B               	subwf	(_output+1)^(0+128),w
  4781     03FD  30C3               	movlw	195
  4782     03FE  1903               	skipnz
  4783     03FF  022A               	subwf	_output^(0+128),w
  4784     0400  1C03               	skipc
  4785     0401  2C03               	goto	u2071
  4786     0402  2C04               	goto	u2070
  4787     0403                     u2071:
  4788     0403  2C08               	goto	l3014
  4789     0404                     u2070:
  4790     0404                     l3012:
  4791     0404  30C2               	movlw	194
  4792     0405  00AA               	movwf	_output^(0+128)
  4793     0406  3001               	movlw	1
  4794     0407  00AB               	movwf	(_output^(0+128)+1)
  4795     0408                     l3014:
  4796                           
  4797                           ;main.c: 58:         fluxpos();
  4798     0408  318F  275A  3183   	fcall	_fluxpos
  4799     040B                     l682:
  4800     040B  0008               	return
  4801     040C                     __end_of_fluxcontrol:
  4802                           
  4803                           	psect	text8
  4804     0F5A                     __ptext8:	
  4805 ;; *************** function _fluxpos *****************
  4806 ;; Defined at:
  4807 ;;		line 73 in file "main.c"
  4808 ;; Parameters:    Size  Location     Type
  4809 ;;		None
  4810 ;; Auto vars:     Size  Location     Type
  4811 ;;		None
  4812 ;; Return value:  Size  Location     Type
  4813 ;;                  1    wreg      void 
  4814 ;; Registers used:
  4815 ;;		wreg, status,2, status,0
  4816 ;; Tracked objects:
  4817 ;;		On entry : 0/0
  4818 ;;		On exit  : 0/0
  4819 ;;		Unchanged: 0/0
  4820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4821 ;;      Params:         0       0       0       0       0       0
  4822 ;;      Locals:         0       0       0       0       0       0
  4823 ;;      Temps:          0       0       1       0       0       0
  4824 ;;      Totals:         0       0       1       0       0       0
  4825 ;;Total ram usage:        1 bytes
  4826 ;; Hardware stack levels used: 1
  4827 ;; Hardware stack levels required when called: 6
  4828 ;; This function calls:
  4829 ;;		Nothing
  4830 ;; This function is called by:
  4831 ;;		_fluxcontrol
  4832 ;; This function uses a non-reentrant model
  4833 ;;
  4834                           
  4835     0F5A                     _fluxpos:	
  4836                           ;psect for function _fluxpos
  4837                           
  4838     0F5A                     l2648:	
  4839                           ;incstack = 0
  4840                           ; Regs used in _fluxpos: [wreg+status,2+status,0]
  4841                           
  4842                           
  4843                           ;main.c: 74:     flux = output - position;
  4844     0F5A  0020               	movlb	0	; select bank0
  4845     0F5B  085C               	movf	_position,w
  4846     0F5C  0021               	movlb	1	; select bank1
  4847     0F5D  022A               	subwf	_output^(0+128),w
  4848     0F5E  0020               	movlb	0	; select bank0
  4849     0F5F  00E8               	movwf	_flux
  4850     0F60  085D               	movf	_position+1,w
  4851     0F61  0021               	movlb	1	; select bank1
  4852     0F62  3B2B               	subwfb	(_output+1)^(0+128),w
  4853     0F63  0020               	movlb	0	; select bank0
  4854     0F64  00E9               	movwf	_flux+1
  4855     0F65                     l2650:
  4856                           
  4857                           ;main.c: 75:     if(flux>0) sentido = 0;
  4858     0F65  0869               	movf	_flux+1,w
  4859     0F66  3A80               	xorlw	128
  4860     0F67  0021               	movlb	1	; select bank1
  4861     0F68  00C6               	movwf	??_fluxpos^(0+128)
  4862     0F69  3080               	movlw	128
  4863     0F6A  0246               	subwf	??_fluxpos^(0+128),w
  4864     0F6B  1D03               	skipz
  4865     0F6C  2F70               	goto	u1715
  4866     0F6D  3001               	movlw	1
  4867     0F6E  0020               	movlb	0	; select bank0
  4868     0F6F  0268               	subwf	_flux,w
  4869     0F70                     u1715:
  4870     0F70  1C03               	skipc
  4871     0F71  2F73               	goto	u1711
  4872     0F72  2F74               	goto	u1710
  4873     0F73                     u1711:
  4874     0F73  2F77               	goto	l693
  4875     0F74                     u1710:
  4876     0F74                     l2652:
  4877     0F74  0021               	movlb	1	; select bank1
  4878     0F75  01BC               	clrf	_sentido^(0+128)
  4879     0F76  2F83               	goto	l697
  4880     0F77                     l693:	
  4881                           ;main.c: 76:     else if( flux <0) sentido = 1;
  4882                           
  4883     0F77  0020               	movlb	0	; select bank0
  4884     0F78  1FE9               	btfss	_flux+1,7
  4885     0F79  2F7B               	goto	u1721
  4886     0F7A  2F7C               	goto	u1720
  4887     0F7B                     u1721:
  4888     0F7B  2F80               	goto	l2656
  4889     0F7C                     u1720:
  4890     0F7C                     l2654:
  4891     0F7C  0021               	movlb	1	; select bank1
  4892     0F7D  01BC               	clrf	_sentido^(0+128)
  4893     0F7E  0ABC               	incf	_sentido^(0+128),f
  4894     0F7F  2F83               	goto	l697
  4895     0F80                     l2656:
  4896     0F80  3002               	movlw	2
  4897     0F81  0021               	movlb	1	; select bank1
  4898     0F82  00BC               	movwf	_sentido^(0+128)
  4899     0F83                     l697:
  4900     0F83  0008               	return
  4901     0F84                     __end_of_fluxpos:
  4902                           
  4903                           	psect	text9
  4904     0EA9                     __ptext9:	
  4905 ;; *************** function ___wmul *****************
  4906 ;; Defined at:
  4907 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul16.c"
  4908 ;; Parameters:    Size  Location     Type
  4909 ;;  multiplier      2    0[BANK1 ] unsigned int 
  4910 ;;  multiplicand    2    2[BANK1 ] unsigned int 
  4911 ;; Auto vars:     Size  Location     Type
  4912 ;;  product         2    4[BANK1 ] unsigned int 
  4913 ;; Return value:  Size  Location     Type
  4914 ;;                  2    0[BANK1 ] unsigned int 
  4915 ;; Registers used:
  4916 ;;		wreg, status,2, status,0
  4917 ;; Tracked objects:
  4918 ;;		On entry : 0/0
  4919 ;;		On exit  : 0/0
  4920 ;;		Unchanged: 0/0
  4921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4922 ;;      Params:         0       0       4       0       0       0
  4923 ;;      Locals:         0       0       2       0       0       0
  4924 ;;      Temps:          0       0       0       0       0       0
  4925 ;;      Totals:         0       0       6       0       0       0
  4926 ;;Total ram usage:        6 bytes
  4927 ;; Hardware stack levels used: 1
  4928 ;; Hardware stack levels required when called: 6
  4929 ;; This function calls:
  4930 ;;		Nothing
  4931 ;; This function is called by:
  4932 ;;		_fluxcontrol
  4933 ;;		_pwmcontrol
  4934 ;; This function uses a non-reentrant model
  4935 ;;
  4936                           
  4937     0EA9                     ___wmul:	
  4938                           ;psect for function ___wmul
  4939                           
  4940     0EA9                     l2742:	
  4941                           ;incstack = 0
  4942                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4943                           
  4944     0EA9  0021               	movlb	1	; select bank1
  4945     0EAA  01CA               	clrf	___wmul@product^(0+128)
  4946     0EAB  01CB               	clrf	(___wmul@product+1)^(0+128)
  4947     0EAC                     l2744:
  4948     0EAC  1C46               	btfss	___wmul@multiplier^(0+128),0
  4949     0EAD  2EAF               	goto	u1771
  4950     0EAE  2EB0               	goto	u1770
  4951     0EAF                     u1771:
  4952     0EAF  2EB4               	goto	l996
  4953     0EB0                     u1770:
  4954     0EB0                     l2746:
  4955     0EB0  0848               	movf	___wmul@multiplicand^(0+128),w
  4956     0EB1  07CA               	addwf	___wmul@product^(0+128),f
  4957     0EB2  0849               	movf	(___wmul@multiplicand+1)^(0+128),w
  4958     0EB3  3DCB               	addwfc	(___wmul@product+1)^(0+128),f
  4959     0EB4                     l996:
  4960     0EB4  3001               	movlw	1
  4961     0EB5                     u1785:
  4962     0EB5  35C8               	lslf	___wmul@multiplicand^(0+128),f
  4963     0EB6  0DC9               	rlf	(___wmul@multiplicand+1)^(0+128),f
  4964     0EB7  0B89               	decfsz	9,f
  4965     0EB8  2EB5               	goto	u1785
  4966     0EB9                     l2748:
  4967     0EB9  3001               	movlw	1
  4968     0EBA                     u1795:
  4969     0EBA  36C7               	lsrf	(___wmul@multiplier+1)^(0+128),f
  4970     0EBB  0CC6               	rrf	___wmul@multiplier^(0+128),f
  4971     0EBC  0B89               	decfsz	9,f
  4972     0EBD  2EBA               	goto	u1795
  4973     0EBE                     l2750:
  4974     0EBE  0846               	movf	___wmul@multiplier^(0+128),w
  4975     0EBF  0447               	iorwf	(___wmul@multiplier+1)^(0+128),w
  4976     0EC0  1D03               	btfss	3,2
  4977     0EC1  2EC3               	goto	u1801
  4978     0EC2  2EC4               	goto	u1800
  4979     0EC3                     u1801:
  4980     0EC3  2EAC               	goto	l2744
  4981     0EC4                     u1800:
  4982     0EC4                     l2752:
  4983     0EC4  084B               	movf	(___wmul@product+1)^(0+128),w
  4984     0EC5  00C7               	movwf	(?___wmul+1)^(0+128)
  4985     0EC6  084A               	movf	___wmul@product^(0+128),w
  4986     0EC7  00C6               	movwf	?___wmul^(0+128)
  4987     0EC8                     l998:
  4988     0EC8  0008               	return
  4989     0EC9                     __end_of___wmul:
  4990                           
  4991                           	psect	text10
  4992     0F84                     __ptext10:	
  4993 ;; *************** function ___lwdiv *****************
  4994 ;; Defined at:
  4995 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lwdiv.c"
  4996 ;; Parameters:    Size  Location     Type
  4997 ;;  divisor         2    6[BANK1 ] unsigned int 
  4998 ;;  dividend        2    8[BANK1 ] unsigned int 
  4999 ;; Auto vars:     Size  Location     Type
  5000 ;;  quotient        2   11[BANK1 ] unsigned int 
  5001 ;;  counter         1   13[BANK1 ] unsigned char 
  5002 ;; Return value:  Size  Location     Type
  5003 ;;                  2    6[BANK1 ] unsigned int 
  5004 ;; Registers used:
  5005 ;;		wreg, status,2, status,0
  5006 ;; Tracked objects:
  5007 ;;		On entry : 0/0
  5008 ;;		On exit  : 0/0
  5009 ;;		Unchanged: 0/0
  5010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5011 ;;      Params:         0       0       4       0       0       0
  5012 ;;      Locals:         0       0       3       0       0       0
  5013 ;;      Temps:          0       0       1       0       0       0
  5014 ;;      Totals:         0       0       8       0       0       0
  5015 ;;Total ram usage:        8 bytes
  5016 ;; Hardware stack levels used: 1
  5017 ;; Hardware stack levels required when called: 6
  5018 ;; This function calls:
  5019 ;;		Nothing
  5020 ;; This function is called by:
  5021 ;;		_fluxcontrol
  5022 ;;		_pwmcontrol
  5023 ;; This function uses a non-reentrant model
  5024 ;;
  5025                           
  5026     0F84                     ___lwdiv:	
  5027                           ;psect for function ___lwdiv
  5028                           
  5029     0F84                     l2756:	
  5030                           ;incstack = 0
  5031                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5032                           
  5033     0F84  0021               	movlb	1	; select bank1
  5034     0F85  01D1               	clrf	___lwdiv@quotient^(0+128)
  5035     0F86  01D2               	clrf	(___lwdiv@quotient+1)^(0+128)
  5036     0F87                     l2758:
  5037     0F87  084C               	movf	___lwdiv@divisor^(0+128),w
  5038     0F88  044D               	iorwf	(___lwdiv@divisor+1)^(0+128),w
  5039     0F89  1903               	btfsc	3,2
  5040     0F8A  2F8C               	goto	u1811
  5041     0F8B  2F8D               	goto	u1810
  5042     0F8C                     u1811:
  5043     0F8C  2FBC               	goto	l2778
  5044     0F8D                     u1810:
  5045     0F8D                     l2760:
  5046     0F8D  01D3               	clrf	___lwdiv@counter^(0+128)
  5047     0F8E  0AD3               	incf	___lwdiv@counter^(0+128),f
  5048     0F8F  2F99               	goto	l2766
  5049     0F90                     l2762:
  5050     0F90  3001               	movlw	1
  5051     0F91                     u1825:
  5052     0F91  35CC               	lslf	___lwdiv@divisor^(0+128),f
  5053     0F92  0DCD               	rlf	(___lwdiv@divisor+1)^(0+128),f
  5054     0F93  0B89               	decfsz	9,f
  5055     0F94  2F91               	goto	u1825
  5056     0F95                     l2764:
  5057     0F95  3001               	movlw	1
  5058     0F96  00D0               	movwf	??___lwdiv^(0+128)
  5059     0F97  0850               	movf	??___lwdiv^(0+128),w
  5060     0F98  07D3               	addwf	___lwdiv@counter^(0+128),f
  5061     0F99                     l2766:
  5062     0F99  1FCD               	btfss	(___lwdiv@divisor+1)^(0+128),7
  5063     0F9A  2F9C               	goto	u1831
  5064     0F9B  2F9D               	goto	u1830
  5065     0F9C                     u1831:
  5066     0F9C  2F90               	goto	l2762
  5067     0F9D                     u1830:
  5068     0F9D                     l2768:
  5069     0F9D  3001               	movlw	1
  5070     0F9E                     u1845:
  5071     0F9E  35D1               	lslf	___lwdiv@quotient^(0+128),f
  5072     0F9F  0DD2               	rlf	(___lwdiv@quotient+1)^(0+128),f
  5073     0FA0  0B89               	decfsz	9,f
  5074     0FA1  2F9E               	goto	u1845
  5075     0FA2  084D               	movf	(___lwdiv@divisor+1)^(0+128),w
  5076     0FA3  024F               	subwf	(___lwdiv@dividend+1)^(0+128),w
  5077     0FA4  1D03               	skipz
  5078     0FA5  2FA8               	goto	u1855
  5079     0FA6  084C               	movf	___lwdiv@divisor^(0+128),w
  5080     0FA7  024E               	subwf	___lwdiv@dividend^(0+128),w
  5081     0FA8                     u1855:
  5082     0FA8  1C03               	skipc
  5083     0FA9  2FAB               	goto	u1851
  5084     0FAA  2FAC               	goto	u1850
  5085     0FAB                     u1851:
  5086     0FAB  2FB1               	goto	l2774
  5087     0FAC                     u1850:
  5088     0FAC                     l2770:
  5089     0FAC  084C               	movf	___lwdiv@divisor^(0+128),w
  5090     0FAD  02CE               	subwf	___lwdiv@dividend^(0+128),f
  5091     0FAE  084D               	movf	(___lwdiv@divisor+1)^(0+128),w
  5092     0FAF  3BCF               	subwfb	(___lwdiv@dividend+1)^(0+128),f
  5093     0FB0                     l2772:
  5094     0FB0  1451               	bsf	___lwdiv@quotient^(0+128),0
  5095     0FB1                     l2774:
  5096     0FB1  3001               	movlw	1
  5097     0FB2                     u1865:
  5098     0FB2  36CD               	lsrf	(___lwdiv@divisor+1)^(0+128),f
  5099     0FB3  0CCC               	rrf	___lwdiv@divisor^(0+128),f
  5100     0FB4  0B89               	decfsz	9,f
  5101     0FB5  2FB2               	goto	u1865
  5102     0FB6                     l2776:
  5103     0FB6  3001               	movlw	1
  5104     0FB7  02D3               	subwf	___lwdiv@counter^(0+128),f
  5105     0FB8  1D03               	btfss	3,2
  5106     0FB9  2FBB               	goto	u1871
  5107     0FBA  2FBC               	goto	u1870
  5108     0FBB                     u1871:
  5109     0FBB  2F9D               	goto	l2768
  5110     0FBC                     u1870:
  5111     0FBC                     l2778:
  5112     0FBC  0852               	movf	(___lwdiv@quotient+1)^(0+128),w
  5113     0FBD  00CD               	movwf	(?___lwdiv+1)^(0+128)
  5114     0FBE  0851               	movf	___lwdiv@quotient^(0+128),w
  5115     0FBF  00CC               	movwf	?___lwdiv^(0+128)
  5116     0FC0                     l1276:
  5117     0FC0  0008               	return
  5118     0FC1                     __end_of___lwdiv:
  5119                           
  5120                           	psect	text11
  5121     0C87                     __ptext11:	
  5122 ;; *************** function _TMR4_StartTimer *****************
  5123 ;; Defined at:
  5124 ;;		line 79 in file "mcc_generated_files/tmr4.c"
  5125 ;; Parameters:    Size  Location     Type
  5126 ;;		None
  5127 ;; Auto vars:     Size  Location     Type
  5128 ;;		None
  5129 ;; Return value:  Size  Location     Type
  5130 ;;                  1    wreg      void 
  5131 ;; Registers used:
  5132 ;;		None
  5133 ;; Tracked objects:
  5134 ;;		On entry : 0/0
  5135 ;;		On exit  : 0/0
  5136 ;;		Unchanged: 0/0
  5137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5138 ;;      Params:         0       0       0       0       0       0
  5139 ;;      Locals:         0       0       0       0       0       0
  5140 ;;      Temps:          0       0       0       0       0       0
  5141 ;;      Totals:         0       0       0       0       0       0
  5142 ;;Total ram usage:        0 bytes
  5143 ;; Hardware stack levels used: 1
  5144 ;; Hardware stack levels required when called: 6
  5145 ;; This function calls:
  5146 ;;		Nothing
  5147 ;; This function is called by:
  5148 ;;		_controlchoose
  5149 ;; This function uses a non-reentrant model
  5150 ;;
  5151                           
  5152     0C87                     _TMR4_StartTimer:	
  5153                           ;psect for function _TMR4_StartTimer
  5154                           
  5155     0C87                     l2960:	
  5156                           ;incstack = 0
  5157                           ; Regs used in _TMR4_StartTimer: []
  5158                           
  5159                           
  5160                           ;mcc_generated_files/tmr4.c: 82:     T4CONbits.TMR4ON = 1;
  5161     0C87  0028               	movlb	8	; select bank8
  5162     0C88  1517               	bsf	23,2	;volatile
  5163     0C89                     l137:
  5164     0C89  0008               	return
  5165     0C8A                     __end_of_TMR4_StartTimer:
  5166                           
  5167                           	psect	text12
  5168     0CE5                     __ptext12:	
  5169 ;; *************** function _TMR4_LoadPeriodRegister *****************
  5170 ;; Defined at:
  5171 ;;		line 106 in file "mcc_generated_files/tmr4.c"
  5172 ;; Parameters:    Size  Location     Type
  5173 ;;  periodVal       1    wreg     unsigned char 
  5174 ;; Auto vars:     Size  Location     Type
  5175 ;;  periodVal       1    0[BANK1 ] unsigned char 
  5176 ;; Return value:  Size  Location     Type
  5177 ;;                  1    wreg      void 
  5178 ;; Registers used:
  5179 ;;		wreg
  5180 ;; Tracked objects:
  5181 ;;		On entry : 0/0
  5182 ;;		On exit  : 0/0
  5183 ;;		Unchanged: 0/0
  5184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5185 ;;      Params:         0       0       0       0       0       0
  5186 ;;      Locals:         0       0       1       0       0       0
  5187 ;;      Temps:          0       0       0       0       0       0
  5188 ;;      Totals:         0       0       1       0       0       0
  5189 ;;Total ram usage:        1 bytes
  5190 ;; Hardware stack levels used: 1
  5191 ;; Hardware stack levels required when called: 6
  5192 ;; This function calls:
  5193 ;;		Nothing
  5194 ;; This function is called by:
  5195 ;;		_controlchoose
  5196 ;; This function uses a non-reentrant model
  5197 ;;
  5198                           
  5199     0CE5                     _TMR4_LoadPeriodRegister:	
  5200                           ;psect for function _TMR4_LoadPeriodRegister
  5201                           
  5202                           
  5203                           ;incstack = 0
  5204                           ; Regs used in _TMR4_LoadPeriodRegister: [wreg]
  5205                           ;TMR4_LoadPeriodRegister@periodVal stored from wreg
  5206     0CE5  0021               	movlb	1	; select bank1
  5207     0CE6  00C6               	movwf	TMR4_LoadPeriodRegister@periodVal^(0+128)
  5208     0CE7                     l2962:
  5209                           
  5210                           ;mcc_generated_files/tmr4.c: 106: void TMR4_LoadPeriodRegister(uint8_t periodVal);mcc_ge
      +                          nerated_files/tmr4.c: 107: {;mcc_generated_files/tmr4.c: 108:    PR4 = periodVal;
  5211     0CE7  0846               	movf	TMR4_LoadPeriodRegister@periodVal^(0+128),w
  5212     0CE8  0028               	movlb	8	; select bank8
  5213     0CE9  0096               	movwf	22	;volatile
  5214     0CEA                     l149:
  5215     0CEA  0008               	return
  5216     0CEB                     __end_of_TMR4_LoadPeriodRegister:
  5217                           
  5218                           	psect	text13
  5219     0C84                     __ptext13:	
  5220 ;; *************** function _TMR6_StopTimer *****************
  5221 ;; Defined at:
  5222 ;;		line 85 in file "mcc_generated_files/tmr6.c"
  5223 ;; Parameters:    Size  Location     Type
  5224 ;;		None
  5225 ;; Auto vars:     Size  Location     Type
  5226 ;;		None
  5227 ;; Return value:  Size  Location     Type
  5228 ;;                  1    wreg      void 
  5229 ;; Registers used:
  5230 ;;		None
  5231 ;; Tracked objects:
  5232 ;;		On entry : 0/0
  5233 ;;		On exit  : 0/0
  5234 ;;		Unchanged: 0/0
  5235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5236 ;;      Params:         0       0       0       0       0       0
  5237 ;;      Locals:         0       0       0       0       0       0
  5238 ;;      Temps:          0       0       0       0       0       0
  5239 ;;      Totals:         0       0       0       0       0       0
  5240 ;;Total ram usage:        0 bytes
  5241 ;; Hardware stack levels used: 1
  5242 ;; Hardware stack levels required when called: 6
  5243 ;; This function calls:
  5244 ;;		Nothing
  5245 ;; This function is called by:
  5246 ;;		_main
  5247 ;; This function uses a non-reentrant model
  5248 ;;
  5249                           
  5250     0C84                     _TMR6_StopTimer:	
  5251                           ;psect for function _TMR6_StopTimer
  5252                           
  5253     0C84                     l3150:	
  5254                           ;incstack = 0
  5255                           ; Regs used in _TMR6_StopTimer: []
  5256                           
  5257                           
  5258                           ;mcc_generated_files/tmr6.c: 88:     T6CONbits.TMR6ON = 0;
  5259     0C84  0028               	movlb	8	; select bank8
  5260     0C85  111E               	bcf	30,2	;volatile
  5261     0C86                     l482:
  5262     0C86  0008               	return
  5263     0C87                     __end_of_TMR6_StopTimer:
  5264                           
  5265                           	psect	text14
  5266     0C81                     __ptext14:	
  5267 ;; *************** function _TMR6_StartTimer *****************
  5268 ;; Defined at:
  5269 ;;		line 79 in file "mcc_generated_files/tmr6.c"
  5270 ;; Parameters:    Size  Location     Type
  5271 ;;		None
  5272 ;; Auto vars:     Size  Location     Type
  5273 ;;		None
  5274 ;; Return value:  Size  Location     Type
  5275 ;;                  1    wreg      void 
  5276 ;; Registers used:
  5277 ;;		None
  5278 ;; Tracked objects:
  5279 ;;		On entry : 0/0
  5280 ;;		On exit  : 0/0
  5281 ;;		Unchanged: 0/0
  5282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5283 ;;      Params:         0       0       0       0       0       0
  5284 ;;      Locals:         0       0       0       0       0       0
  5285 ;;      Temps:          0       0       0       0       0       0
  5286 ;;      Totals:         0       0       0       0       0       0
  5287 ;;Total ram usage:        0 bytes
  5288 ;; Hardware stack levels used: 1
  5289 ;; Hardware stack levels required when called: 6
  5290 ;; This function calls:
  5291 ;;		Nothing
  5292 ;; This function is called by:
  5293 ;;		_main
  5294 ;; This function uses a non-reentrant model
  5295 ;;
  5296                           
  5297     0C81                     _TMR6_StartTimer:	
  5298                           ;psect for function _TMR6_StartTimer
  5299                           
  5300     0C81                     l3148:	
  5301                           ;incstack = 0
  5302                           ; Regs used in _TMR6_StartTimer: []
  5303                           
  5304                           
  5305                           ;mcc_generated_files/tmr6.c: 82:     T6CONbits.TMR6ON = 1;
  5306     0C81  0028               	movlb	8	; select bank8
  5307     0C82  151E               	bsf	30,2	;volatile
  5308     0C83                     l479:
  5309     0C83  0008               	return
  5310     0C84                     __end_of_TMR6_StartTimer:
  5311                           
  5312                           	psect	text15
  5313     0CDF                     __ptext15:	
  5314 ;; *************** function _TMR6_ReadTimer *****************
  5315 ;; Defined at:
  5316 ;;		line 91 in file "mcc_generated_files/tmr6.c"
  5317 ;; Parameters:    Size  Location     Type
  5318 ;;		None
  5319 ;; Auto vars:     Size  Location     Type
  5320 ;;  readVal         1    0[BANK1 ] unsigned char 
  5321 ;; Return value:  Size  Location     Type
  5322 ;;                  1    wreg      unsigned char 
  5323 ;; Registers used:
  5324 ;;		wreg
  5325 ;; Tracked objects:
  5326 ;;		On entry : 0/0
  5327 ;;		On exit  : 0/0
  5328 ;;		Unchanged: 0/0
  5329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5330 ;;      Params:         0       0       0       0       0       0
  5331 ;;      Locals:         0       0       1       0       0       0
  5332 ;;      Temps:          0       0       0       0       0       0
  5333 ;;      Totals:         0       0       1       0       0       0
  5334 ;;Total ram usage:        1 bytes
  5335 ;; Hardware stack levels used: 1
  5336 ;; Hardware stack levels required when called: 6
  5337 ;; This function calls:
  5338 ;;		Nothing
  5339 ;; This function is called by:
  5340 ;;		_main
  5341 ;; This function uses a non-reentrant model
  5342 ;;
  5343                           
  5344     0CDF                     _TMR6_ReadTimer:	
  5345                           ;psect for function _TMR6_ReadTimer
  5346                           
  5347     0CDF                     l3152:	
  5348                           ;incstack = 0
  5349                           ; Regs used in _TMR6_ReadTimer: [wreg]
  5350                           
  5351                           
  5352                           ;mcc_generated_files/tmr6.c: 93:     uint8_t readVal;;mcc_generated_files/tmr6.c: 95:   
      +                            readVal = TMR6;
  5353     0CDF  0028               	movlb	8	; select bank8
  5354     0CE0  081C               	movf	28,w	;volatile
  5355     0CE1  0021               	movlb	1	; select bank1
  5356     0CE2  00C6               	movwf	TMR6_ReadTimer@readVal^(0+128)
  5357                           
  5358                           ;mcc_generated_files/tmr6.c: 97:     return readVal;
  5359     0CE3  0846               	movf	TMR6_ReadTimer@readVal^(0+128),w
  5360     0CE4                     l485:
  5361     0CE4  0008               	return
  5362     0CE5                     __end_of_TMR6_ReadTimer:
  5363                           
  5364                           	psect	text16
  5365     0CD9                     __ptext16:	
  5366 ;; *************** function _TMR6_LoadPeriodRegister *****************
  5367 ;; Defined at:
  5368 ;;		line 106 in file "mcc_generated_files/tmr6.c"
  5369 ;; Parameters:    Size  Location     Type
  5370 ;;  periodVal       1    wreg     unsigned char 
  5371 ;; Auto vars:     Size  Location     Type
  5372 ;;  periodVal       1    0[BANK1 ] unsigned char 
  5373 ;; Return value:  Size  Location     Type
  5374 ;;                  1    wreg      void 
  5375 ;; Registers used:
  5376 ;;		wreg
  5377 ;; Tracked objects:
  5378 ;;		On entry : 0/0
  5379 ;;		On exit  : 0/0
  5380 ;;		Unchanged: 0/0
  5381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5382 ;;      Params:         0       0       0       0       0       0
  5383 ;;      Locals:         0       0       1       0       0       0
  5384 ;;      Temps:          0       0       0       0       0       0
  5385 ;;      Totals:         0       0       1       0       0       0
  5386 ;;Total ram usage:        1 bytes
  5387 ;; Hardware stack levels used: 1
  5388 ;; Hardware stack levels required when called: 6
  5389 ;; This function calls:
  5390 ;;		Nothing
  5391 ;; This function is called by:
  5392 ;;		_main
  5393 ;; This function uses a non-reentrant model
  5394 ;;
  5395                           
  5396     0CD9                     _TMR6_LoadPeriodRegister:	
  5397                           ;psect for function _TMR6_LoadPeriodRegister
  5398                           
  5399                           
  5400                           ;incstack = 0
  5401                           ; Regs used in _TMR6_LoadPeriodRegister: [wreg]
  5402                           ;TMR6_LoadPeriodRegister@periodVal stored from wreg
  5403     0CD9  0021               	movlb	1	; select bank1
  5404     0CDA  00C6               	movwf	TMR6_LoadPeriodRegister@periodVal^(0+128)
  5405     0CDB                     l3156:
  5406                           
  5407                           ;mcc_generated_files/tmr6.c: 106: void TMR6_LoadPeriodRegister(uint8_t periodVal);mcc_ge
      +                          nerated_files/tmr6.c: 107: {;mcc_generated_files/tmr6.c: 108:    PR6 = periodVal;
  5408     0CDB  0846               	movf	TMR6_LoadPeriodRegister@periodVal^(0+128),w
  5409     0CDC  0028               	movlb	8	; select bank8
  5410     0CDD  009D               	movwf	29	;volatile
  5411     0CDE                     l491:
  5412     0CDE  0008               	return
  5413     0CDF                     __end_of_TMR6_LoadPeriodRegister:
  5414                           
  5415                           	psect	text17
  5416     0C7E                     __ptext17:	
  5417 ;; *************** function _TMR4_StopTimer *****************
  5418 ;; Defined at:
  5419 ;;		line 85 in file "mcc_generated_files/tmr4.c"
  5420 ;; Parameters:    Size  Location     Type
  5421 ;;		None
  5422 ;; Auto vars:     Size  Location     Type
  5423 ;;		None
  5424 ;; Return value:  Size  Location     Type
  5425 ;;                  1    wreg      void 
  5426 ;; Registers used:
  5427 ;;		None
  5428 ;; Tracked objects:
  5429 ;;		On entry : 0/0
  5430 ;;		On exit  : 0/0
  5431 ;;		Unchanged: 0/0
  5432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5433 ;;      Params:         0       0       0       0       0       0
  5434 ;;      Locals:         0       0       0       0       0       0
  5435 ;;      Temps:          0       0       0       0       0       0
  5436 ;;      Totals:         0       0       0       0       0       0
  5437 ;;Total ram usage:        0 bytes
  5438 ;; Hardware stack levels used: 1
  5439 ;; Hardware stack levels required when called: 6
  5440 ;; This function calls:
  5441 ;;		Nothing
  5442 ;; This function is called by:
  5443 ;;		_main
  5444 ;; This function uses a non-reentrant model
  5445 ;;
  5446                           
  5447     0C7E                     _TMR4_StopTimer:	
  5448                           ;psect for function _TMR4_StopTimer
  5449                           
  5450     0C7E                     l3084:	
  5451                           ;incstack = 0
  5452                           ; Regs used in _TMR4_StopTimer: []
  5453                           
  5454                           
  5455                           ;mcc_generated_files/tmr4.c: 88:     T4CONbits.TMR4ON = 0;
  5456     0C7E  0028               	movlb	8	; select bank8
  5457     0C7F  1117               	bcf	23,2	;volatile
  5458     0C80                     l140:
  5459     0C80  0008               	return
  5460     0C81                     __end_of_TMR4_StopTimer:
  5461                           
  5462                           	psect	text18
  5463     0CD3                     __ptext18:	
  5464 ;; *************** function _TMR4_ReadTimer *****************
  5465 ;; Defined at:
  5466 ;;		line 91 in file "mcc_generated_files/tmr4.c"
  5467 ;; Parameters:    Size  Location     Type
  5468 ;;		None
  5469 ;; Auto vars:     Size  Location     Type
  5470 ;;  readVal         1    0[BANK1 ] unsigned char 
  5471 ;; Return value:  Size  Location     Type
  5472 ;;                  1    wreg      unsigned char 
  5473 ;; Registers used:
  5474 ;;		wreg
  5475 ;; Tracked objects:
  5476 ;;		On entry : 0/0
  5477 ;;		On exit  : 0/0
  5478 ;;		Unchanged: 0/0
  5479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5480 ;;      Params:         0       0       0       0       0       0
  5481 ;;      Locals:         0       0       1       0       0       0
  5482 ;;      Temps:          0       0       0       0       0       0
  5483 ;;      Totals:         0       0       1       0       0       0
  5484 ;;Total ram usage:        1 bytes
  5485 ;; Hardware stack levels used: 1
  5486 ;; Hardware stack levels required when called: 6
  5487 ;; This function calls:
  5488 ;;		Nothing
  5489 ;; This function is called by:
  5490 ;;		_main
  5491 ;; This function uses a non-reentrant model
  5492 ;;
  5493                           
  5494     0CD3                     _TMR4_ReadTimer:	
  5495                           ;psect for function _TMR4_ReadTimer
  5496                           
  5497     0CD3                     l3086:	
  5498                           ;incstack = 0
  5499                           ; Regs used in _TMR4_ReadTimer: [wreg]
  5500                           
  5501                           
  5502                           ;mcc_generated_files/tmr4.c: 93:     uint8_t readVal;;mcc_generated_files/tmr4.c: 95:   
      +                            readVal = TMR4;
  5503     0CD3  0028               	movlb	8	; select bank8
  5504     0CD4  0815               	movf	21,w	;volatile
  5505     0CD5  0021               	movlb	1	; select bank1
  5506     0CD6  00C6               	movwf	TMR4_ReadTimer@readVal^(0+128)
  5507                           
  5508                           ;mcc_generated_files/tmr4.c: 97:     return readVal;
  5509     0CD7  0846               	movf	TMR4_ReadTimer@readVal^(0+128),w
  5510     0CD8                     l143:
  5511     0CD8  0008               	return
  5512     0CD9                     __end_of_TMR4_ReadTimer:
  5513                           
  5514                           	psect	text19
  5515     07CD                     __ptext19:	
  5516 ;; *************** function _SYSTEM_Initialize *****************
  5517 ;; Defined at:
  5518 ;;		line 50 in file "mcc_generated_files/mcc.c"
  5519 ;; Parameters:    Size  Location     Type
  5520 ;;		None
  5521 ;; Auto vars:     Size  Location     Type
  5522 ;;		None
  5523 ;; Return value:  Size  Location     Type
  5524 ;;                  1    wreg      void 
  5525 ;; Registers used:
  5526 ;;		wreg, status,2, status,0, pclath, cstack
  5527 ;; Tracked objects:
  5528 ;;		On entry : 0/0
  5529 ;;		On exit  : 0/0
  5530 ;;		Unchanged: 0/0
  5531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5532 ;;      Params:         0       0       0       0       0       0
  5533 ;;      Locals:         0       0       0       0       0       0
  5534 ;;      Temps:          0       0       0       0       0       0
  5535 ;;      Totals:         0       0       0       0       0       0
  5536 ;;Total ram usage:        0 bytes
  5537 ;; Hardware stack levels used: 1
  5538 ;; Hardware stack levels required when called: 8
  5539 ;; This function calls:
  5540 ;;		_ADC_Initialize
  5541 ;;		_CMP1_Initialize
  5542 ;;		_DAC_Initialize
  5543 ;;		_EPWM1_Initialize
  5544 ;;		_EUSART_Initialize
  5545 ;;		_FVR_Initialize
  5546 ;;		_OSCILLATOR_Initialize
  5547 ;;		_PIN_MANAGER_Initialize
  5548 ;;		_TMR0_Initialize
  5549 ;;		_TMR1_Initialize
  5550 ;;		_TMR2_Initialize
  5551 ;;		_TMR4_Initialize
  5552 ;;		_TMR6_Initialize
  5553 ;;		_WDT_Initialize
  5554 ;; This function is called by:
  5555 ;;		_main
  5556 ;; This function uses a non-reentrant model
  5557 ;;
  5558                           
  5559     07CD                     _SYSTEM_Initialize:	
  5560                           ;psect for function _SYSTEM_Initialize
  5561                           
  5562     07CD                     l3076:	
  5563                           ;incstack = 0
  5564                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5565                           
  5566     07CD  318D  25D4  3187   	fcall	_PIN_MANAGER_Initialize
  5567     07D0  318C  24F7  3187   	fcall	_OSCILLATOR_Initialize
  5568     07D3  318C  2496  3187   	fcall	_WDT_Initialize
  5569     07D6  318C  2492  3187   	fcall	_FVR_Initialize
  5570     07D9  318C  24A9  3187   	fcall	_DAC_Initialize
  5571     07DC  318D  2510  3187   	fcall	_TMR4_Initialize
  5572     07DF  318D  256D  3187   	fcall	_TMR2_Initialize
  5573     07E2  318D  257F  3187   	fcall	_TMR0_Initialize
  5574     07E5  318D  251A  3187   	fcall	_TMR6_Initialize
  5575     07E8  318C  24A3  3187   	fcall	_CMP1_Initialize
  5576     07EB  3187  27F8  3187   	fcall	_ADC_Initialize
  5577     07EE  318D  252F  3187   	fcall	_EPWM1_Initialize
  5578     07F1  318E  2653  3187   	fcall	_TMR1_Initialize
  5579     07F4  318F  27C1  3187   	fcall	_EUSART_Initialize
  5580     07F7                     l39:
  5581     07F7  0008               	return
  5582     07F8                     __end_of_SYSTEM_Initialize:
  5583                           
  5584                           	psect	text20
  5585     0C96                     __ptext20:	
  5586 ;; *************** function _WDT_Initialize *****************
  5587 ;; Defined at:
  5588 ;;		line 79 in file "mcc_generated_files/mcc.c"
  5589 ;; Parameters:    Size  Location     Type
  5590 ;;		None
  5591 ;; Auto vars:     Size  Location     Type
  5592 ;;		None
  5593 ;; Return value:  Size  Location     Type
  5594 ;;                  1    wreg      void 
  5595 ;; Registers used:
  5596 ;;		wreg
  5597 ;; Tracked objects:
  5598 ;;		On entry : 0/0
  5599 ;;		On exit  : 0/0
  5600 ;;		Unchanged: 0/0
  5601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5602 ;;      Params:         0       0       0       0       0       0
  5603 ;;      Locals:         0       0       0       0       0       0
  5604 ;;      Temps:          0       0       0       0       0       0
  5605 ;;      Totals:         0       0       0       0       0       0
  5606 ;;Total ram usage:        0 bytes
  5607 ;; Hardware stack levels used: 1
  5608 ;; Hardware stack levels required when called: 6
  5609 ;; This function calls:
  5610 ;;		Nothing
  5611 ;; This function is called by:
  5612 ;;		_SYSTEM_Initialize
  5613 ;; This function uses a non-reentrant model
  5614 ;;
  5615                           
  5616     0C96                     _WDT_Initialize:	
  5617                           ;psect for function _WDT_Initialize
  5618                           
  5619     0C96                     l2846:	
  5620                           ;incstack = 0
  5621                           ; Regs used in _WDT_Initialize: [wreg]
  5622                           
  5623     0C96  3016               	movlw	22
  5624     0C97  0021               	movlb	1	; select bank1
  5625     0C98  0097               	movwf	23	;volatile
  5626     0C99                     l45:
  5627     0C99  0008               	return
  5628     0C9A                     __end_of_WDT_Initialize:
  5629                           
  5630                           	psect	text21
  5631     0D1A                     __ptext21:	
  5632 ;; *************** function _TMR6_Initialize *****************
  5633 ;; Defined at:
  5634 ;;		line 62 in file "mcc_generated_files/tmr6.c"
  5635 ;; Parameters:    Size  Location     Type
  5636 ;;		None
  5637 ;; Auto vars:     Size  Location     Type
  5638 ;;		None
  5639 ;; Return value:  Size  Location     Type
  5640 ;;                  1    wreg      void 
  5641 ;; Registers used:
  5642 ;;		wreg, status,2
  5643 ;; Tracked objects:
  5644 ;;		On entry : 0/0
  5645 ;;		On exit  : 0/0
  5646 ;;		Unchanged: 0/0
  5647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5648 ;;      Params:         0       0       0       0       0       0
  5649 ;;      Locals:         0       0       0       0       0       0
  5650 ;;      Temps:          0       0       0       0       0       0
  5651 ;;      Totals:         0       0       0       0       0       0
  5652 ;;Total ram usage:        0 bytes
  5653 ;; Hardware stack levels used: 1
  5654 ;; Hardware stack levels required when called: 6
  5655 ;; This function calls:
  5656 ;;		Nothing
  5657 ;; This function is called by:
  5658 ;;		_SYSTEM_Initialize
  5659 ;; This function uses a non-reentrant model
  5660 ;;
  5661                           
  5662     0D1A                     _TMR6_Initialize:	
  5663                           ;psect for function _TMR6_Initialize
  5664                           
  5665     0D1A                     l2884:	
  5666                           ;incstack = 0
  5667                           ; Regs used in _TMR6_Initialize: [wreg+status,2]
  5668                           
  5669                           
  5670                           ;mcc_generated_files/tmr6.c: 67:     PR6 = 0xFF;
  5671     0D1A  30FF               	movlw	255
  5672     0D1B  0028               	movlb	8	; select bank8
  5673     0D1C  009D               	movwf	29	;volatile
  5674     0D1D                     l2886:
  5675                           
  5676                           ;mcc_generated_files/tmr6.c: 70:     TMR6 = 0x00;
  5677     0D1D  019C               	clrf	28	;volatile
  5678     0D1E                     l2888:
  5679                           
  5680                           ;mcc_generated_files/tmr6.c: 73:     PIR3bits.TMR6IF = 0;
  5681     0D1E  0020               	movlb	0	; select bank0
  5682     0D1F  1193               	bcf	19,3	;volatile
  5683     0D20                     l2890:
  5684                           
  5685                           ;mcc_generated_files/tmr6.c: 76:     T6CON = 0x4F;
  5686     0D20  304F               	movlw	79
  5687     0D21  0028               	movlb	8	; select bank8
  5688     0D22  009E               	movwf	30	;volatile
  5689     0D23                     l476:
  5690     0D23  0008               	return
  5691     0D24                     __end_of_TMR6_Initialize:
  5692                           
  5693                           	psect	text22
  5694     0D10                     __ptext22:	
  5695 ;; *************** function _TMR4_Initialize *****************
  5696 ;; Defined at:
  5697 ;;		line 62 in file "mcc_generated_files/tmr4.c"
  5698 ;; Parameters:    Size  Location     Type
  5699 ;;		None
  5700 ;; Auto vars:     Size  Location     Type
  5701 ;;		None
  5702 ;; Return value:  Size  Location     Type
  5703 ;;                  1    wreg      void 
  5704 ;; Registers used:
  5705 ;;		wreg, status,2
  5706 ;; Tracked objects:
  5707 ;;		On entry : 0/0
  5708 ;;		On exit  : 0/0
  5709 ;;		Unchanged: 0/0
  5710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5711 ;;      Params:         0       0       0       0       0       0
  5712 ;;      Locals:         0       0       0       0       0       0
  5713 ;;      Temps:          0       0       0       0       0       0
  5714 ;;      Totals:         0       0       0       0       0       0
  5715 ;;Total ram usage:        0 bytes
  5716 ;; Hardware stack levels used: 1
  5717 ;; Hardware stack levels required when called: 6
  5718 ;; This function calls:
  5719 ;;		Nothing
  5720 ;; This function is called by:
  5721 ;;		_SYSTEM_Initialize
  5722 ;; This function uses a non-reentrant model
  5723 ;;
  5724                           
  5725     0D10                     _TMR4_Initialize:	
  5726                           ;psect for function _TMR4_Initialize
  5727                           
  5728     0D10                     l2852:	
  5729                           ;incstack = 0
  5730                           ; Regs used in _TMR4_Initialize: [wreg+status,2]
  5731                           
  5732                           
  5733                           ;mcc_generated_files/tmr4.c: 67:     PR4 = 0xFA;
  5734     0D10  30FA               	movlw	250
  5735     0D11  0028               	movlb	8	; select bank8
  5736     0D12  0096               	movwf	22	;volatile
  5737     0D13                     l2854:
  5738                           
  5739                           ;mcc_generated_files/tmr4.c: 70:     TMR4 = 0x00;
  5740     0D13  0195               	clrf	21	;volatile
  5741     0D14                     l2856:
  5742                           
  5743                           ;mcc_generated_files/tmr4.c: 73:     PIR3bits.TMR4IF = 0;
  5744     0D14  0020               	movlb	0	; select bank0
  5745     0D15  1093               	bcf	19,1	;volatile
  5746     0D16                     l2858:
  5747                           
  5748                           ;mcc_generated_files/tmr4.c: 76:     T4CON = 0x2F;
  5749     0D16  302F               	movlw	47
  5750     0D17  0028               	movlb	8	; select bank8
  5751     0D18  0097               	movwf	23	;volatile
  5752     0D19                     l134:
  5753     0D19  0008               	return
  5754     0D1A                     __end_of_TMR4_Initialize:
  5755                           
  5756                           	psect	text23
  5757     0D6D                     __ptext23:	
  5758 ;; *************** function _TMR2_Initialize *****************
  5759 ;; Defined at:
  5760 ;;		line 64 in file "mcc_generated_files/tmr2.c"
  5761 ;; Parameters:    Size  Location     Type
  5762 ;;		None
  5763 ;; Auto vars:     Size  Location     Type
  5764 ;;		None
  5765 ;; Return value:  Size  Location     Type
  5766 ;;                  1    wreg      void 
  5767 ;; Registers used:
  5768 ;;		wreg, status,2, status,0, pclath, cstack
  5769 ;; Tracked objects:
  5770 ;;		On entry : 0/0
  5771 ;;		On exit  : 0/0
  5772 ;;		Unchanged: 0/0
  5773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5774 ;;      Params:         0       0       0       0       0       0
  5775 ;;      Locals:         0       0       0       0       0       0
  5776 ;;      Temps:          0       0       0       0       0       0
  5777 ;;      Totals:         0       0       0       0       0       0
  5778 ;;Total ram usage:        0 bytes
  5779 ;; Hardware stack levels used: 1
  5780 ;; Hardware stack levels required when called: 7
  5781 ;; This function calls:
  5782 ;;		_TMR2_SetInterruptHandler
  5783 ;; This function is called by:
  5784 ;;		_SYSTEM_Initialize
  5785 ;; This function uses a non-reentrant model
  5786 ;;
  5787                           
  5788     0D6D                     _TMR2_Initialize:	
  5789                           ;psect for function _TMR2_Initialize
  5790                           
  5791     0D6D                     l2860:	
  5792                           ;incstack = 0
  5793                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5794                           
  5795                           
  5796                           ;mcc_generated_files/tmr2.c: 69:     PR2 = 0xFF;
  5797     0D6D  30FF               	movlw	255
  5798     0D6E  0020               	movlb	0	; select bank0
  5799     0D6F  009B               	movwf	27	;volatile
  5800     0D70                     l2862:
  5801                           
  5802                           ;mcc_generated_files/tmr2.c: 72:     TMR2 = 0x00;
  5803     0D70  019A               	clrf	26	;volatile
  5804     0D71                     l2864:
  5805                           
  5806                           ;mcc_generated_files/tmr2.c: 75:     PIR1bits.TMR2IF = 0;
  5807     0D71  1091               	bcf	17,1	;volatile
  5808     0D72                     l2866:
  5809                           
  5810                           ;mcc_generated_files/tmr2.c: 78:     PIE1bits.TMR2IE = 1;
  5811     0D72  0021               	movlb	1	; select bank1
  5812     0D73  1491               	bsf	17,1	;volatile
  5813     0D74                     l2868:
  5814                           
  5815                           ;mcc_generated_files/tmr2.c: 81:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandl
      +                          er);
  5816     0D74  3003               	movlw	low _TMR2_DefaultInterruptHandler
  5817     0D75  00C6               	movwf	TMR2_SetInterruptHandler@InterruptHandler^(0+128)
  5818     0D76  3000               	movlw	high _TMR2_DefaultInterruptHandler
  5819     0D77  00C7               	movwf	(TMR2_SetInterruptHandler@InterruptHandler^(0+128)+1)
  5820     0D78  318C  24CD  318D   	fcall	_TMR2_SetInterruptHandler
  5821     0D7B                     l2870:
  5822                           
  5823                           ;mcc_generated_files/tmr2.c: 84:     T2CON = 0x7D;
  5824     0D7B  307D               	movlw	125
  5825     0D7C  0020               	movlb	0	; select bank0
  5826     0D7D  009C               	movwf	28	;volatile
  5827     0D7E                     l96:
  5828     0D7E  0008               	return
  5829     0D7F                     __end_of_TMR2_Initialize:
  5830                           
  5831                           	psect	text24
  5832     0CCD                     __ptext24:	
  5833 ;; *************** function _TMR2_SetInterruptHandler *****************
  5834 ;; Defined at:
  5835 ;;		line 132 in file "mcc_generated_files/tmr2.c"
  5836 ;; Parameters:    Size  Location     Type
  5837 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  5838 ;;		 -> trigger_Rx(1), TMR2_DefaultInterruptHandler(1), 
  5839 ;; Auto vars:     Size  Location     Type
  5840 ;;		None
  5841 ;; Return value:  Size  Location     Type
  5842 ;;                  1    wreg      void 
  5843 ;; Registers used:
  5844 ;;		wreg
  5845 ;; Tracked objects:
  5846 ;;		On entry : 0/0
  5847 ;;		On exit  : 0/0
  5848 ;;		Unchanged: 0/0
  5849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5850 ;;      Params:         0       0       2       0       0       0
  5851 ;;      Locals:         0       0       0       0       0       0
  5852 ;;      Temps:          0       0       0       0       0       0
  5853 ;;      Totals:         0       0       2       0       0       0
  5854 ;;Total ram usage:        2 bytes
  5855 ;; Hardware stack levels used: 1
  5856 ;; Hardware stack levels required when called: 6
  5857 ;; This function calls:
  5858 ;;		Nothing
  5859 ;; This function is called by:
  5860 ;;		_TMR2_Initialize
  5861 ;;		_main
  5862 ;; This function uses a non-reentrant model
  5863 ;;
  5864                           
  5865     0CCD                     _TMR2_SetInterruptHandler:	
  5866                           ;psect for function _TMR2_SetInterruptHandler
  5867                           
  5868     0CCD                     l2616:	
  5869                           ;incstack = 0
  5870                           ; Regs used in _TMR2_SetInterruptHandler: [wreg]
  5871                           
  5872                           
  5873                           ;mcc_generated_files/tmr2.c: 133:     TMR2_InterruptHandler = InterruptHandler;
  5874     0CCD  0021               	movlb	1	; select bank1
  5875     0CCE  0847               	movf	(TMR2_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  5876     0CCF  00E4               	movwf	(_TMR2_InterruptHandler+1)^(0+128)
  5877     0CD0  0846               	movf	TMR2_SetInterruptHandler@InterruptHandler^(0+128),w
  5878     0CD1  00E3               	movwf	_TMR2_InterruptHandler^(0+128)
  5879     0CD2                     l118:
  5880     0CD2  0008               	return
  5881     0CD3                     __end_of_TMR2_SetInterruptHandler:
  5882                           
  5883                           	psect	text25
  5884     0E53                     __ptext25:	
  5885 ;; *************** function _TMR1_Initialize *****************
  5886 ;; Defined at:
  5887 ;;		line 65 in file "mcc_generated_files/tmr1.c"
  5888 ;; Parameters:    Size  Location     Type
  5889 ;;		None
  5890 ;; Auto vars:     Size  Location     Type
  5891 ;;		None
  5892 ;; Return value:  Size  Location     Type
  5893 ;;                  1    wreg      void 
  5894 ;; Registers used:
  5895 ;;		wreg, status,2, status,0, pclath, cstack
  5896 ;; Tracked objects:
  5897 ;;		On entry : 0/0
  5898 ;;		On exit  : 0/0
  5899 ;;		Unchanged: 0/0
  5900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5901 ;;      Params:         0       0       0       0       0       0
  5902 ;;      Locals:         0       0       0       0       0       0
  5903 ;;      Temps:          0       0       0       0       0       0
  5904 ;;      Totals:         0       0       0       0       0       0
  5905 ;;Total ram usage:        0 bytes
  5906 ;; Hardware stack levels used: 1
  5907 ;; Hardware stack levels required when called: 7
  5908 ;; This function calls:
  5909 ;;		_TMR1_SetGateInterruptHandler
  5910 ;; This function is called by:
  5911 ;;		_SYSTEM_Initialize
  5912 ;; This function uses a non-reentrant model
  5913 ;;
  5914                           
  5915     0E53                     _TMR1_Initialize:	
  5916                           ;psect for function _TMR1_Initialize
  5917                           
  5918     0E53                     l2912:	
  5919                           ;incstack = 0
  5920                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5921                           
  5922                           
  5923                           ;mcc_generated_files/tmr1.c: 70:     T1GCON = 0x80;
  5924     0E53  3080               	movlw	128
  5925     0E54  0020               	movlb	0	; select bank0
  5926     0E55  0099               	movwf	25	;volatile
  5927     0E56                     l2914:
  5928                           
  5929                           ;mcc_generated_files/tmr1.c: 73:     TMR1H = 0x00;
  5930     0E56  0197               	clrf	23	;volatile
  5931     0E57                     l2916:
  5932                           
  5933                           ;mcc_generated_files/tmr1.c: 76:     TMR1L = 0x00;
  5934     0E57  0196               	clrf	22	;volatile
  5935     0E58                     l2918:
  5936                           
  5937                           ;mcc_generated_files/tmr1.c: 79:     PIR1bits.TMR1IF = 0;
  5938     0E58  1011               	bcf	17,0	;volatile
  5939                           
  5940                           ;mcc_generated_files/tmr1.c: 82:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  5941     0E59  0817               	movf	23,w	;volatile
  5942     0E5A  0021               	movlb	1	; select bank1
  5943     0E5B  00B7               	movwf	(_timer1ReloadVal+1)^(0+128)	;volatile
  5944     0E5C  0020               	movlb	0	; select bank0
  5945     0E5D  0816               	movf	22,w	;volatile
  5946     0E5E  0021               	movlb	1	; select bank1
  5947     0E5F  00B6               	movwf	_timer1ReloadVal^(0+128)	;volatile
  5948     0E60                     l2920:
  5949                           
  5950                           ;mcc_generated_files/tmr1.c: 85:     PIR1bits.TMR1GIF = 0;
  5951     0E60  0020               	movlb	0	; select bank0
  5952     0E61  1391               	bcf	17,7	;volatile
  5953     0E62                     l2922:
  5954                           
  5955                           ;mcc_generated_files/tmr1.c: 88:     PIE1bits.TMR1GIE = 1;
  5956     0E62  0021               	movlb	1	; select bank1
  5957     0E63  1791               	bsf	17,7	;volatile
  5958     0E64                     l2924:
  5959                           
  5960                           ;mcc_generated_files/tmr1.c: 91:     TMR1_SetGateInterruptHandler(TMR1_DefaultGateInterr
      +                          uptHandler);
  5961     0E64  3002               	movlw	low _TMR1_DefaultGateInterruptHandler
  5962     0E65  00C6               	movwf	TMR1_SetGateInterruptHandler@InterruptHandler^(0+128)
  5963     0E66  3000               	movlw	high _TMR1_DefaultGateInterruptHandler
  5964     0E67  00C7               	movwf	(TMR1_SetGateInterruptHandler@InterruptHandler^(0+128)+1)
  5965     0E68  318C  24C7  318E   	fcall	_TMR1_SetGateInterruptHandler
  5966     0E6B                     l2926:
  5967                           
  5968                           ;mcc_generated_files/tmr1.c: 94:     T1CON = 0x01;
  5969     0E6B  3001               	movlw	1
  5970     0E6C  0020               	movlb	0	; select bank0
  5971     0E6D  0098               	movwf	24	;volatile
  5972     0E6E                     l522:
  5973     0E6E  0008               	return
  5974     0E6F                     __end_of_TMR1_Initialize:
  5975                           
  5976                           	psect	text26
  5977     0CC7                     __ptext26:	
  5978 ;; *************** function _TMR1_SetGateInterruptHandler *****************
  5979 ;; Defined at:
  5980 ;;		line 177 in file "mcc_generated_files/tmr1.c"
  5981 ;; Parameters:    Size  Location     Type
  5982 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  5983 ;;		 -> mede_height(1), TMR1_DefaultGateInterruptHandler(1), 
  5984 ;; Auto vars:     Size  Location     Type
  5985 ;;		None
  5986 ;; Return value:  Size  Location     Type
  5987 ;;                  1    wreg      void 
  5988 ;; Registers used:
  5989 ;;		wreg
  5990 ;; Tracked objects:
  5991 ;;		On entry : 0/0
  5992 ;;		On exit  : 0/0
  5993 ;;		Unchanged: 0/0
  5994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5995 ;;      Params:         0       0       2       0       0       0
  5996 ;;      Locals:         0       0       0       0       0       0
  5997 ;;      Temps:          0       0       0       0       0       0
  5998 ;;      Totals:         0       0       2       0       0       0
  5999 ;;Total ram usage:        2 bytes
  6000 ;; Hardware stack levels used: 1
  6001 ;; Hardware stack levels required when called: 6
  6002 ;; This function calls:
  6003 ;;		Nothing
  6004 ;; This function is called by:
  6005 ;;		_TMR1_Initialize
  6006 ;;		_main
  6007 ;; This function uses a non-reentrant model
  6008 ;;
  6009                           
  6010     0CC7                     _TMR1_SetGateInterruptHandler:	
  6011                           ;psect for function _TMR1_SetGateInterruptHandler
  6012                           
  6013     0CC7                     l2642:	
  6014                           ;incstack = 0
  6015                           ; Regs used in _TMR1_SetGateInterruptHandler: [wreg]
  6016                           
  6017                           
  6018                           ;mcc_generated_files/tmr1.c: 178:     TMR1_GateInterruptHandler = InterruptHandler;
  6019     0CC7  0021               	movlb	1	; select bank1
  6020     0CC8  0847               	movf	(TMR1_SetGateInterruptHandler@InterruptHandler+1)^(0+128),w
  6021     0CC9  00DA               	movwf	(_TMR1_GateInterruptHandler+1)^(0+128)
  6022     0CCA  0846               	movf	TMR1_SetGateInterruptHandler@InterruptHandler^(0+128),w
  6023     0CCB  00D9               	movwf	_TMR1_GateInterruptHandler^(0+128)
  6024     0CCC                     l555:
  6025     0CCC  0008               	return
  6026     0CCD                     __end_of_TMR1_SetGateInterruptHandler:
  6027                           
  6028                           	psect	text27
  6029     0D7F                     __ptext27:	
  6030 ;; *************** function _TMR0_Initialize *****************
  6031 ;; Defined at:
  6032 ;;		line 64 in file "mcc_generated_files/tmr0.c"
  6033 ;; Parameters:    Size  Location     Type
  6034 ;;		None
  6035 ;; Auto vars:     Size  Location     Type
  6036 ;;		None
  6037 ;; Return value:  Size  Location     Type
  6038 ;;                  1    wreg      void 
  6039 ;; Registers used:
  6040 ;;		wreg, status,2, status,0, pclath, cstack
  6041 ;; Tracked objects:
  6042 ;;		On entry : 0/0
  6043 ;;		On exit  : 0/0
  6044 ;;		Unchanged: 0/0
  6045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6046 ;;      Params:         0       0       0       0       0       0
  6047 ;;      Locals:         0       0       0       0       0       0
  6048 ;;      Temps:          0       0       0       0       0       0
  6049 ;;      Totals:         0       0       0       0       0       0
  6050 ;;Total ram usage:        0 bytes
  6051 ;; Hardware stack levels used: 1
  6052 ;; Hardware stack levels required when called: 7
  6053 ;; This function calls:
  6054 ;;		_TMR0_SetInterruptHandler
  6055 ;; This function is called by:
  6056 ;;		_SYSTEM_Initialize
  6057 ;; This function uses a non-reentrant model
  6058 ;;
  6059                           
  6060     0D7F                     _TMR0_Initialize:	
  6061                           ;psect for function _TMR0_Initialize
  6062                           
  6063     0D7F                     l2872:	
  6064                           ;incstack = 0
  6065                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6066                           
  6067                           
  6068                           ;mcc_generated_files/tmr0.c: 69:     OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | (0xD5 
      +                          & 0x3F));
  6069     0D7F  0021               	movlb	1	; select bank1
  6070     0D80  0815               	movf	21,w	;volatile
  6071     0D81  39C0               	andlw	192
  6072     0D82  3815               	iorlw	21
  6073     0D83  0095               	movwf	21	;volatile
  6074     0D84                     l2874:
  6075                           
  6076                           ;mcc_generated_files/tmr0.c: 72:     TMR0 = 0x00;
  6077     0D84  0020               	movlb	0	; select bank0
  6078     0D85  0195               	clrf	21	;volatile
  6079     0D86                     l2876:
  6080                           
  6081                           ;mcc_generated_files/tmr0.c: 75:     timer0ReloadVal= 0;
  6082     0D86  0021               	movlb	1	; select bank1
  6083     0D87  01BE               	clrf	_timer0ReloadVal^(0+128)	;volatile
  6084     0D88                     l2878:
  6085                           
  6086                           ;mcc_generated_files/tmr0.c: 78:     INTCONbits.TMR0IF = 0;
  6087     0D88  110B               	bcf	11,2	;volatile
  6088     0D89                     l2880:
  6089                           
  6090                           ;mcc_generated_files/tmr0.c: 81:     INTCONbits.TMR0IE = 1;
  6091     0D89  168B               	bsf	11,5	;volatile
  6092     0D8A                     l2882:
  6093                           
  6094                           ;mcc_generated_files/tmr0.c: 84:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  6095     0D8A  307D               	movlw	low _TMR0_DefaultInterruptHandler
  6096     0D8B  00C6               	movwf	TMR0_SetInterruptHandler@InterruptHandler^(0+128)
  6097     0D8C  300C               	movlw	high _TMR0_DefaultInterruptHandler
  6098     0D8D  00C7               	movwf	(TMR0_SetInterruptHandler@InterruptHandler^(0+128)+1)
  6099     0D8E  318C  24C1  318D   	fcall	_TMR0_SetInterruptHandler
  6100     0D91                     l371:
  6101     0D91  0008               	return
  6102     0D92                     __end_of_TMR0_Initialize:
  6103                           
  6104                           	psect	text28
  6105     0CC1                     __ptext28:	
  6106 ;; *************** function _TMR0_SetInterruptHandler *****************
  6107 ;; Defined at:
  6108 ;;		line 125 in file "mcc_generated_files/tmr0.c"
  6109 ;; Parameters:    Size  Location     Type
  6110 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  6111 ;;		 -> end_Rx(1), TMR0_DefaultInterruptHandler(1), 
  6112 ;; Auto vars:     Size  Location     Type
  6113 ;;		None
  6114 ;; Return value:  Size  Location     Type
  6115 ;;                  1    wreg      void 
  6116 ;; Registers used:
  6117 ;;		wreg
  6118 ;; Tracked objects:
  6119 ;;		On entry : 0/0
  6120 ;;		On exit  : 0/0
  6121 ;;		Unchanged: 0/0
  6122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6123 ;;      Params:         0       0       2       0       0       0
  6124 ;;      Locals:         0       0       0       0       0       0
  6125 ;;      Temps:          0       0       0       0       0       0
  6126 ;;      Totals:         0       0       2       0       0       0
  6127 ;;Total ram usage:        2 bytes
  6128 ;; Hardware stack levels used: 1
  6129 ;; Hardware stack levels required when called: 6
  6130 ;; This function calls:
  6131 ;;		Nothing
  6132 ;; This function is called by:
  6133 ;;		_TMR0_Initialize
  6134 ;;		_main
  6135 ;; This function uses a non-reentrant model
  6136 ;;
  6137                           
  6138     0CC1                     _TMR0_SetInterruptHandler:	
  6139                           ;psect for function _TMR0_SetInterruptHandler
  6140                           
  6141     0CC1                     l2640:	
  6142                           ;incstack = 0
  6143                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  6144                           
  6145                           
  6146                           ;mcc_generated_files/tmr0.c: 126:     TMR0_InterruptHandler = InterruptHandler;
  6147     0CC1  0021               	movlb	1	; select bank1
  6148     0CC2  0847               	movf	(TMR0_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  6149     0CC3  00DC               	movwf	(_TMR0_InterruptHandler+1)^(0+128)
  6150     0CC4  0846               	movf	TMR0_SetInterruptHandler@InterruptHandler^(0+128),w
  6151     0CC5  00DB               	movwf	_TMR0_InterruptHandler^(0+128)
  6152     0CC6                     l387:
  6153     0CC6  0008               	return
  6154     0CC7                     __end_of_TMR0_SetInterruptHandler:
  6155                           
  6156                           	psect	text29
  6157     0DD4                     __ptext29:	
  6158 ;; *************** function _PIN_MANAGER_Initialize *****************
  6159 ;; Defined at:
  6160 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  6161 ;; Parameters:    Size  Location     Type
  6162 ;;		None
  6163 ;; Auto vars:     Size  Location     Type
  6164 ;;		None
  6165 ;; Return value:  Size  Location     Type
  6166 ;;                  1    wreg      void 
  6167 ;; Registers used:
  6168 ;;		wreg, status,2
  6169 ;; Tracked objects:
  6170 ;;		On entry : 0/0
  6171 ;;		On exit  : 0/0
  6172 ;;		Unchanged: 0/0
  6173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6174 ;;      Params:         0       0       0       0       0       0
  6175 ;;      Locals:         0       0       0       0       0       0
  6176 ;;      Temps:          0       0       0       0       0       0
  6177 ;;      Totals:         0       0       0       0       0       0
  6178 ;;Total ram usage:        0 bytes
  6179 ;; Hardware stack levels used: 1
  6180 ;; Hardware stack levels required when called: 6
  6181 ;; This function calls:
  6182 ;;		Nothing
  6183 ;; This function is called by:
  6184 ;;		_SYSTEM_Initialize
  6185 ;; This function uses a non-reentrant model
  6186 ;;
  6187                           
  6188     0DD4                     _PIN_MANAGER_Initialize:	
  6189                           ;psect for function _PIN_MANAGER_Initialize
  6190                           
  6191     0DD4                     l2826:	
  6192                           ;incstack = 0
  6193                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  6194                           
  6195                           
  6196                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  6197     0DD4  0022               	movlb	2	; select bank2
  6198     0DD5  018C               	clrf	12	;volatile
  6199                           
  6200                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  6201     0DD6  018D               	clrf	13	;volatile
  6202     0DD7                     l2828:
  6203                           
  6204                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0xA1;
  6205     0DD7  30A1               	movlw	161
  6206     0DD8  0021               	movlb	1	; select bank1
  6207     0DD9  008C               	movwf	12	;volatile
  6208     0DDA                     l2830:
  6209                           
  6210                           ;mcc_generated_files/pin_manager.c: 67:     TRISB = 0xF7;
  6211     0DDA  30F7               	movlw	247
  6212     0DDB  008D               	movwf	13	;volatile
  6213     0DDC                     l2832:
  6214                           
  6215                           ;mcc_generated_files/pin_manager.c: 72:     ANSELB = 0xF0;
  6216     0DDC  30F0               	movlw	240
  6217     0DDD  0023               	movlb	3	; select bank3
  6218     0DDE  008D               	movwf	13	;volatile
  6219     0DDF                     l2834:
  6220                           
  6221                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x01;
  6222     0DDF  3001               	movlw	1
  6223     0DE0  008C               	movwf	12	;volatile
  6224                           
  6225                           ;mcc_generated_files/pin_manager.c: 78:     WPUB = 0x00;
  6226     0DE1  0024               	movlb	4	; select bank4
  6227     0DE2  018D               	clrf	13	;volatile
  6228                           
  6229                           ;mcc_generated_files/pin_manager.c: 79:     WPUA = 0x00;
  6230     0DE3  018C               	clrf	12	;volatile
  6231     0DE4                     l2836:
  6232                           
  6233                           ;mcc_generated_files/pin_manager.c: 80:     OPTION_REGbits.nWPUEN = 1;
  6234     0DE4  0021               	movlb	1	; select bank1
  6235     0DE5  1795               	bsf	21,7	;volatile
  6236                           
  6237                           ;mcc_generated_files/pin_manager.c: 86:     APFCON0 = 0x00;
  6238     0DE6  0022               	movlb	2	; select bank2
  6239     0DE7  019D               	clrf	29	;volatile
  6240                           
  6241                           ;mcc_generated_files/pin_manager.c: 87:     APFCON1 = 0x00;
  6242     0DE8  019E               	clrf	30	;volatile
  6243     0DE9                     l2838:
  6244                           
  6245                           ;mcc_generated_files/pin_manager.c: 94:     INTCONbits.IOCIE = 1;
  6246     0DE9  158B               	bsf	11,3	;volatile
  6247     0DEA                     l72:
  6248     0DEA  0008               	return
  6249     0DEB                     __end_of_PIN_MANAGER_Initialize:
  6250                           
  6251                           	psect	text30
  6252     0CF7                     __ptext30:	
  6253 ;; *************** function _OSCILLATOR_Initialize *****************
  6254 ;; Defined at:
  6255 ;;		line 69 in file "mcc_generated_files/mcc.c"
  6256 ;; Parameters:    Size  Location     Type
  6257 ;;		None
  6258 ;; Auto vars:     Size  Location     Type
  6259 ;;		None
  6260 ;; Return value:  Size  Location     Type
  6261 ;;                  1    wreg      void 
  6262 ;; Registers used:
  6263 ;;		wreg, status,2
  6264 ;; Tracked objects:
  6265 ;;		On entry : 0/0
  6266 ;;		On exit  : 0/0
  6267 ;;		Unchanged: 0/0
  6268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6269 ;;      Params:         0       0       0       0       0       0
  6270 ;;      Locals:         0       0       0       0       0       0
  6271 ;;      Temps:          0       0       0       0       0       0
  6272 ;;      Totals:         0       0       0       0       0       0
  6273 ;;Total ram usage:        0 bytes
  6274 ;; Hardware stack levels used: 1
  6275 ;; Hardware stack levels required when called: 6
  6276 ;; This function calls:
  6277 ;;		Nothing
  6278 ;; This function is called by:
  6279 ;;		_SYSTEM_Initialize
  6280 ;; This function uses a non-reentrant model
  6281 ;;
  6282                           
  6283     0CF7                     _OSCILLATOR_Initialize:	
  6284                           ;psect for function _OSCILLATOR_Initialize
  6285                           
  6286     0CF7                     l2840:	
  6287                           ;incstack = 0
  6288                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  6289                           
  6290     0CF7  3078               	movlw	120
  6291     0CF8  0021               	movlb	1	; select bank1
  6292     0CF9  0099               	movwf	25	;volatile
  6293     0CFA                     l2842:
  6294     0CFA  0198               	clrf	24	;volatile
  6295     0CFB                     l2844:
  6296     0CFB  0022               	movlb	2	; select bank2
  6297     0CFC  0196               	clrf	22	;volatile
  6298     0CFD                     l42:
  6299     0CFD  0008               	return
  6300     0CFE                     __end_of_OSCILLATOR_Initialize:
  6301                           
  6302                           	psect	text31
  6303     0C92                     __ptext31:	
  6304 ;; *************** function _FVR_Initialize *****************
  6305 ;; Defined at:
  6306 ;;		line 58 in file "mcc_generated_files/fvr.c"
  6307 ;; Parameters:    Size  Location     Type
  6308 ;;		None
  6309 ;; Auto vars:     Size  Location     Type
  6310 ;;		None
  6311 ;; Return value:  Size  Location     Type
  6312 ;;                  1    wreg      void 
  6313 ;; Registers used:
  6314 ;;		wreg
  6315 ;; Tracked objects:
  6316 ;;		On entry : 0/0
  6317 ;;		On exit  : 0/0
  6318 ;;		Unchanged: 0/0
  6319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6320 ;;      Params:         0       0       0       0       0       0
  6321 ;;      Locals:         0       0       0       0       0       0
  6322 ;;      Temps:          0       0       0       0       0       0
  6323 ;;      Totals:         0       0       0       0       0       0
  6324 ;;Total ram usage:        0 bytes
  6325 ;; Hardware stack levels used: 1
  6326 ;; Hardware stack levels required when called: 6
  6327 ;; This function calls:
  6328 ;;		Nothing
  6329 ;; This function is called by:
  6330 ;;		_SYSTEM_Initialize
  6331 ;; This function uses a non-reentrant model
  6332 ;;
  6333                           
  6334     0C92                     _FVR_Initialize:	
  6335                           ;psect for function _FVR_Initialize
  6336                           
  6337     0C92                     l2848:	
  6338                           ;incstack = 0
  6339                           ; Regs used in _FVR_Initialize: [wreg]
  6340                           
  6341                           
  6342                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0x84;
  6343     0C92  3084               	movlw	132
  6344     0C93  0022               	movlb	2	; select bank2
  6345     0C94  0097               	movwf	23	;volatile
  6346     0C95                     l397:
  6347     0C95  0008               	return
  6348     0C96                     __end_of_FVR_Initialize:
  6349                           
  6350                           	psect	text32
  6351     0FC1                     __ptext32:	
  6352 ;; *************** function _EUSART_Initialize *****************
  6353 ;; Defined at:
  6354 ;;		line 88 in file "mcc_generated_files/eusart.c"
  6355 ;; Parameters:    Size  Location     Type
  6356 ;;		None
  6357 ;; Auto vars:     Size  Location     Type
  6358 ;;		None
  6359 ;; Return value:  Size  Location     Type
  6360 ;;                  1    wreg      void 
  6361 ;; Registers used:
  6362 ;;		wreg, status,2, status,0, pclath, cstack
  6363 ;; Tracked objects:
  6364 ;;		On entry : 0/0
  6365 ;;		On exit  : 0/0
  6366 ;;		Unchanged: 0/0
  6367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6368 ;;      Params:         0       0       0       0       0       0
  6369 ;;      Locals:         0       0       0       0       0       0
  6370 ;;      Temps:          0       0       0       0       0       0
  6371 ;;      Totals:         0       0       0       0       0       0
  6372 ;;Total ram usage:        0 bytes
  6373 ;; Hardware stack levels used: 1
  6374 ;; Hardware stack levels required when called: 7
  6375 ;; This function calls:
  6376 ;;		_EUSART_SetErrorHandler
  6377 ;;		_EUSART_SetFramingErrorHandler
  6378 ;;		_EUSART_SetOverrunErrorHandler
  6379 ;;		_EUSART_SetRxInterruptHandler
  6380 ;;		_EUSART_SetTxInterruptHandler
  6381 ;; This function is called by:
  6382 ;;		_SYSTEM_Initialize
  6383 ;; This function uses a non-reentrant model
  6384 ;;
  6385                           
  6386     0FC1                     _EUSART_Initialize:	
  6387                           ;psect for function _EUSART_Initialize
  6388                           
  6389     0FC1                     l2928:	
  6390                           ;incstack = 0
  6391                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6392                           
  6393                           
  6394                           ;mcc_generated_files/eusart.c: 91:     PIE1bits.RCIE = 0;
  6395     0FC1  0021               	movlb	1	; select bank1
  6396     0FC2  1291               	bcf	17,5	;volatile
  6397     0FC3                     l2930:
  6398                           
  6399                           ;mcc_generated_files/eusart.c: 92:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
  6400     0FC3  308D               	movlw	low _EUSART_Receive_ISR
  6401     0FC4  00C6               	movwf	EUSART_SetRxInterruptHandler@interruptHandler^(0+128)
  6402     0FC5  3007               	movlw	high _EUSART_Receive_ISR
  6403     0FC6  00C7               	movwf	(EUSART_SetRxInterruptHandler@interruptHandler^(0+128)+1)
  6404     0FC7  318C  24B5  318F   	fcall	_EUSART_SetRxInterruptHandler
  6405     0FCA                     l2932:
  6406                           
  6407                           ;mcc_generated_files/eusart.c: 93:     PIE1bits.TXIE = 0;
  6408     0FCA  0021               	movlb	1	; select bank1
  6409     0FCB  1211               	bcf	17,4	;volatile
  6410                           
  6411                           ;mcc_generated_files/eusart.c: 94:     EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR)
      +                          ;
  6412     0FCC  30C9               	movlw	low _EUSART_Transmit_ISR
  6413     0FCD  00C6               	movwf	EUSART_SetTxInterruptHandler@interruptHandler^(0+128)
  6414     0FCE  300E               	movlw	high _EUSART_Transmit_ISR
  6415     0FCF  00C7               	movwf	(EUSART_SetTxInterruptHandler@interruptHandler^(0+128)+1)
  6416     0FD0  318C  24BB  318F   	fcall	_EUSART_SetTxInterruptHandler
  6417     0FD3                     l2934:
  6418                           
  6419                           ;mcc_generated_files/eusart.c: 98:     BAUDCON = 0x08;
  6420     0FD3  3008               	movlw	8
  6421     0FD4  0023               	movlb	3	; select bank3
  6422     0FD5  009F               	movwf	31	;volatile
  6423     0FD6                     l2936:
  6424                           
  6425                           ;mcc_generated_files/eusart.c: 101:     RCSTA = 0x90;
  6426     0FD6  3090               	movlw	144
  6427     0FD7  009D               	movwf	29	;volatile
  6428     0FD8                     l2938:
  6429                           
  6430                           ;mcc_generated_files/eusart.c: 104:     TXSTA = 0x24;
  6431     0FD8  3024               	movlw	36
  6432     0FD9  009E               	movwf	30	;volatile
  6433     0FDA                     l2940:
  6434                           
  6435                           ;mcc_generated_files/eusart.c: 107:     SPBRGL = 0x22;
  6436     0FDA  3022               	movlw	34
  6437     0FDB  009B               	movwf	27	;volatile
  6438     0FDC                     l2942:
  6439                           
  6440                           ;mcc_generated_files/eusart.c: 110:     SPBRGH = 0x00;
  6441     0FDC  019C               	clrf	28	;volatile
  6442     0FDD                     l2944:
  6443                           
  6444                           ;mcc_generated_files/eusart.c: 113:     EUSART_SetFramingErrorHandler(EUSART_DefaultFram
      +                          ingErrorHandler);
  6445     0FDD  307B               	movlw	low _EUSART_DefaultFramingErrorHandler
  6446     0FDE  0021               	movlb	1	; select bank1
  6447     0FDF  00C6               	movwf	EUSART_SetFramingErrorHandler@interruptHandler^(0+128)
  6448     0FE0  300C               	movlw	high _EUSART_DefaultFramingErrorHandler
  6449     0FE1  00C7               	movwf	(EUSART_SetFramingErrorHandler@interruptHandler^(0+128)+1)
  6450     0FE2  318C  24AF  318F   	fcall	_EUSART_SetFramingErrorHandler
  6451     0FE5                     l2946:
  6452                           
  6453                           ;mcc_generated_files/eusart.c: 114:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOver
      +                          runErrorHandler);
  6454     0FE5  308E               	movlw	low _EUSART_DefaultOverrunErrorHandler
  6455     0FE6  0021               	movlb	1	; select bank1
  6456     0FE7  00C6               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler^(0+128)
  6457     0FE8  300C               	movlw	high _EUSART_DefaultOverrunErrorHandler
  6458     0FE9  00C7               	movwf	(EUSART_SetOverrunErrorHandler@interruptHandler^(0+128)+1)
  6459     0FEA  318D  2507  318F   	fcall	_EUSART_SetOverrunErrorHandler
  6460     0FED                     l2948:
  6461                           
  6462                           ;mcc_generated_files/eusart.c: 115:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandle
      +                          r);
  6463     0FED  308A               	movlw	low _EUSART_DefaultErrorHandler
  6464     0FEE  0021               	movlb	1	; select bank1
  6465     0FEF  00C6               	movwf	EUSART_SetErrorHandler@interruptHandler^(0+128)
  6466     0FF0  300C               	movlw	high _EUSART_DefaultErrorHandler
  6467     0FF1  00C7               	movwf	(EUSART_SetErrorHandler@interruptHandler^(0+128)+1)
  6468     0FF2  318C  24FE  318F   	fcall	_EUSART_SetErrorHandler
  6469                           
  6470                           ;mcc_generated_files/eusart.c: 117:     eusartRxLastError.status = 0;
  6471     0FF5  0021               	movlb	1	; select bank1
  6472     0FF6  01BF               	clrf	_eusartRxLastError^(0+128)	;volatile
  6473                           
  6474                           ;mcc_generated_files/eusart.c: 120:     eusartTxHead = 0;
  6475     0FF7  01C5               	clrf	_eusartTxHead^(0+128)	;volatile
  6476                           
  6477                           ;mcc_generated_files/eusart.c: 121:     eusartTxTail = 0;
  6478     0FF8  01C4               	clrf	_eusartTxTail^(0+128)	;volatile
  6479     0FF9                     l2950:
  6480                           
  6481                           ;mcc_generated_files/eusart.c: 122:     eusartTxBufferRemaining = sizeof(eusartTxBuffer)
      +                          ;
  6482     0FF9  3008               	movlw	8
  6483     0FFA  00C3               	movwf	_eusartTxBufferRemaining^(0+128)	;volatile
  6484     0FFB                     l2952:
  6485                           
  6486                           ;mcc_generated_files/eusart.c: 124:     eusartRxHead = 0;
  6487     0FFB  01C2               	clrf	_eusartRxHead^(0+128)	;volatile
  6488     0FFC                     l2954:
  6489                           
  6490                           ;mcc_generated_files/eusart.c: 125:     eusartRxTail = 0;
  6491     0FFC  01C1               	clrf	_eusartRxTail^(0+128)	;volatile
  6492     0FFD                     l2956:
  6493                           
  6494                           ;mcc_generated_files/eusart.c: 126:     eusartRxCount = 0;
  6495     0FFD  01C0               	clrf	_eusartRxCount^(0+128)	;volatile
  6496     0FFE                     l2958:
  6497                           
  6498                           ;mcc_generated_files/eusart.c: 129:     PIE1bits.RCIE = 1;
  6499     0FFE  1691               	bsf	17,5	;volatile
  6500     0FFF                     l285:
  6501     0FFF  0008               	return
  6502     1000                     __end_of_EUSART_Initialize:
  6503                           
  6504                           	psect	text33
  6505     0CBB                     __ptext33:	
  6506 ;; *************** function _EUSART_SetTxInterruptHandler *****************
  6507 ;; Defined at:
  6508 ;;		line 276 in file "mcc_generated_files/eusart.c"
  6509 ;; Parameters:    Size  Location     Type
  6510 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  6511 ;;		 -> EUSART_Transmit_ISR(1), 
  6512 ;; Auto vars:     Size  Location     Type
  6513 ;;		None
  6514 ;; Return value:  Size  Location     Type
  6515 ;;                  1    wreg      void 
  6516 ;; Registers used:
  6517 ;;		wreg
  6518 ;; Tracked objects:
  6519 ;;		On entry : 0/0
  6520 ;;		On exit  : 0/0
  6521 ;;		Unchanged: 0/0
  6522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6523 ;;      Params:         0       0       2       0       0       0
  6524 ;;      Locals:         0       0       0       0       0       0
  6525 ;;      Temps:          0       0       0       0       0       0
  6526 ;;      Totals:         0       0       2       0       0       0
  6527 ;;Total ram usage:        2 bytes
  6528 ;; Hardware stack levels used: 1
  6529 ;; Hardware stack levels required when called: 6
  6530 ;; This function calls:
  6531 ;;		Nothing
  6532 ;; This function is called by:
  6533 ;;		_EUSART_Initialize
  6534 ;; This function uses a non-reentrant model
  6535 ;;
  6536                           
  6537     0CBB                     _EUSART_SetTxInterruptHandler:	
  6538                           ;psect for function _EUSART_SetTxInterruptHandler
  6539                           
  6540     0CBB                     l2622:	
  6541                           ;incstack = 0
  6542                           ; Regs used in _EUSART_SetTxInterruptHandler: [wreg]
  6543                           
  6544                           
  6545                           ;mcc_generated_files/eusart.c: 277:     EUSART_TxDefaultInterruptHandler = interruptHand
      +                          ler;
  6546     0CBB  0021               	movlb	1	; select bank1
  6547     0CBC  0847               	movf	(EUSART_SetTxInterruptHandler@interruptHandler+1)^(0+128),w
  6548     0CBD  00E0               	movwf	(_EUSART_TxDefaultInterruptHandler+1)^(0+128)
  6549     0CBE  0846               	movf	EUSART_SetTxInterruptHandler@interruptHandler^(0+128),w
  6550     0CBF  00DF               	movwf	_EUSART_TxDefaultInterruptHandler^(0+128)
  6551     0CC0                     l351:
  6552     0CC0  0008               	return
  6553     0CC1                     __end_of_EUSART_SetTxInterruptHandler:
  6554                           
  6555                           	psect	text34
  6556     0CB5                     __ptext34:	
  6557 ;; *************** function _EUSART_SetRxInterruptHandler *****************
  6558 ;; Defined at:
  6559 ;;		line 280 in file "mcc_generated_files/eusart.c"
  6560 ;; Parameters:    Size  Location     Type
  6561 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  6562 ;;		 -> receive(1), EUSART_Receive_ISR(1), 
  6563 ;; Auto vars:     Size  Location     Type
  6564 ;;		None
  6565 ;; Return value:  Size  Location     Type
  6566 ;;                  1    wreg      void 
  6567 ;; Registers used:
  6568 ;;		wreg
  6569 ;; Tracked objects:
  6570 ;;		On entry : 0/0
  6571 ;;		On exit  : 0/0
  6572 ;;		Unchanged: 0/0
  6573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6574 ;;      Params:         0       0       2       0       0       0
  6575 ;;      Locals:         0       0       0       0       0       0
  6576 ;;      Temps:          0       0       0       0       0       0
  6577 ;;      Totals:         0       0       2       0       0       0
  6578 ;;Total ram usage:        2 bytes
  6579 ;; Hardware stack levels used: 1
  6580 ;; Hardware stack levels required when called: 6
  6581 ;; This function calls:
  6582 ;;		Nothing
  6583 ;; This function is called by:
  6584 ;;		_EUSART_Initialize
  6585 ;;		_main
  6586 ;; This function uses a non-reentrant model
  6587 ;;
  6588                           
  6589     0CB5                     _EUSART_SetRxInterruptHandler:	
  6590                           ;psect for function _EUSART_SetRxInterruptHandler
  6591                           
  6592     0CB5                     l2620:	
  6593                           ;incstack = 0
  6594                           ; Regs used in _EUSART_SetRxInterruptHandler: [wreg]
  6595                           
  6596                           
  6597                           ;mcc_generated_files/eusart.c: 281:     EUSART_RxDefaultInterruptHandler = interruptHand
      +                          ler;
  6598     0CB5  0021               	movlb	1	; select bank1
  6599     0CB6  0847               	movf	(EUSART_SetRxInterruptHandler@interruptHandler+1)^(0+128),w
  6600     0CB7  00E2               	movwf	(_EUSART_RxDefaultInterruptHandler+1)^(0+128)
  6601     0CB8  0846               	movf	EUSART_SetRxInterruptHandler@interruptHandler^(0+128),w
  6602     0CB9  00E1               	movwf	_EUSART_RxDefaultInterruptHandler^(0+128)
  6603     0CBA                     l354:
  6604     0CBA  0008               	return
  6605     0CBB                     __end_of_EUSART_SetRxInterruptHandler:
  6606                           
  6607                           	psect	text35
  6608     0D07                     __ptext35:	
  6609 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  6610 ;; Defined at:
  6611 ;;		line 268 in file "mcc_generated_files/eusart.c"
  6612 ;; Parameters:    Size  Location     Type
  6613 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  6614 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  6615 ;; Auto vars:     Size  Location     Type
  6616 ;;		None
  6617 ;; Return value:  Size  Location     Type
  6618 ;;                  1    wreg      void 
  6619 ;; Registers used:
  6620 ;;		wreg
  6621 ;; Tracked objects:
  6622 ;;		On entry : 0/0
  6623 ;;		On exit  : 0/0
  6624 ;;		Unchanged: 0/0
  6625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6626 ;;      Params:         0       0       2       0       0       0
  6627 ;;      Locals:         0       0       0       0       0       0
  6628 ;;      Temps:          0       0       0       0       0       0
  6629 ;;      Totals:         0       0       2       0       0       0
  6630 ;;Total ram usage:        2 bytes
  6631 ;; Hardware stack levels used: 1
  6632 ;; Hardware stack levels required when called: 6
  6633 ;; This function calls:
  6634 ;;		Nothing
  6635 ;; This function is called by:
  6636 ;;		_EUSART_Initialize
  6637 ;; This function uses a non-reentrant model
  6638 ;;
  6639                           
  6640     0D07                     _EUSART_SetOverrunErrorHandler:	
  6641                           ;psect for function _EUSART_SetOverrunErrorHandler
  6642                           
  6643     0D07                     l2626:	
  6644                           ;incstack = 0
  6645                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  6646                           
  6647                           
  6648                           ;mcc_generated_files/eusart.c: 269:     EUSART_OverrunErrorHandler = interruptHandler;
  6649     0D07  0021               	movlb	1	; select bank1
  6650     0D08  0847               	movf	(EUSART_SetOverrunErrorHandler@interruptHandler+1)^(0+128),w
  6651     0D09  0022               	movlb	2	; select bank2
  6652     0D0A  00BD               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+256)
  6653     0D0B  0021               	movlb	1	; select bank1
  6654     0D0C  0846               	movf	EUSART_SetOverrunErrorHandler@interruptHandler^(0+128),w
  6655     0D0D  0022               	movlb	2	; select bank2
  6656     0D0E  00BC               	movwf	_EUSART_OverrunErrorHandler^(0+256)
  6657     0D0F                     l345:
  6658     0D0F  0008               	return
  6659     0D10                     __end_of_EUSART_SetOverrunErrorHandler:
  6660                           
  6661                           	psect	text36
  6662     0CAF                     __ptext36:	
  6663 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  6664 ;; Defined at:
  6665 ;;		line 264 in file "mcc_generated_files/eusart.c"
  6666 ;; Parameters:    Size  Location     Type
  6667 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  6668 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  6669 ;; Auto vars:     Size  Location     Type
  6670 ;;		None
  6671 ;; Return value:  Size  Location     Type
  6672 ;;                  1    wreg      void 
  6673 ;; Registers used:
  6674 ;;		wreg
  6675 ;; Tracked objects:
  6676 ;;		On entry : 0/0
  6677 ;;		On exit  : 0/0
  6678 ;;		Unchanged: 0/0
  6679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6680 ;;      Params:         0       0       2       0       0       0
  6681 ;;      Locals:         0       0       0       0       0       0
  6682 ;;      Temps:          0       0       0       0       0       0
  6683 ;;      Totals:         0       0       2       0       0       0
  6684 ;;Total ram usage:        2 bytes
  6685 ;; Hardware stack levels used: 1
  6686 ;; Hardware stack levels required when called: 6
  6687 ;; This function calls:
  6688 ;;		Nothing
  6689 ;; This function is called by:
  6690 ;;		_EUSART_Initialize
  6691 ;; This function uses a non-reentrant model
  6692 ;;
  6693                           
  6694     0CAF                     _EUSART_SetFramingErrorHandler:	
  6695                           ;psect for function _EUSART_SetFramingErrorHandler
  6696                           
  6697     0CAF                     l2624:	
  6698                           ;incstack = 0
  6699                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  6700                           
  6701                           
  6702                           ;mcc_generated_files/eusart.c: 265:     EUSART_FramingErrorHandler = interruptHandler;
  6703     0CAF  0021               	movlb	1	; select bank1
  6704     0CB0  0847               	movf	(EUSART_SetFramingErrorHandler@interruptHandler+1)^(0+128),w
  6705     0CB1  00DE               	movwf	(_EUSART_FramingErrorHandler+1)^(0+128)
  6706     0CB2  0846               	movf	EUSART_SetFramingErrorHandler@interruptHandler^(0+128),w
  6707     0CB3  00DD               	movwf	_EUSART_FramingErrorHandler^(0+128)
  6708     0CB4                     l342:
  6709     0CB4  0008               	return
  6710     0CB5                     __end_of_EUSART_SetFramingErrorHandler:
  6711                           
  6712                           	psect	text37
  6713     0CFE                     __ptext37:	
  6714 ;; *************** function _EUSART_SetErrorHandler *****************
  6715 ;; Defined at:
  6716 ;;		line 272 in file "mcc_generated_files/eusart.c"
  6717 ;; Parameters:    Size  Location     Type
  6718 ;;  interruptHan    2    0[BANK1 ] PTR FTN()void 
  6719 ;;		 -> EUSART_DefaultErrorHandler(1), 
  6720 ;; Auto vars:     Size  Location     Type
  6721 ;;		None
  6722 ;; Return value:  Size  Location     Type
  6723 ;;                  1    wreg      void 
  6724 ;; Registers used:
  6725 ;;		wreg
  6726 ;; Tracked objects:
  6727 ;;		On entry : 0/0
  6728 ;;		On exit  : 0/0
  6729 ;;		Unchanged: 0/0
  6730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6731 ;;      Params:         0       0       2       0       0       0
  6732 ;;      Locals:         0       0       0       0       0       0
  6733 ;;      Temps:          0       0       0       0       0       0
  6734 ;;      Totals:         0       0       2       0       0       0
  6735 ;;Total ram usage:        2 bytes
  6736 ;; Hardware stack levels used: 1
  6737 ;; Hardware stack levels required when called: 6
  6738 ;; This function calls:
  6739 ;;		Nothing
  6740 ;; This function is called by:
  6741 ;;		_EUSART_Initialize
  6742 ;; This function uses a non-reentrant model
  6743 ;;
  6744                           
  6745     0CFE                     _EUSART_SetErrorHandler:	
  6746                           ;psect for function _EUSART_SetErrorHandler
  6747                           
  6748     0CFE                     l2628:	
  6749                           ;incstack = 0
  6750                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  6751                           
  6752                           
  6753                           ;mcc_generated_files/eusart.c: 273:     EUSART_ErrorHandler = interruptHandler;
  6754     0CFE  0021               	movlb	1	; select bank1
  6755     0CFF  0847               	movf	(EUSART_SetErrorHandler@interruptHandler+1)^(0+128),w
  6756     0D00  0022               	movlb	2	; select bank2
  6757     0D01  00BB               	movwf	(_EUSART_ErrorHandler+1)^(0+256)
  6758     0D02  0021               	movlb	1	; select bank1
  6759     0D03  0846               	movf	EUSART_SetErrorHandler@interruptHandler^(0+128),w
  6760     0D04  0022               	movlb	2	; select bank2
  6761     0D05  00BA               	movwf	_EUSART_ErrorHandler^(0+256)
  6762     0D06                     l348:
  6763     0D06  0008               	return
  6764     0D07                     __end_of_EUSART_SetErrorHandler:
  6765                           
  6766                           	psect	text38
  6767     0D2F                     __ptext38:	
  6768 ;; *************** function _EPWM1_Initialize *****************
  6769 ;; Defined at:
  6770 ;;		line 64 in file "mcc_generated_files/epwm1.c"
  6771 ;; Parameters:    Size  Location     Type
  6772 ;;		None
  6773 ;; Auto vars:     Size  Location     Type
  6774 ;;		None
  6775 ;; Return value:  Size  Location     Type
  6776 ;;                  1    wreg      void 
  6777 ;; Registers used:
  6778 ;;		wreg, status,2, status,0
  6779 ;; Tracked objects:
  6780 ;;		On entry : 0/0
  6781 ;;		On exit  : 0/0
  6782 ;;		Unchanged: 0/0
  6783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6784 ;;      Params:         0       0       0       0       0       0
  6785 ;;      Locals:         0       0       0       0       0       0
  6786 ;;      Temps:          0       0       0       0       0       0
  6787 ;;      Totals:         0       0       0       0       0       0
  6788 ;;Total ram usage:        0 bytes
  6789 ;; Hardware stack levels used: 1
  6790 ;; Hardware stack levels required when called: 6
  6791 ;; This function calls:
  6792 ;;		Nothing
  6793 ;; This function is called by:
  6794 ;;		_SYSTEM_Initialize
  6795 ;; This function uses a non-reentrant model
  6796 ;;
  6797                           
  6798     0D2F                     _EPWM1_Initialize:	
  6799                           ;psect for function _EPWM1_Initialize
  6800                           
  6801     0D2F                     l2900:	
  6802                           ;incstack = 0
  6803                           ; Regs used in _EPWM1_Initialize: [wreg+status,2+status,0]
  6804                           
  6805                           
  6806                           ;mcc_generated_files/epwm1.c: 69:  CCP1CON = 0x3C;
  6807     0D2F  303C               	movlw	60
  6808     0D30  0025               	movlb	5	; select bank5
  6809     0D31  0093               	movwf	19	;volatile
  6810     0D32                     l2902:
  6811                           
  6812                           ;mcc_generated_files/epwm1.c: 72:  ECCP1AS = 0x00;
  6813     0D32  0195               	clrf	21	;volatile
  6814     0D33                     l2904:
  6815                           
  6816                           ;mcc_generated_files/epwm1.c: 75:  PWM1CON = 0x80;
  6817     0D33  3080               	movlw	128
  6818     0D34  0094               	movwf	20	;volatile
  6819     0D35                     l2906:
  6820                           
  6821                           ;mcc_generated_files/epwm1.c: 78:  PSTR1CON = 0x01;
  6822     0D35  3001               	movlw	1
  6823     0D36  0096               	movwf	22	;volatile
  6824     0D37                     l2908:
  6825                           
  6826                           ;mcc_generated_files/epwm1.c: 81:  CCPR1H = 0x00;
  6827     0D37  0192               	clrf	18	;volatile
  6828                           
  6829                           ;mcc_generated_files/epwm1.c: 84:  CCPR1L = 0x7F;
  6830     0D38  307F               	movlw	127
  6831     0D39  0091               	movwf	17	;volatile
  6832     0D3A                     l2910:
  6833                           
  6834                           ;mcc_generated_files/epwm1.c: 87:  CCPTMRS0bits.C1TSEL = 0x0;
  6835     0D3A  30FC               	movlw	-4
  6836     0D3B  059E               	andwf	30,f	;volatile
  6837     0D3C                     l170:
  6838     0D3C  0008               	return
  6839     0D3D                     __end_of_EPWM1_Initialize:
  6840                           
  6841                           	psect	text39
  6842     0CA9                     __ptext39:	
  6843 ;; *************** function _DAC_Initialize *****************
  6844 ;; Defined at:
  6845 ;;		line 58 in file "mcc_generated_files/dac.c"
  6846 ;; Parameters:    Size  Location     Type
  6847 ;;		None
  6848 ;; Auto vars:     Size  Location     Type
  6849 ;;		None
  6850 ;; Return value:  Size  Location     Type
  6851 ;;                  1    wreg      void 
  6852 ;; Registers used:
  6853 ;;		wreg
  6854 ;; Tracked objects:
  6855 ;;		On entry : 0/0
  6856 ;;		On exit  : 0/0
  6857 ;;		Unchanged: 0/0
  6858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6859 ;;      Params:         0       0       0       0       0       0
  6860 ;;      Locals:         0       0       0       0       0       0
  6861 ;;      Temps:          0       0       0       0       0       0
  6862 ;;      Totals:         0       0       0       0       0       0
  6863 ;;Total ram usage:        0 bytes
  6864 ;; Hardware stack levels used: 1
  6865 ;; Hardware stack levels required when called: 6
  6866 ;; This function calls:
  6867 ;;		Nothing
  6868 ;; This function is called by:
  6869 ;;		_SYSTEM_Initialize
  6870 ;; This function uses a non-reentrant model
  6871 ;;
  6872                           
  6873     0CA9                     _DAC_Initialize:	
  6874                           ;psect for function _DAC_Initialize
  6875                           
  6876     0CA9                     l2850:	
  6877                           ;incstack = 0
  6878                           ; Regs used in _DAC_Initialize: [wreg]
  6879                           
  6880                           
  6881                           ;mcc_generated_files/dac.c: 61:     DACCON0 = 0x80;
  6882     0CA9  3080               	movlw	128
  6883     0CAA  0022               	movlb	2	; select bank2
  6884     0CAB  0098               	movwf	24	;volatile
  6885                           
  6886                           ;mcc_generated_files/dac.c: 63:     DACCON1 = 0x06;
  6887     0CAC  3006               	movlw	6
  6888     0CAD  0099               	movwf	25	;volatile
  6889     0CAE                     l445:
  6890     0CAE  0008               	return
  6891     0CAF                     __end_of_DAC_Initialize:
  6892                           
  6893                           	psect	text40
  6894     0CA3                     __ptext40:	
  6895 ;; *************** function _CMP1_Initialize *****************
  6896 ;; Defined at:
  6897 ;;		line 58 in file "mcc_generated_files/cmp1.c"
  6898 ;; Parameters:    Size  Location     Type
  6899 ;;		None
  6900 ;; Auto vars:     Size  Location     Type
  6901 ;;		None
  6902 ;; Return value:  Size  Location     Type
  6903 ;;                  1    wreg      void 
  6904 ;; Registers used:
  6905 ;;		wreg
  6906 ;; Tracked objects:
  6907 ;;		On entry : 0/0
  6908 ;;		On exit  : 0/0
  6909 ;;		Unchanged: 0/0
  6910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6911 ;;      Params:         0       0       0       0       0       0
  6912 ;;      Locals:         0       0       0       0       0       0
  6913 ;;      Temps:          0       0       0       0       0       0
  6914 ;;      Totals:         0       0       0       0       0       0
  6915 ;;Total ram usage:        0 bytes
  6916 ;; Hardware stack levels used: 1
  6917 ;; Hardware stack levels required when called: 6
  6918 ;; This function calls:
  6919 ;;		Nothing
  6920 ;; This function is called by:
  6921 ;;		_SYSTEM_Initialize
  6922 ;; This function uses a non-reentrant model
  6923 ;;
  6924                           
  6925     0CA3                     _CMP1_Initialize:	
  6926                           ;psect for function _CMP1_Initialize
  6927                           
  6928     0CA3                     l2892:	
  6929                           ;incstack = 0
  6930                           ; Regs used in _CMP1_Initialize: [wreg]
  6931                           
  6932                           
  6933                           ;mcc_generated_files/cmp1.c: 62:     CM1CON0 = 0x84;
  6934     0CA3  3084               	movlw	132
  6935     0CA4  0022               	movlb	2	; select bank2
  6936     0CA5  0091               	movwf	17	;volatile
  6937                           
  6938                           ;mcc_generated_files/cmp1.c: 65:     CM1CON1 = 0x10;
  6939     0CA6  3010               	movlw	16
  6940     0CA7  0092               	movwf	18	;volatile
  6941     0CA8                     l460:
  6942     0CA8  0008               	return
  6943     0CA9                     __end_of_CMP1_Initialize:
  6944                           
  6945                           	psect	text41
  6946     07F8                     __ptext41:	
  6947 ;; *************** function _ADC_Initialize *****************
  6948 ;; Defined at:
  6949 ;;		line 67 in file "mcc_generated_files/adc.c"
  6950 ;; Parameters:    Size  Location     Type
  6951 ;;		None
  6952 ;; Auto vars:     Size  Location     Type
  6953 ;;		None
  6954 ;; Return value:  Size  Location     Type
  6955 ;;                  1    wreg      void 
  6956 ;; Registers used:
  6957 ;;		wreg, status,2
  6958 ;; Tracked objects:
  6959 ;;		On entry : 0/0
  6960 ;;		On exit  : 0/0
  6961 ;;		Unchanged: 0/0
  6962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6963 ;;      Params:         0       0       0       0       0       0
  6964 ;;      Locals:         0       0       0       0       0       0
  6965 ;;      Temps:          0       0       0       0       0       0
  6966 ;;      Totals:         0       0       0       0       0       0
  6967 ;;Total ram usage:        0 bytes
  6968 ;; Hardware stack levels used: 1
  6969 ;; Hardware stack levels required when called: 6
  6970 ;; This function calls:
  6971 ;;		Nothing
  6972 ;; This function is called by:
  6973 ;;		_SYSTEM_Initialize
  6974 ;; This function uses a non-reentrant model
  6975 ;;
  6976                           
  6977     07F8                     _ADC_Initialize:	
  6978                           ;psect for function _ADC_Initialize
  6979                           
  6980     07F8                     l2894:	
  6981                           ;incstack = 0
  6982                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  6983                           
  6984                           
  6985                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0xD3;
  6986     07F8  30D3               	movlw	211
  6987     07F9  0021               	movlb	1	; select bank1
  6988     07FA  009E               	movwf	30	;volatile
  6989     07FB                     l2896:
  6990                           
  6991                           ;mcc_generated_files/adc.c: 75:     ADRESL = 0x00;
  6992     07FB  019B               	clrf	27	;volatile
  6993     07FC                     l2898:
  6994                           
  6995                           ;mcc_generated_files/adc.c: 78:     ADRESH = 0x00;
  6996     07FC  019C               	clrf	28	;volatile
  6997                           
  6998                           ;mcc_generated_files/adc.c: 81:     ADCON0 = 0x01;
  6999     07FD  3001               	movlw	1
  7000     07FE  009D               	movwf	29	;volatile
  7001     07FF                     l417:
  7002     07FF  0008               	return
  7003     0800                     __end_of_ADC_Initialize:
  7004                           
  7005                           	psect	text42
  7006     0E38                     __ptext42:	
  7007 ;; *************** function _ADC_GetConversion *****************
  7008 ;; Defined at:
  7009 ;;		line 112 in file "mcc_generated_files/adc.c"
  7010 ;; Parameters:    Size  Location     Type
  7011 ;;  channel         1    wreg     enum E2495
  7012 ;; Auto vars:     Size  Location     Type
  7013 ;;  channel         1    3[BANK1 ] enum E2495
  7014 ;; Return value:  Size  Location     Type
  7015 ;;                  2    0[BANK1 ] unsigned short 
  7016 ;; Registers used:
  7017 ;;		wreg, status,2, status,0
  7018 ;; Tracked objects:
  7019 ;;		On entry : 0/0
  7020 ;;		On exit  : 0/0
  7021 ;;		Unchanged: 0/0
  7022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7023 ;;      Params:         0       0       2       0       0       0
  7024 ;;      Locals:         0       0       1       0       0       0
  7025 ;;      Temps:          0       0       1       0       0       0
  7026 ;;      Totals:         0       0       4       0       0       0
  7027 ;;Total ram usage:        4 bytes
  7028 ;; Hardware stack levels used: 1
  7029 ;; Hardware stack levels required when called: 6
  7030 ;; This function calls:
  7031 ;;		Nothing
  7032 ;; This function is called by:
  7033 ;;		_main
  7034 ;; This function uses a non-reentrant model
  7035 ;;
  7036                           
  7037     0E38                     _ADC_GetConversion:	
  7038                           ;psect for function _ADC_GetConversion
  7039                           
  7040                           
  7041                           ;incstack = 0
  7042                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
  7043                           ;ADC_GetConversion@channel stored from wreg
  7044     0E38  0021               	movlb	1	; select bank1
  7045     0E39  00C9               	movwf	ADC_GetConversion@channel^(0+128)
  7046     0E3A                     l3136:
  7047                           
  7048                           ;mcc_generated_files/adc.c: 112: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 113: {;mcc_generated_files/adc.c: 115:     ADCON0bits.CHS = ch
      +                          annel;
  7049     0E3A  0849               	movf	ADC_GetConversion@channel^(0+128),w
  7050     0E3B  00C8               	movwf	??_ADC_GetConversion^(0+128)
  7051     0E3C  0DC8               	rlf	??_ADC_GetConversion^(0+128),f
  7052     0E3D  0DC8               	rlf	??_ADC_GetConversion^(0+128),f
  7053     0E3E  081D               	movf	29,w	;volatile
  7054     0E3F  0648               	xorwf	??_ADC_GetConversion^(0+128),w
  7055     0E40  3983               	andlw	-125
  7056     0E41  0648               	xorwf	??_ADC_GetConversion^(0+128),w
  7057     0E42  009D               	movwf	29	;volatile
  7058     0E43                     l3138:
  7059                           
  7060                           ;mcc_generated_files/adc.c: 118:     ADCON0bits.ADON = 1;
  7061     0E43  141D               	bsf	29,0	;volatile
  7062     0E44                     l3140:
  7063                           
  7064                           ;mcc_generated_files/adc.c: 121:     _delay((unsigned long)((5)*(16000000/4000000.0)));
  7065     0E44  3006               	movlw	6
  7066     0E45                     u2497:
  7067     0E45  0B89               	decfsz	9,f
  7068     0E46  2E45               	goto	u2497
  7069     0E47  3200               	nop2
  7070     0E48                     l3142:
  7071                           
  7072                           ;mcc_generated_files/adc.c: 124:     ADCON0bits.GO_nDONE = 1;
  7073     0E48  0021               	movlb	1	; select bank1
  7074     0E49  149D               	bsf	29,1	;volatile
  7075     0E4A                     l432:	
  7076                           ;mcc_generated_files/adc.c: 128:     {;mcc_generated_files/adc.c: 129:     }
  7077                           
  7078                           
  7079                           ;mcc_generated_files/adc.c: 127:     while (ADCON0bits.GO_nDONE)
  7080     0E4A  189D               	btfsc	29,1	;volatile
  7081     0E4B  2E4D               	goto	u2251
  7082     0E4C  2E4E               	goto	u2250
  7083     0E4D                     u2251:
  7084     0E4D  2E4A               	goto	l432
  7085     0E4E                     u2250:
  7086     0E4E                     l3144:
  7087                           
  7088                           ;mcc_generated_files/adc.c: 132:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  7089     0E4E  081C               	movf	28,w	;volatile
  7090     0E4F  00C7               	movwf	(?_ADC_GetConversion+1)^(0+128)
  7091     0E50  081B               	movf	27,w	;volatile
  7092     0E51  00C6               	movwf	?_ADC_GetConversion^(0+128)
  7093     0E52                     l435:
  7094     0E52  0008               	return
  7095     0E53                     __end_of_ADC_GetConversion:
  7096                           
  7097                           	psect	intentry
  7098     0004                     __pintentry:	
  7099 ;; *************** function _INTERRUPT_InterruptManager *****************
  7100 ;; Defined at:
  7101 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  7102 ;; Parameters:    Size  Location     Type
  7103 ;;		None
  7104 ;; Auto vars:     Size  Location     Type
  7105 ;;		None
  7106 ;; Return value:  Size  Location     Type
  7107 ;;                  1    wreg      void 
  7108 ;; Registers used:
  7109 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7110 ;; Tracked objects:
  7111 ;;		On entry : 0/0
  7112 ;;		On exit  : 0/0
  7113 ;;		Unchanged: 0/0
  7114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7115 ;;      Params:         0       0       0       0       0       0
  7116 ;;      Locals:         0       0       0       0       0       0
  7117 ;;      Temps:          0       0       0       0       0       0
  7118 ;;      Totals:         0       0       0       0       0       0
  7119 ;;Total ram usage:        0 bytes
  7120 ;; Hardware stack levels used: 1
  7121 ;; Hardware stack levels required when called: 5
  7122 ;; This function calls:
  7123 ;;		NULL
  7124 ;;		_EUSART_Receive_ISR
  7125 ;;		_EUSART_Transmit_ISR
  7126 ;;		_PIN_MANAGER_IOC
  7127 ;;		_TMR0_ISR
  7128 ;;		_TMR1_GATE_ISR
  7129 ;;		_TMR2_ISR
  7130 ;;		_receive
  7131 ;; This function is called by:
  7132 ;;		Interrupt level 1
  7133 ;; This function uses a non-reentrant model
  7134 ;;
  7135                           
  7136     0004                     _INTERRUPT_InterruptManager:
  7137                           
  7138                           ;incstack = 0
  7139     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  7140                           
  7141                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7142     0005  3180               	pagesel	$
  7143     0006                     i1l3218:
  7144                           
  7145                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  7146     0006  1E8B               	btfss	11,5	;volatile
  7147     0007  2809               	goto	u233_21
  7148     0008  280A               	goto	u233_20
  7149     0009                     u233_21:
  7150     0009  2812               	goto	i1l196
  7151     000A                     u233_20:
  7152     000A                     i1l3220:
  7153     000A  1D0B               	btfss	11,2	;volatile
  7154     000B  280D               	goto	u234_21
  7155     000C  280E               	goto	u234_20
  7156     000D                     u234_21:
  7157     000D  2812               	goto	i1l196
  7158     000E                     u234_20:
  7159     000E                     i1l3222:
  7160                           
  7161                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
  7162     000E  318D  255B  3180   	fcall	_TMR0_ISR
  7163                           
  7164                           ;mcc_generated_files/interrupt_manager.c: 58:     }
  7165     0011  2860               	goto	i1l210
  7166     0012                     i1l196:	
  7167                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.IOCIE == 1 && INTCO
      +                          Nbits.IOCIF == 1)
  7168                           
  7169     0012  1D8B               	btfss	11,3	;volatile
  7170     0013  2815               	goto	u235_21
  7171     0014  2816               	goto	u235_20
  7172     0015                     u235_21:
  7173     0015  281E               	goto	i1l198
  7174     0016                     u235_20:
  7175     0016                     i1l3224:
  7176     0016  1C0B               	btfss	11,0	;volatile
  7177     0017  2819               	goto	u236_21
  7178     0018  281A               	goto	u236_20
  7179     0019                     u236_21:
  7180     0019  281E               	goto	i1l198
  7181     001A                     u236_20:
  7182     001A                     i1l3226:
  7183                           
  7184                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         PIN_MANAGER_IOC();
  7185     001A  318C  247C  3180   	fcall	_PIN_MANAGER_IOC
  7186                           
  7187                           ;mcc_generated_files/interrupt_manager.c: 62:     }
  7188     001D  2860               	goto	i1l210
  7189     001E                     i1l198:	
  7190                           ;mcc_generated_files/interrupt_manager.c: 63:     else if(INTCONbits.PEIE == 1)
  7191                           
  7192     001E  1F0B               	btfss	11,6	;volatile
  7193     001F  2821               	goto	u237_21
  7194     0020  2822               	goto	u237_20
  7195     0021                     u237_21:
  7196     0021  2860               	goto	i1l204
  7197     0022                     u237_20:
  7198     0022                     i1l3228:
  7199                           
  7200                           ;mcc_generated_files/interrupt_manager.c: 64:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 65:         if(PIE1bits.TMR1GIE == 1 && PIR1bits.TMR1GIF == 1)
  7201     0022  0021               	movlb	1	; select bank1
  7202     0023  1F91               	btfss	17,7	;volatile
  7203     0024  2826               	goto	u238_21
  7204     0025  2827               	goto	u238_20
  7205     0026                     u238_21:
  7206     0026  2830               	goto	i1l201
  7207     0027                     u238_20:
  7208     0027                     i1l3230:
  7209     0027  0020               	movlb	0	; select bank0
  7210     0028  1F91               	btfss	17,7	;volatile
  7211     0029  282B               	goto	u239_21
  7212     002A  282C               	goto	u239_20
  7213     002B                     u239_21:
  7214     002B  2830               	goto	i1l201
  7215     002C                     u239_20:
  7216     002C                     i1l3232:
  7217                           
  7218                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             TMR1_GATE_ISR();
  7219     002C  318D  253D  3180   	fcall	_TMR1_GATE_ISR
  7220                           
  7221                           ;mcc_generated_files/interrupt_manager.c: 68:         }
  7222     002F  2860               	goto	i1l210
  7223     0030                     i1l201:	
  7224                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE1bits.RCIE == 1 && PIR1
      +                          bits.RCIF == 1)
  7225                           
  7226     0030  0021               	movlb	1	; select bank1
  7227     0031  1E91               	btfss	17,5	;volatile
  7228     0032  2834               	goto	u240_21
  7229     0033  2835               	goto	u240_20
  7230     0034                     u240_21:
  7231     0034  2841               	goto	i1l203
  7232     0035                     u240_20:
  7233     0035                     i1l3234:
  7234     0035  0020               	movlb	0	; select bank0
  7235     0036  1E91               	btfss	17,5	;volatile
  7236     0037  2839               	goto	u241_21
  7237     0038  283A               	goto	u241_20
  7238     0039                     u241_21:
  7239     0039  2841               	goto	i1l203
  7240     003A                     u241_20:
  7241     003A                     i1l3236:
  7242                           
  7243                           ;mcc_generated_files/interrupt_manager.c: 70:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 71:             EUSART_RxDefaultInterruptHandler();
  7244     003A  0021               	movlb	1	; select bank1
  7245     003B  0862               	movf	(_EUSART_RxDefaultInterruptHandler+1)^(0+128),w
  7246     003C  008A               	movwf	10
  7247     003D  0861               	movf	_EUSART_RxDefaultInterruptHandler^(0+128),w
  7248     003E  000A               	callw
  7249     003F  3180               	pagesel	$
  7250                           
  7251                           ;mcc_generated_files/interrupt_manager.c: 72:         }
  7252     0040  2860               	goto	i1l210
  7253     0041                     i1l203:	
  7254                           ;mcc_generated_files/interrupt_manager.c: 73:         else if(PIE1bits.TMR2IE == 1 && PI
      +                          R1bits.TMR2IF == 1)
  7255                           
  7256     0041  0021               	movlb	1	; select bank1
  7257     0042  1C91               	btfss	17,1	;volatile
  7258     0043  2845               	goto	u242_21
  7259     0044  2846               	goto	u242_20
  7260     0045                     u242_21:
  7261     0045  284F               	goto	i1l205
  7262     0046                     u242_20:
  7263     0046                     i1l3238:
  7264     0046  0020               	movlb	0	; select bank0
  7265     0047  1C91               	btfss	17,1	;volatile
  7266     0048  284A               	goto	u243_21
  7267     0049  284B               	goto	u243_20
  7268     004A                     u243_21:
  7269     004A  284F               	goto	i1l205
  7270     004B                     u243_20:
  7271     004B                     i1l3240:
  7272                           
  7273                           ;mcc_generated_files/interrupt_manager.c: 74:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 75:             TMR2_ISR();
  7274     004B  318D  254C  3180   	fcall	_TMR2_ISR
  7275                           
  7276                           ;mcc_generated_files/interrupt_manager.c: 76:         }
  7277     004E  2860               	goto	i1l210
  7278     004F                     i1l205:	
  7279                           ;mcc_generated_files/interrupt_manager.c: 77:         else if(PIE1bits.TXIE == 1 && PIR1
      +                          bits.TXIF == 1)
  7280                           
  7281     004F  0021               	movlb	1	; select bank1
  7282     0050  1E11               	btfss	17,4	;volatile
  7283     0051  2853               	goto	u244_21
  7284     0052  2854               	goto	u244_20
  7285     0053                     u244_21:
  7286     0053  2860               	goto	i1l204
  7287     0054                     u244_20:
  7288     0054                     i1l3242:
  7289     0054  0020               	movlb	0	; select bank0
  7290     0055  1E11               	btfss	17,4	;volatile
  7291     0056  2858               	goto	u245_21
  7292     0057  2859               	goto	u245_20
  7293     0058                     u245_21:
  7294     0058  2860               	goto	i1l204
  7295     0059                     u245_20:
  7296     0059                     i1l3244:
  7297                           
  7298                           ;mcc_generated_files/interrupt_manager.c: 78:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 79:             EUSART_TxDefaultInterruptHandler();
  7299     0059  0021               	movlb	1	; select bank1
  7300     005A  0860               	movf	(_EUSART_TxDefaultInterruptHandler+1)^(0+128),w
  7301     005B  008A               	movwf	10
  7302     005C  085F               	movf	_EUSART_TxDefaultInterruptHandler^(0+128),w
  7303     005D  000A               	callw
  7304     005E  3180               	pagesel	$
  7305                           
  7306                           ;mcc_generated_files/interrupt_manager.c: 80:         }
  7307     005F  2860               	goto	i1l210
  7308     0060                     i1l204:
  7309     0060                     i1l210:
  7310     0060  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  7311     0061  0009               	retfie
  7312     0062                     __end_of_INTERRUPT_InterruptManager:
  7313                           
  7314                           	psect	text44
  7315     078D                     __ptext44:	
  7316 ;; *************** function _EUSART_Receive_ISR *****************
  7317 ;; Defined at:
  7318 ;;		line 216 in file "mcc_generated_files/eusart.c"
  7319 ;; Parameters:    Size  Location     Type
  7320 ;;		None
  7321 ;; Auto vars:     Size  Location     Type
  7322 ;;		None
  7323 ;; Return value:  Size  Location     Type
  7324 ;;                  1    wreg      void 
  7325 ;; Registers used:
  7326 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7327 ;; Tracked objects:
  7328 ;;		On entry : 0/0
  7329 ;;		On exit  : 0/0
  7330 ;;		Unchanged: 0/0
  7331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7332 ;;      Params:         0       0       0       0       0       0
  7333 ;;      Locals:         0       0       0       0       0       0
  7334 ;;      Temps:          0       0       0       0       0       0
  7335 ;;      Totals:         0       0       0       0       0       0
  7336 ;;Total ram usage:        0 bytes
  7337 ;; Hardware stack levels used: 1
  7338 ;; Hardware stack levels required when called: 2
  7339 ;; This function calls:
  7340 ;;		NULL
  7341 ;;		_EUSART_DefaultErrorHandler
  7342 ;;		_EUSART_DefaultFramingErrorHandler
  7343 ;;		_EUSART_DefaultOverrunErrorHandler
  7344 ;;		_EUSART_RxDataHandler
  7345 ;; This function is called by:
  7346 ;;		_EUSART_Initialize
  7347 ;;		_INTERRUPT_InterruptManager
  7348 ;; This function uses a non-reentrant model
  7349 ;;
  7350                           
  7351     078D                     _EUSART_Receive_ISR:	
  7352                           ;psect for function _EUSART_Receive_ISR
  7353                           
  7354     078D                     i1l3116:	
  7355                           ;incstack = 0
  7356                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7357                           
  7358                           
  7359                           ;mcc_generated_files/eusart.c: 219:     eusartRxStatusBuffer[eusartRxHead].status = 0;
  7360     078D  0021               	movlb	1	; select bank1
  7361     078E  0842               	movf	_eusartRxHead^(0+128),w	;volatile
  7362     078F  3E20               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
  7363     0790  0086               	movwf	6
  7364     0791  3001               	movlw	1	; select bank2/3
  7365     0792  0087               	movwf	7
  7366     0793  0181               	clrf	1
  7367     0794                     i1l3118:
  7368                           
  7369                           ;mcc_generated_files/eusart.c: 221:     if(RCSTAbits.FERR){
  7370     0794  0023               	movlb	3	; select bank3
  7371     0795  1D1D               	btfss	29,2	;volatile
  7372     0796  2F98               	goto	u222_21
  7373     0797  2F99               	goto	u222_20
  7374     0798                     u222_21:
  7375     0798  2FA5               	goto	i1l3124
  7376     0799                     u222_20:
  7377     0799                     i1l3120:
  7378                           
  7379                           ;mcc_generated_files/eusart.c: 222:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
  7380     0799  0021               	movlb	1	; select bank1
  7381     079A  0842               	movf	_eusartRxHead^(0+128),w	;volatile
  7382     079B  3E20               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
  7383     079C  0086               	movwf	6
  7384     079D  3001               	movlw	1	; select bank2/3
  7385     079E  0087               	movwf	7
  7386     079F  1481               	bsf	1,1
  7387     07A0                     i1l3122:
  7388                           
  7389                           ;mcc_generated_files/eusart.c: 223:         EUSART_FramingErrorHandler();
  7390     07A0  085E               	movf	(_EUSART_FramingErrorHandler+1)^(0+128),w
  7391     07A1  008A               	movwf	10
  7392     07A2  085D               	movf	_EUSART_FramingErrorHandler^(0+128),w
  7393     07A3  000A               	callw
  7394     07A4  3187               	pagesel	$
  7395     07A5                     i1l3124:
  7396                           
  7397                           ;mcc_generated_files/eusart.c: 226:     if(RCSTAbits.OERR){
  7398     07A5  0023               	movlb	3	; select bank3
  7399     07A6  1C9D               	btfss	29,1	;volatile
  7400     07A7  2FA9               	goto	u223_21
  7401     07A8  2FAA               	goto	u223_20
  7402     07A9                     u223_21:
  7403     07A9  2FB7               	goto	i1l3130
  7404     07AA                     u223_20:
  7405     07AA                     i1l3126:
  7406                           
  7407                           ;mcc_generated_files/eusart.c: 227:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
  7408     07AA  0021               	movlb	1	; select bank1
  7409     07AB  0842               	movf	_eusartRxHead^(0+128),w	;volatile
  7410     07AC  3E20               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
  7411     07AD  0086               	movwf	6
  7412     07AE  3001               	movlw	1	; select bank2/3
  7413     07AF  0087               	movwf	7
  7414     07B0  1501               	bsf	1,2
  7415     07B1                     i1l3128:
  7416                           
  7417                           ;mcc_generated_files/eusart.c: 228:         EUSART_OverrunErrorHandler();
  7418     07B1  0022               	movlb	2	; select bank2
  7419     07B2  083D               	movf	(_EUSART_OverrunErrorHandler+1)^(0+256),w
  7420     07B3  008A               	movwf	10
  7421     07B4  083C               	movf	_EUSART_OverrunErrorHandler^(0+256),w
  7422     07B5  000A               	callw
  7423     07B6  3187               	pagesel	$
  7424     07B7                     i1l3130:
  7425                           
  7426                           ;mcc_generated_files/eusart.c: 231:     if(eusartRxStatusBuffer[eusartRxHead].status){
  7427     07B7  0021               	movlb	1	; select bank1
  7428     07B8  0842               	movf	_eusartRxHead^(0+128),w	;volatile
  7429     07B9  3E20               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
  7430     07BA  0086               	movwf	6
  7431     07BB  3001               	movlw	1	; select bank2/3
  7432     07BC  0087               	movwf	7
  7433     07BD  0801               	movf	1,w
  7434     07BE  1903               	btfsc	3,2
  7435     07BF  2FC1               	goto	u224_21
  7436     07C0  2FC2               	goto	u224_20
  7437     07C1                     u224_21:
  7438     07C1  2FC9               	goto	i1l3134
  7439     07C2                     u224_20:
  7440     07C2                     i1l3132:
  7441                           
  7442                           ;mcc_generated_files/eusart.c: 232:         EUSART_ErrorHandler();
  7443     07C2  0022               	movlb	2	; select bank2
  7444     07C3  083B               	movf	(_EUSART_ErrorHandler+1)^(0+256),w
  7445     07C4  008A               	movwf	10
  7446     07C5  083A               	movf	_EUSART_ErrorHandler^(0+256),w
  7447     07C6  000A               	callw
  7448     07C7  3187               	pagesel	$
  7449                           
  7450                           ;mcc_generated_files/eusart.c: 233:     } else {
  7451     07C8  2FCC               	goto	i1l326
  7452     07C9                     i1l3134:
  7453                           
  7454                           ;mcc_generated_files/eusart.c: 234:         EUSART_RxDataHandler();
  7455     07C9  318E  2604  3187   	fcall	_EUSART_RxDataHandler
  7456     07CC                     i1l326:
  7457     07CC  0008               	return
  7458     07CD                     __end_of_EUSART_Receive_ISR:
  7459                           
  7460                           	psect	text45
  7461     0E8B                     __ptext45:	
  7462 ;; *************** function _receive *****************
  7463 ;; Defined at:
  7464 ;;		line 180 in file "main.c"
  7465 ;; Parameters:    Size  Location     Type
  7466 ;;		None
  7467 ;; Auto vars:     Size  Location     Type
  7468 ;;		None
  7469 ;; Return value:  Size  Location     Type
  7470 ;;                  1    wreg      void 
  7471 ;; Registers used:
  7472 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7473 ;; Tracked objects:
  7474 ;;		On entry : 0/0
  7475 ;;		On exit  : 0/0
  7476 ;;		Unchanged: 0/0
  7477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7478 ;;      Params:         0       0       0       0       0       0
  7479 ;;      Locals:         0       0       0       0       0       0
  7480 ;;      Temps:          1       0       0       0       0       0
  7481 ;;      Totals:         1       0       0       0       0       0
  7482 ;;Total ram usage:        1 bytes
  7483 ;; Hardware stack levels used: 1
  7484 ;; Hardware stack levels required when called: 1
  7485 ;; This function calls:
  7486 ;;		_EUSART_Read
  7487 ;;		_TMR0_Reload
  7488 ;; This function is called by:
  7489 ;;		_main
  7490 ;;		_INTERRUPT_InterruptManager
  7491 ;; This function uses a non-reentrant model
  7492 ;;
  7493                           
  7494     0E8B                     _receive:	
  7495                           ;psect for function _receive
  7496                           
  7497     0E8B                     i1l3180:	
  7498                           ;incstack = 0
  7499                           ; Regs used in _receive: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7500                           
  7501                           
  7502                           ;main.c: 181:     count_40ms = 0;
  7503     0E8B  0020               	movlb	0	; select bank0
  7504     0E8C  01EC               	clrf	_count_40ms
  7505     0E8D                     i1l3182:
  7506                           
  7507                           ;main.c: 182:     TMR0_Reload();
  7508     0E8D  318C  249E  318E   	fcall	_TMR0_Reload
  7509     0E90                     i1l3184:
  7510                           
  7511                           ;main.c: 183:     Rx_ctrl = 1;
  7512     0E90  0020               	movlb	0	; select bank0
  7513     0E91  01EF               	clrf	_Rx_ctrl
  7514     0E92  0AEF               	incf	_Rx_ctrl,f
  7515     0E93                     i1l3186:
  7516                           
  7517                           ;main.c: 184:     if(countRx<8 -1){
  7518     0E93  3007               	movlw	7
  7519     0E94  026D               	subwf	_countRx,w
  7520     0E95  1803               	skipnc
  7521     0E96  2E98               	goto	u228_21
  7522     0E97  2E99               	goto	u228_20
  7523     0E98                     u228_21:
  7524     0E98  2EA8               	goto	i1l729
  7525     0E99                     u228_20:
  7526     0E99                     i1l3188:
  7527                           
  7528                           ;main.c: 185:         bufferRx[countRx] = EUSART_Read();
  7529     0E99  318F  270E  318E   	fcall	_EUSART_Read
  7530     0E9C  00F2               	movwf	??_receive
  7531     0E9D  0020               	movlb	0	; select bank0
  7532     0E9E  086D               	movf	_countRx,w
  7533     0E9F  3E54               	addlw	(low (_bufferRx| 0))& (0+255)
  7534     0EA0  0086               	movwf	6
  7535     0EA1  0187               	clrf	7
  7536     0EA2  0872               	movf	??_receive,w
  7537     0EA3  0081               	movwf	1
  7538     0EA4                     i1l3190:
  7539                           
  7540                           ;main.c: 186:         countRx++;
  7541     0EA4  3001               	movlw	1
  7542     0EA5  00F2               	movwf	??_receive
  7543     0EA6  0872               	movf	??_receive,w
  7544     0EA7  07ED               	addwf	_countRx,f
  7545     0EA8                     i1l729:
  7546     0EA8  0008               	return
  7547     0EA9                     __end_of_receive:
  7548                           
  7549                           	psect	text46
  7550     0C9E                     __ptext46:	
  7551 ;; *************** function _TMR0_Reload *****************
  7552 ;; Defined at:
  7553 ;;		line 102 in file "mcc_generated_files/tmr0.c"
  7554 ;; Parameters:    Size  Location     Type
  7555 ;;		None
  7556 ;; Auto vars:     Size  Location     Type
  7557 ;;		None
  7558 ;; Return value:  Size  Location     Type
  7559 ;;                  1    wreg      void 
  7560 ;; Registers used:
  7561 ;;		wreg
  7562 ;; Tracked objects:
  7563 ;;		On entry : 0/0
  7564 ;;		On exit  : 0/0
  7565 ;;		Unchanged: 0/0
  7566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7567 ;;      Params:         0       0       0       0       0       0
  7568 ;;      Locals:         0       0       0       0       0       0
  7569 ;;      Temps:          0       0       0       0       0       0
  7570 ;;      Totals:         0       0       0       0       0       0
  7571 ;;Total ram usage:        0 bytes
  7572 ;; Hardware stack levels used: 1
  7573 ;; This function calls:
  7574 ;;		Nothing
  7575 ;; This function is called by:
  7576 ;;		_receive
  7577 ;; This function uses a non-reentrant model
  7578 ;;
  7579                           
  7580     0C9E                     _TMR0_Reload:	
  7581                           ;psect for function _TMR0_Reload
  7582                           
  7583     0C9E                     i1l2990:	
  7584                           ;incstack = 0
  7585                           ; Regs used in _TMR0_Reload: [wreg]
  7586                           
  7587                           
  7588                           ;mcc_generated_files/tmr0.c: 105:     TMR0 = timer0ReloadVal;
  7589     0C9E  0021               	movlb	1	; select bank1
  7590     0C9F  083E               	movf	_timer0ReloadVal^(0+128),w	;volatile
  7591     0CA0  0020               	movlb	0	; select bank0
  7592     0CA1  0095               	movwf	21	;volatile
  7593     0CA2                     i1l380:
  7594     0CA2  0008               	return
  7595     0CA3                     __end_of_TMR0_Reload:
  7596                           
  7597                           	psect	text47
  7598     0F0E                     __ptext47:	
  7599 ;; *************** function _EUSART_Read *****************
  7600 ;; Defined at:
  7601 ;;		line 151 in file "mcc_generated_files/eusart.c"
  7602 ;; Parameters:    Size  Location     Type
  7603 ;;		None
  7604 ;; Auto vars:     Size  Location     Type
  7605 ;;  readValue       1    1[COMMON] unsigned char 
  7606 ;; Return value:  Size  Location     Type
  7607 ;;                  1    wreg      unsigned char 
  7608 ;; Registers used:
  7609 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7610 ;; Tracked objects:
  7611 ;;		On entry : 0/0
  7612 ;;		On exit  : 0/0
  7613 ;;		Unchanged: 0/0
  7614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7615 ;;      Params:         0       0       0       0       0       0
  7616 ;;      Locals:         1       0       0       0       0       0
  7617 ;;      Temps:          1       0       0       0       0       0
  7618 ;;      Totals:         2       0       0       0       0       0
  7619 ;;Total ram usage:        2 bytes
  7620 ;; Hardware stack levels used: 1
  7621 ;; This function calls:
  7622 ;;		Nothing
  7623 ;; This function is called by:
  7624 ;;		_receive
  7625 ;; This function uses a non-reentrant model
  7626 ;;
  7627                           
  7628     0F0E                     _EUSART_Read:	
  7629                           ;psect for function _EUSART_Read
  7630                           
  7631     0F0E                     i1l2964:	
  7632                           ;incstack = 0
  7633                           ; Regs used in _EUSART_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
  7634                           
  7635     0F0E                     i1l2966:	
  7636                           ;mcc_generated_files/eusart.c: 155:     while(0 == eusartRxCount)
  7637                           
  7638                           
  7639                           ;mcc_generated_files/eusart.c: 155:     while(0 == eusartRxCount)
  7640     0F0E  0021               	movlb	1	; select bank1
  7641     0F0F  0840               	movf	_eusartRxCount^(0+128),w	;volatile
  7642     0F10  1903               	btfsc	3,2
  7643     0F11  2F13               	goto	u202_21
  7644     0F12  2F14               	goto	u202_20
  7645     0F13                     u202_21:
  7646     0F13  2F0E               	goto	i1l2966
  7647     0F14                     u202_20:
  7648     0F14                     i1l2968:
  7649                           
  7650                           ;mcc_generated_files/eusart.c: 159:     eusartRxLastError = eusartRxStatusBuffer[eusartR
      +                          xTail];
  7651     0F14  0841               	movf	_eusartRxTail^(0+128),w	;volatile
  7652     0F15  3E20               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
  7653     0F16  0086               	movwf	6
  7654     0F17  3001               	movlw	1	; select bank2/3
  7655     0F18  0087               	movwf	7
  7656     0F19  0801               	movf	1,w
  7657     0F1A  00BF               	movwf	_eusartRxLastError^(0+128)	;volatile
  7658                           
  7659                           ;mcc_generated_files/eusart.c: 161:     readValue = eusartRxBuffer[eusartRxTail++];
  7660     0F1B  0841               	movf	_eusartRxTail^(0+128),w
  7661     0F1C  3E28               	addlw	(low (_eusartRxBuffer| (0+256)))& (0+255)
  7662     0F1D  0086               	movwf	6
  7663     0F1E  3001               	movlw	1	; select bank2/3
  7664     0F1F  0087               	movwf	7
  7665     0F20  0801               	movf	1,w
  7666     0F21  00F1               	movwf	EUSART_Read@readValue
  7667     0F22                     i1l2970:
  7668     0F22  3001               	movlw	1
  7669     0F23  00F0               	movwf	??_EUSART_Read
  7670     0F24  0870               	movf	??_EUSART_Read,w
  7671     0F25  07C1               	addwf	_eusartRxTail^(0+128),f	;volatile
  7672     0F26                     i1l2972:
  7673                           
  7674                           ;mcc_generated_files/eusart.c: 162:     if(sizeof(eusartRxBuffer) <= eusartRxTail)
  7675     0F26  3008               	movlw	8
  7676     0F27  0241               	subwf	_eusartRxTail^(0+128),w	;volatile
  7677     0F28  1C03               	skipc
  7678     0F29  2F2B               	goto	u203_21
  7679     0F2A  2F2C               	goto	u203_20
  7680     0F2B                     u203_21:
  7681     0F2B  2F2D               	goto	i1l2976
  7682     0F2C                     u203_20:
  7683     0F2C                     i1l2974:
  7684                           
  7685                           ;mcc_generated_files/eusart.c: 163:     {;mcc_generated_files/eusart.c: 164:         eus
      +                          artRxTail = 0;
  7686     0F2C  01C1               	clrf	_eusartRxTail^(0+128)	;volatile
  7687     0F2D                     i1l2976:
  7688                           
  7689                           ;mcc_generated_files/eusart.c: 166:     PIE1bits.RCIE = 0;
  7690     0F2D  1291               	bcf	17,5	;volatile
  7691     0F2E                     i1l2978:
  7692                           
  7693                           ;mcc_generated_files/eusart.c: 167:     eusartRxCount--;
  7694     0F2E  3001               	movlw	1
  7695     0F2F  02C0               	subwf	_eusartRxCount^(0+128),f	;volatile
  7696     0F30                     i1l2980:
  7697                           
  7698                           ;mcc_generated_files/eusart.c: 168:     PIE1bits.RCIE = 1;
  7699     0F30  1691               	bsf	17,5	;volatile
  7700     0F31                     i1l2982:
  7701                           
  7702                           ;mcc_generated_files/eusart.c: 170:     return readValue;
  7703     0F31  0871               	movf	EUSART_Read@readValue,w
  7704     0F32                     i1l304:
  7705     0F32  0008               	return
  7706     0F33                     __end_of_EUSART_Read:
  7707                           
  7708                           	psect	text48
  7709     0D4C                     __ptext48:	
  7710 ;; *************** function _TMR2_ISR *****************
  7711 ;; Defined at:
  7712 ;;		line 119 in file "mcc_generated_files/tmr2.c"
  7713 ;; Parameters:    Size  Location     Type
  7714 ;;		None
  7715 ;; Auto vars:     Size  Location     Type
  7716 ;;		None
  7717 ;; Return value:  Size  Location     Type
  7718 ;;                  1    wreg      void 
  7719 ;; Registers used:
  7720 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7721 ;; Tracked objects:
  7722 ;;		On entry : 0/0
  7723 ;;		On exit  : 0/0
  7724 ;;		Unchanged: 0/0
  7725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7726 ;;      Params:         0       0       0       0       0       0
  7727 ;;      Locals:         0       0       0       0       0       0
  7728 ;;      Temps:          0       0       0       0       0       0
  7729 ;;      Totals:         0       0       0       0       0       0
  7730 ;;Total ram usage:        0 bytes
  7731 ;; Hardware stack levels used: 1
  7732 ;; Hardware stack levels required when called: 4
  7733 ;; This function calls:
  7734 ;;		NULL
  7735 ;;		_TMR2_DefaultInterruptHandler
  7736 ;;		_trigger_Rx
  7737 ;; This function is called by:
  7738 ;;		_INTERRUPT_InterruptManager
  7739 ;; This function uses a non-reentrant model
  7740 ;;
  7741                           
  7742     0D4C                     _TMR2_ISR:	
  7743                           ;psect for function _TMR2_ISR
  7744                           
  7745     0D4C                     i1l3078:	
  7746                           ;incstack = 0
  7747                           ; Regs used in _TMR2_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7748                           
  7749                           
  7750                           ;mcc_generated_files/tmr2.c: 123:     PIR1bits.TMR2IF = 0;
  7751     0D4C  0020               	movlb	0	; select bank0
  7752     0D4D  1091               	bcf	17,1	;volatile
  7753     0D4E                     i1l3080:
  7754                           
  7755                           ;mcc_generated_files/tmr2.c: 125:     if(TMR2_InterruptHandler)
  7756     0D4E  0021               	movlb	1	; select bank1
  7757     0D4F  0863               	movf	_TMR2_InterruptHandler^(0+128),w
  7758     0D50  0464               	iorwf	(_TMR2_InterruptHandler+1)^(0+128),w
  7759     0D51  1903               	btfsc	3,2
  7760     0D52  2D54               	goto	u217_21
  7761     0D53  2D55               	goto	u217_20
  7762     0D54                     u217_21:
  7763     0D54  2D5A               	goto	i1l115
  7764     0D55                     u217_20:
  7765     0D55                     i1l3082:
  7766                           
  7767                           ;mcc_generated_files/tmr2.c: 126:     {;mcc_generated_files/tmr2.c: 127:         TMR2_In
      +                          terruptHandler();
  7768     0D55  0864               	movf	(_TMR2_InterruptHandler+1)^(0+128),w
  7769     0D56  008A               	movwf	10
  7770     0D57  0863               	movf	_TMR2_InterruptHandler^(0+128),w
  7771     0D58  000A               	callw
  7772     0D59  318D               	pagesel	$
  7773     0D5A                     i1l115:
  7774     0D5A  0008               	return
  7775     0D5B                     __end_of_TMR2_ISR:
  7776                           
  7777                           	psect	text49
  7778     0003                     __ptext49:	
  7779 ;; *************** function _TMR2_DefaultInterruptHandler *****************
  7780 ;; Defined at:
  7781 ;;		line 136 in file "mcc_generated_files/tmr2.c"
  7782 ;; Parameters:    Size  Location     Type
  7783 ;;		None
  7784 ;; Auto vars:     Size  Location     Type
  7785 ;;		None
  7786 ;; Return value:  Size  Location     Type
  7787 ;;                  1    wreg      void 
  7788 ;; Registers used:
  7789 ;;		None
  7790 ;; Tracked objects:
  7791 ;;		On entry : 0/0
  7792 ;;		On exit  : 0/0
  7793 ;;		Unchanged: 0/0
  7794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7795 ;;      Params:         0       0       0       0       0       0
  7796 ;;      Locals:         0       0       0       0       0       0
  7797 ;;      Temps:          0       0       0       0       0       0
  7798 ;;      Totals:         0       0       0       0       0       0
  7799 ;;Total ram usage:        0 bytes
  7800 ;; Hardware stack levels used: 1
  7801 ;; This function calls:
  7802 ;;		Nothing
  7803 ;; This function is called by:
  7804 ;;		_TMR2_Initialize
  7805 ;;		_TMR2_ISR
  7806 ;; This function uses a non-reentrant model
  7807 ;;
  7808                           
  7809     0003                     _TMR2_DefaultInterruptHandler:	
  7810                           ;psect for function _TMR2_DefaultInterruptHandler
  7811                           
  7812     0003                     i1l121:	
  7813                           ;incstack = 0
  7814                           ; Regs used in _TMR2_DefaultInterruptHandler: []
  7815                           
  7816     0003  0008               	return
  7817     0004                     __end_of_TMR2_DefaultInterruptHandler:
  7818                           
  7819                           	psect	text50
  7820     0E1E                     __ptext50:	
  7821 ;; *************** function _trigger_Rx *****************
  7822 ;; Defined at:
  7823 ;;		line 190 in file "main.c"
  7824 ;; Parameters:    Size  Location     Type
  7825 ;;		None
  7826 ;; Auto vars:     Size  Location     Type
  7827 ;;		None
  7828 ;; Return value:  Size  Location     Type
  7829 ;;                  1    wreg      void 
  7830 ;; Registers used:
  7831 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7832 ;; Tracked objects:
  7833 ;;		On entry : 0/0
  7834 ;;		On exit  : 0/0
  7835 ;;		Unchanged: 0/0
  7836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7837 ;;      Params:         0       0       0       0       0       0
  7838 ;;      Locals:         0       0       0       0       0       0
  7839 ;;      Temps:          1       0       0       0       0       0
  7840 ;;      Totals:         1       0       0       0       0       0
  7841 ;;Total ram usage:        1 bytes
  7842 ;; Hardware stack levels used: 1
  7843 ;; Hardware stack levels required when called: 3
  7844 ;; This function calls:
  7845 ;;		_envia_Tx
  7846 ;; This function is called by:
  7847 ;;		_main
  7848 ;;		_TMR2_ISR
  7849 ;; This function uses a non-reentrant model
  7850 ;;
  7851                           
  7852     0E1E                     _trigger_Rx:	
  7853                           ;psect for function _trigger_Rx
  7854                           
  7855     0E1E                     i1l732:	
  7856                           ;incstack = 0
  7857                           ; Regs used in _trigger_Rx: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7858                           ;main.c: 191:     do { LATAbits.LATA6 = 1; } while(0);
  7859                           
  7860     0E1E  0022               	movlb	2	; select bank2
  7861     0E1F  170C               	bsf	12,6	;volatile
  7862     0E20                     i1l3046:
  7863                           
  7864                           ;main.c: 192:     _delay((unsigned long)((20)*(16000000/4000000.0)));
  7865     0E20  301A               	movlw	26
  7866     0E21                     u250_27:
  7867     0E21  0B89               	decfsz	9,f
  7868     0E22  2E21               	goto	u250_27
  7869     0E23  3200               	nop2
  7870     0E24                     i1l3048:
  7871     0E24  0022               	movlb	2	; select bank2
  7872     0E25  130C               	bcf	12,6	;volatile
  7873     0E26                     i1l735:
  7874                           
  7875                           ;main.c: 194:     if(count_Tx >= 24){
  7876     0E26  3018               	movlw	24
  7877     0E27  0020               	movlb	0	; select bank0
  7878     0E28  026B               	subwf	_count_Tx,w
  7879     0E29  1C03               	skipc
  7880     0E2A  2E2C               	goto	u214_21
  7881     0E2B  2E2D               	goto	u214_20
  7882     0E2C                     u214_21:
  7883     0E2C  2E33               	goto	i1l3054
  7884     0E2D                     u214_20:
  7885     0E2D                     i1l3050:
  7886                           
  7887                           ;main.c: 195:         envia_Tx ();
  7888     0E2D  3185  25A6  318E   	fcall	_envia_Tx
  7889     0E30                     i1l3052:
  7890                           
  7891                           ;main.c: 196:         count_Tx = 0;
  7892     0E30  0020               	movlb	0	; select bank0
  7893     0E31  01EB               	clrf	_count_Tx
  7894                           
  7895                           ;main.c: 197:     }
  7896     0E32  2E37               	goto	i1l738
  7897     0E33                     i1l3054:
  7898                           
  7899                           ;main.c: 199:         count_Tx++;
  7900     0E33  3001               	movlw	1
  7901     0E34  00FD               	movwf	??_trigger_Rx
  7902     0E35  087D               	movf	??_trigger_Rx,w
  7903     0E36  07EB               	addwf	_count_Tx,f
  7904     0E37                     i1l738:
  7905     0E37  0008               	return
  7906     0E38                     __end_of_trigger_Rx:
  7907                           
  7908                           	psect	text51
  7909     05A6                     __ptext51:	
  7910 ;; *************** function _envia_Tx *****************
  7911 ;; Defined at:
  7912 ;;		line 146 in file "main.c"
  7913 ;; Parameters:    Size  Location     Type
  7914 ;;		None
  7915 ;; Auto vars:     Size  Location     Type
  7916 ;;		None
  7917 ;; Return value:  Size  Location     Type
  7918 ;;                  1    wreg      void 
  7919 ;; Registers used:
  7920 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7921 ;; Tracked objects:
  7922 ;;		On entry : 0/0
  7923 ;;		On exit  : 0/0
  7924 ;;		Unchanged: 0/0
  7925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7926 ;;      Params:         0       0       0       0       0       0
  7927 ;;      Locals:         0       0       0       0       0       0
  7928 ;;      Temps:          0       0       0       0       0       0
  7929 ;;      Totals:         0       0       0       0       0       0
  7930 ;;Total ram usage:        0 bytes
  7931 ;; Hardware stack levels used: 1
  7932 ;; Hardware stack levels required when called: 2
  7933 ;; This function calls:
  7934 ;;		_EUSART_Write
  7935 ;;		___flmul
  7936 ;;		___fltol
  7937 ;; This function is called by:
  7938 ;;		_trigger_Rx
  7939 ;; This function uses a non-reentrant model
  7940 ;;
  7941                           
  7942     05A6                     _envia_Tx:	
  7943                           ;psect for function _envia_Tx
  7944                           
  7945     05A6                     i1l2718:	
  7946                           ;incstack = 0
  7947                           ; Regs used in _envia_Tx: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7948                           
  7949                           
  7950                           ;main.c: 147:     EUSART_Write(func_mode);
  7951     05A6  0020               	movlb	0	; select bank0
  7952     05A7  086E               	movf	_func_mode,w
  7953     05A8  318F  2733  3185   	fcall	_EUSART_Write
  7954     05AB                     i1l2720:
  7955                           
  7956                           ;main.c: 148:     vTx.v = sp_height;
  7957     05AB  0020               	movlb	0	; select bank0
  7958     05AC  0863               	movf	_sp_height+1,w
  7959     05AD  00E7               	movwf	_vTx+1
  7960     05AE  0862               	movf	_sp_height,w
  7961     05AF  00E6               	movwf	_vTx
  7962     05B0                     i1l2722:
  7963                           
  7964                           ;main.c: 149:     EUSART_Write(vTx.vH);
  7965     05B0  0866               	movf	_vTx,w
  7966     05B1  318F  2733  3185   	fcall	_EUSART_Write
  7967     05B4                     i1l2724:
  7968                           
  7969                           ;main.c: 150:     EUSART_Write(vTx.vL);
  7970     05B4  0020               	movlb	0	; select bank0
  7971     05B5  0867               	movf	_vTx+1,w
  7972     05B6  318F  2733  3185   	fcall	_EUSART_Write
  7973     05B9                     i1l2726:
  7974                           
  7975                           ;main.c: 151:     vTx.v = height;
  7976     05B9  0020               	movlb	0	; select bank0
  7977     05BA  085F               	movf	_height+1,w
  7978     05BB  00E7               	movwf	_vTx+1
  7979     05BC  085E               	movf	_height,w
  7980     05BD  00E6               	movwf	_vTx
  7981                           
  7982                           ;main.c: 152:     EUSART_Write(vTx.vH);
  7983     05BE  0866               	movf	_vTx,w
  7984     05BF  318F  2733  3185   	fcall	_EUSART_Write
  7985                           
  7986                           ;main.c: 153:     EUSART_Write(vTx.vL);
  7987     05C2  0020               	movlb	0	; select bank0
  7988     05C3  0867               	movf	_vTx+1,w
  7989     05C4  318F  2733  3185   	fcall	_EUSART_Write
  7990     05C7                     i1l2728:
  7991                           
  7992                           ;main.c: 154:     vTx.v = position;
  7993     05C7  0020               	movlb	0	; select bank0
  7994     05C8  085D               	movf	_position+1,w
  7995     05C9  00E7               	movwf	_vTx+1
  7996     05CA  085C               	movf	_position,w
  7997     05CB  00E6               	movwf	_vTx
  7998     05CC                     i1l2730:
  7999                           
  8000                           ;main.c: 155:     EUSART_Write(vTx.vH);
  8001     05CC  0866               	movf	_vTx,w
  8002     05CD  318F  2733  3185   	fcall	_EUSART_Write
  8003     05D0                     i1l2732:
  8004                           
  8005                           ;main.c: 156:     EUSART_Write(vTx.vL);
  8006     05D0  0020               	movlb	0	; select bank0
  8007     05D1  0867               	movf	_vTx+1,w
  8008     05D2  318F  2733  3185   	fcall	_EUSART_Write
  8009     05D5                     i1l2734:
  8010                           
  8011                           ;main.c: 157:     vTx.v = dc;
  8012     05D5  0020               	movlb	0	; select bank0
  8013     05D6  0861               	movf	_dc+1,w
  8014     05D7  00E7               	movwf	_vTx+1
  8015     05D8  0860               	movf	_dc,w
  8016     05D9  00E6               	movwf	_vTx
  8017                           
  8018                           ;main.c: 158:     EUSART_Write(vTx.vH);
  8019     05DA  0866               	movf	_vTx,w
  8020     05DB  318F  2733  3185   	fcall	_EUSART_Write
  8021                           
  8022                           ;main.c: 159:     EUSART_Write(vTx.vL);
  8023     05DE  0020               	movlb	0	; select bank0
  8024     05DF  0867               	movf	_vTx+1,w
  8025     05E0  318F  2733  3185   	fcall	_EUSART_Write
  8026     05E3                     i1l2736:
  8027                           
  8028                           ;main.c: 163:     vTx.v = float_temp*10;
  8029     05E3  0021               	movlb	1	; select bank1
  8030     05E4  0823               	movf	(_float_temp+3)^(0+128),w
  8031     05E5  0020               	movlb	0	; select bank0
  8032     05E6  00B5               	movwf	___flmul@a+3
  8033     05E7  0021               	movlb	1	; select bank1
  8034     05E8  0822               	movf	(_float_temp+2)^(0+128),w
  8035     05E9  0020               	movlb	0	; select bank0
  8036     05EA  00B4               	movwf	___flmul@a+2
  8037     05EB  0021               	movlb	1	; select bank1
  8038     05EC  0821               	movf	(_float_temp+1)^(0+128),w
  8039     05ED  0020               	movlb	0	; select bank0
  8040     05EE  00B3               	movwf	___flmul@a+1
  8041     05EF  0021               	movlb	1	; select bank1
  8042     05F0  0820               	movf	_float_temp^(0+128),w
  8043     05F1  0020               	movlb	0	; select bank0
  8044     05F2  00B2               	movwf	___flmul@a
  8045     05F3  3041               	movlw	65
  8046     05F4  00B1               	movwf	___flmul@b+3
  8047     05F5  3020               	movlw	32
  8048     05F6  00B0               	movwf	___flmul@b+2
  8049     05F7  3000               	movlw	0
  8050     05F8  00AF               	movwf	___flmul@b+1
  8051     05F9  3000               	movlw	0
  8052     05FA  00AE               	movwf	___flmul@b
  8053     05FB  3180  208C  3185   	fcall	___flmul
  8054     05FE  0020               	movlb	0	; select bank0
  8055     05FF  0831               	movf	?___flmul+3,w
  8056     0600  00CB               	movwf	___fltol@f1+3
  8057     0601  0830               	movf	?___flmul+2,w
  8058     0602  00CA               	movwf	___fltol@f1+2
  8059     0603  082F               	movf	?___flmul+1,w
  8060     0604  00C9               	movwf	___fltol@f1+1
  8061     0605  082E               	movf	?___flmul,w
  8062     0606  00C8               	movwf	___fltol@f1
  8063     0607  3186  2619  3185   	fcall	___fltol
  8064     060A  0020               	movlb	0	; select bank0
  8065     060B  0849               	movf	?___fltol+1,w
  8066     060C  00E7               	movwf	_vTx+1
  8067     060D  0848               	movf	?___fltol,w
  8068     060E  00E6               	movwf	_vTx
  8069     060F                     i1l2738:
  8070                           
  8071                           ;main.c: 164:     EUSART_Write(vTx.vH);
  8072     060F  0866               	movf	_vTx,w
  8073     0610  318F  2733  3185   	fcall	_EUSART_Write
  8074     0613                     i1l2740:
  8075                           
  8076                           ;main.c: 165:     EUSART_Write(vTx.vL);
  8077     0613  0020               	movlb	0	; select bank0
  8078     0614  0867               	movf	_vTx+1,w
  8079     0615  318F  2733  3185   	fcall	_EUSART_Write
  8080     0618                     i1l719:
  8081     0618  0008               	return
  8082     0619                     __end_of_envia_Tx:
  8083                           
  8084                           	psect	text52
  8085     0F33                     __ptext52:	
  8086 ;; *************** function _EUSART_Write *****************
  8087 ;; Defined at:
  8088 ;;		line 173 in file "mcc_generated_files/eusart.c"
  8089 ;; Parameters:    Size  Location     Type
  8090 ;;  txData          1    wreg     unsigned char 
  8091 ;; Auto vars:     Size  Location     Type
  8092 ;;  txData          1    1[COMMON] unsigned char 
  8093 ;; Return value:  Size  Location     Type
  8094 ;;                  1    wreg      void 
  8095 ;; Registers used:
  8096 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8097 ;; Tracked objects:
  8098 ;;		On entry : 0/0
  8099 ;;		On exit  : 0/0
  8100 ;;		Unchanged: 0/0
  8101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8102 ;;      Params:         0       0       0       0       0       0
  8103 ;;      Locals:         1       0       0       0       0       0
  8104 ;;      Temps:          1       0       0       0       0       0
  8105 ;;      Totals:         2       0       0       0       0       0
  8106 ;;Total ram usage:        2 bytes
  8107 ;; Hardware stack levels used: 1
  8108 ;; This function calls:
  8109 ;;		Nothing
  8110 ;; This function is called by:
  8111 ;;		_envia_Tx
  8112 ;; This function uses a non-reentrant model
  8113 ;;
  8114                           
  8115     0F33                     _EUSART_Write:	
  8116                           ;psect for function _EUSART_Write
  8117                           
  8118                           
  8119                           ;incstack = 0
  8120                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
  8121                           ;EUSART_Write@txData stored from wreg
  8122     0F33  00F1               	movwf	EUSART_Write@txData
  8123     0F34                     i1l2420:
  8124     0F34                     i1l2422:	
  8125                           ;mcc_generated_files/eusart.c: 173: void EUSART_Write(uint8_t txData);mcc_generated_file
      +                          s/eusart.c: 174: {;mcc_generated_files/eusart.c: 175:     while(0 == eusartTxBufferRemai
      +                          ning)
  8126                           
  8127                           
  8128                           ;mcc_generated_files/eusart.c: 175:     while(0 == eusartTxBufferRemaining)
  8129     0F34  0021               	movlb	1	; select bank1
  8130     0F35  0843               	movf	_eusartTxBufferRemaining^(0+128),w	;volatile
  8131     0F36  1903               	btfsc	3,2
  8132     0F37  2F39               	goto	u129_21
  8133     0F38  2F3A               	goto	u129_20
  8134     0F39                     u129_21:
  8135     0F39  2F34               	goto	i1l2422
  8136     0F3A                     u129_20:
  8137     0F3A                     i1l309:
  8138                           
  8139                           ;mcc_generated_files/eusart.c: 179:     if(0 == PIE1bits.TXIE)
  8140     0F3A  1A11               	btfsc	17,4	;volatile
  8141     0F3B  2F3D               	goto	u130_21
  8142     0F3C  2F3E               	goto	u130_20
  8143     0F3D                     u130_21:
  8144     0F3D  2F42               	goto	i1l310
  8145     0F3E                     u130_20:
  8146     0F3E                     i1l2424:
  8147                           
  8148                           ;mcc_generated_files/eusart.c: 180:     {;mcc_generated_files/eusart.c: 181:         TXR
      +                          EG = txData;
  8149     0F3E  0871               	movf	EUSART_Write@txData,w
  8150     0F3F  0023               	movlb	3	; select bank3
  8151     0F40  009A               	movwf	26	;volatile
  8152                           
  8153                           ;mcc_generated_files/eusart.c: 182:     }
  8154     0F41  2F57               	goto	i1l2436
  8155     0F42                     i1l310:	
  8156                           ;mcc_generated_files/eusart.c: 183:     else
  8157                           
  8158                           
  8159                           ;mcc_generated_files/eusart.c: 184:     {;mcc_generated_files/eusart.c: 185:         PIE
      +                          1bits.TXIE = 0;
  8160     0F42  1211               	bcf	17,4	;volatile
  8161     0F43                     i1l2426:
  8162                           
  8163                           ;mcc_generated_files/eusart.c: 186:         eusartTxBuffer[eusartTxHead++] = txData;
  8164     0F43  0845               	movf	_eusartTxHead^(0+128),w
  8165     0F44  3E30               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
  8166     0F45  0086               	movwf	6
  8167     0F46  3001               	movlw	1	; select bank2/3
  8168     0F47  0087               	movwf	7
  8169     0F48  0871               	movf	EUSART_Write@txData,w
  8170     0F49  0081               	movwf	1
  8171     0F4A                     i1l2428:
  8172     0F4A  3001               	movlw	1
  8173     0F4B  00F0               	movwf	??_EUSART_Write
  8174     0F4C  0870               	movf	??_EUSART_Write,w
  8175     0F4D  07C5               	addwf	_eusartTxHead^(0+128),f	;volatile
  8176     0F4E                     i1l2430:
  8177                           
  8178                           ;mcc_generated_files/eusart.c: 187:         if(sizeof(eusartTxBuffer) <= eusartTxHead)
  8179     0F4E  3008               	movlw	8
  8180     0F4F  0245               	subwf	_eusartTxHead^(0+128),w	;volatile
  8181     0F50  1C03               	skipc
  8182     0F51  2F53               	goto	u131_21
  8183     0F52  2F54               	goto	u131_20
  8184     0F53                     u131_21:
  8185     0F53  2F55               	goto	i1l2434
  8186     0F54                     u131_20:
  8187     0F54                     i1l2432:
  8188                           
  8189                           ;mcc_generated_files/eusart.c: 188:         {;mcc_generated_files/eusart.c: 189:        
      +                               eusartTxHead = 0;
  8190     0F54  01C5               	clrf	_eusartTxHead^(0+128)	;volatile
  8191     0F55                     i1l2434:
  8192                           
  8193                           ;mcc_generated_files/eusart.c: 191:         eusartTxBufferRemaining--;
  8194     0F55  3001               	movlw	1
  8195     0F56  02C3               	subwf	_eusartTxBufferRemaining^(0+128),f	;volatile
  8196     0F57                     i1l2436:
  8197                           
  8198                           ;mcc_generated_files/eusart.c: 193:     PIE1bits.TXIE = 1;
  8199     0F57  0021               	movlb	1	; select bank1
  8200     0F58  1611               	bsf	17,4	;volatile
  8201     0F59                     i1l313:
  8202     0F59  0008               	return
  8203     0F5A                     __end_of_EUSART_Write:
  8204                           
  8205                           	psect	text53
  8206     0D3D                     __ptext53:	
  8207 ;; *************** function _TMR1_GATE_ISR *****************
  8208 ;; Defined at:
  8209 ;;		line 166 in file "mcc_generated_files/tmr1.c"
  8210 ;; Parameters:    Size  Location     Type
  8211 ;;		None
  8212 ;; Auto vars:     Size  Location     Type
  8213 ;;		None
  8214 ;; Return value:  Size  Location     Type
  8215 ;;                  1    wreg      void 
  8216 ;; Registers used:
  8217 ;;		wreg, status,2, status,0, pclath, cstack
  8218 ;; Tracked objects:
  8219 ;;		On entry : 0/0
  8220 ;;		On exit  : 0/0
  8221 ;;		Unchanged: 0/0
  8222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8223 ;;      Params:         0       0       0       0       0       0
  8224 ;;      Locals:         0       0       0       0       0       0
  8225 ;;      Temps:          0       0       0       0       0       0
  8226 ;;      Totals:         0       0       0       0       0       0
  8227 ;;Total ram usage:        0 bytes
  8228 ;; Hardware stack levels used: 1
  8229 ;; Hardware stack levels required when called: 3
  8230 ;; This function calls:
  8231 ;;		NULL
  8232 ;;		_TMR1_DefaultGateInterruptHandler
  8233 ;;		_mede_height
  8234 ;; This function is called by:
  8235 ;;		_INTERRUPT_InterruptManager
  8236 ;; This function uses a non-reentrant model
  8237 ;;
  8238                           
  8239     0D3D                     _TMR1_GATE_ISR:	
  8240                           ;psect for function _TMR1_GATE_ISR
  8241                           
  8242     0D3D                     i1l3098:	
  8243                           ;incstack = 0
  8244                           ; Regs used in _TMR1_GATE_ISR: [wreg+status,2+status,0+pclath+cstack]
  8245                           
  8246                           
  8247                           ;mcc_generated_files/tmr1.c: 169:     PIR1bits.TMR1GIF = 0;
  8248     0D3D  0020               	movlb	0	; select bank0
  8249     0D3E  1391               	bcf	17,7	;volatile
  8250     0D3F                     i1l3100:
  8251                           
  8252                           ;mcc_generated_files/tmr1.c: 171:     if(TMR1_GateInterruptHandler)
  8253     0D3F  0021               	movlb	1	; select bank1
  8254     0D40  0859               	movf	_TMR1_GateInterruptHandler^(0+128),w
  8255     0D41  045A               	iorwf	(_TMR1_GateInterruptHandler+1)^(0+128),w
  8256     0D42  1903               	btfsc	3,2
  8257     0D43  2D45               	goto	u219_21
  8258     0D44  2D46               	goto	u219_20
  8259     0D45                     u219_21:
  8260     0D45  2D4B               	goto	i1l552
  8261     0D46                     u219_20:
  8262     0D46                     i1l3102:
  8263                           
  8264                           ;mcc_generated_files/tmr1.c: 172:     {;mcc_generated_files/tmr1.c: 173:         TMR1_Ga
      +                          teInterruptHandler();
  8265     0D46  085A               	movf	(_TMR1_GateInterruptHandler+1)^(0+128),w
  8266     0D47  008A               	movwf	10
  8267     0D48  0859               	movf	_TMR1_GateInterruptHandler^(0+128),w
  8268     0D49  000A               	callw
  8269     0D4A  318D               	pagesel	$
  8270     0D4B                     i1l552:
  8271     0D4B  0008               	return
  8272     0D4C                     __end_of_TMR1_GATE_ISR:
  8273                           
  8274                           	psect	text54
  8275     0002                     __ptext54:	
  8276 ;; *************** function _TMR1_DefaultGateInterruptHandler *****************
  8277 ;; Defined at:
  8278 ;;		line 181 in file "mcc_generated_files/tmr1.c"
  8279 ;; Parameters:    Size  Location     Type
  8280 ;;		None
  8281 ;; Auto vars:     Size  Location     Type
  8282 ;;		None
  8283 ;; Return value:  Size  Location     Type
  8284 ;;                  1    wreg      void 
  8285 ;; Registers used:
  8286 ;;		None
  8287 ;; Tracked objects:
  8288 ;;		On entry : 0/0
  8289 ;;		On exit  : 0/0
  8290 ;;		Unchanged: 0/0
  8291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8292 ;;      Params:         0       0       0       0       0       0
  8293 ;;      Locals:         0       0       0       0       0       0
  8294 ;;      Temps:          0       0       0       0       0       0
  8295 ;;      Totals:         0       0       0       0       0       0
  8296 ;;Total ram usage:        0 bytes
  8297 ;; Hardware stack levels used: 1
  8298 ;; This function calls:
  8299 ;;		Nothing
  8300 ;; This function is called by:
  8301 ;;		_TMR1_Initialize
  8302 ;;		_TMR1_GATE_ISR
  8303 ;; This function uses a non-reentrant model
  8304 ;;
  8305                           
  8306     0002                     _TMR1_DefaultGateInterruptHandler:	
  8307                           ;psect for function _TMR1_DefaultGateInterruptHandler
  8308                           
  8309     0002                     i1l558:	
  8310                           ;incstack = 0
  8311                           ; Regs used in _TMR1_DefaultGateInterruptHandler: []
  8312                           
  8313     0002  0008               	return
  8314     0003                     __end_of_TMR1_DefaultGateInterruptHandler:
  8315                           
  8316                           	psect	text55
  8317     0532                     __ptext55:	
  8318 ;; *************** function _mede_height *****************
  8319 ;; Defined at:
  8320 ;;		line 293 in file "main.c"
  8321 ;; Parameters:    Size  Location     Type
  8322 ;;		None
  8323 ;; Auto vars:     Size  Location     Type
  8324 ;;		None
  8325 ;; Return value:  Size  Location     Type
  8326 ;;                  1    wreg      void 
  8327 ;; Registers used:
  8328 ;;		wreg, status,2, status,0, pclath, cstack
  8329 ;; Tracked objects:
  8330 ;;		On entry : 0/0
  8331 ;;		On exit  : 0/0
  8332 ;;		Unchanged: 0/0
  8333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8334 ;;      Params:         0       0       0       0       0       0
  8335 ;;      Locals:         0       0       0       0       0       0
  8336 ;;      Temps:          0       4       0       0       0       0
  8337 ;;      Totals:         0       4       0       0       0       0
  8338 ;;Total ram usage:        4 bytes
  8339 ;; Hardware stack levels used: 1
  8340 ;; Hardware stack levels required when called: 2
  8341 ;; This function calls:
  8342 ;;		_TMR1_ReadTimer
  8343 ;;		___flmul
  8344 ;;		___fltol
  8345 ;;		___xxtofl
  8346 ;; This function is called by:
  8347 ;;		_main
  8348 ;;		_TMR1_GATE_ISR
  8349 ;; This function uses a non-reentrant model
  8350 ;;
  8351                           
  8352     0532                     _mede_height:	
  8353                           ;psect for function _mede_height
  8354                           
  8355     0532                     i1l3072:	
  8356                           ;incstack = 0
  8357                           ; Regs used in _mede_height: [wreg+status,2+status,0+pclath+cstack]
  8358                           
  8359                           
  8360                           ;main.c: 294:     tempo_voo = TMR1_ReadTimer() * 0.00025;
  8361     0532  3039               	movlw	57
  8362     0533  0020               	movlb	0	; select bank0
  8363     0534  00B1               	movwf	___flmul@b+3
  8364     0535  3083               	movlw	131
  8365     0536  00B0               	movwf	___flmul@b+2
  8366     0537  3012               	movlw	18
  8367     0538  00AF               	movwf	___flmul@b+1
  8368     0539  306F               	movlw	111
  8369     053A  00AE               	movwf	___flmul@b
  8370     053B  318D  25EB  3185   	fcall	_TMR1_ReadTimer
  8371     053E  0870               	movf	?_TMR1_ReadTimer,w
  8372     053F  0020               	movlb	0	; select bank0
  8373     0540  00D0               	movwf	??_mede_height
  8374     0541  0871               	movf	?_TMR1_ReadTimer+1,w
  8375     0542  00D1               	movwf	??_mede_height+1
  8376     0543  01D2               	clrf	??_mede_height+2
  8377     0544  01D3               	clrf	??_mede_height+3
  8378     0545  0853               	movf	??_mede_height+3,w
  8379     0546  00A3               	movwf	___xxtofl@val+3
  8380     0547  0852               	movf	??_mede_height+2,w
  8381     0548  00A2               	movwf	___xxtofl@val+2
  8382     0549  0851               	movf	??_mede_height+1,w
  8383     054A  00A1               	movwf	___xxtofl@val+1
  8384     054B  0850               	movf	??_mede_height,w
  8385     054C  00A0               	movwf	___xxtofl@val
  8386     054D  3000               	movlw	0
  8387     054E  3182  22C7  3185   	fcall	___xxtofl
  8388     0551  0020               	movlb	0	; select bank0
  8389     0552  0823               	movf	?___xxtofl+3,w
  8390     0553  00B5               	movwf	___flmul@a+3
  8391     0554  0822               	movf	?___xxtofl+2,w
  8392     0555  00B4               	movwf	___flmul@a+2
  8393     0556  0821               	movf	?___xxtofl+1,w
  8394     0557  00B3               	movwf	___flmul@a+1
  8395     0558  0820               	movf	?___xxtofl,w
  8396     0559  00B2               	movwf	___flmul@a
  8397     055A  3180  208C  3185   	fcall	___flmul
  8398     055D  0020               	movlb	0	; select bank0
  8399     055E  0831               	movf	?___flmul+3,w
  8400     055F  0021               	movlb	1	; select bank1
  8401     0560  00A7               	movwf	(_tempo_voo+3)^(0+128)
  8402     0561  0020               	movlb	0	; select bank0
  8403     0562  0830               	movf	?___flmul+2,w
  8404     0563  0021               	movlb	1	; select bank1
  8405     0564  00A6               	movwf	(_tempo_voo+2)^(0+128)
  8406     0565  0020               	movlb	0	; select bank0
  8407     0566  082F               	movf	?___flmul+1,w
  8408     0567  0021               	movlb	1	; select bank1
  8409     0568  00A5               	movwf	(_tempo_voo+1)^(0+128)
  8410     0569  0020               	movlb	0	; select bank0
  8411     056A  082E               	movf	?___flmul,w
  8412     056B  0021               	movlb	1	; select bank1
  8413     056C  00A4               	movwf	_tempo_voo^(0+128)
  8414                           
  8415                           ;main.c: 295:     height = (tempo_voo * 170);
  8416     056D  0827               	movf	(_tempo_voo+3)^(0+128),w
  8417     056E  0020               	movlb	0	; select bank0
  8418     056F  00B5               	movwf	___flmul@a+3
  8419     0570  0021               	movlb	1	; select bank1
  8420     0571  0826               	movf	(_tempo_voo+2)^(0+128),w
  8421     0572  0020               	movlb	0	; select bank0
  8422     0573  00B4               	movwf	___flmul@a+2
  8423     0574  0021               	movlb	1	; select bank1
  8424     0575  0825               	movf	(_tempo_voo+1)^(0+128),w
  8425     0576  0020               	movlb	0	; select bank0
  8426     0577  00B3               	movwf	___flmul@a+1
  8427     0578  0021               	movlb	1	; select bank1
  8428     0579  0824               	movf	_tempo_voo^(0+128),w
  8429     057A  0020               	movlb	0	; select bank0
  8430     057B  00B2               	movwf	___flmul@a
  8431     057C  3043               	movlw	67
  8432     057D  00B1               	movwf	___flmul@b+3
  8433     057E  302A               	movlw	42
  8434     057F  00B0               	movwf	___flmul@b+2
  8435     0580  3000               	movlw	0
  8436     0581  00AF               	movwf	___flmul@b+1
  8437     0582  3000               	movlw	0
  8438     0583  00AE               	movwf	___flmul@b
  8439     0584  3180  208C  3185   	fcall	___flmul
  8440     0587  0020               	movlb	0	; select bank0
  8441     0588  0831               	movf	?___flmul+3,w
  8442     0589  00CB               	movwf	___fltol@f1+3
  8443     058A  0830               	movf	?___flmul+2,w
  8444     058B  00CA               	movwf	___fltol@f1+2
  8445     058C  082F               	movf	?___flmul+1,w
  8446     058D  00C9               	movwf	___fltol@f1+1
  8447     058E  082E               	movf	?___flmul,w
  8448     058F  00C8               	movwf	___fltol@f1
  8449     0590  3186  2619  3185   	fcall	___fltol
  8450     0593  0020               	movlb	0	; select bank0
  8451     0594  0849               	movf	?___fltol+1,w
  8452     0595  00DF               	movwf	_height+1
  8453     0596  0848               	movf	?___fltol,w
  8454     0597  00DE               	movwf	_height
  8455     0598                     i1l3074:
  8456                           
  8457                           ;main.c: 296:     balldist = height/2;
  8458     0598  085F               	movf	_height+1,w
  8459     0599  00D1               	movwf	??_mede_height+1
  8460     059A  085E               	movf	_height,w
  8461     059B  00D0               	movwf	??_mede_height
  8462     059C  36D1               	lsrf	??_mede_height+1,f
  8463     059D  0CD0               	rrf	??_mede_height,f
  8464     059E  0850               	movf	??_mede_height,w
  8465     059F  0021               	movlb	1	; select bank1
  8466     05A0  00B2               	movwf	_balldist^(0+128)
  8467     05A1  0020               	movlb	0	; select bank0
  8468     05A2  0851               	movf	??_mede_height+1,w
  8469     05A3  0021               	movlb	1	; select bank1
  8470     05A4  00B3               	movwf	(_balldist+1)^(0+128)
  8471     05A5                     i1l836:
  8472     05A5  0008               	return
  8473     05A6                     __end_of_mede_height:
  8474                           
  8475                           	psect	text56
  8476     02C7                     __ptext56:	
  8477 ;; *************** function ___xxtofl *****************
  8478 ;; Defined at:
  8479 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\xxtofl.c"
  8480 ;; Parameters:    Size  Location     Type
  8481 ;;  sign            1    wreg     unsigned char 
  8482 ;;  val             4    0[BANK0 ] long 
  8483 ;; Auto vars:     Size  Location     Type
  8484 ;;  sign            1    8[BANK0 ] unsigned char 
  8485 ;;  arg             4   10[BANK0 ] unsigned long 
  8486 ;;  exp             1    9[BANK0 ] unsigned char 
  8487 ;; Return value:  Size  Location     Type
  8488 ;;                  4    0[BANK0 ] unsigned char 
  8489 ;; Registers used:
  8490 ;;		wreg, status,2, status,0
  8491 ;; Tracked objects:
  8492 ;;		On entry : 0/0
  8493 ;;		On exit  : 0/0
  8494 ;;		Unchanged: 0/0
  8495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8496 ;;      Params:         0       4       0       0       0       0
  8497 ;;      Locals:         0       6       0       0       0       0
  8498 ;;      Temps:          0       4       0       0       0       0
  8499 ;;      Totals:         0      14       0       0       0       0
  8500 ;;Total ram usage:       14 bytes
  8501 ;; Hardware stack levels used: 1
  8502 ;; This function calls:
  8503 ;;		Nothing
  8504 ;; This function is called by:
  8505 ;;		_mede_height
  8506 ;;		_calculaTemp
  8507 ;; This function uses a non-reentrant model
  8508 ;;
  8509                           
  8510     02C7                     ___xxtofl:	
  8511                           ;psect for function ___xxtofl
  8512                           
  8513                           
  8514                           ;incstack = 0
  8515                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  8516                           ;___xxtofl@sign stored from wreg
  8517     02C7  0020               	movlb	0	; select bank0
  8518     02C8  00A8               	movwf	___xxtofl@sign
  8519     02C9                     i1l2782:
  8520     02C9  0828               	movf	___xxtofl@sign,w
  8521     02CA  1903               	btfsc	3,2
  8522     02CB  2ACD               	goto	u188_21
  8523     02CC  2ACE               	goto	u188_20
  8524     02CD                     u188_21:
  8525     02CD  2AE2               	goto	i1l2788
  8526     02CE                     u188_20:
  8527     02CE                     i1l2784:
  8528     02CE  1FA3               	btfss	___xxtofl@val+3,7
  8529     02CF  2AD1               	goto	u189_21
  8530     02D0  2AD2               	goto	u189_20
  8531     02D1                     u189_21:
  8532     02D1  2AE2               	goto	i1l2788
  8533     02D2                     u189_20:
  8534     02D2                     i1l2786:
  8535     02D2  0920               	comf	___xxtofl@val,w
  8536     02D3  00AA               	movwf	___xxtofl@arg
  8537     02D4  0921               	comf	___xxtofl@val+1,w
  8538     02D5  00AB               	movwf	___xxtofl@arg+1
  8539     02D6  0922               	comf	___xxtofl@val+2,w
  8540     02D7  00AC               	movwf	___xxtofl@arg+2
  8541     02D8  0923               	comf	___xxtofl@val+3,w
  8542     02D9  00AD               	movwf	___xxtofl@arg+3
  8543     02DA  0AAA               	incf	___xxtofl@arg,f
  8544     02DB  1903               	skipnz
  8545     02DC  0AAB               	incf	___xxtofl@arg+1,f
  8546     02DD  1903               	skipnz
  8547     02DE  0AAC               	incf	___xxtofl@arg+2,f
  8548     02DF  1903               	skipnz
  8549     02E0  0AAD               	incf	___xxtofl@arg+3,f
  8550     02E1  2AEA               	goto	i1l1437
  8551     02E2                     i1l2788:
  8552     02E2  0823               	movf	___xxtofl@val+3,w
  8553     02E3  00AD               	movwf	___xxtofl@arg+3
  8554     02E4  0822               	movf	___xxtofl@val+2,w
  8555     02E5  00AC               	movwf	___xxtofl@arg+2
  8556     02E6  0821               	movf	___xxtofl@val+1,w
  8557     02E7  00AB               	movwf	___xxtofl@arg+1
  8558     02E8  0820               	movf	___xxtofl@val,w
  8559     02E9  00AA               	movwf	___xxtofl@arg
  8560     02EA                     i1l1437:
  8561     02EA  0823               	movf	___xxtofl@val+3,w
  8562     02EB  0422               	iorwf	___xxtofl@val+2,w
  8563     02EC  0421               	iorwf	___xxtofl@val+1,w
  8564     02ED  0420               	iorwf	___xxtofl@val,w
  8565     02EE  1D03               	skipz
  8566     02EF  2AF1               	goto	u190_21
  8567     02F0  2AF2               	goto	u190_20
  8568     02F1                     u190_21:
  8569     02F1  2AFB               	goto	i1l2794
  8570     02F2                     u190_20:
  8571     02F2                     i1l2790:
  8572     02F2  3000               	movlw	0
  8573     02F3  00A3               	movwf	?___xxtofl+3
  8574     02F4  3000               	movlw	0
  8575     02F5  00A2               	movwf	?___xxtofl+2
  8576     02F6  3000               	movlw	0
  8577     02F7  00A1               	movwf	?___xxtofl+1
  8578     02F8  3000               	movlw	0
  8579     02F9  00A0               	movwf	?___xxtofl
  8580     02FA  2B71               	goto	i1l1439
  8581     02FB                     i1l2794:
  8582     02FB  3096               	movlw	150
  8583     02FC  00A9               	movwf	___xxtofl@exp
  8584     02FD  2B09               	goto	i1l2798
  8585     02FE                     i1l2796:
  8586     02FE  3001               	movlw	1
  8587     02FF  00A4               	movwf	??___xxtofl
  8588     0300  0824               	movf	??___xxtofl,w
  8589     0301  07A9               	addwf	___xxtofl@exp,f
  8590     0302  3001               	movlw	1
  8591     0303                     u191_25:
  8592     0303  36AD               	lsrf	___xxtofl@arg+3,f
  8593     0304  0CAC               	rrf	___xxtofl@arg+2,f
  8594     0305  0CAB               	rrf	___xxtofl@arg+1,f
  8595     0306  0CAA               	rrf	___xxtofl@arg,f
  8596     0307  0B89               	decfsz	9,f
  8597     0308  2B03               	goto	u191_25
  8598     0309                     i1l2798:
  8599     0309  30FE               	movlw	254
  8600     030A  052D               	andwf	___xxtofl@arg+3,w
  8601     030B  1D03               	btfss	3,2
  8602     030C  2B0E               	goto	u192_21
  8603     030D  2B0F               	goto	u192_20
  8604     030E                     u192_21:
  8605     030E  2AFE               	goto	i1l2796
  8606     030F                     u192_20:
  8607     030F  2B23               	goto	i1l1443
  8608     0310                     i1l2800:
  8609     0310  3001               	movlw	1
  8610     0311  00A4               	movwf	??___xxtofl
  8611     0312  0824               	movf	??___xxtofl,w
  8612     0313  07A9               	addwf	___xxtofl@exp,f
  8613     0314                     i1l2802:
  8614     0314  3001               	movlw	1
  8615     0315  07AA               	addwf	___xxtofl@arg,f
  8616     0316  3000               	movlw	0
  8617     0317  3DAB               	addwfc	___xxtofl@arg+1,f
  8618     0318  3000               	movlw	0
  8619     0319  3DAC               	addwfc	___xxtofl@arg+2,f
  8620     031A  3000               	movlw	0
  8621     031B  3DAD               	addwfc	___xxtofl@arg+3,f
  8622     031C                     i1l2804:
  8623     031C  3001               	movlw	1
  8624     031D                     u193_25:
  8625     031D  36AD               	lsrf	___xxtofl@arg+3,f
  8626     031E  0CAC               	rrf	___xxtofl@arg+2,f
  8627     031F  0CAB               	rrf	___xxtofl@arg+1,f
  8628     0320  0CAA               	rrf	___xxtofl@arg,f
  8629     0321  0B89               	decfsz	9,f
  8630     0322  2B1D               	goto	u193_25
  8631     0323                     i1l1443:
  8632     0323  30FF               	movlw	255
  8633     0324  052D               	andwf	___xxtofl@arg+3,w
  8634     0325  1D03               	btfss	3,2
  8635     0326  2B28               	goto	u194_21
  8636     0327  2B29               	goto	u194_20
  8637     0328                     u194_21:
  8638     0328  2B10               	goto	i1l2800
  8639     0329                     u194_20:
  8640     0329  2B33               	goto	i1l2808
  8641     032A                     i1l2806:
  8642     032A  3001               	movlw	1
  8643     032B  02A9               	subwf	___xxtofl@exp,f
  8644     032C  3001               	movlw	1
  8645     032D                     u195_25:
  8646     032D  35AA               	lslf	___xxtofl@arg,f
  8647     032E  0DAB               	rlf	___xxtofl@arg+1,f
  8648     032F  0DAC               	rlf	___xxtofl@arg+2,f
  8649     0330  0DAD               	rlf	___xxtofl@arg+3,f
  8650     0331  0B89               	decfsz	9,f
  8651     0332  2B2D               	goto	u195_25
  8652     0333                     i1l2808:
  8653     0333  1BAC               	btfsc	___xxtofl@arg+2,7
  8654     0334  2B36               	goto	u196_21
  8655     0335  2B37               	goto	u196_20
  8656     0336                     u196_21:
  8657     0336  2B3D               	goto	i1l1450
  8658     0337                     u196_20:
  8659     0337                     i1l2810:
  8660     0337  3002               	movlw	2
  8661     0338  0229               	subwf	___xxtofl@exp,w
  8662     0339  1803               	skipnc
  8663     033A  2B3C               	goto	u197_21
  8664     033B  2B3D               	goto	u197_20
  8665     033C                     u197_21:
  8666     033C  2B2A               	goto	i1l2806
  8667     033D                     u197_20:
  8668     033D                     i1l1450:
  8669     033D  1829               	btfsc	___xxtofl@exp,0
  8670     033E  2B40               	goto	u198_21
  8671     033F  2B41               	goto	u198_20
  8672     0340                     u198_21:
  8673     0340  2B49               	goto	i1l1451
  8674     0341                     u198_20:
  8675     0341                     i1l2812:
  8676     0341  30FF               	movlw	255
  8677     0342  05AA               	andwf	___xxtofl@arg,f
  8678     0343  30FF               	movlw	255
  8679     0344  05AB               	andwf	___xxtofl@arg+1,f
  8680     0345  307F               	movlw	127
  8681     0346  05AC               	andwf	___xxtofl@arg+2,f
  8682     0347  30FF               	movlw	255
  8683     0348  05AD               	andwf	___xxtofl@arg+3,f
  8684     0349                     i1l1451:
  8685     0349  1003               	clrc
  8686     034A  0CA9               	rrf	___xxtofl@exp,f
  8687     034B                     i1l2814:
  8688     034B  0829               	movf	___xxtofl@exp,w
  8689     034C  00A4               	movwf	??___xxtofl
  8690     034D  01A5               	clrf	??___xxtofl+1
  8691     034E  01A6               	clrf	??___xxtofl+2
  8692     034F  01A7               	clrf	??___xxtofl+3
  8693     0350  3018               	movlw	24
  8694     0351                     u199_25:
  8695     0351  35A4               	lslf	??___xxtofl,f
  8696     0352  0DA5               	rlf	??___xxtofl+1,f
  8697     0353  0DA6               	rlf	??___xxtofl+2,f
  8698     0354  0DA7               	rlf	??___xxtofl+3,f
  8699     0355                     u199_20:
  8700     0355  0B89               	decfsz	9,f
  8701     0356  2B51               	goto	u199_25
  8702     0357  0824               	movf	??___xxtofl,w
  8703     0358  04AA               	iorwf	___xxtofl@arg,f
  8704     0359  0825               	movf	??___xxtofl+1,w
  8705     035A  04AB               	iorwf	___xxtofl@arg+1,f
  8706     035B  0826               	movf	??___xxtofl+2,w
  8707     035C  04AC               	iorwf	___xxtofl@arg+2,f
  8708     035D  0827               	movf	??___xxtofl+3,w
  8709     035E  04AD               	iorwf	___xxtofl@arg+3,f
  8710     035F                     i1l2816:
  8711     035F  0828               	movf	___xxtofl@sign,w
  8712     0360  1903               	btfsc	3,2
  8713     0361  2B63               	goto	u200_21
  8714     0362  2B64               	goto	u200_20
  8715     0363                     u200_21:
  8716     0363  2B69               	goto	i1l2822
  8717     0364                     u200_20:
  8718     0364                     i1l2818:
  8719     0364  1FA3               	btfss	___xxtofl@val+3,7
  8720     0365  2B67               	goto	u201_21
  8721     0366  2B68               	goto	u201_20
  8722     0367                     u201_21:
  8723     0367  2B69               	goto	i1l2822
  8724     0368                     u201_20:
  8725     0368                     i1l2820:
  8726     0368  17AD               	bsf	___xxtofl@arg+3,7
  8727     0369                     i1l2822:
  8728     0369  082D               	movf	___xxtofl@arg+3,w
  8729     036A  00A3               	movwf	?___xxtofl+3
  8730     036B  082C               	movf	___xxtofl@arg+2,w
  8731     036C  00A2               	movwf	?___xxtofl+2
  8732     036D  082B               	movf	___xxtofl@arg+1,w
  8733     036E  00A1               	movwf	?___xxtofl+1
  8734     036F  082A               	movf	___xxtofl@arg,w
  8735     0370  00A0               	movwf	?___xxtofl
  8736     0371                     i1l1439:
  8737     0371  0008               	return
  8738     0372                     __end_of___xxtofl:
  8739                           
  8740                           	psect	text57
  8741     0619                     __ptext57:	
  8742 ;; *************** function ___fltol *****************
  8743 ;; Defined at:
  8744 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\fltol.c"
  8745 ;; Parameters:    Size  Location     Type
  8746 ;;  f1              4   40[BANK0 ] unsigned char 
  8747 ;; Auto vars:     Size  Location     Type
  8748 ;;  exp1            1   12[COMMON] unsigned char 
  8749 ;;  sign1           1   11[COMMON] unsigned char 
  8750 ;; Return value:  Size  Location     Type
  8751 ;;                  4   40[BANK0 ] long 
  8752 ;; Registers used:
  8753 ;;		wreg, status,2, status,0
  8754 ;; Tracked objects:
  8755 ;;		On entry : 0/0
  8756 ;;		On exit  : 0/0
  8757 ;;		Unchanged: 0/0
  8758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8759 ;;      Params:         0       4       0       0       0       0
  8760 ;;      Locals:         2       0       0       0       0       0
  8761 ;;      Temps:          0       4       0       0       0       0
  8762 ;;      Totals:         2       8       0       0       0       0
  8763 ;;Total ram usage:       10 bytes
  8764 ;; Hardware stack levels used: 1
  8765 ;; This function calls:
  8766 ;;		Nothing
  8767 ;; This function is called by:
  8768 ;;		_envia_Tx
  8769 ;;		_mede_height
  8770 ;; This function uses a non-reentrant model
  8771 ;;
  8772                           
  8773     0619                     ___fltol:	
  8774                           ;psect for function ___fltol
  8775                           
  8776     0619                     i1l2438:	
  8777                           ;incstack = 0
  8778                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  8779                           
  8780     0619  1003               	clrc
  8781     061A  0020               	movlb	0	; select bank0
  8782     061B  0D4A               	rlf	___fltol@f1+2,w
  8783     061C  0D4B               	rlf	___fltol@f1+3,w
  8784     061D  00FC               	movwf	___fltol@exp1
  8785     061E  087C               	movf	___fltol@exp1,w
  8786     061F  1D03               	btfss	3,2
  8787     0620  2E22               	goto	u132_21
  8788     0621  2E23               	goto	u132_20
  8789     0622                     u132_21:
  8790     0622  2E2C               	goto	i1l2444
  8791     0623                     u132_20:
  8792     0623                     i1l2440:
  8793     0623  3000               	movlw	0
  8794     0624  00CB               	movwf	?___fltol+3
  8795     0625  3000               	movlw	0
  8796     0626  00CA               	movwf	?___fltol+2
  8797     0627  3000               	movlw	0
  8798     0628  00C9               	movwf	?___fltol+1
  8799     0629  3000               	movlw	0
  8800     062A  00C8               	movwf	?___fltol
  8801     062B  2E89               	goto	i1l1190
  8802     062C                     i1l2444:
  8803     062C  0848               	movf	___fltol@f1,w
  8804     062D  00CC               	movwf	??___fltol
  8805     062E  0849               	movf	___fltol@f1+1,w
  8806     062F  00CD               	movwf	??___fltol+1
  8807     0630  084A               	movf	___fltol@f1+2,w
  8808     0631  00CE               	movwf	??___fltol+2
  8809     0632  084B               	movf	___fltol@f1+3,w
  8810     0633  00CF               	movwf	??___fltol+3
  8811     0634  301F               	movlw	31
  8812     0635                     u133_25:
  8813     0635  36CF               	lsrf	??___fltol+3,f
  8814     0636  0CCE               	rrf	??___fltol+2,f
  8815     0637  0CCD               	rrf	??___fltol+1,f
  8816     0638  0CCC               	rrf	??___fltol,f
  8817     0639                     u133_20:
  8818     0639  0B89               	decfsz	9,f
  8819     063A  2E35               	goto	u133_25
  8820     063B  084C               	movf	??___fltol,w
  8821     063C  00FB               	movwf	___fltol@sign1
  8822     063D                     i1l2446:
  8823     063D  17CA               	bsf	___fltol@f1+2,7
  8824     063E                     i1l2448:
  8825     063E  30FF               	movlw	255
  8826     063F  05C8               	andwf	___fltol@f1,f
  8827     0640  30FF               	movlw	255
  8828     0641  05C9               	andwf	___fltol@f1+1,f
  8829     0642  30FF               	movlw	255
  8830     0643  05CA               	andwf	___fltol@f1+2,f
  8831     0644  3000               	movlw	0
  8832     0645  05CB               	andwf	___fltol@f1+3,f
  8833     0646                     i1l2450:
  8834     0646  3096               	movlw	150
  8835     0647  02FC               	subwf	___fltol@exp1,f
  8836     0648                     i1l2452:
  8837     0648  1FFC               	btfss	___fltol@exp1,7
  8838     0649  2E4B               	goto	u134_21
  8839     064A  2E4C               	goto	u134_20
  8840     064B                     u134_21:
  8841     064B  2E64               	goto	i1l2462
  8842     064C                     u134_20:
  8843     064C                     i1l2454:
  8844     064C  087C               	movf	___fltol@exp1,w
  8845     064D  3A80               	xorlw	128
  8846     064E  3E97               	addlw	151
  8847     064F  1803               	skipnc
  8848     0650  2E52               	goto	u135_21
  8849     0651  2E53               	goto	u135_20
  8850     0652                     u135_21:
  8851     0652  2E54               	goto	i1l2460
  8852     0653                     u135_20:
  8853     0653  2E23               	goto	i1l2440
  8854     0654                     i1l2460:
  8855     0654  3001               	movlw	1
  8856     0655                     u136_25:
  8857     0655  36CB               	lsrf	___fltol@f1+3,f
  8858     0656  0CCA               	rrf	___fltol@f1+2,f
  8859     0657  0CC9               	rrf	___fltol@f1+1,f
  8860     0658  0CC8               	rrf	___fltol@f1,f
  8861     0659  0B89               	decfsz	9,f
  8862     065A  2E55               	goto	u136_25
  8863     065B  3001               	movlw	1
  8864     065C  00CC               	movwf	??___fltol
  8865     065D  084C               	movf	??___fltol,w
  8866     065E  07FC               	addwf	___fltol@exp1,f
  8867     065F  1D03               	btfss	3,2
  8868     0660  2E62               	goto	u137_21
  8869     0661  2E63               	goto	u137_20
  8870     0662                     u137_21:
  8871     0662  2E54               	goto	i1l2460
  8872     0663                     u137_20:
  8873     0663  2E79               	goto	i1l2470
  8874     0664                     i1l2462:
  8875     0664  3020               	movlw	32
  8876     0665  027C               	subwf	___fltol@exp1,w
  8877     0666  1C03               	skipc
  8878     0667  2E69               	goto	u138_21
  8879     0668  2E6A               	goto	u138_20
  8880     0669                     u138_21:
  8881     0669  2E74               	goto	i1l1197
  8882     066A                     u138_20:
  8883     066A  2E23               	goto	i1l2440
  8884     066B                     i1l2468:
  8885     066B  3001               	movlw	1
  8886     066C                     u139_25:
  8887     066C  35C8               	lslf	___fltol@f1,f
  8888     066D  0DC9               	rlf	___fltol@f1+1,f
  8889     066E  0DCA               	rlf	___fltol@f1+2,f
  8890     066F  0DCB               	rlf	___fltol@f1+3,f
  8891     0670  0B89               	decfsz	9,f
  8892     0671  2E6C               	goto	u139_25
  8893     0672  3001               	movlw	1
  8894     0673  02FC               	subwf	___fltol@exp1,f
  8895     0674                     i1l1197:
  8896     0674  087C               	movf	___fltol@exp1,w
  8897     0675  1D03               	btfss	3,2
  8898     0676  2E78               	goto	u140_21
  8899     0677  2E79               	goto	u140_20
  8900     0678                     u140_21:
  8901     0678  2E6B               	goto	i1l2468
  8902     0679                     u140_20:
  8903     0679                     i1l2470:
  8904     0679  087B               	movf	___fltol@sign1,w
  8905     067A  1903               	btfsc	3,2
  8906     067B  2E7D               	goto	u141_21
  8907     067C  2E7E               	goto	u141_20
  8908     067D                     u141_21:
  8909     067D  2E89               	goto	i1l1200
  8910     067E                     u141_20:
  8911     067E                     i1l2472:
  8912     067E  09C8               	comf	___fltol@f1,f
  8913     067F  09C9               	comf	___fltol@f1+1,f
  8914     0680  09CA               	comf	___fltol@f1+2,f
  8915     0681  09CB               	comf	___fltol@f1+3,f
  8916     0682  0AC8               	incf	___fltol@f1,f
  8917     0683  1903               	skipnz
  8918     0684  0AC9               	incf	___fltol@f1+1,f
  8919     0685  1903               	skipnz
  8920     0686  0ACA               	incf	___fltol@f1+2,f
  8921     0687  1903               	skipnz
  8922     0688  0ACB               	incf	___fltol@f1+3,f
  8923     0689                     i1l1200:
  8924     0689                     i1l1190:
  8925     0689  0008               	return
  8926     068A                     __end_of___fltol:
  8927                           
  8928                           	psect	text58
  8929     008C                     __ptext58:	
  8930 ;; *************** function ___flmul *****************
  8931 ;; Defined at:
  8932 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcmul.c"
  8933 ;; Parameters:    Size  Location     Type
  8934 ;;  b               4   14[BANK0 ] long 
  8935 ;;  a               4   18[BANK0 ] long 
  8936 ;; Auto vars:     Size  Location     Type
  8937 ;;  prod            4   34[BANK0 ] struct .
  8938 ;;  grs             4   28[BANK0 ] unsigned long 
  8939 ;;  temp            2   38[BANK0 ] struct .
  8940 ;;  bexp            1   33[BANK0 ] unsigned char 
  8941 ;;  aexp            1   32[BANK0 ] unsigned char 
  8942 ;;  sign            1   27[BANK0 ] unsigned char 
  8943 ;; Return value:  Size  Location     Type
  8944 ;;                  4   14[BANK0 ] unsigned char 
  8945 ;; Registers used:
  8946 ;;		wreg, status,2, status,0, pclath, cstack
  8947 ;; Tracked objects:
  8948 ;;		On entry : 0/0
  8949 ;;		On exit  : 0/0
  8950 ;;		Unchanged: 0/0
  8951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  8952 ;;      Params:         0       8       0       0       0       0
  8953 ;;      Locals:         0      13       0       0       0       0
  8954 ;;      Temps:          0       5       0       0       0       0
  8955 ;;      Totals:         0      26       0       0       0       0
  8956 ;;Total ram usage:       26 bytes
  8957 ;; Hardware stack levels used: 1
  8958 ;; Hardware stack levels required when called: 1
  8959 ;; This function calls:
  8960 ;;		__Umul8_16
  8961 ;; This function is called by:
  8962 ;;		_envia_Tx
  8963 ;;		_mede_height
  8964 ;;		_calculaTemp
  8965 ;; This function uses a non-reentrant model
  8966 ;;
  8967                           
  8968     008C                     ___flmul:	
  8969                           ;psect for function ___flmul
  8970                           
  8971     008C                     i1l2474:	
  8972                           ;incstack = 0
  8973                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  8974                           
  8975     008C  0020               	movlb	0	; select bank0
  8976     008D  0831               	movf	___flmul@b+3,w
  8977     008E  3980               	andlw	128
  8978     008F  00BB               	movwf	___flmul@sign
  8979     0090                     i1l2476:
  8980     0090  3531               	lslf	___flmul@b+3,w
  8981     0091  00C1               	movwf	___flmul@bexp
  8982     0092                     i1l2478:
  8983     0092  1FB0               	btfss	___flmul@b+2,7
  8984     0093  2895               	goto	u142_21
  8985     0094  2896               	goto	u142_20
  8986     0095                     u142_21:
  8987     0095  2897               	goto	i1l2482
  8988     0096                     u142_20:
  8989     0096                     i1l2480:
  8990     0096  1441               	bsf	___flmul@bexp,0
  8991     0097                     i1l2482:
  8992     0097  0841               	movf	___flmul@bexp,w
  8993     0098  1903               	btfsc	3,2
  8994     0099  289B               	goto	u143_21
  8995     009A  289C               	goto	u143_20
  8996     009B                     u143_21:
  8997     009B  28AB               	goto	i1l2490
  8998     009C                     u143_20:
  8999     009C                     i1l2484:
  9000     009C  0A41               	incf	___flmul@bexp,w
  9001     009D  1D03               	btfss	3,2
  9002     009E  28A0               	goto	u144_21
  9003     009F  28A1               	goto	u144_20
  9004     00A0                     u144_21:
  9005     00A0  28A9               	goto	i1l2488
  9006     00A1                     u144_20:
  9007     00A1                     i1l2486:
  9008     00A1  3000               	movlw	0
  9009     00A2  00B1               	movwf	___flmul@b+3
  9010     00A3  3000               	movlw	0
  9011     00A4  00B0               	movwf	___flmul@b+2
  9012     00A5  3000               	movlw	0
  9013     00A6  00AF               	movwf	___flmul@b+1
  9014     00A7  3000               	movlw	0
  9015     00A8  00AE               	movwf	___flmul@b
  9016     00A9                     i1l2488:
  9017     00A9  17B0               	bsf	___flmul@b+2,7
  9018     00AA  28B3               	goto	i1l2492
  9019     00AB                     i1l2490:
  9020     00AB  3000               	movlw	0
  9021     00AC  00B1               	movwf	___flmul@b+3
  9022     00AD  3000               	movlw	0
  9023     00AE  00B0               	movwf	___flmul@b+2
  9024     00AF  3000               	movlw	0
  9025     00B0  00AF               	movwf	___flmul@b+1
  9026     00B1  3000               	movlw	0
  9027     00B2  00AE               	movwf	___flmul@b
  9028     00B3                     i1l2492:
  9029     00B3  0835               	movf	___flmul@a+3,w
  9030     00B4  3980               	andlw	128
  9031     00B5  00B6               	movwf	??___flmul
  9032     00B6  0836               	movf	??___flmul,w
  9033     00B7  06BB               	xorwf	___flmul@sign,f
  9034     00B8                     i1l2494:
  9035     00B8  3535               	lslf	___flmul@a+3,w
  9036     00B9  00C0               	movwf	___flmul@aexp
  9037     00BA                     i1l2496:
  9038     00BA  1FB4               	btfss	___flmul@a+2,7
  9039     00BB  28BD               	goto	u145_21
  9040     00BC  28BE               	goto	u145_20
  9041     00BD                     u145_21:
  9042     00BD  28BF               	goto	i1l2500
  9043     00BE                     u145_20:
  9044     00BE                     i1l2498:
  9045     00BE  1440               	bsf	___flmul@aexp,0
  9046     00BF                     i1l2500:
  9047     00BF  0840               	movf	___flmul@aexp,w
  9048     00C0  1903               	btfsc	3,2
  9049     00C1  28C3               	goto	u146_21
  9050     00C2  28C4               	goto	u146_20
  9051     00C3                     u146_21:
  9052     00C3  28D3               	goto	i1l2508
  9053     00C4                     u146_20:
  9054     00C4                     i1l2502:
  9055     00C4  0A40               	incf	___flmul@aexp,w
  9056     00C5  1D03               	btfss	3,2
  9057     00C6  28C8               	goto	u147_21
  9058     00C7  28C9               	goto	u147_20
  9059     00C8                     u147_21:
  9060     00C8  28D1               	goto	i1l2506
  9061     00C9                     u147_20:
  9062     00C9                     i1l2504:
  9063     00C9  3000               	movlw	0
  9064     00CA  00B5               	movwf	___flmul@a+3
  9065     00CB  3000               	movlw	0
  9066     00CC  00B4               	movwf	___flmul@a+2
  9067     00CD  3000               	movlw	0
  9068     00CE  00B3               	movwf	___flmul@a+1
  9069     00CF  3000               	movlw	0
  9070     00D0  00B2               	movwf	___flmul@a
  9071     00D1                     i1l2506:
  9072     00D1  17B4               	bsf	___flmul@a+2,7
  9073     00D2  28DB               	goto	i1l2510
  9074     00D3                     i1l2508:
  9075     00D3  3000               	movlw	0
  9076     00D4  00B5               	movwf	___flmul@a+3
  9077     00D5  3000               	movlw	0
  9078     00D6  00B4               	movwf	___flmul@a+2
  9079     00D7  3000               	movlw	0
  9080     00D8  00B3               	movwf	___flmul@a+1
  9081     00D9  3000               	movlw	0
  9082     00DA  00B2               	movwf	___flmul@a
  9083     00DB                     i1l2510:
  9084     00DB  0840               	movf	___flmul@aexp,w
  9085     00DC  1903               	btfsc	3,2
  9086     00DD  28DF               	goto	u148_21
  9087     00DE  28E0               	goto	u148_20
  9088     00DF                     u148_21:
  9089     00DF  28E5               	goto	i1l2514
  9090     00E0                     u148_20:
  9091     00E0                     i1l2512:
  9092     00E0  0841               	movf	___flmul@bexp,w
  9093     00E1  1D03               	btfss	3,2
  9094     00E2  28E4               	goto	u149_21
  9095     00E3  28E5               	goto	u149_20
  9096     00E4                     u149_21:
  9097     00E4  28EE               	goto	i1l2518
  9098     00E5                     u149_20:
  9099     00E5                     i1l2514:
  9100     00E5  3000               	movlw	0
  9101     00E6  00B1               	movwf	?___flmul+3
  9102     00E7  3000               	movlw	0
  9103     00E8  00B0               	movwf	?___flmul+2
  9104     00E9  3000               	movlw	0
  9105     00EA  00AF               	movwf	?___flmul+1
  9106     00EB  3000               	movlw	0
  9107     00EC  00AE               	movwf	?___flmul
  9108     00ED  2AC6               	goto	i1l1393
  9109     00EE                     i1l2518:
  9110     00EE  082E               	movf	___flmul@b,w
  9111     00EF  00F0               	movwf	__Umul8_16@multiplicand
  9112     00F0  0834               	movf	___flmul@a+2,w
  9113     00F1  318E  26EB  3180   	fcall	__Umul8_16
  9114     00F4  0871               	movf	?__Umul8_16+1,w
  9115     00F5  0020               	movlb	0	; select bank0
  9116     00F6  00C7               	movwf	___flmul@temp+1
  9117     00F7  0870               	movf	?__Umul8_16,w
  9118     00F8  00C6               	movwf	___flmul@temp
  9119     00F9                     i1l2520:
  9120     00F9  0846               	movf	___flmul@temp,w
  9121     00FA  00B6               	movwf	??___flmul
  9122     00FB  01B7               	clrf	??___flmul+1
  9123     00FC  01B8               	clrf	??___flmul+2
  9124     00FD  01B9               	clrf	??___flmul+3
  9125     00FE  0839               	movf	??___flmul+3,w
  9126     00FF  00BF               	movwf	___flmul@grs+3
  9127     0100  0838               	movf	??___flmul+2,w
  9128     0101  00BE               	movwf	___flmul@grs+2
  9129     0102  0837               	movf	??___flmul+1,w
  9130     0103  00BD               	movwf	___flmul@grs+1
  9131     0104  0836               	movf	??___flmul,w
  9132     0105  00BC               	movwf	___flmul@grs
  9133     0106                     i1l2522:
  9134     0106  0847               	movf	___flmul@temp+1,w
  9135     0107  00B6               	movwf	??___flmul
  9136     0108  01B7               	clrf	??___flmul+1
  9137     0109  01B8               	clrf	??___flmul+2
  9138     010A  01B9               	clrf	??___flmul+3
  9139     010B  0839               	movf	??___flmul+3,w
  9140     010C  00C5               	movwf	___flmul@prod+3
  9141     010D  0838               	movf	??___flmul+2,w
  9142     010E  00C4               	movwf	___flmul@prod+2
  9143     010F  0837               	movf	??___flmul+1,w
  9144     0110  00C3               	movwf	___flmul@prod+1
  9145     0111  0836               	movf	??___flmul,w
  9146     0112  00C2               	movwf	___flmul@prod
  9147     0113  082F               	movf	___flmul@b+1,w
  9148     0114  00F0               	movwf	__Umul8_16@multiplicand
  9149     0115  0833               	movf	___flmul@a+1,w
  9150     0116  318E  26EB  3180   	fcall	__Umul8_16
  9151     0119  0871               	movf	?__Umul8_16+1,w
  9152     011A  0020               	movlb	0	; select bank0
  9153     011B  00C7               	movwf	___flmul@temp+1
  9154     011C  0870               	movf	?__Umul8_16,w
  9155     011D  00C6               	movwf	___flmul@temp
  9156     011E                     i1l2524:
  9157     011E  0846               	movf	___flmul@temp,w
  9158     011F  00B6               	movwf	??___flmul
  9159     0120  01B7               	clrf	??___flmul+1
  9160     0121  01B8               	clrf	??___flmul+2
  9161     0122  01B9               	clrf	??___flmul+3
  9162     0123  0836               	movf	??___flmul,w
  9163     0124  07BC               	addwf	___flmul@grs,f
  9164     0125  0837               	movf	??___flmul+1,w
  9165     0126  3DBD               	addwfc	___flmul@grs+1,f
  9166     0127  0838               	movf	??___flmul+2,w
  9167     0128  3DBE               	addwfc	___flmul@grs+2,f
  9168     0129  0839               	movf	??___flmul+3,w
  9169     012A  3DBF               	addwfc	___flmul@grs+3,f
  9170     012B                     i1l2526:
  9171     012B  0847               	movf	___flmul@temp+1,w
  9172     012C  00B6               	movwf	??___flmul
  9173     012D  01B7               	clrf	??___flmul+1
  9174     012E  01B8               	clrf	??___flmul+2
  9175     012F  01B9               	clrf	??___flmul+3
  9176     0130  0836               	movf	??___flmul,w
  9177     0131  07C2               	addwf	___flmul@prod,f
  9178     0132  0837               	movf	??___flmul+1,w
  9179     0133  3DC3               	addwfc	___flmul@prod+1,f
  9180     0134  0838               	movf	??___flmul+2,w
  9181     0135  3DC4               	addwfc	___flmul@prod+2,f
  9182     0136  0839               	movf	??___flmul+3,w
  9183     0137  3DC5               	addwfc	___flmul@prod+3,f
  9184     0138  0830               	movf	___flmul@b+2,w
  9185     0139  00F0               	movwf	__Umul8_16@multiplicand
  9186     013A  0832               	movf	___flmul@a,w
  9187     013B  318E  26EB  3180   	fcall	__Umul8_16
  9188     013E  0871               	movf	?__Umul8_16+1,w
  9189     013F  0020               	movlb	0	; select bank0
  9190     0140  00C7               	movwf	___flmul@temp+1
  9191     0141  0870               	movf	?__Umul8_16,w
  9192     0142  00C6               	movwf	___flmul@temp
  9193     0143                     i1l2528:
  9194     0143  0846               	movf	___flmul@temp,w
  9195     0144  00B6               	movwf	??___flmul
  9196     0145  01B7               	clrf	??___flmul+1
  9197     0146  01B8               	clrf	??___flmul+2
  9198     0147  01B9               	clrf	??___flmul+3
  9199     0148  0836               	movf	??___flmul,w
  9200     0149  07BC               	addwf	___flmul@grs,f
  9201     014A  0837               	movf	??___flmul+1,w
  9202     014B  3DBD               	addwfc	___flmul@grs+1,f
  9203     014C  0838               	movf	??___flmul+2,w
  9204     014D  3DBE               	addwfc	___flmul@grs+2,f
  9205     014E  0839               	movf	??___flmul+3,w
  9206     014F  3DBF               	addwfc	___flmul@grs+3,f
  9207     0150                     i1l2530:
  9208     0150  0847               	movf	___flmul@temp+1,w
  9209     0151  00B6               	movwf	??___flmul
  9210     0152  01B7               	clrf	??___flmul+1
  9211     0153  01B8               	clrf	??___flmul+2
  9212     0154  01B9               	clrf	??___flmul+3
  9213     0155  0836               	movf	??___flmul,w
  9214     0156  07C2               	addwf	___flmul@prod,f
  9215     0157  0837               	movf	??___flmul+1,w
  9216     0158  3DC3               	addwfc	___flmul@prod+1,f
  9217     0159  0838               	movf	??___flmul+2,w
  9218     015A  3DC4               	addwfc	___flmul@prod+2,f
  9219     015B  0839               	movf	??___flmul+3,w
  9220     015C  3DC5               	addwfc	___flmul@prod+3,f
  9221     015D                     i1l2532:
  9222     015D  3008               	movlw	8
  9223     015E                     u150_25:
  9224     015E  35BC               	lslf	___flmul@grs,f
  9225     015F  0DBD               	rlf	___flmul@grs+1,f
  9226     0160  0DBE               	rlf	___flmul@grs+2,f
  9227     0161  0DBF               	rlf	___flmul@grs+3,f
  9228     0162  0B89               	decfsz	9,f
  9229     0163  295E               	goto	u150_25
  9230     0164                     i1l2534:
  9231     0164  082F               	movf	___flmul@b+1,w
  9232     0165  00F0               	movwf	__Umul8_16@multiplicand
  9233     0166  0832               	movf	___flmul@a,w
  9234     0167  318E  26EB  3180   	fcall	__Umul8_16
  9235     016A  0871               	movf	?__Umul8_16+1,w
  9236     016B  0020               	movlb	0	; select bank0
  9237     016C  00C7               	movwf	___flmul@temp+1
  9238     016D  0870               	movf	?__Umul8_16,w
  9239     016E  00C6               	movwf	___flmul@temp
  9240     016F                     i1l2536:
  9241     016F  0846               	movf	___flmul@temp,w
  9242     0170  07BC               	addwf	___flmul@grs,f
  9243     0171  0847               	movf	___flmul@temp+1,w
  9244     0172  3DBD               	addwfc	___flmul@grs+1,f
  9245     0173  3000               	movlw	0
  9246     0174  3DBE               	addwfc	___flmul@grs+2,f
  9247     0175  3DBF               	addwfc	___flmul@grs+3,f
  9248     0176                     i1l2538:
  9249     0176  082E               	movf	___flmul@b,w
  9250     0177  00F0               	movwf	__Umul8_16@multiplicand
  9251     0178  0833               	movf	___flmul@a+1,w
  9252     0179  318E  26EB  3180   	fcall	__Umul8_16
  9253     017C  0871               	movf	?__Umul8_16+1,w
  9254     017D  0020               	movlb	0	; select bank0
  9255     017E  00C7               	movwf	___flmul@temp+1
  9256     017F  0870               	movf	?__Umul8_16,w
  9257     0180  00C6               	movwf	___flmul@temp
  9258     0181                     i1l2540:
  9259     0181  0846               	movf	___flmul@temp,w
  9260     0182  07BC               	addwf	___flmul@grs,f
  9261     0183  0847               	movf	___flmul@temp+1,w
  9262     0184  3DBD               	addwfc	___flmul@grs+1,f
  9263     0185  3000               	movlw	0
  9264     0186  3DBE               	addwfc	___flmul@grs+2,f
  9265     0187  3DBF               	addwfc	___flmul@grs+3,f
  9266     0188                     i1l2542:
  9267     0188  3008               	movlw	8
  9268     0189                     u151_25:
  9269     0189  35BC               	lslf	___flmul@grs,f
  9270     018A  0DBD               	rlf	___flmul@grs+1,f
  9271     018B  0DBE               	rlf	___flmul@grs+2,f
  9272     018C  0DBF               	rlf	___flmul@grs+3,f
  9273     018D  0B89               	decfsz	9,f
  9274     018E  2989               	goto	u151_25
  9275     018F  082E               	movf	___flmul@b,w
  9276     0190  00F0               	movwf	__Umul8_16@multiplicand
  9277     0191  0832               	movf	___flmul@a,w
  9278     0192  318E  26EB  3180   	fcall	__Umul8_16
  9279     0195  0871               	movf	?__Umul8_16+1,w
  9280     0196  0020               	movlb	0	; select bank0
  9281     0197  00C7               	movwf	___flmul@temp+1
  9282     0198  0870               	movf	?__Umul8_16,w
  9283     0199  00C6               	movwf	___flmul@temp
  9284     019A                     i1l2544:
  9285     019A  0846               	movf	___flmul@temp,w
  9286     019B  07BC               	addwf	___flmul@grs,f
  9287     019C  0847               	movf	___flmul@temp+1,w
  9288     019D  3DBD               	addwfc	___flmul@grs+1,f
  9289     019E  3000               	movlw	0
  9290     019F  3DBE               	addwfc	___flmul@grs+2,f
  9291     01A0  3DBF               	addwfc	___flmul@grs+3,f
  9292     01A1                     i1l2546:
  9293     01A1  082F               	movf	___flmul@b+1,w
  9294     01A2  00F0               	movwf	__Umul8_16@multiplicand
  9295     01A3  0834               	movf	___flmul@a+2,w
  9296     01A4  318E  26EB  3180   	fcall	__Umul8_16
  9297     01A7  0871               	movf	?__Umul8_16+1,w
  9298     01A8  0020               	movlb	0	; select bank0
  9299     01A9  00C7               	movwf	___flmul@temp+1
  9300     01AA  0870               	movf	?__Umul8_16,w
  9301     01AB  00C6               	movwf	___flmul@temp
  9302     01AC  0846               	movf	___flmul@temp,w
  9303     01AD  07C2               	addwf	___flmul@prod,f
  9304     01AE  0847               	movf	___flmul@temp+1,w
  9305     01AF  3DC3               	addwfc	___flmul@prod+1,f
  9306     01B0  3000               	movlw	0
  9307     01B1  3DC4               	addwfc	___flmul@prod+2,f
  9308     01B2  3DC5               	addwfc	___flmul@prod+3,f
  9309     01B3                     i1l2548:
  9310     01B3  0830               	movf	___flmul@b+2,w
  9311     01B4  00F0               	movwf	__Umul8_16@multiplicand
  9312     01B5  0833               	movf	___flmul@a+1,w
  9313     01B6  318E  26EB  3180   	fcall	__Umul8_16
  9314     01B9  0871               	movf	?__Umul8_16+1,w
  9315     01BA  0020               	movlb	0	; select bank0
  9316     01BB  00C7               	movwf	___flmul@temp+1
  9317     01BC  0870               	movf	?__Umul8_16,w
  9318     01BD  00C6               	movwf	___flmul@temp
  9319     01BE                     i1l2550:
  9320     01BE  0846               	movf	___flmul@temp,w
  9321     01BF  07C2               	addwf	___flmul@prod,f
  9322     01C0  0847               	movf	___flmul@temp+1,w
  9323     01C1  3DC3               	addwfc	___flmul@prod+1,f
  9324     01C2  3000               	movlw	0
  9325     01C3  3DC4               	addwfc	___flmul@prod+2,f
  9326     01C4  3DC5               	addwfc	___flmul@prod+3,f
  9327     01C5  0830               	movf	___flmul@b+2,w
  9328     01C6  00F0               	movwf	__Umul8_16@multiplicand
  9329     01C7  0834               	movf	___flmul@a+2,w
  9330     01C8  318E  26EB  3180   	fcall	__Umul8_16
  9331     01CB  0871               	movf	?__Umul8_16+1,w
  9332     01CC  0020               	movlb	0	; select bank0
  9333     01CD  00C7               	movwf	___flmul@temp+1
  9334     01CE  0870               	movf	?__Umul8_16,w
  9335     01CF  00C6               	movwf	___flmul@temp
  9336     01D0                     i1l2552:
  9337     01D0  0846               	movf	___flmul@temp,w
  9338     01D1  00B6               	movwf	??___flmul
  9339     01D2  0847               	movf	___flmul@temp+1,w
  9340     01D3  00B7               	movwf	??___flmul+1
  9341     01D4  01B8               	clrf	??___flmul+2
  9342     01D5  01B9               	clrf	??___flmul+3
  9343     01D6  3008               	movlw	8
  9344     01D7                     u152_25:
  9345     01D7  35B6               	lslf	??___flmul,f
  9346     01D8  0DB7               	rlf	??___flmul+1,f
  9347     01D9  0DB8               	rlf	??___flmul+2,f
  9348     01DA  0DB9               	rlf	??___flmul+3,f
  9349     01DB                     u152_20:
  9350     01DB  0B89               	decfsz	9,f
  9351     01DC  29D7               	goto	u152_25
  9352     01DD  0836               	movf	??___flmul,w
  9353     01DE  07C2               	addwf	___flmul@prod,f
  9354     01DF  0837               	movf	??___flmul+1,w
  9355     01E0  3DC3               	addwfc	___flmul@prod+1,f
  9356     01E1  0838               	movf	??___flmul+2,w
  9357     01E2  3DC4               	addwfc	___flmul@prod+2,f
  9358     01E3  0839               	movf	??___flmul+3,w
  9359     01E4  3DC5               	addwfc	___flmul@prod+3,f
  9360     01E5                     i1l2554:
  9361     01E5  083C               	movf	___flmul@grs,w
  9362     01E6  00B6               	movwf	??___flmul
  9363     01E7  083D               	movf	___flmul@grs+1,w
  9364     01E8  00B7               	movwf	??___flmul+1
  9365     01E9  083E               	movf	___flmul@grs+2,w
  9366     01EA  00B8               	movwf	??___flmul+2
  9367     01EB  083F               	movf	___flmul@grs+3,w
  9368     01EC  00B9               	movwf	??___flmul+3
  9369     01ED  3018               	movlw	24
  9370     01EE                     u153_25:
  9371     01EE  36B9               	lsrf	??___flmul+3,f
  9372     01EF  0CB8               	rrf	??___flmul+2,f
  9373     01F0  0CB7               	rrf	??___flmul+1,f
  9374     01F1  0CB6               	rrf	??___flmul,f
  9375     01F2                     u153_20:
  9376     01F2  0B89               	decfsz	9,f
  9377     01F3  29EE               	goto	u153_25
  9378     01F4  0836               	movf	??___flmul,w
  9379     01F5  07C2               	addwf	___flmul@prod,f
  9380     01F6  0837               	movf	??___flmul+1,w
  9381     01F7  3DC3               	addwfc	___flmul@prod+1,f
  9382     01F8  0838               	movf	??___flmul+2,w
  9383     01F9  3DC4               	addwfc	___flmul@prod+2,f
  9384     01FA  0839               	movf	??___flmul+3,w
  9385     01FB  3DC5               	addwfc	___flmul@prod+3,f
  9386     01FC                     i1l2556:
  9387     01FC  3008               	movlw	8
  9388     01FD                     u154_25:
  9389     01FD  35BC               	lslf	___flmul@grs,f
  9390     01FE  0DBD               	rlf	___flmul@grs+1,f
  9391     01FF  0DBE               	rlf	___flmul@grs+2,f
  9392     0200  0DBF               	rlf	___flmul@grs+3,f
  9393     0201  0B89               	decfsz	9,f
  9394     0202  29FD               	goto	u154_25
  9395     0203                     i1l2558:
  9396     0203  0841               	movf	___flmul@bexp,w
  9397     0204  0740               	addwf	___flmul@aexp,w
  9398     0205  00B6               	movwf	??___flmul
  9399     0206  01B7               	clrf	??___flmul+1
  9400     0207  0DB7               	rlf	??___flmul+1,f
  9401     0208  0836               	movf	??___flmul,w
  9402     0209  3E82               	addlw	130
  9403     020A  00C6               	movwf	___flmul@temp
  9404     020B  30FF               	movlw	255
  9405     020C  3D37               	addwfc	??___flmul+1,w
  9406     020D  00C7               	movwf	___flmul@temp+1
  9407     020E  2A26               	goto	i1l2570
  9408     020F                     i1l2560:
  9409     020F  3001               	movlw	1
  9410     0210                     u155_25:
  9411     0210  35C2               	lslf	___flmul@prod,f
  9412     0211  0DC3               	rlf	___flmul@prod+1,f
  9413     0212  0DC4               	rlf	___flmul@prod+2,f
  9414     0213  0DC5               	rlf	___flmul@prod+3,f
  9415     0214  0B89               	decfsz	9,f
  9416     0215  2A10               	goto	u155_25
  9417     0216                     i1l2562:
  9418     0216  1FBF               	btfss	___flmul@grs+3,7
  9419     0217  2A19               	goto	u156_21
  9420     0218  2A1A               	goto	u156_20
  9421     0219                     u156_21:
  9422     0219  2A1B               	goto	i1l2566
  9423     021A                     u156_20:
  9424     021A                     i1l2564:
  9425     021A  1442               	bsf	___flmul@prod,0
  9426     021B                     i1l2566:
  9427     021B  3001               	movlw	1
  9428     021C                     u157_25:
  9429     021C  35BC               	lslf	___flmul@grs,f
  9430     021D  0DBD               	rlf	___flmul@grs+1,f
  9431     021E  0DBE               	rlf	___flmul@grs+2,f
  9432     021F  0DBF               	rlf	___flmul@grs+3,f
  9433     0220  0B89               	decfsz	9,f
  9434     0221  2A1C               	goto	u157_25
  9435     0222                     i1l2568:
  9436     0222  30FF               	movlw	255
  9437     0223  07C6               	addwf	___flmul@temp,f
  9438     0224  30FF               	movlw	255
  9439     0225  3DC7               	addwfc	___flmul@temp+1,f
  9440     0226                     i1l2570:
  9441     0226  1FC4               	btfss	___flmul@prod+2,7
  9442     0227  2A29               	goto	u158_21
  9443     0228  2A2A               	goto	u158_20
  9444     0229                     u158_21:
  9445     0229  2A0F               	goto	i1l2560
  9446     022A                     u158_20:
  9447     022A                     i1l2572:
  9448     022A  01C0               	clrf	___flmul@aexp
  9449     022B                     i1l2574:
  9450     022B  1FBF               	btfss	___flmul@grs+3,7
  9451     022C  2A2E               	goto	u159_21
  9452     022D  2A2F               	goto	u159_20
  9453     022E                     u159_21:
  9454     022E  2A4B               	goto	i1l2582
  9455     022F                     u159_20:
  9456     022F                     i1l2576:
  9457     022F  30FF               	movlw	255
  9458     0230  053C               	andwf	___flmul@grs,w
  9459     0231  00B6               	movwf	??___flmul
  9460     0232  30FF               	movlw	255
  9461     0233  053D               	andwf	___flmul@grs+1,w
  9462     0234  00B7               	movwf	??___flmul+1
  9463     0235  30FF               	movlw	255
  9464     0236  053E               	andwf	___flmul@grs+2,w
  9465     0237  00B8               	movwf	??___flmul+2
  9466     0238  307F               	movlw	127
  9467     0239  053F               	andwf	___flmul@grs+3,w
  9468     023A  00B9               	movwf	??___flmul+3
  9469     023B  0839               	movf	??___flmul+3,w
  9470     023C  0438               	iorwf	??___flmul+2,w
  9471     023D  0437               	iorwf	??___flmul+1,w
  9472     023E  0436               	iorwf	??___flmul,w
  9473     023F  1903               	skipnz
  9474     0240  2A42               	goto	u160_21
  9475     0241  2A43               	goto	u160_20
  9476     0242                     u160_21:
  9477     0242  2A46               	goto	i1l1399
  9478     0243                     u160_20:
  9479     0243                     i1l2578:
  9480     0243  01C0               	clrf	___flmul@aexp
  9481     0244  0AC0               	incf	___flmul@aexp,f
  9482     0245  2A4B               	goto	i1l2582
  9483     0246                     i1l1399:
  9484     0246  1C42               	btfss	___flmul@prod,0
  9485     0247  2A49               	goto	u161_21
  9486     0248  2A4A               	goto	u161_20
  9487     0249                     u161_21:
  9488     0249  2A4B               	goto	i1l2582
  9489     024A                     u161_20:
  9490     024A  2A43               	goto	i1l2578
  9491     024B                     i1l2582:
  9492     024B  0840               	movf	___flmul@aexp,w
  9493     024C  1903               	btfsc	3,2
  9494     024D  2A4F               	goto	u162_21
  9495     024E  2A50               	goto	u162_20
  9496     024F                     u162_21:
  9497     024F  2A78               	goto	i1l2592
  9498     0250                     u162_20:
  9499     0250                     i1l2584:
  9500     0250  3001               	movlw	1
  9501     0251  07C2               	addwf	___flmul@prod,f
  9502     0252  3000               	movlw	0
  9503     0253  3DC3               	addwfc	___flmul@prod+1,f
  9504     0254  3000               	movlw	0
  9505     0255  3DC4               	addwfc	___flmul@prod+2,f
  9506     0256  3000               	movlw	0
  9507     0257  3DC5               	addwfc	___flmul@prod+3,f
  9508     0258                     i1l2586:
  9509     0258  1C45               	btfss	___flmul@prod+3,0
  9510     0259  2A5B               	goto	u163_21
  9511     025A  2A5C               	goto	u163_20
  9512     025B                     u163_21:
  9513     025B  2A78               	goto	i1l2592
  9514     025C                     u163_20:
  9515     025C                     i1l2588:
  9516     025C  0842               	movf	___flmul@prod,w
  9517     025D  00B6               	movwf	??___flmul
  9518     025E  0843               	movf	___flmul@prod+1,w
  9519     025F  00B7               	movwf	??___flmul+1
  9520     0260  0844               	movf	___flmul@prod+2,w
  9521     0261  00B8               	movwf	??___flmul+2
  9522     0262  0845               	movf	___flmul@prod+3,w
  9523     0263  00B9               	movwf	??___flmul+3
  9524     0264  3001               	movlw	1
  9525     0265  00BA               	movwf	??___flmul+4
  9526     0266                     u164_25:
  9527     0266  37B9               	asrf	??___flmul+3,f
  9528     0267  0CB8               	rrf	??___flmul+2,f
  9529     0268  0CB7               	rrf	??___flmul+1,f
  9530     0269  0CB6               	rrf	??___flmul,f
  9531     026A                     u164_20:
  9532     026A  0BBA               	decfsz	??___flmul+4,f
  9533     026B  2A66               	goto	u164_25
  9534     026C  0839               	movf	??___flmul+3,w
  9535     026D  00C5               	movwf	___flmul@prod+3
  9536     026E  0838               	movf	??___flmul+2,w
  9537     026F  00C4               	movwf	___flmul@prod+2
  9538     0270  0837               	movf	??___flmul+1,w
  9539     0271  00C3               	movwf	___flmul@prod+1
  9540     0272  0836               	movf	??___flmul,w
  9541     0273  00C2               	movwf	___flmul@prod
  9542     0274                     i1l2590:
  9543     0274  3001               	movlw	1
  9544     0275  07C6               	addwf	___flmul@temp,f
  9545     0276  3000               	movlw	0
  9546     0277  3DC7               	addwfc	___flmul@temp+1,f
  9547     0278                     i1l2592:
  9548     0278  0847               	movf	___flmul@temp+1,w
  9549     0279  3A80               	xorlw	128
  9550     027A  00B6               	movwf	??___flmul
  9551     027B  3080               	movlw	128
  9552     027C  0236               	subwf	??___flmul,w
  9553     027D  1D03               	skipz
  9554     027E  2A81               	goto	u165_25
  9555     027F  30FF               	movlw	255
  9556     0280  0246               	subwf	___flmul@temp,w
  9557     0281                     u165_25:
  9558     0281  1C03               	skipc
  9559     0282  2A84               	goto	u165_21
  9560     0283  2A85               	goto	u165_20
  9561     0284                     u165_21:
  9562     0284  2A8F               	goto	i1l2596
  9563     0285                     u165_20:
  9564     0285                     i1l2594:
  9565     0285  307F               	movlw	127
  9566     0286  0020               	movlb	0	; select bank0
  9567     0287  00C5               	movwf	___flmul@prod+3
  9568     0288  3080               	movlw	128
  9569     0289  00C4               	movwf	___flmul@prod+2
  9570     028A  3000               	movlw	0
  9571     028B  00C3               	movwf	___flmul@prod+1
  9572     028C  3000               	movlw	0
  9573     028D  00C2               	movwf	___flmul@prod
  9574     028E  2ABA               	goto	i1l1405
  9575     028F                     i1l2596:
  9576     028F  0020               	movlb	0	; select bank0
  9577     0290  0847               	movf	___flmul@temp+1,w
  9578     0291  3A80               	xorlw	128
  9579     0292  00B6               	movwf	??___flmul
  9580     0293  3080               	movlw	128
  9581     0294  0236               	subwf	??___flmul,w
  9582     0295  1D03               	skipz
  9583     0296  2A99               	goto	u166_25
  9584     0297  3001               	movlw	1
  9585     0298  0246               	subwf	___flmul@temp,w
  9586     0299                     u166_25:
  9587     0299  1803               	skipnc
  9588     029A  2A9C               	goto	u166_21
  9589     029B  2A9D               	goto	u166_20
  9590     029C                     u166_21:
  9591     029C  2AA8               	goto	i1l2602
  9592     029D                     u166_20:
  9593     029D                     i1l2598:
  9594     029D  3000               	movlw	0
  9595     029E  0020               	movlb	0	; select bank0
  9596     029F  00C5               	movwf	___flmul@prod+3
  9597     02A0  3000               	movlw	0
  9598     02A1  00C4               	movwf	___flmul@prod+2
  9599     02A2  3000               	movlw	0
  9600     02A3  00C3               	movwf	___flmul@prod+1
  9601     02A4  3000               	movlw	0
  9602     02A5  00C2               	movwf	___flmul@prod
  9603     02A6                     i1l2600:
  9604     02A6  01BB               	clrf	___flmul@sign
  9605     02A7  2ABA               	goto	i1l1405
  9606     02A8                     i1l2602:
  9607     02A8  0020               	movlb	0	; select bank0
  9608     02A9  0846               	movf	___flmul@temp,w
  9609     02AA  00C1               	movwf	___flmul@bexp
  9610     02AB  30FF               	movlw	255
  9611     02AC  05C2               	andwf	___flmul@prod,f
  9612     02AD  30FF               	movlw	255
  9613     02AE  05C3               	andwf	___flmul@prod+1,f
  9614     02AF  307F               	movlw	127
  9615     02B0  05C4               	andwf	___flmul@prod+2,f
  9616     02B1  3000               	movlw	0
  9617     02B2  05C5               	andwf	___flmul@prod+3,f
  9618     02B3                     i1l2604:
  9619     02B3  1C41               	btfss	___flmul@bexp,0
  9620     02B4  2AB6               	goto	u167_21
  9621     02B5  2AB7               	goto	u167_20
  9622     02B6                     u167_21:
  9623     02B6  2AB8               	goto	i1l2608
  9624     02B7                     u167_20:
  9625     02B7                     i1l2606:
  9626     02B7  17C4               	bsf	___flmul@prod+2,7
  9627     02B8                     i1l2608:
  9628     02B8  3641               	lsrf	___flmul@bexp,w
  9629     02B9  00C5               	movwf	___flmul@prod+3
  9630     02BA                     i1l1405:
  9631     02BA  083B               	movf	___flmul@sign,w
  9632     02BB  00B6               	movwf	??___flmul
  9633     02BC  0836               	movf	??___flmul,w
  9634     02BD  04C5               	iorwf	___flmul@prod+3,f
  9635     02BE                     i1l2610:
  9636     02BE  0845               	movf	___flmul@prod+3,w
  9637     02BF  00B1               	movwf	?___flmul+3
  9638     02C0  0844               	movf	___flmul@prod+2,w
  9639     02C1  00B0               	movwf	?___flmul+2
  9640     02C2  0843               	movf	___flmul@prod+1,w
  9641     02C3  00AF               	movwf	?___flmul+1
  9642     02C4  0842               	movf	___flmul@prod,w
  9643     02C5  00AE               	movwf	?___flmul
  9644     02C6                     i1l1393:
  9645     02C6  0008               	return
  9646     02C7                     __end_of___flmul:
  9647                           
  9648                           	psect	text59
  9649     0EEB                     __ptext59:	
  9650 ;; *************** function __Umul8_16 *****************
  9651 ;; Defined at:
  9652 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul8_16.c"
  9653 ;; Parameters:    Size  Location     Type
  9654 ;;  multiplier      1    wreg     unsigned char 
  9655 ;;  multiplicand    1    0[COMMON] unsigned char 
  9656 ;; Auto vars:     Size  Location     Type
  9657 ;;  multiplier      1    8[COMMON] unsigned char 
  9658 ;;  word_mpld       2    6[COMMON] unsigned short 
  9659 ;;  product         2    4[COMMON] unsigned short 
  9660 ;; Return value:  Size  Location     Type
  9661 ;;                  2    0[COMMON] unsigned int 
  9662 ;; Registers used:
  9663 ;;		wreg, status,2, status,0
  9664 ;; Tracked objects:
  9665 ;;		On entry : 0/0
  9666 ;;		On exit  : 0/0
  9667 ;;		Unchanged: 0/0
  9668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9669 ;;      Params:         2       0       0       0       0       0
  9670 ;;      Locals:         5       0       0       0       0       0
  9671 ;;      Temps:          2       0       0       0       0       0
  9672 ;;      Totals:         9       0       0       0       0       0
  9673 ;;Total ram usage:        9 bytes
  9674 ;; Hardware stack levels used: 1
  9675 ;; This function calls:
  9676 ;;		Nothing
  9677 ;; This function is called by:
  9678 ;;		___flmul
  9679 ;; This function uses a non-reentrant model
  9680 ;;
  9681                           
  9682     0EEB                     __Umul8_16:	
  9683                           ;psect for function __Umul8_16
  9684                           
  9685                           
  9686                           ;incstack = 0
  9687                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  9688                           ;__Umul8_16@multiplier stored from wreg
  9689     0EEB  00F8               	movwf	__Umul8_16@multiplier
  9690     0EEC                     i1l2406:
  9691     0EEC  01F4               	clrf	__Umul8_16@product
  9692     0EED  01F5               	clrf	__Umul8_16@product+1
  9693     0EEE                     i1l2408:
  9694     0EEE  0870               	movf	__Umul8_16@multiplicand,w
  9695     0EEF  00F2               	movwf	??__Umul8_16
  9696     0EF0  01F3               	clrf	??__Umul8_16+1
  9697     0EF1  0872               	movf	??__Umul8_16,w
  9698     0EF2  00F6               	movwf	__Umul8_16@word_mpld
  9699     0EF3  0873               	movf	??__Umul8_16+1,w
  9700     0EF4  00F7               	movwf	__Umul8_16@word_mpld+1
  9701     0EF5                     i1l2410:
  9702     0EF5  1C78               	btfss	__Umul8_16@multiplier,0
  9703     0EF6  2EF8               	goto	u126_21
  9704     0EF7  2EF9               	goto	u126_20
  9705     0EF8                     u126_21:
  9706     0EF8  2EFD               	goto	i1l1412
  9707     0EF9                     u126_20:
  9708     0EF9                     i1l2412:
  9709     0EF9  0876               	movf	__Umul8_16@word_mpld,w
  9710     0EFA  07F4               	addwf	__Umul8_16@product,f
  9711     0EFB  0877               	movf	__Umul8_16@word_mpld+1,w
  9712     0EFC  3DF5               	addwfc	__Umul8_16@product+1,f
  9713     0EFD                     i1l1412:
  9714     0EFD  3001               	movlw	1
  9715     0EFE                     u127_25:
  9716     0EFE  35F6               	lslf	__Umul8_16@word_mpld,f
  9717     0EFF  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  9718     0F00  0B89               	decfsz	9,f
  9719     0F01  2EFE               	goto	u127_25
  9720     0F02  1003               	clrc
  9721     0F03  0CF8               	rrf	__Umul8_16@multiplier,f
  9722     0F04                     i1l2414:
  9723     0F04  0878               	movf	__Umul8_16@multiplier,w
  9724     0F05  1D03               	btfss	3,2
  9725     0F06  2F08               	goto	u128_21
  9726     0F07  2F09               	goto	u128_20
  9727     0F08                     u128_21:
  9728     0F08  2EF5               	goto	i1l2410
  9729     0F09                     u128_20:
  9730     0F09                     i1l2416:
  9731     0F09  0875               	movf	__Umul8_16@product+1,w
  9732     0F0A  00F1               	movwf	?__Umul8_16+1
  9733     0F0B  0874               	movf	__Umul8_16@product,w
  9734     0F0C  00F0               	movwf	?__Umul8_16
  9735     0F0D                     i1l1414:
  9736     0F0D  0008               	return
  9737     0F0E                     __end_of__Umul8_16:
  9738                           
  9739                           	psect	text60
  9740     0DEB                     __ptext60:	
  9741 ;; *************** function _TMR1_ReadTimer *****************
  9742 ;; Defined at:
  9743 ;;		line 109 in file "mcc_generated_files/tmr1.c"
  9744 ;; Parameters:    Size  Location     Type
  9745 ;;		None
  9746 ;; Auto vars:     Size  Location     Type
  9747 ;;  readVal         2    7[COMMON] unsigned short 
  9748 ;;  readValLow      1   10[COMMON] unsigned char 
  9749 ;;  readValHigh     1    9[COMMON] unsigned char 
  9750 ;; Return value:  Size  Location     Type
  9751 ;;                  2    0[COMMON] unsigned short 
  9752 ;; Registers used:
  9753 ;;		wreg
  9754 ;; Tracked objects:
  9755 ;;		On entry : 0/0
  9756 ;;		On exit  : 0/0
  9757 ;;		Unchanged: 0/0
  9758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9759 ;;      Params:         2       0       0       0       0       0
  9760 ;;      Locals:         4       0       0       0       0       0
  9761 ;;      Temps:          5       0       0       0       0       0
  9762 ;;      Totals:        11       0       0       0       0       0
  9763 ;;Total ram usage:       11 bytes
  9764 ;; Hardware stack levels used: 1
  9765 ;; This function calls:
  9766 ;;		Nothing
  9767 ;; This function is called by:
  9768 ;;		_mede_height
  9769 ;; This function uses a non-reentrant model
  9770 ;;
  9771                           
  9772     0DEB                     _TMR1_ReadTimer:	
  9773                           ;psect for function _TMR1_ReadTimer
  9774                           
  9775     0DEB                     i1l2644:	
  9776                           ;incstack = 0
  9777                           ; Regs used in _TMR1_ReadTimer: [wreg]
  9778                           
  9779                           
  9780                           ;mcc_generated_files/tmr1.c: 111:     uint16_t readVal;;mcc_generated_files/tmr1.c: 112:
      +                               uint8_t readValHigh;;mcc_generated_files/tmr1.c: 113:     uint8_t readValLow;;mcc_g
      +                          enerated_files/tmr1.c: 116:     readValLow = TMR1L;
  9781     0DEB  0020               	movlb	0	; select bank0
  9782     0DEC  0816               	movf	22,w	;volatile
  9783     0DED  00FA               	movwf	TMR1_ReadTimer@readValLow
  9784                           
  9785                           ;mcc_generated_files/tmr1.c: 117:     readValHigh = TMR1H;
  9786     0DEE  0817               	movf	23,w	;volatile
  9787     0DEF  00F9               	movwf	TMR1_ReadTimer@readValHigh
  9788                           
  9789                           ;mcc_generated_files/tmr1.c: 119:     readVal = ((uint16_t)readValHigh << 8) | readValLo
      +                          w;
  9790     0DF0  087A               	movf	TMR1_ReadTimer@readValLow,w
  9791     0DF1  00F2               	movwf	??_TMR1_ReadTimer
  9792     0DF2  01F3               	clrf	??_TMR1_ReadTimer+1
  9793     0DF3  0879               	movf	TMR1_ReadTimer@readValHigh,w
  9794     0DF4  00F4               	movwf	??_TMR1_ReadTimer+2
  9795     0DF5  01F5               	clrf	??_TMR1_ReadTimer+3
  9796     0DF6  0874               	movf	??_TMR1_ReadTimer+2,w
  9797     0DF7  00F5               	movwf	??_TMR1_ReadTimer+3
  9798     0DF8  01F4               	clrf	??_TMR1_ReadTimer+2
  9799     0DF9  0872               	movf	??_TMR1_ReadTimer,w
  9800     0DFA  0474               	iorwf	??_TMR1_ReadTimer+2,w
  9801     0DFB  00F7               	movwf	TMR1_ReadTimer@readVal
  9802     0DFC  0873               	movf	??_TMR1_ReadTimer+1,w
  9803     0DFD  0475               	iorwf	??_TMR1_ReadTimer+3,w
  9804     0DFE  00F8               	movwf	TMR1_ReadTimer@readVal+1
  9805                           
  9806                           ;mcc_generated_files/tmr1.c: 121:     return readVal;
  9807     0DFF  0878               	movf	TMR1_ReadTimer@readVal+1,w
  9808     0E00  00F1               	movwf	?_TMR1_ReadTimer+1
  9809     0E01  0877               	movf	TMR1_ReadTimer@readVal,w
  9810     0E02  00F0               	movwf	?_TMR1_ReadTimer
  9811     0E03                     i1l531:
  9812     0E03  0008               	return
  9813     0E04                     __end_of_TMR1_ReadTimer:
  9814                           
  9815                           	psect	text61
  9816     0D5B                     __ptext61:	
  9817 ;; *************** function _TMR0_ISR *****************
  9818 ;; Defined at:
  9819 ;;		line 108 in file "mcc_generated_files/tmr0.c"
  9820 ;; Parameters:    Size  Location     Type
  9821 ;;		None
  9822 ;; Auto vars:     Size  Location     Type
  9823 ;;		None
  9824 ;; Return value:  Size  Location     Type
  9825 ;;                  1    wreg      void 
  9826 ;; Registers used:
  9827 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9828 ;; Tracked objects:
  9829 ;;		On entry : 0/0
  9830 ;;		On exit  : 0/0
  9831 ;;		Unchanged: 0/0
  9832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9833 ;;      Params:         0       0       0       0       0       0
  9834 ;;      Locals:         0       0       0       0       0       0
  9835 ;;      Temps:          0       0       0       0       0       0
  9836 ;;      Totals:         0       0       0       0       0       0
  9837 ;;Total ram usage:        0 bytes
  9838 ;; Hardware stack levels used: 1
  9839 ;; Hardware stack levels required when called: 3
  9840 ;; This function calls:
  9841 ;;		NULL
  9842 ;;		_TMR0_DefaultInterruptHandler
  9843 ;;		_end_Rx
  9844 ;; This function is called by:
  9845 ;;		_INTERRUPT_InterruptManager
  9846 ;; This function uses a non-reentrant model
  9847 ;;
  9848                           
  9849     0D5B                     _TMR0_ISR:	
  9850                           ;psect for function _TMR0_ISR
  9851                           
  9852     0D5B                     i1l3090:	
  9853                           ;incstack = 0
  9854                           ; Regs used in _TMR0_ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9855                           
  9856                           
  9857                           ;mcc_generated_files/tmr0.c: 112:     INTCONbits.TMR0IF = 0;
  9858     0D5B  110B               	bcf	11,2	;volatile
  9859     0D5C                     i1l3092:
  9860                           
  9861                           ;mcc_generated_files/tmr0.c: 114:     TMR0 = timer0ReloadVal;
  9862     0D5C  0021               	movlb	1	; select bank1
  9863     0D5D  083E               	movf	_timer0ReloadVal^(0+128),w	;volatile
  9864     0D5E  0020               	movlb	0	; select bank0
  9865     0D5F  0095               	movwf	21	;volatile
  9866     0D60                     i1l3094:
  9867                           
  9868                           ;mcc_generated_files/tmr0.c: 116:     if(TMR0_InterruptHandler)
  9869     0D60  0021               	movlb	1	; select bank1
  9870     0D61  085B               	movf	_TMR0_InterruptHandler^(0+128),w
  9871     0D62  045C               	iorwf	(_TMR0_InterruptHandler+1)^(0+128),w
  9872     0D63  1903               	btfsc	3,2
  9873     0D64  2D66               	goto	u218_21
  9874     0D65  2D67               	goto	u218_20
  9875     0D66                     u218_21:
  9876     0D66  2D6C               	goto	i1l384
  9877     0D67                     u218_20:
  9878     0D67                     i1l3096:
  9879                           
  9880                           ;mcc_generated_files/tmr0.c: 117:     {;mcc_generated_files/tmr0.c: 118:         TMR0_In
      +                          terruptHandler();
  9881     0D67  085C               	movf	(_TMR0_InterruptHandler+1)^(0+128),w
  9882     0D68  008A               	movwf	10
  9883     0D69  085B               	movf	_TMR0_InterruptHandler^(0+128),w
  9884     0D6A  000A               	callw
  9885     0D6B  318D               	pagesel	$
  9886     0D6C                     i1l384:
  9887     0D6C  0008               	return
  9888     0D6D                     __end_of_TMR0_ISR:
  9889                           
  9890                           	psect	text62
  9891     0C7D                     __ptext62:	
  9892 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  9893 ;; Defined at:
  9894 ;;		line 129 in file "mcc_generated_files/tmr0.c"
  9895 ;; Parameters:    Size  Location     Type
  9896 ;;		None
  9897 ;; Auto vars:     Size  Location     Type
  9898 ;;		None
  9899 ;; Return value:  Size  Location     Type
  9900 ;;                  1    wreg      void 
  9901 ;; Registers used:
  9902 ;;		None
  9903 ;; Tracked objects:
  9904 ;;		On entry : 0/0
  9905 ;;		On exit  : 0/0
  9906 ;;		Unchanged: 0/0
  9907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9908 ;;      Params:         0       0       0       0       0       0
  9909 ;;      Locals:         0       0       0       0       0       0
  9910 ;;      Temps:          0       0       0       0       0       0
  9911 ;;      Totals:         0       0       0       0       0       0
  9912 ;;Total ram usage:        0 bytes
  9913 ;; Hardware stack levels used: 1
  9914 ;; This function calls:
  9915 ;;		Nothing
  9916 ;; This function is called by:
  9917 ;;		_TMR0_Initialize
  9918 ;;		_TMR0_ISR
  9919 ;; This function uses a non-reentrant model
  9920 ;;
  9921                           
  9922     0C7D                     _TMR0_DefaultInterruptHandler:	
  9923                           ;psect for function _TMR0_DefaultInterruptHandler
  9924                           
  9925     0C7D                     i1l390:	
  9926                           ;incstack = 0
  9927                           ; Regs used in _TMR0_DefaultInterruptHandler: []
  9928                           
  9929     0C7D  0008               	return
  9930     0C7E                     __end_of_TMR0_DefaultInterruptHandler:
  9931                           
  9932                           	psect	text63
  9933     0DA7                     __ptext63:	
  9934 ;; *************** function _end_Rx *****************
  9935 ;; Defined at:
  9936 ;;		line 168 in file "main.c"
  9937 ;; Parameters:    Size  Location     Type
  9938 ;;		None
  9939 ;; Auto vars:     Size  Location     Type
  9940 ;;		None
  9941 ;; Return value:  Size  Location     Type
  9942 ;;                  1    wreg      void 
  9943 ;; Registers used:
  9944 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9945 ;; Tracked objects:
  9946 ;;		On entry : 0/0
  9947 ;;		On exit  : 0/0
  9948 ;;		Unchanged: 0/0
  9949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  9950 ;;      Params:         0       0       0       0       0       0
  9951 ;;      Locals:         0       0       0       0       0       0
  9952 ;;      Temps:          1       0       0       0       0       0
  9953 ;;      Totals:         1       0       0       0       0       0
  9954 ;;Total ram usage:        1 bytes
  9955 ;; Hardware stack levels used: 1
  9956 ;; Hardware stack levels required when called: 2
  9957 ;; This function calls:
  9958 ;;		_analisa_Rx
  9959 ;; This function is called by:
  9960 ;;		_main
  9961 ;;		_TMR0_ISR
  9962 ;; This function uses a non-reentrant model
  9963 ;;
  9964                           
  9965     0DA7                     _end_Rx:	
  9966                           ;psect for function _end_Rx
  9967                           
  9968     0DA7                     i1l3036:	
  9969                           ;incstack = 0
  9970                           ; Regs used in _end_Rx: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9971                           
  9972                           
  9973                           ;main.c: 169:     if(count_40ms >= 10){
  9974     0DA7  300A               	movlw	10
  9975     0DA8  0020               	movlb	0	; select bank0
  9976     0DA9  026C               	subwf	_count_40ms,w
  9977     0DAA  1C03               	skipc
  9978     0DAB  2DAD               	goto	u212_21
  9979     0DAC  2DAE               	goto	u212_20
  9980     0DAD                     u212_21:
  9981     0DAD  2DB8               	goto	i1l3044
  9982     0DAE                     u212_20:
  9983     0DAE                     i1l3038:
  9984                           
  9985                           ;main.c: 170:         count_40ms = 0;
  9986     0DAE  01EC               	clrf	_count_40ms
  9987     0DAF                     i1l3040:
  9988                           
  9989                           ;main.c: 171:         if(Rx_ctrl == 1){
  9990     0DAF  036F               	decf	_Rx_ctrl,w
  9991     0DB0  1D03               	btfss	3,2
  9992     0DB1  2DB3               	goto	u213_21
  9993     0DB2  2DB4               	goto	u213_20
  9994     0DB3                     u213_21:
  9995     0DB3  2DBC               	goto	i1l725
  9996     0DB4                     u213_20:
  9997     0DB4                     i1l3042:
  9998                           
  9999                           ;main.c: 172:             analisa_Rx();
 10000     0DB4  3184  240C  318D   	fcall	_analisa_Rx
 10001     0DB7  2DBC               	goto	i1l725
 10002     0DB8                     i1l3044:
 10003                           
 10004                           ;main.c: 176:         count_40ms++;
 10005     0DB8  3001               	movlw	1
 10006     0DB9  00F6               	movwf	??_end_Rx
 10007     0DBA  0876               	movf	??_end_Rx,w
 10008     0DBB  07EC               	addwf	_count_40ms,f
 10009     0DBC                     i1l725:
 10010     0DBC  0008               	return
 10011     0DBD                     __end_of_end_Rx:
 10012                           
 10013                           	psect	text64
 10014     040C                     __ptext64:	
 10015 ;; *************** function _analisa_Rx *****************
 10016 ;; Defined at:
 10017 ;;		line 90 in file "main.c"
 10018 ;; Parameters:    Size  Location     Type
 10019 ;;		None
 10020 ;; Auto vars:     Size  Location     Type
 10021 ;;		None
 10022 ;; Return value:  Size  Location     Type
 10023 ;;                  1    wreg      void 
 10024 ;; Registers used:
 10025 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10026 ;; Tracked objects:
 10027 ;;		On entry : 0/0
 10028 ;;		On exit  : 0/0
 10029 ;;		Unchanged: 0/0
 10030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10031 ;;      Params:         0       0       0       0       0       0
 10032 ;;      Locals:         0       0       0       0       0       0
 10033 ;;      Temps:          2       0       0       0       0       0
 10034 ;;      Totals:         2       0       0       0       0       0
 10035 ;;Total ram usage:        2 bytes
 10036 ;; Hardware stack levels used: 1
 10037 ;; Hardware stack levels required when called: 1
 10038 ;; This function calls:
 10039 ;;		i1_EPWM1_LoadDutyValue
 10040 ;; This function is called by:
 10041 ;;		_end_Rx
 10042 ;; This function uses a non-reentrant model
 10043 ;;
 10044                           
 10045     040C                     _analisa_Rx:	
 10046                           ;psect for function _analisa_Rx
 10047                           
 10048     040C                     i1l2658:	
 10049                           ;incstack = 0
 10050                           ; Regs used in _analisa_Rx: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10051                           
 10052                           
 10053                           ;main.c: 91:     Rx_ctrl = 0;
 10054     040C  0020               	movlb	0	; select bank0
 10055     040D  01EF               	clrf	_Rx_ctrl
 10056                           
 10057                           ;main.c: 92:     switch(bufferRx[0]){
 10058     040E  2C91               	goto	i1l2716
 10059     040F                     i1l2660:
 10060                           
 10061                           ;main.c: 94:             if(countRx==7){
 10062     040F  3007               	movlw	7
 10063     0410  066D               	xorwf	_countRx,w
 10064     0411  1D03               	btfss	3,2
 10065     0412  2C14               	goto	u173_21
 10066     0413  2C15               	goto	u173_20
 10067     0414                     u173_21:
 10068     0414  2C32               	goto	i1l2666
 10069     0415                     u173_20:
 10070     0415                     i1l2662:
 10071                           
 10072                           ;main.c: 95:                 func_mode = bufferRx[0];
 10073     0415  0854               	movf	_bufferRx,w
 10074     0416  00EE               	movwf	_func_mode
 10075                           
 10076                           ;main.c: 96:                 vRx.vH = bufferRx[3];
 10077     0417  0857               	movf	_bufferRx+3,w
 10078     0418  00E4               	movwf	_vRx
 10079                           
 10080                           ;main.c: 97:                 vRx.vL = bufferRx[4];
 10081     0419  0858               	movf	_bufferRx+4,w
 10082     041A  00E5               	movwf	_vRx+1
 10083                           
 10084                           ;main.c: 98:                 sp_position = vRx.v;
 10085     041B  0865               	movf	_vRx+1,w
 10086     041C  0021               	movlb	1	; select bank1
 10087     041D  00A9               	movwf	(_sp_position+1)^(0+128)
 10088     041E  0020               	movlb	0	; select bank0
 10089     041F  0864               	movf	_vRx,w
 10090     0420  0021               	movlb	1	; select bank1
 10091     0421  00A8               	movwf	_sp_position^(0+128)
 10092                           
 10093                           ;main.c: 99:                 vRx.vH = bufferRx[5];
 10094     0422  0020               	movlb	0	; select bank0
 10095     0423  0859               	movf	_bufferRx+5,w
 10096     0424  00E4               	movwf	_vRx
 10097                           
 10098                           ;main.c: 100:                 vRx.vL = bufferRx[6];
 10099     0425  085A               	movf	_bufferRx+6,w
 10100     0426  00E5               	movwf	_vRx+1
 10101                           
 10102                           ;main.c: 101:                 dc = vRx.v;
 10103     0427  0865               	movf	_vRx+1,w
 10104     0428  00E1               	movwf	_dc+1
 10105     0429  0864               	movf	_vRx,w
 10106     042A  00E0               	movwf	_dc
 10107     042B                     i1l2664:
 10108                           
 10109                           ;main.c: 102:                 EPWM1_LoadDutyValue(dc);
 10110     042B  0861               	movf	_dc+1,w
 10111     042C  00F1               	movwf	i1EPWM1_LoadDutyValue@dutyValue+1
 10112     042D  0860               	movf	_dc,w
 10113     042E  00F0               	movwf	i1EPWM1_LoadDutyValue@dutyValue
 10114     042F  318D  25BD  3184   	fcall	i1_EPWM1_LoadDutyValue
 10115     0432                     i1l2666:
 10116                           
 10117                           ;main.c: 104:             countRx = 0;
 10118     0432  0020               	movlb	0	; select bank0
 10119     0433  01ED               	clrf	_countRx
 10120                           
 10121                           ;main.c: 105:             break;
 10122     0434  2C9F               	goto	i1l716
 10123     0435                     i1l2668:
 10124                           
 10125                           ;main.c: 107:             if(countRx==7){
 10126     0435  3007               	movlw	7
 10127     0436  066D               	xorwf	_countRx,w
 10128     0437  1D03               	btfss	3,2
 10129     0438  2C3A               	goto	u174_21
 10130     0439  2C3B               	goto	u174_20
 10131     043A                     u174_21:
 10132     043A  2C32               	goto	i1l2666
 10133     043B                     u174_20:
 10134     043B                     i1l2670:
 10135                           
 10136                           ;main.c: 108:                 func_mode = bufferRx[0];
 10137     043B  0854               	movf	_bufferRx,w
 10138     043C  00EE               	movwf	_func_mode
 10139     043D                     i1l2672:
 10140                           
 10141                           ;main.c: 109:                 controlchoice = 1;
 10142     043D  0021               	movlb	1	; select bank1
 10143     043E  01EF               	clrf	_controlchoice^(0+128)
 10144     043F  0AEF               	incf	_controlchoice^(0+128),f
 10145                           
 10146                           ;main.c: 110:                 vRx.vH = bufferRx[1];
 10147     0440  0020               	movlb	0	; select bank0
 10148     0441  0855               	movf	_bufferRx+1,w
 10149     0442  00E4               	movwf	_vRx
 10150                           
 10151                           ;main.c: 111:                 vRx.vL = bufferRx[2];
 10152     0443  0856               	movf	_bufferRx+2,w
 10153     0444  00E5               	movwf	_vRx+1
 10154                           
 10155                           ;main.c: 112:                 sp_height = vRx.v;
 10156     0445  0865               	movf	_vRx+1,w
 10157     0446  00E3               	movwf	_sp_height+1
 10158     0447  0864               	movf	_vRx,w
 10159     0448  00E2               	movwf	_sp_height
 10160     0449                     i1l2674:
 10161                           
 10162                           ;main.c: 113:                 ballset = vRx.v / 2;
 10163     0449  0865               	movf	_vRx+1,w
 10164     044A  00F5               	movwf	??_analisa_Rx+1
 10165     044B  0864               	movf	_vRx,w
 10166     044C  00F4               	movwf	??_analisa_Rx
 10167     044D  36F5               	lsrf	??_analisa_Rx+1,f
 10168     044E  0CF4               	rrf	??_analisa_Rx,f
 10169     044F  0874               	movf	??_analisa_Rx,w
 10170     0450  0021               	movlb	1	; select bank1
 10171     0451  00B0               	movwf	_ballset^(0+128)
 10172     0452  0875               	movf	??_analisa_Rx+1,w
 10173     0453  00B1               	movwf	(_ballset+1)^(0+128)
 10174     0454                     i1l2676:
 10175                           
 10176                           ;main.c: 114:                 vRx.vH = bufferRx[3];
 10177     0454  0020               	movlb	0	; select bank0
 10178     0455  0857               	movf	_bufferRx+3,w
 10179     0456  00E4               	movwf	_vRx
 10180     0457                     i1l2678:
 10181                           
 10182                           ;main.c: 115:                 vRx.vL = bufferRx[4];
 10183     0457  0858               	movf	_bufferRx+4,w
 10184     0458  00E5               	movwf	_vRx+1
 10185     0459                     i1l2680:
 10186                           
 10187                           ;main.c: 116:                 sp_position = vRx.v;
 10188     0459  0865               	movf	_vRx+1,w
 10189     045A  0021               	movlb	1	; select bank1
 10190     045B  00A9               	movwf	(_sp_position+1)^(0+128)
 10191     045C  0020               	movlb	0	; select bank0
 10192     045D  0864               	movf	_vRx,w
 10193     045E  0021               	movlb	1	; select bank1
 10194     045F  00A8               	movwf	_sp_position^(0+128)
 10195     0460  2C32               	goto	i1l2666
 10196     0461                     i1l2684:
 10197                           
 10198                           ;main.c: 121:             if(countRx==7){
 10199     0461  3007               	movlw	7
 10200     0462  066D               	xorwf	_countRx,w
 10201     0463  1D03               	btfss	3,2
 10202     0464  2C66               	goto	u175_21
 10203     0465  2C67               	goto	u175_20
 10204     0466                     u175_21:
 10205     0466  2C32               	goto	i1l2666
 10206     0467                     u175_20:
 10207     0467                     i1l2686:
 10208                           
 10209                           ;main.c: 122:                 func_mode = bufferRx[0];
 10210     0467  0854               	movf	_bufferRx,w
 10211     0468  00EE               	movwf	_func_mode
 10212     0469                     i1l2688:
 10213                           
 10214                           ;main.c: 123:                 controlchoice = 0;
 10215     0469  0021               	movlb	1	; select bank1
 10216     046A  01EF               	clrf	_controlchoice^(0+128)
 10217     046B                     i1l2690:
 10218                           
 10219                           ;main.c: 124:                 vRx.vH = bufferRx[1];
 10220     046B  0020               	movlb	0	; select bank0
 10221     046C  0855               	movf	_bufferRx+1,w
 10222     046D  00E4               	movwf	_vRx
 10223     046E                     i1l2692:
 10224                           
 10225                           ;main.c: 125:                 vRx.vL = bufferRx[2];
 10226     046E  0856               	movf	_bufferRx+2,w
 10227     046F  00E5               	movwf	_vRx+1
 10228     0470                     i1l2694:
 10229                           
 10230                           ;main.c: 126:                 sp_height = vRx.v;
 10231     0470  0865               	movf	_vRx+1,w
 10232     0471  00E3               	movwf	_sp_height+1
 10233     0472  0864               	movf	_vRx,w
 10234     0473  00E2               	movwf	_sp_height
 10235     0474                     i1l2696:
 10236                           
 10237                           ;main.c: 127:                 ballset = vRx.v / 2;
 10238     0474  0865               	movf	_vRx+1,w
 10239     0475  00F5               	movwf	??_analisa_Rx+1
 10240     0476  0864               	movf	_vRx,w
 10241     0477  00F4               	movwf	??_analisa_Rx
 10242     0478  36F5               	lsrf	??_analisa_Rx+1,f
 10243     0479  0CF4               	rrf	??_analisa_Rx,f
 10244     047A  0874               	movf	??_analisa_Rx,w
 10245     047B  0021               	movlb	1	; select bank1
 10246     047C  00B0               	movwf	_ballset^(0+128)
 10247     047D  0875               	movf	??_analisa_Rx+1,w
 10248     047E  00B1               	movwf	(_ballset+1)^(0+128)
 10249     047F                     i1l2698:
 10250                           
 10251                           ;main.c: 128:                 vRx.vH = bufferRx[5];
 10252     047F  0020               	movlb	0	; select bank0
 10253     0480  0859               	movf	_bufferRx+5,w
 10254     0481  00E4               	movwf	_vRx
 10255     0482                     i1l2700:
 10256                           
 10257                           ;main.c: 129:                 vRx.vL = bufferRx[6];
 10258     0482  085A               	movf	_bufferRx+6,w
 10259     0483  00E5               	movwf	_vRx+1
 10260     0484                     i1l2702:
 10261                           
 10262                           ;main.c: 130:                 dc = vRx.v;
 10263     0484  0865               	movf	_vRx+1,w
 10264     0485  00E1               	movwf	_dc+1
 10265     0486  0864               	movf	_vRx,w
 10266     0487  00E0               	movwf	_dc
 10267     0488  2C2B               	goto	i1l2664
 10268     0489                     i1l2708:
 10269                           
 10270                           ;main.c: 136:             if(countRx==7){
 10271     0489  3007               	movlw	7
 10272     048A  066D               	xorwf	_countRx,w
 10273     048B  1D03               	btfss	3,2
 10274     048C  2C8E               	goto	u176_21
 10275     048D  2C8F               	goto	u176_20
 10276     048E                     u176_21:
 10277     048E  2C32               	goto	i1l2666
 10278     048F                     u176_20:
 10279     048F                     i1l2710:
 10280     048F  0001               	reset	;# 
 10281     0490  2C32               	goto	i1l2666
 10282     0491                     i1l2716:
 10283     0491  0854               	movf	_bufferRx,w
 10284                           
 10285                           ; Switch size 1, requested type "simple"
 10286                           ; Number of cases is 4, Range of values is 0 to 3
 10287                           ; switch strategies available:
 10288                           ; Name         Instructions Cycles
 10289                           ; simple_byte           13     7 (average)
 10290                           ; direct_byte           14     6 (fixed)
 10291                           ; jumptable            260     6 (fixed)
 10292                           ;	Chosen strategy is simple_byte
 10293     0492  3A00               	xorlw	0	; case 0
 10294     0493  1903               	skipnz
 10295     0494  2C0F               	goto	i1l2660
 10296     0495  3A01               	xorlw	1	; case 1
 10297     0496  1903               	skipnz
 10298     0497  2C35               	goto	i1l2668
 10299     0498  3A03               	xorlw	3	; case 2
 10300     0499  1903               	skipnz
 10301     049A  2C61               	goto	i1l2684
 10302     049B  3A01               	xorlw	1	; case 3
 10303     049C  1903               	skipnz
 10304     049D  2C89               	goto	i1l2708
 10305     049E  2C32               	goto	i1l2666
 10306     049F                     i1l716:
 10307     049F  0008               	return
 10308     04A0                     __end_of_analisa_Rx:
 10309                           
 10310                           	psect	text65
 10311     0DBD                     __ptext65:	
 10312 ;; *************** function i1_EPWM1_LoadDutyValue *****************
 10313 ;; Defined at:
 10314 ;;		line 90 in file "mcc_generated_files/epwm1.c"
 10315 ;; Parameters:    Size  Location     Type
 10316 ;;  dutyValue       2    0[COMMON] unsigned short 
 10317 ;; Auto vars:     Size  Location     Type
 10318 ;;		None
 10319 ;; Return value:  Size  Location     Type
 10320 ;;                  1    wreg      void 
 10321 ;; Registers used:
 10322 ;;		wreg, status,2, status,0
 10323 ;; Tracked objects:
 10324 ;;		On entry : 0/0
 10325 ;;		On exit  : 0/0
 10326 ;;		Unchanged: 0/0
 10327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10328 ;;      Params:         2       0       0       0       0       0
 10329 ;;      Locals:         0       0       0       0       0       0
 10330 ;;      Temps:          2       0       0       0       0       0
 10331 ;;      Totals:         4       0       0       0       0       0
 10332 ;;Total ram usage:        4 bytes
 10333 ;; Hardware stack levels used: 1
 10334 ;; This function calls:
 10335 ;;		Nothing
 10336 ;; This function is called by:
 10337 ;;		_analisa_Rx
 10338 ;; This function uses a non-reentrant model
 10339 ;;
 10340                           
 10341     0DBD                     i1_EPWM1_LoadDutyValue:	
 10342                           ;psect for function i1_EPWM1_LoadDutyValue
 10343                           
 10344     0DBD                     i1l2614:	
 10345                           ;incstack = 0
 10346                           ; Regs used in i1_EPWM1_LoadDutyValue: [wreg+status,2+status,0]
 10347                           
 10348                           
 10349                           ;mcc_generated_files/epwm1.c: 90: void EPWM1_LoadDutyValue(uint16_t dutyValue);mcc_gener
      +                          ated_files/epwm1.c: 91: {;mcc_generated_files/epwm1.c: 93:     CCPR1L = ((dutyValue & 0x
      +                          03FC)>>2);
 10350     0DBD  0871               	movf	i1EPWM1_LoadDutyValue@dutyValue+1,w
 10351     0DBE  00F3               	movwf	??i1_EPWM1_LoadDutyValue+1
 10352     0DBF  0870               	movf	i1EPWM1_LoadDutyValue@dutyValue,w
 10353     0DC0  00F2               	movwf	??i1_EPWM1_LoadDutyValue
 10354     0DC1  36F3               	lsrf	??i1_EPWM1_LoadDutyValue+1,f
 10355     0DC2  0CF2               	rrf	??i1_EPWM1_LoadDutyValue,f
 10356     0DC3  36F3               	lsrf	??i1_EPWM1_LoadDutyValue+1,f
 10357     0DC4  0CF2               	rrf	??i1_EPWM1_LoadDutyValue,f
 10358     0DC5  0872               	movf	??i1_EPWM1_LoadDutyValue,w
 10359     0DC6  0025               	movlb	5	; select bank5
 10360     0DC7  0091               	movwf	17	;volatile
 10361                           
 10362                           ;mcc_generated_files/epwm1.c: 96:     CCP1CON = ((uint8_t)(CCP1CON & 0xCF) | ((dutyValue
      +                           & 0x0003)<<4));
 10363     0DC8  0870               	movf	i1EPWM1_LoadDutyValue@dutyValue,w
 10364     0DC9  3903               	andlw	3
 10365     0DCA  00F2               	movwf	??i1_EPWM1_LoadDutyValue
 10366     0DCB  3004               	movlw	4
 10367     0DCC                     u168_25:
 10368     0DCC  35F2               	lslf	??i1_EPWM1_LoadDutyValue,f
 10369     0DCD  0B89               	decfsz	9,f
 10370     0DCE  2DCC               	goto	u168_25
 10371     0DCF  0813               	movf	19,w	;volatile
 10372     0DD0  39CF               	andlw	207
 10373     0DD1  0472               	iorwf	??i1_EPWM1_LoadDutyValue,w
 10374     0DD2  0093               	movwf	19	;volatile
 10375     0DD3                     i1l173:
 10376     0DD3  0008               	return
 10377     0DD4                     __end_ofi1_EPWM1_LoadDutyValue:
 10378                           
 10379                           	psect	text66
 10380     0C7C                     __ptext66:	
 10381 ;; *************** function _PIN_MANAGER_IOC *****************
 10382 ;; Defined at:
 10383 ;;		line 98 in file "mcc_generated_files/pin_manager.c"
 10384 ;; Parameters:    Size  Location     Type
 10385 ;;		None
 10386 ;; Auto vars:     Size  Location     Type
 10387 ;;		None
 10388 ;; Return value:  Size  Location     Type
 10389 ;;                  1    wreg      void 
 10390 ;; Registers used:
 10391 ;;		None
 10392 ;; Tracked objects:
 10393 ;;		On entry : 0/0
 10394 ;;		On exit  : 0/0
 10395 ;;		Unchanged: 0/0
 10396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10397 ;;      Params:         0       0       0       0       0       0
 10398 ;;      Locals:         0       0       0       0       0       0
 10399 ;;      Temps:          0       0       0       0       0       0
 10400 ;;      Totals:         0       0       0       0       0       0
 10401 ;;Total ram usage:        0 bytes
 10402 ;; Hardware stack levels used: 1
 10403 ;; This function calls:
 10404 ;;		Nothing
 10405 ;; This function is called by:
 10406 ;;		_INTERRUPT_InterruptManager
 10407 ;; This function uses a non-reentrant model
 10408 ;;
 10409                           
 10410     0C7C                     _PIN_MANAGER_IOC:	
 10411                           ;psect for function _PIN_MANAGER_IOC
 10412                           
 10413     0C7C                     i1l75:	
 10414                           ;incstack = 0
 10415                           ; Regs used in _PIN_MANAGER_IOC: []
 10416                           
 10417     0C7C  0008               	return
 10418     0C7D                     __end_of_PIN_MANAGER_IOC:
 10419                           
 10420                           	psect	text67
 10421     0EC9                     __ptext67:	
 10422 ;; *************** function _EUSART_Transmit_ISR *****************
 10423 ;; Defined at:
 10424 ;;		line 197 in file "mcc_generated_files/eusart.c"
 10425 ;; Parameters:    Size  Location     Type
 10426 ;;		None
 10427 ;; Auto vars:     Size  Location     Type
 10428 ;;		None
 10429 ;; Return value:  Size  Location     Type
 10430 ;;                  1    wreg      void 
 10431 ;; Registers used:
 10432 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10433 ;; Tracked objects:
 10434 ;;		On entry : 0/0
 10435 ;;		On exit  : 0/0
 10436 ;;		Unchanged: 0/0
 10437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10438 ;;      Params:         0       0       0       0       0       0
 10439 ;;      Locals:         0       0       0       0       0       0
 10440 ;;      Temps:          1       0       0       0       0       0
 10441 ;;      Totals:         1       0       0       0       0       0
 10442 ;;Total ram usage:        1 bytes
 10443 ;; Hardware stack levels used: 1
 10444 ;; This function calls:
 10445 ;;		Nothing
 10446 ;; This function is called by:
 10447 ;;		_EUSART_Initialize
 10448 ;;		_INTERRUPT_InterruptManager
 10449 ;; This function uses a non-reentrant model
 10450 ;;
 10451                           
 10452     0EC9                     _EUSART_Transmit_ISR:	
 10453                           ;psect for function _EUSART_Transmit_ISR
 10454                           
 10455     0EC9                     i1l3104:	
 10456                           ;incstack = 0
 10457                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 10458                           
 10459                           
 10460                           ;mcc_generated_files/eusart.c: 201:     if(sizeof(eusartTxBuffer) > eusartTxBufferRemain
      +                          ing)
 10461     0EC9  3008               	movlw	8
 10462     0ECA  0021               	movlb	1	; select bank1
 10463     0ECB  0243               	subwf	_eusartTxBufferRemaining^(0+128),w	;volatile
 10464     0ECC  1803               	skipnc
 10465     0ECD  2ECF               	goto	u220_21
 10466     0ECE  2ED0               	goto	u220_20
 10467     0ECF                     u220_21:
 10468     0ECF  2EE9               	goto	i1l316
 10469     0ED0                     u220_20:
 10470     0ED0                     i1l3106:
 10471                           
 10472                           ;mcc_generated_files/eusart.c: 202:     {;mcc_generated_files/eusart.c: 203:         TXR
      +                          EG = eusartTxBuffer[eusartTxTail++];
 10473     0ED0  0844               	movf	_eusartTxTail^(0+128),w
 10474     0ED1  3E30               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
 10475     0ED2  0086               	movwf	6
 10476     0ED3  3001               	movlw	1	; select bank2/3
 10477     0ED4  0087               	movwf	7
 10478     0ED5  0801               	movf	1,w
 10479     0ED6  0023               	movlb	3	; select bank3
 10480     0ED7  009A               	movwf	26	;volatile
 10481     0ED8                     i1l3108:
 10482     0ED8  3001               	movlw	1
 10483     0ED9  00F0               	movwf	??_EUSART_Transmit_ISR
 10484     0EDA  0870               	movf	??_EUSART_Transmit_ISR,w
 10485     0EDB  0021               	movlb	1	; select bank1
 10486     0EDC  07C4               	addwf	_eusartTxTail^(0+128),f	;volatile
 10487     0EDD                     i1l3110:
 10488                           
 10489                           ;mcc_generated_files/eusart.c: 204:         if(sizeof(eusartTxBuffer) <= eusartTxTail)
 10490     0EDD  3008               	movlw	8
 10491     0EDE  0244               	subwf	_eusartTxTail^(0+128),w	;volatile
 10492     0EDF  1C03               	skipc
 10493     0EE0  2EE2               	goto	u221_21
 10494     0EE1  2EE3               	goto	u221_20
 10495     0EE2                     u221_21:
 10496     0EE2  2EE4               	goto	i1l3114
 10497     0EE3                     u221_20:
 10498     0EE3                     i1l3112:
 10499                           
 10500                           ;mcc_generated_files/eusart.c: 205:         {;mcc_generated_files/eusart.c: 206:        
      +                               eusartTxTail = 0;
 10501     0EE3  01C4               	clrf	_eusartTxTail^(0+128)	;volatile
 10502     0EE4                     i1l3114:
 10503                           
 10504                           ;mcc_generated_files/eusart.c: 208:         eusartTxBufferRemaining++;
 10505     0EE4  3001               	movlw	1
 10506     0EE5  00F0               	movwf	??_EUSART_Transmit_ISR
 10507     0EE6  0870               	movf	??_EUSART_Transmit_ISR,w
 10508     0EE7  07C3               	addwf	_eusartTxBufferRemaining^(0+128),f	;volatile
 10509                           
 10510                           ;mcc_generated_files/eusart.c: 209:     }
 10511     0EE8  2EEA               	goto	i1l319
 10512     0EE9                     i1l316:	
 10513                           ;mcc_generated_files/eusart.c: 210:     else
 10514                           
 10515                           
 10516                           ;mcc_generated_files/eusart.c: 211:     {;mcc_generated_files/eusart.c: 212:         PIE
      +                          1bits.TXIE = 0;
 10517     0EE9  1211               	bcf	17,4	;volatile
 10518     0EEA                     i1l319:
 10519     0EEA  0008               	return
 10520     0EEB                     __end_of_EUSART_Transmit_ISR:
 10521                           
 10522                           	psect	text68
 10523     0C8E                     __ptext68:	
 10524 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
 10525 ;; Defined at:
 10526 ;;		line 252 in file "mcc_generated_files/eusart.c"
 10527 ;; Parameters:    Size  Location     Type
 10528 ;;		None
 10529 ;; Auto vars:     Size  Location     Type
 10530 ;;		None
 10531 ;; Return value:  Size  Location     Type
 10532 ;;                  1    wreg      void 
 10533 ;; Registers used:
 10534 ;;		None
 10535 ;; Tracked objects:
 10536 ;;		On entry : 0/0
 10537 ;;		On exit  : 0/0
 10538 ;;		Unchanged: 0/0
 10539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10540 ;;      Params:         0       0       0       0       0       0
 10541 ;;      Locals:         0       0       0       0       0       0
 10542 ;;      Temps:          0       0       0       0       0       0
 10543 ;;      Totals:         0       0       0       0       0       0
 10544 ;;Total ram usage:        0 bytes
 10545 ;; Hardware stack levels used: 1
 10546 ;; This function calls:
 10547 ;;		Nothing
 10548 ;; This function is called by:
 10549 ;;		_EUSART_Initialize
 10550 ;;		_EUSART_Receive_ISR
 10551 ;; This function uses a non-reentrant model
 10552 ;;
 10553                           
 10554     0C8E                     _EUSART_DefaultOverrunErrorHandler:	
 10555                           ;psect for function _EUSART_DefaultOverrunErrorHandler
 10556                           
 10557     0C8E                     i1l2986:	
 10558                           ;incstack = 0
 10559                           ; Regs used in _EUSART_DefaultOverrunErrorHandler: []
 10560                           
 10561                           
 10562                           ;mcc_generated_files/eusart.c: 255:     RCSTAbits.CREN = 0;
 10563     0C8E  0023               	movlb	3	; select bank3
 10564     0C8F  121D               	bcf	29,4	;volatile
 10565                           
 10566                           ;mcc_generated_files/eusart.c: 256:     RCSTAbits.CREN = 1;
 10567     0C90  161D               	bsf	29,4	;volatile
 10568     0C91                     i1l336:
 10569     0C91  0008               	return
 10570     0C92                     __end_of_EUSART_DefaultOverrunErrorHandler:
 10571                           
 10572                           	psect	text69
 10573     0C7B                     __ptext69:	
 10574 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
 10575 ;; Defined at:
 10576 ;;		line 250 in file "mcc_generated_files/eusart.c"
 10577 ;; Parameters:    Size  Location     Type
 10578 ;;		None
 10579 ;; Auto vars:     Size  Location     Type
 10580 ;;		None
 10581 ;; Return value:  Size  Location     Type
 10582 ;;                  1    wreg      void 
 10583 ;; Registers used:
 10584 ;;		None
 10585 ;; Tracked objects:
 10586 ;;		On entry : 0/0
 10587 ;;		On exit  : 0/0
 10588 ;;		Unchanged: 0/0
 10589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10590 ;;      Params:         0       0       0       0       0       0
 10591 ;;      Locals:         0       0       0       0       0       0
 10592 ;;      Temps:          0       0       0       0       0       0
 10593 ;;      Totals:         0       0       0       0       0       0
 10594 ;;Total ram usage:        0 bytes
 10595 ;; Hardware stack levels used: 1
 10596 ;; This function calls:
 10597 ;;		Nothing
 10598 ;; This function is called by:
 10599 ;;		_EUSART_Initialize
 10600 ;;		_EUSART_Receive_ISR
 10601 ;; This function uses a non-reentrant model
 10602 ;;
 10603                           
 10604     0C7B                     _EUSART_DefaultFramingErrorHandler:	
 10605                           ;psect for function _EUSART_DefaultFramingErrorHandler
 10606                           
 10607     0C7B                     i1l333:	
 10608                           ;incstack = 0
 10609                           ; Regs used in _EUSART_DefaultFramingErrorHandler: []
 10610                           
 10611     0C7B  0008               	return
 10612     0C7C                     __end_of_EUSART_DefaultFramingErrorHandler:
 10613                           
 10614                           	psect	text70
 10615     0C8A                     __ptext70:	
 10616 ;; *************** function _EUSART_DefaultErrorHandler *****************
 10617 ;; Defined at:
 10618 ;;		line 260 in file "mcc_generated_files/eusart.c"
 10619 ;; Parameters:    Size  Location     Type
 10620 ;;		None
 10621 ;; Auto vars:     Size  Location     Type
 10622 ;;		None
 10623 ;; Return value:  Size  Location     Type
 10624 ;;                  1    wreg      void 
 10625 ;; Registers used:
 10626 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10627 ;; Tracked objects:
 10628 ;;		On entry : 0/0
 10629 ;;		On exit  : 0/0
 10630 ;;		Unchanged: 0/0
 10631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10632 ;;      Params:         0       0       0       0       0       0
 10633 ;;      Locals:         0       0       0       0       0       0
 10634 ;;      Temps:          0       0       0       0       0       0
 10635 ;;      Totals:         0       0       0       0       0       0
 10636 ;;Total ram usage:        0 bytes
 10637 ;; Hardware stack levels used: 1
 10638 ;; Hardware stack levels required when called: 1
 10639 ;; This function calls:
 10640 ;;		_EUSART_RxDataHandler
 10641 ;; This function is called by:
 10642 ;;		_EUSART_Initialize
 10643 ;;		_EUSART_Receive_ISR
 10644 ;; This function uses a non-reentrant model
 10645 ;;
 10646                           
 10647     0C8A                     _EUSART_DefaultErrorHandler:	
 10648                           ;psect for function _EUSART_DefaultErrorHandler
 10649                           
 10650     0C8A                     i1l2988:	
 10651                           ;incstack = 0
 10652                           ; Regs used in _EUSART_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 10653                           
 10654                           
 10655                           ;mcc_generated_files/eusart.c: 261:     EUSART_RxDataHandler();
 10656     0C8A  318E  2604  318C   	fcall	_EUSART_RxDataHandler
 10657     0C8D                     i1l339:
 10658     0C8D  0008               	return
 10659     0C8E                     __end_of_EUSART_DefaultErrorHandler:
 10660                           
 10661                           	psect	text71
 10662     0E04                     __ptext71:	
 10663 ;; *************** function _EUSART_RxDataHandler *****************
 10664 ;; Defined at:
 10665 ;;		line 240 in file "mcc_generated_files/eusart.c"
 10666 ;; Parameters:    Size  Location     Type
 10667 ;;		None
 10668 ;; Auto vars:     Size  Location     Type
 10669 ;;		None
 10670 ;; Return value:  Size  Location     Type
 10671 ;;                  1    wreg      void 
 10672 ;; Registers used:
 10673 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10674 ;; Tracked objects:
 10675 ;;		On entry : 0/0
 10676 ;;		On exit  : 0/0
 10677 ;;		Unchanged: 0/0
 10678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
 10679 ;;      Params:         0       0       0       0       0       0
 10680 ;;      Locals:         0       0       0       0       0       0
 10681 ;;      Temps:          1       0       0       0       0       0
 10682 ;;      Totals:         1       0       0       0       0       0
 10683 ;;Total ram usage:        1 bytes
 10684 ;; Hardware stack levels used: 1
 10685 ;; This function calls:
 10686 ;;		Nothing
 10687 ;; This function is called by:
 10688 ;;		_EUSART_Receive_ISR
 10689 ;;		_EUSART_DefaultErrorHandler
 10690 ;; This function uses a non-reentrant model
 10691 ;;
 10692                           
 10693     0E04                     _EUSART_RxDataHandler:	
 10694                           ;psect for function _EUSART_RxDataHandler
 10695                           
 10696     0E04                     i1l2630:	
 10697                           ;incstack = 0
 10698                           ; Regs used in _EUSART_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 10699                           
 10700                           
 10701                           ;mcc_generated_files/eusart.c: 242:     eusartRxBuffer[eusartRxHead++] = RCREG;
 10702     0E04  0021               	movlb	1	; select bank1
 10703     0E05  0842               	movf	_eusartRxHead^(0+128),w
 10704     0E06  3E28               	addlw	(low (_eusartRxBuffer| (0+256)))& (0+255)
 10705     0E07  0086               	movwf	6
 10706     0E08  3001               	movlw	1	; select bank2/3
 10707     0E09  0087               	movwf	7
 10708     0E0A  0023               	movlb	3	; select bank3
 10709     0E0B  0819               	movf	25,w	;volatile
 10710     0E0C  0081               	movwf	1
 10711     0E0D                     i1l2632:
 10712     0E0D  3001               	movlw	1
 10713     0E0E  00F0               	movwf	??_EUSART_RxDataHandler
 10714     0E0F  0870               	movf	??_EUSART_RxDataHandler,w
 10715     0E10  0021               	movlb	1	; select bank1
 10716     0E11  07C2               	addwf	_eusartRxHead^(0+128),f	;volatile
 10717     0E12                     i1l2634:
 10718                           
 10719                           ;mcc_generated_files/eusart.c: 243:     if(sizeof(eusartRxBuffer) <= eusartRxHead)
 10720     0E12  3008               	movlw	8
 10721     0E13  0242               	subwf	_eusartRxHead^(0+128),w	;volatile
 10722     0E14  1C03               	skipc
 10723     0E15  2E17               	goto	u170_21
 10724     0E16  2E18               	goto	u170_20
 10725     0E17                     u170_21:
 10726     0E17  2E19               	goto	i1l2638
 10727     0E18                     u170_20:
 10728     0E18                     i1l2636:
 10729                           
 10730                           ;mcc_generated_files/eusart.c: 244:     {;mcc_generated_files/eusart.c: 245:         eus
      +                          artRxHead = 0;
 10731     0E18  01C2               	clrf	_eusartRxHead^(0+128)	;volatile
 10732     0E19                     i1l2638:
 10733                           
 10734                           ;mcc_generated_files/eusart.c: 247:     eusartRxCount++;
 10735     0E19  3001               	movlw	1
 10736     0E1A  00F0               	movwf	??_EUSART_RxDataHandler
 10737     0E1B  0870               	movf	??_EUSART_RxDataHandler,w
 10738     0E1C  07C0               	addwf	_eusartRxCount^(0+128),f	;volatile
 10739     0E1D                     i1l330:
 10740     0E1D  0008               	return
 10741     0E1E                     __end_of_EUSART_RxDataHandler:
 10742     007E                     btemp	set	126	;btemp
 10743     007E                     int$flags	set	126
 10744     007E                     wtemp0	set	126
 10745                           
 10746                           	psect	config
 10747                           
 10748                           ;Config register CONFIG1 @ 0x8007
 10749                           ;	Oscillator Selection
 10750                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
 10751                           ;	Watchdog Timer Enable
 10752                           ;	WDTE = OFF, WDT disabled
 10753                           ;	Power-up Timer Enable
 10754                           ;	PWRTE = OFF, PWRT disabled
 10755                           ;	MCLR Pin Function Select
 10756                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
 10757                           ;	Flash Program Memory Code Protection
 10758                           ;	CP = OFF, Program memory code protection is disabled
 10759                           ;	Data Memory Code Protection
 10760                           ;	CPD = OFF, Data memory code protection is disabled
 10761                           ;	Brown-out Reset Enable
 10762                           ;	BOREN = ON, Brown-out Reset enabled
 10763                           ;	Clock Out Enable
 10764                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
 10765                           ;	Internal/External Switchover
 10766                           ;	IESO = ON, Internal/External Switchover mode is enabled
 10767                           ;	Fail-Safe Clock Monitor Enable
 10768                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 10769     8007                     	org	32775
 10770     8007  3FE4               	dw	16356
 10771                           
 10772                           ;Config register CONFIG2 @ 0x8008
 10773                           ;	Flash Memory Self-Write Protection
 10774                           ;	WRT = OFF, Write protection off
 10775                           ;	PLL Enable
 10776                           ;	PLLEN = OFF, 4x PLL disabled
 10777                           ;	Stack Overflow/Underflow Reset Enable
 10778                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 10779                           ;	Brown-out Reset Voltage Selection
 10780                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
 10781                           ;	In-Circuit Debugger Mode
 10782                           ;	DEBUG = 0x1, unprogrammed default
 10783                           ;	Low-Voltage Programming Enable
 10784                           ;	LVP = ON, Low-voltage programming enabled
 10785     8008                     	org	32776
 10786     8008  3EFF               	dw	16127

Data Sizes:
    Strings     0
    Constant    0
    Data        11
    BSS         90
    Persistent  50
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     52      80
    BANK1            80     19      80
    BANK2            80      0      30
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), NULL(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), NULL(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), NULL(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), receive(), NULL(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), receive(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), NULL(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> end_Rx(), TMR0_DefaultInterruptHandler(), NULL(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> end_Rx(), TMR0_DefaultInterruptHandler(), 

    TMR1_GateInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> mede_height(), TMR1_DefaultGateInterruptHandler(), NULL(), 

    TMR1_SetGateInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> mede_height(), TMR1_DefaultGateInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), trigger_Rx(), NULL(), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), trigger_Rx(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _receive->_EUSART_Read
    _TMR2_ISR->_trigger_Rx
    _envia_Tx->___fltol
    _mede_height->___fltol
    ___xxtofl->_TMR1_ReadTimer
    ___flmul->_TMR1_ReadTimer
    _TMR0_ISR->_end_Rx
    _end_Rx->_analisa_Rx
    _analisa_Rx->i1_EPWM1_LoadDutyValue
    _EUSART_Receive_ISR->_EUSART_RxDataHandler
    _EUSART_DefaultErrorHandler->_EUSART_RxDataHandler

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _envia_Tx->___fltol
    _TMR1_GATE_ISR->_mede_height
    _mede_height->___fltol
    ___fltol->___flmul
    ___flmul->___xxtofl

Critical Paths under _main in BANK1

    _daUmPasso->_definePassoMotor
    _controlchoose->_fluxcontrol
    _controlchoose->_pwmcontrol
    _pwmcontrol->___lwdiv
    _fluxcontrol->___lwdiv
    ___lwdiv->___wmul
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetGateInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    6320
                                             18 BANK1      1     1      0
                  _ADC_GetConversion
       _EUSART_SetRxInterruptHandler
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
       _TMR1_SetGateInterruptHandler
           _TMR2_SetInterruptHandler
                     _TMR4_ReadTimer
                     _TMR4_StopTimer
            _TMR6_LoadPeriodRegister
                     _TMR6_ReadTimer
                    _TMR6_StartTimer
                     _TMR6_StopTimer
                      _controlchoose
                          _daUmPasso
 ---------------------------------------------------------------------------------
 (1) _daUmPasso                                            2     2      0     306
                                              2 BANK1      2     2      0
               _CMP1_GetOutputStatus
                   _definePassoMotor
 ---------------------------------------------------------------------------------
 (2) _definePassoMotor                                     2     1      1     240
                                              0 BANK1      2     1      1
 ---------------------------------------------------------------------------------
 (2) _CMP1_GetOutputStatus                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _controlchoose                                        0     0      0    4140
            _TMR4_LoadPeriodRegister
                    _TMR4_StartTimer
                        _fluxcontrol
                         _pwmcontrol
 ---------------------------------------------------------------------------------
 (2) _pwmcontrol                                           4     4      0    2169
                                             14 BANK1      4     4      0
                _EPWM1_LoadDutyValue
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _EPWM1_LoadDutyValue                                  4     2      2     220
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (2) _fluxcontrol                                          4     4      0    1949
                                             14 BANK1      4     4      0
                            ___lwdiv
                             ___wmul
                            _fluxpos
 ---------------------------------------------------------------------------------
 (3) _fluxpos                                              1     1      0       0
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    1156
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     770
                                              6 BANK1      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _TMR4_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR4_LoadPeriodRegister                              1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _TMR6_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR6_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR6_ReadTimer                                       1     1      0      23
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _TMR6_LoadPeriodRegister                              1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _TMR4_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR4_ReadTimer                                       1     1      0      23
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1088
                     _ADC_Initialize
                    _CMP1_Initialize
                     _DAC_Initialize
                   _EPWM1_Initialize
                  _EUSART_Initialize
                     _FVR_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
                    _TMR6_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0     174
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR2_SetInterruptHandler                             2     0      2     174
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     174
       _TMR1_SetGateInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetGateInterruptHandler                         2     0      2     174
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     174
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     174
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     566
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2      98
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2     174
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _EPWM1_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DAC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CMP1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion                                    4     2      2      22
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0    7215
                                NULL *
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
                    _PIN_MANAGER_IOC
                           _TMR0_ISR
                      _TMR1_GATE_ISR
                           _TMR2_ISR
                            _receive *
 ---------------------------------------------------------------------------------
 (5) _receive                                              1     1      0      24
                                              2 COMMON     1     1      0
                        _EUSART_Read
                        _TMR0_Reload
 ---------------------------------------------------------------------------------
 (6) _TMR0_Reload                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART_Read                                          2     2      0      24
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (5) _TMR2_ISR                                             0     0      0    3298
                                NULL *
       _TMR2_DefaultInterruptHandler *
                         _trigger_Rx *
 ---------------------------------------------------------------------------------
 (6) _trigger_Rx                                           1     1      0    3298
                                             13 COMMON     1     1      0
                           _envia_Tx
 ---------------------------------------------------------------------------------
 (7) _envia_Tx                                             0     0      0    3298
                       _EUSART_Write
                            ___flmul
                            ___fltol
 ---------------------------------------------------------------------------------
 (8) _EUSART_Write                                         2     2      0      44
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (6) _TMR2_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR1_GATE_ISR                                        0     0      0    3797
                                NULL *
   _TMR1_DefaultGateInterruptHandler *
                        _mede_height *
 ---------------------------------------------------------------------------------
 (6) _mede_height                                          4     4      0    3797
                                             48 BANK0      4     4      0
                     _TMR1_ReadTimer
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (7) ___xxtofl                                            14    10      4     474
                                              0 BANK0     14    10      4
                     _TMR1_ReadTimer (ARG)
 ---------------------------------------------------------------------------------
 (8) ___fltol                                             10     6      4     381
                                             11 COMMON     2     2      0
                                             40 BANK0      8     4      4
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (8) ___flmul                                             26    18      8    2873
                                             14 BANK0     26    18      8
                     _TMR1_ReadTimer (ARG)
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (9) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (7) _TMR1_ReadTimer                                      11     9      2      69
                                              0 COMMON    11     9      2
 ---------------------------------------------------------------------------------
 (6) _TMR1_DefaultGateInterruptHandler                     0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             0     0      0      96
                                NULL *
       _TMR0_DefaultInterruptHandler *
                             _end_Rx *
 ---------------------------------------------------------------------------------
 (6) _end_Rx                                               1     1      0      96
                                              6 COMMON     1     1      0
                         _analisa_Rx
 ---------------------------------------------------------------------------------
 (7) _analisa_Rx                                           2     2      0      96
                                              4 COMMON     2     2      0
              i1_EPWM1_LoadDutyValue
 ---------------------------------------------------------------------------------
 (8) i1_EPWM1_LoadDutyValue                                4     2      2      96
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (6) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _PIN_MANAGER_IOC                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _EUSART_Transmit_ISR                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _EUSART_Receive_ISR                                   0     0      0       0
                                NULL *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (6) _EUSART_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART_DefaultErrorHandler                           0     0      0       0
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (6) _EUSART_RxDataHandler                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion
   _EUSART_SetRxInterruptHandler
   _SYSTEM_Initialize
     _ADC_Initialize
     _CMP1_Initialize
     _DAC_Initialize
     _EPWM1_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _FVR_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
       _TMR1_SetGateInterruptHandler
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
     _TMR4_Initialize
     _TMR6_Initialize
     _WDT_Initialize
   _TMR0_SetInterruptHandler
   _TMR1_SetGateInterruptHandler
   _TMR2_SetInterruptHandler
   _TMR4_ReadTimer
   _TMR4_StopTimer
   _TMR6_LoadPeriodRegister
   _TMR6_ReadTimer
   _TMR6_StartTimer
   _TMR6_StopTimer
   _controlchoose
     _TMR4_LoadPeriodRegister
     _TMR4_StartTimer
     _fluxcontrol
       ___lwdiv
         ___wmul (ARG)
       ___wmul
       _fluxpos
     _pwmcontrol
       _EPWM1_LoadDutyValue
       ___lwdiv
       ___wmul
   _daUmPasso
     _CMP1_GetOutputStatus
     _definePassoMotor

 _INTERRUPT_InterruptManager (ROOT)
   NULL(Fake) *
   _EUSART_Receive_ISR *
     NULL(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *
   _EUSART_Transmit_ISR *
   _PIN_MANAGER_IOC *
   _TMR0_ISR *
     NULL(Fake) *
     _TMR0_DefaultInterruptHandler *
     _end_Rx *
       _analisa_Rx
         i1_EPWM1_LoadDutyValue
   _TMR1_GATE_ISR *
     NULL(Fake) *
     _TMR1_DefaultGateInterruptHandler *
     _mede_height *
       _TMR1_ReadTimer
       ___flmul
         _TMR1_ReadTimer (ARG)
         __Umul8_16 (ARG)
         ___xxtofl (ARG)
           _TMR1_ReadTimer (ARG)
       ___fltol
         ___flmul (ARG)
       ___xxtofl
   _TMR2_ISR *
     NULL(Fake) *
     _TMR2_DefaultInterruptHandler *
     _trigger_Rx *
       _envia_Tx
         _EUSART_Write
         ___flmul
         ___fltol
   _receive *
     _EUSART_Read
     _TMR0_Reload

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      CC       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     34      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     13      50       8      100.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      1E      10       37.5%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      CC      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Tue Sep 03 15:13:39 2024

                ?_EUSART_SetRxInterruptHandler 00C6               __end_of_TMR2_SetInterruptHandler 0CD3  
                                           l42 0CFD                                             l45 0C99  
                                           l39 07F7                                             l72 0DEA  
                            ??_CMP1_Initialize 00C6                                             l96 0D7E  
                                           _dc 0060                              ??_TMR6_StartTimer 00C6  
                       __end_of_FVR_Initialize 0C96                            ___wmul@multiplicand 00C8  
                             ??_TMR6_StopTimer 00C6                                _timer0ReloadVal 00BE  
                          __Umul8_16@word_mpld 0076                                            l140 0C80  
                                          l118 0CD2                                            l134 0D19  
                                          l143 0CD8                                            l137 0C89  
                                          l170 0D3C                                            l149 0CEA  
                                          l173 0E8A                                            l342 0CB4  
                                          l351 0CC0                                            l432 0E4A  
                                          l417 07FF                                            l345 0D0F  
                                          l354 0CBA                                            l522 0E6E  
                                          l435 0E52                                            l371 0D91  
                                          l460 0CA8                                            l348 0D06  
                                          l445 0CAE                                            l285 0FFF  
                                          l701 0D9F                                            l702 0DA6  
                                          l463 0C9D                                            l800 072C  
                                          l482 0C86                                            l387 0CC6  
                                          l555 0CCC                                            l491 0CDE  
                                          l803 072E                                            l476 0D23  
                                          l812 0734                                            l820 0748  
                                          l397 0C95                                            l485 0CE4  
                                          l805 0730                                            l814 0736  
                                          l750 06FA                                            l830 078C  
                                          l479 0C83                                            l807 0731  
                                          l816 0737                                            l760 0700  
                                          l744 06F6                                            l809 0732  
                                          l841 06AF                                            l682 040B  
                                          l690 0531                                            l818 0738  
                                          l754 06FC                                            l746 06F8  
                                          l763 0702                                            l772 0708  
                                          l756 06FE                                            l748 06F9  
                                          l693 0F77                                            l765 0704  
                                          l790 0726                                            l774 070A  
                                          l758 06FF                                            l767 0705  
                                          l784 0722                                            l776 070B  
                                          l697 0F83                                            l769 0706  
                                          l794 0728                                            l786 0724  
                                          l778 070C                                            l796 072A  
                                          l788 0725                                            l798 072B  
                                          l996 0EB4                                            l998 0EC8  
                                          _PR2 001B                                            _PR4 0416  
                                          _PR6 041D                                _timer1ReloadVal 00B6  
                       ??_EUSART_RxDataHandler 0070                                            _kif 00EB  
                                          _kdp 00E5                                            _kip 00E7  
                                          _kpf 00ED                                            _vRx 0064  
                                          _pas 006A                                            _vTx 0066  
                                          _kpp 00E9                 ?_EUSART_SetFramingErrorHandler 00C6  
                                 ?_mede_height 0070                                _TMR2_Initialize 0D6D  
                                          wreg 0009                                   ___flmul@aexp 0040  
                                 ___flmul@bexp 0041       __end_of_TMR1_DefaultGateInterruptHandler 0003  
           ??_TMR1_DefaultGateInterruptHandler 0070              ?_TMR1_DefaultGateInterruptHandler 0070  
             _TMR1_DefaultGateInterruptHandler 0002                                   ___flmul@sign 003B  
                                 ___flmul@temp 0046                                   ___flmul@prod 0042  
                                 ?_EUSART_Read 0070                                   ___fltol@exp1 007C  
                                         l3000 0392                                           l3010 03FB  
                                         l3002 03A0                                           l3012 0404  
                                         l3004 03D0                                           l3020 04B4  
                                         l3014 0408                                           l3006 03D9  
                                         l3030 051D                                           l3022 04C2  
                                         l3008 03DD                                           l3032 0526  
                                         l3024 04F2                                           l3016 04A0  
                                         l3200 075D                                           l3034 052A  
                                         l3026 04FB                                           l3018 04A7  
                                         l3210 0774                                           l3202 0761  
                                         l3140 0E44                                           l1276 0FC0  
                                         l3028 04FF                                           l3212 0779  
                                         l3204 0763                                           l3142 0E48  
                                         l3150 0C84                                           l3070 073A  
                                         l3062 070E                                           l3214 077E  
                                         l3206 0769                                           l3144 0E4E  
                                         l3136 0E3A                                           l3152 0CDF  
                                         l3064 071C                                           l3056 06F0  
                                         l3208 076E                                           l3216 0786  
                                         l3138 0E43                                           l3250 068A  
                                         l2620 0CB5                                           l3076 07CD  
                                         l3084 0C7E                                           l3156 0CDB  
                                         l3148 0C81                                           l3172 0D92  
                                         l3260 06C9                                           l3252 06AD  
                                         l2622 0CBB                                           l3086 0CD3  
                                         l3174 0D98                                           l3270 06E4  
                                         l3262 06CC                                           l3254 06AE  
                                         l2624 0CAF                                           l2640 0CC1  
                                         l2616 0CCD                                           l3176 0D9C  
                                         l3192 074B                                           l3272 06E8  
                                         l3264 06D7                                           l3256 06BB  
                                         l2626 0D07                                           l2642 0CC7  
                                         l2650 0F65                                           l2618 0E6F  
                                         l3178 0DA3                                           l3194 074F  
                                         l3266 06DC                                           l3258 06C6  
                                         l2900 0D2F                                           l2628 0CFE  
                                         l2652 0F74                                           l3196 0752  
                                         l3268 06DF                                           l2910 0D3A  
                                         l2902 0D32                                           l2830 0DDA  
                                         l2750 0EBE                                           l2742 0EA9  
                                         l2654 0F7C                                           l3198 075A  
                                         l2904 0D33                                           l2840 0CF7  
                                         l2832 0DDC                                           l2920 0E60  
                                         l2912 0E53                                           l2760 0F8D  
                                         l2752 0EC4                                           l2744 0EAC  
                                         l2656 0F80                                           l2648 0F5A  
                                         l2850 0CA9                                           l2906 0D35  
                                         l2930 0FC3                                           l2842 0CFA  
                                         l2834 0DDF                                           l2826 0DD4  
                                         l2922 0E62                                           l2914 0E56  
                                         l2770 0FAC                                           l2762 0F90  
                                         l2746 0EB0                                           l2908 0D37  
                                         l2940 0FDA                                           l2932 0FCA  
                                         l2844 0CFB                                           l2836 0DE4  
                                         l2828 0DD7                                           l2924 0E64  
                                         l2916 0E57                                           l2860 0D6D  
                                         l2852 0D10                                           l2772 0FB0  
                                         l2764 0F95                                           l2756 0F84  
                                         l2748 0EB9                                           l2950 0FF9  
                                         l2942 0FDC                                           l2934 0FD3  
                                         l2838 0DE9                                           l2926 0E6B  
                                         l2918 0E58                                           l2870 0D7B  
                                         l2862 0D70                                           l2854 0D13  
                                         l2846 0C96                                           l2774 0FB1  
                                         l2766 0F99                                           l2758 0F87  
                                         l2952 0FFB                                           l2944 0FDD  
                                         l2936 0FD6                                           l2928 0FC1  
                                         l2848 0C92                                           l2880 0D89  
                                         l2872 0D7F                                           l2864 0D71  
                                         l2856 0D14                                           l2960 0C87  
                                         l2776 0FB6                                           l2768 0F9D  
                                         l2954 0FFC                                           l2946 0FE5  
                                         l2938 0FD8                                           l2882 0D8A  
                                         l2874 0D84                                           l2866 0D72  
                                         l2858 0D16                                           l2890 0D20  
                                         l2962 0CE7                                           l2778 0FBC  
                                         l2892 0CA3                                           l2956 0FFD  
                                         l2948 0FED                                           l2876 0D86  
                                         l2868 0D74                                           l2884 0D1A  
                                         l2894 07F8                                           l2958 0FFE  
                                         l2878 0D88                                           l2886 0D1D  
                                         l2896 07FB                                           l2888 0D1E  
                                         l2992 0C9A                                           l2898 07FC  
                                         l2996 0372                                           l2998 0385  
                                         u2100 04FB                                           u2101 04FA  
                                         u2110 0526                                           u2111 0525  
                                         u2040 0392                                           u2041 0391  
                                         u2050 03A0                                           u2051 039F  
                                         u2060 03D9                                           u2300 0769  
                                         u2061 03D8                                           u2045 038E  
                                         u2301 0768                                           _LATA 010C  
                                         u2070 0404                                           u2150 06F5  
                                         u2310 076E                                           _LATB 010D  
                                         u2071 0403                                           u2055 039C  
                                         u2151 06F4                                           u2311 076D  
                                         u2080 04B4                                           u2160 0721  
                                         u2320 0779                                           u2081 04B3  
                                         u2161 0720                                           u2321 0778  
                                         u2250 0E4E                                           u2090 04C2  
                                         u2251 0E4D                                           u2091 04C1  
                                         u2085 04B0                                           u1710 0F74  
                                         u2270 0D98                                           u1711 0F73  
                                         u2095 04BE                                           u2271 0D97  
                                         u1800 0EC4                                           u1720 0F7C  
                                         u1801 0EC3                                           u1721 0F7B  
                                         u1810 0F8D                                           u2290 075A  
                                         u1811 0F8C                                           u1715 0F70  
                                         u2291 0759                                           u2460 06C6  
                                         u2461 06C5                                           u1830 0F9D  
                                         u2470 06D7                                           u1831 0F9C  
                                         u2471 06D6                                           u2480 06DC  
                                         u1825 0F91                                           u2481 06DB  
                                         u1850 0FAC                                           u1770 0EB0  
                                         u1851 0FAB                                           u1771 0EAF  
                                         u1845 0F9E                                           u1870 0FBC  
                                         u1871 0FBB                                           u1855 0FA8  
                                         u1695 0E80                                           u2497 0E45  
                                         u1865 0FB2                                           u1785 0EB5  
                                         u1795 0EBA                                           i1l75 0C7C  
                                         _TMR0 0015                                           _TMR2 001A  
                                         _TMR4 0415                                           _TMR6 041C  
                                         _WPUA 020C                                           _WPUB 020D  
                ?_TMR1_SetGateInterruptHandler 00C6                                           _main 068A  
                                         _flux 0068                                           fsr0h 0005  
                                         fsr1h 0007                                           indf0 0000  
                                         fsr0l 0004                                           indf1 0001  
                                         fsr1l 0006                                           btemp 007E  
                                         start 0062                          ??_EPWM1_LoadDutyValue 00C8  
                      __end_of_TMR0_Initialize 0D92                 ??_TMR0_DefaultInterruptHandler 0070  
                              ?_FVR_Initialize 0070                                  ?_EUSART_Write 0070  
                __end_of_OSCILLATOR_Initialize 0CFE                                  ___fltol@sign1 007B  
                                        ?_main 0070                                __end_of___flmul 02C7  
                              __end_of___fltol 068A                                          _T1CON 0018  
                                        _T2CON 001C                                          _T4CON 0417  
                                        _T6CON 041E                  __end_ofi1_EPWM1_LoadDutyValue 0DD4  
                              __end_of___lwdiv 0FC1                                          i1l121 0003  
                                        i1l201 0030                                          i1l210 0060  
                                        i1l115 0D5A                                          i1l203 0041  
                                        i1l204 0060                                          i1l205 004F  
                                        i1l310 0F42                                          i1l304 0F32  
                                        i1l313 0F59                                          i1l330 0E1D  
                                        i1l316 0EE9                                          i1l333 0C7B  
                                        i1l173 0DD3                                          i1l309 0F3A  
                                        i1l326 07CC                                          i1l319 0EEA  
                                        i1l336 0C91                                          i1l339 0C8D  
                                        i1l531 0E03                                          i1l380 0CA2  
                                        i1l196 0012                                          i1l390 0C7D  
                                        i1l198 001E                                          i1l384 0D6C  
                                        i1l552 0D4B                                          i1l716 049F  
                                        i1l732 0E1E                                          i1l725 0DBC  
                                        i1l558 0002                                          i1l719 0618  
                                        i1l735 0E26                                          i1l729 0EA8  
                                        i1l738 0E37                                          i1l836 05A5  
                                        _RCREG 0199                                          _RCSTA 019D  
                                        _TMR1H 0017                                          _TMR1L 0016  
                                        _TRISA 008C                                          _TRISB 008D  
                                 ?_fluxcontrol 0070                                          _TXREG 019A  
                                        _TXSTA 019E                                _TMR4_Initialize 0D10  
                    ?_TMR0_SetInterruptHandler 00C6                               __end_of_TMR0_ISR 0D6D  
                             __end_of_TMR2_ISR 0D5B                        __end_of_PIN_MANAGER_IOC 0C7D  
                               _WDT_Initialize 0C96                                          _error 00B4  
                    ??_TMR6_LoadPeriodRegister 00C6                                          _passo 00BB  
                              __end_of_fluxpos 0F84                                __end_of_receive 0EA9  
                                _controlchoice 00EF                                  _controlchoose 0D92  
                      __end_of_TMR1_Initialize 0E6F                                          pclath 000A  
                                        status 0003                                          wtemp0 007E  
                             daUmPasso@sentido 00C9                               ??_DAC_Initialize 00C6  
                 __end_of_CMP1_GetOutputStatus 0C9E                                __initialization 0064  
                                 __end_of_main 06EE                                 ??_EUSART_Write 0070  
                      __end_of_TMR2_Initialize 0D7F                    ?_INTERRUPT_InterruptManager 0070  
               ??_EUSART_SetRxInterruptHandler 00C8                       _TMR2_SetInterruptHandler 0CCD  
                                       ??_main 00D8                       ?_TMR4_LoadPeriodRegister 0070  
                       __end_of_WDT_Initialize 0C9A                                _TMR6_Initialize 0D1A  
    __end_of_EUSART_DefaultFramingErrorHandler 0C7C            ??_EUSART_DefaultFramingErrorHandler 0070  
           ?_EUSART_DefaultFramingErrorHandler 0070              _EUSART_DefaultFramingErrorHandler 0C7B  
                                       _ADCON0 009D                                         _ADCON1 009E  
                   _EUSART_OverrunErrorHandler 013C                                 ?_controlchoose 0070  
                                       _ADRESH 009C                                         _ADRESL 009B  
                                       _CCPR1H 0292                                         _CCPR1L 0291  
                                       _ANSELA 018C                                         _ANSELB 018D  
                                       _BORCON 0116                                         _T1GCON 0019  
                                       i1l1200 0689                                         i1l1412 0EFD  
                                       i1l3100 0D3F                                         i1l1405 02BA  
                                       i1l3110 0EDD                                         i1l1414 0F0D  
                                       i1l1190 0689                                         i1l3102 0D46  
                                       i1l3112 0EE3                                         i1l3104 0EC9  
                                       i1l3040 0DAF                                         u200_20 0364  
                                       i1l3120 0799                                         u200_21 0363  
                                       i1l3114 0EE4                                         i1l3106 0ED0  
                                       i1l3042 0DB4                                         i1l2410 0EF5  
                                       i1l1450 033D                                         i1l3050 0E2D  
                                       i1l3130 07B7                                         i1l3122 07A0  
                                       i1l1451 0349                                         i1l1443 0323  
                                       i1l3108 0ED8                                         i1l3044 0DB8  
                                       i1l3036 0DA7                                         i1l2412 0EF9  
                                       i1l2500 00BF                                         i1l2420 0F34  
                                       i1l3052 0E30                                         i1l3132 07C2  
                                       i1l3124 07A5                                         i1l3116 078D  
                                       i1l3220 000A                                         i1l1197 0674  
                                       i1l1437 02EA                                         i1l3038 0DAE  
                                       i1l2414 0F04                                         i1l2406 0EEC  
                                       i1l2510 00DB                                         i1l2502 00C4  
                                       i1l2430 0F4E                                         i1l2422 0F34  
                                       i1l3054 0E33                                         i1l3046 0E20  
                                       i1l3134 07C9                                         i1l3126 07AA  
                                       i1l3118 0794                                         i1l3230 0027  
                                       i1l3222 000E                                         i1l1439 0371  
                                       i1l2416 0F09                                         i1l2408 0EEE  
                                       i1l2600 02A6                                         i1l2520 00F9  
                                       i1l2512 00E0                                         i1l2504 00C9  
                                       i1l2440 0623                                         u201_20 0368  
                                       i1l3072 0532                                         i1l2432 0F54  
                                       i1l2424 0F3E                                         i1l3048 0E24  
                                       i1l3080 0D4E                                         i1l3128 07B1  
                                       i1l3240 004B                                         i1l3232 002C  
                                       i1l3224 0016                                         i1l1393 02C6  
                                       u201_21 0367                                         i1l3090 0D5B  
                                       i1l2610 02BE                                         i1l2602 02A8  
                                       i1l2530 0150                                         i1l2522 0106  
                                       i1l2514 00E5                                         i1l2506 00D1  
                                       i1l2450 0646                                         i1l3074 0598  
                                       i1l2434 0F55                                         i1l2426 0F43  
                                       i1l3082 0D55                                         i1l3242 0054  
                                       i1l3234 0035                                         i1l3226 001A  
                                       i1l3218 0006                                         i1l2700 0482  
                                       i1l3092 0D5C                                         i1l2604 02B3  
                                       i1l2540 0181                                         i1l2532 015D  
                                       i1l2524 011E                                         i1l2508 00D3  
                                       i1l2460 0654                                         i1l2452 0648  
                                       i1l2444 062C                                         i1l2428 0F4A  
                                       i1l2436 0F57                                         i1l3180 0E8B  
                                       i1l3244 0059                                         i1l3236 003A  
                                       i1l3228 0022                                         i1l2630 0E04  
                                       i1l2614 0DBD                                         i1l2710 048F  
                                       i1l2702 0484                                         i1l3094 0D60  
                                       i1l2606 02B7                                         i1l2550 01BE  
                                       i1l2542 0188                                         i1l2534 0164  
                                       i1l2526 012B                                         i1l2518 00EE  
                                       i1l2470 0679                                         i1l2454 064C  
                                       i1l2462 0664                                         i1l2446 063D  
                                       i1l2438 0619                                         i1l3078 0D4C  
                                       i1l3190 0EA4                                         i1l3182 0E8D  
                                       i1l3238 0046                                         i1l1399 0246  
                                       i1l2632 0E0D                                         i1l3096 0D67  
                                       i1l2608 02B8                                         i1l2560 020F  
                                       i1l2552 01D0                                         i1l2544 019A  
                                       i1l2536 016F                                         i1l2528 0143  
                                       i1l2480 0096                                         i1l2472 067E  
                                       i1l2448 063E                                         i1l2800 0310  
                                       u130_20 0F3E                                         i1l2720 05AB  
                                       u202_20 0F14                                         i1l3184 0E90  
                                       u130_21 0F3D                                         u202_21 0F13  
                                       i1l2634 0E12                                         i1l2562 0216  
                                       i1l2570 0226                                         i1l2554 01E5  
                                       i1l2546 01A1                                         i1l2538 0176  
                                       i1l2490 00AB                                         i1l2482 0097  
                                       i1l2474 008C                                         i1l2810 0337  
                                       i1l2802 0314                                         i1l3098 0D3D  
                                       i1l2730 05CC                                         i1l2722 05B0  
                                       i1l3186 0E93                                         i1l2636 0E18  
                                       i1l2708 0489                                         i1l2660 040F  
                                       i1l2716 0491                                         i1l2644 0DEB  
                                       i1l2572 022A                                         i1l2564 021A  
                                       i1l2556 01FC                                         i1l2548 01B3  
                                       i1l2492 00B3                                         i1l2484 009C  
                                       i1l2476 0090                                         i1l2468 066B  
                                       i1l2820 0368                                         i1l2812 0341  
                                       i1l2804 031C                                         i1l2740 0613  
                                       i1l2732 05D0                                         i1l2724 05B4  
                                       i1l3188 0E99                                         i1l2638 0E19  
                                       i1l2670 043B                                         i1l2662 0415  
                                       i1l2590 0274                                         i1l2582 024B  
                                       i1l2574 022B                                         i1l2566 021B  
                                       i1l2558 0203                                         i1l2494 00B8  
                                       i1l2486 00A1                                         i1l2478 0092  
                                       i1l2822 0369                                         i1l2814 034B  
                                       i1l2806 032A                                         i1l2734 05D5  
                                       i1l2726 05B9                                         i1l2718 05A6  
                                       i1l2680 0459                                         i1l2672 043D  
                                       i1l2664 042B                                         i1l2584 0250  
                                       i1l2592 0278                                         i1l2576 022F  
                                       i1l2568 0222                                         i1l2496 00BA  
                                       i1l2488 00A9                                         i1l2816 035F  
                                       i1l2808 0333                                         u131_20 0F54  
                                       i1l2736 05E3                                         i1l2728 05C7  
                                       u203_20 0F2C                                         u131_21 0F53  
                                       u203_21 0F2B                                         i1l2690 046B  
                                       i1l2674 0449                                         i1l2666 0432  
                                       i1l2658 040C                                         i1l2594 0285  
                                       i1l2586 0258                                         i1l2578 0243  
                                       i1l2498 00BE                                         i1l2818 0364  
                                       i1l2738 060F                                         i1l2692 046E  
                                       i1l2684 0461                                         i1l2676 0454  
                                       i1l2668 0435                                         i1l2596 028F  
                                       i1l2588 025C                                         i1l2694 0470  
                                       i1l2686 0467                                         i1l2678 0457  
                                       i1l2598 029D                                         i1l2790 02F2  
                                       i1l2782 02C9                                         u220_20 0ED0  
                                       i1l2696 0474                                         i1l2688 0469  
                                       u212_20 0DAE                                         u140_20 0679  
                                       u132_20 0623                                         i1l2784 02CE  
                                       u220_21 0ECF                                         u212_21 0DAD  
                                       u140_21 0678                                         u132_21 0622  
                                       i1l2698 047F                                         i1l2794 02FB  
                                       i1l2786 02D2                                         i1l2970 0F22  
                                       i1l2796 02FE                                         i1l2788 02E2  
                                       i1l2980 0F30                                         i1l2972 0F26  
                                       i1l2964 0F0E                                         i1l2798 0309  
                                       i1l2982 0F31                                         i1l2974 0F2C  
                                       i1l2966 0F0E                                         i1l2990 0C9E  
                                       u221_20 0EE3                                         u213_20 0DB4  
                                       u141_20 067E                                         u133_20 0639  
                                       i1l2976 0F2D                                         i1l2968 0F14  
                                       u221_21 0EE2                                         u213_21 0DB3  
                                       u141_21 067D                                         i1l2986 0C8E  
                                       i1l2978 0F2E                                         i1l2988 0C8A  
                                       u133_25 0635                                         u126_20 0EF9  
                                       u142_20 0096                                         u134_20 064C  
                                       u214_20 0E2D                                         u222_20 0799  
                                       u126_21 0EF8                                         u142_21 0095  
                                       u134_21 064B                                         u214_21 0E2C  
                                       u222_21 0798                                         u150_25 015E  
                                       u143_20 009C                                         u135_20 0653  
                                       u223_20 07AA                                         u143_21 009B  
                                       u135_21 0652                                         u223_21 07A9  
                                       u127_25 0EFE                                         u151_25 0189  
                                       u128_20 0F09                                         u160_20 0243  
                                       u152_20 01DB                                         u144_20 00A1  
                                       u224_20 07C2                                         u240_20 0035  
                                       u128_21 0F08                                         u160_21 0242  
                                       u144_21 00A0                                         u224_21 07C1  
                                       u240_21 0034                                         u152_25 01D7  
                                       u136_25 0655                                         u161_20 024A  
                                       u153_20 01F2                                         u145_20 00BE  
                                       u137_20 0663                                         u129_20 0F3A  
                                       u217_20 0D55                                         u241_20 003A  
                                       u233_20 000A                                         u161_21 0249  
                                       u145_21 00BD                                         u137_21 0662  
                                       u129_21 0F39                                         u217_21 0D54  
                                       u241_21 0039                                         u233_21 0009  
                                       u153_25 01EE                                         u170_20 0E18  
                                       u218_20 0D67                                         u162_20 0250  
                                       u146_20 00C4                                         u138_20 066A  
                                       u242_20 0046                                         u234_20 000E  
                                       u170_21 0E17                                         u218_21 0D66  
                                       u162_21 024F                                         u146_21 00C3  
                                       u138_21 0669                                         u242_21 0045  
                                       u234_21 000D                                         u154_25 01FD  
                                       u250_27 0E21                                         u163_20 025C  
                                       u147_20 00C9                                         u219_20 0D46  
                                       u243_20 004B                                         u235_20 0016  
                                       _FVRCON 0117                                         u163_21 025B  
                                       u147_21 00C8                                         u219_21 0D45  
                                       u243_21 004A                                         u235_21 0015  
                                       u155_25 0210                                         u139_25 066C  
                                       u164_20 026A                                         u156_20 021A  
                                       u148_20 00E0                                         u228_20 0E99  
                                       u244_20 0054                                         u236_20 001A  
                                       u156_21 0219                                         u148_21 00DF  
                                       u228_21 0E98                                         u244_21 0053  
                                       u236_21 0019                                         u164_25 0266  
                                       u173_20 0415                                         u165_20 0285  
                                       u149_20 00E5                                         u245_20 0059  
                                       u237_20 0022                                         u173_21 0414  
                                       u165_21 0284                                         u149_21 00E4  
                                       u245_21 0058                                         u237_21 0021  
                                       u165_25 0281                                         u157_25 021C  
                                       u174_20 043B                                         u166_20 029D  
                                       u158_20 022A                                         u190_20 02F2  
                                       u238_20 0027                                         u174_21 043A  
                                       u166_21 029C                                         u158_21 0229  
                                       u190_21 02F1                                         u238_21 0026  
                                       u166_25 0299                                         u175_20 0467  
                                       u167_20 02B7                                         u159_20 022F  
                                       u239_20 002C                                         u175_21 0466  
                                       u167_21 02B6                                         u159_21 022E  
                                       u239_21 002B                                         u191_25 0303  
                                       u176_20 048F                                         u192_20 030F  
                                       u176_21 048E                                         u192_21 030E  
                                       u168_25 0DCC                                         u193_25 031D  
                                       u194_20 0329                                         u194_21 0328  
                                       u195_25 032D                                         u196_20 0337  
                                       u188_20 02CE                                         u196_21 0336  
                                       u188_21 02CD                                         u197_20 033D  
                                       u189_20 02D2                                         u197_21 033C  
                                       u189_21 02D1                                         u198_20 0341  
                                       u198_21 0340                                         u199_20 0355  
                                       u199_25 0351                                         _OSCCON 0099  
                                       _SPBRGH 019C                                         _SPBRGL 019B  
                                       _WDTCON 0097                               __end_of___xxtofl 0372  
                              _TMR4_StartTimer 0C87                          definePassoMotor@passo 00C7  
                        __end_of_TMR1_GATE_ISR 0D4C                 ??_TMR1_SetGateInterruptHandler 00C8  
                                 _CCPTMRS0bits 029E                                   ?_TMR0_Reload 0070  
                                       ___wmul 0EA9                                      ??___flmul 0036  
                                    ??___fltol 004C                               __end_of_envia_Tx 0619  
                                       _end_Rx 0DA7                                      ??___lwdiv 00D0  
                                       _height 005E                                         _dinput 00AE  
                          _EUSART_Transmit_ISR 0EC9                               ?_TMR0_Initialize 0070  
                      __end_of_TMR4_Initialize 0D1A                                         _output 00AA  
                                    ??_fluxpos 00C6                                      ??_receive 0072  
                              ?_WDT_Initialize 0070                       ADC_GetConversion@channel 00C9  
 TMR1_SetGateInterruptHandler@InterruptHandler 00C6       TMR0_SetInterruptHandler@InterruptHandler 00C6  
     TMR2_SetInterruptHandler@InterruptHandler 00C6                               ?_PIN_MANAGER_IOC 0070  
                         ?_EUSART_Transmit_ISR 0070                               ?_TMR1_Initialize 0070  
                                 ___xxtofl@arg 002A                                   ___xxtofl@exp 0029  
                            _SYSTEM_Initialize 07CD                                   ___xxtofl@val 0020  
                      __end_of__initialization 0088                                _CMP1_Initialize 0CA3  
                           ?_SYSTEM_Initialize 0070                                _TMR6_StartTimer 0C81  
                                   ___fltol@f1 0048           __end_of_EUSART_SetTxInterruptHandler 0CC1  
                 _EUSART_SetTxInterruptHandler 0CBB                              ?_EPWM1_Initialize 0070  
                               __pcstackCOMMON 0070                                   __pidataBANK1 0D24  
                          ??_SYSTEM_Initialize 00C8                                      ?_TMR0_ISR 0070  
                                    ?_TMR2_ISR 0070                             ??_EPWM1_Initialize 00C6  
                             ?_TMR2_Initialize 0070                        __end_of_TMR6_Initialize 0D24  
              __end_of_TMR4_LoadPeriodRegister 0CEB                                 _OPTION_REGbits 0095  
                         _eusartRxStatusBuffer 0120                                ??_controlchoose 00D8  
              ??_EUSART_SetOverrunErrorHandler 00C8                           _CMP1_GetOutputStatus 0C9A  
                      __end_of_TMR4_StartTimer 0C8A                      __end_of_SYSTEM_Initialize 07F8  
                        ??_EUSART_Transmit_ISR 0070                                     __pbssBANK0 0054  
                                   __pbssBANK1 00A0                                     __pbssBANK2 0120  
                         __end_of_EUSART_Write 0F5A                                     _analisa_Rx 040C  
                            __end_of__Umul8_16 0F0E                               ??_FVR_Initialize 00C6  
                                   __pmaintext 068A                  ?_EUSART_SetTxInterruptHandler 00C6  
             _EUSART_TxDefaultInterruptHandler 00DF               __end_of_TMR0_SetInterruptHandler 0CC7  
                                      ?___wmul 00C6                                     ??_TMR0_ISR 0077  
                                   ??_TMR2_ISR 007E                                        ?_end_Rx 0070  
                                   __pintentry 0004                                        _DACCON0 0118  
                                      _DACCON1 0119                                        _CM1CON0 0111  
                                      _CM1CON1 0112                                        _CCP1CON 0293  
                                      _ECCP1AS 0295                                        _BAUDCON 019F  
                             ?_TMR4_Initialize 0070                              __end_of_daUmPasso 078D  
                                      _APFCON0 011D                                        _APFCON1 011E  
                 ??_EUSART_DefaultErrorHandler 0071                 i1EPWM1_LoadDutyValue@dutyValue 0070  
                                _eusartRxCount 00C0                               _definePassoMotor 06EE  
                                    ?___xxtofl 0020                          ?_CMP1_GetOutputStatus 0070  
                                      _OSCTUNE 0098                                        _PWM1CON 0294  
                      __end_of_CMP1_Initialize 0CA9                       ??_EUSART_SetErrorHandler 00C8  
                      __end_of_TMR6_StartTimer 0C84                                      ?_envia_Tx 0070  
                              _pwmcontrol$2027 00D6                                     _float_temp 00A0  
                  __end_of_EPWM1_LoadDutyValue 0E8B                                     _count_40ms 006C  
                         _ADC_InterruptHandler 00B8                     ??_TMR2_SetInterruptHandler 00C8  
                                      _Rx_ctrl 006F                                        ___flmul 008C  
                                      ___fltol 0619                                        ___lwdiv 0F84  
                                      _ballset 00B0                               ?_TMR6_Initialize 0070  
                     TMR1_ReadTimer@readValLow 007A                                        __ptext1 0749  
                                      __ptext2 06EE                                        __ptext3 0C9A  
                                      __ptext4 0D92                                        __ptext5 04A0  
                                      __ptext6 0E6F                                        __ptext7 0372  
                                      __ptext8 0F5A                                        __ptext9 0EA9  
                    TMR1_ReadTimer@readValHigh 0079                                      _T1CONbits 0018  
                                      _countRx 006D                          _OSCILLATOR_Initialize 0CF7  
                                    _T2CONbits 001C                                        _fluxpos 0F5A  
                                   ??___xxtofl 0024                                      _CMOUTbits 0115  
                                      _receive 0E8B                                      _T4CONbits 0417  
                     ??_PIN_MANAGER_Initialize 00C6                          i1_EPWM1_LoadDutyValue 0DBD  
                                      _sentido 00BC                                      _T6CONbits 041E  
                                      clrloop0 0CEC                               ?_TMR4_StartTimer 0070  
                         end_of_initialization 0088                                     ??_envia_Tx 007D  
        __end_of_EUSART_SetOverrunErrorHandler 0D10                  _EUSART_SetOverrunErrorHandler 0D07  
                                      init_ram 0CF1                                        initloop 0CF2  
                                  ?_analisa_Rx 0070                              _EUSART_Initialize 0FC1  
                           ?_EUSART_Initialize 0070                          TMR6_ReadTimer@readVal 00C6  
                                    _RCSTAbits 019D                            ??_EUSART_Initialize 00C8  
                             _fluxcontrol$2026 00D6                               ??_WDT_Initialize 00C6  
               ??_EUSART_SetTxInterruptHandler 00C8                       _TMR0_SetInterruptHandler 0CC1  
                       ??_CMP1_GetOutputStatus 00C6                                 _TMR1_ReadTimer 0DEB  
                     ?_TMR6_LoadPeriodRegister 0070                                  ___xxtofl@sign 0028  
                             ?_CMP1_Initialize 0070                               ?_TMR6_StartTimer 0070  
                                   _trigger_Rx 0E1E                                     _pwmcontrol 04A0  
                                  ___flmul@grs 003C                      __end_of_EUSART_Initialize 1000  
                                    _TXSTAbits 019E           __end_of_TMR2_DefaultInterruptHandler 0004  
                 _TMR2_DefaultInterruptHandler 0003             __end_of_EUSART_DefaultErrorHandler 0C8E  
                   _EUSART_DefaultErrorHandler 0C8A                                 _TMR4_ReadTimer 0CD3  
                               __end_of___wmul 0EC9                                 __end_of_end_Rx 0DBD  
                                 _EUSART_Write 0F33                                 _ADC_Initialize 07F8  
                       ?_OSCILLATOR_Initialize 0070                         __end_of_TMR1_ReadTimer 0E04  
                       ?i1_EPWM1_LoadDutyValue 0070                                  ??_mede_height 0050  
                          start_initialization 0064                                  ??_EUSART_Read 0070  
 EUSART_SetRxInterruptHandler@interruptHandler 00C6   EUSART_SetTxInterruptHandler@interruptHandler 00C6  
                 EPWM1_LoadDutyValue@dutyValue 00C6                                 _TMR6_ReadTimer 0CDF  
                     __end_of_definePassoMotor 0749                 ?_EUSART_SetOverrunErrorHandler 00C6  
                               _TMR4_StopTimer 0C7E                     _EUSART_FramingErrorHandler 00DD  
                       __end_of_TMR4_ReadTimer 0CD9                                       ??___wmul 00CA  
                       _EUSART_SetErrorHandler 0CFE                                       ??_end_Rx 0076  
                       __end_of_ADC_Initialize 0800                                      __Umul8_16 0EEB  
                                  __pdataBANK1 00E5                __end_of_TMR6_LoadPeriodRegister 0CDF  
                ?_TMR2_DefaultInterruptHandler 0070                                ?_TMR1_ReadTimer 0070  
                                ??_fluxcontrol 00D4                    __end_of_EUSART_Transmit_ISR 0EEB  
                                    ___flmul@a 0032                                      _daUmPasso 0749  
                                    ___flmul@b 002E                                      ___latbits 0001  
                                __pcstackBANK0 0020                                  __pcstackBANK1 00C6  
                               _TMR6_StopTimer 0C84                         __end_of_TMR6_ReadTimer 0CE5  
                        __end_of_controlchoose 0DA7                                    ?_trigger_Rx 0070  
                          __end_of_mede_height 05A6                                    ?_pwmcontrol 0070  
                   __end_of_EUSART_Receive_ISR 07CD                        _TMR4_LoadPeriodRegister 0CE5  
             _EUSART_RxDefaultInterruptHandler 00E1                            __end_of_EUSART_Read 0F33  
                        _TMR0_InterruptHandler 00DB                                      __pnvBANK1 00D9  
                                    __pnvBANK2 0138                         __end_of_TMR4_StopTimer 0C81  
                 __end_of_EUSART_RxDataHandler 0E1E                               ___lwdiv@dividend 00CE  
                       _PIN_MANAGER_Initialize 0DD4                           EUSART_Read@readValue 0071  
                                _TMR1_GATE_ISR 0D3D                                ?_TMR4_ReadTimer 0070  
                                     ?___flmul 002E                                       ?___fltol 0048  
                                   ?__Umul8_16 0070                                       ?___lwdiv 00CC  
                              ?_ADC_Initialize 0070                                   _eusartRxHead 00C2  
                                 _eusartTxHead 00C5                                   _eusartRxTail 00C1  
                                    _fim_curso 00BA                                   _eusartTxTail 00C4  
                 ??_INTERRUPT_InterruptManager 007E                        _eusartTxBufferRemaining 00C3  
                                     ?_fluxpos 0070                         __end_of_TMR6_StopTimer 0C87  
                                     ?_receive 0070                                     ?_daUmPasso 0070  
                             ___lwdiv@quotient 00D1                                      _func_mode 006E  
                              ?_TMR6_ReadTimer 0070                            __end_of_fluxcontrol 040C  
                               _eusartRxBuffer 0128                              ??_TMR0_Initialize 00C8  
                               _eusartTxBuffer 0130                                 ___wmul@product 00CA  
                                     _LATAbits 010C         EUSART_SetErrorHandler@interruptHandler 00C6  
                                 ??_analisa_Rx 0074                                      clear_ram0 0CEB  
                                     _PIE1bits 0091                              _eusartRxLastError 00BF  
                              ?_TMR4_StopTimer 0070                     ??_TMR0_SetInterruptHandler 00C8  
                               ?_TMR1_GATE_ISR 0070                                       _PIR1bits 0011  
              ??_EUSART_SetFramingErrorHandler 00C8                                       _PIR3bits 0013  
                                ??_TMR0_Reload 0070                                      _sp_height 0062  
                                    _tempo_voo 00A4                                       _TMR0_ISR 0D5B  
    __end_of_EUSART_DefaultOverrunErrorHandler 0C92            ??_EUSART_DefaultOverrunErrorHandler 0070  
           ?_EUSART_DefaultOverrunErrorHandler 0070              _EUSART_DefaultOverrunErrorHandler 0C8E  
                                     _TMR2_ISR 0D4C                                       _PSTR1CON 0296  
                            ??_PIN_MANAGER_IOC 0070                      _TMR1_GateInterruptHandler 00D9  
                            ??_TMR1_Initialize 00C8                                     _ADCON0bits 009D  
                            ___wmul@multiplier 00C6                                 _DAC_Initialize 0CA9  
                              ?_TMR6_StopTimer 0070                                    _mede_height 0532  
               ??_TMR2_DefaultInterruptHandler 0070                               _EPWM1_Initialize 0D2F  
                      definePassoMotor@sentido 00C6                                      _outputsum 00AC  
                    ?_TMR2_SetInterruptHandler 00C6                             __end_of_analisa_Rx 04A0  
                                  _EUSART_Read 0F0E                      ??_TMR4_LoadPeriodRegister 00C6  
                            ??_TMR2_Initialize 00C8                              _ADC_GetConversion 0E38  
                        TMR1_ReadTimer@readVal 0077                          TMR4_ReadTimer@readVal 00C6  
                      ??_OSCILLATOR_Initialize 00C6                                    ??__Umul8_16 0072  
                          _EUSART_ErrorHandler 013A                             ?_ADC_GetConversion 00C6  
                       __end_of_DAC_Initialize 0CAF                    ?_EUSART_DefaultErrorHandler 0070  
                      ??i1_EPWM1_LoadDutyValue 0072                            __end_of_TMR0_Reload 0CA3  
                                     _adc_temp 0138                                       _balldist 00B2  
                          ??_ADC_GetConversion 00C8                                       ___xxtofl 02C7  
                                  ??_daUmPasso 00C8                                    _fluxcontrol 0372  
                              ___lwdiv@divisor 00CC                           _EUSART_RxDataHandler 0E04  
                              ___lwdiv@counter 00D3                                       __ptext10 0F84  
                                     __ptext11 0C87                                       __ptext20 0C96  
                                     __ptext12 0CE5                                       __ptext21 0D1A  
                                     __ptext13 0C84                                     _T1GCONbits 0019  
                                     __ptext30 0CF7                                       __ptext22 0D10  
                                     __ptext14 0C81                                       __ptext31 0C92  
                                     __ptext23 0D6D                                       __ptext15 0CDF  
                                     __ptext40 0CA3                                       __ptext32 0FC1  
                                     __ptext24 0CCD                                       __ptext16 0CD9  
                                     __ptext41 07F8                                       __ptext33 0CBB  
                                     __ptext25 0E53                                       __ptext17 0C7E  
                                     __ptext50 0E1E                                       __ptext42 0E38  
                                     __ptext34 0CB5                                       __ptext26 0CC7  
                                     __ptext18 0CD3                                       __ptext51 05A6  
                                     __ptext35 0D07                                       __ptext27 0D7F  
                                     __ptext19 07CD                                       __ptext60 0DEB  
                                     __ptext52 0F33                                       __ptext44 078D  
                                     __ptext36 0CAF                                       __ptext28 0CC1  
                                     __ptext61 0D5B                                       __ptext53 0D3D  
                                     __ptext45 0E8B                                       __ptext37 0CFE  
                                     __ptext29 0DD4                                       __ptext70 0C8A  
                                     __ptext62 0C7D                                       __ptext54 0002  
                                     __ptext46 0C9E                                       __ptext38 0D2F  
                                     __ptext71 0E04                                       __ptext63 0DA7  
                                     __ptext55 0532                                       __ptext47 0F0E  
                                     __ptext39 0CA9                                       __ptext64 040C  
                                     __ptext56 02C7                                       __ptext48 0D4C  
                                     __ptext65 0DBD                                       __ptext57 0619  
                                     __ptext49 0003                                       __ptext66 0C7C  
                                     __ptext58 008C                                       __ptext67 0EC9  
                                     __ptext59 0EEB                                       __ptext68 0C8E  
                                     __ptext69 0C7B                                       _bufferRx 0054  
                                     _envia_Tx 05A6                                       _count_Tx 006B  
             TMR6_LoadPeriodRegister@periodVal 00C6                              ??_TMR4_Initialize 00C6  
                              ??_TMR1_GATE_ISR 007D           __end_of_TMR0_DefaultInterruptHandler 0C7E  
                 _TMR0_DefaultInterruptHandler 0C7D                      __end_of_ADC_GetConversion 0E53  
                      ?_EUSART_SetErrorHandler 00C6                              ?_definePassoMotor 00C6  
EUSART_SetOverrunErrorHandler@interruptHandler 00C6                             ??_definePassoMotor 00C7  
                             ??_TMR1_ReadTimer 0072                                       int$flags 007E  
                                     _position 005C             __end_of_INTERRUPT_InterruptManager 0062  
                   _INTERRUPT_InterruptManager 0004          __end_of_EUSART_SetFramingErrorHandler 0CB5  
                _EUSART_SetFramingErrorHandler 0CAF                                ?_DAC_Initialize 0070  
                                   _INTCONbits 000B                          ?_EUSART_RxDataHandler 0070  
                                   _FVRCONbits 0117                                   ??_trigger_Rx 007D  
                                 ??_pwmcontrol 00D4                                       intlevel1 0000  
                      ?_PIN_MANAGER_Initialize 0070                              ??_TMR6_Initialize 00C6  
               __end_of_EUSART_SetErrorHandler 0D07                               ??_TMR4_ReadTimer 00C6  
                             ??_ADC_Initialize 00C6           __end_of_EUSART_SetRxInterruptHandler 0CBB  
                 _EUSART_SetRxInterruptHandler 0CB5                  ?_TMR0_DefaultInterruptHandler 0070  
                                  _TMR0_Reload 0C9E                             _EUSART_Receive_ISR 078D  
EUSART_SetFramingErrorHandler@interruptHandler 00C6                              ??_TMR4_StartTimer 00C6  
                           __end_of_trigger_Rx 0E38                             __end_of_pwmcontrol 0532  
                               _FVR_Initialize 0C92                         __Umul8_16@multiplicand 0070  
                                   _OPTION_REG 0095                            ?_EUSART_Receive_ISR 0070  
                             ??_TMR6_ReadTimer 00C6                                _TMR0_Initialize 0D7F  
                                  _timecontrol 00BD                            _EPWM1_LoadDutyValue 0E6F  
                           EUSART_Write@txData 0071           __end_of_TMR1_SetGateInterruptHandler 0CCD  
                 _TMR1_SetGateInterruptHandler 0CC7                 __end_of_PIN_MANAGER_Initialize 0DEB  
                             ??_TMR4_StopTimer 00C6                        _TMR6_LoadPeriodRegister 0CD9  
                                  _sp_position 00A8                                _PIN_MANAGER_IOC 0C7C  
                         ??_EUSART_Receive_ISR 0071                           __Umul8_16@multiplier 0078  
                        _TMR2_InterruptHandler 00E3                                _TMR1_Initialize 0E53  
                     __end_of_EPWM1_Initialize 0D3D                           ?_EPWM1_LoadDutyValue 00C6  
                            __Umul8_16@product 0074               TMR4_LoadPeriodRegister@periodVal 00C6  
